; ModuleID = 'build/96b_stm32_sensor_mez/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235461 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235441 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235431 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235531 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235521 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235511 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235501 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235491 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235481 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235471 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237224 to i8*), void (i8*)* inttoptr (i32 134235451 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [51 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !456
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !485
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !505
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.109 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.105 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.106 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.107 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.108 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.99 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.98 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !517
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !664
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !523
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !673
@.str.121 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !709
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), %struct.ctr_params { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i32 0, i32 0), %struct.ctr_params { i32 285933600 } }], align 4, !dbg !719
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !724
@.str.137 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !744
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !905
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !890
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !863
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !879
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !907
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !921
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !923
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !925
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !927
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !929
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !931
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !933
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !935
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !937
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !939
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !949
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !984
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1082
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1071
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1123
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1189
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !979
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1227
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1225
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1198
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1214
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1355
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !969
@.str.169 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1371
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1649
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1619
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1605
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1550
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !967
@.str.1.170 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1651
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1623
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1621
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1564
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !965
@.str.2.171 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1664
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1625
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1570
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !963
@.str.3.172 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1666
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1631
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1629
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1579
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !961
@.str.4.173 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1668
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1635
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1633
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1585
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !959
@.str.5.174 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1670
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1639
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1637
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1591
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !957
@.str.6.175 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1672
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1643
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1641
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1597
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !955
@.str.7.176 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1674
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1647
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1645
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1603
@.str.180 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.180, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1676
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !977
@.str.1.181 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1856
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1911
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1848
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1913
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.181, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1821
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1823
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !975
@.str.2.184 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1919
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1850
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1929
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.184, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1832
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1834
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !973
@.str.3.185 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1931
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1852
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1941
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.185, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1838
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1840
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !971
@.str.4.188 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1943
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1854
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1953
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.188, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1844
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1846
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1900
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1903
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1905
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1908
@.str.5.183 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.191 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.7.193 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.8.194 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1055
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1921
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1923
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1925
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1927
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1933
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1935
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1937
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1939
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1945
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1947
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1949
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1951
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.9 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1960
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2069
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2071
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2067
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2038
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2073
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1548
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1562
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1568
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.172, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1577
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.173, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1583
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1589
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1595
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1601
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2163
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2207
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2210
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2214
@.str.231 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.235 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.236 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.237 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.241 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.242 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.243 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.244 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.245 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.240 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.239 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.241, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.242, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.243, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.244, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.245, i32 0, i32 0)], align 4
@.str.247 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.247, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2221
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2444
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2430
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2439
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2451
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2456
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.256 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.264, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.265, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.266, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.260, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.267, i32 0, i32 0)], align 4, !dbg !2486
@.str.261 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.262 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.263 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.264 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.265 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.266 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.260 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.267 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2598
@.str.8.259 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2611
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2719
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2722
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2724
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2449
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2441
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2726
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2762
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2308
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2760
@.str.320 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3361 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3389, !srcloc !3390
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3419, !srcloc !3422
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3469, !srcloc !3470
  ret void, !dbg !3471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3476, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i32 0, metadata !3477, metadata !DIExpression()), !dbg !3478
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %2, metadata !3477, metadata !DIExpression()), !dbg !3478
  %3 = and i32 %2, 2, !dbg !3480
  %4 = icmp eq i32 %3, 0, !dbg !3482
  br i1 %4, label %5, label %8, !dbg !3483

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3484
  %7 = zext i8 %6 to i32, !dbg !3484
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3484
  br label %21, !dbg !3490

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3491
  %10 = icmp eq i32 %9, 0, !dbg !3493
  br i1 %10, label %11, label %14, !dbg !3494

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3495
  %13 = zext i8 %12 to i32, !dbg !3495
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3495
  br label %21, !dbg !3501

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3502
  %16 = icmp eq i32 %15, 0, !dbg !3504
  br i1 %16, label %17, label %20, !dbg !3505

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3506
  %19 = zext i8 %18 to i32, !dbg !3506
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3506
  br label %21, !dbg !3512

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3513
  br label %21, !dbg !3514

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3478
  ret i32 %22, !dbg !3515
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3518, metadata !DIExpression()), !dbg !3521
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3522
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3522
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3519, metadata !DIExpression()), !dbg !3521
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3523
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3523
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %7, metadata !3520, metadata !DIExpression()), !dbg !3521
  ret i32 %7, !dbg !3525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3532
  %2 = add i32 %0, -1, !dbg !3533
  %3 = icmp ult i32 %2, 3, !dbg !3533
  %4 = trunc i32 %2 to i24, !dbg !3533
  %5 = shl i24 %4, 3, !dbg !3533
  %6 = lshr i24 4806469, %5, !dbg !3533
  %7 = trunc i24 %6 to i8, !dbg !3533
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3533
  ret i8 %8, !dbg !3534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3535 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3537, metadata !DIExpression()), !dbg !3547
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3548
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3548
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3538, metadata !DIExpression()), !dbg !3549
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3549
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3550
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3550
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3539, metadata !DIExpression()), !dbg !3551
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3551
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3552
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3552
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3540, metadata !DIExpression()), !dbg !3553
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3553
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3554
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3554
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3541, metadata !DIExpression()), !dbg !3555
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3555
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3556
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3556
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3542, metadata !DIExpression()), !dbg !3557
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3557
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3558
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3558
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3543, metadata !DIExpression()), !dbg !3559
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3559
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3560
  store i8* %10, i8** %16, align 4, !dbg !3560
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3561
  store i16 16, i16* %17, align 4, !dbg !3561
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3561
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3562
  %20 = trunc i32 %19 to i16, !dbg !3562
  store i16 %20, i16* %18, align 2, !dbg !3561
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3563
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3563
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3544, metadata !DIExpression()), !dbg !3564
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3565
  store i8* %11, i8** %22, align 4, !dbg !3565
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3565
  store i32 16, i32* %23, align 4, !dbg !3565
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3565
  store i8* %13, i8** %24, align 4, !dbg !3565
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3565
  store i32 16, i32* %25, align 4, !dbg !3565
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3565
  store i32 0, i32* %26, align 4, !dbg !3565
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3565
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3565
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3566
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3566
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3545, metadata !DIExpression()), !dbg !3567
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3568
  store i8* %13, i8** %29, align 4, !dbg !3568
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3568
  store i32 16, i32* %30, align 4, !dbg !3568
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3568
  store i8* %14, i8** %31, align 4, !dbg !3568
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3568
  store i32 16, i32* %32, align 4, !dbg !3568
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3568
  store i32 0, i32* %33, align 4, !dbg !3568
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3568
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3568
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3569
  %36 = icmp eq i32 %35, 0, !dbg !3569
  br i1 %36, label %37, label %74, !dbg !3571

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3572
  %39 = icmp eq i32 %38, 0, !dbg !3572
  br i1 %39, label %43, label %40, !dbg !3574

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3575
  %42 = zext i8 %41 to i32, !dbg !3575
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3575
  br label %73, !dbg !3581

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3582
  %45 = zext i8 %44 to i32, !dbg !3582
  %46 = load i32, i32* %26, align 4, !dbg !3582
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3582
  %47 = load i8*, i8** %24, align 4, !dbg !3587
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3589
  %49 = icmp eq i32 %48, 0, !dbg !3589
  br i1 %49, label %54, label %50, !dbg !3590

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3591
  %52 = zext i8 %51 to i32, !dbg !3591
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3591
  %53 = load i8*, i8** %24, align 4, !dbg !3597
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3598
  br label %73, !dbg !3599

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3600
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3605
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3606
  %56 = icmp eq i32 %55, 0, !dbg !3606
  br i1 %56, label %57, label %74, !dbg !3608

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3609
  %59 = icmp eq i32 %58, 0, !dbg !3609
  br i1 %59, label %63, label %60, !dbg !3611

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3612
  %62 = zext i8 %61 to i32, !dbg !3612
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3612
  br label %73, !dbg !3618

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3619
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3619
  %65 = load i8*, i8** %31, align 4, !dbg !3624
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3626
  %67 = icmp eq i32 %66, 0, !dbg !3626
  br i1 %67, label %72, label %68, !dbg !3627

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3628
  %70 = zext i8 %69 to i32, !dbg !3628
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3628
  %71 = load i8*, i8** %31, align 4, !dbg !3634
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3635
  br label %73, !dbg !3636

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3637
  br label %73, !dbg !3642

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3546), !dbg !3643
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3644
  br label %74, !dbg !3645

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3645
  ret void, !dbg !3645
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3648, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3649, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 1, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %2, metadata !3651, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %3, metadata !3652, metadata !DIExpression()), !dbg !3655
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3656
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3656
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3656
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3653, metadata !DIExpression()), !dbg !3655
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3657
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3658
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3659
  store i32 %2, i32* %9, align 4, !dbg !3660
  call void @llvm.dbg.value(metadata i16 undef, metadata !3654, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3655
  call void @llvm.dbg.value(metadata i16 undef, metadata !3654, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3655
  call void @llvm.dbg.value(metadata i16 undef, metadata !3654, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3655
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3661
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3661
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3662
  ret i32 %12, !dbg !3663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3664 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3666, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3667, metadata !DIExpression()), !dbg !3668
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3669
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3670
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3671
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3671
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3672
  ret i32 %6, !dbg !3673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3674 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3678, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i8* %1, metadata !3679, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 %2, metadata !3680, metadata !DIExpression()), !dbg !3683
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3684
  call void @llvm.dbg.value(metadata i32 0, metadata !3681, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 1, metadata !3682, metadata !DIExpression()), !dbg !3683
  %4 = icmp eq i32 %2, 0, !dbg !3685
  br i1 %4, label %5, label %6, !dbg !3688

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3689
  call void @llvm.dbg.value(metadata i32 0, metadata !3681, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 1, metadata !3682, metadata !DIExpression()), !dbg !3683
  br label %33, !dbg !3690

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 %8, metadata !3681, metadata !DIExpression()), !dbg !3683
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3692
  %10 = load i8, i8* %9, align 1, !dbg !3692
  %11 = zext i8 %10 to i32, !dbg !3692
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3694
  %12 = icmp eq i32 %7, 10, !dbg !3695
  br i1 %12, label %13, label %14, !dbg !3697

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3698
  call void @llvm.dbg.value(metadata i32 0, metadata !3682, metadata !DIExpression()), !dbg !3683
  br label %14, !dbg !3700

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3701
  call void @llvm.dbg.value(metadata i32 %15, metadata !3682, metadata !DIExpression()), !dbg !3683
  %16 = add nuw i32 %8, 1, !dbg !3702
  call void @llvm.dbg.value(metadata i32 %16, metadata !3681, metadata !DIExpression()), !dbg !3683
  %17 = add nsw i32 %15, 1, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %17, metadata !3682, metadata !DIExpression()), !dbg !3683
  %18 = icmp eq i32 %16, %2, !dbg !3685
  br i1 %18, label %19, label %6, !dbg !3688, !llvm.loop !3704

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3689
  call void @llvm.dbg.value(metadata i32 0, metadata !3681, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 1, metadata !3682, metadata !DIExpression()), !dbg !3683
  br i1 %4, label %33, label %20, !dbg !3690

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.value(metadata i32 %22, metadata !3681, metadata !DIExpression()), !dbg !3683
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3706
  %24 = load i8, i8* %23, align 1, !dbg !3706
  %25 = zext i8 %24 to i32, !dbg !3706
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3709
  %26 = icmp eq i32 %21, 10, !dbg !3710
  br i1 %26, label %27, label %28, !dbg !3712

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3713
  call void @llvm.dbg.value(metadata i32 0, metadata !3682, metadata !DIExpression()), !dbg !3683
  br label %28, !dbg !3715

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3716
  call void @llvm.dbg.value(metadata i32 %29, metadata !3682, metadata !DIExpression()), !dbg !3683
  %30 = add nuw i32 %22, 1, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %30, metadata !3681, metadata !DIExpression()), !dbg !3683
  %31 = add nsw i32 %29, 1, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %31, metadata !3682, metadata !DIExpression()), !dbg !3683
  %32 = icmp eq i32 %30, %2, !dbg !3719
  br i1 %32, label %33, label %20, !dbg !3690, !llvm.loop !3720

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3722
  ret void, !dbg !3723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3724 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3726, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3727, metadata !DIExpression()), !dbg !3729
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3730
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3730
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3730
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3728, metadata !DIExpression()), !dbg !3729
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3731
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3731
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3732
  ret void, !dbg !3733
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3734
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3735
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3735
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3736
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3736
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3737
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3737
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3738
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3738
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3739
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3739
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3740
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3740
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3741
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3741
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3742
  store i16 16, i16* %11, align 4, !dbg !3742
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3742
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3743
  %14 = trunc i32 %13 to i16, !dbg !3743
  store i16 %14, i16* %12, align 2, !dbg !3742
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3744
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3744
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3745
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3746
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3746
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3746
  store i32 64, i32* %17, align 4, !dbg !3746
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3746
  store i8* %7, i8** %18, align 4, !dbg !3746
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3746
  store i32 80, i32* %19, align 4, !dbg !3746
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3746
  store i32 0, i32* %20, align 4, !dbg !3746
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3746
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3746
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3747
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3747
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3748
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3749
  store i8* %7, i8** %23, align 4, !dbg !3749
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3749
  store i32 80, i32* %24, align 4, !dbg !3749
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3749
  store i8* %8, i8** %25, align 4, !dbg !3749
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3749
  store i32 64, i32* %26, align 4, !dbg !3749
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3749
  store i32 0, i32* %27, align 4, !dbg !3749
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3749
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3749
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3750
  %30 = icmp eq i32 %29, 0, !dbg !3750
  br i1 %30, label %31, label %68, !dbg !3752

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3753
  %33 = icmp eq i32 %32, 0, !dbg !3753
  br i1 %33, label %37, label %34, !dbg !3755

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3756
  %36 = zext i8 %35 to i32, !dbg !3756
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3756
  br label %67, !dbg !3762

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3763
  %39 = zext i8 %38 to i32, !dbg !3763
  %40 = load i32, i32* %20, align 4, !dbg !3763
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3763
  %41 = load i8*, i8** %18, align 4, !dbg !3768
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3770
  %43 = icmp eq i32 %42, 0, !dbg !3770
  br i1 %43, label %48, label %44, !dbg !3771

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3772
  %46 = zext i8 %45 to i32, !dbg !3772
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3772
  %47 = load i8*, i8** %18, align 4, !dbg !3778
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3779
  br label %67, !dbg !3780

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3781
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3786
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3787
  %50 = icmp eq i32 %49, 0, !dbg !3787
  br i1 %50, label %51, label %68, !dbg !3789

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3790
  %53 = icmp eq i32 %52, 0, !dbg !3790
  br i1 %53, label %57, label %54, !dbg !3792

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3793
  %56 = zext i8 %55 to i32, !dbg !3793
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3793
  br label %67, !dbg !3799

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3800
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3800
  %59 = load i8*, i8** %25, align 4, !dbg !3805
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3807
  %61 = icmp eq i32 %60, 0, !dbg !3807
  br i1 %61, label %66, label %62, !dbg !3808

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3809
  %64 = zext i8 %63 to i32, !dbg !3809
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3809
  %65 = load i8*, i8** %25, align 4, !dbg !3815
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3816
  br label %67, !dbg !3817

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3818
  br label %67, !dbg !3823

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3824
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3825
  br label %68, !dbg !3826

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3826
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3826
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3826
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3826
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3826
  ret void, !dbg !3826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3827 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3829, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3830, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i8* %2, metadata !3831, metadata !DIExpression()), !dbg !3832
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3833
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3834
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3835
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3835
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3835
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3836
  ret i32 %8, !dbg !3837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3838 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3840, metadata !DIExpression()), !dbg !3848
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3849
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3849
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3841, metadata !DIExpression()), !dbg !3850
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3850
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3851
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3851
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3842, metadata !DIExpression()), !dbg !3852
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3852
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3853
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3853
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3843, metadata !DIExpression()), !dbg !3854
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3855
  store i64 0, i64* %11, align 8, !dbg !3855
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3856
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3856
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3855
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3855
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3855
  store i8* null, i8** %14, align 8, !dbg !3855
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3855
  store i8* null, i8** %15, align 4, !dbg !3855
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3857
  store i32 32, i32* %16, align 8, !dbg !3857
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3855
  store i16 16, i16* %17, align 4, !dbg !3855
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3855
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3858
  %20 = trunc i32 %19 to i16, !dbg !3858
  store i16 %20, i16* %18, align 2, !dbg !3855
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3859
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3859
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3844, metadata !DIExpression()), !dbg !3860
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3861
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3861
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3861
  store i32 64, i32* %23, align 4, !dbg !3861
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3861
  store i8* %8, i8** %24, align 4, !dbg !3861
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3861
  store i32 64, i32* %25, align 4, !dbg !3861
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3861
  store i32 0, i32* %26, align 4, !dbg !3861
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3861
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3861
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3862
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3862
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3845, metadata !DIExpression()), !dbg !3863
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3864
  store i8* %8, i8** %29, align 4, !dbg !3864
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3864
  store i32 64, i32* %30, align 4, !dbg !3864
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3864
  store i8* %9, i8** %31, align 4, !dbg !3864
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3864
  store i32 64, i32* %32, align 4, !dbg !3864
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3864
  store i32 0, i32* %33, align 4, !dbg !3864
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3864
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3864
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3865
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3865
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3846, metadata !DIExpression()), !dbg !3866
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3866
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3867
  %37 = icmp eq i32 %36, 0, !dbg !3867
  br i1 %37, label %38, label %75, !dbg !3869

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3870
  %40 = icmp eq i32 %39, 0, !dbg !3870
  br i1 %40, label %44, label %41, !dbg !3872

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3873
  %43 = zext i8 %42 to i32, !dbg !3873
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3873
  br label %74, !dbg !3879

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3880
  %46 = zext i8 %45 to i32, !dbg !3880
  %47 = load i32, i32* %26, align 4, !dbg !3880
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3880
  %48 = load i8*, i8** %24, align 4, !dbg !3885
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3887
  %50 = icmp eq i32 %49, 0, !dbg !3887
  br i1 %50, label %55, label %51, !dbg !3888

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3889
  %53 = zext i8 %52 to i32, !dbg !3889
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3889
  %54 = load i8*, i8** %24, align 4, !dbg !3895
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3896
  br label %74, !dbg !3897

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3898
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3903
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3904
  %57 = icmp eq i32 %56, 0, !dbg !3904
  br i1 %57, label %58, label %75, !dbg !3906

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3907
  %60 = icmp eq i32 %59, 0, !dbg !3907
  br i1 %60, label %64, label %61, !dbg !3909

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3910
  %63 = zext i8 %62 to i32, !dbg !3910
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3910
  br label %74, !dbg !3916

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3917
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3917
  %66 = load i8*, i8** %31, align 4, !dbg !3922
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3924
  %68 = icmp eq i32 %67, 0, !dbg !3924
  br i1 %68, label %73, label %69, !dbg !3925

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3926
  %71 = zext i8 %70 to i32, !dbg !3926
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !3926
  %72 = load i8*, i8** %31, align 4, !dbg !3932
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !3933
  br label %74, !dbg !3934

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !3935
  br label %74, !dbg !3940

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3847), !dbg !3941
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3942
  br label %75, !dbg !3943

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3943
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3943
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3943
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3943
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3943
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3943
  ret void, !dbg !3943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3946, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3947, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i8* %2, metadata !3948, metadata !DIExpression()), !dbg !3949
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3950
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3951
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3952
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3952
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3952
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3953
  ret i32 %8, !dbg !3954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3955 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3957, metadata !DIExpression()), !dbg !3969
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3970
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3970
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3958, metadata !DIExpression()), !dbg !3971
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3972
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3972
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3960, metadata !DIExpression()), !dbg !3973
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3974
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3974
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3964, metadata !DIExpression()), !dbg !3975
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3976
  store i64 0, i64* %11, align 8, !dbg !3976
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3977
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3977
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3976
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3976
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3976
  store i8* null, i8** %14, align 8, !dbg !3976
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3976
  store i8* null, i8** %15, align 4, !dbg !3976
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3976
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3978
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3979
  store i16 8, i16* %18, align 8, !dbg !3979
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3979
  store i16 13, i16* %19, align 2, !dbg !3979
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3976
  store i16 16, i16* %20, align 4, !dbg !3976
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3976
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3980
  %23 = trunc i32 %22 to i16, !dbg !3980
  store i16 %23, i16* %21, align 2, !dbg !3976
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3981
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3981
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3965, metadata !DIExpression()), !dbg !3982
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3983
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3983
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3983
  store i32 23, i32* %26, align 4, !dbg !3983
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3983
  store i8* %8, i8** %27, align 4, !dbg !3983
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3983
  store i32 50, i32* %28, align 4, !dbg !3983
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3983
  store i32 0, i32* %29, align 4, !dbg !3983
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3983
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3983
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3984
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3984
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3966, metadata !DIExpression()), !dbg !3985
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3986
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3986
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3986
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3986
  store i32 8, i32* %34, align 4, !dbg !3986
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3986
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3987
  store i8* %36, i8** %35, align 4, !dbg !3986
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3988
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3988
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3967, metadata !DIExpression()), !dbg !3989
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3990
  store i8* %8, i8** %38, align 4, !dbg !3990
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3990
  store i32 23, i32* %39, align 4, !dbg !3990
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3990
  store i8* %9, i8** %40, align 4, !dbg !3990
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3990
  store i32 25, i32* %41, align 4, !dbg !3990
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3990
  store i32 0, i32* %42, align 4, !dbg !3990
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3990
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3990
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !3991
  %45 = icmp eq i32 %44, 0, !dbg !3991
  br i1 %45, label %46, label %83, !dbg !3993

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3994
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3995
  %48 = icmp eq i32 %47, 0, !dbg !3995
  br i1 %48, label %52, label %49, !dbg !3997

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3998
  %51 = zext i8 %50 to i32, !dbg !3998
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !3998
  br label %82, !dbg !4004

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4005
  %54 = zext i8 %53 to i32, !dbg !4005
  %55 = load i32, i32* %29, align 4, !dbg !4005
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4005
  %56 = load i8*, i8** %27, align 4, !dbg !4010
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !4012
  %58 = icmp eq i32 %57, 0, !dbg !4012
  br i1 %58, label %63, label %59, !dbg !4013

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4014
  %61 = zext i8 %60 to i32, !dbg !4014
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !4014
  %62 = load i8*, i8** %27, align 4, !dbg !4020
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !4021
  br label %82, !dbg !4022

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !4023
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4028
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !4029
  %65 = icmp eq i32 %64, 0, !dbg !4029
  br i1 %65, label %66, label %83, !dbg !4031

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4032
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4033
  %68 = icmp eq i32 %67, 0, !dbg !4033
  br i1 %68, label %72, label %69, !dbg !4035

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4036
  %71 = zext i8 %70 to i32, !dbg !4036
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !4036
  br label %82, !dbg !4042

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4043
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4043
  %74 = load i8*, i8** %40, align 4, !dbg !4048
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !4050
  %76 = icmp eq i32 %75, 0, !dbg !4050
  br i1 %76, label %81, label %77, !dbg !4051

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4052
  %79 = zext i8 %78 to i32, !dbg !4052
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !4052
  %80 = load i8*, i8** %40, align 4, !dbg !4058
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !4059
  br label %82, !dbg !4060

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !4061
  br label %82, !dbg !4066

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3968), !dbg !4067
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4068
  br label %83, !dbg !4069

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !4069
  ret void, !dbg !4069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4070 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4072, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4073, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !4074, metadata !DIExpression()), !dbg !4075
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4076
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4076
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4077
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4078
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4079
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4079
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4079
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !4080
  ret i32 %9, !dbg !4081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !4082 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4084, metadata !DIExpression()), !dbg !4096
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4097
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4097
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4085, metadata !DIExpression()), !dbg !4098
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4098
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4099
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4099
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4089, metadata !DIExpression()), !dbg !4100
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4100
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4101
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4101
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4091, metadata !DIExpression()), !dbg !4102
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4103
  store i64 0, i64* %11, align 8, !dbg !4103
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4104
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4104
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4103
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4103
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4103
  store i8* null, i8** %14, align 8, !dbg !4103
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4103
  store i8* null, i8** %15, align 4, !dbg !4103
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4103
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4105
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4106
  store i16 16, i16* %18, align 8, !dbg !4106
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4106
  store i16 12, i16* %19, align 2, !dbg !4106
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4103
  store i16 16, i16* %20, align 4, !dbg !4103
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4103
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4107
  %23 = trunc i32 %22 to i16, !dbg !4107
  store i16 %23, i16* %21, align 2, !dbg !4103
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4108
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4108
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4092, metadata !DIExpression()), !dbg !4109
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4110
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4110
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4110
  store i32 42, i32* %26, align 4, !dbg !4110
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4110
  store i8* %8, i8** %27, align 4, !dbg !4110
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4110
  store i32 60, i32* %28, align 4, !dbg !4110
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4110
  store i32 0, i32* %29, align 4, !dbg !4110
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4110
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4110
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4111
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4111
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4093, metadata !DIExpression()), !dbg !4112
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4113
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4113
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4113
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4113
  store i32 20, i32* %34, align 4, !dbg !4113
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4113
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4114
  store i8* %36, i8** %35, align 4, !dbg !4113
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4115
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4115
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4094, metadata !DIExpression()), !dbg !4116
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4117
  store i8* %8, i8** %38, align 4, !dbg !4117
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4117
  store i32 42, i32* %39, align 4, !dbg !4117
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4117
  store i8* %9, i8** %40, align 4, !dbg !4117
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4117
  store i32 44, i32* %41, align 4, !dbg !4117
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4117
  store i32 0, i32* %42, align 4, !dbg !4117
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4117
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4117
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4118
  %45 = icmp eq i32 %44, 0, !dbg !4118
  br i1 %45, label %46, label %83, !dbg !4120

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4121
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4122
  %48 = icmp eq i32 %47, 0, !dbg !4122
  br i1 %48, label %52, label %49, !dbg !4124

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4125
  %51 = zext i8 %50 to i32, !dbg !4125
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4125
  br label %82, !dbg !4131

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4132
  %54 = zext i8 %53 to i32, !dbg !4132
  %55 = load i32, i32* %29, align 4, !dbg !4132
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4132
  %56 = load i8*, i8** %27, align 4, !dbg !4137
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4139
  %58 = icmp eq i32 %57, 0, !dbg !4139
  br i1 %58, label %63, label %59, !dbg !4140

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4141
  %61 = zext i8 %60 to i32, !dbg !4141
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4141
  %62 = load i8*, i8** %27, align 4, !dbg !4147
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4148
  br label %82, !dbg !4149

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4150
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4155
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4156
  %65 = icmp eq i32 %64, 0, !dbg !4156
  br i1 %65, label %66, label %83, !dbg !4158

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4159
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4160
  %68 = icmp eq i32 %67, 0, !dbg !4160
  br i1 %68, label %72, label %69, !dbg !4162

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4163
  %71 = zext i8 %70 to i32, !dbg !4163
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4163
  br label %82, !dbg !4169

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4170
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4170
  %74 = load i8*, i8** %40, align 4, !dbg !4175
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4177
  %76 = icmp eq i32 %75, 0, !dbg !4177
  br i1 %76, label %81, label %77, !dbg !4178

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4179
  %79 = zext i8 %78 to i32, !dbg !4179
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4179
  %80 = load i8*, i8** %40, align 4, !dbg !4185
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4186
  br label %82, !dbg !4187

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4188
  br label %82, !dbg !4193

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4095), !dbg !4194
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4195
  br label %83, !dbg !4196

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4196
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4196
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4196
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4196
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4196
  ret void, !dbg !4196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4197 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4199, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4200, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4201, metadata !DIExpression()), !dbg !4202
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4203
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4203
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4204
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4205
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4206
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4206
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4206
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4207
  ret i32 %9, !dbg !4208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4209 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4221
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4211, metadata !DIExpression()), !dbg !4222
  %2 = icmp eq %struct.device* %1, null, !dbg !4223
  br i1 %2, label %3, label %6, !dbg !4225

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4226
  %5 = zext i8 %4 to i32, !dbg !4226
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4226
  br label %23, !dbg !4232

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4212, metadata !DIExpression()), !dbg !4233
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4234
  %8 = icmp eq i32 %7, 0, !dbg !4234
  br i1 %8, label %12, label %9, !dbg !4236

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4237
  %11 = zext i8 %10 to i32, !dbg !4237
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4237
  br label %23, !dbg !4243

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4244
  %14 = zext i8 %13 to i32, !dbg !4244
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4244
  call void @llvm.dbg.value(metadata i32 0, metadata !4220, metadata !DIExpression()), !dbg !4222
  br label %15, !dbg !4249

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4220, metadata !DIExpression()), !dbg !4222
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4251
  %18 = load i8*, i8** %17, align 4, !dbg !4253
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4253
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4259
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4259
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4260
  %21 = add nuw nsw i32 %16, 1, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %21, metadata !4220, metadata !DIExpression()), !dbg !4222
  %22 = icmp eq i32 %21, 5, !dbg !4249
  br i1 %22, label %23, label %15, !dbg !4249, !llvm.loop !4262

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4265 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4270, metadata !DIExpression()), !dbg !4271
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4272, !srcloc !4274
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4275
  ret %struct.device* %1, !dbg !4276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4277 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %0, metadata !4288, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %1, metadata !4289, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %2, metadata !4290, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %3, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %0, metadata !4293, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %0, metadata !4294, metadata !DIExpression()), !dbg !4354
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4355
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4355
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4297, metadata !DIExpression()), !dbg !4356
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4357
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4357
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4298, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.value(metadata i32 0, metadata !4299, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 0, metadata !4300, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 0, metadata !4301, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 -1, metadata !4302, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 0, metadata !4305, metadata !DIExpression()), !dbg !4354
  %12 = and i32 %2, 4, !dbg !4359
  %13 = icmp eq i32 %12, 0, !dbg !4360
  call void @llvm.dbg.value(metadata i1 %13, metadata !4306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4354
  %14 = lshr i32 %2, 3, !dbg !4361
  %15 = and i32 %14, 7, !dbg !4361
  %16 = add nuw nsw i32 %15, 1, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %16, metadata !4307, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 0, metadata !4308, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %0, metadata !4309, metadata !DIExpression()), !dbg !4354
  %17 = ptrtoint i8* %0 to i32, !dbg !4363
  %18 = and i32 %17, 3, !dbg !4365
  %19 = icmp eq i32 %18, 0, !dbg !4365
  br i1 %19, label %20, label %316, !dbg !4366

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4367
  call void @llvm.dbg.value(metadata i8* %21, metadata !4294, metadata !DIExpression()), !dbg !4354
  %22 = icmp eq i8* %0, null, !dbg !4368
  %23 = and i32 %1, 7, !dbg !4370
  %24 = sub nuw nsw i32 8, %23, !dbg !4370
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4370
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4370
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %27, metadata !4289, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %26, metadata !4294, metadata !DIExpression()), !dbg !4354
  br i1 %22, label %33, label %28, !dbg !4371

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4373
  %30 = sub i32 4, %17, !dbg !4373
  %31 = add i32 %30, %29, !dbg !4374
  %32 = icmp ugt i32 %31, %27, !dbg !4375
  br i1 %32, label %316, label %33, !dbg !4376

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4377
  call void @llvm.dbg.value(metadata i8* %34, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %3, metadata !4304, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 4, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 4, metadata !4295, metadata !DIExpression()), !dbg !4354
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4378

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %42, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %43, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %44, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %45, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %72, metadata !4302, metadata !DIExpression()), !dbg !4354
  br i1 %46, label %73, label %47, !dbg !4379

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4380
  %49 = zext i1 %48 to i32, !dbg !4384
  %50 = add nsw i32 %72, %49, !dbg !4384
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4384
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %52, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %51, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %50, metadata !4302, metadata !DIExpression()), !dbg !4354
  br label %53, !dbg !4385

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %40, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %58, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %57, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %56, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %54, metadata !4302, metadata !DIExpression()), !dbg !4354
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4386
  call void @llvm.dbg.value(metadata i8* %60, metadata !4291, metadata !DIExpression()), !dbg !4354
  %61 = load i8, i8* %60, align 1, !dbg !4388
  %62 = icmp eq i8 %61, 0, !dbg !4389
  br i1 %62, label %223, label %63, !dbg !4390, !llvm.loop !4391

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4379

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4394

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4305, metadata !DIExpression()), !dbg !4354
  %75 = add nsw i32 %72, -1, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %75, metadata !4302, metadata !DIExpression()), !dbg !4354
  br label %53, !dbg !4396

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4397

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 4, metadata !4295, metadata !DIExpression()), !dbg !4354
  br label %53, !dbg !4398

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 4, metadata !4295, metadata !DIExpression()), !dbg !4354
  br label %53, !dbg !4399

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4400
  %81 = icmp eq i8 %80, 108, !dbg !4402
  br i1 %81, label %82, label %109, !dbg !4403

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4404
  %84 = load i8, i8* %83, align 1, !dbg !4404
  %85 = icmp eq i8 %84, 108, !dbg !4407
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4408
  %89 = add i32 %88, 7, !dbg !4408
  %90 = and i32 %89, -8, !dbg !4408
  %91 = inttoptr i32 %90 to i8*, !dbg !4408
  %92 = inttoptr i32 %90 to double*, !dbg !4408
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4408
  %94 = load double, double* %92, align 8, !dbg !4408
  call void @llvm.dbg.value(metadata i8* %93, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 8, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 8, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata double %94, metadata !4322, metadata !DIExpression()), !dbg !4410
  %95 = ptrtoint i8* %43 to i32, !dbg !4411
  %96 = add i32 %95, 7, !dbg !4411
  %97 = and i32 %96, -8, !dbg !4411
  %98 = inttoptr i32 %97 to i8*, !dbg !4412
  call void @llvm.dbg.value(metadata i8* %98, metadata !4294, metadata !DIExpression()), !dbg !4354
  br i1 %22, label %104, label %99, !dbg !4413

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4414
  %101 = icmp ugt i32 %100, %194, !dbg !4418
  br i1 %101, label %316, label %102, !dbg !4419

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4420
  store double %94, double* %103, align 8, !dbg !4420
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4423
  call void @llvm.dbg.value(metadata i8* %105, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4305, metadata !DIExpression()), !dbg !4354
  br label %53, !dbg !4424

107:                                              ; preds = %73, %73
  br label %109, !dbg !4425

108:                                              ; preds = %73
  br label %109, !dbg !4425

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4354
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4354
  call void @llvm.dbg.value(metadata i32 %113, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %112, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4308, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  %114 = ptrtoint i8* %43 to i32, !dbg !4425
  %115 = add i32 %114, -1, !dbg !4425
  %116 = add i32 %115, %112, !dbg !4425
  %117 = sub i32 0, %112, !dbg !4425
  %118 = and i32 %116, %117, !dbg !4425
  %119 = inttoptr i32 %118 to i8*, !dbg !4426
  call void @llvm.dbg.value(metadata i8* %119, metadata !4294, metadata !DIExpression()), !dbg !4354
  br i1 %22, label %124, label %120, !dbg !4427

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4429
  %122 = add i32 %121, %118, !dbg !4430
  %123 = icmp ugt i32 %122, %194, !dbg !4431
  br i1 %123, label %316, label %124, !dbg !4432

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4433

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4426
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4434
  call void @llvm.dbg.value(metadata i8* %127, metadata !4292, metadata !DIExpression()), !dbg !4354
  %128 = bitcast i8* %41 to i8**, !dbg !4434
  %129 = load i8*, i8** %128, align 4, !dbg !4434
  call void @llvm.dbg.value(metadata i8* %129, metadata !4304, metadata !DIExpression()), !dbg !4354
  br label %130, !dbg !4435

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4436
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4437
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4354
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4438
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4354
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4439
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4354
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4354
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4354
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4354
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4440
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %142, metadata !4289, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %141, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %140, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %139, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %138, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %137, metadata !4299, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %136, metadata !4307, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %135, metadata !4300, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %133, metadata !4304, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %132, metadata !4302, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %131, metadata !4301, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.label(metadata !4353), !dbg !4442
  br i1 %22, label %146, label %144, !dbg !4443

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4444
  store i8* %133, i8** %145, align 4, !dbg !4447
  br label %146, !dbg !4448

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %147, metadata !4307, metadata !DIExpression()), !dbg !4354
  %148 = icmp sgt i32 %136, 0, !dbg !4450
  br i1 %148, label %152, label %149, !dbg !4451

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4452
  %151 = zext i1 %150 to i32, !dbg !4452
  br label %152, !dbg !4451

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4451
  %154 = icmp eq i32 %153, 0, !dbg !4451
  call void @llvm.dbg.value(metadata i1 %154, metadata !4331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4453
  call void @llvm.dbg.value(metadata i1 %36, metadata !4334, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4453
  %155 = or i1 %36, %154, !dbg !4454
  br i1 %155, label %156, label %190, !dbg !4454

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4455
  %158 = sub i32 %157, %17, !dbg !4455
  %159 = lshr i32 %158, 2, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %159, metadata !4335, metadata !DIExpression()), !dbg !4457
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4458
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4458
  br i1 %163, label %316, label %164, !dbg !4458

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4460

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4461
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4464
  store i8 %166, i8* %167, align 1, !dbg !4465
  %168 = trunc i32 %132 to i8, !dbg !4466
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4467
  store i8 %168, i8* %169, align 1, !dbg !4468
  br i1 %154, label %173, label %170, !dbg !4469

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4470
  store i8 %171, i8* %167, align 1, !dbg !4470
  %172 = add i32 %131, 1, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %172, metadata !4301, metadata !DIExpression()), !dbg !4354
  br label %185, !dbg !4474

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %174, metadata !4300, metadata !DIExpression()), !dbg !4354
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4477

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4478
  call void @llvm.dbg.value(metadata i32 %177, metadata !4289, metadata !DIExpression()), !dbg !4354
  br label %185, !dbg !4481

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4482

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4483
  call void @llvm.dbg.value(metadata i32 %180, metadata !4289, metadata !DIExpression()), !dbg !4354
  br label %185, !dbg !4486

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4487
  %183 = add i32 %142, 2, !dbg !4489
  %184 = add i32 %183, %182, !dbg !4490
  call void @llvm.dbg.value(metadata i32 %184, metadata !4289, metadata !DIExpression()), !dbg !4354
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4354
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4354
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4354
  call void @llvm.dbg.value(metadata i32 %188, metadata !4289, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %187, metadata !4300, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %186, metadata !4301, metadata !DIExpression()), !dbg !4354
  %189 = add nuw nsw i32 %137, 1, !dbg !4491
  call void @llvm.dbg.value(metadata i32 undef, metadata !4289, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 undef, metadata !4299, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 undef, metadata !4300, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 undef, metadata !4301, metadata !DIExpression()), !dbg !4354
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4436
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4438
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4439
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4440
  call void @llvm.dbg.value(metadata i32 %194, metadata !4289, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %193, metadata !4299, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %192, metadata !4300, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %191, metadata !4301, metadata !DIExpression()), !dbg !4354
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4492
  call void @llvm.dbg.value(metadata i8* %195, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %143, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %141, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %139, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %138, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4308, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %132, metadata !4302, metadata !DIExpression()), !dbg !4354
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4386
  call void @llvm.dbg.value(metadata i8* %196, metadata !4291, metadata !DIExpression()), !dbg !4354
  %197 = load i8, i8* %196, align 1, !dbg !4388
  %198 = icmp eq i8 %197, 0, !dbg !4389
  br i1 %198, label %223, label %63, !dbg !4390

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4493

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4494
  call void @llvm.dbg.value(metadata i8* %201, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 undef, metadata !4338, metadata !DIExpression()), !dbg !4495
  br i1 %22, label %216, label %202, !dbg !4496

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4494
  %204 = load i32, i32* %203, align 4, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %204, metadata !4338, metadata !DIExpression()), !dbg !4495
  %205 = inttoptr i32 %118 to i32*, !dbg !4497
  store i32 %204, i32* %205, align 4, !dbg !4500
  br label %216, !dbg !4501

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4502
  %208 = add i32 %207, 7, !dbg !4502
  %209 = and i32 %208, -8, !dbg !4502
  %210 = inttoptr i32 %209 to i8*, !dbg !4502
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4502
  call void @llvm.dbg.value(metadata i8* %211, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i64 undef, metadata !4344, metadata !DIExpression()), !dbg !4503
  br i1 %22, label %216, label %212, !dbg !4504

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4502
  %214 = load i64, i64* %213, align 8, !dbg !4502
  call void @llvm.dbg.value(metadata i64 %214, metadata !4344, metadata !DIExpression()), !dbg !4503
  %215 = inttoptr i32 %118 to i64*, !dbg !4505
  store i64 %214, i64* %215, align 8, !dbg !4510
  br label %216, !dbg !4511

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4512
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4512
  call void @llvm.dbg.value(metadata i8* %218, metadata !4292, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %40, metadata !4291, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %219, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %113, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %112, metadata !4296, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4308, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8 poison, metadata !4305, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %72, metadata !4302, metadata !DIExpression()), !dbg !4354
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4386
  call void @llvm.dbg.value(metadata i8* %220, metadata !4291, metadata !DIExpression()), !dbg !4354
  %221 = load i8, i8* %220, align 1, !dbg !4388
  %222 = icmp eq i8 %221, 0, !dbg !4389
  br i1 %222, label %223, label %38, !dbg !4390

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4513
  %225 = ptrtoint i8* %224 to i32, !dbg !4514
  %226 = sub i32 %225, %17, !dbg !4514
  %227 = lshr i32 %226, 2, !dbg !4516
  %228 = icmp ugt i32 %226, 1023, !dbg !4517
  br i1 %228, label %316, label %229, !dbg !4518

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4519

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4520
  %232 = add i32 %231, %226, !dbg !4523
  br label %316, !dbg !4524

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4525
  store i8 %234, i8* %0, align 1, !dbg !4526
  %235 = trunc i32 %192 to i8, !dbg !4527
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4529
  store i8 %236, i8* %238, align 1, !dbg !4531
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4532
  store i8 %237, i8* %239, align 1, !dbg !4533
  %240 = trunc i32 %191 to i8, !dbg !4534
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4535
  store i8 %240, i8* %241, align 1, !dbg !4536
  %242 = icmp eq i32 %191, 0, !dbg !4537
  %243 = xor i1 %242, true, !dbg !4538
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4538
  call void @llvm.dbg.value(metadata i8* %224, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 0, metadata !4303, metadata !DIExpression()), !dbg !4354
  br i1 %245, label %246, label %265, !dbg !4538

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4539

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %250, metadata !4303, metadata !DIExpression()), !dbg !4354
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4540
  %252 = load i8, i8* %251, align 1, !dbg !4540
  %253 = icmp sgt i8 %252, -1, !dbg !4542
  br i1 %253, label %261, label %254, !dbg !4543

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4347, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4544
  %255 = ptrtoint i8* %249 to i32, !dbg !4545
  %256 = add i32 %247, %255, !dbg !4547
  %257 = icmp ugt i32 %256, %194, !dbg !4548
  br i1 %257, label %316, label %258, !dbg !4549

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4550
  call void @llvm.dbg.value(metadata i8 %259, metadata !4347, metadata !DIExpression()), !dbg !4544
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4551
  call void @llvm.dbg.value(metadata i8* %260, metadata !4294, metadata !DIExpression()), !dbg !4354
  store i8 %259, i8* %249, align 1, !dbg !4552
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4492
  call void @llvm.dbg.value(metadata i8* %262, metadata !4294, metadata !DIExpression()), !dbg !4354
  %263 = add nuw i32 %250, 1, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %263, metadata !4303, metadata !DIExpression()), !dbg !4354
  %264 = icmp eq i32 %263, %193, !dbg !4554
  br i1 %264, label %265, label %248, !dbg !4539, !llvm.loop !4555

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4492
  call void @llvm.dbg.value(metadata i8* %266, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 0, metadata !4303, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %133, metadata !4304, metadata !DIExpression()), !dbg !4354
  %267 = icmp eq i32 %193, 0, !dbg !4557
  br i1 %267, label %312, label %268, !dbg !4560

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4560

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %272, metadata !4304, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %273, metadata !4303, metadata !DIExpression()), !dbg !4354
  br i1 %242, label %278, label %274, !dbg !4561

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4564
  %276 = load i8, i8* %275, align 1, !dbg !4564
  %277 = icmp sgt i8 %276, -1, !dbg !4565
  br i1 %277, label %278, label %307, !dbg !4566

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4567

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4295, metadata !DIExpression()), !dbg !4354
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4568
  %281 = load i8, i8* %280, align 1, !dbg !4568
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %282, metadata !4294, metadata !DIExpression()), !dbg !4354
  store i8 %281, i8* %271, align 1, !dbg !4572
  br label %293, !dbg !4573

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4574
  %285 = load i8, i8* %284, align 1, !dbg !4574
  %286 = zext i8 %285 to i32, !dbg !4574
  %287 = shl nuw nsw i32 %286, 2, !dbg !4576
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4577
  %289 = bitcast i8* %288 to i8**, !dbg !4578
  %290 = load i8*, i8** %289, align 4, !dbg !4578
  call void @llvm.dbg.value(metadata i8* %290, metadata !4304, metadata !DIExpression()), !dbg !4354
  store i8* null, i8** %289, align 4, !dbg !4579
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4580
  %292 = add i32 %291, 1, !dbg !4581
  call void @llvm.dbg.value(metadata i32 %292, metadata !4295, metadata !DIExpression()), !dbg !4354
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4354
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4582
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4354
  call void @llvm.dbg.value(metadata i8* %296, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %295, metadata !4295, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %294, metadata !4304, metadata !DIExpression()), !dbg !4354
  %297 = ptrtoint i8* %296 to i32, !dbg !4583
  %298 = add i32 %269, %295, !dbg !4585
  %299 = add i32 %298, %297, !dbg !4586
  %300 = icmp ugt i32 %299, %194, !dbg !4587
  br i1 %300, label %316, label %301, !dbg !4588

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4589
  %303 = load i8, i8* %302, align 1, !dbg !4589
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4590
  call void @llvm.dbg.value(metadata i8* %304, metadata !4294, metadata !DIExpression()), !dbg !4354
  store i8 %303, i8* %296, align 1, !dbg !4591
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4592
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4593
  call void @llvm.dbg.value(metadata i8* %306, metadata !4294, metadata !DIExpression()), !dbg !4354
  br label %307, !dbg !4594

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4595
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4354
  call void @llvm.dbg.value(metadata i8* %309, metadata !4294, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i8* %308, metadata !4304, metadata !DIExpression()), !dbg !4354
  %310 = add nuw i32 %273, 1, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %310, metadata !4303, metadata !DIExpression()), !dbg !4354
  %311 = icmp eq i32 %310, %193, !dbg !4557
  br i1 %311, label %312, label %270, !dbg !4560, !llvm.loop !4597

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4492
  %314 = ptrtoint i8* %313 to i32, !dbg !4599
  %315 = sub i32 %314, %17, !dbg !4599
  br label %316, !dbg !4600

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4354
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4601
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4601
  ret i32 %317, !dbg !4601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4606, metadata !DIExpression()), !dbg !4607
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4608
  ret i1 %2, !dbg !4609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4610 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4615, metadata !DIExpression()), !dbg !4616
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4617
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4618
  %4 = and i1 %2, %3, !dbg !4618
  ret i1 %4, !dbg !4619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4620 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4624, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata i32 %1, metadata !4625, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata i32 %2, metadata !4626, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata i8* %3, metadata !4627, metadata !DIExpression()), !dbg !4630
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4631
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4631
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4628, metadata !DIExpression()), !dbg !4632
  call void @llvm.va_start(i8* nonnull %6), !dbg !4633
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4634
  %8 = load i32, i32* %7, align 4, !dbg !4634
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4634
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %10, metadata !4629, metadata !DIExpression()), !dbg !4630
  call void @llvm.va_end(i8* nonnull %6), !dbg !4635
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4636
  ret i32 %10, !dbg !4637
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4638 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4650, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4651, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8* %2, metadata !4652, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8* %3, metadata !4653, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8* %3, metadata !4654, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8* %3, metadata !4655, metadata !DIExpression()), !dbg !4669
  %5 = icmp eq i8* %3, null, !dbg !4670
  br i1 %5, label %45, label %6, !dbg !4672

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4664, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4669
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4673
  %8 = load i8, i8* %7, align 1, !dbg !4673
  %9 = zext i8 %8 to i32, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %9, metadata !4665, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8 undef, metadata !4666, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata i8 undef, metadata !4667, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata i32 0, metadata !4663, metadata !DIExpression()), !dbg !4669
  %10 = icmp eq i8 %8, 0, !dbg !4675
  br i1 %10, label %39, label %11, !dbg !4678

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4679
  call void @llvm.dbg.value(metadata i8 %12, metadata !4664, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %13 = zext i8 %12 to i32, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %13, metadata !4664, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %14 = shl nuw nsw i32 %13, 2, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %14, metadata !4664, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4683
  %17 = load i8, i8* %16, align 1, !dbg !4683
  call void @llvm.dbg.value(metadata i8 %17, metadata !4666, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %18 = zext i8 %17 to i32, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %18, metadata !4666, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4685
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4686
  %21 = load i8, i8* %20, align 1, !dbg !4686
  call void @llvm.dbg.value(metadata i8 %21, metadata !4667, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %22 = zext i8 %21 to i32, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %22, metadata !4667, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %23 = shl nuw nsw i32 %22, 1, !dbg !4688
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4669
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4689
  call void @llvm.dbg.value(metadata i8* %24, metadata !4661, metadata !DIExpression()), !dbg !4669
  br label %25, !dbg !4678

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4661, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i32 %27, metadata !4663, metadata !DIExpression()), !dbg !4669
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %28, metadata !4661, metadata !DIExpression()), !dbg !4669
  %29 = load i8, i8* %26, align 1, !dbg !4692
  %30 = zext i8 %29 to i32, !dbg !4692
  call void @llvm.dbg.value(metadata i32 %30, metadata !4668, metadata !DIExpression()), !dbg !4669
  %31 = shl nuw nsw i32 %30, 2, !dbg !4693
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4694
  %33 = bitcast i8* %32 to i8**, !dbg !4695
  call void @llvm.dbg.value(metadata i8** %33, metadata !4662, metadata !DIExpression()), !dbg !4669
  store i8* %28, i8** %33, align 4, !dbg !4696
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4697
  %35 = add i32 %34, 1, !dbg !4698
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %36, metadata !4661, metadata !DIExpression()), !dbg !4669
  %37 = add nuw nsw i32 %27, 1, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %37, metadata !4663, metadata !DIExpression()), !dbg !4669
  %38 = icmp eq i32 %37, %9, !dbg !4675
  br i1 %38, label %39, label %25, !dbg !4678, !llvm.loop !4701

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %40, metadata !4654, metadata !DIExpression()), !dbg !4669
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4704
  %42 = bitcast i8* %41 to i8**, !dbg !4704
  %43 = load i8*, i8** %42, align 1, !dbg !4704
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4705
  br label %45, !dbg !4706

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4669
  ret i32 %46, !dbg !4707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4708 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4712, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4713, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i8* %2, metadata !4714, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i8* %3, metadata !4715, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i8* %4, metadata !4716, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i8* %4, metadata !4717, metadata !DIExpression()), !dbg !4722
  %6 = ptrtoint i8* %4 to i32, !dbg !4723
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4723
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4723
  ret i32 %8, !dbg !4724
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4729, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i32 %1, metadata !4730, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i8 0, metadata !4732, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i32 0, metadata !4733, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i8 poison, metadata !4732, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i8* %0, metadata !4729, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4734
  %3 = load i8, i8* %0, align 1, !dbg !4735
  call void @llvm.dbg.value(metadata i8 %3, metadata !4731, metadata !DIExpression()), !dbg !4734
  %4 = icmp eq i8 %3, 0, !dbg !4736
  br i1 %4, label %29, label %5, !dbg !4737

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %8, metadata !4733, metadata !DIExpression()), !dbg !4734
  br i1 %9, label %11, label %22, !dbg !4739

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4741
  br i1 %12, label %13, label %17, !dbg !4745

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4746
  br i1 %14, label %29, label %15, !dbg !4749

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4750
  br i1 %16, label %29, label %22, !dbg !4752

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4753
  %19 = xor i1 %18, true, !dbg !4755
  %20 = zext i1 %18 to i32, !dbg !4755
  %21 = add nsw i32 %8, %20, !dbg !4755
  br label %22, !dbg !4755

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4734
  call void @llvm.dbg.value(metadata i32 %24, metadata !4733, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i8 poison, metadata !4732, metadata !DIExpression()), !dbg !4734
  %25 = icmp eq i8 %6, 37, !dbg !4756
  %26 = xor i1 %25, %23, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %10, metadata !4729, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i8* %10, metadata !4729, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4734
  %27 = load i8, i8* %10, align 1, !dbg !4735
  call void @llvm.dbg.value(metadata i8 %27, metadata !4731, metadata !DIExpression()), !dbg !4734
  %28 = icmp eq i8 %27, 0, !dbg !4736
  br i1 %28, label %29, label %5, !dbg !4737, !llvm.loop !4759

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4734
  ret i1 %30, !dbg !4761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4762 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4766, metadata !DIExpression()), !dbg !4767
  %2 = add i8 %0, -64, !dbg !4768
  %3 = icmp ult i8 %2, 59, !dbg !4768
  ret i1 %3, !dbg !4769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4770 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4778, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %1, metadata !4779, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4780, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %3, metadata !4781, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %4, metadata !4782, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i16* %5, metadata !4783, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %6, metadata !4784, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %0, metadata !4785, metadata !DIExpression()), !dbg !4847
  %11 = bitcast i8* %0 to i32*, !dbg !4848
  call void @llvm.dbg.value(metadata i32* %11, metadata !4786, metadata !DIExpression()), !dbg !4847
  %12 = and i32 %4, 8, !dbg !4849
  %13 = icmp eq i32 %12, 0, !dbg !4850
  call void @llvm.dbg.value(metadata i1 %13, metadata !4790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %0, metadata !4793, metadata !DIExpression()), !dbg !4847
  %14 = icmp eq i32 %1, 0, !dbg !4851
  br i1 %14, label %15, label %17, !dbg !4852

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4853
  br label %17, !dbg !4852

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4852
  call void @llvm.dbg.value(metadata i32 %18, metadata !4779, metadata !DIExpression()), !dbg !4847
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4854
  %20 = load i8, i8* %19, align 1, !dbg !4854
  %21 = zext i8 %20 to i32, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %21, metadata !4788, metadata !DIExpression()), !dbg !4847
  %22 = icmp ne i8 %20, 0, !dbg !4856
  %23 = and i32 %4, 1, !dbg !4857
  %24 = icmp ne i32 %23, 0, !dbg !4857
  %25 = and i1 %24, %22, !dbg !4857
  call void @llvm.dbg.value(metadata i1 %25, metadata !4792, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4847
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4858
  %27 = load i8, i8* %26, align 1, !dbg !4858
  %28 = zext i8 %27 to i32, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %28, metadata !4789, metadata !DIExpression()), !dbg !4847
  %29 = icmp ne i8 %27, 0, !dbg !4860
  %30 = and i32 %4, 2, !dbg !4861
  %31 = icmp ne i32 %30, 0, !dbg !4861
  %32 = and i1 %31, %29, !dbg !4861
  call void @llvm.dbg.value(metadata i1 %32, metadata !4791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4847
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4862
  br i1 %33, label %38, label %34, !dbg !4862

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4864
  br i1 %35, label %267, label %36, !dbg !4867

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4868
  br label %267, !dbg !4870

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4871
  %40 = zext i8 %39 to i32, !dbg !4872
  %41 = shl nuw nsw i32 %40, 2, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %41, metadata !4787, metadata !DIExpression()), !dbg !4847
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4874
  %43 = bitcast i8* %42 to i8**, !dbg !4875
  %44 = load i8*, i8** %43, align 4, !dbg !4875
  call void @llvm.dbg.value(metadata i8* %44, metadata !4796, metadata !DIExpression()), !dbg !4847
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %45, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 0, metadata !4798, metadata !DIExpression()), !dbg !4847
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4877
  br i1 %46, label %47, label %132, !dbg !4878

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4795, metadata !DIExpression()), !dbg !4847
  br i1 %25, label %48, label %73, !dbg !4879

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %45, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 0, metadata !4798, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 0, metadata !4799, metadata !DIExpression()), !dbg !4880
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4881

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %52, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %53, metadata !4798, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %54, metadata !4799, metadata !DIExpression()), !dbg !4880
  %55 = load i8, i8* %52, align 1, !dbg !4882
  %56 = zext i8 %55 to i32, !dbg !4883
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4883
  %58 = bitcast i32* %57 to i8**, !dbg !4884
  %59 = load i8*, i8** %58, align 4, !dbg !4884
  call void @llvm.dbg.value(metadata i8* %59, metadata !4805, metadata !DIExpression()), !dbg !4885
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %60, metadata !4808, metadata !DIExpression()), !dbg !4885
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4887
  br i1 %62, label %63, label %67, !dbg !4887

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4889
  %65 = add nuw i32 %53, 1, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %65, metadata !4798, metadata !DIExpression()), !dbg !4847
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4892
  store i16 %64, i16* %66, align 2, !dbg !4893
  br label %67, !dbg !4894

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4847
  call void @llvm.dbg.value(metadata i32 %68, metadata !4798, metadata !DIExpression()), !dbg !4847
  %69 = add nsw i32 %60, %51, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %69, metadata !4795, metadata !DIExpression()), !dbg !4847
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %70, metadata !4797, metadata !DIExpression()), !dbg !4847
  %71 = add nuw nsw i32 %54, 1, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %71, metadata !4799, metadata !DIExpression()), !dbg !4880
  %72 = icmp eq i32 %71, %21, !dbg !4898
  br i1 %72, label %79, label %50, !dbg !4881, !llvm.loop !4899

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4901
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4901
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4901
  br label %79, !dbg !4901

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4904
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4847
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4905
  call void @llvm.dbg.value(metadata i1 undef, metadata !4809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4906
  call void @llvm.dbg.value(metadata i32 0, metadata !4810, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i32 %82, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %81, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %80, metadata !4798, metadata !DIExpression()), !dbg !4847
  %83 = icmp eq i8 %27, 0, !dbg !4908
  br i1 %83, label %267, label %84, !dbg !4909

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4910
  %86 = icmp eq i32 %85, 0, !dbg !4911
  call void @llvm.dbg.value(metadata i1 %86, metadata !4809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4906
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4909

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8* %93, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %94, metadata !4798, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %95, metadata !4810, metadata !DIExpression()), !dbg !4907
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %96, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 undef, metadata !4812, metadata !DIExpression()), !dbg !4913
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4914
  call void @llvm.dbg.value(metadata i8* %97, metadata !4797, metadata !DIExpression()), !dbg !4847
  %98 = load i8, i8* %96, align 1, !dbg !4915
  call void @llvm.dbg.value(metadata i8 %98, metadata !4815, metadata !DIExpression()), !dbg !4913
  %99 = zext i8 %98 to i32, !dbg !4916
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4916
  %101 = bitcast i32* %100 to i8**, !dbg !4917
  %102 = load i8*, i8** %101, align 4, !dbg !4917
  call void @llvm.dbg.value(metadata i8* %102, metadata !4816, metadata !DIExpression()), !dbg !4913
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4918
  call void @llvm.dbg.value(metadata i1 %103, metadata !4817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4913
  br i1 %13, label %110, label %104, !dbg !4919

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4921
  call void @llvm.dbg.value(metadata i8 %105, metadata !4812, metadata !DIExpression()), !dbg !4913
  %106 = zext i8 %105 to i32, !dbg !4922
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4923
  br i1 %107, label %108, label %110, !dbg !4924

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4925
  %109 = add nsw i32 %92, -2, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %109, metadata !4795, metadata !DIExpression()), !dbg !4847
  br label %127, !dbg !4932

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4933

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4934

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %113, metadata !4795, metadata !DIExpression()), !dbg !4847
  br label %127, !dbg !4939

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4940

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4843), !dbg !4941
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4942
  call void @llvm.dbg.value(metadata i32 %116, metadata !4818, metadata !DIExpression()), !dbg !4913
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4943
  br i1 %118, label %119, label %123, !dbg !4943

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4945
  %121 = add nuw i32 %94, 1, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %121, metadata !4798, metadata !DIExpression()), !dbg !4847
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4948
  store i16 %120, i16* %122, align 2, !dbg !4949
  br label %123, !dbg !4950

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4847
  call void @llvm.dbg.value(metadata i32 %124, metadata !4798, metadata !DIExpression()), !dbg !4847
  %125 = add i32 %92, -1, !dbg !4951
  %126 = add i32 %125, %116, !dbg !4952
  call void @llvm.dbg.value(metadata i32 %126, metadata !4795, metadata !DIExpression()), !dbg !4847
  br label %127, !dbg !4953

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4847
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4913
  call void @llvm.dbg.value(metadata i32 %129, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %128, metadata !4798, metadata !DIExpression()), !dbg !4847
  %130 = add nuw nsw i32 %95, 1, !dbg !4954
  call void @llvm.dbg.value(metadata i8* %97, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %130, metadata !4810, metadata !DIExpression()), !dbg !4907
  %131 = icmp eq i32 %130, %28, !dbg !4908
  br i1 %131, label %267, label %91, !dbg !4909, !llvm.loop !4955

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4820, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4821, metadata !DIExpression()), !dbg !4958
  br i1 %25, label %133, label %135, !dbg !4959

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4822, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 0, metadata !4823, metadata !DIExpression()), !dbg !4847
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %134, metadata !4824, metadata !DIExpression()), !dbg !4847
  br label %140, !dbg !4963

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4964
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4964

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4824, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 undef, metadata !4823, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 0, metadata !4822, metadata !DIExpression()), !dbg !4847
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4966
  br label %145, !dbg !4969

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %148, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 0, metadata !4826, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i8 %146, metadata !4823, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 %147, metadata !4822, metadata !DIExpression()), !dbg !4847
  %149 = icmp eq i8 %27, 0, !dbg !4972
  br i1 %149, label %150, label %152, !dbg !4973

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4974
  br label %157, !dbg !4973

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4973

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4974
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4975
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4976
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4847
  call void @llvm.dbg.value(metadata i8 undef, metadata !4819, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4847
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4977
  %163 = load i8, i8* %162, align 1, !dbg !4977
  %164 = zext i8 %159 to i32, !dbg !4978
  %165 = add i8 %163, %159, !dbg !4979
  call void @llvm.dbg.value(metadata i8 %165, metadata !4819, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4847
  %166 = icmp eq i32 %30, 0, !dbg !4980
  %167 = lshr i8 %160, 1, !dbg !4981
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4981
  call void @llvm.dbg.value(metadata i8 %168, metadata !4819, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4847
  %169 = icmp eq i32 %23, 0, !dbg !4982
  %170 = icmp eq i32 %158, 0, !dbg !4974
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4974
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4974
  call void @llvm.dbg.value(metadata i8 %172, metadata !4819, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4847
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4834, metadata !DIExpression()), !dbg !4983
  %173 = load i32, i32* %11, align 1, !dbg !4984
  store i8 %165, i8* %162, align 1, !dbg !4985
  store i8 %172, i8* %19, align 1, !dbg !4985
  store i8 %168, i8* %26, align 1, !dbg !4985
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %174, metadata !4825, metadata !DIExpression()), !dbg !4847
  %175 = icmp slt i32 %174, 0, !dbg !4987
  br i1 %175, label %267, label %220, !dbg !4989

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %178, metadata !4826, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i8 %179, metadata !4823, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 %180, metadata !4822, metadata !DIExpression()), !dbg !4847
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4990
  call void @llvm.dbg.value(metadata i8* %181, metadata !4797, metadata !DIExpression()), !dbg !4847
  %182 = load i8, i8* %177, align 1, !dbg !4991
  call void @llvm.dbg.value(metadata i8 %182, metadata !4828, metadata !DIExpression()), !dbg !4992
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4993
  call void @llvm.dbg.value(metadata i8* %183, metadata !4797, metadata !DIExpression()), !dbg !4847
  %184 = load i8, i8* %181, align 1, !dbg !4994
  call void @llvm.dbg.value(metadata i8 %184, metadata !4831, metadata !DIExpression()), !dbg !4992
  %185 = zext i8 %184 to i32, !dbg !4995
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4995
  %187 = bitcast i32* %186 to i8**, !dbg !4996
  %188 = load i8*, i8** %187, align 4, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %188, metadata !4832, metadata !DIExpression()), !dbg !4992
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4997
  call void @llvm.dbg.value(metadata i1 %189, metadata !4833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4992
  br i1 %13, label %193, label %190, !dbg !4998

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !5000
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !5001
  br i1 %192, label %215, label %193, !dbg !5002

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !5003

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !5004

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !5007
  call void @llvm.dbg.value(metadata i8 %196, metadata !4822, metadata !DIExpression()), !dbg !4847
  br label %208, !dbg !5010

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !5011

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !5012
  call void @llvm.dbg.value(metadata i8 %199, metadata !4823, metadata !DIExpression()), !dbg !4847
  br label %208, !dbg !5015

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !5016

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !5018
  call void @llvm.dbg.value(metadata i8 %202, metadata !4822, metadata !DIExpression()), !dbg !4847
  br label %208, !dbg !5021

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !5022
  call void @llvm.dbg.value(metadata i8 %204, metadata !4823, metadata !DIExpression()), !dbg !4847
  %205 = zext i8 %179 to i32, !dbg !5024
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !5024
  store i8 %182, i8* %206, align 1, !dbg !5025
  %207 = add i8 %179, 2, !dbg !5026
  call void @llvm.dbg.value(metadata i8 %207, metadata !4823, metadata !DIExpression()), !dbg !4847
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !5027
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !5027
  store i8 %184, i8* %214, align 1, !dbg !5027
  br label %215, !dbg !5028

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4847
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4976
  call void @llvm.dbg.value(metadata i8 %217, metadata !4823, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i8 %216, metadata !4822, metadata !DIExpression()), !dbg !4847
  %218 = add nuw nsw i32 %178, 1, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %183, metadata !4797, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %218, metadata !4826, metadata !DIExpression()), !dbg !4971
  %219 = icmp eq i32 %218, %28, !dbg !4972
  br i1 %219, label %157, label %176, !dbg !4973, !llvm.loop !5029

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %174, metadata !4795, metadata !DIExpression()), !dbg !4847
  store i32 %173, i32* %11, align 1, !dbg !5031
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5032
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %223, metadata !4825, metadata !DIExpression()), !dbg !4847
  %224 = icmp slt i32 %223, 0, !dbg !5034
  br i1 %224, label %267, label %225, !dbg !5036

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4847
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !5037
  %228 = add nuw nsw i32 %41, %21, !dbg !5037
  %229 = sub i32 %227, %228, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %229, metadata !4835, metadata !DIExpression()), !dbg !4847
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %230, metadata !4825, metadata !DIExpression()), !dbg !4847
  %231 = icmp slt i32 %230, 0, !dbg !5039
  br i1 %231, label %267, label %232, !dbg !5041

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %233, metadata !4795, metadata !DIExpression()), !dbg !4847
  %234 = add nuw nsw i32 %233, %230, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %234, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 0, metadata !4836, metadata !DIExpression()), !dbg !5044
  %235 = icmp eq i8 %159, 0, !dbg !5045
  br i1 %235, label %264, label %236, !dbg !5046

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !5046

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4836, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i32 %240, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5047
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !5048
  %242 = load i8, i8* %241, align 1, !dbg !5048
  call void @llvm.dbg.value(metadata i8 %242, metadata !4838, metadata !DIExpression()), !dbg !5049
  store i8 %242, i8* %10, align 1, !dbg !5050
  %243 = zext i8 %242 to i32, !dbg !5051
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !5051
  %245 = bitcast i32* %244 to i8**, !dbg !5052
  %246 = load i8*, i8** %245, align 4, !dbg !5052
  call void @llvm.dbg.value(metadata i8* %246, metadata !4841, metadata !DIExpression()), !dbg !5049
  br i1 %237, label %250, label %247, !dbg !5053

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !5054
  %249 = load i16, i16* %248, align 2, !dbg !5054
  br label %250, !dbg !5053

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !5053
  call void @llvm.dbg.value(metadata i32 undef, metadata !4842, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5049
  call void @llvm.dbg.value(metadata i8* %10, metadata !4838, metadata !DIExpression(DW_OP_deref)), !dbg !5049
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %252, metadata !4825, metadata !DIExpression()), !dbg !4847
  %253 = icmp slt i32 %252, 0, !dbg !5056
  br i1 %253, label %257, label %254, !dbg !5058

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4842, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4847
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %255, metadata !4825, metadata !DIExpression()), !dbg !4847
  %256 = icmp slt i32 %255, 0, !dbg !5060
  br i1 %256, label %257, label %259, !dbg !5062

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5063
  call void @llvm.dbg.value(metadata i32 undef, metadata !4795, metadata !DIExpression()), !dbg !4847
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5064
  call void @llvm.dbg.value(metadata i32 %260, metadata !4795, metadata !DIExpression()), !dbg !4847
  %261 = add nsw i32 %260, %255, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %261, metadata !4795, metadata !DIExpression()), !dbg !4847
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5063
  %262 = add nuw nsw i32 %239, 1, !dbg !5066
  call void @llvm.dbg.value(metadata i32 %262, metadata !4836, metadata !DIExpression()), !dbg !5044
  %263 = icmp eq i32 %262, %164, !dbg !5045
  br i1 %263, label %264, label %238, !dbg !5046, !llvm.loop !5067

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !5043
  call void @llvm.dbg.value(metadata i32 %265, metadata !4795, metadata !DIExpression()), !dbg !4847
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !5069
  br label %267, !dbg !5070

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4847
  ret i32 %268, !dbg !5071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5076, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %0, metadata !5077, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %0, metadata !5078, metadata !DIExpression()), !dbg !5084
  %2 = load i8, i8* %0, align 1, !dbg !5085
  %3 = zext i8 %2 to i32, !dbg !5085
  %4 = shl nuw nsw i32 %3, 2, !dbg !5086
  call void @llvm.dbg.value(metadata i32 %4, metadata !5079, metadata !DIExpression()), !dbg !5084
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5087
  %6 = load i8, i8* %5, align 1, !dbg !5087
  %7 = zext i8 %6 to i32, !dbg !5087
  call void @llvm.dbg.value(metadata i32 %7, metadata !5080, metadata !DIExpression()), !dbg !5084
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5088
  %9 = load i8, i8* %8, align 1, !dbg !5088
  %10 = zext i8 %9 to i32, !dbg !5088
  call void @llvm.dbg.value(metadata i32 %10, metadata !5081, metadata !DIExpression()), !dbg !5084
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %11, metadata !5077, metadata !DIExpression()), !dbg !5084
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5090
  call void @llvm.dbg.value(metadata i8* %12, metadata !5077, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i32 0, metadata !5082, metadata !DIExpression()), !dbg !5091
  %13 = icmp eq i8 %6, 0, !dbg !5092
  br i1 %13, label %14, label %19, !dbg !5094

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5084
  %16 = ptrtoint i8* %15 to i32, !dbg !5095
  %17 = ptrtoint i8* %0 to i32, !dbg !5095
  %18 = sub i32 %16, %17, !dbg !5095
  ret i32 %18, !dbg !5096

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5082, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata i8* %21, metadata !5077, metadata !DIExpression()), !dbg !5084
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5097
  call void @llvm.dbg.value(metadata i8* %22, metadata !5077, metadata !DIExpression()), !dbg !5084
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5099
  %24 = add i32 %23, 1, !dbg !5100
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5101
  call void @llvm.dbg.value(metadata i8* %25, metadata !5077, metadata !DIExpression()), !dbg !5084
  %26 = add nuw nsw i32 %20, 1, !dbg !5102
  call void @llvm.dbg.value(metadata i32 %26, metadata !5082, metadata !DIExpression()), !dbg !5091
  %27 = icmp eq i32 %26, %7, !dbg !5092
  br i1 %27, label %14, label %19, !dbg !5094, !llvm.loop !5103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5105 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5109, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i8* %1, metadata !5110, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i8* %2, metadata !5111, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i16 %3, metadata !5112, metadata !DIExpression()), !dbg !5113
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5114
  br i1 %5, label %6, label %9, !dbg !5116

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5117
  %8 = add i32 %7, 1, !dbg !5119
  br label %20, !dbg !5120

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5121
  br i1 %10, label %13, label %11, !dbg !5122

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5122
  br label %16, !dbg !5122

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5123
  %15 = add i32 %14, 1, !dbg !5124
  br label %16, !dbg !5122

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5122
  %18 = and i32 %17, 65535, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %17, metadata !5112, metadata !DIExpression()), !dbg !5113
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5126
  br label %20, !dbg !5127

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5113
  ret i32 %21, !dbg !5128
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5131, metadata !DIExpression()), !dbg !5132
  ret i32 0, !dbg !5133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5134 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5138, metadata !DIExpression()), !dbg !5139
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5140
  ret void, !dbg !5141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5142 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5145
  ret i8* %1, !dbg !5146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5147 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5158, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i8* %0, metadata !5157, metadata !DIExpression()), !dbg !5169
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5170
  ret void, !dbg !5172
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5177, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8* %1, metadata !5178, metadata !DIExpression()), !dbg !5179
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5180
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5180
  ret i32 %4, !dbg !5181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5182 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5189, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5186, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i8* %1, metadata !5187, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.value(metadata i8* %2, metadata !5188, metadata !DIExpression()), !dbg !5190
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5191
  ret void, !dbg !5192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5197, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 %1, metadata !5198, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 0, metadata !5199, metadata !DIExpression()), !dbg !5200
  %3 = icmp eq i32 %1, 0, !dbg !5201
  br i1 %3, label %13, label %4, !dbg !5204

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5199, metadata !DIExpression()), !dbg !5200
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5205
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5207
  %8 = load i8, i8* %7, align 1, !dbg !5207
  %9 = zext i8 %8 to i32, !dbg !5207
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5205
  %11 = add nuw i32 %5, 1, !dbg !5208
  call void @llvm.dbg.value(metadata i32 %11, metadata !5199, metadata !DIExpression()), !dbg !5200
  %12 = icmp eq i32 %11, %1, !dbg !5201
  br i1 %12, label %13, label %4, !dbg !5204, !llvm.loop !5209

13:                                               ; preds = %4, %2
  ret void, !dbg !5211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5212 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5216, metadata !DIExpression()), !dbg !5218
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5219
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5217, metadata !DIExpression()), !dbg !5220
  call void @llvm.va_start(i8* nonnull %3), !dbg !5221
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5222
  %5 = load i32, i32* %4, align 4, !dbg !5222
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5222
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5222
  call void @llvm.va_end(i8* nonnull %3), !dbg !5223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5224
  ret void, !dbg !5224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5225 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5229, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i32 %1, metadata !5230, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %2, metadata !5231, metadata !DIExpression()), !dbg !5234
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5235
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5232, metadata !DIExpression()), !dbg !5236
  call void @llvm.va_start(i8* nonnull %5), !dbg !5237
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5238
  %7 = load i32, i32* %6, align 4, !dbg !5238
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5238
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %9, metadata !5233, metadata !DIExpression()), !dbg !5234
  call void @llvm.va_end(i8* nonnull %5), !dbg !5239
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5240
  ret i32 %9, !dbg !5241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5242 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5249, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.value(metadata i8* %0, metadata !5246, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.value(metadata i32 %1, metadata !5247, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.value(metadata i8* %2, metadata !5248, metadata !DIExpression()), !dbg !5256
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5257
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5250, metadata !DIExpression()), !dbg !5258
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5259
  store i8* %0, i8** %7, align 4, !dbg !5259
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5259
  store i32 %1, i32* %8, align 4, !dbg !5259
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5259
  store i32 0, i32* %9, align 4, !dbg !5259
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5260
  %10 = load i32, i32* %9, align 4, !dbg !5261
  %11 = load i32, i32* %8, align 4, !dbg !5263
  %12 = icmp slt i32 %10, %11, !dbg !5264
  br i1 %12, label %13, label %15, !dbg !5265

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5266
  store i8 0, i8* %14, align 1, !dbg !5268
  br label %15, !dbg !5269

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5270
  ret i32 %10, !dbg !5271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5277, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5278, metadata !DIExpression()), !dbg !5279
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5280
  %4 = load i8*, i8** %3, align 4, !dbg !5280
  %5 = icmp eq i8* %4, null, !dbg !5282
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5283
  br i1 %5, label %12, label %8, !dbg !5284

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5285
  %10 = load i32, i32* %9, align 4, !dbg !5285
  %11 = icmp slt i32 %7, %10, !dbg !5286
  br i1 %11, label %15, label %12, !dbg !5287

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5288
  %14 = add nsw i32 %7, 1, !dbg !5290
  store i32 %14, i32* %13, align 4, !dbg !5290
  br label %25, !dbg !5291

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5292
  %17 = icmp eq i32 %7, %16, !dbg !5294
  br i1 %17, label %18, label %21, !dbg !5295

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5296
  store i32 %19, i32* %6, align 4, !dbg !5296
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5298
  store i8 0, i8* %20, align 1, !dbg !5299
  br label %25, !dbg !5300

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5301
  %23 = add nsw i32 %7, 1, !dbg !5303
  store i32 %23, i32* %6, align 4, !dbg !5303
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5304
  store i8 %22, i8* %24, align 1, !dbg !5305
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5306
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5307 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5317, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %1, metadata !5318, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %2, metadata !5319, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.value(metadata i8* %3, metadata !5320, metadata !DIExpression()), !dbg !5321
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5322
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5323
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5324
  unreachable, !dbg !5325
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5326 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5430
  ret %struct.k_thread* %1, !dbg !5431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5437, metadata !DIExpression()), !dbg !5438
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5439, !srcloc !5441
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5442
  ret void, !dbg !5443
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5444 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5445, !srcloc !5447
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5448
  ret %struct.k_thread* %1, !dbg !5449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5450 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5463, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5460, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %1, metadata !5461, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %2, metadata !5462, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %4, metadata !5464, metadata !DIExpression()), !dbg !5589
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5590
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5590
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5465, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i32 0, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i1 undef, metadata !5471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5589
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5592

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5592

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5593
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5463, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %30, metadata !5462, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %29, metadata !5469, metadata !DIExpression()), !dbg !5589
  %31 = load i8, i8* %30, align 1, !dbg !5594
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5592

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5594
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5595
  call void @llvm.dbg.value(metadata i8* %34, metadata !5462, metadata !DIExpression()), !dbg !5589
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5595
  call void @llvm.dbg.value(metadata i32 %35, metadata !5473, metadata !DIExpression()), !dbg !5596
  %36 = icmp slt i32 %35, 0, !dbg !5597
  %37 = add i32 %29, 1, !dbg !5595
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %36, label %365, label %28, !llvm.loop !5599

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5601
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5478, metadata !DIExpression()), !dbg !5602
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5602
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5521, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5524, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8* %30, metadata !5527, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i32 -1, metadata !5528, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i32 -1, metadata !5529, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8* null, metadata !5530, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8* %14, metadata !5531, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8 0, metadata !5532, metadata !DIExpression()), !dbg !5603
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5604
  call void @llvm.dbg.value(metadata i8* %39, metadata !5462, metadata !DIExpression()), !dbg !5589
  %40 = load i24, i24* %15, align 8, !dbg !5605
  %41 = and i24 %40, 256, !dbg !5605
  %42 = icmp eq i24 %41, 0, !dbg !5605
  br i1 %42, label %51, label %43, !dbg !5607

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5608
  call void @llvm.dbg.value(metadata i8* %44, metadata !5463, metadata !DIExpression()), !dbg !5589
  %45 = bitcast i8* %27 to i32*, !dbg !5608
  %46 = load i32, i32* %45, align 4, !dbg !5608
  call void @llvm.dbg.value(metadata i32 %46, metadata !5528, metadata !DIExpression()), !dbg !5603
  %47 = icmp slt i32 %46, 0, !dbg !5610
  br i1 %47, label %48, label %56, !dbg !5612

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5613
  store i24 %49, i24* %15, align 8, !dbg !5613
  %50 = sub nsw i32 0, %46, !dbg !5615
  call void @llvm.dbg.value(metadata i32 %50, metadata !5528, metadata !DIExpression()), !dbg !5603
  br label %56, !dbg !5616

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5617
  %53 = icmp eq i24 %52, 0, !dbg !5617
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5619
  br label %56, !dbg !5619

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5620
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5603
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5463, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %58, metadata !5528, metadata !DIExpression()), !dbg !5603
  %60 = and i24 %57, 1024, !dbg !5620
  %61 = icmp eq i24 %60, 0, !dbg !5620
  br i1 %61, label %69, label %62, !dbg !5621

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5622
  call void @llvm.dbg.value(metadata i8* %63, metadata !5463, metadata !DIExpression()), !dbg !5589
  %64 = bitcast i8* %59 to i32*, !dbg !5622
  %65 = load i32, i32* %64, align 4, !dbg !5622
  call void @llvm.dbg.value(metadata i32 %65, metadata !5533, metadata !DIExpression()), !dbg !5623
  %66 = icmp slt i32 %65, 0, !dbg !5624
  br i1 %66, label %67, label %74, !dbg !5626

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5627
  store i24 %68, i24* %15, align 8, !dbg !5627
  br label %74, !dbg !5629

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5630
  %71 = icmp eq i24 %70, 0, !dbg !5630
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5632
  br label %74, !dbg !5632

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5633
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5603
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5603
  call void @llvm.dbg.value(metadata i8* %77, metadata !5463, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %76, metadata !5529, metadata !DIExpression()), !dbg !5603
  store i32 0, i32* %16, align 4, !dbg !5634
  store i32 0, i32* %17, align 8, !dbg !5635
  %78 = lshr i24 %75, 16, !dbg !5633
  call void @llvm.dbg.value(metadata i24 %78, metadata !5536, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5603
  %79 = lshr i24 %75, 11, !dbg !5636
  %80 = and i24 %79, 15, !dbg !5636
  %81 = zext i24 %80 to i32, !dbg !5636
  call void @llvm.dbg.value(metadata i32 %81, metadata !5537, metadata !DIExpression()), !dbg !5603
  %82 = trunc i24 %78 to i3, !dbg !5637
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5637

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5638

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5641
  call void @llvm.dbg.value(metadata i8* %85, metadata !5463, metadata !DIExpression()), !dbg !5589
  %86 = bitcast i8* %77 to i32*, !dbg !5641
  %87 = load i32, i32* %86, align 4, !dbg !5641
  %88 = sext i32 %87 to i64, !dbg !5641
  store i64 %88, i64* %20, align 8, !dbg !5643
  br label %115, !dbg !5644

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5645
  call void @llvm.dbg.value(metadata i8* %90, metadata !5463, metadata !DIExpression()), !dbg !5589
  %91 = bitcast i8* %77 to i32*, !dbg !5645
  %92 = load i32, i32* %91, align 4, !dbg !5645
  %93 = sext i32 %92 to i64, !dbg !5645
  store i64 %93, i64* %20, align 8, !dbg !5648
  br label %115, !dbg !5649

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5650
  %96 = add i32 %95, 7, !dbg !5650
  %97 = and i32 %96, -8, !dbg !5650
  %98 = inttoptr i32 %97 to i8*, !dbg !5650
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5650
  call void @llvm.dbg.value(metadata i8* %99, metadata !5463, metadata !DIExpression()), !dbg !5589
  %100 = inttoptr i32 %97 to i64*, !dbg !5650
  %101 = load i64, i64* %100, align 8, !dbg !5650
  store i64 %101, i64* %20, align 8, !dbg !5651
  br label %115, !dbg !5652

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5653
  %104 = add i32 %103, 7, !dbg !5653
  %105 = and i32 %104, -8, !dbg !5653
  %106 = inttoptr i32 %105 to i8*, !dbg !5653
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5653
  call void @llvm.dbg.value(metadata i8* %107, metadata !5463, metadata !DIExpression()), !dbg !5589
  %108 = inttoptr i32 %105 to i64*, !dbg !5653
  %109 = load i64, i64* %108, align 8, !dbg !5653
  store i64 %109, i64* %20, align 8, !dbg !5654
  br label %115, !dbg !5655

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5656
  call void @llvm.dbg.value(metadata i8* %111, metadata !5463, metadata !DIExpression()), !dbg !5589
  %112 = bitcast i8* %77 to i32*, !dbg !5656
  %113 = load i32, i32* %112, align 4, !dbg !5656
  %114 = sext i32 %113 to i64, !dbg !5657
  store i64 %114, i64* %20, align 8, !dbg !5658
  br label %115, !dbg !5659

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5660
  call void @llvm.dbg.value(metadata i8* %117, metadata !5463, metadata !DIExpression()), !dbg !5589
  %118 = trunc i24 %79 to i4, !dbg !5661
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5661

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5662
  %121 = ashr exact i64 %120, 56, !dbg !5662
  store i64 %121, i64* %20, align 8, !dbg !5665
  br label %177, !dbg !5666

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5667
  %124 = ashr exact i64 %123, 48, !dbg !5667
  store i64 %124, i64* %20, align 8, !dbg !5670
  br label %177, !dbg !5671

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5672

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5675
  call void @llvm.dbg.value(metadata i8* %127, metadata !5463, metadata !DIExpression()), !dbg !5589
  %128 = bitcast i8* %77 to i32*, !dbg !5675
  %129 = load i32, i32* %128, align 4, !dbg !5675
  %130 = zext i32 %129 to i64, !dbg !5675
  store i64 %130, i64* %20, align 8, !dbg !5677
  br label %157, !dbg !5678

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5679
  call void @llvm.dbg.value(metadata i8* %132, metadata !5463, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %132, metadata !5463, metadata !DIExpression()), !dbg !5589
  %133 = bitcast i8* %77 to i32*, !dbg !5679
  %134 = load i32, i32* %133, align 4, !dbg !5679
  %135 = zext i32 %134 to i64, !dbg !5679
  store i64 %135, i64* %20, align 8, !dbg !5679
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5681
  %138 = add i32 %137, 7, !dbg !5681
  %139 = and i32 %138, -8, !dbg !5681
  %140 = inttoptr i32 %139 to i8*, !dbg !5681
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5681
  call void @llvm.dbg.value(metadata i8* %141, metadata !5463, metadata !DIExpression()), !dbg !5589
  %142 = inttoptr i32 %139 to i64*, !dbg !5681
  %143 = load i64, i64* %142, align 8, !dbg !5681
  store i64 %143, i64* %20, align 8, !dbg !5682
  br label %157, !dbg !5683

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5684
  %146 = add i32 %145, 7, !dbg !5684
  %147 = and i32 %146, -8, !dbg !5684
  %148 = inttoptr i32 %147 to i8*, !dbg !5684
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5684
  call void @llvm.dbg.value(metadata i8* %149, metadata !5463, metadata !DIExpression()), !dbg !5589
  %150 = inttoptr i32 %147 to i64*, !dbg !5684
  %151 = load i64, i64* %150, align 8, !dbg !5684
  store i64 %151, i64* %20, align 8, !dbg !5685
  br label %157, !dbg !5686

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5687
  call void @llvm.dbg.value(metadata i8* %153, metadata !5463, metadata !DIExpression()), !dbg !5589
  %154 = bitcast i8* %77 to i32*, !dbg !5687
  %155 = load i32, i32* %154, align 4, !dbg !5687
  %156 = zext i32 %155 to i64, !dbg !5688
  store i64 %156, i64* %20, align 8, !dbg !5689
  br label %157, !dbg !5690

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5691
  call void @llvm.dbg.value(metadata i8* %159, metadata !5463, metadata !DIExpression()), !dbg !5589
  %160 = trunc i24 %79 to i4, !dbg !5692
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5692

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5693
  store i64 %162, i64* %20, align 8, !dbg !5696
  br label %177, !dbg !5697

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5698
  store i64 %164, i64* %20, align 8, !dbg !5701
  br label %177, !dbg !5702

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5703
  %167 = add i32 %166, 7, !dbg !5703
  %168 = and i32 %167, -8, !dbg !5703
  %169 = inttoptr i32 %168 to i8*, !dbg !5703
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5703
  call void @llvm.dbg.value(metadata i8* %170, metadata !5463, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %170, metadata !5463, metadata !DIExpression()), !dbg !5589
  %171 = inttoptr i32 %168 to double*, !dbg !5703
  %172 = load double, double* %171, align 8, !dbg !5703
  store double %172, double* %19, align 8, !dbg !5703
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5707
  call void @llvm.dbg.value(metadata i8* %174, metadata !5463, metadata !DIExpression()), !dbg !5589
  %175 = bitcast i8* %77 to i8**, !dbg !5707
  %176 = load i8*, i8** %175, align 4, !dbg !5707
  store i8* %176, i8** %18, align 8, !dbg !5710
  br label %177, !dbg !5711

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5603
  call void @llvm.dbg.value(metadata i8* %178, metadata !5463, metadata !DIExpression()), !dbg !5589
  %179 = and i24 %75, 3, !dbg !5712
  %180 = icmp eq i24 %179, 0, !dbg !5712
  br i1 %180, label %185, label %181, !dbg !5712

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %182, metadata !5538, metadata !DIExpression()), !dbg !5714
  %183 = icmp slt i32 %182, 0, !dbg !5715
  %184 = add i32 %182, %29, !dbg !5713
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5717
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5718

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %188, metadata !5542, metadata !DIExpression()), !dbg !5720
  %189 = icmp slt i32 %188, 0, !dbg !5721
  %190 = add i32 %29, 1, !dbg !5719
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5723
  call void @llvm.dbg.value(metadata i8* %192, metadata !5530, metadata !DIExpression()), !dbg !5603
  %193 = icmp sgt i32 %76, -1, !dbg !5724
  br i1 %193, label %194, label %196, !dbg !5726

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %195, metadata !5545, metadata !DIExpression()), !dbg !5729
  br label %241, !dbg !5730

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5731
  call void @llvm.dbg.value(metadata i32 %197, metadata !5545, metadata !DIExpression()), !dbg !5729
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5530, metadata !DIExpression()), !dbg !5603
  %199 = load i64, i64* %20, align 8, !dbg !5733
  %200 = trunc i64 %199 to i8, !dbg !5734
  store i8 %200, i8* %10, align 1, !dbg !5735
  call void @llvm.dbg.value(metadata i8* %23, metadata !5531, metadata !DIExpression()), !dbg !5603
  br label %245, !dbg !5736

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5737
  %203 = icmp eq i24 %202, 0, !dbg !5737
  %204 = trunc i24 %75 to i8, !dbg !5739
  %205 = shl i8 %204, 1, !dbg !5739
  %206 = and i8 %205, 32, !dbg !5739
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5739
  call void @llvm.dbg.value(metadata i8 %207, metadata !5532, metadata !DIExpression()), !dbg !5603
  %208 = load i64, i64* %20, align 8, !dbg !5740
  call void @llvm.dbg.value(metadata i64 %208, metadata !5470, metadata !DIExpression()), !dbg !5589
  %209 = icmp slt i64 %208, 0, !dbg !5741
  br i1 %209, label %210, label %212, !dbg !5743

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5532, metadata !DIExpression()), !dbg !5603
  %211 = sub nsw i64 0, %208, !dbg !5744
  store i64 %211, i64* %20, align 8, !dbg !5746
  br label %212, !dbg !5747

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5603
  call void @llvm.dbg.value(metadata i8 %213, metadata !5532, metadata !DIExpression()), !dbg !5603
  %214 = load i64, i64* %20, align 8, !dbg !5748
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5749
  call void @llvm.dbg.value(metadata i8* %215, metadata !5530, metadata !DIExpression()), !dbg !5603
  br label %216, !dbg !5750

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5751
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5752
  call void @llvm.dbg.value(metadata i8* %218, metadata !5530, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8 %217, metadata !5532, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.label(metadata !5588), !dbg !5753
  %219 = icmp sgt i32 %76, -1, !dbg !5754
  br i1 %219, label %222, label %220, !dbg !5755

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5756
  br label %245, !dbg !5755

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5758
  %224 = sub i32 %22, %223, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %224, metadata !5547, metadata !DIExpression()), !dbg !5759
  %225 = load i24, i24* %15, align 8, !dbg !5760
  %226 = and i24 %225, -65, !dbg !5760
  store i24 %226, i24* %15, align 8, !dbg !5760
  %227 = icmp ugt i32 %76, %224, !dbg !5761
  br i1 %227, label %228, label %245, !dbg !5763

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5764
  store i32 %229, i32* %16, align 4, !dbg !5766
  br label %245, !dbg !5767

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5768
  %232 = icmp eq i8* %231, null, !dbg !5770
  br i1 %232, label %245, label %233, !dbg !5771

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5772
  %235 = zext i32 %234 to i64, !dbg !5772
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %236, metadata !5530, metadata !DIExpression()), !dbg !5603
  %237 = load i24, i24* %15, align 8, !dbg !5775
  %238 = or i24 %237, 1048576, !dbg !5775
  store i24 %238, i24* %15, align 8, !dbg !5775
  store i8 120, i8* %21, align 1, !dbg !5776
  br label %216, !dbg !5777

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5778
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5781
  br label %363, !dbg !5782

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5783
  call void @llvm.dbg.value(metadata i32 %242, metadata !5545, metadata !DIExpression()), !dbg !5729
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5784
  call void @llvm.dbg.value(metadata i32 -1, metadata !5529, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i32 %29, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %192, metadata !5530, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8* %243, metadata !5531, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8 0, metadata !5532, metadata !DIExpression()), !dbg !5603
  %244 = icmp eq i8* %192, null, !dbg !5785
  br i1 %244, label %363, label %245, !dbg !5787, !llvm.loop !5599

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5756
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5603
  call void @llvm.dbg.value(metadata i32 0, metadata !5551, metadata !DIExpression()), !dbg !5603
  %250 = zext i8 %249 to i32, !dbg !5788
  %251 = icmp eq i8 %249, 0, !dbg !5790
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  call void @llvm.dbg.value(metadata i32 undef, metadata !5550, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  call void @llvm.dbg.value(metadata i32 undef, metadata !5550, metadata !DIExpression()), !dbg !5603
  %252 = icmp sgt i32 %58, 0, !dbg !5791
  br i1 %252, label %253, label %302, !dbg !5792

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5756
  %255 = icmp eq i24 %254, 0, !dbg !5756
  %256 = ptrtoint i8* %248 to i32, !dbg !5793
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  %257 = ptrtoint i8* %247 to i32, !dbg !5793
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  %258 = xor i1 %251, true, !dbg !5794
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  %259 = sext i1 %258 to i32, !dbg !5794
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  %260 = lshr i24 %246, 19, !dbg !5795
  %261 = and i24 %260, 1, !dbg !5795
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5795
  %263 = zext i24 %262 to i32, !dbg !5795
  %264 = add i32 %257, %259, !dbg !5795
  %265 = add i32 %256, %263, !dbg !5795
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  %266 = and i24 %246, 4194304, !dbg !5796
  %267 = icmp eq i24 %266, 0, !dbg !5796
  %268 = load i32, i32* %16, align 4, !dbg !5798
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5603
  call void @llvm.dbg.value(metadata i32 undef, metadata !5550, metadata !DIExpression()), !dbg !5603
  %269 = load i32, i32* %17, align 8, !dbg !5799
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5799
  call void @llvm.dbg.value(metadata i32 undef, metadata !5550, metadata !DIExpression()), !dbg !5603
  %271 = add i32 %264, %58, !dbg !5799
  %272 = add i32 %265, %268, !dbg !5799
  %273 = add i32 %272, %270, !dbg !5800
  %274 = sub i32 %271, %273, !dbg !5800
  call void @llvm.dbg.value(metadata i32 %274, metadata !5528, metadata !DIExpression()), !dbg !5603
  %275 = and i24 %246, 4, !dbg !5801
  %276 = icmp eq i24 %275, 0, !dbg !5801
  br i1 %276, label %277, label %302, !dbg !5802

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5552, metadata !DIExpression()), !dbg !5803
  %278 = and i24 %246, 64, !dbg !5804
  %279 = icmp eq i24 %278, 0, !dbg !5804
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5805
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5805
  %282 = select i1 %279, i32 32, i32 48, !dbg !5805
  br i1 %280, label %287, label %283, !dbg !5805

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %284, metadata !5557, metadata !DIExpression()), !dbg !5807
  %285 = icmp slt i32 %284, 0, !dbg !5808
  %286 = add i32 %29, 1, !dbg !5806
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5603
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %290, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8 undef, metadata !5552, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.value(metadata i8 %288, metadata !5532, metadata !DIExpression()), !dbg !5603
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5810
  %292 = add i32 %291, -1, !dbg !5810
  br label %293, !dbg !5810

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5811
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %295, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %294, metadata !5528, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i32 %294, metadata !5528, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5603
  %296 = icmp sgt i32 %294, 0, !dbg !5812
  br i1 %296, label %297, label %302, !dbg !5810

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5813
  call void @llvm.dbg.value(metadata i32 %298, metadata !5528, metadata !DIExpression()), !dbg !5603
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5814
  call void @llvm.dbg.value(metadata i32 %299, metadata !5563, metadata !DIExpression()), !dbg !5815
  %300 = icmp slt i32 %299, 0, !dbg !5816
  %301 = add i32 %295, 1, !dbg !5814
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %300, label %361, label %293, !llvm.loop !5818

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5603
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5603
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %305, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %304, metadata !5528, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i8 %303, metadata !5532, metadata !DIExpression()), !dbg !5603
  %306 = icmp eq i8 %303, 0, !dbg !5820
  br i1 %306, label %312, label %307, !dbg !5821

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5822
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %309, metadata !5566, metadata !DIExpression()), !dbg !5824
  %310 = icmp slt i32 %309, 0, !dbg !5825
  %311 = add i32 %305, 1, !dbg !5823
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %313, metadata !5469, metadata !DIExpression()), !dbg !5589
  %314 = lshr i24 %246, 20, !dbg !5827
  %315 = lshr i24 %246, 19, !dbg !5828
  %316 = or i24 %314, %315, !dbg !5829
  %317 = and i24 %316, 1, !dbg !5829
  %318 = icmp eq i24 %317, 0, !dbg !5829
  br i1 %318, label %323, label %319, !dbg !5830

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %320, metadata !5570, metadata !DIExpression()), !dbg !5832
  %321 = icmp slt i32 %320, 0, !dbg !5833
  %322 = add i32 %313, 1, !dbg !5831
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %324, metadata !5469, metadata !DIExpression()), !dbg !5589
  %325 = and i24 %246, 1048576, !dbg !5835
  %326 = icmp eq i24 %325, 0, !dbg !5835
  br i1 %326, label %333, label %327, !dbg !5836

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5837
  %329 = zext i8 %328 to i32, !dbg !5837
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %330, metadata !5576, metadata !DIExpression()), !dbg !5838
  %331 = icmp slt i32 %330, 0, !dbg !5839
  %332 = add i32 %324, 1, !dbg !5837
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %334, metadata !5469, metadata !DIExpression()), !dbg !5589
  %335 = load i32, i32* %16, align 4, !dbg !5841
  call void @llvm.dbg.value(metadata i32 %335, metadata !5551, metadata !DIExpression()), !dbg !5603
  br label %336, !dbg !5842

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5843
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %338, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %337, metadata !5551, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5603
  %339 = icmp sgt i32 %337, 0, !dbg !5844
  br i1 %339, label %340, label %345, !dbg !5842

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %341, metadata !5551, metadata !DIExpression()), !dbg !5603
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %342, metadata !5580, metadata !DIExpression()), !dbg !5847
  %343 = icmp slt i32 %342, 0, !dbg !5848
  %344 = add i32 %338, 1, !dbg !5846
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %343, label %361, label %336, !llvm.loop !5850

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %346, metadata !5583, metadata !DIExpression()), !dbg !5853
  %347 = icmp slt i32 %346, 0, !dbg !5854
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %349, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %304, metadata !5528, metadata !DIExpression()), !dbg !5603
  %350 = icmp sgt i32 %304, 0, !dbg !5856
  br i1 %350, label %351, label %363, !dbg !5857

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5857
  %353 = add i32 %352, %338, !dbg !5857
  br label %354, !dbg !5857

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %355, metadata !5528, metadata !DIExpression()), !dbg !5603
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5858
  call void @llvm.dbg.value(metadata i32 %356, metadata !5585, metadata !DIExpression()), !dbg !5859
  %357 = icmp slt i32 %356, 0, !dbg !5860
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5862
  call void @llvm.dbg.value(metadata i32 undef, metadata !5469, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %359, metadata !5528, metadata !DIExpression()), !dbg !5603
  %360 = icmp sgt i32 %355, 1, !dbg !5856
  br i1 %360, label %354, label %363, !dbg !5857, !llvm.loop !5863

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5600
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5593
  call void @llvm.dbg.value(metadata i32 %364, metadata !5469, metadata !DIExpression()), !dbg !5589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5600
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5589
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5865
  ret i32 %366, !dbg !5865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5866 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5870, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata i8* %1, metadata !5871, metadata !DIExpression()), !dbg !5872
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5873
  store i24 0, i24* %3, align 4, !dbg !5873
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5873
  store i8 0, i8* %4, align 1, !dbg !5873
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5873
  store i32 0, i32* %5, align 4, !dbg !5873
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5873
  store i32 0, i32* %6, align 4, !dbg !5873
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5874
  call void @llvm.dbg.value(metadata i8* %7, metadata !5871, metadata !DIExpression()), !dbg !5872
  %8 = load i8, i8* %7, align 1, !dbg !5875
  %9 = icmp eq i8 %8, 37, !dbg !5877
  br i1 %9, label %10, label %12, !dbg !5878

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5879
  call void @llvm.dbg.value(metadata i8* %11, metadata !5871, metadata !DIExpression()), !dbg !5872
  store i8 37, i8* %4, align 1, !dbg !5881
  br label %18, !dbg !5882

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5883
  call void @llvm.dbg.value(metadata i8* %13, metadata !5871, metadata !DIExpression()), !dbg !5872
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5884
  call void @llvm.dbg.value(metadata i8* %14, metadata !5871, metadata !DIExpression()), !dbg !5872
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5885
  call void @llvm.dbg.value(metadata i8* %15, metadata !5871, metadata !DIExpression()), !dbg !5872
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5886
  call void @llvm.dbg.value(metadata i8* %16, metadata !5871, metadata !DIExpression()), !dbg !5872
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5887
  call void @llvm.dbg.value(metadata i8* %17, metadata !5871, metadata !DIExpression()), !dbg !5872
  br label %18, !dbg !5888

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5872
  ret i8* %19, !dbg !5889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5890 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5894, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %1, metadata !5895, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %2, metadata !5896, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %3, metadata !5897, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 0, metadata !5898, metadata !DIExpression()), !dbg !5901
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5902

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5903
  call void @llvm.dbg.value(metadata i32 %9, metadata !5898, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i8* %8, metadata !5896, metadata !DIExpression()), !dbg !5901
  %10 = icmp ult i8* %8, %3, !dbg !5904
  br i1 %10, label %11, label %13, !dbg !5905

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5906
  br label %17, !dbg !5905

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5907

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5908
  %16 = icmp eq i8 %15, 0, !dbg !5907
  br i1 %16, label %24, label %17, !dbg !5902

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5906
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5909
  call void @llvm.dbg.value(metadata i8* %19, metadata !5896, metadata !DIExpression()), !dbg !5901
  %20 = zext i8 %18 to i32, !dbg !5910
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %21, metadata !5899, metadata !DIExpression()), !dbg !5912
  %22 = icmp slt i32 %21, 0, !dbg !5913
  %23 = add i32 %9, 1, !dbg !5915
  call void @llvm.dbg.value(metadata i32 undef, metadata !5898, metadata !DIExpression()), !dbg !5901
  br i1 %22, label %24, label %7, !llvm.loop !5916

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5901
  ret i32 %25, !dbg !5918
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5919 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5923, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5924, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i8* %2, metadata !5925, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i8* %3, metadata !5926, metadata !DIExpression()), !dbg !5933
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5934
  %6 = load i8, i8* %5, align 1, !dbg !5934
  %7 = zext i8 %6 to i32, !dbg !5935
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5936
  %9 = icmp eq i32 %8, 0, !dbg !5936
  call void @llvm.dbg.value(metadata i1 %9, metadata !5927, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5933
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %10, metadata !5928, metadata !DIExpression()), !dbg !5933
  %11 = ptrtoint i8* %3 to i32, !dbg !5938
  %12 = ptrtoint i8* %2 to i32, !dbg !5938
  %13 = sub i32 %11, %12, !dbg !5938
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5939
  call void @llvm.dbg.value(metadata i8* %14, metadata !5930, metadata !DIExpression()), !dbg !5933
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5940

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5933
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5923, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata i8* %18, metadata !5930, metadata !DIExpression()), !dbg !5933
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5941
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %25, metadata !5931, metadata !DIExpression()), !dbg !5943
  %26 = icmp ult i32 %25, 10, !dbg !5944
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5945
  %28 = add i32 %27, %25, !dbg !5943
  %29 = trunc i32 %28 to i8, !dbg !5945
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5946
  call void @llvm.dbg.value(metadata i8* %30, metadata !5930, metadata !DIExpression()), !dbg !5933
  store i8 %29, i8* %30, align 1, !dbg !5947
  call void @llvm.dbg.value(metadata i64 %22, metadata !5923, metadata !DIExpression()), !dbg !5933
  %31 = icmp uge i64 %19, %15, !dbg !5948
  %32 = icmp ugt i8* %30, %2, !dbg !5949
  %33 = and i1 %31, %32, !dbg !5949
  br i1 %33, label %17, label %34, !dbg !5950, !llvm.loop !5951

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5953
  %36 = load i24, i24* %35, align 4, !dbg !5953
  %37 = and i24 %36, 32, !dbg !5953
  %38 = icmp eq i24 %37, 0, !dbg !5953
  br i1 %38, label %44, label %39, !dbg !5955

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5956

40:                                               ; preds = %39
  br label %41, !dbg !5958

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5962
  store i24 %43, i24* %35, align 4, !dbg !5962
  br label %44, !dbg !5963

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5964 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5970, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata i8* %1, metadata !5971, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata i32 %2, metadata !5972, metadata !DIExpression()), !dbg !5973
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5974
  %5 = load i24, i24* %4, align 4, !dbg !5974
  %6 = lshr i24 %5, 11, !dbg !5974
  %7 = and i24 %6, 15, !dbg !5974
  %8 = zext i24 %7 to i32, !dbg !5974
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5975

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5976
  store i32 %2, i32* %10, align 4, !dbg !5978
  br label %28, !dbg !5979

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5980
  store i8 %12, i8* %1, align 1, !dbg !5981
  br label %28, !dbg !5982

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5983
  %15 = bitcast i8* %1 to i16*, !dbg !5984
  store i16 %14, i16* %15, align 2, !dbg !5985
  br label %28, !dbg !5986

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5987
  store i32 %2, i32* %17, align 4, !dbg !5988
  br label %28, !dbg !5989

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5990
  %20 = bitcast i8* %1 to i64*, !dbg !5991
  store i64 %19, i64* %20, align 8, !dbg !5992
  br label %28, !dbg !5993

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5994
  %23 = bitcast i8* %1 to i64*, !dbg !5995
  store i64 %22, i64* %23, align 8, !dbg !5996
  br label %28, !dbg !5997

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5998
  store i32 %2, i32* %25, align 4, !dbg !5999
  br label %28, !dbg !6000

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6001
  store i32 %2, i32* %27, align 4, !dbg !6002
  br label %28, !dbg !6003

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6004
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !6005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6008, metadata !DIExpression()), !dbg !6009
  %2 = add i32 %0, -65, !dbg !6010
  %3 = icmp ult i32 %2, 26, !dbg !6011
  %4 = zext i1 %3 to i32, !dbg !6011
  ret i32 %4, !dbg !6012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !6013 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6017, metadata !DIExpression()), !dbg !6018
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6019

2:                                                ; preds = %1
  br label %4, !dbg !6020

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6022

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6023
  ret i32 %5, !dbg !6024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6025 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6027, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i8* %1, metadata !6028, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i8 1, metadata !6029, metadata !DIExpression()), !dbg !6030
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6031

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6029, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i8* %5, metadata !6028, metadata !DIExpression()), !dbg !6030
  %6 = load i8, i8* %5, align 1, !dbg !6032
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6034

7:                                                ; preds = %4
  br label %11, !dbg !6035

8:                                                ; preds = %4
  br label %11, !dbg !6037

9:                                                ; preds = %4
  br label %11, !dbg !6038

10:                                               ; preds = %4
  br label %11, !dbg !6039

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6040
  %14 = or i24 %13, %12, !dbg !6040
  store i24 %14, i24* %3, align 4, !dbg !6040
  call void @llvm.dbg.value(metadata i8 poison, metadata !6029, metadata !DIExpression()), !dbg !6030
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6028, metadata !DIExpression()), !dbg !6030
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6029, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.value(metadata i8* %15, metadata !6028, metadata !DIExpression()), !dbg !6030
  %17 = load i24, i24* %3, align 4, !dbg !6041
  %18 = and i24 %17, 68, !dbg !6043
  %19 = icmp eq i24 %18, 68, !dbg !6043
  br i1 %19, label %20, label %22, !dbg !6043

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6044
  store i24 %21, i24* %3, align 4, !dbg !6044
  br label %22, !dbg !6046

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6048 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6050, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %1, metadata !6051, metadata !DIExpression()), !dbg !6054
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6055
  %5 = load i24, i24* %4, align 4, !dbg !6056
  %6 = or i24 %5, 128, !dbg !6056
  store i24 %6, i24* %4, align 4, !dbg !6056
  call void @llvm.dbg.value(metadata i8* %1, metadata !6051, metadata !DIExpression()), !dbg !6054
  %7 = load i8, i8* %1, align 1, !dbg !6057
  %8 = icmp eq i8 %7, 42, !dbg !6059
  br i1 %8, label %9, label %12, !dbg !6060

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6061
  store i24 %10, i24* %4, align 4, !dbg !6061
  call void @llvm.dbg.value(metadata i8* %1, metadata !6051, metadata !DIExpression()), !dbg !6054
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6063
  call void @llvm.dbg.value(metadata i8* %11, metadata !6051, metadata !DIExpression()), !dbg !6054
  store i8* %11, i8** %3, align 4, !dbg !6063
  br label %29, !dbg !6064

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8** %3, metadata !6051, metadata !DIExpression(DW_OP_deref)), !dbg !6054
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6065
  call void @llvm.dbg.value(metadata i32 %13, metadata !6053, metadata !DIExpression()), !dbg !6054
  %14 = load i8*, i8** %3, align 4, !dbg !6066
  call void @llvm.dbg.value(metadata i8* %14, metadata !6051, metadata !DIExpression()), !dbg !6054
  %15 = icmp eq i8* %14, %1, !dbg !6068
  br i1 %15, label %29, label %16, !dbg !6069

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6070
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6072
  store i32 %13, i32* %18, align 4, !dbg !6073
  %19 = lshr i32 %13, 31, !dbg !6074
  %20 = lshr i24 %17, 1, !dbg !6075
  %21 = and i24 %20, 1, !dbg !6075
  %22 = zext i24 %21 to i32, !dbg !6075
  %23 = or i32 %19, %22, !dbg !6075
  %24 = trunc i32 %23 to i24, !dbg !6075
  %25 = shl nuw nsw i24 %24, 1, !dbg !6075
  %26 = and i24 %17, -131, !dbg !6075
  %27 = or i24 %26, 128, !dbg !6075
  %28 = or i24 %25, %27, !dbg !6075
  store i24 %28, i24* %4, align 4, !dbg !6075
  br label %29, !dbg !6076

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6054
  ret i8* %30, !dbg !6077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6078 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6080, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.value(metadata i8* %1, metadata !6081, metadata !DIExpression()), !dbg !6083
  %4 = load i8, i8* %1, align 1, !dbg !6084
  %5 = icmp eq i8 %4, 46, !dbg !6085
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6086
  %7 = load i24, i24* %6, align 4, !dbg !6087
  %8 = select i1 %5, i24 512, i24 0, !dbg !6087
  %9 = and i24 %7, -513, !dbg !6087
  %10 = or i24 %9, %8, !dbg !6087
  store i24 %10, i24* %6, align 4, !dbg !6087
  br i1 %5, label %11, label %32, !dbg !6088

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6081, metadata !DIExpression()), !dbg !6083
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6089
  call void @llvm.dbg.value(metadata i8* %12, metadata !6081, metadata !DIExpression()), !dbg !6083
  store i8* %12, i8** %3, align 4, !dbg !6089
  %13 = load i8, i8* %12, align 1, !dbg !6090
  %14 = icmp eq i8 %13, 42, !dbg !6092
  br i1 %14, label %15, label %18, !dbg !6093

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6094
  store i24 %16, i24* %6, align 4, !dbg !6094
  call void @llvm.dbg.value(metadata i8* %12, metadata !6081, metadata !DIExpression()), !dbg !6083
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6096
  call void @llvm.dbg.value(metadata i8* %17, metadata !6081, metadata !DIExpression()), !dbg !6083
  store i8* %17, i8** %3, align 4, !dbg !6096
  br label %32, !dbg !6097

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6081, metadata !DIExpression(DW_OP_deref)), !dbg !6083
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6098
  call void @llvm.dbg.value(metadata i32 %19, metadata !6082, metadata !DIExpression()), !dbg !6083
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6099
  store i32 %19, i32* %20, align 4, !dbg !6100
  %21 = lshr i32 %19, 31, !dbg !6101
  %22 = load i24, i24* %6, align 4, !dbg !6102
  %23 = lshr i24 %22, 1, !dbg !6102
  %24 = and i24 %23, 1, !dbg !6102
  %25 = zext i24 %24 to i32, !dbg !6102
  %26 = or i32 %21, %25, !dbg !6102
  %27 = trunc i32 %26 to i24, !dbg !6102
  %28 = shl nuw nsw i24 %27, 1, !dbg !6102
  %29 = and i24 %22, -3, !dbg !6102
  %30 = or i24 %28, %29, !dbg !6102
  store i24 %30, i24* %6, align 4, !dbg !6102
  %31 = load i8*, i8** %3, align 4, !dbg !6103
  call void @llvm.dbg.value(metadata i8* %31, metadata !6081, metadata !DIExpression()), !dbg !6083
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6083
  ret i8* %33, !dbg !6104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6105 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6107, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.value(metadata i8* %1, metadata !6108, metadata !DIExpression()), !dbg !6109
  %3 = load i8, i8* %1, align 1, !dbg !6110
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6111

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6112
  call void @llvm.dbg.value(metadata i8* %5, metadata !6108, metadata !DIExpression()), !dbg !6109
  %6 = load i8, i8* %5, align 1, !dbg !6115
  %7 = icmp eq i8 %6, 104, !dbg !6116
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6117
  %9 = load i24, i24* %8, align 4, !dbg !6117
  %10 = and i24 %9, -30721, !dbg !6117
  br i1 %7, label %11, label %14, !dbg !6118

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6119
  store i24 %12, i24* %8, align 4, !dbg !6119
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6121
  call void @llvm.dbg.value(metadata i8* %13, metadata !6108, metadata !DIExpression()), !dbg !6109
  br label %56, !dbg !6122

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6123
  store i24 %15, i24* %8, align 4, !dbg !6123
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6125
  call void @llvm.dbg.value(metadata i8* %17, metadata !6108, metadata !DIExpression()), !dbg !6109
  %18 = load i8, i8* %17, align 1, !dbg !6127
  %19 = icmp eq i8 %18, 108, !dbg !6128
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6129
  %21 = load i24, i24* %20, align 4, !dbg !6129
  %22 = and i24 %21, -30721, !dbg !6129
  br i1 %19, label %23, label %26, !dbg !6130

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6131
  store i24 %24, i24* %20, align 4, !dbg !6131
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6133
  call void @llvm.dbg.value(metadata i8* %25, metadata !6108, metadata !DIExpression()), !dbg !6109
  br label %56, !dbg !6134

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6135
  store i24 %27, i24* %20, align 4, !dbg !6135
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6137
  %30 = load i24, i24* %29, align 4, !dbg !6138
  %31 = and i24 %30, -30721, !dbg !6138
  %32 = or i24 %31, 10240, !dbg !6138
  store i24 %32, i24* %29, align 4, !dbg !6138
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6139
  call void @llvm.dbg.value(metadata i8* %33, metadata !6108, metadata !DIExpression()), !dbg !6109
  br label %56, !dbg !6140

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6141
  %36 = load i24, i24* %35, align 4, !dbg !6142
  %37 = and i24 %36, -30721, !dbg !6142
  %38 = or i24 %37, 12288, !dbg !6142
  store i24 %38, i24* %35, align 4, !dbg !6142
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6143
  call void @llvm.dbg.value(metadata i8* %39, metadata !6108, metadata !DIExpression()), !dbg !6109
  br label %56, !dbg !6144

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6145
  %42 = load i24, i24* %41, align 4, !dbg !6146
  %43 = and i24 %42, -30721, !dbg !6146
  %44 = or i24 %43, 14336, !dbg !6146
  store i24 %44, i24* %41, align 4, !dbg !6146
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6147
  call void @llvm.dbg.value(metadata i8* %45, metadata !6108, metadata !DIExpression()), !dbg !6109
  br label %56, !dbg !6148

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6149
  %48 = load i24, i24* %47, align 4, !dbg !6150
  %49 = and i24 %48, -30723, !dbg !6150
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6151
  call void @llvm.dbg.value(metadata i8* %50, metadata !6108, metadata !DIExpression()), !dbg !6109
  %51 = or i24 %49, 16386, !dbg !6152
  store i24 %51, i24* %47, align 4, !dbg !6152
  br label %56, !dbg !6153

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6154
  %54 = load i24, i24* %53, align 4, !dbg !6155
  %55 = and i24 %54, -30721, !dbg !6155
  store i24 %55, i24* %53, align 4, !dbg !6155
  br label %56, !dbg !6156

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6108, metadata !DIExpression()), !dbg !6109
  ret i8* %57, !dbg !6157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6158 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6160, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8* %1, metadata !6161, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8 0, metadata !6162, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8* %1, metadata !6161, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6165
  %3 = load i8, i8* %1, align 1, !dbg !6166
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6167
  store i8 %3, i8* %4, align 1, !dbg !6168
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6169

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6170

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6171
  %9 = load i24, i24* %8, align 4, !dbg !6171
  %10 = and i24 %9, -458753, !dbg !6171
  %11 = or i24 %10, %7, !dbg !6171
  call void @llvm.dbg.label(metadata !6163), !dbg !6172
  %12 = and i24 %9, 30720, !dbg !6173
  %13 = icmp eq i24 %12, 16384, !dbg !6173
  %14 = zext i1 %13 to i24, !dbg !6175
  %15 = or i24 %11, %14, !dbg !6175
  %16 = icmp eq i8 %3, 99, !dbg !6176
  br i1 %16, label %17, label %43, !dbg !6178

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6179
  %19 = icmp ne i24 %18, 0, !dbg !6179
  call void @llvm.dbg.value(metadata i1 %19, metadata !6162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6165
  br label %43, !dbg !6181

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6182
  %22 = load i24, i24* %21, align 4, !dbg !6183
  %23 = and i24 %22, -458753, !dbg !6183
  %24 = or i24 %23, 262144, !dbg !6183
  call void @llvm.dbg.value(metadata i8 1, metadata !6162, metadata !DIExpression()), !dbg !6165
  br label %43, !dbg !6184

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6187
  %27 = load i24, i24* %26, align 4, !dbg !6188
  %28 = and i24 %27, -458753, !dbg !6188
  %29 = or i24 %28, 196608, !dbg !6188
  %30 = and i24 %27, 30720, !dbg !6189
  %31 = icmp eq i24 %30, 16384, !dbg !6189
  br label %43, !dbg !6191

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6192
  %34 = load i24, i24* %33, align 4, !dbg !6193
  %35 = and i24 %34, -458753, !dbg !6193
  %36 = or i24 %35, 196608, !dbg !6193
  %37 = and i24 %34, 30720, !dbg !6194
  %38 = icmp ne i24 %37, 0, !dbg !6194
  br label %43, !dbg !6196

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6197
  %41 = load i24, i24* %40, align 4, !dbg !6198
  %42 = or i24 %41, 1, !dbg !6198
  br label %43, !dbg !6199

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6200
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6201
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6202
  call void @llvm.dbg.value(metadata i8* %48, metadata !6161, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8 poison, metadata !6162, metadata !DIExpression()), !dbg !6165
  %49 = lshr i24 %44, 1, !dbg !6200
  %50 = and i24 %49, 1, !dbg !6200
  %51 = zext i24 %50 to i32, !dbg !6200
  %52 = or i32 %51, %47, !dbg !6200
  %53 = trunc i32 %52 to i24, !dbg !6200
  %54 = shl nuw nsw i24 %53, 1, !dbg !6200
  %55 = and i24 %44, -3, !dbg !6200
  %56 = or i24 %54, %55, !dbg !6200
  store i24 %56, i24* %46, align 4, !dbg !6200
  ret i8* %48, !dbg !6203
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6204 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6208, metadata !DIExpression()), !dbg !6211
  %2 = load i8*, i8** %0, align 4, !dbg !6212
  call void @llvm.dbg.value(metadata i8* %2, metadata !6209, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i32 0, metadata !6210, metadata !DIExpression()), !dbg !6211
  %3 = load i8, i8* %2, align 1, !dbg !6213
  %4 = zext i8 %3 to i32, !dbg !6214
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6215
  %6 = icmp eq i32 %5, 0, !dbg !6216
  br i1 %6, label %19, label %7, !dbg !6216

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i8* %10, metadata !6209, metadata !DIExpression()), !dbg !6211
  %11 = mul i32 %9, 10, !dbg !6217
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6219
  call void @llvm.dbg.value(metadata i8* %12, metadata !6209, metadata !DIExpression()), !dbg !6211
  %13 = add i32 %11, -48, !dbg !6220
  %14 = add i32 %13, %8, !dbg !6221
  call void @llvm.dbg.value(metadata i32 %14, metadata !6210, metadata !DIExpression()), !dbg !6211
  %15 = load i8, i8* %12, align 1, !dbg !6213
  %16 = zext i8 %15 to i32, !dbg !6214
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6215
  %18 = icmp eq i32 %17, 0, !dbg !6216
  br i1 %18, label %19, label %7, !dbg !6216, !llvm.loop !6222

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6211
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6211
  store i8* %20, i8** %0, align 4, !dbg !6224
  ret i32 %21, !dbg !6225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6228, metadata !DIExpression()), !dbg !6229
  %2 = add i32 %0, -48, !dbg !6230
  %3 = icmp ult i32 %2, 10, !dbg !6231
  %4 = zext i1 %3 to i32, !dbg !6231
  ret i32 %4, !dbg !6232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6233 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6235, !srcloc !6236
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6237, !srcloc !6238
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6239, !srcloc !6240
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6243, !srcloc !6244
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6245, !srcloc !6246
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6247, !srcloc !6248
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6249, !srcloc !6250
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6251, !srcloc !6252
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6253, !srcloc !6254
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6255, !srcloc !6256
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6257, !srcloc !6258
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6259, !srcloc !6260
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6261, !srcloc !6262
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6265, !srcloc !6266
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6267, !srcloc !6268
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6269, !srcloc !6270
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6271, !srcloc !6272
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6273, !srcloc !6274
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6275, !srcloc !6276
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6277, !srcloc !6278
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6281, !srcloc !6282
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6283, !srcloc !6284
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6285, !srcloc !6286
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6287, !srcloc !6288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6289, !srcloc !6290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6291, !srcloc !6292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6293, !srcloc !6294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6295, !srcloc !6296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6297, !srcloc !6298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6299, !srcloc !6300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6301, !srcloc !6302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6303, !srcloc !6304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !6305, !srcloc !6306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !6307, !srcloc !6308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !6309, !srcloc !6310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !6311, !srcloc !6312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6313, !srcloc !6314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6315, !srcloc !6316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6317, !srcloc !6318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6319, !srcloc !6320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !6323, !srcloc !6324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6325, !srcloc !6326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6327, !srcloc !6328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !6329, !srcloc !6330
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6331, !srcloc !6332
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6333, !srcloc !6334
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6335, !srcloc !6336
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !6337, !srcloc !6338
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6893, !srcloc !6894
  ret void, !dbg !6895
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6898, metadata !DIExpression()), !dbg !6900
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6901
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6902
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6903, !srcloc !6912
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6903
  call void @llvm.dbg.value(metadata i32 %3, metadata !6909, metadata !DIExpression()) #25, !dbg !6913
  call void @llvm.dbg.value(metadata i32 undef, metadata !6910, metadata !DIExpression()) #25, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %3, metadata !6899, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i32 %3, metadata !6914, metadata !DIExpression()) #25, !dbg !6919
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6921, !srcloc !6922
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6923
  ret i32 0, !dbg !6924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6925 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6927
  %2 = or i32 %1, 512, !dbg !6927
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6927
  ret void, !dbg !6928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6930
  %2 = or i32 %1, 1024, !dbg !6930
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6930
  ret void, !dbg !6931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6932 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6934, metadata !DIExpression()), !dbg !6935
  ret i32 0, !dbg !6936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6937 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6940, metadata !DIExpression()), !dbg !6948
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6949
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6949
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6941, metadata !DIExpression()), !dbg !6950
  call void @llvm.va_start(i8* nonnull %3), !dbg !6951
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6952
  %5 = load i32, i32* %4, align 4, !dbg !6952
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6952
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6952
  call void @llvm.va_end(i8* nonnull %3), !dbg !6953
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6954
  ret void, !dbg !6954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6955 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i8* %0, metadata !6959, metadata !DIExpression()), !dbg !6961
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6968, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i8* %1, metadata !6969, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i32 %2, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i8* %1, metadata !6971, metadata !DIExpression()), !dbg !6972
  %4 = icmp eq i32 %2, 0, !dbg !6973
  br i1 %4, label %14, label %5, !dbg !6974

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !6972
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6974

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i32 %10, metadata !6970, metadata !DIExpression()), !dbg !6972
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !6975
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !6977
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %11, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i8* %12, metadata !6971, metadata !DIExpression()), !dbg !6972
  br i1 %13, label %14, label %8, !dbg !6978, !llvm.loop !6979

14:                                               ; preds = %8, %3
  ret void, !dbg !6981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !6982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6984, metadata !DIExpression()), !dbg !6985
  %2 = add i32 %0, -1, !dbg !6986
  %3 = icmp ult i32 %2, 4, !dbg !6986
  %4 = shl i32 %2, 3, !dbg !6986
  %5 = lshr i32 1145657157, %4, !dbg !6986
  %6 = trunc i32 %5 to i8, !dbg !6986
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6986
  ret i8 %7, !dbg !6987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6992, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i32 %1, metadata !6993, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.value(metadata i32 0, metadata !6994, metadata !DIExpression()), !dbg !7004
  br label %4, !dbg !7005

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !7006
  call void @llvm.dbg.value(metadata i32 0, metadata !6996, metadata !DIExpression()), !dbg !7007
  br label %16, !dbg !7008

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6994, metadata !DIExpression()), !dbg !7004
  %6 = icmp ult i32 %5, %1, !dbg !7009
  br i1 %6, label %7, label %11, !dbg !7013

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7014
  %9 = load i8, i8* %8, align 1, !dbg !7014
  %10 = zext i8 %9 to i32, !dbg !7016
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !7017
  br label %12, !dbg !7018

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !7019
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7021
  call void @llvm.dbg.value(metadata i32 %13, metadata !6994, metadata !DIExpression()), !dbg !7004
  %14 = icmp eq i32 %13, 8, !dbg !7022
  br i1 %14, label %3, label %4, !dbg !7005, !llvm.loop !7023

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !7025
  ret void, !dbg !7026

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6996, metadata !DIExpression()), !dbg !7007
  %18 = icmp ult i32 %17, %1, !dbg !7027
  br i1 %18, label %19, label %26, !dbg !7028

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7029
  %21 = load i8, i8* %20, align 1, !dbg !7029
  call void @llvm.dbg.value(metadata i8 %21, metadata !6998, metadata !DIExpression()), !dbg !7030
  %22 = zext i8 %21 to i32, !dbg !7031
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7032
  %24 = icmp eq i32 %23, 0, !dbg !7033
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7032
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !7034
  br label %27, !dbg !7035

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !7036
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7038
  call void @llvm.dbg.value(metadata i32 %28, metadata !6996, metadata !DIExpression()), !dbg !7007
  %29 = icmp eq i32 %28, 8, !dbg !7039
  br i1 %29, label %15, label %16, !dbg !7008, !llvm.loop !7040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !7042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7044, metadata !DIExpression()), !dbg !7045
  %2 = add i32 %0, -32, !dbg !7046
  %3 = icmp ult i32 %2, 95, !dbg !7046
  %4 = zext i1 %3 to i32, !dbg !7046
  ret i32 %4, !dbg !7047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7053, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i32 %1, metadata !7054, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %2, metadata !7055, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i32 %3, metadata !7056, metadata !DIExpression()), !dbg !7057
  %5 = icmp ugt i32 %3, %1, !dbg !7058
  br i1 %5, label %8, label %6, !dbg !7060

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !7061
  br label %8, !dbg !7063

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !7064
  ret i32 %9, !dbg !7065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7070, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i8 %1, metadata !7071, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i32 %2, metadata !7072, metadata !DIExpression()), !dbg !7073
  %4 = zext i8 %1 to i32, !dbg !7074
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !7075
  ret void, !dbg !7076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !7077 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7081, metadata !DIExpression()), !dbg !7082
  %2 = shl i8 %0, 1, !dbg !7083
  %3 = icmp slt i8 %0, 0, !dbg !7084
  %4 = select i1 %3, i8 27, i8 0, !dbg !7084
  %5 = xor i8 %4, %2, !dbg !7085
  ret i8 %5, !dbg !7086
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7091, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i8* %1, metadata !7092, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i32 %2, metadata !7093, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i8* %0, metadata !7094, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i8* %1, metadata !7095, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i8 0, metadata !7096, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i32 0, metadata !7097, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8 undef, metadata !7096, metadata !DIExpression()), !dbg !7099
  %4 = icmp eq i32 %2, 0, !dbg !7101
  br i1 %4, label %5, label %7, !dbg !7103

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7104

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7097, metadata !DIExpression()), !dbg !7100
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7105
  %11 = load i8, i8* %10, align 1, !dbg !7105
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7107
  %13 = load i8, i8* %12, align 1, !dbg !7107
  %14 = xor i8 %13, %11, !dbg !7108
  %15 = zext i8 %14 to i32, !dbg !7108
  %16 = or i32 %9, %15, !dbg !7109
  call void @llvm.dbg.value(metadata i32 %16, metadata !7096, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7099
  %17 = add nuw i32 %8, 1, !dbg !7110
  call void @llvm.dbg.value(metadata i32 %17, metadata !7097, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8 undef, metadata !7096, metadata !DIExpression()), !dbg !7099
  %18 = icmp eq i32 %17, %2, !dbg !7101
  br i1 %18, label %5, label %7, !dbg !7103, !llvm.loop !7111
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7113 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7117, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.value(metadata i8* %1, metadata !7118, metadata !DIExpression()), !dbg !7119
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7120
  ret i32 %3, !dbg !7121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7122 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7127, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %1, metadata !7128, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7129, metadata !DIExpression()), !dbg !7132
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7133
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7130, metadata !DIExpression()), !dbg !7134
  %6 = icmp eq i8* %0, null, !dbg !7135
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7137
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7137
  br i1 %10, label %23, label %11, !dbg !7137

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7138
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7139
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7140
  call void @llvm.dbg.value(metadata i32 9, metadata !7131, metadata !DIExpression()), !dbg !7132
  br label %14, !dbg !7141

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7131, metadata !DIExpression()), !dbg !7132
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7143
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7146
  %16 = shl i32 %15, 2, !dbg !7147
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7148
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7149
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7150
  %18 = add nsw i32 %15, -1, !dbg !7151
  call void @llvm.dbg.value(metadata i32 %18, metadata !7131, metadata !DIExpression()), !dbg !7132
  %19 = icmp eq i32 %18, 0, !dbg !7152
  br i1 %19, label %20, label %14, !dbg !7141, !llvm.loop !7153

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7155
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7156
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7157
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7158
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7159
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7160
  br label %23, !dbg !7161

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7162
  ret i32 %24, !dbg !7162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7163 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7168, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32* %1, metadata !7169, metadata !DIExpression()), !dbg !7170
  %3 = load i32, i32* %1, align 4, !dbg !7171
  %4 = lshr i32 %3, 24, !dbg !7172
  %5 = load i8, i8* %0, align 1, !dbg !7173
  %6 = trunc i32 %4 to i8, !dbg !7173
  %7 = xor i8 %5, %6, !dbg !7173
  store i8 %7, i8* %0, align 1, !dbg !7173
  %8 = load i32, i32* %1, align 4, !dbg !7174
  %9 = lshr i32 %8, 16, !dbg !7175
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7176
  %11 = load i8, i8* %10, align 1, !dbg !7177
  %12 = trunc i32 %9 to i8, !dbg !7177
  %13 = xor i8 %11, %12, !dbg !7177
  store i8 %13, i8* %10, align 1, !dbg !7177
  %14 = load i32, i32* %1, align 4, !dbg !7178
  %15 = lshr i32 %14, 8, !dbg !7179
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7180
  %17 = load i8, i8* %16, align 1, !dbg !7181
  %18 = trunc i32 %15 to i8, !dbg !7181
  %19 = xor i8 %17, %18, !dbg !7181
  store i8 %19, i8* %16, align 1, !dbg !7181
  %20 = load i32, i32* %1, align 4, !dbg !7182
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7183
  %22 = load i8, i8* %21, align 1, !dbg !7184
  %23 = trunc i32 %20 to i8, !dbg !7184
  %24 = xor i8 %22, %23, !dbg !7184
  store i8 %24, i8* %21, align 1, !dbg !7184
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7185
  %26 = load i32, i32* %25, align 4, !dbg !7185
  %27 = lshr i32 %26, 24, !dbg !7186
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7187
  %29 = load i8, i8* %28, align 1, !dbg !7188
  %30 = trunc i32 %27 to i8, !dbg !7188
  %31 = xor i8 %29, %30, !dbg !7188
  store i8 %31, i8* %28, align 1, !dbg !7188
  %32 = load i32, i32* %25, align 4, !dbg !7189
  %33 = lshr i32 %32, 16, !dbg !7190
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7191
  %35 = load i8, i8* %34, align 1, !dbg !7192
  %36 = trunc i32 %33 to i8, !dbg !7192
  %37 = xor i8 %35, %36, !dbg !7192
  store i8 %37, i8* %34, align 1, !dbg !7192
  %38 = load i32, i32* %25, align 4, !dbg !7193
  %39 = lshr i32 %38, 8, !dbg !7194
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7195
  %41 = load i8, i8* %40, align 1, !dbg !7196
  %42 = trunc i32 %39 to i8, !dbg !7196
  %43 = xor i8 %41, %42, !dbg !7196
  store i8 %43, i8* %40, align 1, !dbg !7196
  %44 = load i32, i32* %25, align 4, !dbg !7197
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7198
  %46 = load i8, i8* %45, align 1, !dbg !7199
  %47 = trunc i32 %44 to i8, !dbg !7199
  %48 = xor i8 %46, %47, !dbg !7199
  store i8 %48, i8* %45, align 1, !dbg !7199
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7200
  %50 = load i32, i32* %49, align 4, !dbg !7200
  %51 = lshr i32 %50, 24, !dbg !7201
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7202
  %53 = load i8, i8* %52, align 1, !dbg !7203
  %54 = trunc i32 %51 to i8, !dbg !7203
  %55 = xor i8 %53, %54, !dbg !7203
  store i8 %55, i8* %52, align 1, !dbg !7203
  %56 = load i32, i32* %49, align 4, !dbg !7204
  %57 = lshr i32 %56, 16, !dbg !7205
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7206
  %59 = load i8, i8* %58, align 1, !dbg !7207
  %60 = trunc i32 %57 to i8, !dbg !7207
  %61 = xor i8 %59, %60, !dbg !7207
  store i8 %61, i8* %58, align 1, !dbg !7207
  %62 = load i32, i32* %49, align 4, !dbg !7208
  %63 = lshr i32 %62, 8, !dbg !7209
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7210
  %65 = load i8, i8* %64, align 1, !dbg !7211
  %66 = trunc i32 %63 to i8, !dbg !7211
  %67 = xor i8 %65, %66, !dbg !7211
  store i8 %67, i8* %64, align 1, !dbg !7211
  %68 = load i32, i32* %49, align 4, !dbg !7212
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7213
  %70 = load i8, i8* %69, align 1, !dbg !7214
  %71 = trunc i32 %68 to i8, !dbg !7214
  %72 = xor i8 %70, %71, !dbg !7214
  store i8 %72, i8* %69, align 1, !dbg !7214
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7215
  %74 = load i32, i32* %73, align 4, !dbg !7215
  %75 = lshr i32 %74, 24, !dbg !7216
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7217
  %77 = load i8, i8* %76, align 1, !dbg !7218
  %78 = trunc i32 %75 to i8, !dbg !7218
  %79 = xor i8 %77, %78, !dbg !7218
  store i8 %79, i8* %76, align 1, !dbg !7218
  %80 = load i32, i32* %73, align 4, !dbg !7219
  %81 = lshr i32 %80, 16, !dbg !7220
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7221
  %83 = load i8, i8* %82, align 1, !dbg !7222
  %84 = trunc i32 %81 to i8, !dbg !7222
  %85 = xor i8 %83, %84, !dbg !7222
  store i8 %85, i8* %82, align 1, !dbg !7222
  %86 = load i32, i32* %73, align 4, !dbg !7223
  %87 = lshr i32 %86, 8, !dbg !7224
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7225
  %89 = load i8, i8* %88, align 1, !dbg !7226
  %90 = trunc i32 %87 to i8, !dbg !7226
  %91 = xor i8 %89, %90, !dbg !7226
  store i8 %91, i8* %88, align 1, !dbg !7226
  %92 = load i32, i32* %73, align 4, !dbg !7227
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7228
  %94 = load i8, i8* %93, align 1, !dbg !7229
  %95 = trunc i32 %92 to i8, !dbg !7229
  %96 = xor i8 %94, %95, !dbg !7229
  store i8 %96, i8* %93, align 1, !dbg !7229
  ret void, !dbg !7230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7231 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7235, metadata !DIExpression()), !dbg !7237
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7238
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7238
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7236, metadata !DIExpression()), !dbg !7239
  %4 = load i8, i8* %0, align 1, !dbg !7240
  store i8 %4, i8* %3, align 1, !dbg !7241
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7242
  %6 = load i8, i8* %5, align 1, !dbg !7242
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7243
  store i8 %6, i8* %7, align 1, !dbg !7244
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7245
  %9 = load i8, i8* %8, align 1, !dbg !7245
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7246
  store i8 %9, i8* %10, align 1, !dbg !7247
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7248
  %12 = load i8, i8* %11, align 1, !dbg !7248
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7249
  store i8 %12, i8* %13, align 1, !dbg !7250
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7251
  %15 = load i8, i8* %14, align 1, !dbg !7251
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7252
  store i8 %15, i8* %16, align 1, !dbg !7253
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7254
  %18 = load i8, i8* %17, align 1, !dbg !7254
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7255
  store i8 %18, i8* %19, align 1, !dbg !7256
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7257
  %21 = load i8, i8* %20, align 1, !dbg !7257
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7258
  store i8 %21, i8* %22, align 1, !dbg !7259
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7260
  %24 = load i8, i8* %23, align 1, !dbg !7260
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7261
  store i8 %24, i8* %25, align 1, !dbg !7262
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7263
  %27 = load i8, i8* %26, align 1, !dbg !7263
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7264
  store i8 %27, i8* %28, align 1, !dbg !7265
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7266
  %30 = load i8, i8* %29, align 1, !dbg !7266
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7267
  store i8 %30, i8* %31, align 1, !dbg !7268
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7269
  %33 = load i8, i8* %32, align 1, !dbg !7269
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7270
  store i8 %33, i8* %34, align 1, !dbg !7271
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7272
  %36 = load i8, i8* %35, align 1, !dbg !7272
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7273
  store i8 %36, i8* %37, align 1, !dbg !7274
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7275
  %39 = load i8, i8* %38, align 1, !dbg !7275
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7276
  store i8 %39, i8* %40, align 1, !dbg !7277
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7278
  %42 = load i8, i8* %41, align 1, !dbg !7278
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7279
  store i8 %42, i8* %43, align 1, !dbg !7280
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7281
  %45 = load i8, i8* %44, align 1, !dbg !7281
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7282
  store i8 %45, i8* %46, align 1, !dbg !7283
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7284
  %48 = load i8, i8* %47, align 1, !dbg !7284
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7285
  store i8 %48, i8* %49, align 1, !dbg !7286
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7287
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7288
  ret void, !dbg !7288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7291, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 0, metadata !7292, metadata !DIExpression()), !dbg !7293
  br label %2, !dbg !7294

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7292, metadata !DIExpression()), !dbg !7293
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7296
  %5 = load i8, i8* %4, align 1, !dbg !7296
  %6 = zext i8 %5 to i32, !dbg !7299
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7299
  %8 = load i8, i8* %7, align 1, !dbg !7299
  store i8 %8, i8* %4, align 1, !dbg !7300
  %9 = add nuw nsw i32 %3, 1, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %9, metadata !7292, metadata !DIExpression()), !dbg !7293
  %10 = icmp eq i32 %9, 16, !dbg !7302
  br i1 %10, label %11, label %2, !dbg !7294, !llvm.loop !7303

11:                                               ; preds = %2
  ret void, !dbg !7305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7306 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7308, metadata !DIExpression()), !dbg !7310
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7311
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7311
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7309, metadata !DIExpression()), !dbg !7312
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7313
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7314
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7315
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7316
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7317
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7318
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7319
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7320
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7321
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7322
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7323
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7324
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7329, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i8* %1, metadata !7330, metadata !DIExpression()), !dbg !7331
  %3 = load i8, i8* %1, align 1, !dbg !7332
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7332
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7332
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7332
  %7 = load i8, i8* %1, align 1, !dbg !7332
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7332
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7332
  %10 = load i8, i8* %1, align 1, !dbg !7332
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7332
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7333
  %13 = load i8, i8* %12, align 1, !dbg !7333
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7333
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7333
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7333
  %17 = load i8, i8* %12, align 1, !dbg !7333
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7333
  %19 = load i8, i8* %12, align 1, !dbg !7333
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7334
  %21 = load i8, i8* %20, align 1, !dbg !7334
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7334
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7334
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7334
  %25 = load i8, i8* %20, align 1, !dbg !7334
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7334
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7334
  %28 = load i8, i8* %20, align 1, !dbg !7334
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7335
  %30 = load i8, i8* %29, align 1, !dbg !7335
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7335
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7335
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7335
  %34 = load i8, i8* %29, align 1, !dbg !7335
  %35 = xor i8 %9, %6, !dbg !7335
  %36 = xor i8 %35, %11, !dbg !7334
  %37 = xor i8 %36, %16, !dbg !7334
  %38 = xor i8 %37, %18, !dbg !7333
  %39 = xor i8 %38, %19, !dbg !7333
  %40 = xor i8 %39, %24, !dbg !7332
  %41 = xor i8 %40, %27, !dbg !7332
  %42 = xor i8 %41, %28, !dbg !7336
  %43 = xor i8 %42, %33, !dbg !7337
  %44 = xor i8 %43, %34, !dbg !7338
  store i8 %44, i8* %0, align 1, !dbg !7339
  %45 = load i8, i8* %1, align 1, !dbg !7340
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7340
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7340
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7340
  %49 = load i8, i8* %1, align 1, !dbg !7340
  %50 = load i8, i8* %12, align 1, !dbg !7341
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7341
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7341
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7341
  %54 = load i8, i8* %12, align 1, !dbg !7341
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7341
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7341
  %57 = load i8, i8* %12, align 1, !dbg !7341
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7341
  %59 = load i8, i8* %20, align 1, !dbg !7342
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7342
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7342
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7342
  %63 = load i8, i8* %20, align 1, !dbg !7342
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7342
  %65 = load i8, i8* %20, align 1, !dbg !7342
  %66 = load i8, i8* %29, align 1, !dbg !7343
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7343
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7343
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7343
  %70 = load i8, i8* %29, align 1, !dbg !7343
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7343
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7343
  %73 = load i8, i8* %29, align 1, !dbg !7343
  %74 = xor i8 %49, %48, !dbg !7343
  %75 = xor i8 %74, %53, !dbg !7343
  %76 = xor i8 %75, %56, !dbg !7342
  %77 = xor i8 %76, %58, !dbg !7342
  %78 = xor i8 %77, %62, !dbg !7341
  %79 = xor i8 %78, %64, !dbg !7341
  %80 = xor i8 %79, %65, !dbg !7340
  %81 = xor i8 %80, %69, !dbg !7344
  %82 = xor i8 %81, %72, !dbg !7345
  %83 = xor i8 %82, %73, !dbg !7346
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7347
  store i8 %83, i8* %84, align 1, !dbg !7348
  %85 = load i8, i8* %1, align 1, !dbg !7349
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7349
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7349
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7349
  %89 = load i8, i8* %1, align 1, !dbg !7349
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7349
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7349
  %92 = load i8, i8* %1, align 1, !dbg !7349
  %93 = load i8, i8* %12, align 1, !dbg !7350
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7350
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7350
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7350
  %97 = load i8, i8* %12, align 1, !dbg !7350
  %98 = load i8, i8* %20, align 1, !dbg !7351
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7351
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7351
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7351
  %102 = load i8, i8* %20, align 1, !dbg !7351
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7351
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7351
  %105 = load i8, i8* %20, align 1, !dbg !7351
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7351
  %107 = load i8, i8* %29, align 1, !dbg !7352
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7352
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7352
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7352
  %111 = load i8, i8* %29, align 1, !dbg !7352
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7352
  %113 = load i8, i8* %29, align 1, !dbg !7352
  %114 = xor i8 %91, %88, !dbg !7352
  %115 = xor i8 %114, %92, !dbg !7352
  %116 = xor i8 %115, %96, !dbg !7351
  %117 = xor i8 %116, %97, !dbg !7351
  %118 = xor i8 %117, %101, !dbg !7350
  %119 = xor i8 %118, %104, !dbg !7349
  %120 = xor i8 %119, %106, !dbg !7349
  %121 = xor i8 %120, %110, !dbg !7353
  %122 = xor i8 %121, %112, !dbg !7354
  %123 = xor i8 %122, %113, !dbg !7355
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7356
  store i8 %123, i8* %124, align 1, !dbg !7357
  %125 = load i8, i8* %1, align 1, !dbg !7358
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7358
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7358
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7358
  %129 = load i8, i8* %1, align 1, !dbg !7358
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7358
  %131 = load i8, i8* %1, align 1, !dbg !7358
  %132 = load i8, i8* %12, align 1, !dbg !7359
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7359
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7359
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7359
  %136 = load i8, i8* %12, align 1, !dbg !7359
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7359
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7359
  %139 = load i8, i8* %12, align 1, !dbg !7359
  %140 = load i8, i8* %20, align 1, !dbg !7360
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7360
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7360
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7360
  %144 = load i8, i8* %20, align 1, !dbg !7360
  %145 = load i8, i8* %29, align 1, !dbg !7361
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7361
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7361
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7361
  %149 = load i8, i8* %29, align 1, !dbg !7361
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7361
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7361
  %152 = load i8, i8* %29, align 1, !dbg !7361
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7361
  %154 = xor i8 %130, %128, !dbg !7361
  %155 = xor i8 %154, %131, !dbg !7361
  %156 = xor i8 %155, %135, !dbg !7360
  %157 = xor i8 %156, %138, !dbg !7359
  %158 = xor i8 %157, %139, !dbg !7359
  %159 = xor i8 %158, %143, !dbg !7358
  %160 = xor i8 %159, %144, !dbg !7358
  %161 = xor i8 %160, %148, !dbg !7362
  %162 = xor i8 %161, %151, !dbg !7363
  %163 = xor i8 %162, %153, !dbg !7364
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7365
  store i8 %163, i8* %164, align 1, !dbg !7366
  ret void, !dbg !7367
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7368 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7372, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.value(metadata i8* %1, metadata !7373, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7374, metadata !DIExpression()), !dbg !7379
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7380
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7382
  br i1 %5, label %80, label %9, !dbg !7382

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7376, metadata !DIExpression()), !dbg !7378
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7383
  br label %36, !dbg !7387

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7376, metadata !DIExpression()), !dbg !7378
  %11 = shl nuw nsw i32 %10, 2, !dbg !7388
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7392
  %13 = load i8, i8* %12, align 1, !dbg !7392
  %14 = zext i8 %13 to i32, !dbg !7392
  %15 = shl nuw i32 %14, 24, !dbg !7393
  %16 = or i32 %11, 1, !dbg !7394
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7395
  %18 = load i8, i8* %17, align 1, !dbg !7395
  %19 = zext i8 %18 to i32, !dbg !7395
  %20 = shl nuw nsw i32 %19, 16, !dbg !7396
  %21 = or i32 %20, %15, !dbg !7397
  %22 = or i32 %11, 2, !dbg !7398
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7399
  %24 = load i8, i8* %23, align 1, !dbg !7399
  %25 = zext i8 %24 to i32, !dbg !7399
  %26 = shl nuw nsw i32 %25, 8, !dbg !7400
  %27 = or i32 %21, %26, !dbg !7401
  %28 = or i32 %11, 3, !dbg !7402
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7403
  %30 = load i8, i8* %29, align 1, !dbg !7403
  %31 = zext i8 %30 to i32, !dbg !7404
  %32 = or i32 %27, %31, !dbg !7405
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7406
  store i32 %32, i32* %33, align 4, !dbg !7407
  %34 = add nuw nsw i32 %10, 1, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %34, metadata !7376, metadata !DIExpression()), !dbg !7378
  %35 = icmp eq i32 %34, 4, !dbg !7409
  br i1 %35, label %6, label %9, !dbg !7410, !llvm.loop !7411

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7383
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7376, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.value(metadata i32 %37, metadata !7377, metadata !DIExpression()), !dbg !7378
  %39 = and i32 %38, 3, !dbg !7413
  %40 = icmp eq i32 %39, 0, !dbg !7415
  br i1 %40, label %41, label %71, !dbg !7416

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7417
  %43 = lshr i32 %42, 24, !dbg !7417
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7417
  %45 = load i8, i8* %44, align 1, !dbg !7417
  %46 = zext i8 %45 to i32, !dbg !7417
  %47 = shl nuw i32 %46, 24, !dbg !7417
  %48 = lshr i32 %42, 16, !dbg !7417
  %49 = and i32 %48, 255, !dbg !7417
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7417
  %51 = load i8, i8* %50, align 1, !dbg !7417
  %52 = zext i8 %51 to i32, !dbg !7417
  %53 = shl nuw nsw i32 %52, 16, !dbg !7417
  %54 = or i32 %53, %47, !dbg !7417
  %55 = lshr i32 %42, 8, !dbg !7417
  %56 = and i32 %55, 255, !dbg !7417
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7417
  %58 = load i8, i8* %57, align 1, !dbg !7417
  %59 = zext i8 %58 to i32, !dbg !7417
  %60 = shl nuw nsw i32 %59, 8, !dbg !7417
  %61 = or i32 %54, %60, !dbg !7417
  %62 = and i32 %42, 255, !dbg !7417
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7417
  %64 = load i8, i8* %63, align 1, !dbg !7417
  %65 = zext i8 %64 to i32, !dbg !7417
  %66 = or i32 %61, %65, !dbg !7417
  %67 = lshr i32 %38, 2, !dbg !7419
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7420
  %69 = load i32, i32* %68, align 4, !dbg !7420
  %70 = xor i32 %66, %69, !dbg !7421
  call void @llvm.dbg.value(metadata i32 %70, metadata !7377, metadata !DIExpression()), !dbg !7378
  br label %71, !dbg !7422

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7423
  call void @llvm.dbg.value(metadata i32 %72, metadata !7377, metadata !DIExpression()), !dbg !7378
  %73 = add nsw i32 %38, -4, !dbg !7424
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7425
  %75 = load i32, i32* %74, align 4, !dbg !7425
  %76 = xor i32 %75, %72, !dbg !7426
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7427
  store i32 %76, i32* %77, align 4, !dbg !7428
  %78 = add nuw nsw i32 %38, 1, !dbg !7429
  call void @llvm.dbg.value(metadata i32 %78, metadata !7376, metadata !DIExpression()), !dbg !7378
  %79 = icmp eq i32 %78, 44, !dbg !7430
  br i1 %79, label %80, label %36, !dbg !7387, !llvm.loop !7431

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7378
  ret i32 %81, !dbg !7433
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7438, metadata !DIExpression()), !dbg !7439
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7440
  ret i32 %2, !dbg !7441
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7442 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7447, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i8* %1, metadata !7448, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7449, metadata !DIExpression()), !dbg !7452
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7453
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7453
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7450, metadata !DIExpression()), !dbg !7454
  %6 = icmp eq i8* %0, null, !dbg !7455
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7457
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7457
  br i1 %10, label %23, label %11, !dbg !7457

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7458
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7459
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7460
  call void @llvm.dbg.value(metadata i32 0, metadata !7451, metadata !DIExpression()), !dbg !7452
  br label %14, !dbg !7461

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7451, metadata !DIExpression()), !dbg !7452
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7463
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7466
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7467
  %16 = add nuw nsw i32 %15, 1, !dbg !7468
  %17 = shl nuw nsw i32 %16, 2, !dbg !7469
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7470
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7471
  call void @llvm.dbg.value(metadata i32 %16, metadata !7451, metadata !DIExpression()), !dbg !7452
  %19 = icmp eq i32 %16, 9, !dbg !7472
  br i1 %19, label %20, label %14, !dbg !7461, !llvm.loop !7473

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7475
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7476
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7477
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7478
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7479
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7480
  br label %23, !dbg !7481

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7452
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7482
  ret i32 %24, !dbg !7482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7485, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.value(metadata i32* %1, metadata !7486, metadata !DIExpression()), !dbg !7487
  %3 = load i32, i32* %1, align 4, !dbg !7488
  %4 = lshr i32 %3, 24, !dbg !7489
  %5 = load i8, i8* %0, align 1, !dbg !7490
  %6 = trunc i32 %4 to i8, !dbg !7490
  %7 = xor i8 %5, %6, !dbg !7490
  store i8 %7, i8* %0, align 1, !dbg !7490
  %8 = load i32, i32* %1, align 4, !dbg !7491
  %9 = lshr i32 %8, 16, !dbg !7492
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7493
  %11 = load i8, i8* %10, align 1, !dbg !7494
  %12 = trunc i32 %9 to i8, !dbg !7494
  %13 = xor i8 %11, %12, !dbg !7494
  store i8 %13, i8* %10, align 1, !dbg !7494
  %14 = load i32, i32* %1, align 4, !dbg !7495
  %15 = lshr i32 %14, 8, !dbg !7496
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7497
  %17 = load i8, i8* %16, align 1, !dbg !7498
  %18 = trunc i32 %15 to i8, !dbg !7498
  %19 = xor i8 %17, %18, !dbg !7498
  store i8 %19, i8* %16, align 1, !dbg !7498
  %20 = load i32, i32* %1, align 4, !dbg !7499
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7500
  %22 = load i8, i8* %21, align 1, !dbg !7501
  %23 = trunc i32 %20 to i8, !dbg !7501
  %24 = xor i8 %22, %23, !dbg !7501
  store i8 %24, i8* %21, align 1, !dbg !7501
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7502
  %26 = load i32, i32* %25, align 4, !dbg !7502
  %27 = lshr i32 %26, 24, !dbg !7503
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7504
  %29 = load i8, i8* %28, align 1, !dbg !7505
  %30 = trunc i32 %27 to i8, !dbg !7505
  %31 = xor i8 %29, %30, !dbg !7505
  store i8 %31, i8* %28, align 1, !dbg !7505
  %32 = load i32, i32* %25, align 4, !dbg !7506
  %33 = lshr i32 %32, 16, !dbg !7507
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7508
  %35 = load i8, i8* %34, align 1, !dbg !7509
  %36 = trunc i32 %33 to i8, !dbg !7509
  %37 = xor i8 %35, %36, !dbg !7509
  store i8 %37, i8* %34, align 1, !dbg !7509
  %38 = load i32, i32* %25, align 4, !dbg !7510
  %39 = lshr i32 %38, 8, !dbg !7511
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7512
  %41 = load i8, i8* %40, align 1, !dbg !7513
  %42 = trunc i32 %39 to i8, !dbg !7513
  %43 = xor i8 %41, %42, !dbg !7513
  store i8 %43, i8* %40, align 1, !dbg !7513
  %44 = load i32, i32* %25, align 4, !dbg !7514
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7515
  %46 = load i8, i8* %45, align 1, !dbg !7516
  %47 = trunc i32 %44 to i8, !dbg !7516
  %48 = xor i8 %46, %47, !dbg !7516
  store i8 %48, i8* %45, align 1, !dbg !7516
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7517
  %50 = load i32, i32* %49, align 4, !dbg !7517
  %51 = lshr i32 %50, 24, !dbg !7518
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7519
  %53 = load i8, i8* %52, align 1, !dbg !7520
  %54 = trunc i32 %51 to i8, !dbg !7520
  %55 = xor i8 %53, %54, !dbg !7520
  store i8 %55, i8* %52, align 1, !dbg !7520
  %56 = load i32, i32* %49, align 4, !dbg !7521
  %57 = lshr i32 %56, 16, !dbg !7522
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7523
  %59 = load i8, i8* %58, align 1, !dbg !7524
  %60 = trunc i32 %57 to i8, !dbg !7524
  %61 = xor i8 %59, %60, !dbg !7524
  store i8 %61, i8* %58, align 1, !dbg !7524
  %62 = load i32, i32* %49, align 4, !dbg !7525
  %63 = lshr i32 %62, 8, !dbg !7526
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7527
  %65 = load i8, i8* %64, align 1, !dbg !7528
  %66 = trunc i32 %63 to i8, !dbg !7528
  %67 = xor i8 %65, %66, !dbg !7528
  store i8 %67, i8* %64, align 1, !dbg !7528
  %68 = load i32, i32* %49, align 4, !dbg !7529
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7530
  %70 = load i8, i8* %69, align 1, !dbg !7531
  %71 = trunc i32 %68 to i8, !dbg !7531
  %72 = xor i8 %70, %71, !dbg !7531
  store i8 %72, i8* %69, align 1, !dbg !7531
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7532
  %74 = load i32, i32* %73, align 4, !dbg !7532
  %75 = lshr i32 %74, 24, !dbg !7533
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7534
  %77 = load i8, i8* %76, align 1, !dbg !7535
  %78 = trunc i32 %75 to i8, !dbg !7535
  %79 = xor i8 %77, %78, !dbg !7535
  store i8 %79, i8* %76, align 1, !dbg !7535
  %80 = load i32, i32* %73, align 4, !dbg !7536
  %81 = lshr i32 %80, 16, !dbg !7537
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7538
  %83 = load i8, i8* %82, align 1, !dbg !7539
  %84 = trunc i32 %81 to i8, !dbg !7539
  %85 = xor i8 %83, %84, !dbg !7539
  store i8 %85, i8* %82, align 1, !dbg !7539
  %86 = load i32, i32* %73, align 4, !dbg !7540
  %87 = lshr i32 %86, 8, !dbg !7541
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7542
  %89 = load i8, i8* %88, align 1, !dbg !7543
  %90 = trunc i32 %87 to i8, !dbg !7543
  %91 = xor i8 %89, %90, !dbg !7543
  store i8 %91, i8* %88, align 1, !dbg !7543
  %92 = load i32, i32* %73, align 4, !dbg !7544
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7545
  %94 = load i8, i8* %93, align 1, !dbg !7546
  %95 = trunc i32 %92 to i8, !dbg !7546
  %96 = xor i8 %94, %95, !dbg !7546
  store i8 %96, i8* %93, align 1, !dbg !7546
  ret void, !dbg !7547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 0, metadata !7551, metadata !DIExpression()), !dbg !7552
  br label %2, !dbg !7553

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7551, metadata !DIExpression()), !dbg !7552
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7555
  %5 = load i8, i8* %4, align 1, !dbg !7555
  %6 = zext i8 %5 to i32, !dbg !7558
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7558
  %8 = load i8, i8* %7, align 1, !dbg !7558
  store i8 %8, i8* %4, align 1, !dbg !7559
  %9 = add nuw nsw i32 %3, 1, !dbg !7560
  call void @llvm.dbg.value(metadata i32 %9, metadata !7551, metadata !DIExpression()), !dbg !7552
  %10 = icmp eq i32 %9, 16, !dbg !7561
  br i1 %10, label %11, label %2, !dbg !7553, !llvm.loop !7562

11:                                               ; preds = %2
  ret void, !dbg !7564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7565 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7567, metadata !DIExpression()), !dbg !7569
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7570
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7570
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7568, metadata !DIExpression()), !dbg !7571
  %4 = load i8, i8* %0, align 1, !dbg !7572
  store i8 %4, i8* %3, align 1, !dbg !7573
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7574
  %6 = load i8, i8* %5, align 1, !dbg !7574
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7575
  store i8 %6, i8* %7, align 1, !dbg !7576
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7577
  %9 = load i8, i8* %8, align 1, !dbg !7577
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7578
  store i8 %9, i8* %10, align 1, !dbg !7579
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7580
  %12 = load i8, i8* %11, align 1, !dbg !7580
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7581
  store i8 %12, i8* %13, align 1, !dbg !7582
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7583
  %15 = load i8, i8* %14, align 1, !dbg !7583
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7584
  store i8 %15, i8* %16, align 1, !dbg !7585
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7586
  %18 = load i8, i8* %17, align 1, !dbg !7586
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7587
  store i8 %18, i8* %19, align 1, !dbg !7588
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7589
  %21 = load i8, i8* %20, align 1, !dbg !7589
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7590
  store i8 %21, i8* %22, align 1, !dbg !7591
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7592
  %24 = load i8, i8* %23, align 1, !dbg !7592
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7593
  store i8 %24, i8* %25, align 1, !dbg !7594
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7595
  %27 = load i8, i8* %26, align 1, !dbg !7595
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7596
  store i8 %27, i8* %28, align 1, !dbg !7597
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7598
  %30 = load i8, i8* %29, align 1, !dbg !7598
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7599
  store i8 %30, i8* %31, align 1, !dbg !7600
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7601
  %33 = load i8, i8* %32, align 1, !dbg !7601
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7602
  store i8 %33, i8* %34, align 1, !dbg !7603
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7604
  %36 = load i8, i8* %35, align 1, !dbg !7604
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7605
  store i8 %36, i8* %37, align 1, !dbg !7606
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7607
  %39 = load i8, i8* %38, align 1, !dbg !7607
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7608
  store i8 %39, i8* %40, align 1, !dbg !7609
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7610
  %42 = load i8, i8* %41, align 1, !dbg !7610
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7611
  store i8 %42, i8* %43, align 1, !dbg !7612
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7613
  %45 = load i8, i8* %44, align 1, !dbg !7613
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7614
  store i8 %45, i8* %46, align 1, !dbg !7615
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7616
  %48 = load i8, i8* %47, align 1, !dbg !7616
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7617
  store i8 %48, i8* %49, align 1, !dbg !7618
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7619
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7620
  ret void, !dbg !7620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7621 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7623, metadata !DIExpression()), !dbg !7625
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7626
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7626
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7624, metadata !DIExpression()), !dbg !7627
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7628
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7629
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7630
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7631
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7632
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7633
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7634
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7635
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7636
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7637
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7638
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7639
  ret void, !dbg !7639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i8* %1, metadata !7643, metadata !DIExpression()), !dbg !7644
  %3 = load i8, i8* %1, align 1, !dbg !7645
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7646
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7647
  %6 = load i8, i8* %5, align 1, !dbg !7647
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7647
  %8 = load i8, i8* %5, align 1, !dbg !7647
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7648
  %10 = load i8, i8* %9, align 1, !dbg !7648
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7649
  %12 = load i8, i8* %11, align 1, !dbg !7649
  %13 = xor i8 %7, %4, !dbg !7647
  %14 = xor i8 %13, %8, !dbg !7650
  %15 = xor i8 %14, %10, !dbg !7651
  %16 = xor i8 %15, %12, !dbg !7652
  store i8 %16, i8* %0, align 1, !dbg !7653
  %17 = load i8, i8* %1, align 1, !dbg !7654
  %18 = load i8, i8* %5, align 1, !dbg !7655
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7656
  %20 = load i8, i8* %9, align 1, !dbg !7657
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7657
  %22 = load i8, i8* %9, align 1, !dbg !7657
  %23 = load i8, i8* %11, align 1, !dbg !7658
  %24 = xor i8 %19, %17, !dbg !7657
  %25 = xor i8 %24, %21, !dbg !7659
  %26 = xor i8 %25, %22, !dbg !7660
  %27 = xor i8 %26, %23, !dbg !7661
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7662
  store i8 %27, i8* %28, align 1, !dbg !7663
  %29 = load i8, i8* %1, align 1, !dbg !7664
  %30 = load i8, i8* %5, align 1, !dbg !7665
  %31 = load i8, i8* %9, align 1, !dbg !7666
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7667
  %33 = load i8, i8* %11, align 1, !dbg !7668
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7668
  %35 = load i8, i8* %11, align 1, !dbg !7668
  %36 = xor i8 %30, %29, !dbg !7668
  %37 = xor i8 %36, %32, !dbg !7669
  %38 = xor i8 %37, %34, !dbg !7670
  %39 = xor i8 %38, %35, !dbg !7671
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7672
  store i8 %39, i8* %40, align 1, !dbg !7673
  %41 = load i8, i8* %1, align 1, !dbg !7674
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7674
  %43 = load i8, i8* %1, align 1, !dbg !7674
  %44 = xor i8 %43, %42, !dbg !7674
  %45 = load i8, i8* %5, align 1, !dbg !7675
  %46 = xor i8 %44, %45, !dbg !7676
  %47 = load i8, i8* %9, align 1, !dbg !7677
  %48 = xor i8 %46, %47, !dbg !7678
  %49 = load i8, i8* %11, align 1, !dbg !7679
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7680
  %51 = xor i8 %48, %50, !dbg !7681
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7682
  store i8 %51, i8* %52, align 1, !dbg !7683
  ret void, !dbg !7684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7685 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7691, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 %1, metadata !7692, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %2, metadata !7693, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 %3, metadata !7694, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %4, metadata !7695, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7696, metadata !DIExpression()), !dbg !7700
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7701
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7701
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7697, metadata !DIExpression()), !dbg !7702
  %9 = icmp eq i8* %0, null, !dbg !7703
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7705
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7705
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7705
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7705
  %18 = xor i1 %17, true, !dbg !7705
  %19 = or i32 %3, %1, !dbg !7705
  %20 = and i32 %19, 15, !dbg !7705
  %21 = icmp eq i32 %20, 0, !dbg !7705
  %22 = and i1 %21, %18, !dbg !7705
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7705
  br i1 %25, label %26, label %52, !dbg !7705

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7706
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7707
  call void @llvm.dbg.value(metadata i8* %0, metadata !7691, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7700
  call void @llvm.dbg.value(metadata i32 0, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 0, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %2, metadata !7693, metadata !DIExpression()), !dbg !7700
  br i1 %14, label %52, label %29, !dbg !7708

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7710
  call void @llvm.dbg.value(metadata i8* %30, metadata !7691, metadata !DIExpression()), !dbg !7700
  br label %31, !dbg !7708

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 %33, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %34, metadata !7691, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %35, metadata !7693, metadata !DIExpression()), !dbg !7700
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7711
  call void @llvm.dbg.value(metadata i8* %36, metadata !7693, metadata !DIExpression()), !dbg !7700
  %37 = load i8, i8* %35, align 1, !dbg !7714
  %38 = add i32 %32, 1, !dbg !7715
  call void @llvm.dbg.value(metadata i32 %38, metadata !7699, metadata !DIExpression()), !dbg !7700
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7716
  %40 = load i8, i8* %39, align 1, !dbg !7717
  %41 = xor i8 %40, %37, !dbg !7717
  store i8 %41, i8* %39, align 1, !dbg !7717
  %42 = icmp eq i32 %38, 16, !dbg !7718
  br i1 %42, label %43, label %47, !dbg !7720

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7721
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7723
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7724
  call void @llvm.dbg.value(metadata i8* %46, metadata !7691, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 0, metadata !7699, metadata !DIExpression()), !dbg !7700
  br label %47, !dbg !7725

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7700
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7726
  call void @llvm.dbg.value(metadata i32 %49, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %48, metadata !7691, metadata !DIExpression()), !dbg !7700
  %50 = add nuw i32 %33, 1, !dbg !7727
  call void @llvm.dbg.value(metadata i32 %50, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %36, metadata !7693, metadata !DIExpression()), !dbg !7700
  %51 = icmp eq i32 %50, %3, !dbg !7728
  br i1 %51, label %52, label %31, !dbg !7708, !llvm.loop !7729

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7731
  ret i32 %53, !dbg !7731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7732 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 %1, metadata !7735, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %2, metadata !7736, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 %3, metadata !7737, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %4, metadata !7738, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7739, metadata !DIExpression()), !dbg !7744
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7745
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7745
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7740, metadata !DIExpression()), !dbg !7746
  %9 = icmp eq i8* %0, null, !dbg !7747
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7749
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7749
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7749
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7749
  %18 = xor i1 %17, true, !dbg !7749
  %19 = or i32 %3, %1, !dbg !7749
  %20 = and i32 %19, 15, !dbg !7749
  %21 = icmp eq i32 %20, 0, !dbg !7749
  %22 = and i1 %21, %18, !dbg !7749
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7749
  %25 = xor i1 %24, true, !dbg !7749
  %26 = or i1 %14, %25, !dbg !7749
  %27 = zext i1 %24 to i32, !dbg !7749
  br i1 %26, label %51, label %28, !dbg !7749

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7743, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 %30, metadata !7742, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %31, metadata !7741, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %32, metadata !7734, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %33, metadata !7736, metadata !DIExpression()), !dbg !7744
  %34 = and i32 %30, 15, !dbg !7750
  %35 = icmp eq i32 %34, 0, !dbg !7755
  br i1 %35, label %36, label %39, !dbg !7756

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7757
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7759
  call void @llvm.dbg.value(metadata i8* %38, metadata !7736, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i32 0, metadata !7743, metadata !DIExpression()), !dbg !7744
  br label %39, !dbg !7760

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7761
  call void @llvm.dbg.value(metadata i32 %41, metadata !7743, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %40, metadata !7736, metadata !DIExpression()), !dbg !7744
  %42 = add i32 %41, 1, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %42, metadata !7743, metadata !DIExpression()), !dbg !7744
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7763
  %44 = load i8, i8* %43, align 1, !dbg !7763
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7764
  call void @llvm.dbg.value(metadata i8* %45, metadata !7741, metadata !DIExpression()), !dbg !7744
  %46 = load i8, i8* %31, align 1, !dbg !7765
  %47 = xor i8 %46, %44, !dbg !7766
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7767
  call void @llvm.dbg.value(metadata i8* %48, metadata !7734, metadata !DIExpression()), !dbg !7744
  store i8 %47, i8* %32, align 1, !dbg !7768
  %49 = add nuw i32 %30, 1, !dbg !7769
  call void @llvm.dbg.value(metadata i32 %49, metadata !7742, metadata !DIExpression()), !dbg !7744
  %50 = icmp eq i32 %49, %3, !dbg !7770
  br i1 %50, label %51, label %28, !dbg !7771, !llvm.loop !7772

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7744
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7774
  ret i32 %52, !dbg !7774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7775 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7781, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %1, metadata !7782, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %2, metadata !7783, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %3, metadata !7784, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %4, metadata !7785, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7786, metadata !DIExpression()), !dbg !7791
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7792
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7792
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7787, metadata !DIExpression()), !dbg !7793
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7794
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7794
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7788, metadata !DIExpression()), !dbg !7795
  %11 = icmp eq i8* %0, null, !dbg !7796
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7798
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7798
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7798
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7798
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7798
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7798
  br i1 %23, label %86, label %24, !dbg !7798

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7799
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7800
  %27 = load i8, i8* %26, align 1, !dbg !7800
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7801
  %29 = load i8, i8* %28, align 1, !dbg !7801
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7802
  %31 = load i8, i8* %30, align 1, !dbg !7802
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7803
  %33 = load i8, i8* %32, align 1, !dbg !7803
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  call void @llvm.dbg.value(metadata i32 0, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %0, metadata !7781, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %2, metadata !7783, metadata !DIExpression()), !dbg !7791
  %34 = zext i8 %29 to i32, !dbg !7801
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %35 = shl nuw nsw i32 %34, 16, !dbg !7804
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %36 = zext i8 %27 to i32, !dbg !7800
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %37 = shl nuw i32 %36, 24, !dbg !7805
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %38 = or i32 %35, %37, !dbg !7806
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %39 = zext i8 %31 to i32, !dbg !7802
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %40 = shl nuw nsw i32 %39, 8, !dbg !7807
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %41 = or i32 %38, %40, !dbg !7808
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %42 = zext i8 %33 to i32, !dbg !7809
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7789, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7791
  %43 = or i32 %41, %42, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %43, metadata !7789, metadata !DIExpression()), !dbg !7791
  br label %44, !dbg !7811

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %50, metadata !7789, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %51, metadata !7781, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %52, metadata !7783, metadata !DIExpression()), !dbg !7791
  %53 = and i32 %49, 15, !dbg !7813
  %54 = icmp eq i32 %53, 0, !dbg !7817
  br i1 %54, label %55, label %67, !dbg !7818

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7819
  %57 = icmp eq i32 %56, 0, !dbg !7819
  br i1 %57, label %86, label %58, !dbg !7822

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7823
  call void @llvm.dbg.value(metadata i32 %59, metadata !7789, metadata !DIExpression()), !dbg !7791
  %60 = lshr i32 %59, 24, !dbg !7825
  %61 = trunc i32 %60 to i8, !dbg !7826
  store i8 %61, i8* %26, align 1, !dbg !7827
  %62 = lshr i32 %59, 16, !dbg !7828
  %63 = trunc i32 %62 to i8, !dbg !7829
  store i8 %63, i8* %28, align 1, !dbg !7830
  %64 = lshr i32 %59, 8, !dbg !7831
  %65 = trunc i32 %64 to i8, !dbg !7832
  store i8 %65, i8* %30, align 1, !dbg !7833
  %66 = trunc i32 %59 to i8, !dbg !7834
  store i8 %66, i8* %32, align 1, !dbg !7835
  br label %67, !dbg !7836

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7791
  call void @llvm.dbg.value(metadata i32 %72, metadata !7789, metadata !DIExpression()), !dbg !7791
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7837
  %74 = load i8, i8* %73, align 1, !dbg !7837
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7838
  call void @llvm.dbg.value(metadata i8* %75, metadata !7783, metadata !DIExpression()), !dbg !7791
  %76 = load i8, i8* %52, align 1, !dbg !7839
  %77 = xor i8 %76, %74, !dbg !7840
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7841
  call void @llvm.dbg.value(metadata i8* %78, metadata !7781, metadata !DIExpression()), !dbg !7791
  store i8 %77, i8* %51, align 1, !dbg !7842
  %79 = add nuw i32 %49, 1, !dbg !7843
  call void @llvm.dbg.value(metadata i32 %79, metadata !7790, metadata !DIExpression()), !dbg !7791
  %80 = icmp eq i32 %79, %3, !dbg !7844
  br i1 %80, label %81, label %44, !dbg !7811, !llvm.loop !7845

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7847
  store i8 %71, i8* %82, align 1, !dbg !7848
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7849
  store i8 %70, i8* %83, align 1, !dbg !7850
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7851
  store i8 %69, i8* %84, align 1, !dbg !7852
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7853
  store i8 %68, i8* %85, align 1, !dbg !7854
  br label %86, !dbg !7855

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7791
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7856
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7856
  ret i32 %87, !dbg !7856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7857 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7862, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7863, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i8* %2, metadata !7864, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 %3, metadata !7865, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 %4, metadata !7866, metadata !DIExpression()), !dbg !7867
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7868
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7870
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7870
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7870
  br i1 %12, label %23, label %13, !dbg !7870

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7871
  %15 = icmp ult i32 %14, 13, !dbg !7871
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7871
  br i1 %18, label %19, label %23, !dbg !7871

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7874
  store i32 %4, i32* %20, align 4, !dbg !7875
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7876
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7877
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7878
  store i8* %2, i8** %22, align 4, !dbg !7879
  br label %23, !dbg !7880

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7867
  ret i32 %24, !dbg !7881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7882 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i32 %1, metadata !7887, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i8* %2, metadata !7888, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i32 %3, metadata !7889, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i8* %4, metadata !7890, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i32 %5, metadata !7891, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7892, metadata !DIExpression()), !dbg !7896
  %10 = icmp eq i8* %0, null, !dbg !7897
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7899
  br i1 %12, label %85, label %13, !dbg !7899

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7900
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7901
  br i1 %16, label %85, label %17, !dbg !7901

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7902
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7903
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7903
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7903
  br i1 %24, label %85, label %25, !dbg !7903

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7904
  %27 = load i32, i32* %26, align 4, !dbg !7904
  %28 = add i32 %27, %5, !dbg !7905
  %29 = icmp ugt i32 %28, %1, !dbg !7906
  br i1 %29, label %85, label %30, !dbg !7907

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7908
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7908
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7893, metadata !DIExpression()), !dbg !7909
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7910
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7910
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7894, metadata !DIExpression()), !dbg !7911
  %33 = select i1 %18, i32 64, i32 0, !dbg !7912
  %34 = shl i32 %27, 2, !dbg !7913
  %35 = add i32 %34, 248, !dbg !7913
  %36 = and i32 %35, 248, !dbg !7913
  %37 = or i32 %36, %33, !dbg !7914
  %38 = trunc i32 %37 to i8, !dbg !7915
  %39 = or i8 %38, 1, !dbg !7915
  store i8 %39, i8* %31, align 1, !dbg !7916
  call void @llvm.dbg.value(metadata i32 1, metadata !7895, metadata !DIExpression()), !dbg !7896
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7895, metadata !DIExpression()), !dbg !7896
  br label %42, !dbg !7917

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7895, metadata !DIExpression()), !dbg !7896
  %44 = add nsw i32 %43, -1, !dbg !7919
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7922
  %46 = load i8, i8* %45, align 1, !dbg !7922
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7923
  store i8 %46, i8* %47, align 1, !dbg !7924
  %48 = add nuw nsw i32 %43, 1, !dbg !7925
  call void @llvm.dbg.value(metadata i32 %48, metadata !7895, metadata !DIExpression()), !dbg !7896
  %49 = icmp eq i32 %48, 14, !dbg !7926
  br i1 %49, label %50, label %42, !dbg !7917, !llvm.loop !7927

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7929
  %52 = trunc i32 %51 to i8, !dbg !7930
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7931
  store i8 %52, i8* %53, align 1, !dbg !7932
  %54 = trunc i32 %5 to i8, !dbg !7933
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7934
  store i8 %54, i8* %55, align 1, !dbg !7935
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7936
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7936
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !7937
  br i1 %18, label %59, label %61, !dbg !7938

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7939
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !7942
  br label %61, !dbg !7943

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7944

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7945
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !7948
  br label %64, !dbg !7949

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7950
  store i8 0, i8* %55, align 1, !dbg !7951
  store i8 0, i8* %53, align 1, !dbg !7952
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7953
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !7954
  store i8 0, i8* %55, align 1, !dbg !7955
  store i8 0, i8* %53, align 1, !dbg !7956
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7957
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !7958
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7886, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7896
  call void @llvm.dbg.value(metadata i32 0, metadata !7895, metadata !DIExpression()), !dbg !7896
  %68 = load i32, i32* %26, align 4, !dbg !7959
  %69 = icmp eq i32 %68, 0, !dbg !7962
  br i1 %69, label %84, label %70, !dbg !7963

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7964
  call void @llvm.dbg.value(metadata i8* %71, metadata !7886, metadata !DIExpression()), !dbg !7896
  br label %72, !dbg !7963

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata i8* %74, metadata !7886, metadata !DIExpression()), !dbg !7896
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7965
  %76 = load i8, i8* %75, align 1, !dbg !7965
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7967
  %78 = load i8, i8* %77, align 1, !dbg !7967
  %79 = xor i8 %78, %76, !dbg !7968
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7969
  call void @llvm.dbg.value(metadata i8* %80, metadata !7886, metadata !DIExpression()), !dbg !7896
  store i8 %79, i8* %74, align 1, !dbg !7970
  %81 = add nuw i32 %73, 1, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %81, metadata !7895, metadata !DIExpression()), !dbg !7896
  %82 = load i32, i32* %26, align 4, !dbg !7959
  %83 = icmp ult i32 %81, %82, !dbg !7962
  br i1 %83, label %72, label %84, !dbg !7963, !llvm.loop !7972

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7974
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7974
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7896
  ret i32 %86, !dbg !7974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7979, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i8* %1, metadata !7980, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i32 %2, metadata !7981, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i32 %3, metadata !7982, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7983, metadata !DIExpression()), !dbg !7985
  %6 = icmp eq i32 %3, 0, !dbg !7986
  br i1 %6, label %17, label %7, !dbg !7988

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7989
  %9 = load i8, i8* %0, align 1, !dbg !7991
  %10 = trunc i32 %8 to i8, !dbg !7991
  %11 = xor i8 %9, %10, !dbg !7991
  store i8 %11, i8* %0, align 1, !dbg !7991
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7992
  %13 = load i8, i8* %12, align 1, !dbg !7993
  %14 = trunc i32 %2 to i8, !dbg !7993
  %15 = xor i8 %13, %14, !dbg !7993
  store i8 %15, i8* %12, align 1, !dbg !7993
  %16 = add i32 %2, 2, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %16, metadata !7981, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i32 2, metadata !7984, metadata !DIExpression()), !dbg !7985
  br label %17, !dbg !7995

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7996
  call void @llvm.dbg.value(metadata i32 %19, metadata !7984, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i32 %18, metadata !7981, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i8* %1, metadata !7980, metadata !DIExpression()), !dbg !7985
  %20 = icmp ult i32 %19, %18, !dbg !7997
  br i1 %20, label %21, label %39, !dbg !7998

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7984, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i8* %23, metadata !7980, metadata !DIExpression()), !dbg !7985
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %24, metadata !7980, metadata !DIExpression()), !dbg !7985
  %25 = load i8, i8* %23, align 1, !dbg !8001
  %26 = add i32 %22, 1, !dbg !8002
  call void @llvm.dbg.value(metadata i32 %26, metadata !7984, metadata !DIExpression()), !dbg !7985
  %27 = and i32 %22, 15, !dbg !8003
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !8004
  %29 = load i8, i8* %28, align 1, !dbg !8005
  %30 = xor i8 %29, %25, !dbg !8005
  store i8 %30, i8* %28, align 1, !dbg !8005
  %31 = and i32 %26, 15, !dbg !8006
  %32 = icmp eq i32 %31, 0, !dbg !8008
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !8009
  br i1 %34, label %35, label %37, !dbg !8009

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !8010
  br label %37, !dbg !8012

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7984, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i8* %24, metadata !7980, metadata !DIExpression()), !dbg !7985
  %38 = icmp eq i32 %26, %18, !dbg !7997
  br i1 %38, label %39, label %21, !dbg !7998, !llvm.loop !8013

39:                                               ; preds = %37, %17
  ret void, !dbg !8015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !8016 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8021, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %1, metadata !8022, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %2, metadata !8023, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %3, metadata !8024, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %4, metadata !8025, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !8026, metadata !DIExpression()), !dbg !8031
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !8032
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8032
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !8027, metadata !DIExpression()), !dbg !8033
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8034
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8034
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8028, metadata !DIExpression()), !dbg !8035
  %11 = icmp eq i8* %0, null, !dbg !8036
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !8038
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !8038
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !8038
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !8038
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !8038
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !8038
  br i1 %23, label %63, label %24, !dbg !8038

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !8039
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8040
  %27 = load i8, i8* %26, align 1, !dbg !8040
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8041
  %29 = load i8, i8* %28, align 1, !dbg !8041
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !8029, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8031
  call void @llvm.dbg.value(metadata i32 0, metadata !8030, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %0, metadata !8021, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %2, metadata !8023, metadata !DIExpression()), !dbg !8031
  %30 = zext i8 %27 to i16, !dbg !8040
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !8029, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8031
  %31 = shl nuw i16 %30, 8, !dbg !8042
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !8029, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8031
  %32 = zext i8 %29 to i16, !dbg !8043
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !8029, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8031
  %33 = or i16 %31, %32, !dbg !8044
  call void @llvm.dbg.value(metadata i16 %33, metadata !8029, metadata !DIExpression()), !dbg !8031
  br label %34, !dbg !8045

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8030, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i16 %36, metadata !8029, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %37, metadata !8021, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %38, metadata !8023, metadata !DIExpression()), !dbg !8031
  %39 = and i32 %35, 15, !dbg !8047
  %40 = icmp eq i32 %39, 0, !dbg !8051
  br i1 %40, label %41, label %48, !dbg !8052

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !8053
  call void @llvm.dbg.value(metadata i16 %42, metadata !8029, metadata !DIExpression()), !dbg !8031
  %43 = lshr i16 %42, 8, !dbg !8055
  %44 = trunc i16 %43 to i8, !dbg !8056
  store i8 %44, i8* %26, align 1, !dbg !8057
  %45 = trunc i16 %42 to i8, !dbg !8058
  store i8 %45, i8* %28, align 1, !dbg !8059
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !8060
  %47 = icmp eq i32 %46, 0, !dbg !8060
  br i1 %47, label %63, label %48, !dbg !8062

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !8031
  call void @llvm.dbg.value(metadata i16 %49, metadata !8029, metadata !DIExpression()), !dbg !8031
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !8063
  %51 = load i8, i8* %50, align 1, !dbg !8063
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !8064
  call void @llvm.dbg.value(metadata i8* %52, metadata !8023, metadata !DIExpression()), !dbg !8031
  %53 = load i8, i8* %38, align 1, !dbg !8065
  %54 = xor i8 %53, %51, !dbg !8066
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8067
  call void @llvm.dbg.value(metadata i8* %55, metadata !8021, metadata !DIExpression()), !dbg !8031
  store i8 %54, i8* %37, align 1, !dbg !8068
  %56 = add nuw i32 %35, 1, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %56, metadata !8030, metadata !DIExpression()), !dbg !8031
  %57 = icmp eq i32 %56, %3, !dbg !8070
  br i1 %57, label %58, label %34, !dbg !8045, !llvm.loop !8071

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !8073
  %60 = load i8, i8* %28, align 1, !dbg !8074
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !8075
  store i8 %59, i8* %61, align 1, !dbg !8076
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !8077
  store i8 %60, i8* %62, align 1, !dbg !8078
  br label %63, !dbg !8079

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8080
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8080
  ret void, !dbg !8080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !8081 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8083, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i32 %1, metadata !8084, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8* %2, metadata !8085, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i32 %3, metadata !8086, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8* %4, metadata !8087, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i32 %5, metadata !8088, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !8089, metadata !DIExpression()), !dbg !8093
  %10 = icmp eq i8* %0, null, !dbg !8094
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8096
  br i1 %12, label %106, label %13, !dbg !8096

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8097
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8098
  br i1 %16, label %106, label %17, !dbg !8098

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8099
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8100
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8100
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8100
  br i1 %24, label %106, label %25, !dbg !8100

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8101
  %27 = load i32, i32* %26, align 4, !dbg !8101
  %28 = sub i32 %5, %27, !dbg !8102
  %29 = icmp ugt i32 %28, %1, !dbg !8103
  br i1 %29, label %106, label %30, !dbg !8104

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8105
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8105
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8090, metadata !DIExpression()), !dbg !8106
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8107
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8107
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !8091, metadata !DIExpression()), !dbg !8108
  store i8 1, i8* %31, align 1, !dbg !8109
  call void @llvm.dbg.value(metadata i32 1, metadata !8092, metadata !DIExpression()), !dbg !8093
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8092, metadata !DIExpression()), !dbg !8093
  br label %35, !dbg !8110

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !8092, metadata !DIExpression()), !dbg !8093
  %37 = add nsw i32 %36, -1, !dbg !8112
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8115
  %39 = load i8, i8* %38, align 1, !dbg !8115
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8116
  store i8 %39, i8* %40, align 1, !dbg !8117
  %41 = add nuw nsw i32 %36, 1, !dbg !8118
  call void @llvm.dbg.value(metadata i32 %41, metadata !8092, metadata !DIExpression()), !dbg !8093
  %42 = icmp eq i32 %41, 14, !dbg !8119
  br i1 %42, label %43, label %35, !dbg !8110, !llvm.loop !8120

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8122
  store i8 0, i8* %44, align 1, !dbg !8123
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8124
  store i8 0, i8* %45, align 1, !dbg !8125
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8126
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8126
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8127
  store i8 0, i8* %44, align 1, !dbg !8128
  store i8 0, i8* %45, align 1, !dbg !8129
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8130
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8131
  call void @llvm.dbg.value(metadata i32 0, metadata !8092, metadata !DIExpression()), !dbg !8093
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8092, metadata !DIExpression()), !dbg !8093
  %51 = icmp eq i32 %50, 0, !dbg !8132
  br i1 %51, label %66, label %52, !dbg !8135

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8135

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !8092, metadata !DIExpression()), !dbg !8093
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8136
  %59 = load i8, i8* %58, align 1, !dbg !8138
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8139
  %61 = load i8, i8* %60, align 1, !dbg !8139
  %62 = xor i8 %61, %59, !dbg !8140
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8141
  store i8 %62, i8* %63, align 1, !dbg !8142
  %64 = add nuw i32 %57, 1, !dbg !8143
  call void @llvm.dbg.value(metadata i32 %64, metadata !8092, metadata !DIExpression()), !dbg !8093
  %65 = icmp eq i32 %64, %50, !dbg !8132
  br i1 %65, label %66, label %56, !dbg !8135, !llvm.loop !8144

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8146
  %68 = shl i32 %50, 2, !dbg !8147
  %69 = add i32 %68, 248, !dbg !8147
  %70 = and i32 %69, 248, !dbg !8147
  %71 = or i32 %70, %67, !dbg !8148
  %72 = trunc i32 %71 to i8, !dbg !8149
  %73 = or i8 %72, 1, !dbg !8149
  store i8 %73, i8* %31, align 1, !dbg !8150
  call void @llvm.dbg.value(metadata i32 1, metadata !8092, metadata !DIExpression()), !dbg !8093
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8151

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !8092, metadata !DIExpression()), !dbg !8093
  %77 = add nsw i32 %76, -1, !dbg !8153
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8156
  %79 = load i8, i8* %78, align 1, !dbg !8156
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8157
  store i8 %79, i8* %80, align 1, !dbg !8158
  %81 = add nuw nsw i32 %76, 1, !dbg !8159
  call void @llvm.dbg.value(metadata i32 %81, metadata !8092, metadata !DIExpression()), !dbg !8093
  %82 = icmp eq i32 %81, 14, !dbg !8160
  br i1 %82, label %83, label %75, !dbg !8151, !llvm.loop !8161

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8163
  %85 = lshr i32 %84, 8, !dbg !8164
  %86 = trunc i32 %85 to i8, !dbg !8165
  store i8 %86, i8* %45, align 1, !dbg !8166
  %87 = trunc i32 %84 to i8, !dbg !8167
  store i8 %87, i8* %44, align 1, !dbg !8168
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8169
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8170
  br i1 %18, label %90, label %92, !dbg !8171

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8172
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8175
  br label %92, !dbg !8176

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8177

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8178
  %95 = sub i32 %5, %94, !dbg !8181
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8182
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8183
  br label %97, !dbg !8184

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8185
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8187
  %100 = icmp eq i32 %99, 0, !dbg !8188
  br i1 %100, label %104, label %101, !dbg !8189

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8190
  %103 = sub i32 %5, %102, !dbg !8192
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8193
  br label %104, !dbg !8194

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8196
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8093
  ret i32 %107, !dbg !8196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8246, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8247, metadata !DIExpression()), !dbg !8248
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8249
  br i1 %3, label %5, label %4, !dbg !8251

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8252
  br label %5, !dbg !8254

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8255
  ret void, !dbg !8256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8257 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8263
  %3 = load i32, i32* %2, align 4, !dbg !8263
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8263
  %5 = load i32, i32* %4, align 4, !dbg !8263
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8263
  %7 = load i32, i32* %6, align 4, !dbg !8263
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8263
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8268
  %9 = load i32, i32* %8, align 4, !dbg !8268
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8268
  %11 = load i32, i32* %10, align 4, !dbg !8268
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8268
  %13 = load i32, i32* %12, align 4, !dbg !8268
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8268
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8273
  %15 = load i32, i32* %14, align 4, !dbg !8273
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8273
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8278
  %17 = load i32, i32* %16, align 4, !dbg !8278
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8278
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8301, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8305
  %4 = load i32, i32* %3, align 4, !dbg !8305
  call void @llvm.dbg.value(metadata i32 %4, metadata !8303, metadata !DIExpression()), !dbg !8304
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8306
  ret void, !dbg !8307
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8308 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8312, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i8* %0, metadata !8313, metadata !DIExpression()), !dbg !8315
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8316
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8316
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8314, metadata !DIExpression()), !dbg !8317
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8317
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8318
  %5 = bitcast i8* %4 to i32*, !dbg !8318
  %6 = load i32, i32* %5, align 4, !dbg !8318
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8319
  store i32 %6, i32* %7, align 4, !dbg !8320
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8321
  unreachable, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8326, metadata !DIExpression()), !dbg !8327
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8328
  ret void, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8334, metadata !DIExpression()), !dbg !8335
  %2 = icmp sgt i32 %0, -1, !dbg !8336
  br i1 %2, label %3, label %8, !dbg !8338

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8339, !srcloc !8341
  %4 = and i32 %0, 31, !dbg !8342
  %5 = shl nuw i32 1, %4, !dbg !8343
  %6 = lshr i32 %0, 5, !dbg !8344
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8345
  store volatile i32 %5, i32* %7, align 4, !dbg !8346
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8347, !srcloc !8348
  br label %8, !dbg !8349

8:                                                ; preds = %3, %1
  ret void, !dbg !8350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8353, metadata !DIExpression()), !dbg !8354
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8355
  ret void, !dbg !8356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8359, metadata !DIExpression()), !dbg !8360
  %2 = icmp sgt i32 %0, -1, !dbg !8361
  br i1 %2, label %3, label %8, !dbg !8363

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8364
  %5 = shl nuw i32 1, %4, !dbg !8366
  %6 = lshr i32 %0, 5, !dbg !8367
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8368
  store volatile i32 %5, i32* %7, align 4, !dbg !8369
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8370, !srcloc !8374
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8375, !srcloc !8378
  br label %8, !dbg !8379

8:                                                ; preds = %3, %1
  ret void, !dbg !8380
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8385, metadata !DIExpression()), !dbg !8386
  %2 = lshr i32 %0, 5, !dbg !8387
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8388
  %4 = load volatile i32, i32* %3, align 4, !dbg !8388
  %5 = and i32 %0, 31, !dbg !8389
  %6 = shl nuw i32 1, %5, !dbg !8389
  %7 = and i32 %4, %6, !dbg !8390
  ret i32 %7, !dbg !8391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8396, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %1, metadata !8397, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %2, metadata !8398, metadata !DIExpression()), !dbg !8399
  %4 = add i32 %1, 1, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %4, metadata !8397, metadata !DIExpression()), !dbg !8399
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8403
  ret void, !dbg !8404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8409, metadata !DIExpression()), !dbg !8411
  call void @llvm.dbg.value(metadata i32 %1, metadata !8410, metadata !DIExpression()), !dbg !8411
  %3 = trunc i32 %1 to i8, !dbg !8412
  %4 = shl i8 %3, 4, !dbg !8412
  %5 = and i32 %0, 15, !dbg !8414
  %6 = add nsw i32 %5, -4, !dbg !8414
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8414
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8414
  %9 = icmp slt i32 %0, 0, !dbg !8414
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8414
  store volatile i8 %4, i8* %10, align 1, !dbg !8412
  ret void, !dbg !8415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8416 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8418, metadata !DIExpression()), !dbg !8419
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8420
  ret void, !dbg !8421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8422 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8424
  tail call void @z_arm_int_exit() #27, !dbg !8425
  ret void, !dbg !8426
}

; Function Attrs: optsize
declare !dbg !8427 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8428 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8430 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8432
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !8433
  tail call void @z_bss_zero() #27, !dbg !8434
  tail call void @z_data_copy() #27, !dbg !8435
  tail call void @z_arm_interrupt_init() #27, !dbg !8436
  tail call void @z_cstart() #29, !dbg !8437
  unreachable, !dbg !8437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8438 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8439
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8440, !srcloc !8443
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8444, !srcloc !8447
  ret void, !dbg !8448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8449 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8450
  %2 = and i32 %1, -15728641, !dbg !8450
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8450
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8451, !srcloc !8458
  call void @llvm.dbg.value(metadata i32 %3, metadata !8456, metadata !DIExpression()) #25, !dbg !8459
  %4 = and i32 %3, -5, !dbg !8460
  call void @llvm.dbg.value(metadata i32 %4, metadata !8461, metadata !DIExpression()) #25, !dbg !8466
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8468, !srcloc !8469
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8470, !srcloc !8447
  ret void, !dbg !8472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8476, metadata !DIExpression()), !dbg !8477
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8478
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8479
  store i32 %0, i32* %3, align 4, !dbg !8480
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8481
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8482
  store i32 %4, i32* %5, align 4, !dbg !8483
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8484
  %7 = or i32 %6, 268435456, !dbg !8484
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8484
  call void @llvm.dbg.value(metadata i32 0, metadata !8485, metadata !DIExpression()) #25, !dbg !8488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8490, !srcloc !8491
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8492
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8493
  %10 = load i32, i32* %9, align 4, !dbg !8493
  ret i32 %10, !dbg !8494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8495 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8605, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8606, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %2, metadata !8607, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8608, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %4, metadata !8609, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %5, metadata !8610, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %6, metadata !8611, metadata !DIExpression()), !dbg !8613
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8614
  call void @llvm.dbg.value(metadata i8* %8, metadata !8612, metadata !DIExpression()), !dbg !8613
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8615
  %10 = bitcast i8* %9 to i32*, !dbg !8615
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8616
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8617
  %12 = bitcast i8* %8 to i32*, !dbg !8618
  store i32 %11, i32* %12, align 4, !dbg !8619
  %13 = ptrtoint i8* %4 to i32, !dbg !8620
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8621
  %15 = bitcast i8* %14 to i32*, !dbg !8621
  store i32 %13, i32* %15, align 4, !dbg !8622
  %16 = ptrtoint i8* %5 to i32, !dbg !8623
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8624
  %18 = bitcast i8* %17 to i32*, !dbg !8624
  store i32 %16, i32* %18, align 4, !dbg !8625
  %19 = ptrtoint i8* %6 to i32, !dbg !8626
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8627
  %21 = bitcast i8* %20 to i32*, !dbg !8627
  store i32 %19, i32* %21, align 4, !dbg !8628
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8629
  %23 = bitcast i8* %22 to i32*, !dbg !8629
  store i32 16777216, i32* %23, align 4, !dbg !8630
  %24 = ptrtoint i8* %8 to i32, !dbg !8631
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8632
  store i32 %24, i32* %25, align 8, !dbg !8633
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8634
  store i32 0, i32* %26, align 4, !dbg !8635
  ret void, !dbg !8636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8642, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i32 %1, metadata !8643, metadata !DIExpression()), !dbg !8648
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8649
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8644, metadata !DIExpression()), !dbg !8648
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8650
  br i1 %4, label %19, label %5, !dbg !8652

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8647, metadata !DIExpression()), !dbg !8648
  %6 = icmp eq i32 %0, -22, !dbg !8653
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8653
  %8 = load i32, i32* %7, align 4, !dbg !8653
  br i1 %6, label %16, label %9, !dbg !8655

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8653
  %11 = icmp ule i32 %10, %0, !dbg !8653
  %12 = icmp ugt i32 %8, %0, !dbg !8653
  %13 = and i1 %12, %11, !dbg !8653
  %14 = icmp ugt i32 %8, %1, !dbg !8653
  %15 = and i1 %14, %13, !dbg !8653
  br i1 %15, label %18, label %19, !dbg !8653

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8653
  br i1 %17, label %18, label %19, !dbg !8655

18:                                               ; preds = %9, %16
  br label %19, !dbg !8656

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8648
  ret i32 %20, !dbg !8658
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8663, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i8* %1, metadata !8664, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8665, metadata !DIExpression()), !dbg !8666
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8667
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8668
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8669, !srcloc !8670
  unreachable, !dbg !8671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8672 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8690, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i32 %1, metadata !8691, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i32 %2, metadata !8692, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8693, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i32 0, metadata !8694, metadata !DIExpression()), !dbg !8700
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8701
  %9 = and i32 %8, 511, !dbg !8702
  call void @llvm.dbg.value(metadata i32 %9, metadata !8695, metadata !DIExpression()), !dbg !8700
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8703
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8703
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8704
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8704
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8699, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 0, metadata !8706, metadata !DIExpression()) #25, !dbg !8709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8711, !srcloc !8712
  call void @llvm.dbg.value(metadata i8* %6, metadata !8697, metadata !DIExpression(DW_OP_deref)), !dbg !8700
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8713
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8698, metadata !DIExpression()), !dbg !8700
  call void @llvm.dbg.value(metadata i8* %5, metadata !8696, metadata !DIExpression(DW_OP_deref)), !dbg !8700
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8714
  call void @llvm.dbg.value(metadata i32 %12, metadata !8694, metadata !DIExpression()), !dbg !8700
  %13 = load i8, i8* %5, align 1, !dbg !8715, !range !8717
  call void @llvm.dbg.value(metadata i8 %13, metadata !8696, metadata !DIExpression()), !dbg !8700
  %14 = icmp eq i8 %13, 0, !dbg !8715
  br i1 %14, label %15, label %32, !dbg !8718

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8719
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8720
  %18 = load i8, i8* %6, align 1, !dbg !8721, !range !8717
  call void @llvm.dbg.value(metadata i8 %18, metadata !8697, metadata !DIExpression()), !dbg !8700
  %19 = icmp eq i8 %18, 0, !dbg !8721
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8723
  %21 = load i32, i32* %20, align 4, !dbg !8723
  br i1 %19, label %27, label %22, !dbg !8724

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8725
  %24 = icmp eq i32 %23, 0, !dbg !8728
  br i1 %24, label %25, label %31, !dbg !8729

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8730
  br label %29, !dbg !8732

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8733
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8723
  br label %31, !dbg !8735

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8735
  br label %32, !dbg !8736

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8736
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8736
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8736
  ret void, !dbg !8736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8742, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata i32 %1, metadata !8743, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata i32 %2, metadata !8744, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata i8* %3, metadata !8745, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata i8 0, metadata !8746, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8747, metadata !DIExpression()), !dbg !8748
  store i8 0, i8* %3, align 1, !dbg !8749
  %5 = icmp ugt i32 %2, -16777217, !dbg !8750
  br i1 %5, label %6, label %17, !dbg !8752

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8753
  %8 = icmp eq i32 %7, 8, !dbg !8753
  br i1 %8, label %9, label %10, !dbg !8753

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i32 0, i32 0), i32 noundef 69) #27, !dbg !8755
  br label %17, !dbg !8761

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8762
  %12 = icmp eq i32 %11, 0, !dbg !8762
  br i1 %12, label %13, label %14, !dbg !8763

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8747, metadata !DIExpression()), !dbg !8748
  store i8 1, i8* %3, align 1, !dbg !8766
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8748
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8747, metadata !DIExpression()), !dbg !8748
  br label %17, !dbg !8769

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8748
  ret %struct.__esf* %18, !dbg !8770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8771 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8775, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 %1, metadata !8776, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i8* %2, metadata !8777, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.value(metadata i32 0, metadata !8778, metadata !DIExpression()), !dbg !8779
  store i8 0, i8* %2, align 1, !dbg !8780
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8781

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %5, metadata !8778, metadata !DIExpression()), !dbg !8779
  br label %12, !dbg !8784

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %7, metadata !8778, metadata !DIExpression()), !dbg !8779
  br label %12, !dbg !8786

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8787
  call void @llvm.dbg.value(metadata i32 0, metadata !8778, metadata !DIExpression()), !dbg !8779
  br label %12, !dbg !8788

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8789
  call void @llvm.dbg.value(metadata i32 0, metadata !8778, metadata !DIExpression()), !dbg !8779
  br label %12, !dbg !8790

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8791
  br label %12, !dbg !8792

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8793
  br label %12, !dbg !8794

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8779
  call void @llvm.dbg.value(metadata i32 %13, metadata !8778, metadata !DIExpression()), !dbg !8779
  ret i32 %13, !dbg !8795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8800, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.value(metadata i8* %1, metadata !8801, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.value(metadata i32 0, metadata !8802, metadata !DIExpression()), !dbg !8803
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8804
  store i8 0, i8* %1, align 1, !dbg !8809
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8810
  %4 = and i32 %3, 2, !dbg !8812
  %5 = icmp eq i32 %4, 0, !dbg !8813
  br i1 %5, label %7, label %6, !dbg !8814

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8815
  br label %36, !dbg !8821

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8822
  %9 = icmp sgt i32 %8, -1, !dbg !8824
  br i1 %9, label %11, label %10, !dbg !8825

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8826
  br label %36, !dbg !8832

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8833
  %13 = and i32 %12, 1073741824, !dbg !8835
  %14 = icmp eq i32 %13, 0, !dbg !8836
  br i1 %14, label %36, label %15, !dbg !8837

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.107, i32 0, i32 0), i32 noundef 69) #27, !dbg !8838
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8844
  br i1 %16, label %17, label %21, !dbg !8846

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8847
  %19 = load i32, i32* %18, align 4, !dbg !8847
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.108, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8847
  %20 = load i32, i32* %18, align 4, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %20, metadata !8802, metadata !DIExpression()), !dbg !8803
  br label %36, !dbg !8854

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8855
  %23 = and i32 %22, 255, !dbg !8857
  %24 = icmp eq i32 %23, 0, !dbg !8858
  br i1 %24, label %27, label %25, !dbg !8859

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8860
  call void @llvm.dbg.value(metadata i32 %26, metadata !8802, metadata !DIExpression()), !dbg !8803
  br label %36, !dbg !8862

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8863
  %29 = and i32 %28, 65280, !dbg !8865
  %30 = icmp eq i32 %29, 0, !dbg !8866
  br i1 %30, label %32, label %31, !dbg !8867

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8868
  call void @llvm.dbg.value(metadata i32 0, metadata !8802, metadata !DIExpression()), !dbg !8803
  br label %36, !dbg !8870

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8871
  %34 = icmp ult i32 %33, 65536, !dbg !8873
  br i1 %34, label %36, label %35, !dbg !8874

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8802, metadata !DIExpression()), !dbg !8803
  br label %36, !dbg !8877

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8803
  call void @llvm.dbg.value(metadata i32 %37, metadata !8802, metadata !DIExpression()), !dbg !8803
  ret i32 %37, !dbg !8878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8879 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8881, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i32 %1, metadata !8882, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i8* %2, metadata !8883, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i32 0, metadata !8884, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i32 -22, metadata !8885, metadata !DIExpression()), !dbg !8894
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8895
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8900
  %5 = and i32 %4, 16, !dbg !8902
  %6 = icmp eq i32 %5, 0, !dbg !8903
  br i1 %6, label %8, label %7, !dbg !8904

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8905
  br label %8, !dbg !8911

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8912
  %10 = and i32 %9, 8, !dbg !8914
  %11 = icmp eq i32 %10, 0, !dbg !8915
  br i1 %11, label %13, label %12, !dbg !8916

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8917
  br label %13, !dbg !8923

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8924
  %15 = and i32 %14, 2, !dbg !8925
  %16 = icmp eq i32 %15, 0, !dbg !8926
  br i1 %16, label %27, label %17, !dbg !8927

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8928
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8933
  call void @llvm.dbg.value(metadata i32 %18, metadata !8886, metadata !DIExpression()), !dbg !8934
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8935
  %20 = and i32 %19, 128, !dbg !8937
  %21 = icmp eq i32 %20, 0, !dbg !8938
  br i1 %21, label %27, label %22, !dbg !8939

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8885, metadata !DIExpression()), !dbg !8894
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.102, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8940
  %23 = icmp eq i32 %1, 0, !dbg !8946
  br i1 %23, label %27, label %24, !dbg !8948

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8949
  %26 = and i32 %25, -129, !dbg !8949
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8949
  br label %27, !dbg !8951

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8894
  call void @llvm.dbg.value(metadata i32 %28, metadata !8885, metadata !DIExpression()), !dbg !8894
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8952
  %30 = and i32 %29, 1, !dbg !8954
  %31 = icmp eq i32 %30, 0, !dbg !8955
  br i1 %31, label %33, label %32, !dbg !8956

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !8957
  br label %33, !dbg !8963

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8964
  %35 = and i32 %34, 32, !dbg !8966
  %36 = icmp eq i32 %35, 0, !dbg !8967
  br i1 %36, label %38, label %37, !dbg !8968

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !8969
  br label %38, !dbg !8975

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8976
  %40 = and i32 %39, 16, !dbg !8977
  %41 = icmp eq i32 %40, 0, !dbg !8977
  br i1 %41, label %42, label %46, !dbg !8978

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8979
  %44 = and i32 %43, 2, !dbg !8980
  %45 = icmp eq i32 %44, 0, !dbg !8980
  br i1 %45, label %55, label %46, !dbg !8981

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8982
  %48 = and i32 %47, 2048, !dbg !8983
  %49 = icmp eq i32 %48, 0, !dbg !8983
  br i1 %49, label %55, label %50, !dbg !8984

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8985
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %52, metadata !8889, metadata !DIExpression()), !dbg !8987
  %53 = icmp eq i32 %52, 0, !dbg !8988
  br i1 %53, label %55, label %54, !dbg !8990

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8991, metadata !DIExpression()) #25, !dbg !8994
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8997, !srcloc !8998
  call void @llvm.dbg.value(metadata i32 2, metadata !8884, metadata !DIExpression()), !dbg !8894
  br label %55, !dbg !8999

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !8894
  call void @llvm.dbg.value(metadata i32 %56, metadata !8884, metadata !DIExpression()), !dbg !8894
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9000
  %58 = and i32 %57, 32, !dbg !9002
  %59 = icmp eq i32 %58, 0, !dbg !9003
  br i1 %59, label %63, label %60, !dbg !9004

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9005
  %62 = and i32 %61, -8193, !dbg !9005
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9005
  br label %63, !dbg !9007

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9008
  %65 = or i32 %64, 255, !dbg !9008
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9008
  store i8 0, i8* %2, align 1, !dbg !9009
  ret i32 %56, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9015, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 %0, metadata !9016, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i8* %1, metadata !9017, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 0, metadata !9018, metadata !DIExpression()), !dbg !9022
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !9023
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9028
  %4 = and i32 %3, 4096, !dbg !9030
  %5 = icmp eq i32 %4, 0, !dbg !9030
  br i1 %5, label %7, label %6, !dbg !9031

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !9032
  br label %7, !dbg !9038

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9039
  %9 = and i32 %8, 2048, !dbg !9041
  %10 = icmp eq i32 %9, 0, !dbg !9041
  br i1 %10, label %12, label %11, !dbg !9042

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !9043
  br label %12, !dbg !9049

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9050
  %14 = and i32 %13, 512, !dbg !9051
  %15 = icmp eq i32 %14, 0, !dbg !9051
  br i1 %15, label %26, label %16, !dbg !9052

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !9053
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %17, metadata !9019, metadata !DIExpression()), !dbg !9059
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9060
  %19 = and i32 %18, 32768, !dbg !9062
  %20 = icmp eq i32 %19, 0, !dbg !9063
  br i1 %20, label %26, label %21, !dbg !9064

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !9065
  %22 = icmp eq i32 %0, 0, !dbg !9071
  br i1 %22, label %26, label %23, !dbg !9073

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9074
  %25 = and i32 %24, -32769, !dbg !9074
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9074
  br label %26, !dbg !9076

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9077
  %28 = and i32 %27, 1024, !dbg !9079
  %29 = icmp eq i32 %28, 0, !dbg !9079
  br i1 %29, label %31, label %30, !dbg !9080

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !9081
  br label %31, !dbg !9087

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9088
  %33 = and i32 %32, 256, !dbg !9090
  %34 = icmp eq i32 %33, 0, !dbg !9091
  br i1 %34, label %35, label %39, !dbg !9092

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9093
  %37 = and i32 %36, 8192, !dbg !9095
  %38 = icmp eq i32 %37, 0, !dbg !9095
  br i1 %38, label %41, label %39, !dbg !9096

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.97, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !9097
  br label %41, !dbg !9098

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9098
  %43 = or i32 %42, 65280, !dbg !9098
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9098
  store i8 0, i8* %1, align 1, !dbg !9099
  ret void, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32 0, metadata !9108, metadata !DIExpression()), !dbg !9109
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !9110
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9115
  %2 = and i32 %1, 33554432, !dbg !9117
  %3 = icmp eq i32 %2, 0, !dbg !9118
  br i1 %3, label %5, label %4, !dbg !9119

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !9120
  br label %5, !dbg !9126

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9127
  %7 = and i32 %6, 16777216, !dbg !9129
  %8 = icmp eq i32 %7, 0, !dbg !9130
  br i1 %8, label %10, label %9, !dbg !9131

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !9132
  br label %10, !dbg !9138

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9139
  %12 = and i32 %11, 524288, !dbg !9141
  %13 = icmp eq i32 %12, 0, !dbg !9142
  br i1 %13, label %15, label %14, !dbg !9143

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9144
  br label %15, !dbg !9150

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9151
  %17 = and i32 %16, 262144, !dbg !9153
  %18 = icmp eq i32 %17, 0, !dbg !9154
  br i1 %18, label %20, label %19, !dbg !9155

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9156
  br label %20, !dbg !9162

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9163
  %22 = and i32 %21, 131072, !dbg !9165
  %23 = icmp eq i32 %22, 0, !dbg !9166
  br i1 %23, label %25, label %24, !dbg !9167

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9168
  br label %25, !dbg !9174

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9175
  %27 = and i32 %26, 65536, !dbg !9177
  %28 = icmp eq i32 %27, 0, !dbg !9178
  br i1 %28, label %30, label %29, !dbg !9179

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9180
  br label %30, !dbg !9186

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9187
  %32 = or i32 %31, -65536, !dbg !9187
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9187
  ret void, !dbg !9188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9189 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9193, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i8* %0, metadata !9194, metadata !DIExpression()), !dbg !9195
  store i8 0, i8* %0, align 1, !dbg !9196
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9197
  ret void, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9207, metadata !DIExpression()), !dbg !9209
  call void @llvm.dbg.value(metadata i32 %0, metadata !9208, metadata !DIExpression()), !dbg !9209
  %2 = icmp slt i32 %0, 16, !dbg !9210
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.81, i32 0, i32 0), !dbg !9210
  %4 = add nsw i32 %0, -16, !dbg !9210
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9210
  ret void, !dbg !9215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9216 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9220, metadata !DIExpression()), !dbg !9223
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9224
  %3 = load i32, i32* %2, align 4, !dbg !9224
  %4 = inttoptr i32 %3 to i16*, !dbg !9225
  call void @llvm.dbg.value(metadata i16* %4, metadata !9221, metadata !DIExpression()), !dbg !9223
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9226
  %6 = or i32 %5, 256, !dbg !9226
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9226
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9227, !srcloc !9230
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9231, !srcloc !9234
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9235
  %8 = load i16, i16* %7, align 2, !dbg !9236
  call void @llvm.dbg.value(metadata i16 %8, metadata !9222, metadata !DIExpression()), !dbg !9223
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9237
  %10 = and i32 %9, -257, !dbg !9237
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9237
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9238, !srcloc !9230
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9240, !srcloc !9234
  %11 = icmp eq i16 %8, -8446, !dbg !9242
  ret i1 %11, !dbg !9244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !9245 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9246
  %2 = or i32 %1, 16, !dbg !9246
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9246
  ret void, !dbg !9247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !9248 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9251, metadata !DIExpression()), !dbg !9252
  br label %1, !dbg !9253

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9251, metadata !DIExpression()), !dbg !9252
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef %2) #26, !dbg !9255
  %3 = add nuw nsw i32 %2, 1, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %3, metadata !9251, metadata !DIExpression()), !dbg !9252
  %4 = icmp eq i32 %3, 97, !dbg !9259
  br i1 %4, label %5, label %1, !dbg !9253, !llvm.loop !9260

5:                                                ; preds = %1
  ret void, !dbg !9262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0) unnamed_addr #15 !dbg !9263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9265, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 1, metadata !9266, metadata !DIExpression()), !dbg !9267
  %2 = and i32 %0, 15, !dbg !9268
  %3 = add nsw i32 %2, -4, !dbg !9268
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9268
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9268
  %6 = icmp slt i32 %0, 0, !dbg !9268
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9268
  store volatile i8 16, i8* %7, align 1, !dbg !9269
  ret void, !dbg !9271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9378, metadata !DIExpression()), !dbg !9379
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9380
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9382
  br i1 %3, label %4, label %12, !dbg !9383

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9384, !srcloc !9396
  call void @llvm.dbg.value(metadata i32 %5, metadata !9387, metadata !DIExpression()) #25, !dbg !9397
  %6 = icmp eq i32 %5, 0, !dbg !9398
  br i1 %6, label %12, label %7, !dbg !9399

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9400
  %9 = or i32 %8, 268435456, !dbg !9400
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9400
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9402
  %11 = and i32 %10, -32769, !dbg !9402
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9402
  br label %12, !dbg !9403

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9404
  ret void, !dbg !9405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9406 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9407
  ret void, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !646, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i8 0, metadata !647, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata i32 64, metadata !649, metadata !DIExpression()), !dbg !9409
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9410
  %3 = load i32, i32* %2, align 4, !dbg !9410
  %4 = add i32 %3, -64, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %4, metadata !648, metadata !DIExpression()), !dbg !9409
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9413
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9414
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9415
  call void @llvm.dbg.value(metadata i8 1, metadata !647, metadata !DIExpression()), !dbg !9409
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9416
  ret void, !dbg !9417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9418 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9419
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9420, !srcloc !9423
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9424, !srcloc !9427
  ret void, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9429 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9430, !srcloc !9433
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9434
  ret void, !dbg !9435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9436 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9451, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8 %1, metadata !9452, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %2, metadata !9453, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %3, metadata !9454, metadata !DIExpression()), !dbg !9455
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9456
  ret void, !dbg !9458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9459 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9464, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i8 %1, metadata !9465, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i32 undef, metadata !9466, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()), !dbg !9469
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9470
  call void @llvm.dbg.value(metadata i8 %3, metadata !9468, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9469
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  %5 = trunc i32 %4 to i8, !dbg !9472
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9473
  ret void, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9479, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8 %1, metadata !9480, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i8 %2, metadata !9481, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i1 %3, metadata !9482, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9485
  %5 = zext i8 %2 to i32, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %5, metadata !9484, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i32 0, metadata !9483, metadata !DIExpression()), !dbg !9485
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9484, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i32 0, metadata !9483, metadata !DIExpression()), !dbg !9485
  %7 = icmp eq i8 %1, 0, !dbg !9487
  br i1 %7, label %30, label %8, !dbg !9490

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9484, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata i32 %10, metadata !9483, metadata !DIExpression()), !dbg !9485
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9491
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9494
  %13 = load i32, i32* %12, align 4, !dbg !9494
  %14 = icmp eq i32 %13, 0, !dbg !9495
  br i1 %14, label %26, label %15, !dbg !9496

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9497

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9499
  %18 = icmp eq i32 %17, 0, !dbg !9499
  br i1 %18, label %19, label %20, !dbg !9500

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9501
  br label %30, !dbg !9507

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9508
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %22, metadata !9484, metadata !DIExpression()), !dbg !9485
  %23 = icmp eq i32 %22, -22, !dbg !9510
  br i1 %23, label %30, label %24, !dbg !9512

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9513
  call void @llvm.dbg.value(metadata i32 %25, metadata !9484, metadata !DIExpression()), !dbg !9485
  br label %26, !dbg !9514

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9485
  call void @llvm.dbg.value(metadata i32 %27, metadata !9484, metadata !DIExpression()), !dbg !9485
  %28 = add nuw nsw i32 %10, 1, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %28, metadata !9483, metadata !DIExpression()), !dbg !9485
  %29 = icmp eq i32 %28, %6, !dbg !9487
  br i1 %29, label %30, label %8, !dbg !9490, !llvm.loop !9516

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9485
  ret i32 %31, !dbg !9518
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9519 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9526
  %3 = load i32, i32* %2, align 4, !dbg !9526
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9527, !range !9528
  %5 = icmp ult i32 %4, 2, !dbg !9527
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9529
  br i1 %7, label %8, label %15, !dbg !9529

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9530
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9531
  %11 = load i32, i32* %10, align 4, !dbg !9531
  %12 = and i32 %11, %9, !dbg !9532
  %13 = icmp eq i32 %12, 0, !dbg !9533
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9524, metadata !DIExpression()), !dbg !9525
  ret i32 %16, !dbg !9534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9535 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9539, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9540, metadata !DIExpression()), !dbg !9542
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9543
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9543
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9541, metadata !DIExpression()), !dbg !9544
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9545
  %6 = load i32, i32* %5, align 4, !dbg !9545
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9546
  store i32 %6, i32* %7, align 4, !dbg !9547
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9548
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9549
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9550
  %11 = load i32, i32* %10, align 4, !dbg !9550
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9551
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9552
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9553
  ret i32 %12, !dbg !9554
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #19 !dbg !9555 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9562, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9563, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 undef, metadata !9564, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 %2, metadata !9565, metadata !DIExpression()), !dbg !9566
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9567
  %5 = load i32, i32* %4, align 4, !dbg !9567
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9568
  %7 = or i32 %6, %5, !dbg !9569
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9570
  store i32 %7, i32* %8, align 4, !dbg !9571
  ret void, !dbg !9572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9573 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9577, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9578, metadata !DIExpression()), !dbg !9579
  %3 = zext i8 %0 to i32, !dbg !9580
  %4 = icmp ugt i8 %0, 7, !dbg !9582
  br i1 %4, label %5, label %6, !dbg !9583

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.122, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9584
  br label %7, !dbg !9590

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9591
  br label %7, !dbg !9592

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9579
  ret i32 %8, !dbg !9593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !9594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9598, metadata !DIExpression()), !dbg !9600
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9599, metadata !DIExpression()), !dbg !9600
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9601
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9602
  %4 = load i32, i32* %3, align 4, !dbg !9602
  %5 = and i32 %4, -32, !dbg !9603
  %6 = or i32 %5, %0, !dbg !9604
  %7 = or i32 %6, 16, !dbg !9604
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9605
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9606
  %9 = load i32, i32* %8, align 4, !dbg !9606
  %10 = or i32 %9, 1, !dbg !9607
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9608
  ret void, !dbg !9609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !9610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9613, metadata !DIExpression()), !dbg !9614
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9621, metadata !DIExpression()), !dbg !9622
  %2 = icmp ult i32 %0, 33, !dbg !9623
  br i1 %2, label %11, label %3, !dbg !9625

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9626
  br i1 %4, label %11, label %5, !dbg !9628

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9629
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9630, !range !9528
  %8 = mul nsw i32 %7, -2, !dbg !9631
  %9 = add nsw i32 %8, 62, !dbg !9631
  %10 = and i32 %9, 62, !dbg !9632
  br label %11, !dbg !9633

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9622
  ret i32 %12, !dbg !9634
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9635 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9639, metadata !DIExpression()), !dbg !9641
  call void @llvm.dbg.value(metadata i8 %1, metadata !9640, metadata !DIExpression()), !dbg !9641
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9642
  ret void, !dbg !9644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9649, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata i8 %1, metadata !9650, metadata !DIExpression()), !dbg !9656
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9657
  call void @llvm.dbg.value(metadata i8 %3, metadata !9651, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9656
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %4, metadata !9651, metadata !DIExpression()), !dbg !9656
  %5 = icmp ne i32 %4, -22, !dbg !9659
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %4, metadata !9652, metadata !DIExpression()), !dbg !9661
  br i1 %7, label %8, label %12, !dbg !9660

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9652, metadata !DIExpression()), !dbg !9661
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9662
  %10 = add i32 %9, 1, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %10, metadata !9652, metadata !DIExpression()), !dbg !9661
  %11 = icmp eq i32 %10, 8, !dbg !9666
  br i1 %11, label %12, label %8, !dbg !9667, !llvm.loop !9668

12:                                               ; preds = %8, %2
  ret void, !dbg !9670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !9671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9674, metadata !DIExpression()), !dbg !9675
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9676
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9677
  ret void, !dbg !9678
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9679 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9684
  %2 = icmp ugt i32 %1, 8, !dbg !9686
  br i1 %2, label %14, label %3, !dbg !9687

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9688
  call void @llvm.dbg.value(metadata i32 0, metadata !9683, metadata !DIExpression()), !dbg !9689
  %4 = icmp eq i32 %1, 0, !dbg !9690
  br i1 %4, label %12, label %5, !dbg !9693

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9693

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9683, metadata !DIExpression()), !dbg !9689
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9694
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9696
  %10 = add nuw i32 %8, 1, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %10, metadata !9683, metadata !DIExpression()), !dbg !9689
  %11 = icmp eq i32 %10, %1, !dbg !9690
  br i1 %11, label %12, label %7, !dbg !9693, !llvm.loop !9698

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9700
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9701
  tail call void @arm_core_mpu_enable() #26, !dbg !9702
  br label %14, !dbg !9703

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9689
  ret i32 %15, !dbg !9704
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9712, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i8* %1, metadata !9713, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i8* %0, metadata !9714, metadata !DIExpression()), !dbg !9715
  %3 = load i8, i8* %1, align 1, !dbg !9716
  %4 = icmp eq i8 %3, 0, !dbg !9717
  br i1 %4, label %13, label %5, !dbg !9718

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9712, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i8* %8, metadata !9713, metadata !DIExpression()), !dbg !9715
  store i8 %6, i8* %7, align 1, !dbg !9719
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9721
  call void @llvm.dbg.value(metadata i8* %9, metadata !9712, metadata !DIExpression()), !dbg !9715
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9722
  call void @llvm.dbg.value(metadata i8* %10, metadata !9713, metadata !DIExpression()), !dbg !9715
  %11 = load i8, i8* %10, align 1, !dbg !9716
  %12 = icmp eq i8 %11, 0, !dbg !9717
  br i1 %12, label %13, label %5, !dbg !9718, !llvm.loop !9723

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9725
  ret i8* %0, !dbg !9726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9731, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i8* %1, metadata !9732, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %2, metadata !9733, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i8* %0, metadata !9734, metadata !DIExpression()), !dbg !9735
  %4 = icmp eq i32 %2, 0, !dbg !9736
  br i1 %4, label %22, label %5, !dbg !9737

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9731, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %7, metadata !9733, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i8* %8, metadata !9732, metadata !DIExpression()), !dbg !9735
  %9 = load i8, i8* %8, align 1, !dbg !9738
  %10 = icmp eq i8 %9, 0, !dbg !9739
  br i1 %10, label %16, label %11, !dbg !9740

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9741
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9743
  call void @llvm.dbg.value(metadata i8* %12, metadata !9732, metadata !DIExpression()), !dbg !9735
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9744
  call void @llvm.dbg.value(metadata i8* %13, metadata !9731, metadata !DIExpression()), !dbg !9735
  %14 = add i32 %7, -1, !dbg !9745
  call void @llvm.dbg.value(metadata i32 %14, metadata !9733, metadata !DIExpression()), !dbg !9735
  %15 = icmp eq i32 %14, 0, !dbg !9736
  br i1 %15, label %22, label %5, !dbg !9737, !llvm.loop !9746

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9731, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %18, metadata !9733, metadata !DIExpression()), !dbg !9735
  store i8 0, i8* %17, align 1, !dbg !9748
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9750
  call void @llvm.dbg.value(metadata i8* %19, metadata !9731, metadata !DIExpression()), !dbg !9735
  %20 = add i32 %18, -1, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %20, metadata !9733, metadata !DIExpression()), !dbg !9735
  %21 = icmp eq i32 %20, 0, !dbg !9752
  br i1 %21, label %22, label %16, !dbg !9753, !llvm.loop !9754

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9756
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9761, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %1, metadata !9762, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %1, metadata !9763, metadata !DIExpression()), !dbg !9764
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9765

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9761, metadata !DIExpression()), !dbg !9764
  %6 = load i8, i8* %5, align 1, !dbg !9766
  %7 = icmp eq i8 %6, %3, !dbg !9767
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9768
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9769
  call void @llvm.dbg.value(metadata i8* %10, metadata !9761, metadata !DIExpression()), !dbg !9764
  br i1 %9, label %11, label %4, !dbg !9768, !llvm.loop !9771

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9773
  ret i8* %12, !dbg !9774
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9775 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9777, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %1, metadata !9778, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i8* null, metadata !9779, metadata !DIExpression()), !dbg !9780
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9781

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9780
  call void @llvm.dbg.value(metadata i8* %6, metadata !9779, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i8* %5, metadata !9777, metadata !DIExpression()), !dbg !9780
  %7 = load i8, i8* %5, align 1, !dbg !9782
  %8 = icmp eq i8 %7, %3, !dbg !9785
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9786
  call void @llvm.dbg.value(metadata i8* %9, metadata !9779, metadata !DIExpression()), !dbg !9780
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9787
  call void @llvm.dbg.value(metadata i8* %10, metadata !9777, metadata !DIExpression()), !dbg !9780
  %11 = icmp eq i8 %7, 0, !dbg !9788
  br i1 %11, label %12, label %4, !dbg !9788, !llvm.loop !9789

12:                                               ; preds = %4
  ret i8* %9, !dbg !9791
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9792 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9796, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i32 0, metadata !9797, metadata !DIExpression()), !dbg !9798
  %2 = load i8, i8* %0, align 1, !dbg !9799
  %3 = icmp eq i8 %2, 0, !dbg !9800
  br i1 %3, label %11, label %4, !dbg !9801

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9797, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i8* %6, metadata !9796, metadata !DIExpression()), !dbg !9798
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9802
  call void @llvm.dbg.value(metadata i8* %7, metadata !9796, metadata !DIExpression()), !dbg !9798
  %8 = add i32 %5, 1, !dbg !9804
  call void @llvm.dbg.value(metadata i32 %8, metadata !9797, metadata !DIExpression()), !dbg !9798
  %9 = load i8, i8* %7, align 1, !dbg !9799
  %10 = icmp eq i8 %9, 0, !dbg !9800
  br i1 %10, label %11, label %4, !dbg !9801, !llvm.loop !9805

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9798
  ret i32 %12, !dbg !9807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9812, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 %1, metadata !9813, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9814, metadata !DIExpression()), !dbg !9815
  %3 = load i8, i8* %0, align 1, !dbg !9816
  %4 = icmp ne i8 %3, 0, !dbg !9817
  %5 = icmp ne i32 %1, 0, !dbg !9818
  %6 = and i1 %4, %5, !dbg !9818
  br i1 %6, label %7, label %16, !dbg !9819

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9814, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8* %9, metadata !9812, metadata !DIExpression()), !dbg !9815
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9820
  call void @llvm.dbg.value(metadata i8* %10, metadata !9812, metadata !DIExpression()), !dbg !9815
  %11 = add nuw i32 %8, 1, !dbg !9822
  call void @llvm.dbg.value(metadata i32 %11, metadata !9814, metadata !DIExpression()), !dbg !9815
  %12 = load i8, i8* %10, align 1, !dbg !9816
  %13 = icmp ne i8 %12, 0, !dbg !9817
  %14 = icmp ult i32 %11, %1, !dbg !9818
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9818
  br i1 %15, label %7, label %16, !dbg !9819, !llvm.loop !9823

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9815
  ret i32 %17, !dbg !9825
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9830, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i8* %1, metadata !9831, metadata !DIExpression()), !dbg !9832
  %3 = load i8, i8* %0, align 1, !dbg !9833
  %4 = load i8, i8* %1, align 1, !dbg !9834
  %5 = icmp ne i8 %3, %4, !dbg !9835
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9836
  br i1 %7, label %18, label %8, !dbg !9836

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9831, metadata !DIExpression()), !dbg !9832
  call void @llvm.dbg.value(metadata i8* %10, metadata !9830, metadata !DIExpression()), !dbg !9832
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9837
  call void @llvm.dbg.value(metadata i8* %11, metadata !9830, metadata !DIExpression()), !dbg !9832
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9839
  call void @llvm.dbg.value(metadata i8* %12, metadata !9831, metadata !DIExpression()), !dbg !9832
  %13 = load i8, i8* %11, align 1, !dbg !9833
  %14 = load i8, i8* %12, align 1, !dbg !9834
  %15 = icmp ne i8 %13, %14, !dbg !9835
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9836
  br i1 %17, label %18, label %8, !dbg !9836, !llvm.loop !9840

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9833
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9834
  %21 = zext i8 %19 to i32, !dbg !9843
  %22 = zext i8 %20 to i32, !dbg !9844
  %23 = sub nsw i32 %21, %22, !dbg !9845
  ret i32 %23, !dbg !9846
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9851, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i8* %1, metadata !9852, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression()), !dbg !9854
  %4 = icmp eq i32 %2, 0, !dbg !9855
  br i1 %4, label %23, label %5, !dbg !9855

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9853, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i8* %7, metadata !9852, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i8* %8, metadata !9851, metadata !DIExpression()), !dbg !9854
  %9 = load i8, i8* %8, align 1, !dbg !9856
  %10 = load i8, i8* %7, align 1, !dbg !9857
  %11 = icmp ne i8 %9, %10, !dbg !9858
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9859
  br i1 %13, label %19, label %14, !dbg !9859

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9860
  call void @llvm.dbg.value(metadata i8* %15, metadata !9851, metadata !DIExpression()), !dbg !9854
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9862
  call void @llvm.dbg.value(metadata i8* %16, metadata !9852, metadata !DIExpression()), !dbg !9854
  %17 = add i32 %6, -1, !dbg !9863
  call void @llvm.dbg.value(metadata i32 %17, metadata !9853, metadata !DIExpression()), !dbg !9854
  %18 = icmp eq i32 %17, 0, !dbg !9855
  br i1 %18, label %23, label %5, !dbg !9855, !llvm.loop !9864

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9867
  %21 = zext i8 %10 to i32, !dbg !9868
  %22 = sub nsw i32 %20, %21, !dbg !9869
  br label %23, !dbg !9870

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9870
  ret i32 %24, !dbg !9871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9872 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9876, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i8* %1, metadata !9877, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i8** %2, metadata !9878, metadata !DIExpression()), !dbg !9881
  %4 = icmp eq i8* %0, null, !dbg !9882
  br i1 %4, label %5, label %7, !dbg !9882

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9883
  br label %7, !dbg !9882

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9882
  call void @llvm.dbg.value(metadata i8* %8, metadata !9879, metadata !DIExpression()), !dbg !9881
  %9 = load i8, i8* %8, align 1, !dbg !9884
  %10 = icmp eq i8 %9, 0, !dbg !9884
  br i1 %10, label %33, label %11, !dbg !9885

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9879, metadata !DIExpression()), !dbg !9881
  %14 = zext i8 %12 to i32, !dbg !9884
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9886
  %16 = icmp eq i8* %15, null, !dbg !9885
  br i1 %16, label %21, label %17, !dbg !9887

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9888
  call void @llvm.dbg.value(metadata i8* %18, metadata !9879, metadata !DIExpression()), !dbg !9881
  %19 = load i8, i8* %18, align 1, !dbg !9884
  %20 = icmp eq i8 %19, 0, !dbg !9884
  br i1 %20, label %33, label %11, !dbg !9885, !llvm.loop !9890

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9880, metadata !DIExpression()), !dbg !9881
  %24 = zext i8 %22 to i32, !dbg !9892
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9893
  %26 = icmp eq i8* %25, null, !dbg !9894
  br i1 %26, label %27, label %31, !dbg !9895

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9896
  call void @llvm.dbg.value(metadata i8* %28, metadata !9880, metadata !DIExpression()), !dbg !9881
  %29 = load i8, i8* %28, align 1, !dbg !9892
  %30 = icmp eq i8 %29, 0, !dbg !9892
  br i1 %30, label %33, label %21, !dbg !9898, !llvm.loop !9899

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9901
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9904
  br label %33, !dbg !9905

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9881
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9881
  store i8* %34, i8** %2, align 4, !dbg !9881
  ret i8* %35, !dbg !9906
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9909, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i8* %1, metadata !9910, metadata !DIExpression()), !dbg !9911
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9912
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9913
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9914
  ret i8* %0, !dbg !9915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9918, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i8* %1, metadata !9919, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 %2, metadata !9920, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i8* %0, metadata !9921, metadata !DIExpression()), !dbg !9923
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %4, metadata !9922, metadata !DIExpression()), !dbg !9923
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9925
  call void @llvm.dbg.value(metadata i8* %5, metadata !9918, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i8* %1, metadata !9919, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 %2, metadata !9920, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 %2, metadata !9920, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9923
  %6 = icmp eq i32 %2, 0, !dbg !9926
  br i1 %6, label %18, label %7, !dbg !9927

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9928
  call void @llvm.dbg.value(metadata i8* %9, metadata !9918, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i8* %10, metadata !9919, metadata !DIExpression()), !dbg !9923
  %12 = load i8, i8* %10, align 1, !dbg !9929
  %13 = icmp eq i8 %12, 0, !dbg !9930
  br i1 %13, label %18, label %14, !dbg !9931

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9932
  call void @llvm.dbg.value(metadata i8* %15, metadata !9919, metadata !DIExpression()), !dbg !9923
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9934
  call void @llvm.dbg.value(metadata i8* %16, metadata !9918, metadata !DIExpression()), !dbg !9923
  store i8 %12, i8* %9, align 1, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %11, metadata !9920, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 %11, metadata !9920, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9923
  %17 = icmp eq i32 %11, 0, !dbg !9926
  br i1 %17, label %18, label %7, !dbg !9927, !llvm.loop !9936

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9923
  store i8 0, i8* %19, align 1, !dbg !9938
  ret i8* %0, !dbg !9939
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9944, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* %1, metadata !9945, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i32 %2, metadata !9946, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* %0, metadata !9947, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* %1, metadata !9948, metadata !DIExpression()), !dbg !9949
  %4 = icmp eq i32 %2, 0, !dbg !9950
  br i1 %4, label %31, label %5, !dbg !9952

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9948, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* %0, metadata !9947, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i32 %2, metadata !9946, metadata !DIExpression()), !dbg !9949
  %6 = add i32 %2, -1, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %6, metadata !9946, metadata !DIExpression()), !dbg !9949
  %7 = icmp eq i32 %6, 0, !dbg !9954
  br i1 %7, label %23, label %8, !dbg !9955

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9956
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9956
  br label %11, !dbg !9956

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9948, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i8* %14, metadata !9947, metadata !DIExpression()), !dbg !9949
  %15 = load i8, i8* %14, align 1, !dbg !9957
  %16 = load i8, i8* %13, align 1, !dbg !9958
  %17 = icmp eq i8 %15, %16, !dbg !9959
  br i1 %17, label %18, label %23, !dbg !9956

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9960
  call void @llvm.dbg.value(metadata i8* %19, metadata !9947, metadata !DIExpression()), !dbg !9949
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9962
  call void @llvm.dbg.value(metadata i8* %20, metadata !9948, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i32 %12, metadata !9946, metadata !DIExpression()), !dbg !9949
  %21 = add i32 %12, -1, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %21, metadata !9946, metadata !DIExpression()), !dbg !9949
  %22 = icmp eq i32 %21, 0, !dbg !9954
  br i1 %22, label %23, label %11, !dbg !9955, !llvm.loop !9963

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9949
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9949
  %26 = load i8, i8* %24, align 1, !dbg !9965
  %27 = zext i8 %26 to i32, !dbg !9965
  %28 = load i8, i8* %25, align 1, !dbg !9966
  %29 = zext i8 %28 to i32, !dbg !9966
  %30 = sub nsw i32 %27, %29, !dbg !9967
  br label %31, !dbg !9968

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9949
  ret i32 %32, !dbg !9969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9974, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %1, metadata !9975, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %2, metadata !9976, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %0, metadata !9977, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %1, metadata !9978, metadata !DIExpression()), !dbg !9979
  %4 = ptrtoint i8* %0 to i32, !dbg !9980
  %5 = ptrtoint i8* %1 to i32, !dbg !9980
  %6 = sub i32 %4, %5, !dbg !9980
  %7 = icmp ult i32 %6, %2, !dbg !9982
  br i1 %7, label %10, label %8, !dbg !9983

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %0, metadata !9977, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %2, metadata !9976, metadata !DIExpression()), !dbg !9979
  %9 = icmp eq i32 %2, 0, !dbg !9984
  br i1 %9, label %26, label %17, !dbg !9986

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9976, metadata !DIExpression()), !dbg !9979
  %12 = add i32 %11, -1, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %12, metadata !9976, metadata !DIExpression()), !dbg !9979
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9990
  %14 = load i8, i8* %13, align 1, !dbg !9990
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9991
  store i8 %14, i8* %15, align 1, !dbg !9992
  %16 = icmp eq i32 %12, 0, !dbg !9993
  br i1 %16, label %26, label %10, !dbg !9994, !llvm.loop !9995

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %19, metadata !9977, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %20, metadata !9976, metadata !DIExpression()), !dbg !9979
  %21 = load i8, i8* %18, align 1, !dbg !9997
  store i8 %21, i8* %19, align 1, !dbg !9999
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !10000
  call void @llvm.dbg.value(metadata i8* %22, metadata !9977, metadata !DIExpression()), !dbg !9979
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !10001
  call void @llvm.dbg.value(metadata i8* %23, metadata !9978, metadata !DIExpression()), !dbg !9979
  %24 = add i32 %20, -1, !dbg !10002
  call void @llvm.dbg.value(metadata i32 %24, metadata !9976, metadata !DIExpression()), !dbg !9979
  %25 = icmp eq i32 %24, 0, !dbg !9984
  br i1 %25, label %26, label %17, !dbg !9986, !llvm.loop !10003

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !10005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10012, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %1, metadata !10013, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i32 %2, metadata !10014, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %0, metadata !10015, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %1, metadata !10016, metadata !DIExpression()), !dbg !10017
  %4 = icmp eq i32 %2, 0, !dbg !10018
  br i1 %4, label %14, label %5, !dbg !10019

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !10016, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i8* %7, metadata !10015, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i32 %8, metadata !10014, metadata !DIExpression()), !dbg !10017
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !10020
  call void @llvm.dbg.value(metadata i8* %9, metadata !10016, metadata !DIExpression()), !dbg !10017
  %10 = load i8, i8* %6, align 1, !dbg !10022
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10023
  call void @llvm.dbg.value(metadata i8* %11, metadata !10015, metadata !DIExpression()), !dbg !10017
  store i8 %10, i8* %7, align 1, !dbg !10024
  %12 = add i32 %8, -1, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %12, metadata !10014, metadata !DIExpression()), !dbg !10017
  %13 = icmp eq i32 %12, 0, !dbg !10018
  br i1 %13, label %14, label %5, !dbg !10019, !llvm.loop !10026

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !10029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10033, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10034, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %2, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  %4 = trunc i32 %1 to i8, !dbg !10039
  call void @llvm.dbg.value(metadata i8 %4, metadata !10037, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %2, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  %5 = icmp eq i32 %2, 0, !dbg !10040
  br i1 %5, label %12, label %6, !dbg !10041

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %8, metadata !10036, metadata !DIExpression()), !dbg !10038
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10042
  call void @llvm.dbg.value(metadata i8* %9, metadata !10036, metadata !DIExpression()), !dbg !10038
  store i8 %4, i8* %8, align 1, !dbg !10044
  %10 = add i32 %7, -1, !dbg !10045
  call void @llvm.dbg.value(metadata i32 %10, metadata !10035, metadata !DIExpression()), !dbg !10038
  %11 = icmp eq i32 %10, 0, !dbg !10040
  br i1 %11, label %12, label %6, !dbg !10041, !llvm.loop !10046

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !10048
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10049 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10053, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 %1, metadata !10054, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 %2, metadata !10055, metadata !DIExpression()), !dbg !10059
  %4 = icmp eq i32 %2, 0, !dbg !10060
  br i1 %4, label %17, label %5, !dbg !10061

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !10062

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !10063
  call void @llvm.dbg.value(metadata i8* %9, metadata !10056, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i32 %8, metadata !10055, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i8* %9, metadata !10056, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10063
  %10 = load i8, i8* %9, align 1, !dbg !10064
  %11 = icmp eq i8 %10, %6, !dbg !10067
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !10068
  call void @llvm.dbg.value(metadata i8* %12, metadata !10056, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i32 %13, metadata !10055, metadata !DIExpression()), !dbg !10059
  br i1 %15, label %16, label %7, !dbg !10068, !llvm.loop !10069

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !10071

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !10059
  ret i8* %19, !dbg !10072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !10073 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !10075, metadata !DIExpression()), !dbg !10076
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !10077
  ret void, !dbg !10078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !10079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10081, metadata !DIExpression()), !dbg !10082
  ret i32 -1, !dbg !10083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10088, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32* %1, metadata !10089, metadata !DIExpression()), !dbg !10090
  %3 = ptrtoint i32* %1 to i32, !dbg !10091
  %4 = and i32 %3, -2, !dbg !10091
  %5 = icmp eq i32 %4, 2, !dbg !10091
  br i1 %5, label %6, label %9, !dbg !10091

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10092
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !10092
  br label %9, !dbg !10093

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !10093
  ret i32 %10, !dbg !10094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10097, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32* %1, metadata !10098, metadata !DIExpression()), !dbg !10099
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10100
  ret i32 %3, !dbg !10101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10105, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i32* %1, metadata !10106, metadata !DIExpression()), !dbg !10107
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10108, !srcloc !10110
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10111
  ret i32 %3, !dbg !10112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10118, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32* %1, metadata !10119, metadata !DIExpression()), !dbg !10122
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !10123
  call void @llvm.dbg.value(metadata i32 %3, metadata !10120, metadata !DIExpression()), !dbg !10122
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !10124
  call void @llvm.dbg.value(metadata i32 %4, metadata !10121, metadata !DIExpression()), !dbg !10122
  %5 = icmp ne i32 %3, %4, !dbg !10125
  %6 = sext i1 %5 to i32, !dbg !10126
  ret i32 %6, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10132, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32 %1, metadata !10133, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32 %2, metadata !10134, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32* %3, metadata !10135, metadata !DIExpression()), !dbg !10136
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10137
  ret i32 %5, !dbg !10138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10141, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32 %1, metadata !10142, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32 %2, metadata !10143, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32* %3, metadata !10144, metadata !DIExpression()), !dbg !10145
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10146, !srcloc !10148
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10149
  ret i32 %5, !dbg !10150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10151 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10153, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %1, metadata !10154, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %2, metadata !10155, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32* %3, metadata !10156, metadata !DIExpression()), !dbg !10161
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10162
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10164
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10164
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10164
  br i1 %11, label %33, label %12, !dbg !10164

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10161
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10161
  call void @llvm.dbg.value(metadata i8* %14, metadata !10159, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %13, metadata !10157, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %1, metadata !10158, metadata !DIExpression()), !dbg !10161
  br label %15, !dbg !10165

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10167
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10161
  call void @llvm.dbg.value(metadata i8* %17, metadata !10159, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.value(metadata i32 %16, metadata !10158, metadata !DIExpression()), !dbg !10161
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10168
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10171
  call void @llvm.dbg.value(metadata i8* %19, metadata !10159, metadata !DIExpression()), !dbg !10161
  %20 = load i8, i8* %17, align 1, !dbg !10172
  %21 = zext i8 %20 to i32, !dbg !10173
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10168
  %23 = icmp eq i32 %22, -1, !dbg !10174
  br i1 %23, label %30, label %24, !dbg !10175

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %25, metadata !10158, metadata !DIExpression()), !dbg !10161
  %26 = icmp eq i32 %25, 0, !dbg !10177
  br i1 %26, label %27, label %15, !dbg !10178, !llvm.loop !10179

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %28, metadata !10157, metadata !DIExpression()), !dbg !10161
  %29 = icmp eq i32 %28, 0, !dbg !10182
  br i1 %29, label %30, label %12, !dbg !10183, !llvm.loop !10184

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10161
  call void @llvm.dbg.value(metadata i32 %31, metadata !10157, metadata !DIExpression()), !dbg !10161
  call void @llvm.dbg.label(metadata !10160), !dbg !10187
  %32 = sub i32 %2, %31, !dbg !10188
  br label %33, !dbg !10189

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10161
  ret i32 %34, !dbg !10190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10191 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10195, metadata !DIExpression()), !dbg !10196
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10197
  %3 = icmp eq i32 %2, -1, !dbg !10199
  br i1 %3, label %8, label %4, !dbg !10200

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10201
  %6 = icmp eq i32 %5, -1, !dbg !10202
  %7 = sext i1 %6 to i32, !dbg !10201
  br label %8, !dbg !10203

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10196
  ret i32 %9, !dbg !10204
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10207, metadata !DIExpression()), !dbg !10208
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10215, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %1, metadata !10216, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10217, metadata !DIExpression()), !dbg !10221
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10222
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10222
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10222
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10218, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %0, metadata !10220, metadata !DIExpression()), !dbg !10221
  %7 = icmp slt i32 %0, %1, !dbg !10223
  br i1 %7, label %8, label %22, !dbg !10226

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10220, metadata !DIExpression()), !dbg !10221
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10227
  %11 = icmp eq i32 %10, 0, !dbg !10227
  br i1 %11, label %19, label %12, !dbg !10230

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10231
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10233
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10233
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10235
  br i1 %15, label %19, label %16, !dbg !10236

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10237
  %18 = load i8*, i8** %17, align 4, !dbg !10237
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10238
  br label %19, !dbg !10239

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10240
  call void @llvm.dbg.value(metadata i32 %20, metadata !10220, metadata !DIExpression()), !dbg !10221
  %21 = icmp eq i32 %20, %1, !dbg !10223
  br i1 %21, label %22, label %8, !dbg !10226, !llvm.loop !10241

22:                                               ; preds = %19, %3
  ret void, !dbg !10243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10246, metadata !DIExpression()), !dbg !10247
  %2 = shl nuw i32 1, %0, !dbg !10248
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10251
  ret i32 %3, !dbg !10252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !10253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10257, metadata !DIExpression()), !dbg !10258
  %2 = shl nuw i32 1, %0, !dbg !10259
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10262
  ret void, !dbg !10263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10267, metadata !DIExpression()), !dbg !10268
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10273, metadata !DIExpression()), !dbg !10274
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10275
  %3 = and i32 %2, %0, !dbg !10275
  %4 = icmp eq i32 %3, %0, !dbg !10276
  %5 = zext i1 %4 to i32, !dbg !10276
  ret i32 %5, !dbg !10277
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10280, metadata !DIExpression()), !dbg !10281
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10282
  ret void, !dbg !10283
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10286, metadata !DIExpression()), !dbg !10287
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10292, metadata !DIExpression()), !dbg !10293
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10294
  ret void, !dbg !10295
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10298, metadata !DIExpression()), !dbg !10299
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !10300
  ret void, !dbg !10301
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10304, metadata !DIExpression()), !dbg !10305
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10310, metadata !DIExpression()), !dbg !10311
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10314 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10316, metadata !DIExpression()), !dbg !10317
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !10318
  ret void, !dbg !10319
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10322, metadata !DIExpression()), !dbg !10323
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !10324
  ret void, !dbg !10325
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10328, metadata !DIExpression()), !dbg !10329
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10330
  ret void, !dbg !10331
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10334, metadata !DIExpression()), !dbg !10335
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10336
  ret void, !dbg !10337
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10340, metadata !DIExpression()), !dbg !10341
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10342
  ret i32 0, !dbg !10343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !909 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !913, metadata !DIExpression()), !dbg !10344
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10345
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10347
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10349
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10351
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10353
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10355
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10357
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !10359
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !10361
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !10363
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !10365
  ret void, !dbg !10367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10370, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 0, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10373
  %3 = load i32, i32* %2, align 4, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %3, metadata !10371, metadata !DIExpression()), !dbg !10372
  %4 = shl nuw i32 1, %0, !dbg !10374
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10375
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10376
  ret void, !dbg !10377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10380, metadata !DIExpression()), !dbg !10381
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10382
  %3 = or i32 %2, %0, !dbg !10382
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10382
  ret void, !dbg !10383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !10384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10386, metadata !DIExpression()), !dbg !10387
  %2 = icmp slt i32 %0, 32, !dbg !10388
  br i1 %2, label %3, label %5, !dbg !10390

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10391
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10393
  br label %5, !dbg !10394

5:                                                ; preds = %1, %3
  ret void, !dbg !10395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  %2 = xor i32 %0, -1, !dbg !10400
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10400
  %4 = and i32 %3, %2, !dbg !10400
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10400
  ret void, !dbg !10401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10406, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32 %1, metadata !10407, metadata !DIExpression()), !dbg !10408
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10409

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10410
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10412
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10413
  br label %11, !dbg !10414

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10415
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10416
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10417
  br label %11, !dbg !10418

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10419
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10420
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10421
  br label %11, !dbg !10422

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10423
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10424
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10425
  br label %11, !dbg !10426

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10430, metadata !DIExpression()), !dbg !10431
  %2 = xor i32 %0, -1, !dbg !10432
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10432
  %4 = and i32 %3, %2, !dbg !10432
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10432
  ret void, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10436, metadata !DIExpression()), !dbg !10437
  %2 = xor i32 %0, -1, !dbg !10438
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10438
  %4 = and i32 %3, %2, !dbg !10438
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10438
  ret void, !dbg !10439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10442, metadata !DIExpression()), !dbg !10443
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10444
  %3 = or i32 %2, %0, !dbg !10444
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10444
  ret void, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10448, metadata !DIExpression()), !dbg !10449
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10450
  %3 = or i32 %2, %0, !dbg !10450
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10450
  ret void, !dbg !10451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10456, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10457, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i8* %2, metadata !10458, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10459, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10461, metadata !DIExpression()), !dbg !10462
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10463
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10463
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10465
  br i1 %6, label %7, label %9, !dbg !10466

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10467
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10468
  store i8* %2, i8** %8, align 4, !dbg !10469
  br label %9, !dbg !10470

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10462
  ret i32 %10, !dbg !10471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10474, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10475, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10476, metadata !DIExpression()), !dbg !10477
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10478
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10479
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10480
  store i8* null, i8** %3, align 4, !dbg !10481
  ret void, !dbg !10482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10485, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i8* %1, metadata !10486, metadata !DIExpression()), !dbg !10490
  call void @llvm.dbg.value(metadata i8* %1, metadata !10487, metadata !DIExpression()), !dbg !10490
  %3 = bitcast i8* %1 to i32*, !dbg !10491
  %4 = load i32, i32* %3, align 4, !dbg !10491
  %5 = add i32 %4, -169, !dbg !10491
  %6 = icmp ult i32 %5, -121, !dbg !10491
  br i1 %6, label %15, label %7, !dbg !10493

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10494
  %9 = inttoptr i32 %8 to i32*, !dbg !10495
  call void @llvm.dbg.value(metadata i32* %9, metadata !10488, metadata !DIExpression()), !dbg !10490
  %10 = load volatile i32, i32* %9, align 4, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %10, metadata !10489, metadata !DIExpression()), !dbg !10490
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10497
  %12 = bitcast i8* %11 to i32*, !dbg !10497
  %13 = load i32, i32* %12, align 4, !dbg !10497
  %14 = or i32 %13, %10, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %14, metadata !10489, metadata !DIExpression()), !dbg !10490
  store volatile i32 %14, i32* %9, align 4, !dbg !10499
  br label %15, !dbg !10500

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10490
  ret i32 %16, !dbg !10501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10504, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i8* %1, metadata !10505, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata i8* %1, metadata !10506, metadata !DIExpression()), !dbg !10509
  %3 = bitcast i8* %1 to i32*, !dbg !10510
  %4 = load i32, i32* %3, align 4, !dbg !10510
  %5 = add i32 %4, -169, !dbg !10510
  %6 = icmp ult i32 %5, -121, !dbg !10510
  br i1 %6, label %16, label %7, !dbg !10512

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10513
  %9 = inttoptr i32 %8 to i32*, !dbg !10514
  call void @llvm.dbg.value(metadata i32* %9, metadata !10507, metadata !DIExpression()), !dbg !10509
  %10 = load volatile i32, i32* %9, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %10, metadata !10508, metadata !DIExpression()), !dbg !10509
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10516
  %12 = bitcast i8* %11 to i32*, !dbg !10516
  %13 = load i32, i32* %12, align 4, !dbg !10516
  %14 = xor i32 %13, -1, !dbg !10517
  %15 = and i32 %10, %14, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %15, metadata !10508, metadata !DIExpression()), !dbg !10509
  store volatile i32 %15, i32* %9, align 4, !dbg !10519
  br label %16, !dbg !10520

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10509
  ret i32 %17, !dbg !10521
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10524, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i8* %1, metadata !10525, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i32* %2, metadata !10526, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i8* %1, metadata !10527, metadata !DIExpression()), !dbg !10532
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %4, metadata !10528, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i32 undef, metadata !10529, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i32 undef, metadata !10530, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i32 %4, metadata !10531, metadata !DIExpression()), !dbg !10532
  %5 = bitcast i8* %1 to i32*, !dbg !10534
  %6 = load i32, i32* %5, align 4, !dbg !10534
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10535

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !10536
  call void @llvm.dbg.value(metadata i32 %8, metadata !10529, metadata !DIExpression()), !dbg !10532
  br label %19, !dbg !10537

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !10539
  call void @llvm.dbg.value(metadata i32 %10, metadata !10530, metadata !DIExpression()), !dbg !10532
  br label %19, !dbg !10540

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10541
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !10542
  br label %19, !dbg !10543

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10544
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !10545
  br label %19, !dbg !10546

17:                                               ; preds = %3
  br label %19, !dbg !10547

18:                                               ; preds = %3
  br label %19, !dbg !10548

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10549
  br label %21, !dbg !10550

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10532
  ret i32 %22, !dbg !10550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10553, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.value(metadata i8* %1, metadata !10554, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.value(metadata i8* %2, metadata !10555, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.value(metadata i8* %1, metadata !10556, metadata !DIExpression()), !dbg !10561
  %4 = bitcast i8* %1 to i32*, !dbg !10562
  %5 = load i32, i32* %4, align 4, !dbg !10562
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %6, metadata !10560, metadata !DIExpression()), !dbg !10561
  %7 = icmp slt i32 %6, 0, !dbg !10564
  br i1 %7, label %22, label %8, !dbg !10566

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10556, metadata !DIExpression()), !dbg !10561
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10567
  %10 = bitcast i8* %9 to i32*, !dbg !10567
  %11 = load i32, i32* %10, align 4, !dbg !10567
  %12 = lshr i32 %11, 16, !dbg !10567
  %13 = and i32 %12, 7, !dbg !10567
  %14 = lshr i32 %11, 8, !dbg !10568
  %15 = and i32 %14, 31, !dbg !10568
  %16 = shl i32 %13, %15, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %16, metadata !10559, metadata !DIExpression()), !dbg !10561
  %17 = and i32 %11, 255, !dbg !10570
  %18 = or i32 %17, 1073887232, !dbg !10571
  %19 = inttoptr i32 %18 to i32*, !dbg !10572
  call void @llvm.dbg.value(metadata i32* %19, metadata !10557, metadata !DIExpression()), !dbg !10561
  %20 = load volatile i32, i32* %19, align 4, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %20, metadata !10558, metadata !DIExpression()), !dbg !10561
  %21 = or i32 %16, %20, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %21, metadata !10558, metadata !DIExpression()), !dbg !10561
  store volatile i32 %21, i32* %19, align 4, !dbg !10575
  br label %22, !dbg !10576

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10561
  ret i32 %23, !dbg !10577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10582, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i32 0, metadata !10583, metadata !DIExpression()), !dbg !10584
  %2 = add i32 %0, -1, !dbg !10585
  %3 = icmp ult i32 %2, 6, !dbg !10585
  br i1 %3, label %4, label %7, !dbg !10585

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10585
  %6 = load i32, i32* %5, align 4, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %6, metadata !10583, metadata !DIExpression()), !dbg !10584
  br label %7, !dbg !10586

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10584
  ret i32 %8, !dbg !10587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10592, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %1, metadata !10593, metadata !DIExpression()), !dbg !10594
  %3 = udiv i32 %0, %1, !dbg !10595
  ret i32 %3, !dbg !10596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 8, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 84, metadata !10603, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 %1, metadata !10604, metadata !DIExpression()), !dbg !10605
  %3 = mul i32 %0, 84, !dbg !10606
  %4 = shl nsw i32 %1, 3, !dbg !10607
  %5 = udiv i32 %3, %4, !dbg !10608
  ret i32 %5, !dbg !10609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10612, metadata !DIExpression()), !dbg !10615
  tail call void @config_enable_default_clocks() #27, !dbg !10616
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10617
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10617
  %4 = lshr i32 %3, 4, !dbg !10617
  %5 = and i32 %4, 15, !dbg !10617
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10617
  %7 = load i8, i8* %6, align 1, !dbg !10617
  %8 = zext i8 %7 to i32, !dbg !10617
  %9 = lshr i32 %2, %8, !dbg !10617
  call void @llvm.dbg.value(metadata i32 %9, metadata !10613, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10615
  %10 = icmp ult i32 %9, 84000000, !dbg !10618
  br i1 %10, label %11, label %13, !dbg !10620

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10621
  br label %13, !dbg !10623

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10624
  tail call fastcc void @set_up_plls() #26, !dbg !10625
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10626
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10629
  br label %14, !dbg !10630

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10631
  %16 = icmp eq i32 %15, 8, !dbg !10632
  br i1 %16, label %17, label %14, !dbg !10630, !llvm.loop !10633

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10635
  br i1 %18, label %19, label %21, !dbg !10637

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10638
  br label %21, !dbg !10640

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10641
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10642
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10643
  ret i32 0, !dbg !10644
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10645 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10647
  %2 = and i32 %1, 240, !dbg !10647
  ret i32 %2, !dbg !10648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10649 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !10650
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !10655
  br label %1, !dbg !10656

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !10657
  %3 = icmp eq i32 %2, 1, !dbg !10658
  br i1 %3, label %4, label %1, !dbg !10656, !llvm.loop !10659

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10661
  br label %5, !dbg !10664

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10665
  %7 = icmp eq i32 %6, 1, !dbg !10666
  br i1 %7, label %8, label %5, !dbg !10664, !llvm.loop !10667

8:                                                ; preds = %5
  ret void, !dbg !10669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10670 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10671
  %2 = icmp eq i32 %1, 8, !dbg !10673
  br i1 %2, label %3, label %4, !dbg !10674

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10675
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10677
  br label %4, !dbg !10678

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10679
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10680
  %6 = and i32 %5, -196609, !dbg !10680
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10680
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10681
  %8 = and i32 %7, -251658241, !dbg !10681
  %9 = or i32 %8, 134217728, !dbg !10681
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10681
  tail call void @config_pll_sysclock() #27, !dbg !10682
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10683
  br label %10, !dbg !10684

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10685
  %12 = icmp eq i32 %11, 1, !dbg !10686
  br i1 %12, label %13, label %10, !dbg !10684, !llvm.loop !10687

13:                                               ; preds = %10
  ret void, !dbg !10689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10690 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10692, metadata !DIExpression()), !dbg !10693
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10694
  %2 = and i32 %1, -241, !dbg !10694
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10698, metadata !DIExpression()), !dbg !10699
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10700
  %3 = and i32 %2, -4, !dbg !10700
  %4 = or i32 %3, %0, !dbg !10700
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10700
  ret void, !dbg !10701
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10702 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10703
  %2 = and i32 %1, 12, !dbg !10703
  ret i32 %2, !dbg !10704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10705 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10707, metadata !DIExpression()), !dbg !10708
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10709
  %2 = and i32 %1, -7169, !dbg !10709
  %3 = or i32 %2, 4096, !dbg !10709
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10709
  ret void, !dbg !10710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10711 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10713, metadata !DIExpression()), !dbg !10714
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10715
  %2 = and i32 %1, -57345, !dbg !10715
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10715
  ret void, !dbg !10716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10717 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10718
  %2 = icmp eq i32 %1, 1, !dbg !10720
  br i1 %2, label %7, label %3, !dbg !10721

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10722
  br label %4, !dbg !10724

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10725
  %6 = icmp eq i32 %5, 1, !dbg !10726
  br i1 %6, label %7, label %4, !dbg !10724, !llvm.loop !10727

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10729
  br label %8, !dbg !10730

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10731
  %10 = icmp eq i32 %9, 0, !dbg !10732
  br i1 %10, label %11, label %8, !dbg !10730, !llvm.loop !10733

11:                                               ; preds = %8
  ret void, !dbg !10735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10736 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10737
  %2 = and i32 %1, -16777217, !dbg !10737
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10737
  ret void, !dbg !10738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10740
  %2 = or i32 %1, 16777216, !dbg !10740
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10740
  ret void, !dbg !10741
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10742 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10743
  %2 = lshr i32 %1, 25, !dbg !10744
  %3 = and i32 %2, 1, !dbg !10744
  ret i32 %3, !dbg !10745
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10746 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10747
  %2 = lshr i32 %1, 1, !dbg !10748
  %3 = and i32 %2, 1, !dbg !10748
  ret i32 %3, !dbg !10749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10750 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10751
  %2 = or i32 %1, 1, !dbg !10751
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10751
  ret void, !dbg !10752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10753 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10754
  %2 = and i32 %1, -262145, !dbg !10754
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10754
  ret void, !dbg !10755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10757
  %2 = or i32 %1, 65536, !dbg !10757
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10757
  ret void, !dbg !10758
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10759 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10760
  %2 = lshr i32 %1, 17, !dbg !10761
  %3 = and i32 %2, 1, !dbg !10761
  ret i32 %3, !dbg !10762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10763 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10764
  %2 = or i32 %1, 1, !dbg !10764
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10764
  ret void, !dbg !10765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10766 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10767
  %2 = lshr i32 %1, 1, !dbg !10768
  %3 = and i32 %2, 1, !dbg !10768
  ret i32 %3, !dbg !10769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10770 {
  ret i32 16000000, !dbg !10772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10776 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10777
  ret void, !dbg !10778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10779 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10783, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 8, metadata !10784, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 84, metadata !10785, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 0, metadata !10786, metadata !DIExpression()), !dbg !10787
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10788
  %2 = and i32 %1, -4227072, !dbg !10788
  %3 = or i32 %2, 4199688, !dbg !10788
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10788
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10789
  %5 = and i32 %4, -196609, !dbg !10789
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10789
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10790
  %7 = and i32 %6, -1879048193, !dbg !10790
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10790
  ret void, !dbg !10791
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10792 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10793
  ret void, !dbg !10794
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10795 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10798, metadata !DIExpression()), !dbg !10800
  %2 = bitcast i32* %1 to i8*, !dbg !10801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10801
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10799, metadata !DIExpression()), !dbg !10802
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10803
  %4 = or i32 %3, 268435456, !dbg !10803
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10803
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10804
  %6 = and i32 %5, 268435456, !dbg !10804
  store volatile i32 %6, i32* %1, align 4, !dbg !10805
  %7 = load volatile i32, i32* %1, align 4, !dbg !10806
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10807
  ret void, !dbg !10807
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10808 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10810, metadata !DIExpression()), !dbg !10811
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10812
  br i1 %2, label %3, label %4, !dbg !10814

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10815
  br label %4, !dbg !10816

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10811
  ret i32 %5, !dbg !10817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10818 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10822, metadata !DIExpression()), !dbg !10823
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10824, !srcloc !10826
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10827
  ret i1 %1, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10829 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10830
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10831
  ret void, !dbg !10832
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10835, metadata !DIExpression()), !dbg !10836
  %2 = icmp eq i32 %0, 10, !dbg !10837
  br i1 %2, label %3, label %4, !dbg !10839

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10840
  br label %4, !dbg !10842

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10843
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10844
  ret i32 %0, !dbg !10845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10846 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10849, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata i8 %0, metadata !10850, metadata !DIExpression()), !dbg !10851
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10852, !srcloc !10854
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10855
  ret void, !dbg !10856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10859, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.value(metadata i8 %0, metadata !10860, metadata !DIExpression()), !dbg !10862
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10863
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10861, metadata !DIExpression()), !dbg !10862
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10864
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10864
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #27, !dbg !10865
  ret void, !dbg !10866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10867 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10869, metadata !DIExpression()), !dbg !10870
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !10871
  ret i1 %1, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10920, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10921, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10922, metadata !DIExpression()), !dbg !10923
  ret void, !dbg !10924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #20 !dbg !10925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10927, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 0, metadata !10928, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 0, metadata !10928, metadata !DIExpression()), !dbg !10929
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10930
  call void @llvm.dbg.value(metadata i32 1, metadata !10928, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 1, metadata !10928, metadata !DIExpression()), !dbg !10929
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10930
  call void @llvm.dbg.value(metadata i32 2, metadata !10928, metadata !DIExpression()), !dbg !10929
  ret i32 0, !dbg !10934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10935 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10937, metadata !DIExpression()), !dbg !10938
  ret i32 50, !dbg !10939
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10942, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10943, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 %2, metadata !10944, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 %3, metadata !10945, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 %4, metadata !10946, metadata !DIExpression()), !dbg !10950
  %6 = icmp eq i32 %2, 1, !dbg !10951
  br i1 %6, label %8, label %7, !dbg !10953

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !10954
  br label %70, !dbg !10960

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !10961
  %10 = load i16, i16* %9, align 2, !dbg !10961
  %11 = and i16 %10, 32, !dbg !10963
  %12 = icmp eq i16 %11, 0, !dbg !10963
  br i1 %12, label %13, label %14, !dbg !10964

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !10965
  br label %70, !dbg !10971

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !10972
  %16 = load i16, i16* %15, align 4, !dbg !10972
  %17 = icmp eq i16 %16, 16, !dbg !10974
  br i1 %17, label %19, label %18, !dbg !10975

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !10976
  br label %70, !dbg !10982

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !10983
  br i1 %20, label %21, label %37, !dbg !10985

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !10986

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10988
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10988
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !10990
  br label %53, !dbg !10991

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10992
  %27 = load i32, i32* %26, align 4, !dbg !10992
  %28 = icmp eq i32 %27, 32, !dbg !10994
  br i1 %28, label %30, label %29, !dbg !10995

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10996
  br label %70, !dbg !11002

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11003
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11003
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !11004
  br label %53, !dbg !11005

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11006
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !11006
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !11007
  br label %53, !dbg !11008

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !11009
  br label %70, !dbg !11014

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !11015

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11017
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11017
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !11019
  br label %53, !dbg !11020

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !11021
  %43 = load i32, i32* %42, align 4, !dbg !11021
  %44 = icmp eq i32 %43, 32, !dbg !11023
  br i1 %44, label %46, label %45, !dbg !11024

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !11025
  br label %70, !dbg !11031

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11032
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !11032
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !11033
  br label %53, !dbg !11034

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !11035
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !11035
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !11036
  br label %53, !dbg !11037

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !11038
  br label %70, !dbg !11043

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !11044
  store i32 %3, i32* %54, align 4, !dbg !11045
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %55, metadata !10949, metadata !DIExpression()), !dbg !10950
  %56 = icmp eq i32 %55, 2, !dbg !11047
  br i1 %56, label %57, label %58, !dbg !11049

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !11050
  br label %70, !dbg !11056

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !11057
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !10947, metadata !DIExpression()), !dbg !10950
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !11058
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !11060
  %62 = load i8*, i8** %61, align 4, !dbg !11060
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !11061
  %64 = icmp eq i32 %63, 0, !dbg !11062
  br i1 %64, label %65, label %67, !dbg !11063

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !11064
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !11070
  store i32 0, i32* %66, align 4, !dbg !11071
  br label %70, !dbg !11072

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11073
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !11074
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !11074
  br label %70, !dbg !11075

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !10950
  ret i32 %71, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !11077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11079, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11080, metadata !DIExpression()), !dbg !11082
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11083
  %4 = load i8*, i8** %3, align 4, !dbg !11083
  call void @llvm.dbg.value(metadata i8* %4, metadata !11081, metadata !DIExpression()), !dbg !11082
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !11084
  %6 = bitcast i8* %4 to i32*, !dbg !11085
  store i32 0, i32* %6, align 4, !dbg !11086
  ret i32 0, !dbg !11087
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11088 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11090, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11091, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata i8* %2, metadata !11092, metadata !DIExpression()), !dbg !11094
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11095
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !11095
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !11095
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !11093, metadata !DIExpression()), !dbg !11094
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11096
  %8 = load i8*, i8** %7, align 4, !dbg !11096
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11098
  %10 = load i32, i32* %9, align 4, !dbg !11098
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11099
  %12 = load i8*, i8** %11, align 4, !dbg !11099
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11100
  %14 = load i32, i32* %13, align 4, !dbg !11100
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11101
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !11102
  %17 = icmp eq i32 %16, 0, !dbg !11103
  br i1 %17, label %18, label %19, !dbg !11104

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !11105
  br label %22, !dbg !11111

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11112
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11113
  store i32 %20, i32* %21, align 4, !dbg !11114
  br label %22, !dbg !11115

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !11094
  ret i32 %23, !dbg !11116
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11117 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11119, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11120, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i8* %2, metadata !11121, metadata !DIExpression()), !dbg !11125
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11126
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11126
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11126
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11122, metadata !DIExpression()), !dbg !11125
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11127
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11127
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11123, metadata !DIExpression()), !dbg !11128
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11128
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11129
  %10 = load i16, i16* %9, align 4, !dbg !11129
  %11 = zext i16 %10 to i32, !dbg !11130
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11131
  %13 = load i32, i32* %12, align 4, !dbg !11131
  %14 = lshr i32 %13, 3, !dbg !11132
  %15 = sub nsw i32 %11, %14, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %15, metadata !11124, metadata !DIExpression()), !dbg !11125
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11134
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11135
  %18 = load i8*, i8** %17, align 4, !dbg !11135
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11137
  %20 = load i32, i32* %19, align 4, !dbg !11137
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11138
  %22 = load i8*, i8** %21, align 4, !dbg !11138
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11139
  %24 = load i32, i32* %23, align 4, !dbg !11139
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11140
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11141
  %27 = icmp eq i32 %26, 0, !dbg !11142
  br i1 %27, label %28, label %29, !dbg !11143

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11144
  br label %32, !dbg !11150

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11151
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11152
  store i32 %30, i32* %31, align 4, !dbg !11153
  br label %32, !dbg !11154

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11155
  ret i32 %33, !dbg !11155
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11156 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11158, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11159, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i8* %2, metadata !11160, metadata !DIExpression()), !dbg !11173
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11174
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11174
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11161, metadata !DIExpression()), !dbg !11175
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11176
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11176
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11176
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11169, metadata !DIExpression()), !dbg !11173
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11177
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11178
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11170, metadata !DIExpression()), !dbg !11173
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11179
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11179
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11172, metadata !DIExpression()), !dbg !11173
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11180
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11182
  %15 = load i16, i16* %14, align 2, !dbg !11182
  %16 = zext i16 %15 to i32, !dbg !11183
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11184
  %18 = load i16, i16* %17, align 2, !dbg !11184
  %19 = zext i16 %18 to i32, !dbg !11185
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11186
  %21 = icmp eq i32 %20, 0, !dbg !11187
  br i1 %21, label %22, label %23, !dbg !11188

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11189
  br label %56, !dbg !11195

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11196
  %25 = load i8*, i8** %24, align 4, !dbg !11196
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11198
  %27 = load i32, i32* %26, align 4, !dbg !11198
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11199
  %29 = load i8*, i8** %28, align 4, !dbg !11199
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11200
  %31 = load i32, i32* %30, align 4, !dbg !11200
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11201
  %33 = load i8*, i8** %32, align 4, !dbg !11201
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11202
  %35 = load i32, i32* %34, align 4, !dbg !11202
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11203
  %37 = icmp eq i32 %36, 0, !dbg !11204
  br i1 %37, label %38, label %39, !dbg !11205

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11206
  br label %56, !dbg !11212

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11213
  %41 = load i8*, i8** %40, align 4, !dbg !11213
  %42 = icmp eq i8* %41, null, !dbg !11215
  br i1 %42, label %50, label %43, !dbg !11216

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11217
  %45 = load i32, i32* %34, align 4, !dbg !11219
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11220
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11221
  %48 = load i32, i32* %47, align 4, !dbg !11221
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11222
  br label %50, !dbg !11223

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11224
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11225
  %53 = load i32, i32* %52, align 4, !dbg !11225
  %54 = add i32 %53, %51, !dbg !11226
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11227
  store i32 %54, i32* %55, align 4, !dbg !11228
  br label %56, !dbg !11229

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11173
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11230
  ret i32 %57, !dbg !11230
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11231 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11233, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11234, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata i8* %2, metadata !11235, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11236, metadata !DIExpression()), !dbg !11237
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11238
  %5 = load i8*, i8** %4, align 4, !dbg !11238
  %6 = icmp eq i8* %5, %2, !dbg !11240
  br i1 %6, label %8, label %7, !dbg !11241

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11242
  br label %27, !dbg !11248

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11249
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11249
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11249
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11236, metadata !DIExpression()), !dbg !11237
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11250
  %13 = load i8*, i8** %12, align 4, !dbg !11250
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11252
  %15 = load i32, i32* %14, align 4, !dbg !11252
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11253
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11254
  %18 = load i32, i32* %17, align 4, !dbg !11254
  %19 = add nsw i32 %18, -16, !dbg !11255
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11256
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11257
  %22 = icmp eq i32 %21, 0, !dbg !11258
  br i1 %22, label %23, label %24, !dbg !11259

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11260
  br label %27, !dbg !11266

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11267
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11268
  store i32 %25, i32* %26, align 4, !dbg !11269
  br label %27, !dbg !11270

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11237
  ret i32 %28, !dbg !11271
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11272 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11274, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11275, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i8* %2, metadata !11276, metadata !DIExpression()), !dbg !11281
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11282
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11282
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11277, metadata !DIExpression()), !dbg !11283
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11284
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11284
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11284
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11278, metadata !DIExpression()), !dbg !11281
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11285
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11286
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11279, metadata !DIExpression()), !dbg !11281
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11287
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11287
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11280, metadata !DIExpression()), !dbg !11281
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11288
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11290
  %15 = load i16, i16* %14, align 2, !dbg !11290
  %16 = zext i16 %15 to i32, !dbg !11291
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11292
  %18 = load i16, i16* %17, align 2, !dbg !11292
  %19 = zext i16 %18 to i32, !dbg !11293
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11294
  %21 = icmp eq i32 %20, 0, !dbg !11295
  br i1 %21, label %22, label %23, !dbg !11296

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11297
  br label %54, !dbg !11303

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11304
  %25 = load i8*, i8** %24, align 4, !dbg !11304
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11306
  %27 = load i8*, i8** %26, align 4, !dbg !11306
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11307
  %29 = load i32, i32* %28, align 4, !dbg !11307
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11308
  %31 = icmp eq i8* %25, %30, !dbg !11309
  br i1 %31, label %33, label %32, !dbg !11310

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11311
  br label %54, !dbg !11317

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11318
  %35 = load i8*, i8** %34, align 4, !dbg !11318
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11320
  %37 = load i32, i32* %36, align 4, !dbg !11320
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11321
  %39 = load i8*, i8** %38, align 4, !dbg !11321
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11322
  %41 = load i32, i32* %40, align 4, !dbg !11322
  %42 = load i16, i16* %17, align 2, !dbg !11323
  %43 = zext i16 %42 to i32, !dbg !11324
  %44 = add nsw i32 %29, %43, !dbg !11325
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11326
  %46 = icmp eq i32 %45, 0, !dbg !11327
  br i1 %46, label %47, label %48, !dbg !11328

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11329
  br label %54, !dbg !11335

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11336
  %50 = load i16, i16* %17, align 2, !dbg !11337
  %51 = zext i16 %50 to i32, !dbg !11338
  %52 = add nsw i32 %49, %51, !dbg !11339
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11340
  store i32 %52, i32* %53, align 4, !dbg !11341
  br label %54, !dbg !11342

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11281
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11343
  ret i32 %55, !dbg !11343
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11344 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11346, metadata !DIExpression()), !dbg !11347
  br label %1, !dbg !11348

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11346, metadata !DIExpression()), !dbg !11347
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11350
  %5 = load i32, i32* %4, align 4, !dbg !11350
  %6 = icmp eq i32 %5, 0, !dbg !11354
  br i1 %6, label %7, label %8, !dbg !11355

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11356
  br label %9, !dbg !11358

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11346, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11347
  br i1 %2, label %1, label %9, !dbg !11348, !llvm.loop !11359

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11361
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11362 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11364, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata i8 %1, metadata !11365, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.value(metadata i32 %2, metadata !11366, metadata !DIExpression()), !dbg !11369
  %5 = bitcast i32* %4 to i8*, !dbg !11370
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11370
  call void @llvm.dbg.value(metadata i32* %4, metadata !11368, metadata !DIExpression(DW_OP_deref)), !dbg !11369
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11371
  call void @llvm.dbg.value(metadata i32 %6, metadata !11367, metadata !DIExpression()), !dbg !11369
  %7 = icmp eq i32 %6, 0, !dbg !11372
  br i1 %7, label %8, label %31, !dbg !11374

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11367, metadata !DIExpression()), !dbg !11369
  %9 = and i32 %2, 131072, !dbg !11375
  %10 = icmp eq i32 %9, 0, !dbg !11377
  br i1 %10, label %28, label %11, !dbg !11378

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11379
  %13 = icmp eq i32 %12, 0, !dbg !11382
  br i1 %13, label %18, label %14, !dbg !11383

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11384
  %16 = shl nuw i32 1, %15, !dbg !11384
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11386
  br label %25, !dbg !11387

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11388
  %20 = icmp eq i32 %19, 0, !dbg !11390
  %21 = zext i8 %1 to i32, !dbg !11369
  br i1 %20, label %25, label %22, !dbg !11391

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11392
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11394
  br label %25, !dbg !11395

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11396
  %27 = load i32, i32* %4, align 4, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %30, metadata !11368, metadata !DIExpression()), !dbg !11369
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11398
  br label %31, !dbg !11399

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11396
  %30 = load i32, i32* %4, align 4, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %30, metadata !11368, metadata !DIExpression()), !dbg !11369
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11398
  call void @llvm.dbg.value(metadata i32 0, metadata !11367, metadata !DIExpression()), !dbg !11369
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11400
  ret i32 %6, !dbg !11400
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11405, metadata !DIExpression()), !dbg !11410
  call void @llvm.dbg.value(metadata i32* %1, metadata !11406, metadata !DIExpression()), !dbg !11410
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11411
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11411
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11411
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11407, metadata !DIExpression()), !dbg !11410
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11412
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11412
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11412
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11409, metadata !DIExpression()), !dbg !11410
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11413
  store i32 %9, i32* %1, align 4, !dbg !11414
  ret i32 0, !dbg !11415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11418, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata i32 %1, metadata !11419, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata i32 %2, metadata !11420, metadata !DIExpression()), !dbg !11424
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11425
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11425
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11425
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11421, metadata !DIExpression()), !dbg !11424
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11426
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11426
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11426
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11422, metadata !DIExpression()), !dbg !11424
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11427
  call void @llvm.dbg.value(metadata i32 %10, metadata !11423, metadata !DIExpression()), !dbg !11424
  %11 = xor i32 %1, -1, !dbg !11428
  %12 = and i32 %10, %11, !dbg !11429
  %13 = and i32 %2, %1, !dbg !11430
  %14 = or i32 %12, %13, !dbg !11431
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11432
  ret i32 0, !dbg !11433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11436, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.value(metadata i32 %1, metadata !11437, metadata !DIExpression()), !dbg !11440
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11441
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11441
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11441
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11438, metadata !DIExpression()), !dbg !11440
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11442
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11442
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11442
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11439, metadata !DIExpression()), !dbg !11440
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11443
  store volatile i32 %1, i32* %9, align 4, !dbg !11443
  ret i32 0, !dbg !11444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11445 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11447, metadata !DIExpression()), !dbg !11451
  call void @llvm.dbg.value(metadata i32 %1, metadata !11448, metadata !DIExpression()), !dbg !11451
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11452
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11452
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11452
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11449, metadata !DIExpression()), !dbg !11451
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11453
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11453
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11453
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11450, metadata !DIExpression()), !dbg !11451
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11454
  ret i32 0, !dbg !11455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11458, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata i32 %1, metadata !11459, metadata !DIExpression()), !dbg !11462
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11463
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11463
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11463
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11460, metadata !DIExpression()), !dbg !11462
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11464
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11464
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11464
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11461, metadata !DIExpression()), !dbg !11462
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11465
  %10 = load volatile i32, i32* %9, align 4, !dbg !11465
  %11 = xor i32 %10, %1, !dbg !11465
  store volatile i32 %11, i32* %9, align 4, !dbg !11465
  ret i32 0, !dbg !11466
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11469, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8 %1, metadata !11470, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %2, metadata !11471, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %3, metadata !11472, metadata !DIExpression()), !dbg !11479
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11480
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11480
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11480
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11473, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8* undef, metadata !11474, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11476, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11479
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11481

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11482
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11486
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11487
  %12 = load i32, i32* %11, align 4, !dbg !11487
  %13 = icmp eq i32 %10, %12, !dbg !11488
  br i1 %13, label %14, label %29, !dbg !11489

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11490
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11492
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11493
  br label %29, !dbg !11494

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11495
  %17 = load i8*, i8** %16, align 4, !dbg !11495
  call void @llvm.dbg.value(metadata i8* %17, metadata !11474, metadata !DIExpression()), !dbg !11479
  %18 = zext i8 %1 to i32, !dbg !11496
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11498
  %20 = icmp eq i32 %19, 0, !dbg !11499
  br i1 %20, label %21, label %29, !dbg !11500

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11501
  %23 = load i32, i32* %22, align 4, !dbg !11501
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11502
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11503

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11476, metadata !DIExpression()), !dbg !11479
  br label %27, !dbg !11504

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11476, metadata !DIExpression()), !dbg !11479
  br label %27, !dbg !11506

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11476, metadata !DIExpression()), !dbg !11479
  br label %27, !dbg !11507

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11479
  call void @llvm.dbg.value(metadata i32 %28, metadata !11476, metadata !DIExpression()), !dbg !11479
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11508
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11509
  br label %29, !dbg !11509

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11479
  call void @llvm.dbg.value(metadata i32 %30, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.label(metadata !11478), !dbg !11510
  ret i32 %30, !dbg !11511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11514, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11515, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata i1 %2, metadata !11516, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11518
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11519
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11519
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11519
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11517, metadata !DIExpression()), !dbg !11518
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11520
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11521
  ret i32 %8, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11523 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11529, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11530, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i1 %2, metadata !11531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11532
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11533
  br i1 %4, label %10, label %5, !dbg !11535

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11536
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11539
  %8 = or i1 %7, %2, !dbg !11540
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11540
  br i1 %2, label %11, label %13, !dbg !11540

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11541

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11542
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11545
  br label %13, !dbg !11546

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11532
  ret i32 %14, !dbg !11547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11548 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11552, metadata !DIExpression()), !dbg !11553
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11554
  %3 = icmp eq %struct._snode* %2, null, !dbg !11554
  ret i1 %3, !dbg !11554
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11555 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11559, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11560, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11561, metadata !DIExpression()), !dbg !11563
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11564
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11562, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11561, metadata !DIExpression()), !dbg !11563
  %4 = icmp eq %struct._snode* %3, null, !dbg !11566
  br i1 %4, label %15, label %5, !dbg !11564

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11562, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11561, metadata !DIExpression()), !dbg !11563
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11568
  br i1 %6, label %9, label %11, !dbg !11571

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11562, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11561, metadata !DIExpression()), !dbg !11563
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11568
  br i1 %8, label %9, label %11, !dbg !11571, !llvm.loop !11572

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11573
  br label %15, !dbg !11573

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11562, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11561, metadata !DIExpression()), !dbg !11563
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11566
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11562, metadata !DIExpression()), !dbg !11563
  %14 = icmp eq %struct._snode* %13, null, !dbg !11566
  br i1 %14, label %15, label %7, !dbg !11564, !llvm.loop !11572

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11576 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11580, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11581, metadata !DIExpression()), !dbg !11582
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11583
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11583
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11583
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11584
  %5 = icmp eq %struct._snode* %4, null, !dbg !11584
  br i1 %5, label %6, label %8, !dbg !11583

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11586
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11586
  br label %8, !dbg !11586

8:                                                ; preds = %6, %2
  ret void, !dbg !11583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11592, metadata !DIExpression()), !dbg !11593
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11594
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11594
  ret %struct._snode* %3, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11596 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11600, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11601, metadata !DIExpression()), !dbg !11602
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11603
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11604
  ret void, !dbg !11605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11606 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11608, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11609, metadata !DIExpression()), !dbg !11610
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11611
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11612
  ret void, !dbg !11613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11614 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11616, metadata !DIExpression()), !dbg !11617
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11618
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11618
  ret %struct._snode* %3, !dbg !11619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11620 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11622, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11623, metadata !DIExpression()), !dbg !11624
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11625
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11632, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11633, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11634, metadata !DIExpression()), !dbg !11635
  %4 = icmp eq %struct._snode* %1, null, !dbg !11636
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11638
  br i1 %4, label %6, label %11, !dbg !11639

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11640
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11642
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11642
  br i1 %8, label %9, label %15, !dbg !11640

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11644
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11644
  br label %15, !dbg !11644

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11646
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11648
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11648
  br i1 %13, label %14, label %15, !dbg !11646

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11650
  br label %15, !dbg !11650

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11639
  ret void, !dbg !11639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11652 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11656, metadata !DIExpression()), !dbg !11657
  %2 = icmp eq %struct._snode* %0, null, !dbg !11658
  br i1 %2, label %5, label %3, !dbg !11658

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11658
  br label %5, !dbg !11658

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11658
  ret %struct._snode* %6, !dbg !11658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11659 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11661, metadata !DIExpression()), !dbg !11662
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11663
  ret %struct._snode* %2, !dbg !11663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11664 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11666, metadata !DIExpression()), !dbg !11667
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11668
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11668
  ret %struct._snode* %3, !dbg !11669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11672, metadata !DIExpression()), !dbg !11675
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11676, !range !11677
  call void @llvm.dbg.value(metadata i32 %2, metadata !11673, metadata !DIExpression()), !dbg !11675
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11678
  call void @llvm.dbg.value(metadata i32 %3, metadata !11674, metadata !DIExpression()), !dbg !11675
  ret i32 %3, !dbg !11679
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11682, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i8* %1, metadata !11683, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i8* %1, metadata !11684, metadata !DIExpression()), !dbg !11685
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11686
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11686
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11687
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11687
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11687
  %8 = shl nuw i32 1, %0, !dbg !11688
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11689
  ret void, !dbg !11690
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11691 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11695, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11696, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11697, metadata !DIExpression()), !dbg !11701
  %4 = bitcast i64* %3 to i8*, !dbg !11702
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11702
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11699, metadata !DIExpression()), !dbg !11701
  store i64 70368744177732, i64* %3, align 8, !dbg !11703
  call void @llvm.dbg.value(metadata i64* %3, metadata !11699, metadata !DIExpression(DW_OP_deref)), !dbg !11701
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11704
  call void @llvm.dbg.value(metadata i32 %5, metadata !11700, metadata !DIExpression()), !dbg !11701
  %6 = icmp eq i32 %5, 0, !dbg !11705
  br i1 %6, label %7, label %8, !dbg !11707

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11708
  br label %8, !dbg !11709

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11710
  ret void, !dbg !11710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11713, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i8* %0, metadata !11714, metadata !DIExpression()), !dbg !11716
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11717
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11715, metadata !DIExpression()), !dbg !11716
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11718
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11718
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !11719
  ret i32 %5, !dbg !11720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11723, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 %1, metadata !11724, metadata !DIExpression()), !dbg !11726
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11727
  call void @llvm.dbg.value(metadata i32 %3, metadata !11725, metadata !DIExpression()), !dbg !11726
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11728
  ret void, !dbg !11729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11734, metadata !DIExpression()), !dbg !11735
  %2 = sdiv i32 %0, 4, !dbg !11736
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11737
  %6 = add nsw i32 %5, 16, !dbg !11738
  %7 = shl i32 15, %6, !dbg !11739
  %8 = or i32 %7, %2, !dbg !11740
  ret i32 %8, !dbg !11741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11746, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 %1, metadata !11747, metadata !DIExpression()), !dbg !11748
  %3 = and i32 %1, 255, !dbg !11749
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11749
  %5 = load volatile i32, i32* %4, align 4, !dbg !11749
  %6 = lshr i32 %1, 16, !dbg !11749
  %7 = xor i32 %6, -1, !dbg !11749
  %8 = and i32 %5, %7, !dbg !11749
  call void @llvm.dbg.value(metadata i32 %6, metadata !11750, metadata !DIExpression()) #25, !dbg !11754
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11756, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %9, metadata !11753, metadata !DIExpression()) #25, !dbg !11754
  call void @llvm.dbg.value(metadata i32 %9, metadata !11758, metadata !DIExpression()) #25, !dbg !11763
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11765, !range !9528
  %11 = shl i32 %0, %10, !dbg !11749
  %12 = or i32 %11, %8, !dbg !11749
  store volatile i32 %12, i32* %4, align 4, !dbg !11749
  ret void, !dbg !11766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11767 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11771, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11772, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 %2, metadata !11773, metadata !DIExpression()), !dbg !11776
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11777
  %5 = icmp eq %struct._snode* %4, null, !dbg !11777
  br i1 %5, label %21, label %6, !dbg !11777

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11779
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11775, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11774, metadata !DIExpression()), !dbg !11776
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11780
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11780
  %11 = load i32, i32* %10, align 4, !dbg !11780
  %12 = and i32 %11, %2, !dbg !11784
  %13 = icmp eq i32 %12, 0, !dbg !11784
  br i1 %13, label %19, label %14, !dbg !11785

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11774, metadata !DIExpression()), !dbg !11776
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11786
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11786
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11786
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11788
  br label %19, !dbg !11789

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11774, metadata !DIExpression()), !dbg !11776
  %20 = icmp eq %struct._snode* %8, null, !dbg !11790
  br i1 %20, label %21, label %6, !dbg !11790

21:                                               ; preds = %19, %3
  ret void, !dbg !11791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11794, metadata !DIExpression()), !dbg !11795
  %2 = and i32 %0, 255, !dbg !11796
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11796
  %4 = load volatile i32, i32* %3, align 4, !dbg !11796
  %5 = lshr i32 %0, 16, !dbg !11796
  %6 = and i32 %4, %5, !dbg !11796
  call void @llvm.dbg.value(metadata i32 %5, metadata !11750, metadata !DIExpression()) #25, !dbg !11797
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11799, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %7, metadata !11753, metadata !DIExpression()) #25, !dbg !11797
  call void @llvm.dbg.value(metadata i32 %7, metadata !11758, metadata !DIExpression()) #25, !dbg !11800
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11802, !range !9528
  %9 = lshr i32 %6, %8, !dbg !11803
  ret i32 %9, !dbg !11804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11810, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 %1, metadata !11811, metadata !DIExpression()), !dbg !11812
  %3 = shl i32 %1, 16, !dbg !11813
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11813
  store volatile i32 %3, i32* %4, align 4, !dbg !11813
  ret void, !dbg !11814
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11815 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11819, metadata !DIExpression()), !dbg !11820
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11821
  %3 = load volatile i32, i32* %2, align 4, !dbg !11821
  ret i32 %3, !dbg !11822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11823 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11825, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i32 %1, metadata !11826, metadata !DIExpression()), !dbg !11827
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11828
  store volatile i32 %1, i32* %3, align 4, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11830 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11832, metadata !DIExpression()), !dbg !11833
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11834
  %3 = load volatile i32, i32* %2, align 4, !dbg !11834
  ret i32 %3, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11840, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32* %1, metadata !11841, metadata !DIExpression()), !dbg !11842
  %3 = and i32 %0, 131072, !dbg !11843
  %4 = icmp eq i32 %3, 0, !dbg !11845
  br i1 %4, label %22, label %5, !dbg !11846

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11847
  %6 = and i32 %0, 2, !dbg !11849
  %7 = icmp eq i32 %6, 0, !dbg !11851
  br i1 %7, label %11, label %8, !dbg !11852

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11853
  %10 = icmp eq i32 %9, 0, !dbg !11853
  br i1 %10, label %33, label %11, !dbg !11856

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11857
  store i32 %12, i32* %1, align 4, !dbg !11857
  %13 = and i32 %0, 16, !dbg !11858
  %14 = icmp eq i32 %13, 0, !dbg !11860
  br i1 %14, label %17, label %15, !dbg !11861

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11862
  br label %31, !dbg !11864

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11865
  %19 = icmp eq i32 %18, 0, !dbg !11867
  br i1 %19, label %33, label %20, !dbg !11868

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11869
  br label %31, !dbg !11871

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11872
  %24 = icmp eq i32 %23, 0, !dbg !11874
  br i1 %24, label %31, label %25, !dbg !11875

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11876
  %27 = icmp eq i32 %26, 0, !dbg !11879
  br i1 %27, label %28, label %31, !dbg !11880

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11881
  br label %33, !dbg !11882

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11842
  ret i32 %34, !dbg !11882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11887, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.value(metadata i32 %1, metadata !11888, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.value(metadata i32 %2, metadata !11889, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.value(metadata i32 %3, metadata !11890, metadata !DIExpression()), !dbg !11898
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11899
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11899
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11899
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11891, metadata !DIExpression()), !dbg !11898
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11900
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11900
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11900
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11892, metadata !DIExpression()), !dbg !11898
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %11, metadata !11893, metadata !DIExpression()), !dbg !11898
  %12 = and i32 %2, 48, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %12, metadata !11894, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.value(metadata i32 %2, metadata !11895, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11898
  call void @llvm.dbg.value(metadata i32 %2, metadata !11896, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11898
  call void @llvm.dbg.value(metadata i32 %2, metadata !11897, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11898
  %13 = lshr i32 %2, 6, !dbg !11903
  %14 = and i32 %13, 1, !dbg !11903
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11904
  %15 = lshr i32 %2, 7, !dbg !11905
  %16 = and i32 %15, 3, !dbg !11905
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11906
  %17 = lshr i32 %2, 9, !dbg !11907
  %18 = and i32 %17, 3, !dbg !11907
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11908
  %19 = icmp eq i32 %12, 32, !dbg !11909
  br i1 %19, label %20, label %24, !dbg !11911

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11912
  br i1 %21, label %22, label %23, !dbg !11915

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11916
  br label %24, !dbg !11918

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11919
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11921
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11922
  ret void, !dbg !11923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11926, metadata !DIExpression()), !dbg !11928
  %2 = shl nuw i32 1, %0, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %2, metadata !11927, metadata !DIExpression()), !dbg !11928
  ret i32 %2, !dbg !11930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11931 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11935, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i32 %1, metadata !11936, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i32 %2, metadata !11937, metadata !DIExpression()), !dbg !11938
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11939
  %5 = load volatile i32, i32* %4, align 4, !dbg !11939
  %6 = xor i32 %1, -1, !dbg !11939
  %7 = and i32 %5, %6, !dbg !11939
  %8 = mul i32 %2, %1, !dbg !11939
  %9 = or i32 %7, %8, !dbg !11939
  store volatile i32 %9, i32* %4, align 4, !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11941 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11943, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i32 %1, metadata !11944, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i32 %2, metadata !11945, metadata !DIExpression()), !dbg !11946
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11947
  %5 = load volatile i32, i32* %4, align 4, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !11948
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11950, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !11948
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !11951
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11953, !range !9528
  %8 = shl nuw nsw i32 %7, 1, !dbg !11947
  %9 = shl i32 3, %8, !dbg !11947
  %10 = xor i32 %9, -1, !dbg !11947
  %11 = and i32 %5, %10, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !11956
  %12 = shl i32 %2, %8, !dbg !11947
  %13 = or i32 %11, %12, !dbg !11947
  store volatile i32 %13, i32* %4, align 4, !dbg !11947
  ret void, !dbg !11958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11961, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 %1, metadata !11962, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 %2, metadata !11963, metadata !DIExpression()), !dbg !11964
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11965
  %5 = load volatile i32, i32* %4, align 4, !dbg !11965
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !11966
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11968, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !11966
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !11969
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11971, !range !9528
  %8 = shl nuw nsw i32 %7, 1, !dbg !11965
  %9 = shl i32 3, %8, !dbg !11965
  %10 = xor i32 %9, -1, !dbg !11965
  %11 = and i32 %5, %10, !dbg !11965
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !11974
  %12 = shl i32 %2, %8, !dbg !11965
  %13 = or i32 %11, %12, !dbg !11965
  store volatile i32 %13, i32* %4, align 4, !dbg !11965
  ret void, !dbg !11976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11979, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 %1, metadata !11980, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.value(metadata i32 %2, metadata !11981, metadata !DIExpression()), !dbg !11982
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11983
  %5 = load volatile i32, i32* %4, align 4, !dbg !11983
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !11984
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11986, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !11987
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11989, !range !9528
  %8 = shl nuw nsw i32 %7, 2, !dbg !11983
  %9 = shl i32 15, %8, !dbg !11983
  %10 = xor i32 %9, -1, !dbg !11983
  %11 = and i32 %5, %10, !dbg !11983
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !11992
  %12 = shl i32 %2, %8, !dbg !11983
  %13 = or i32 %11, %12, !dbg !11983
  store volatile i32 %13, i32* %4, align 4, !dbg !11983
  ret void, !dbg !11994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11995 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11997, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 %1, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 %2, metadata !11999, metadata !DIExpression()), !dbg !12000
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !12001
  %5 = load volatile i32, i32* %4, align 4, !dbg !12001
  %6 = lshr i32 %1, 8, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %6, metadata !11750, metadata !DIExpression()) #25, !dbg !12002
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !12004, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %7, metadata !11753, metadata !DIExpression()) #25, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %7, metadata !11758, metadata !DIExpression()) #25, !dbg !12005
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !12007, !range !9528
  %9 = shl nuw nsw i32 %8, 2, !dbg !12001
  %10 = shl i32 15, %9, !dbg !12001
  %11 = xor i32 %10, -1, !dbg !12001
  %12 = and i32 %5, %11, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %6, metadata !11750, metadata !DIExpression()) #25, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %7, metadata !11753, metadata !DIExpression()) #25, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %7, metadata !11758, metadata !DIExpression()) #25, !dbg !12010
  %13 = shl i32 %2, %9, !dbg !12001
  %14 = or i32 %12, %13, !dbg !12001
  store volatile i32 %14, i32* %4, align 4, !dbg !12001
  ret void, !dbg !12012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12013 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12015, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.value(metadata i32 %1, metadata !12016, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.value(metadata i32 %2, metadata !12017, metadata !DIExpression()), !dbg !12018
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !12019
  %5 = load volatile i32, i32* %4, align 4, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !12020
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12022, !srcloc !11757
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !12020
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !12023
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12025, !range !9528
  %8 = shl nuw nsw i32 %7, 1, !dbg !12019
  %9 = shl i32 3, %8, !dbg !12019
  %10 = xor i32 %9, -1, !dbg !12019
  %11 = and i32 %5, %10, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()) #25, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %6, metadata !11753, metadata !DIExpression()) #25, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %6, metadata !11758, metadata !DIExpression()) #25, !dbg !12028
  %12 = shl i32 %2, %8, !dbg !12019
  %13 = or i32 %11, %12, !dbg !12019
  store volatile i32 %13, i32* %4, align 4, !dbg !12019
  ret void, !dbg !12030
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !12031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12033, metadata !DIExpression()), !dbg !12036
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12037
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !12037
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !12037
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !12034, metadata !DIExpression()), !dbg !12036
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !12038
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !12039
  %6 = tail call fastcc zeroext i1 @device_is_ready.178() #26, !dbg !12040
  br i1 %6, label %7, label %11, !dbg !12042

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !12043
  call void @llvm.dbg.value(metadata i32 %8, metadata !12035, metadata !DIExpression()), !dbg !12036
  %9 = icmp slt i32 %8, 0, !dbg !12044
  %10 = select i1 %9, i32 %8, i32 0, !dbg !12046
  br label %11, !dbg !12046

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !12036
  ret i32 %12, !dbg !12047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.178() unnamed_addr #1 !dbg !12048 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12052, metadata !DIExpression()), !dbg !12053
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12054, !srcloc !12056
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.179() #26, !dbg !12057
  ret i1 %1, !dbg !12058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12059 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12063, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata i8 1, metadata !12064, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !12065, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata i32 0, metadata !12066, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12067, metadata !DIExpression()), !dbg !12068
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12069
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12069
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12069
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !12065, metadata !DIExpression()), !dbg !12068
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12070
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12073
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !12074
  call void @llvm.dbg.value(metadata i32 %7, metadata !12066, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.value(metadata i32 %7, metadata !12066, metadata !DIExpression()), !dbg !12068
  ret i32 %7, !dbg !12075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.179() unnamed_addr #1 !dbg !12076 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12078, metadata !DIExpression()), !dbg !12079
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !12080
  ret i1 %1, !dbg !12081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12086, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata i32 %1, metadata !12087, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata i32 %2, metadata !12088, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata i32 %3, metadata !12089, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata i32 0, metadata !12090, metadata !DIExpression()), !dbg !12094
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !12095
  %5 = icmp eq i32 %3, 17, !dbg !12096
  br i1 %5, label %6, label %14, !dbg !12097

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %7, metadata !12091, metadata !DIExpression()), !dbg !12099
  %8 = icmp eq i32 %7, 0, !dbg !12100
  %9 = shl nuw i32 1, %1, !dbg !12102
  br i1 %8, label %12, label %10, !dbg !12103

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12104
  br label %14, !dbg !12106

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12107
  br label %14, !dbg !12110

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12111
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !12112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12114, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i8* %1, metadata !12115, metadata !DIExpression()), !dbg !12118
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12119
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12119
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12119
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12116, metadata !DIExpression()), !dbg !12118
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12120
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12120
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12122
  %9 = icmp eq i32 %8, 0, !dbg !12122
  br i1 %9, label %12, label %10, !dbg !12123

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12124
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12126
  br label %12, !dbg !12127

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12128
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12130
  %15 = icmp eq i32 %14, 0, !dbg !12130
  br i1 %15, label %19, label %16, !dbg !12131

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12132
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12133
  store i8 %18, i8* %1, align 1, !dbg !12134
  br label %19, !dbg !12135

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12118
  ret i32 %20, !dbg !12136
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12139, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i8 %1, metadata !12140, metadata !DIExpression()), !dbg !12143
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12144
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12144
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12144
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12141, metadata !DIExpression()), !dbg !12143
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12145

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12146
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12149
  %10 = icmp eq i32 %9, 0, !dbg !12149
  br i1 %10, label %18, label %11, !dbg !12150

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12151, !srcloc !12158
  call void @llvm.dbg.value(metadata i32 undef, metadata !12154, metadata !DIExpression()) #25, !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12155, metadata !DIExpression()) #25, !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12142, metadata !DIExpression()), !dbg !12143
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12160
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12162
  %15 = icmp eq i32 %14, 0, !dbg !12162
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12151
  br i1 %15, label %17, label %19, !dbg !12163

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12154, metadata !DIExpression()) #25, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %16, metadata !12142, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 undef, metadata !12164, metadata !DIExpression()) #25, !dbg !12167
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12169, !srcloc !12170
  br label %18, !dbg !12171

18:                                               ; preds = %17, %7
  br label %7, !dbg !12146, !llvm.loop !12172

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12151
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12174
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12175
  call void @llvm.dbg.value(metadata i32 %20, metadata !12164, metadata !DIExpression()) #25, !dbg !12176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12178, !srcloc !12170
  ret void, !dbg !12179
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !12180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12182, metadata !DIExpression()), !dbg !12185
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12186
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12186
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12186
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12183, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.value(metadata i32 0, metadata !12184, metadata !DIExpression()), !dbg !12185
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12187
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12187
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12189
  %8 = icmp ne i32 %7, 0, !dbg !12189
  %9 = zext i1 %8 to i32, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %9, metadata !12184, metadata !DIExpression()), !dbg !12185
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12191
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12193
  %12 = icmp eq i32 %11, 0, !dbg !12193
  %13 = or i32 %9, 2, !dbg !12194
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12194
  call void @llvm.dbg.value(metadata i32 %14, metadata !12184, metadata !DIExpression()), !dbg !12185
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12195
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12197
  %17 = icmp eq i32 %16, 0, !dbg !12197
  %18 = or i32 %14, 4, !dbg !12198
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %19, metadata !12184, metadata !DIExpression()), !dbg !12185
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12199
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12201
  %22 = icmp eq i32 %21, 0, !dbg !12201
  %23 = or i32 %19, 8, !dbg !12202
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %24, metadata !12184, metadata !DIExpression()), !dbg !12185
  %25 = and i32 %24, 8, !dbg !12203
  %26 = icmp eq i32 %25, 0, !dbg !12203
  br i1 %26, label %29, label %27, !dbg !12205

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12206
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12208
  br label %29, !dbg !12209

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12210
  %31 = icmp eq i32 %30, 0, !dbg !12210
  br i1 %31, label %34, label %32, !dbg !12212

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12213
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12215
  br label %34, !dbg !12216

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12217
  %36 = icmp eq i32 %35, 0, !dbg !12217
  br i1 %36, label %39, label %37, !dbg !12219

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12220
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12222
  br label %39, !dbg !12223

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12224
  %41 = icmp eq i32 %40, 0, !dbg !12224
  br i1 %41, label %44, label %42, !dbg !12226

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12227
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12229
  br label %44, !dbg !12230

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12231
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12232
  ret i32 %24, !dbg !12233
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12236, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12237, metadata !DIExpression()), !dbg !12245
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12246
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12246
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12246
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12238, metadata !DIExpression()), !dbg !12245
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12247
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12247
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12247
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12239, metadata !DIExpression()), !dbg !12245
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12248
  %10 = load i8, i8* %9, align 4, !dbg !12248
  %11 = zext i8 %10 to i32, !dbg !12249
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %12, metadata !12241, metadata !DIExpression()), !dbg !12245
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12251
  %14 = load i8, i8* %13, align 1, !dbg !12251
  %15 = zext i8 %14 to i32, !dbg !12252
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %16, metadata !12242, metadata !DIExpression()), !dbg !12245
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12254
  %18 = load i8, i8* %17, align 2, !dbg !12254
  %19 = zext i8 %18 to i32, !dbg !12255
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12256
  call void @llvm.dbg.value(metadata i32 %20, metadata !12243, metadata !DIExpression()), !dbg !12245
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12257
  %22 = load i8, i8* %21, align 1, !dbg !12257
  %23 = zext i8 %22 to i32, !dbg !12258
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12259
  call void @llvm.dbg.value(metadata i32 %24, metadata !12244, metadata !DIExpression()), !dbg !12245
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12260

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12262
  br i1 %26, label %69, label %27, !dbg !12264

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12265

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12266
  br i1 %29, label %65, label %30, !dbg !12266

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12268
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12245
  br i1 %31, label %38, label %34, !dbg !12270

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12271
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !12271

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12274
  br i1 %37, label %38, label %69, !dbg !12275

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12276
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12277
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12278
  %41 = icmp eq i32 %12, %40, !dbg !12280
  br i1 %41, label %43, label %42, !dbg !12281

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12282
  br label %43, !dbg !12284

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12285
  %45 = icmp eq i32 %16, %44, !dbg !12287
  br i1 %45, label %47, label %46, !dbg !12288

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12289
  br label %47, !dbg !12291

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12292
  %49 = icmp eq i32 %20, %48, !dbg !12294
  br i1 %49, label %51, label %50, !dbg !12295

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12296
  br label %51, !dbg !12298

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12299
  %53 = icmp eq i32 %24, %52, !dbg !12301
  br i1 %53, label %55, label %54, !dbg !12302

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12303
  br label %55, !dbg !12305

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12306
  %57 = load i32, i32* %56, align 4, !dbg !12306
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12308
  %59 = load i32, i32* %58, align 4, !dbg !12308
  %60 = icmp eq i32 %57, %59, !dbg !12309
  br i1 %60, label %63, label %61, !dbg !12310

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12311
  %62 = load i32, i32* %56, align 4, !dbg !12313
  store i32 %62, i32* %58, align 4, !dbg !12314
  br label %63, !dbg !12315

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12316
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12317
  br label %69, !dbg !12318

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12266
  %67 = and i8 %66, 1, !dbg !12266
  %68 = icmp eq i8 %67, 0, !dbg !12266
  br i1 %68, label %30, label %69, !dbg !12266

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12245
  ret i32 %70, !dbg !12319
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12322, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12323, metadata !DIExpression()), !dbg !12325
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12326
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12326
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12326
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12324, metadata !DIExpression()), !dbg !12325
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12327
  %7 = load i32, i32* %6, align 4, !dbg !12327
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12328
  store i32 %7, i32* %8, align 4, !dbg !12329
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12330, !range !12331
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12332
  %11 = trunc i32 %10 to i8, !dbg !12332
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12333
  store i8 %11, i8* %12, align 4, !dbg !12334
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12335, !range !12336
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12337
  %15 = trunc i32 %14 to i8, !dbg !12337
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12338
  store i8 %15, i8* %16, align 1, !dbg !12339
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12340
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12341, !range !12331
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12342
  %20 = trunc i32 %19 to i8, !dbg !12342
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12343
  store i8 %20, i8* %21, align 2, !dbg !12344
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12345, !range !12346
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12347
  %24 = trunc i32 %23 to i8, !dbg !12347
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12348
  store i8 %24, i8* %25, align 1, !dbg !12349
  ret i32 0, !dbg !12350
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12355, metadata !DIExpression()), !dbg !12357
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12358
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12358
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12358
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12356, metadata !DIExpression()), !dbg !12357
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12359
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12359
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12360
  ret i32 %7, !dbg !12361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12366, metadata !DIExpression()), !dbg !12367
  %2 = icmp eq i32 %0, 1024, !dbg !12368
  %3 = select i1 %2, i32 2, i32 0, !dbg !12368
  %4 = icmp eq i32 %0, 1536, !dbg !12368
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12368
  ret i32 %5, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12372, metadata !DIExpression()), !dbg !12374
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12375
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12375
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12375
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12373, metadata !DIExpression()), !dbg !12374
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12376
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12376
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12377
  ret i32 %7, !dbg !12378
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12383, metadata !DIExpression()), !dbg !12384
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12385
  %3 = icmp ult i32 %2, 4, !dbg !12385
  br i1 %3, label %4, label %7, !dbg !12385

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12385
  %6 = load i32, i32* %5, align 4, !dbg !12385
  br label %7, !dbg !12385

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12386
  ret i32 %8, !dbg !12388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12391, metadata !DIExpression()), !dbg !12393
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12394
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12394
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12394
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12392, metadata !DIExpression()), !dbg !12393
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12395
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12395
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12396
  ret i32 %7, !dbg !12397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12402, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 %1, metadata !12403, metadata !DIExpression()), !dbg !12404
  %3 = icmp eq i32 %0, 4096, !dbg !12405
  %4 = icmp eq i32 %1, 0, !dbg !12405
  %5 = select i1 %4, i32 4, i32 3, !dbg !12405
  %6 = select i1 %4, i32 3, i32 2, !dbg !12405
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12405
  ret i32 %7, !dbg !12406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12409, metadata !DIExpression()), !dbg !12411
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12412
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12412
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12412
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12410, metadata !DIExpression()), !dbg !12411
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12413
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12413
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12414
  ret i32 %7, !dbg !12415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12420, metadata !DIExpression()), !dbg !12421
  %2 = icmp eq i32 %0, 768, !dbg !12422
  %3 = zext i1 %2 to i32, !dbg !12421
  ret i32 %3, !dbg !12424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12425 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12430, metadata !DIExpression()), !dbg !12431
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12432
  %3 = load volatile i32, i32* %2, align 4, !dbg !12432
  %4 = and i32 %3, 768, !dbg !12432
  ret i32 %4, !dbg !12433
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12434 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12436, metadata !DIExpression()), !dbg !12437
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12438
  %3 = load volatile i32, i32* %2, align 4, !dbg !12438
  %4 = and i32 %3, 4096, !dbg !12438
  ret i32 %4, !dbg !12439
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12440 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12442, metadata !DIExpression()), !dbg !12443
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12444
  %3 = load volatile i32, i32* %2, align 4, !dbg !12444
  %4 = and i32 %3, 12288, !dbg !12444
  ret i32 %4, !dbg !12445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12446 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12448, metadata !DIExpression()), !dbg !12449
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12450
  %3 = load volatile i32, i32* %2, align 4, !dbg !12450
  %4 = and i32 %3, 1536, !dbg !12450
  ret i32 %4, !dbg !12451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12456, metadata !DIExpression()), !dbg !12457
  %2 = icmp eq i32 %0, 2, !dbg !12458
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12458
  %4 = icmp eq i32 %0, 1, !dbg !12458
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12458
  ret i32 %5, !dbg !12459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12464, metadata !DIExpression()), !dbg !12465
  %2 = icmp ult i32 %0, 3, !dbg !12466
  br i1 %2, label %3, label %6, !dbg !12466

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12466
  %5 = load i32, i32* %4, align 4, !dbg !12466
  br label %6, !dbg !12466

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12467
  ret i32 %7, !dbg !12469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12474, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.value(metadata i32 %1, metadata !12475, metadata !DIExpression()), !dbg !12476
  %3 = icmp eq i32 %0, 4, !dbg !12477
  %4 = icmp eq i32 %1, 0, !dbg !12477
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12477
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12477
  ret i32 %6, !dbg !12478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12483, metadata !DIExpression()), !dbg !12484
  %2 = icmp eq i32 %0, 1, !dbg !12485
  %3 = select i1 %2, i32 768, i32 0, !dbg !12484
  ret i32 %3, !dbg !12487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12488 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12492, metadata !DIExpression()), !dbg !12493
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12494
  %3 = load volatile i32, i32* %2, align 4, !dbg !12494
  %4 = and i32 %3, -8193, !dbg !12494
  store volatile i32 %4, i32* %2, align 4, !dbg !12494
  ret void, !dbg !12495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12500, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata i32 %1, metadata !12501, metadata !DIExpression()), !dbg !12503
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12504
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12504
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12504
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12502, metadata !DIExpression()), !dbg !12503
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12505
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12505
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12506
  ret void, !dbg !12507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12510, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %1, metadata !12511, metadata !DIExpression()), !dbg !12513
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12514
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12514
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12514
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12512, metadata !DIExpression()), !dbg !12513
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12515
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12515
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12516
  ret void, !dbg !12517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12518 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12520, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata i32 %1, metadata !12521, metadata !DIExpression()), !dbg !12523
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12524
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12524
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12524
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12522, metadata !DIExpression()), !dbg !12523
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12525
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12525
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12526
  ret void, !dbg !12527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12530, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %1, metadata !12531, metadata !DIExpression()), !dbg !12533
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12534
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12534
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12534
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12532, metadata !DIExpression()), !dbg !12533
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12535
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12535
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12536
  ret void, !dbg !12537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12538 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12540, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i32 %1, metadata !12541, metadata !DIExpression()), !dbg !12545
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12546
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12546
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12546
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12542, metadata !DIExpression()), !dbg !12545
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12547
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12547
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12547
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12543, metadata !DIExpression()), !dbg !12545
  %10 = bitcast i32* %3 to i8*, !dbg !12548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12548
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12549
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12549
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12553
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12553
  %15 = load i8*, i8** %14, align 4, !dbg !12553
  call void @llvm.dbg.value(metadata i32* %3, metadata !12544, metadata !DIExpression(DW_OP_deref)), !dbg !12545
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12554
  %17 = icmp slt i32 %16, 0, !dbg !12555
  br i1 %17, label %18, label %21, !dbg !12556

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.182(i32 noundef 1) #26, !dbg !12557
  %20 = zext i8 %19 to i32, !dbg !12557
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.183, i32 0, i32 0), i32 noundef %20) #27, !dbg !12557
  br label %26, !dbg !12563

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12564
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12564
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12565
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12566
  %25 = load i32, i32* %3, align 4, !dbg !12567
  call void @llvm.dbg.value(metadata i32 %25, metadata !12544, metadata !DIExpression()), !dbg !12545
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12568
  br label %26, !dbg !12569

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12569
  ret void, !dbg !12569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12570 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12572, metadata !DIExpression()), !dbg !12573
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12574
  %3 = load volatile i32, i32* %2, align 4, !dbg !12574
  %4 = or i32 %3, 8192, !dbg !12574
  store volatile i32 %4, i32* %2, align 4, !dbg !12574
  ret void, !dbg !12575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12578, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i8* %1, metadata !12579, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32* %2, metadata !12580, metadata !DIExpression()), !dbg !12582
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12583
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12583
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12583
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12581, metadata !DIExpression()), !dbg !12582
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12584
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12584
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12586
  br i1 %9, label %12, label %10, !dbg !12587

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12588
  br label %12, !dbg !12589

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12582
  ret i32 %13, !dbg !12590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.182(i32 noundef %0) unnamed_addr #3 !dbg !12591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12593, metadata !DIExpression()), !dbg !12594
  %2 = icmp eq i32 %0, 2, !dbg !12595
  %3 = select i1 %2, i8 87, i8 63, !dbg !12595
  %4 = icmp eq i32 %0, 1, !dbg !12595
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12595
  ret i8 %5, !dbg !12596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12597 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12601, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata i32 0, metadata !12602, metadata !DIExpression()), !dbg !12603
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12604
  %3 = load volatile i32, i32* %2, align 4, !dbg !12604
  %4 = and i32 %3, -32769, !dbg !12604
  store volatile i32 %4, i32* %2, align 4, !dbg !12604
  ret void, !dbg !12605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12606 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12610, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 %1, metadata !12611, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 0, metadata !12612, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 %2, metadata !12613, metadata !DIExpression()), !dbg !12614
  %4 = zext i32 %1 to i64, !dbg !12615
  %5 = mul nuw nsw i64 %4, 25, !dbg !12615
  %6 = zext i32 %2 to i64, !dbg !12615
  %7 = shl nuw nsw i64 %6, 2, !dbg !12615
  %8 = udiv i64 %5, %7, !dbg !12615
  %9 = trunc i64 %8 to i32, !dbg !12615
  %10 = udiv i32 %9, 100, !dbg !12615
  %11 = shl nuw nsw i32 %10, 4, !dbg !12615
  %12 = mul i32 %10, -100, !dbg !12615
  %13 = add i32 %12, %9, !dbg !12615
  %14 = shl i32 %13, 4, !dbg !12615
  %15 = add i32 %14, 50, !dbg !12615
  %16 = udiv i32 %15, 100, !dbg !12615
  %17 = and i32 %16, 240, !dbg !12615
  %18 = add nuw nsw i32 %17, %11, !dbg !12615
  %19 = and i32 %16, 15, !dbg !12615
  %20 = and i32 %18, 65520, !dbg !12618
  %21 = or i32 %20, %19, !dbg !12618
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12619
  store volatile i32 %21, i32* %22, align 4, !dbg !12620
  ret void, !dbg !12621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12622 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12624, metadata !DIExpression()), !dbg !12626
  call void @llvm.dbg.value(metadata i32 %1, metadata !12625, metadata !DIExpression()), !dbg !12626
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12627
  %4 = load volatile i32, i32* %3, align 4, !dbg !12627
  %5 = and i32 %4, -769, !dbg !12627
  %6 = or i32 %5, %1, !dbg !12627
  store volatile i32 %6, i32* %3, align 4, !dbg !12627
  ret void, !dbg !12628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12629 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12631, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i32 %1, metadata !12632, metadata !DIExpression()), !dbg !12633
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12634
  %4 = load volatile i32, i32* %3, align 4, !dbg !12634
  %5 = and i32 %4, -4097, !dbg !12634
  %6 = or i32 %5, %1, !dbg !12634
  store volatile i32 %6, i32* %3, align 4, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12636 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12638, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i32 %1, metadata !12639, metadata !DIExpression()), !dbg !12640
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12641
  %4 = load volatile i32, i32* %3, align 4, !dbg !12641
  %5 = and i32 %4, -12289, !dbg !12641
  %6 = or i32 %5, %1, !dbg !12641
  store volatile i32 %6, i32* %3, align 4, !dbg !12641
  ret void, !dbg !12642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12643 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12645, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.value(metadata i32 %1, metadata !12646, metadata !DIExpression()), !dbg !12647
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12648
  %4 = load volatile i32, i32* %3, align 4, !dbg !12648
  %5 = and i32 %4, -1537, !dbg !12648
  %6 = or i32 %5, %1, !dbg !12648
  store volatile i32 %6, i32* %3, align 4, !dbg !12648
  ret void, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12652, metadata !DIExpression()), !dbg !12653
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12654
  %3 = load volatile i32, i32* %2, align 4, !dbg !12654
  %4 = lshr i32 %3, 3, !dbg !12655
  %5 = and i32 %4, 1, !dbg !12655
  ret i32 %5, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12657 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12661
  %3 = load volatile i32, i32* %2, align 4, !dbg !12661
  %4 = and i32 %3, 1, !dbg !12661
  ret i32 %4, !dbg !12662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12663 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12665, metadata !DIExpression()), !dbg !12666
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12667
  %3 = load volatile i32, i32* %2, align 4, !dbg !12667
  %4 = lshr i32 %3, 1, !dbg !12668
  %5 = and i32 %4, 1, !dbg !12668
  ret i32 %5, !dbg !12669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12670 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12672, metadata !DIExpression()), !dbg !12673
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12674
  %3 = load volatile i32, i32* %2, align 4, !dbg !12674
  %4 = lshr i32 %3, 8, !dbg !12675
  %5 = and i32 %4, 1, !dbg !12675
  ret i32 %5, !dbg !12676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12677 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12679, metadata !DIExpression()), !dbg !12680
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12681
  store volatile i32 -257, i32* %2, align 4, !dbg !12681
  ret void, !dbg !12682
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12683 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12685, metadata !DIExpression()), !dbg !12687
  %3 = bitcast i32* %2 to i8*, !dbg !12688
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12688
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12686, metadata !DIExpression()), !dbg !12689
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12690
  %5 = load volatile i32, i32* %4, align 4, !dbg !12690
  store volatile i32 %5, i32* %2, align 4, !dbg !12691
  %6 = load volatile i32, i32* %2, align 4, !dbg !12692
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12693
  %8 = load volatile i32, i32* %7, align 4, !dbg !12693
  store volatile i32 %8, i32* %2, align 4, !dbg !12694
  %9 = load volatile i32, i32* %2, align 4, !dbg !12695
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12696
  ret void, !dbg !12696
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12697 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12699, metadata !DIExpression()), !dbg !12701
  %3 = bitcast i32* %2 to i8*, !dbg !12702
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12702
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12700, metadata !DIExpression()), !dbg !12703
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12704
  %5 = load volatile i32, i32* %4, align 4, !dbg !12704
  store volatile i32 %5, i32* %2, align 4, !dbg !12705
  %6 = load volatile i32, i32* %2, align 4, !dbg !12706
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12707
  %8 = load volatile i32, i32* %7, align 4, !dbg !12707
  store volatile i32 %8, i32* %2, align 4, !dbg !12708
  %9 = load volatile i32, i32* %2, align 4, !dbg !12709
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12710
  ret void, !dbg !12710
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12711 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12713, metadata !DIExpression()), !dbg !12715
  %3 = bitcast i32* %2 to i8*, !dbg !12716
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12716
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12714, metadata !DIExpression()), !dbg !12717
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12718
  %5 = load volatile i32, i32* %4, align 4, !dbg !12718
  store volatile i32 %5, i32* %2, align 4, !dbg !12719
  %6 = load volatile i32, i32* %2, align 4, !dbg !12720
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12721
  %8 = load volatile i32, i32* %7, align 4, !dbg !12721
  store volatile i32 %8, i32* %2, align 4, !dbg !12722
  %9 = load volatile i32, i32* %2, align 4, !dbg !12723
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12724
  ret void, !dbg !12724
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12725 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12727, metadata !DIExpression()), !dbg !12729
  %3 = bitcast i32* %2 to i8*, !dbg !12730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12730
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12728, metadata !DIExpression()), !dbg !12731
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12732
  %5 = load volatile i32, i32* %4, align 4, !dbg !12732
  store volatile i32 %5, i32* %2, align 4, !dbg !12733
  %6 = load volatile i32, i32* %2, align 4, !dbg !12734
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12735
  %8 = load volatile i32, i32* %7, align 4, !dbg !12735
  store volatile i32 %8, i32* %2, align 4, !dbg !12736
  %9 = load volatile i32, i32* %2, align 4, !dbg !12737
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12738
  ret void, !dbg !12738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12739 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12741, metadata !DIExpression()), !dbg !12742
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12743
  %3 = load volatile i32, i32* %2, align 4, !dbg !12743
  %4 = lshr i32 %3, 7, !dbg !12744
  %5 = and i32 %4, 1, !dbg !12744
  ret i32 %5, !dbg !12745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !12746 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12750, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i8 %1, metadata !12751, metadata !DIExpression()), !dbg !12752
  %3 = zext i8 %1 to i32, !dbg !12753
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12754
  store volatile i32 %3, i32* %4, align 4, !dbg !12755
  ret void, !dbg !12756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12757 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12759, metadata !DIExpression()), !dbg !12760
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12761
  %3 = load volatile i32, i32* %2, align 4, !dbg !12761
  %4 = lshr i32 %3, 5, !dbg !12762
  %5 = and i32 %4, 1, !dbg !12762
  ret i32 %5, !dbg !12763
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12764 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12768, metadata !DIExpression()), !dbg !12769
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12770
  %3 = load volatile i32, i32* %2, align 4, !dbg !12770
  %4 = trunc i32 %3 to i8, !dbg !12771
  ret i8 %4, !dbg !12772
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12775, metadata !DIExpression()), !dbg !12781
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12782
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12782
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12782
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12776, metadata !DIExpression()), !dbg !12781
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12783
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12783
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12783
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12777, metadata !DIExpression()), !dbg !12781
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12784
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12785
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12785
  %10 = tail call fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %9) #26, !dbg !12787
  br i1 %10, label %14, label %11, !dbg !12788

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.182(i32 noundef 1) #26, !dbg !12789
  %13 = zext i8 %12 to i32, !dbg !12789
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.191, i32 0, i32 0), i32 noundef %13) #27, !dbg !12789
  br label %62, !dbg !12795

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12796
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12797
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12797
  %18 = load i8*, i8** %17, align 4, !dbg !12797
  %19 = tail call fastcc i32 @clock_control_on.192(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12798
  call void @llvm.dbg.value(metadata i32 %19, metadata !12780, metadata !DIExpression()), !dbg !12781
  %20 = icmp eq i32 %19, 0, !dbg !12799
  br i1 %20, label %24, label %21, !dbg !12801

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.182(i32 noundef 1) #26, !dbg !12802
  %23 = zext i8 %22 to i32, !dbg !12802
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.193, i32 0, i32 0), i32 noundef %23) #27, !dbg !12802
  br label %62, !dbg !12808

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12809
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12809
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %27, metadata !12780, metadata !DIExpression()), !dbg !12781
  %28 = icmp slt i32 %27, 0, !dbg !12811
  br i1 %28, label %62, label %29, !dbg !12813

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12814
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12814
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12815
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12816
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12817
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12818
  %34 = load i32, i32* %33, align 4, !dbg !12818
  %35 = icmp ult i32 %34, 3, !dbg !12820
  br i1 %35, label %39, label %36, !dbg !12820

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.182(i32 noundef 2) #26, !dbg !12821
  %38 = zext i8 %37 to i32, !dbg !12821
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8.194, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12821
  call void @llvm.dbg.value(metadata i32 0, metadata !12778, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 0, metadata !12779, metadata !DIExpression()), !dbg !12781
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12820
  %41 = load i32, i32* %40, align 4, !dbg !12820
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.9, i32 0, i32 %34, !dbg !12820
  %43 = load i32, i32* %42, align 4, !dbg !12820
  br label %44, !dbg !12820

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12830
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12830
  call void @llvm.dbg.value(metadata i32 %46, metadata !12779, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 %45, metadata !12778, metadata !DIExpression()), !dbg !12781
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12831
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12832
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12833
  %49 = load i8, i8* %48, align 4, !dbg !12833, !range !8717
  %50 = icmp eq i8 %49, 0, !dbg !12833
  br i1 %50, label %52, label %51, !dbg !12835

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12836
  br label %52, !dbg !12838

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12839
  %54 = load i32, i32* %53, align 4, !dbg !12839
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12840
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12841
  %56 = load i8, i8* %55, align 4, !dbg !12841, !range !8717
  %57 = icmp eq i8 %56, 0, !dbg !12841
  br i1 %57, label %60, label %58, !dbg !12843

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12844
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12846
  br label %60, !dbg !12847

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12848
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12849
  br label %62, !dbg !12850

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12781
  ret i32 %63, !dbg !12851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12852 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12856, metadata !DIExpression()), !dbg !12860
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12861
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12861
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12861
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12857, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12858, metadata !DIExpression()), !dbg !12860
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12862
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12863
  ret void, !dbg !12864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %0) unnamed_addr #1 !dbg !12865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12869, metadata !DIExpression()), !dbg !12870
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12871, !srcloc !12873
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.195(%struct.device* noundef %0) #26, !dbg !12874
  ret i1 %2, !dbg !12875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.192(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12878, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.value(metadata i8* %1, metadata !12879, metadata !DIExpression()), !dbg !12881
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12882
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12882
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12882
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12880, metadata !DIExpression()), !dbg !12881
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12883
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12883
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12884
  ret i32 %8, !dbg !12885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12886 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12890, metadata !DIExpression()), !dbg !12894
  call void @llvm.dbg.value(metadata i8 0, metadata !12891, metadata !DIExpression()), !dbg !12894
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12895
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12895
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12893, metadata !DIExpression(DW_OP_deref)), !dbg !12894
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %4, metadata !12892, metadata !DIExpression()), !dbg !12894
  %5 = icmp slt i32 %4, 0, !dbg !12897
  br i1 %5, label %9, label %6, !dbg !12899

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12900
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12893, metadata !DIExpression()), !dbg !12894
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12901
  br label %9, !dbg !12902

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12903
  ret i32 %10, !dbg !12903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12904 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12906, metadata !DIExpression()), !dbg !12910
  call void @llvm.dbg.value(metadata i32 12, metadata !12907, metadata !DIExpression()), !dbg !12910
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12911

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12912, metadata !DIExpression()) #25, !dbg !12918
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12921, !srcloc !12922
  call void @llvm.dbg.value(metadata i32 %4, metadata !12917, metadata !DIExpression()) #25, !dbg !12918
  %5 = or i32 %4, 12, !dbg !12923
  call void @llvm.dbg.value(metadata i32 %5, metadata !12908, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.value(metadata i32 %5, metadata !12925, metadata !DIExpression()) #25, !dbg !12932
  call void @llvm.dbg.value(metadata i32* %2, metadata !12930, metadata !DIExpression()) #25, !dbg !12932
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12934, !srcloc !12935
  call void @llvm.dbg.value(metadata i32 %6, metadata !12931, metadata !DIExpression()) #25, !dbg !12932
  %7 = icmp eq i32 %6, 0, !dbg !12911
  br i1 %7, label %8, label %3, !dbg !12923, !llvm.loop !12936

8:                                                ; preds = %3
  ret void, !dbg !12937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12938 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12940, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 %1, metadata !12941, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 %2, metadata !12942, metadata !DIExpression()), !dbg !12944
  call void @llvm.dbg.value(metadata i32 0, metadata !12943, metadata !DIExpression()), !dbg !12944
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12945
  %5 = load volatile i32, i32* %4, align 4, !dbg !12945
  %6 = and i32 %5, -5633, !dbg !12945
  %7 = or i32 %2, %1, !dbg !12945
  %8 = or i32 %7, %6, !dbg !12945
  store volatile i32 %8, i32* %4, align 4, !dbg !12945
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12946
  %10 = load volatile i32, i32* %9, align 4, !dbg !12946
  %11 = and i32 %10, -12289, !dbg !12946
  store volatile i32 %11, i32* %9, align 4, !dbg !12946
  ret void, !dbg !12947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12948 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12950, metadata !DIExpression()), !dbg !12951
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12952
  %3 = load volatile i32, i32* %2, align 4, !dbg !12952
  %4 = or i32 %3, 8, !dbg !12952
  store volatile i32 %4, i32* %2, align 4, !dbg !12952
  ret void, !dbg !12953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12954 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12958, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12959, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata i32 0, metadata !12960, metadata !DIExpression()), !dbg !12961
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12962
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12962
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12963
  %5 = load i8, i8* %4, align 4, !dbg !12963
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12964
  ret i32 %6, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.195(%struct.device* noundef %0) unnamed_addr #1 !dbg !12966 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12968, metadata !DIExpression()), !dbg !12969
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12970
  ret i1 %2, !dbg !12971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12972 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12974, metadata !DIExpression()), !dbg !12975
  tail call fastcc void @__NVIC_SetPriority.197() #26, !dbg !12976
  store i32 8399, i32* @last_load, align 4, !dbg !12977
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12978
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12979
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12980
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12981
  %3 = or i32 %2, 7, !dbg !12981
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12981
  ret i32 0, !dbg !12982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.197() unnamed_addr #15 !dbg !12983 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12985, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.value(metadata i32 1, metadata !12986, metadata !DIExpression()), !dbg !12987
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12988
  ret void, !dbg !12991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12992 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12994, metadata !DIExpression()), !dbg !12996
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !12997
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12998
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12999
  %5 = add i32 %4, %3, !dbg !12999
  store i32 %5, i32* @cycle_count, align 4, !dbg !12999
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13000
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13001
  %7 = sub i32 %5, %6, !dbg !13004
  %8 = udiv i32 %7, 8400, !dbg !13005
  call void @llvm.dbg.value(metadata i32 %8, metadata !12995, metadata !DIExpression()), !dbg !12996
  %9 = mul nuw i32 %8, 8400, !dbg !13006
  %10 = add i32 %9, %6, !dbg !13007
  store i32 %10, i32* @announced_cycles, align 4, !dbg !13007
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !13008
  tail call void @z_arm_int_exit() #27, !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !13011 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13016
  call void @llvm.dbg.value(metadata i32 %1, metadata !13013, metadata !DIExpression()), !dbg !13017
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13018
  call void @llvm.dbg.value(metadata i32 %2, metadata !13014, metadata !DIExpression()), !dbg !13017
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13019
  call void @llvm.dbg.value(metadata i32 %3, metadata !13015, metadata !DIExpression()), !dbg !13017
  %4 = and i32 %2, 65536, !dbg !13020
  %5 = icmp ne i32 %4, 0, !dbg !13020
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !13022
  %8 = load i32, i32* @last_load, align 4, !dbg !13017
  br i1 %7, label %9, label %13, !dbg !13022

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13023
  %11 = add i32 %10, %8, !dbg !13023
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !13023
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13025
  br label %13, !dbg !13026

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !13027
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13028
  %16 = add i32 %14, %15, !dbg !13029
  ret i32 %16, !dbg !13030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13035, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i1 %1, metadata !13036, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13048
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !13049
  br i1 %4, label %5, label %8, !dbg !13049

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13051
  %7 = and i32 %6, -2, !dbg !13051
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13051
  store i32 -16777216, i32* @last_load, align 4, !dbg !13053
  br label %54, !dbg !13054

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !13055
  call void @llvm.dbg.value(metadata i32 %9, metadata !13040, metadata !DIExpression()), !dbg !13048
  br i1 %3, label %18, label %10, !dbg !13056

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !13056
  call void @llvm.dbg.value(metadata i32 undef, metadata !13035, metadata !DIExpression()), !dbg !13048
  %12 = icmp slt i32 %11, 1, !dbg !13057
  br i1 %12, label %18, label %13, !dbg !13057

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !13057
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !13057
  %16 = mul nuw nsw i32 %15, 8400, !dbg !13057
  %17 = add nuw nsw i32 %16, 8399, !dbg !13057
  br label %18, !dbg !13057

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !13035, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13058, metadata !DIExpression()) #25, !dbg !13065
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13067, !srcloc !13073
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %21, metadata !13070, metadata !DIExpression()) #25, !dbg !13074
  call void @llvm.dbg.value(metadata i32 undef, metadata !13071, metadata !DIExpression()) #25, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %21, metadata !13064, metadata !DIExpression()) #25, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %21, metadata !13041, metadata !DIExpression()), !dbg !13048
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %22, metadata !13046, metadata !DIExpression()), !dbg !13048
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %23, metadata !13038, metadata !DIExpression()), !dbg !13048
  %24 = load i32, i32* @cycle_count, align 4, !dbg !13077
  %25 = add i32 %24, %22, !dbg !13077
  store i32 %25, i32* @cycle_count, align 4, !dbg !13077
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13078
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !13079
  %27 = sub i32 %25, %26, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %27, metadata !13047, metadata !DIExpression()), !dbg !13048
  %28 = icmp slt i32 %27, 0, !dbg !13081
  br i1 %28, label %38, label %29, !dbg !13083

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !13037, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 undef, metadata !13037, metadata !DIExpression()), !dbg !13048
  %30 = add nuw i32 %19, %27, !dbg !13084
  %31 = urem i32 %30, 8400, !dbg !13086
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !13037, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13048
  %32 = sub nuw nsw i32 %19, %31, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %32, metadata !13037, metadata !DIExpression()), !dbg !13048
  %33 = icmp ugt i32 %32, 1024, !dbg !13088
  br i1 %33, label %34, label %36, !dbg !13088

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !13037, metadata !DIExpression()), !dbg !13048
  %35 = icmp ugt i32 %32, 16766400, !dbg !13089
  br i1 %35, label %38, label %36, !dbg !13091

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !13092
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13093
  call void @llvm.dbg.value(metadata i32 %40, metadata !13039, metadata !DIExpression()), !dbg !13048
  %41 = add nsw i32 %39, -1, !dbg !13094
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13095
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13096
  %42 = icmp ult i32 %23, %40, !dbg !13097
  br i1 %42, label %43, label %48, !dbg !13099

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !13100
  %45 = add i32 %23, %9, !dbg !13102
  %46 = sub i32 %45, %40, !dbg !13103
  %47 = add i32 %46, %44, !dbg !13100
  br label %52, !dbg !13104

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !13105
  %50 = load i32, i32* @cycle_count, align 4, !dbg !13107
  %51 = add i32 %49, %50, !dbg !13107
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !13108
  store i32 %53, i32* @cycle_count, align 4, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %21, metadata !13109, metadata !DIExpression()) #25, !dbg !13115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13114, metadata !DIExpression()) #25, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %21, metadata !13117, metadata !DIExpression()) #25, !dbg !13120
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !13122, !srcloc !13123
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !13124
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13125 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13058, metadata !DIExpression()) #25, !dbg !13129
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13131, !srcloc !13073
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %2, metadata !13070, metadata !DIExpression()) #25, !dbg !13133
  call void @llvm.dbg.value(metadata i32 undef, metadata !13071, metadata !DIExpression()) #25, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %2, metadata !13064, metadata !DIExpression()) #25, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %2, metadata !13127, metadata !DIExpression()), !dbg !13134
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13135
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13136
  %5 = add i32 %4, %3, !dbg !13137
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13138
  %7 = sub i32 %5, %6, !dbg !13139
  call void @llvm.dbg.value(metadata i32 %7, metadata !13128, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.value(metadata i32 %2, metadata !13109, metadata !DIExpression()) #25, !dbg !13140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13114, metadata !DIExpression()) #25, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %2, metadata !13117, metadata !DIExpression()) #25, !dbg !13142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13144, !srcloc !13123
  %8 = udiv i32 %7, 8400, !dbg !13145
  ret i32 %8, !dbg !13146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13147 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13058, metadata !DIExpression()) #25, !dbg !13151
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13153, !srcloc !13073
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13153
  call void @llvm.dbg.value(metadata i32 %2, metadata !13070, metadata !DIExpression()) #25, !dbg !13155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13071, metadata !DIExpression()) #25, !dbg !13155
  call void @llvm.dbg.value(metadata i32 %2, metadata !13064, metadata !DIExpression()) #25, !dbg !13151
  call void @llvm.dbg.value(metadata i32 %2, metadata !13149, metadata !DIExpression()), !dbg !13156
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13157
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13158
  %5 = add i32 %4, %3, !dbg !13159
  call void @llvm.dbg.value(metadata i32 %5, metadata !13150, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.value(metadata i32 %2, metadata !13109, metadata !DIExpression()) #25, !dbg !13160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13114, metadata !DIExpression()) #25, !dbg !13160
  call void @llvm.dbg.value(metadata i32 %2, metadata !13117, metadata !DIExpression()) #25, !dbg !13162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13164, !srcloc !13123
  ret i32 %5, !dbg !13165
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !13166 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13167
  %2 = icmp eq i32 %1, -16777216, !dbg !13169
  br i1 %2, label %3, label %6, !dbg !13170

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13171
  %5 = or i32 %4, 1, !dbg !13171
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13171
  br label %6, !dbg !13173

6:                                                ; preds = %3, %0
  ret void, !dbg !13174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !13175 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13176
  %2 = and i32 %1, -2, !dbg !13176
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13176
  ret void, !dbg !13177
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13178 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13204, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata i8 %1, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13206, metadata !DIExpression()), !dbg !13207
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13208
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13208
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13207
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13209
  %8 = load i8, i8* %6, align 4, !dbg !13210
  %9 = zext i8 %8 to i32, !dbg !13211
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13211
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13212
  br i1 %11, label %18, label %24, !dbg !13213

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13207
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13209
  %14 = load i8, i8* %6, align 4, !dbg !13210
  %15 = zext i8 %14 to i32, !dbg !13211
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13211
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13212
  br i1 %17, label %18, label %24, !dbg !13213, !llvm.loop !13214

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13216
  %21 = load i8, i8* %20, align 1, !dbg !13216
  %22 = icmp eq i8 %21, %1, !dbg !13219
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13220
  br i1 %22, label %24, label %12, !dbg !13221

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13207
  ret i32 %25, !dbg !13222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13223 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13234, metadata !DIExpression()), !dbg !13250
  call void @llvm.dbg.value(metadata i8 %1, metadata !13235, metadata !DIExpression()), !dbg !13250
  call void @llvm.dbg.value(metadata i32 %2, metadata !13236, metadata !DIExpression()), !dbg !13250
  call void @llvm.dbg.value(metadata i32 0, metadata !13239, metadata !DIExpression()), !dbg !13250
  call void @llvm.dbg.value(metadata i32 0, metadata !13240, metadata !DIExpression()), !dbg !13250
  call void @llvm.dbg.value(metadata i8 0, metadata !13241, metadata !DIExpression()), !dbg !13251
  %4 = icmp eq i8 %1, 0, !dbg !13252
  br i1 %4, label %35, label %5, !dbg !13253

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13252
  br label %9, !dbg !13253

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13241, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %29, metadata !13239, metadata !DIExpression()), !dbg !13250
  %8 = icmp eq i32 %34, %6, !dbg !13252
  br i1 %8, label %35, label %9, !dbg !13253, !llvm.loop !13254

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13241, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i32 %11, metadata !13239, metadata !DIExpression()), !dbg !13250
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13256
  %13 = load i32, i32* %12, align 4, !dbg !13256
  call void @llvm.dbg.value(metadata i32 %13, metadata !13238, metadata !DIExpression()), !dbg !13250
  %14 = and i32 %13, 31, !dbg !13257
  %15 = icmp ult i32 %14, 16, !dbg !13258
  br i1 %15, label %16, label %20, !dbg !13259

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13260
  %18 = load i32, i32* %17, align 4, !dbg !13260
  %19 = or i32 %18, 32, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %19, metadata !13239, metadata !DIExpression()), !dbg !13250
  br label %28, !dbg !13263

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13264

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13265
  %23 = load i32, i32* %22, align 4, !dbg !13265
  call void @llvm.dbg.value(metadata i32 %23, metadata !13243, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13266
  %24 = lshr i32 %23, 7, !dbg !13267
  %25 = and i32 %24, 16, !dbg !13267
  %26 = or i32 %25, %23, !dbg !13267
  call void @llvm.dbg.value(metadata i32 %26, metadata !13239, metadata !DIExpression()), !dbg !13250
  br label %28, !dbg !13268

27:                                               ; preds = %20
  br label %28, !dbg !13269

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13250
  call void @llvm.dbg.value(metadata i32 %29, metadata !13239, metadata !DIExpression()), !dbg !13250
  %30 = lshr i32 %13, 5, !dbg !13269
  %31 = and i32 %30, 255, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %31, metadata !13237, metadata !DIExpression()), !dbg !13250
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13270
  call void @llvm.dbg.value(metadata i32 %32, metadata !13240, metadata !DIExpression()), !dbg !13250
  %33 = icmp slt i32 %32, 0, !dbg !13271
  %34 = add nuw nsw i32 %10, 1, !dbg !13273
  call void @llvm.dbg.value(metadata i32 %34, metadata !13241, metadata !DIExpression()), !dbg !13251
  br i1 %33, label %35, label %7, !dbg !13274

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13280, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.value(metadata i32 %1, metadata !13281, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.value(metadata i32 %2, metadata !13282, metadata !DIExpression()), !dbg !13284
  %4 = icmp ugt i32 %0, 175, !dbg !13285
  br i1 %4, label %16, label %5, !dbg !13287

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13288
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13289
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13289
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13283, metadata !DIExpression()), !dbg !13284
  %9 = add nsw i32 %6, -8, !dbg !13290
  %10 = icmp ult i32 %9, 3, !dbg !13290
  br i1 %10, label %16, label %11, !dbg !13292

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.202(%struct.device* noundef %8) #26, !dbg !13293
  br i1 %12, label %13, label %16, !dbg !13294

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13295
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !13296
  br label %16, !dbg !13297

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !13284
  ret i32 %17, !dbg !13298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.202(%struct.device* noundef %0) unnamed_addr #1 !dbg !13299 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13303, metadata !DIExpression()), !dbg !13304
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13305, !srcloc !13307
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.203(%struct.device* noundef %0) #26, !dbg !13308
  ret i1 %2, !dbg !13309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.203(%struct.device* noundef %0) unnamed_addr #1 !dbg !13310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13312, metadata !DIExpression()), !dbg !13313
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13314
  ret i1 %2, !dbg !13315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13316 {
  ret void, !dbg !13317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13318 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13320, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 0, metadata !13321, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 2, metadata !13322, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 0, metadata !13323, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 2, metadata !13324, metadata !DIExpression()), !dbg !13325
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13326
  %2 = and i32 %1, 12, !dbg !13327
  call void @llvm.dbg.value(metadata i32 %2, metadata !13320, metadata !DIExpression()), !dbg !13325
  %3 = icmp eq i32 %2, 8, !dbg !13328
  br i1 %3, label %4, label %18, !dbg !13328

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13329
  call void @llvm.dbg.value(metadata i32 %5, metadata !13323, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13325
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13331
  %7 = and i32 %6, 63, !dbg !13332
  call void @llvm.dbg.value(metadata i32 %7, metadata !13324, metadata !DIExpression()), !dbg !13325
  %8 = udiv i32 16000000, %7, !dbg !13333
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13333
  %10 = lshr i32 %9, 6, !dbg !13333
  %11 = and i32 %10, 511, !dbg !13333
  %12 = mul i32 %11, %8, !dbg !13333
  call void @llvm.dbg.value(metadata i32 %12, metadata !13321, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 %12, metadata !13321, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 %12, metadata !13321, metadata !DIExpression()), !dbg !13325
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13335
  %14 = lshr i32 %13, 15, !dbg !13336
  %15 = and i32 %14, 6, !dbg !13336
  %16 = add nuw nsw i32 %15, 2, !dbg !13336
  call void @llvm.dbg.value(metadata i32 %16, metadata !13322, metadata !DIExpression()), !dbg !13325
  %17 = udiv i32 %12, %16, !dbg !13337
  br label %18, !dbg !13338

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !13339
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13340
  %21 = lshr i32 %20, 4, !dbg !13341
  %22 = and i32 %21, 15, !dbg !13341
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !13342
  %24 = load i8, i8* %23, align 1, !dbg !13342
  %25 = zext i8 %24 to i32, !dbg !13342
  call void @llvm.dbg.value(metadata i32 %25, metadata !13320, metadata !DIExpression()), !dbg !13325
  %26 = lshr i32 %19, %25, !dbg !13343
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !13343
  ret void, !dbg !13344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13345 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !13387, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13388, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13389, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13390, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13391, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13392, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13393, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13394, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 0, metadata !13396, metadata !DIExpression()), !dbg !13401
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !13402
  %4 = load i32, i32* %3, align 4, !dbg !13402
  %5 = and i32 %4, 1, !dbg !13404
  %6 = icmp eq i32 %5, 0, !dbg !13405
  br i1 %6, label %17, label %7, !dbg !13406

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13407
  %9 = and i32 %8, -100663297, !dbg !13407
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13407
  %11 = load i32, i32* %10, align 4, !dbg !13407
  %12 = or i32 %9, %11, !dbg !13407
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13407
  %13 = load i32, i32* %10, align 4, !dbg !13409
  %14 = icmp eq i32 %13, 0, !dbg !13411
  %15 = zext i1 %14 to i32, !dbg !13412
  %16 = load i32, i32* %3, align 4, !dbg !13413
  br label %17, !dbg !13412

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !13413
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !13401
  call void @llvm.dbg.value(metadata i32 %19, metadata !13395, metadata !DIExpression()), !dbg !13401
  %20 = and i32 %18, 2, !dbg !13415
  %21 = icmp eq i32 %20, 0, !dbg !13416
  br i1 %21, label %32, label %22, !dbg !13417

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13418
  %24 = and i32 %23, -402653185, !dbg !13418
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13418
  %26 = load i32, i32* %25, align 4, !dbg !13418
  %27 = or i32 %24, %26, !dbg !13418
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13418
  %28 = load i32, i32* %25, align 4, !dbg !13420
  %29 = icmp eq i32 %28, 0, !dbg !13422
  %30 = select i1 %29, i32 1, i32 %19, !dbg !13423
  %31 = load i32, i32* %3, align 4, !dbg !13424
  br label %32, !dbg !13423

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !13424
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !13401
  call void @llvm.dbg.value(metadata i32 %34, metadata !13395, metadata !DIExpression()), !dbg !13401
  %35 = and i32 %33, 4, !dbg !13426
  %36 = icmp eq i32 %35, 0, !dbg !13427
  br i1 %36, label %49, label %37, !dbg !13428

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13429
  %39 = and i32 %38, -3145729, !dbg !13429
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13429
  %41 = load i32, i32* %40, align 4, !dbg !13429
  %42 = or i32 %39, %41, !dbg !13429
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13429
  %43 = load i32, i32* %40, align 4, !dbg !13431
  %44 = icmp eq i32 %43, 1048576, !dbg !13433
  %45 = select i1 %44, i32 1, i32 %34, !dbg !13434
  call void @llvm.dbg.value(metadata i32 %45, metadata !13395, metadata !DIExpression()), !dbg !13401
  %46 = icmp eq i32 %43, 0, !dbg !13435
  %47 = zext i1 %46 to i32, !dbg !13437
  %48 = load i32, i32* %3, align 4, !dbg !13438
  br label %49, !dbg !13437

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !13438
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !13401
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !13401
  call void @llvm.dbg.value(metadata i32 %52, metadata !13396, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 %51, metadata !13395, metadata !DIExpression()), !dbg !13401
  %53 = and i32 %50, 8, !dbg !13440
  %54 = icmp eq i32 %53, 0, !dbg !13441
  br i1 %54, label %67, label %55, !dbg !13442

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13443
  %57 = and i32 %56, -12582913, !dbg !13443
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13443
  %59 = load i32, i32* %58, align 4, !dbg !13443
  %60 = or i32 %57, %59, !dbg !13443
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13443
  %61 = load i32, i32* %58, align 4, !dbg !13445
  %62 = icmp eq i32 %61, 4194304, !dbg !13447
  %63 = select i1 %62, i32 1, i32 %51, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %63, metadata !13395, metadata !DIExpression()), !dbg !13401
  %64 = icmp eq i32 %61, 0, !dbg !13449
  %65 = select i1 %64, i32 1, i32 %52, !dbg !13451
  %66 = load i32, i32* %3, align 4, !dbg !13452
  br label %67, !dbg !13451

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !13452
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !13401
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !13401
  call void @llvm.dbg.value(metadata i32 %70, metadata !13396, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.value(metadata i32 %69, metadata !13395, metadata !DIExpression()), !dbg !13401
  %71 = and i32 %68, 32, !dbg !13453
  %72 = icmp eq i32 %71, 0, !dbg !13454
  br i1 %72, label %131, label %73, !dbg !13455

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !13456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !13456
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13397, metadata !DIExpression()), !dbg !13456
  store volatile i32 0, i32* %2, align 4, !dbg !13456
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13456
  %76 = or i32 %75, 268435456, !dbg !13456
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13456
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13456
  %78 = and i32 %77, 268435456, !dbg !13456
  store volatile i32 %78, i32* %2, align 4, !dbg !13456
  %79 = load volatile i32, i32* %2, align 4, !dbg !13456
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !13457
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13458
  %81 = or i32 %80, 256, !dbg !13458
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13458
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %82, metadata !13388, metadata !DIExpression()), !dbg !13401
  br label %83, !dbg !13460

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13461
  %85 = and i32 %84, 256, !dbg !13462
  %86 = icmp eq i32 %85, 0, !dbg !13463
  br i1 %86, label %87, label %91, !dbg !13460

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #27, !dbg !13464
  %89 = sub i32 %88, %82, !dbg !13467
  %90 = icmp ugt i32 %89, 2, !dbg !13468
  br i1 %90, label %439, label %83, !dbg !13469, !llvm.loop !13470

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13472
  %93 = and i32 %92, 768, !dbg !13473
  call void @llvm.dbg.value(metadata i32 %93, metadata !13389, metadata !DIExpression()), !dbg !13401
  %94 = icmp eq i32 %93, 0, !dbg !13474
  br i1 %94, label %116, label %95, !dbg !13476

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13477
  %97 = load i32, i32* %96, align 4, !dbg !13477
  %98 = and i32 %97, 768, !dbg !13478
  %99 = icmp eq i32 %93, %98, !dbg !13479
  br i1 %99, label %116, label %100, !dbg !13480

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13481
  %102 = and i32 %101, -769, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %102, metadata !13389, metadata !DIExpression()), !dbg !13401
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !13484
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !13485
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13486
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13487
  %104 = and i32 %103, 1, !dbg !13487
  %105 = icmp eq i32 %104, 0, !dbg !13487
  br i1 %105, label %116, label %106, !dbg !13489

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #27, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %107, metadata !13388, metadata !DIExpression()), !dbg !13401
  br label %108, !dbg !13492

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13493
  %110 = and i32 %109, 2, !dbg !13494
  %111 = icmp eq i32 %110, 0, !dbg !13494
  br i1 %111, label %112, label %116, !dbg !13492

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #27, !dbg !13495
  %114 = sub i32 %113, %107, !dbg !13498
  %115 = icmp ugt i32 %114, 5000, !dbg !13499
  br i1 %115, label %439, label %108, !dbg !13500, !llvm.loop !13501

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13503
  %118 = load i32, i32* %117, align 4, !dbg !13503
  %119 = and i32 %118, 768, !dbg !13503
  %120 = icmp eq i32 %119, 768, !dbg !13503
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13503
  %122 = and i32 %121, -2031617, !dbg !13503
  %123 = and i32 %118, 268434687, !dbg !13503
  %124 = select i1 %120, i32 %123, i32 0, !dbg !13503
  %125 = or i32 %122, %124, !dbg !13503
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13503
  %126 = load i32, i32* %117, align 4, !dbg !13503
  %127 = and i32 %126, 4095, !dbg !13503
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13503
  %129 = or i32 %128, %127, !dbg !13503
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13503
  %130 = load i32, i32* %3, align 4, !dbg !13505
  br label %131, !dbg !13507

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !13505
  %133 = and i32 %132, 16, !dbg !13508
  %134 = icmp eq i32 %133, 0, !dbg !13509
  br i1 %134, label %140, label %135, !dbg !13510

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !13511
  %137 = load i8, i8* %136, align 4, !dbg !13511
  %138 = zext i8 %137 to i32, !dbg !13511
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !13511
  %139 = load i32, i32* %3, align 4, !dbg !13513
  br label %140, !dbg !13515

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !13513
  %142 = and i32 %141, 128, !dbg !13516
  %143 = icmp eq i32 %142, 0, !dbg !13517
  br i1 %143, label %151, label %144, !dbg !13518

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13519
  %146 = and i32 %145, -12582913, !dbg !13519
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !13519
  %148 = load i32, i32* %147, align 4, !dbg !13519
  %149 = or i32 %146, %148, !dbg !13519
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13519
  %150 = load i32, i32* %3, align 4, !dbg !13521
  br label %151, !dbg !13523

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !13521
  %153 = and i32 %152, 64, !dbg !13524
  %154 = icmp eq i32 %153, 0, !dbg !13525
  br i1 %154, label %162, label %155, !dbg !13526

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13527
  %157 = and i32 %156, -67108865, !dbg !13527
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !13527
  %159 = load i32, i32* %158, align 4, !dbg !13527
  %160 = or i32 %157, %159, !dbg !13527
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13527
  %161 = load i32, i32* %3, align 4, !dbg !13529
  br label %162, !dbg !13531

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !13529
  %164 = and i32 %163, 256, !dbg !13532
  %165 = icmp eq i32 %164, 0, !dbg !13533
  br i1 %165, label %176, label %166, !dbg !13534

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13535
  %168 = and i32 %167, -134217729, !dbg !13535
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13535
  %170 = load i32, i32* %169, align 4, !dbg !13535
  %171 = or i32 %168, %170, !dbg !13535
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13535
  %172 = load i32, i32* %169, align 4, !dbg !13537
  %173 = icmp eq i32 %172, 134217728, !dbg !13539
  %174 = select i1 %173, i32 1, i32 %70, !dbg !13540
  %175 = load i32, i32* %3, align 4, !dbg !13541
  br label %176, !dbg !13540

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !13541
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !13401
  call void @llvm.dbg.value(metadata i32 %178, metadata !13396, metadata !DIExpression()), !dbg !13401
  %179 = and i32 %177, 512, !dbg !13543
  %180 = icmp eq i32 %179, 0, !dbg !13544
  br i1 %180, label %188, label %181, !dbg !13545

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13546
  %183 = and i32 %182, -268435457, !dbg !13546
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !13546
  %185 = load i32, i32* %184, align 4, !dbg !13546
  %186 = or i32 %183, %185, !dbg !13546
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13546
  %187 = load i32, i32* %3, align 4, !dbg !13548
  br label %188, !dbg !13550

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !13548
  %190 = and i32 %189, 1024, !dbg !13551
  %191 = icmp eq i32 %190, 0, !dbg !13552
  br i1 %191, label %204, label %192, !dbg !13553

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13554
  %194 = and i32 %193, -536870913, !dbg !13554
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13554
  %196 = load i32, i32* %195, align 4, !dbg !13554
  %197 = or i32 %194, %196, !dbg !13554
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13554
  %198 = load i32, i32* %195, align 4, !dbg !13556
  %199 = icmp eq i32 %198, 536870912, !dbg !13558
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %69, metadata !13395, metadata !DIExpression()), !dbg !13401
  br i1 %201, label %209, label %202, !dbg !13559

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !13560
  br label %206, !dbg !13559

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !13395, metadata !DIExpression()), !dbg !13401
  %205 = icmp eq i32 %69, 1, !dbg !13562
  br i1 %205, label %209, label %206, !dbg !13563

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !13560
  %208 = icmp eq i32 %207, 2048, !dbg !13564
  br i1 %208, label %209, label %356, !dbg !13565

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13566
  %210 = tail call i32 @HAL_GetTick() #27, !dbg !13568
  call void @llvm.dbg.value(metadata i32 %210, metadata !13388, metadata !DIExpression()), !dbg !13401
  br label %211, !dbg !13569

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13570
  %213 = and i32 %212, 134217728, !dbg !13570
  %214 = icmp eq i32 %213, 0, !dbg !13570
  br i1 %214, label %219, label %215, !dbg !13569

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !13571
  %217 = sub i32 %216, %210, !dbg !13574
  %218 = icmp ugt i32 %217, 2, !dbg !13575
  br i1 %218, label %439, label %211, !dbg !13576, !llvm.loop !13577

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !13579
  %221 = and i32 %220, 1, !dbg !13581
  %222 = icmp eq i32 %221, 0, !dbg !13582
  br i1 %222, label %227, label %223, !dbg !13583

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13584
  %225 = load i32, i32* %224, align 4, !dbg !13584
  %226 = icmp eq i32 %225, 0, !dbg !13585
  br i1 %226, label %234, label %227, !dbg !13586

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !13587
  %229 = icmp eq i32 %228, 0, !dbg !13588
  br i1 %229, label %252, label %230, !dbg !13589

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13590
  %232 = load i32, i32* %231, align 4, !dbg !13590
  %233 = icmp eq i32 %232, 0, !dbg !13591
  br i1 %233, label %234, label %252, !dbg !13592

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13593
  %236 = and i32 %235, 196608, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %236, metadata !13390, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13401
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13596
  %238 = and i32 %237, 251658240, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %238, metadata !13391, metadata !DIExpression()), !dbg !13401
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13598
  %240 = load i32, i32* %239, align 4, !dbg !13598
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13598
  %242 = load i32, i32* %241, align 4, !dbg !13598
  %243 = shl i32 %242, 6, !dbg !13598
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13598
  %245 = load i32, i32* %244, align 4, !dbg !13598
  %246 = shl i32 %245, 28, !dbg !13598
  %247 = or i32 %240, %236, !dbg !13598
  %248 = or i32 %247, %238, !dbg !13598
  %249 = or i32 %248, %243, !dbg !13598
  %250 = or i32 %249, %246, !dbg !13598
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13598
  %251 = load i32, i32* %3, align 4, !dbg !13599
  br label %252, !dbg !13601

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !13599
  %254 = and i32 %253, 4, !dbg !13602
  %255 = icmp eq i32 %254, 0, !dbg !13603
  br i1 %255, label %260, label %256, !dbg !13604

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13605
  %258 = load i32, i32* %257, align 4, !dbg !13605
  %259 = icmp eq i32 %258, 1048576, !dbg !13606
  br i1 %259, label %267, label %260, !dbg !13607

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !13608
  %262 = icmp eq i32 %261, 0, !dbg !13609
  br i1 %262, label %291, label %263, !dbg !13610

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13611
  %265 = load i32, i32* %264, align 4, !dbg !13611
  %266 = icmp eq i32 %265, 4194304, !dbg !13612
  br i1 %266, label %267, label %291, !dbg !13613

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13614
  %269 = and i32 %268, 196608, !dbg !13616
  call void @llvm.dbg.value(metadata i32 %269, metadata !13390, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13401
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13617
  %271 = and i32 %270, 1879048192, !dbg !13618
  call void @llvm.dbg.value(metadata i32 %271, metadata !13392, metadata !DIExpression()), !dbg !13401
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13619
  %273 = load i32, i32* %272, align 4, !dbg !13619
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13619
  %275 = load i32, i32* %274, align 4, !dbg !13619
  %276 = shl i32 %275, 6, !dbg !13619
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13619
  %278 = load i32, i32* %277, align 4, !dbg !13619
  %279 = shl i32 %278, 24, !dbg !13619
  %280 = or i32 %273, %269, !dbg !13619
  %281 = or i32 %280, %271, !dbg !13619
  %282 = or i32 %281, %276, !dbg !13619
  %283 = or i32 %282, %279, !dbg !13619
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13619
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13620
  %285 = and i32 %284, -32, !dbg !13620
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !13620
  %287 = load i32, i32* %286, align 4, !dbg !13620
  %288 = add i32 %287, -1, !dbg !13620
  %289 = or i32 %288, %285, !dbg !13620
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13620
  %290 = load i32, i32* %3, align 4, !dbg !13621
  br label %291, !dbg !13623

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !13621
  %293 = and i32 %292, 1024, !dbg !13624
  %294 = icmp eq i32 %293, 0, !dbg !13625
  br i1 %294, label %321, label %295, !dbg !13626

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13627
  %297 = load i32, i32* %296, align 4, !dbg !13627
  %298 = icmp eq i32 %297, 536870912, !dbg !13628
  br i1 %298, label %299, label %321, !dbg !13629

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13630
  call void @llvm.dbg.value(metadata i32 %300, metadata !13391, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13401
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13632
  %302 = and i32 %301, 1879048192, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %302, metadata !13392, metadata !DIExpression()), !dbg !13401
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13634
  %304 = load i32, i32* %303, align 4, !dbg !13634
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13634
  %306 = load i32, i32* %305, align 4, !dbg !13634
  %307 = shl i32 %306, 6, !dbg !13634
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13634
  %309 = load i32, i32* %308, align 4, !dbg !13634
  %310 = shl i32 %309, 15, !dbg !13634
  %311 = add i32 %310, -65536, !dbg !13634
  %312 = and i32 %311, -65536, !dbg !13634
  %313 = shl i32 %300, 9, !dbg !13634
  %314 = and i32 %313, 100663296, !dbg !13634
  %315 = add nuw nsw i32 %314, 33554432, !dbg !13634
  %316 = or i32 %302, %304, !dbg !13634
  %317 = or i32 %316, %315, !dbg !13634
  %318 = or i32 %317, %307, !dbg !13634
  %319 = or i32 %318, %312, !dbg !13634
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13634
  %320 = load i32, i32* %3, align 4, !dbg !13635
  br label %321, !dbg !13637

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !13635
  %323 = and i32 %322, 2048, !dbg !13638
  %324 = icmp eq i32 %323, 0, !dbg !13639
  br i1 %324, label %346, label %325, !dbg !13640

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13641
  %327 = load i32, i32* %326, align 4, !dbg !13641
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13641
  %329 = load i32, i32* %328, align 4, !dbg !13641
  %330 = shl i32 %329, 6, !dbg !13641
  %331 = or i32 %330, %327, !dbg !13641
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13641
  %333 = load i32, i32* %332, align 4, !dbg !13641
  %334 = shl i32 %333, 15, !dbg !13641
  %335 = add i32 %334, -65536, !dbg !13641
  %336 = and i32 %335, -65536, !dbg !13641
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13641
  %338 = load i32, i32* %337, align 4, !dbg !13641
  %339 = shl i32 %338, 24, !dbg !13641
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13641
  %341 = load i32, i32* %340, align 4, !dbg !13641
  %342 = shl i32 %341, 28, !dbg !13641
  %343 = or i32 %331, %339, !dbg !13641
  %344 = or i32 %343, %336, !dbg !13641
  %345 = or i32 %344, %342, !dbg !13641
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13641
  br label %346, !dbg !13643

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13644
  %347 = tail call i32 @HAL_GetTick() #27, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %347, metadata !13388, metadata !DIExpression()), !dbg !13401
  br label %348, !dbg !13646

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13647
  %350 = and i32 %349, 134217728, !dbg !13648
  %351 = icmp eq i32 %350, 0, !dbg !13648
  br i1 %351, label %352, label %356, !dbg !13646

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #27, !dbg !13649
  %354 = sub i32 %353, %347, !dbg !13652
  %355 = icmp ugt i32 %354, 2, !dbg !13653
  br i1 %355, label %439, label %348, !dbg !13654, !llvm.loop !13655

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !13657
  br i1 %357, label %358, label %439, !dbg !13659

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13660
  %359 = tail call i32 @HAL_GetTick() #27, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %359, metadata !13388, metadata !DIExpression()), !dbg !13401
  br label %360, !dbg !13663

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13664
  %362 = and i32 %361, 536870912, !dbg !13664
  %363 = icmp eq i32 %362, 0, !dbg !13664
  br i1 %363, label %368, label %364, !dbg !13663

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #27, !dbg !13665
  %366 = sub i32 %365, %359, !dbg !13668
  %367 = icmp ugt i32 %366, 2, !dbg !13669
  br i1 %367, label %439, label %360, !dbg !13670, !llvm.loop !13671

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !13673
  %370 = and i32 %369, 4, !dbg !13675
  %371 = icmp eq i32 %370, 0, !dbg !13676
  br i1 %371, label %376, label %372, !dbg !13677

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13678
  %374 = load i32, i32* %373, align 4, !dbg !13678
  %375 = icmp eq i32 %374, 0, !dbg !13679
  br i1 %375, label %383, label %376, !dbg !13680

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !13681
  %378 = icmp eq i32 %377, 0, !dbg !13682
  br i1 %378, label %405, label %379, !dbg !13683

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13684
  %381 = load i32, i32* %380, align 4, !dbg !13684
  %382 = icmp eq i32 %381, 0, !dbg !13685
  br i1 %382, label %383, label %405, !dbg !13686

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13687
  %385 = and i32 %384, 196608, !dbg !13689
  call void @llvm.dbg.value(metadata i32 %385, metadata !13393, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13401
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13690
  %387 = load i32, i32* %386, align 4, !dbg !13690
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13690
  %389 = load i32, i32* %388, align 4, !dbg !13690
  %390 = shl i32 %389, 6, !dbg !13690
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !13690
  %392 = load i32, i32* %391, align 4, !dbg !13690
  %393 = shl i32 %392, 24, !dbg !13690
  %394 = or i32 %385, %387, !dbg !13690
  %395 = or i32 %394, %390, !dbg !13690
  %396 = or i32 %395, %393, !dbg !13690
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13690
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13691
  %398 = and i32 %397, -7937, !dbg !13691
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !13691
  %400 = load i32, i32* %399, align 4, !dbg !13691
  %401 = shl i32 %400, 8, !dbg !13691
  %402 = add i32 %401, -256, !dbg !13691
  %403 = or i32 %402, %398, !dbg !13691
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13691
  %404 = load i32, i32* %3, align 4, !dbg !13692
  br label %405, !dbg !13694

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !13692
  %407 = and i32 %406, 256, !dbg !13695
  %408 = icmp eq i32 %407, 0, !dbg !13696
  br i1 %408, label %429, label %409, !dbg !13697

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13698
  %411 = load i32, i32* %410, align 4, !dbg !13698
  %412 = icmp eq i32 %411, 134217728, !dbg !13699
  br i1 %412, label %413, label %429, !dbg !13700

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13701
  %415 = and i32 %414, 251658240, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %415, metadata !13394, metadata !DIExpression()), !dbg !13401
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13704
  %417 = load i32, i32* %416, align 4, !dbg !13704
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13704
  %419 = load i32, i32* %418, align 4, !dbg !13704
  %420 = shl i32 %419, 6, !dbg !13704
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !13704
  %422 = load i32, i32* %421, align 4, !dbg !13704
  %423 = shl i32 %422, 15, !dbg !13704
  %424 = add i32 %423, -65536, !dbg !13704
  %425 = and i32 %424, -65536, !dbg !13704
  %426 = or i32 %415, %417, !dbg !13704
  %427 = or i32 %426, %420, !dbg !13704
  %428 = or i32 %427, %425, !dbg !13704
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13704
  br label %429, !dbg !13705

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13706
  %430 = tail call i32 @HAL_GetTick() #27, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %430, metadata !13388, metadata !DIExpression()), !dbg !13401
  br label %431, !dbg !13708

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13709
  %433 = and i32 %432, 536870912, !dbg !13710
  %434 = icmp eq i32 %433, 0, !dbg !13710
  br i1 %434, label %435, label %439, !dbg !13708

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #27, !dbg !13711
  %437 = sub i32 %436, %430, !dbg !13714
  %438 = icmp ugt i32 %437, 2, !dbg !13715
  br i1 %438, label %439, label %431, !dbg !13716, !llvm.loop !13717

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !13401
  ret i32 %440, !dbg !13719
}

; Function Attrs: optsize
declare !dbg !13720 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !13722 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !13726, metadata !DIExpression()), !dbg !13728
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !13729
  store i32 2047, i32* %2, align 4, !dbg !13730
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13731
  %4 = and i32 %3, 63, !dbg !13732
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13733
  store i32 %4, i32* %5, align 4, !dbg !13734
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13735
  %7 = lshr i32 %6, 6, !dbg !13736
  %8 = and i32 %7, 511, !dbg !13736
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13737
  store i32 %8, i32* %9, align 4, !dbg !13738
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13739
  %11 = lshr i32 %10, 15, !dbg !13740
  %12 = and i32 %11, 6, !dbg !13740
  %13 = add nuw nsw i32 %12, 2, !dbg !13740
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13741
  store i32 %13, i32* %14, align 4, !dbg !13742
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13743
  %16 = lshr i32 %15, 24, !dbg !13744
  %17 = and i32 %16, 15, !dbg !13744
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13745
  store i32 %17, i32* %18, align 4, !dbg !13746
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13747
  %20 = lshr i32 %19, 28, !dbg !13748
  %21 = and i32 %20, 7, !dbg !13748
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13749
  store i32 %21, i32* %22, align 4, !dbg !13750
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13751
  %24 = and i32 %23, 63, !dbg !13752
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13753
  store i32 %24, i32* %25, align 4, !dbg !13754
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13755
  %27 = lshr i32 %26, 6, !dbg !13756
  %28 = and i32 %27, 511, !dbg !13756
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13757
  store i32 %28, i32* %29, align 4, !dbg !13758
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13759
  %31 = lshr i32 %30, 15, !dbg !13760
  %32 = and i32 %31, 6, !dbg !13760
  %33 = add nuw nsw i32 %32, 2, !dbg !13760
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !13761
  store i32 %33, i32* %34, align 4, !dbg !13762
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13763
  %36 = lshr i32 %35, 24, !dbg !13764
  %37 = and i32 %36, 15, !dbg !13764
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !13765
  store i32 %37, i32* %38, align 4, !dbg !13766
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13767
  %40 = and i32 %39, 31, !dbg !13768
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !13769
  store i32 %40, i32* %41, align 4, !dbg !13770
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13771
  %43 = lshr i32 %42, 8, !dbg !13772
  %44 = and i32 %43, 31, !dbg !13772
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !13773
  store i32 %44, i32* %45, align 4, !dbg !13774
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13775
  %47 = and i32 %46, 3145728, !dbg !13775
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13776
  store i32 %47, i32* %48, align 4, !dbg !13777
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13778
  %50 = and i32 %49, 12582912, !dbg !13778
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13779
  store i32 %50, i32* %51, align 4, !dbg !13780
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13781
  %53 = and i32 %52, 100663296, !dbg !13781
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13782
  store i32 %53, i32* %54, align 4, !dbg !13783
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13784
  %56 = and i32 %55, 402653184, !dbg !13784
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13785
  store i32 %56, i32* %57, align 4, !dbg !13786
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13787
  %59 = and i32 %58, 2031616, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %59, metadata !13727, metadata !DIExpression()), !dbg !13728
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13789
  %61 = and i32 %60, 768, !dbg !13790
  %62 = or i32 %61, %59, !dbg !13791
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13792
  store i32 %62, i32* %63, align 4, !dbg !13793
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13794
  %65 = and i32 %64, 67108864, !dbg !13794
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !13795
  store i32 %65, i32* %66, align 4, !dbg !13796
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13797
  %68 = and i32 %67, 12582912, !dbg !13797
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !13798
  store i32 %68, i32* %69, align 4, !dbg !13799
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13800
  %71 = and i32 %70, 134217728, !dbg !13800
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13801
  store i32 %71, i32* %72, align 4, !dbg !13802
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13803
  %74 = and i32 %73, 268435456, !dbg !13803
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !13804
  store i32 %74, i32* %75, align 4, !dbg !13805
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13806
  %77 = and i32 %76, 536870912, !dbg !13806
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13807
  store i32 %77, i32* %78, align 4, !dbg !13808
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13809
  %80 = lshr i32 %79, 24, !dbg !13811
  %81 = trunc i32 %80 to i8, !dbg !13811
  %82 = and i8 %81, 1, !dbg !13811
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !13812
  store i8 %82, i8* %83, align 4, !dbg !13814
  ret void, !dbg !13815
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #17 !dbg !13816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13818, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 0, metadata !13819, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 0, metadata !13820, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 0, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 0, metadata !13822, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 0, metadata !13823, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 0, metadata !13824, metadata !DIExpression()), !dbg !13825
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !13826

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13827
  call void @llvm.dbg.value(metadata i32 %3, metadata !13822, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 %3, metadata !13822, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !13825
  %4 = lshr i32 %3, 20, !dbg !13830
  %5 = and i32 %4, 15, !dbg !13830
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !13830

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13831
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13835
  %9 = and i32 %8, 63, !dbg !13835
  %10 = udiv i32 16000000, %9, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %10, metadata !13821, metadata !DIExpression()), !dbg !13825
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13836
  %12 = lshr i32 %11, 24, !dbg !13837
  %13 = and i32 %12, 15, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %13, metadata !13819, metadata !DIExpression()), !dbg !13825
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13838
  %15 = lshr i32 %14, 6, !dbg !13839
  %16 = and i32 %15, 511, !dbg !13839
  %17 = mul i32 %16, %10, !dbg !13840
  %18 = udiv i32 %17, %13, !dbg !13841
  call void @llvm.dbg.value(metadata i32 %18, metadata !13820, metadata !DIExpression()), !dbg !13825
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13842
  %20 = lshr i32 %19, 8, !dbg !13843
  %21 = and i32 %20, 31, !dbg !13843
  %22 = add nuw nsw i32 %21, 1, !dbg !13844
  call void @llvm.dbg.value(metadata i32 %22, metadata !13819, metadata !DIExpression()), !dbg !13825
  %23 = udiv i32 %18, %22, !dbg !13845
  call void @llvm.dbg.value(metadata i32 %23, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13846

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13850
  %27 = and i32 %26, 63, !dbg !13850
  %28 = udiv i32 16000000, %27, !dbg !13850
  call void @llvm.dbg.value(metadata i32 %28, metadata !13821, metadata !DIExpression()), !dbg !13825
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13851
  %30 = lshr i32 %29, 24, !dbg !13852
  %31 = and i32 %30, 15, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %31, metadata !13819, metadata !DIExpression()), !dbg !13825
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13853
  %33 = lshr i32 %32, 6, !dbg !13854
  %34 = and i32 %33, 511, !dbg !13854
  %35 = mul i32 %34, %28, !dbg !13855
  %36 = udiv i32 %35, %31, !dbg !13856
  call void @llvm.dbg.value(metadata i32 %36, metadata !13820, metadata !DIExpression()), !dbg !13825
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13857
  %38 = and i32 %37, 31, !dbg !13858
  %39 = add nuw nsw i32 %38, 1, !dbg !13859
  call void @llvm.dbg.value(metadata i32 %39, metadata !13819, metadata !DIExpression()), !dbg !13825
  %40 = udiv i32 %36, %39, !dbg !13860
  call void @llvm.dbg.value(metadata i32 %40, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13861

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13862
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13865
  %44 = and i32 %43, 63, !dbg !13865
  %45 = udiv i32 16000000, %44, !dbg !13865
  call void @llvm.dbg.value(metadata i32 %45, metadata !13821, metadata !DIExpression()), !dbg !13825
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13866
  %47 = lshr i32 %46, 28, !dbg !13867
  %48 = and i32 %47, 7, !dbg !13867
  call void @llvm.dbg.value(metadata i32 %48, metadata !13819, metadata !DIExpression()), !dbg !13825
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13868
  %50 = lshr i32 %49, 6, !dbg !13869
  %51 = and i32 %50, 511, !dbg !13869
  %52 = mul i32 %51, %45, !dbg !13870
  %53 = udiv i32 %52, %48, !dbg !13871
  call void @llvm.dbg.value(metadata i32 %53, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13872

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13873

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13875
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13820, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13878
  call void @llvm.dbg.value(metadata i32 %58, metadata !13823, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !13825
  %59 = lshr i32 %58, 25, !dbg !13880
  %60 = and i32 %59, 3, !dbg !13880
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !13880

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13881
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13885
  %64 = and i32 %63, 63, !dbg !13885
  %65 = udiv i32 16000000, %64, !dbg !13885
  call void @llvm.dbg.value(metadata i32 %65, metadata !13821, metadata !DIExpression()), !dbg !13825
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13886
  %67 = lshr i32 %66, 6, !dbg !13887
  %68 = and i32 %67, 511, !dbg !13887
  %69 = mul i32 %68, %65, !dbg !13888
  call void @llvm.dbg.value(metadata i32 %69, metadata !13824, metadata !DIExpression()), !dbg !13825
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13889
  %71 = lshr i32 %70, 28, !dbg !13890
  %72 = and i32 %71, 7, !dbg !13890
  %73 = udiv i32 %69, %72, !dbg !13891
  call void @llvm.dbg.value(metadata i32 %73, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13892

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13893
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13896
  %77 = and i32 %76, 63, !dbg !13896
  %78 = udiv i32 16000000, %77, !dbg !13896
  call void @llvm.dbg.value(metadata i32 %78, metadata !13821, metadata !DIExpression()), !dbg !13825
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13897
  %80 = lshr i32 %79, 6, !dbg !13898
  %81 = and i32 %80, 511, !dbg !13898
  %82 = mul i32 %81, %78, !dbg !13899
  call void @llvm.dbg.value(metadata i32 %82, metadata !13824, metadata !DIExpression()), !dbg !13825
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13900
  %84 = lshr i32 %83, 28, !dbg !13901
  %85 = and i32 %84, 7, !dbg !13901
  %86 = udiv i32 %82, %85, !dbg !13902
  call void @llvm.dbg.value(metadata i32 %86, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13903

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13904
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13820, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %91, metadata !13823, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !13825
  %92 = lshr i32 %91, 27, !dbg !13909
  %93 = and i32 %92, 3, !dbg !13909
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !13909

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13910
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13914
  %97 = and i32 %96, 63, !dbg !13914
  %98 = udiv i32 16000000, %97, !dbg !13914
  call void @llvm.dbg.value(metadata i32 %98, metadata !13821, metadata !DIExpression()), !dbg !13825
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13915
  %100 = lshr i32 %99, 6, !dbg !13916
  %101 = and i32 %100, 511, !dbg !13916
  %102 = mul i32 %101, %98, !dbg !13917
  call void @llvm.dbg.value(metadata i32 %102, metadata !13824, metadata !DIExpression()), !dbg !13825
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13918
  %104 = lshr i32 %103, 28, !dbg !13919
  %105 = and i32 %104, 7, !dbg !13919
  %106 = udiv i32 %102, %105, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %106, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13921

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13922
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !13821, metadata !DIExpression()), !dbg !13825
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13925
  %110 = and i32 %109, 63, !dbg !13925
  %111 = udiv i32 16000000, %110, !dbg !13925
  call void @llvm.dbg.value(metadata i32 %111, metadata !13821, metadata !DIExpression()), !dbg !13825
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13926
  %113 = lshr i32 %112, 6, !dbg !13927
  %114 = and i32 %113, 511, !dbg !13927
  %115 = mul i32 %114, %111, !dbg !13928
  call void @llvm.dbg.value(metadata i32 %115, metadata !13824, metadata !DIExpression()), !dbg !13825
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13929
  %117 = lshr i32 %116, 28, !dbg !13930
  %118 = and i32 %117, 7, !dbg !13930
  %119 = udiv i32 %115, %118, !dbg !13931
  call void @llvm.dbg.value(metadata i32 %119, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123, !dbg !13932

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13933
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13820, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13820, metadata !DIExpression()), !dbg !13825
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !13825
  call void @llvm.dbg.value(metadata i32 %124, metadata !13820, metadata !DIExpression()), !dbg !13825
  ret i32 %124, !dbg !13936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !13937 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13941, metadata !DIExpression()), !dbg !13942
  %2 = icmp eq i8 %0, 1, !dbg !13943
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13945
  %4 = and i32 %3, -9, !dbg !13946
  %5 = select i1 %2, i32 8, i32 0, !dbg !13946
  %6 = or i32 %4, %5, !dbg !13946
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13945
  ret void, !dbg !13947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13948 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !13953, metadata !DIExpression()), !dbg !13955
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13956
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !13957
  call void @llvm.dbg.value(metadata i32 %2, metadata !13954, metadata !DIExpression()), !dbg !13955
  br label %3, !dbg !13958

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13959
  %5 = and i32 %4, 134217728, !dbg !13959
  %6 = icmp eq i32 %5, 0, !dbg !13959
  br i1 %6, label %11, label %7, !dbg !13958

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !13960
  %9 = sub i32 %8, %2, !dbg !13963
  %10 = icmp ugt i32 %9, 2, !dbg !13964
  br i1 %10, label %41, label %3, !dbg !13965, !llvm.loop !13966

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !13968
  %13 = load i32, i32* %12, align 4, !dbg !13968
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !13968
  %15 = load i32, i32* %14, align 4, !dbg !13968
  %16 = shl i32 %15, 6, !dbg !13968
  %17 = or i32 %16, %13, !dbg !13968
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !13968
  %19 = load i32, i32* %18, align 4, !dbg !13968
  %20 = shl i32 %19, 15, !dbg !13968
  %21 = add i32 %20, -65536, !dbg !13968
  %22 = and i32 %21, -65536, !dbg !13968
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !13968
  %24 = load i32, i32* %23, align 4, !dbg !13968
  %25 = shl i32 %24, 24, !dbg !13968
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !13968
  %27 = load i32, i32* %26, align 4, !dbg !13968
  %28 = shl i32 %27, 28, !dbg !13968
  %29 = or i32 %17, %25, !dbg !13968
  %30 = or i32 %29, %22, !dbg !13968
  %31 = or i32 %30, %28, !dbg !13968
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13968
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13969
  %32 = tail call i32 @HAL_GetTick() #27, !dbg !13970
  call void @llvm.dbg.value(metadata i32 %32, metadata !13954, metadata !DIExpression()), !dbg !13955
  br label %33, !dbg !13971

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13972
  %35 = and i32 %34, 134217728, !dbg !13973
  %36 = icmp eq i32 %35, 0, !dbg !13973
  br i1 %36, label %37, label %41, !dbg !13971

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #27, !dbg !13974
  %39 = sub i32 %38, %32, !dbg !13977
  %40 = icmp ugt i32 %39, 2, !dbg !13978
  br i1 %40, label %41, label %33, !dbg !13979, !llvm.loop !13980

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !13955
  ret i32 %42, !dbg !13982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !13983 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13988
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !13989
  call void @llvm.dbg.value(metadata i32 %1, metadata !13987, metadata !DIExpression()), !dbg !13990
  br label %2, !dbg !13991

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13992
  %4 = and i32 %3, 134217728, !dbg !13992
  %5 = icmp eq i32 %4, 0, !dbg !13993
  br i1 %5, label %10, label %6, !dbg !13991

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !13994
  %8 = sub i32 %7, %1, !dbg !13997
  %9 = icmp ugt i32 %8, 2, !dbg !13998
  br i1 %9, label %10, label %2, !dbg !13999, !llvm.loop !14000

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13990
  ret i32 %11, !dbg !14002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14003 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !14008, metadata !DIExpression()), !dbg !14010
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14011
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !14012
  call void @llvm.dbg.value(metadata i32 %2, metadata !14009, metadata !DIExpression()), !dbg !14010
  br label %3, !dbg !14013

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14014
  %5 = and i32 %4, 536870912, !dbg !14014
  %6 = icmp eq i32 %5, 0, !dbg !14014
  br i1 %6, label %11, label %7, !dbg !14013

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !14015
  %9 = sub i32 %8, %2, !dbg !14018
  %10 = icmp ugt i32 %9, 2, !dbg !14019
  br i1 %10, label %37, label %3, !dbg !14020, !llvm.loop !14021

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !14023
  %13 = load i32, i32* %12, align 4, !dbg !14023
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !14023
  %15 = load i32, i32* %14, align 4, !dbg !14023
  %16 = shl i32 %15, 6, !dbg !14023
  %17 = or i32 %16, %13, !dbg !14023
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !14023
  %19 = load i32, i32* %18, align 4, !dbg !14023
  %20 = shl i32 %19, 15, !dbg !14023
  %21 = add i32 %20, -65536, !dbg !14023
  %22 = and i32 %21, -65536, !dbg !14023
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !14023
  %24 = load i32, i32* %23, align 4, !dbg !14023
  %25 = shl i32 %24, 24, !dbg !14023
  %26 = or i32 %17, %25, !dbg !14023
  %27 = or i32 %26, %22, !dbg !14023
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14023
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14024
  %28 = tail call i32 @HAL_GetTick() #27, !dbg !14025
  call void @llvm.dbg.value(metadata i32 %28, metadata !14009, metadata !DIExpression()), !dbg !14010
  br label %29, !dbg !14026

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14027
  %31 = and i32 %30, 536870912, !dbg !14028
  %32 = icmp eq i32 %31, 0, !dbg !14028
  br i1 %32, label %33, label %37, !dbg !14026

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #27, !dbg !14029
  %35 = sub i32 %34, %28, !dbg !14032
  %36 = icmp ugt i32 %35, 2, !dbg !14033
  br i1 %36, label %37, label %29, !dbg !14034, !llvm.loop !14035

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !14010
  ret i32 %38, !dbg !14037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !14038 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14041
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !14042
  call void @llvm.dbg.value(metadata i32 %1, metadata !14040, metadata !DIExpression()), !dbg !14043
  br label %2, !dbg !14044

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14045
  %4 = and i32 %3, 536870912, !dbg !14045
  %5 = icmp eq i32 %4, 0, !dbg !14045
  br i1 %5, label %10, label %6, !dbg !14044

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !14046
  %8 = sub i32 %7, %1, !dbg !14049
  %9 = icmp ugt i32 %8, 2, !dbg !14050
  br i1 %9, label %10, label %2, !dbg !14051, !llvm.loop !14052

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !14043
  ret i32 %11, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !14055 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14057, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 0, metadata !14058, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 0, metadata !14059, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 0, metadata !14060, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 0, metadata !14061, metadata !DIExpression()), !dbg !14062
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14063
  %2 = lshr i32 %1, 2, !dbg !14064
  %3 = and i32 %2, 3, !dbg !14064
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !14064

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14065
  %6 = and i32 %5, 63, !dbg !14068
  call void @llvm.dbg.value(metadata i32 %6, metadata !14057, metadata !DIExpression()), !dbg !14062
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14069
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14071
  %9 = lshr i32 %8, 6, !dbg !14071
  %10 = and i32 %9, 511, !dbg !14071
  %11 = zext i32 %10 to i64, !dbg !14071
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !14071
  %13 = zext i32 %6 to i64, !dbg !14071
  %14 = udiv i64 %12, %13, !dbg !14071
  %15 = trunc i64 %14 to i32, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %15, metadata !14058, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 %15, metadata !14058, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 %15, metadata !14058, metadata !DIExpression()), !dbg !14062
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14072
  %17 = lshr i32 %16, 15, !dbg !14073
  %18 = and i32 %17, 6, !dbg !14073
  %19 = add nuw nsw i32 %18, 2, !dbg !14073
  call void @llvm.dbg.value(metadata i32 %19, metadata !14059, metadata !DIExpression()), !dbg !14062
  %20 = udiv i32 %15, %19, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %20, metadata !14061, metadata !DIExpression()), !dbg !14062
  br label %38, !dbg !14075

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14076
  %23 = and i32 %22, 63, !dbg !14078
  call void @llvm.dbg.value(metadata i32 %23, metadata !14057, metadata !DIExpression()), !dbg !14062
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14079
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14081
  %26 = lshr i32 %25, 6, !dbg !14081
  %27 = and i32 %26, 511, !dbg !14081
  %28 = zext i32 %27 to i64, !dbg !14081
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !14081
  %30 = zext i32 %23 to i64, !dbg !14081
  %31 = udiv i64 %29, %30, !dbg !14081
  %32 = trunc i64 %31 to i32, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %32, metadata !14058, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 %32, metadata !14058, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i32 %32, metadata !14058, metadata !DIExpression()), !dbg !14062
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14082
  %34 = lshr i32 %33, 28, !dbg !14083
  %35 = and i32 %34, 7, !dbg !14083
  call void @llvm.dbg.value(metadata i32 %35, metadata !14060, metadata !DIExpression()), !dbg !14062
  %36 = udiv i32 %32, %35, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %36, metadata !14061, metadata !DIExpression()), !dbg !14062
  br label %38, !dbg !14085

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !14086
  call void @llvm.dbg.value(metadata i32 %39, metadata !14061, metadata !DIExpression()), !dbg !14062
  ret i32 %39, !dbg !14087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !14088 {
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %1, metadata !14090, metadata !DIExpression()), !dbg !14092
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14093
  %3 = or i32 %2, 1, !dbg !14093
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14093
  br label %4, !dbg !14094

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14095
  %6 = and i32 %5, 2, !dbg !14095
  %7 = icmp eq i32 %6, 0, !dbg !14096
  br i1 %7, label %8, label %12, !dbg !14094

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #27, !dbg !14097
  %10 = sub i32 %9, %1, !dbg !14100
  %11 = icmp ugt i32 %10, 2, !dbg !14101
  br i1 %11, label %89, label %4, !dbg !14102, !llvm.loop !14103

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14105
  %14 = or i32 %13, 128, !dbg !14105
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14105
  %15 = tail call i32 @HAL_GetTick() #27, !dbg !14106
  call void @llvm.dbg.value(metadata i32 %15, metadata !14090, metadata !DIExpression()), !dbg !14092
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14107
  br label %16, !dbg !14108

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14109
  %18 = and i32 %17, 12, !dbg !14109
  %19 = icmp eq i32 %18, 0, !dbg !14110
  %20 = tail call i32 @HAL_GetTick() #27, !dbg !14092
  br i1 %19, label %24, label %21, !dbg !14108

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !14111
  %23 = icmp ugt i32 %22, 5000, !dbg !14114
  br i1 %23, label %89, label %16, !dbg !14115, !llvm.loop !14116

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !14090, metadata !DIExpression()), !dbg !14092
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14118
  %26 = and i32 %25, -851969, !dbg !14118
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14118
  br label %27, !dbg !14119

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14120
  %29 = and i32 %28, 131072, !dbg !14120
  %30 = icmp eq i32 %29, 0, !dbg !14121
  %31 = tail call i32 @HAL_GetTick() #27, !dbg !14092
  br i1 %30, label %35, label %32, !dbg !14119

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !14122
  %34 = icmp ugt i32 %33, 100, !dbg !14125
  br i1 %34, label %89, label %27, !dbg !14126, !llvm.loop !14127

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !14090, metadata !DIExpression()), !dbg !14092
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14129
  %37 = and i32 %36, -16777217, !dbg !14129
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14129
  br label %38, !dbg !14130

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14131
  %40 = and i32 %39, 33554432, !dbg !14131
  %41 = icmp eq i32 %40, 0, !dbg !14132
  %42 = tail call i32 @HAL_GetTick() #27, !dbg !14092
  br i1 %41, label %46, label %43, !dbg !14130

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !14133
  %45 = icmp ugt i32 %44, 2, !dbg !14136
  br i1 %45, label %89, label %38, !dbg !14137, !llvm.loop !14138

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !14090, metadata !DIExpression()), !dbg !14092
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14140
  %48 = and i32 %47, -67108865, !dbg !14140
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14140
  br label %49, !dbg !14141

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14142
  %51 = and i32 %50, 134217728, !dbg !14142
  %52 = icmp eq i32 %51, 0, !dbg !14143
  %53 = tail call i32 @HAL_GetTick() #27, !dbg !14092
  br i1 %52, label %57, label %54, !dbg !14141

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !14144
  %56 = icmp ugt i32 %55, 2, !dbg !14147
  br i1 %56, label %89, label %49, !dbg !14148, !llvm.loop !14149

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !14090, metadata !DIExpression()), !dbg !14092
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14151
  %59 = and i32 %58, -268435457, !dbg !14151
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14151
  br label %60, !dbg !14152

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14153
  %62 = and i32 %61, 536870912, !dbg !14153
  %63 = icmp eq i32 %62, 0, !dbg !14154
  br i1 %63, label %68, label %64, !dbg !14152

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #27, !dbg !14155
  %66 = sub i32 %65, %53, !dbg !14158
  %67 = icmp ugt i32 %66, 2, !dbg !14159
  br i1 %67, label %89, label %60, !dbg !14160, !llvm.loop !14161

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14163
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14164
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14165
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14166
  %70 = and i32 %69, -7937, !dbg !14166
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14166
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14167
  %72 = and i32 %71, -8193, !dbg !14167
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14167
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14168
  %74 = and i32 %73, -16385, !dbg !14168
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14168
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14169
  %76 = or i32 %75, 10420224, !dbg !14169
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14169
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14170
  %78 = or i32 %77, 2097152, !dbg !14170
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14170
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14171
  %80 = or i32 %79, 4194304, !dbg !14171
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14171
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14172
  %82 = and i32 %81, -2, !dbg !14172
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14172
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14173
  %84 = or i32 %83, 16777216, !dbg !14173
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14173
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !14174
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !14175
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #27, !dbg !14177
  %87 = icmp ne i32 %86, 0, !dbg !14178
  %88 = zext i1 %87 to i32, !dbg !14179
  br label %89, !dbg !14179

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !14092
  ret i32 %90, !dbg !14180
}

; Function Attrs: optsize
declare !dbg !14181 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !14184 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14210, metadata !DIExpression()), !dbg !14221
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !14222
  br i1 %3, label %337, label %4, !dbg !14224

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14225
  %6 = load i32, i32* %5, align 4, !dbg !14225
  %7 = and i32 %6, 1, !dbg !14227
  %8 = icmp eq i32 %7, 0, !dbg !14228
  br i1 %8, label %74, label %9, !dbg !14229

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14230
  %11 = and i32 %10, 12, !dbg !14230
  %12 = icmp eq i32 %11, 4, !dbg !14233
  br i1 %12, label %29, label %13, !dbg !14234

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14235
  %15 = and i32 %14, 12, !dbg !14235
  %16 = icmp eq i32 %15, 8, !dbg !14236
  br i1 %16, label %17, label %21, !dbg !14237

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14238
  %19 = and i32 %18, 4194304, !dbg !14239
  %20 = icmp eq i32 %19, 0, !dbg !14240
  br i1 %20, label %21, label %29, !dbg !14241

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14242
  %23 = and i32 %22, 12, !dbg !14242
  %24 = icmp eq i32 %23, 12, !dbg !14243
  br i1 %24, label %25, label %37, !dbg !14244

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14245
  %27 = and i32 %26, 4194304, !dbg !14246
  %28 = icmp eq i32 %27, 0, !dbg !14247
  br i1 %28, label %37, label %29, !dbg !14248

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14249
  %31 = and i32 %30, 131072, !dbg !14249
  %32 = icmp eq i32 %31, 0, !dbg !14249
  br i1 %32, label %74, label %33, !dbg !14252

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14253
  %35 = load i32, i32* %34, align 4, !dbg !14253
  %36 = icmp eq i32 %35, 0, !dbg !14254
  br i1 %36, label %337, label %74, !dbg !14255

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14256
  %39 = load i32, i32* %38, align 4, !dbg !14256
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !14260

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14261
  %42 = or i32 %41, 65536, !dbg !14261
  br label %53, !dbg !14261

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14263
  %45 = or i32 %44, 262144, !dbg !14263
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14263
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14263
  %47 = or i32 %46, 65536, !dbg !14263
  br label %53, !dbg !14263

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14266
  %50 = and i32 %49, -65537, !dbg !14266
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14266
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14266
  %52 = and i32 %51, -262145, !dbg !14266
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14268
  %55 = load i32, i32* %38, align 4, !dbg !14269
  %56 = icmp eq i32 %55, 0, !dbg !14271
  %57 = tail call i32 @HAL_GetTick() #27, !dbg !14272
  call void @llvm.dbg.value(metadata i32 %57, metadata !14211, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata i32 %57, metadata !14211, metadata !DIExpression()), !dbg !14221
  br i1 %56, label %66, label %58, !dbg !14273

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14274
  %60 = and i32 %59, 131072, !dbg !14276
  %61 = icmp eq i32 %60, 0, !dbg !14276
  br i1 %61, label %62, label %74, !dbg !14277

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !14278
  %64 = sub i32 %63, %57, !dbg !14281
  %65 = icmp ugt i32 %64, 100, !dbg !14282
  br i1 %65, label %337, label %58, !dbg !14283, !llvm.loop !14284

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14286
  %68 = and i32 %67, 131072, !dbg !14286
  %69 = icmp eq i32 %68, 0, !dbg !14286
  br i1 %69, label %74, label %70, !dbg !14288

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #27, !dbg !14289
  %72 = sub i32 %71, %57, !dbg !14292
  %73 = icmp ugt i32 %72, 100, !dbg !14293
  br i1 %73, label %337, label %66, !dbg !14294, !llvm.loop !14295

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !14297
  %76 = and i32 %75, 2, !dbg !14299
  %77 = icmp eq i32 %76, 0, !dbg !14300
  br i1 %77, label %137, label %78, !dbg !14301

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14302
  %80 = and i32 %79, 12, !dbg !14302
  %81 = icmp eq i32 %80, 0, !dbg !14305
  br i1 %81, label %98, label %82, !dbg !14306

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14307
  %84 = and i32 %83, 12, !dbg !14307
  %85 = icmp eq i32 %84, 8, !dbg !14308
  br i1 %85, label %86, label %90, !dbg !14309

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14310
  %88 = and i32 %87, 4194304, !dbg !14311
  %89 = icmp eq i32 %88, 0, !dbg !14312
  br i1 %89, label %98, label %90, !dbg !14313

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14314
  %92 = and i32 %91, 12, !dbg !14314
  %93 = icmp eq i32 %92, 12, !dbg !14315
  br i1 %93, label %94, label %106, !dbg !14316

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14317
  %96 = and i32 %95, 4194304, !dbg !14318
  %97 = icmp eq i32 %96, 0, !dbg !14319
  br i1 %97, label %98, label %106, !dbg !14320

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14321
  %100 = and i32 %99, 2, !dbg !14321
  %101 = icmp eq i32 %100, 0, !dbg !14321
  br i1 %101, label %130, label %102, !dbg !14324

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14325
  %104 = load i32, i32* %103, align 4, !dbg !14325
  %105 = icmp eq i32 %104, 1, !dbg !14326
  br i1 %105, label %130, label %337, !dbg !14327

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14328
  %108 = load i32, i32* %107, align 4, !dbg !14328
  %109 = icmp eq i32 %108, 0, !dbg !14331
  br i1 %109, label %120, label %110, !dbg !14332

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !14333
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !14335
  call void @llvm.dbg.value(metadata i32 %111, metadata !14211, metadata !DIExpression()), !dbg !14221
  br label %112, !dbg !14336

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14337
  %114 = and i32 %113, 2, !dbg !14338
  %115 = icmp eq i32 %114, 0, !dbg !14338
  br i1 %115, label %116, label %130, !dbg !14336

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #27, !dbg !14339
  %118 = sub i32 %117, %111, !dbg !14342
  %119 = icmp ugt i32 %118, 2, !dbg !14343
  br i1 %119, label %337, label %112, !dbg !14344, !llvm.loop !14345

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !14347
  %121 = tail call i32 @HAL_GetTick() #27, !dbg !14349
  call void @llvm.dbg.value(metadata i32 %121, metadata !14211, metadata !DIExpression()), !dbg !14221
  br label %122, !dbg !14350

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14351
  %124 = and i32 %123, 2, !dbg !14351
  %125 = icmp eq i32 %124, 0, !dbg !14351
  br i1 %125, label %137, label %126, !dbg !14350

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #27, !dbg !14352
  %128 = sub i32 %127, %121, !dbg !14355
  %129 = icmp ugt i32 %128, 2, !dbg !14356
  br i1 %129, label %337, label %122, !dbg !14357, !llvm.loop !14358

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14360
  %132 = and i32 %131, -249, !dbg !14360
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14360
  %134 = load i32, i32* %133, align 4, !dbg !14360
  %135 = shl i32 %134, 3, !dbg !14360
  %136 = or i32 %135, %132, !dbg !14360
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14360
  br label %137, !dbg !14361

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !14361
  %139 = and i32 %138, 8, !dbg !14363
  %140 = icmp eq i32 %139, 0, !dbg !14364
  br i1 %140, label %165, label %141, !dbg !14365

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14366
  %143 = load i32, i32* %142, align 4, !dbg !14366
  %144 = icmp eq i32 %143, 0, !dbg !14369
  br i1 %144, label %155, label %145, !dbg !14370

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !14371
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !14373
  call void @llvm.dbg.value(metadata i32 %146, metadata !14211, metadata !DIExpression()), !dbg !14221
  br label %147, !dbg !14374

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14375
  %149 = and i32 %148, 2, !dbg !14376
  %150 = icmp eq i32 %149, 0, !dbg !14376
  br i1 %150, label %151, label %165, !dbg !14374

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #27, !dbg !14377
  %153 = sub i32 %152, %146, !dbg !14380
  %154 = icmp ugt i32 %153, 2, !dbg !14381
  br i1 %154, label %337, label %147, !dbg !14382, !llvm.loop !14383

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !14385
  %156 = tail call i32 @HAL_GetTick() #27, !dbg !14387
  call void @llvm.dbg.value(metadata i32 %156, metadata !14211, metadata !DIExpression()), !dbg !14221
  br label %157, !dbg !14388

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14389
  %159 = and i32 %158, 2, !dbg !14389
  %160 = icmp eq i32 %159, 0, !dbg !14389
  br i1 %160, label %165, label %161, !dbg !14388

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #27, !dbg !14390
  %163 = sub i32 %162, %156, !dbg !14393
  %164 = icmp ugt i32 %163, 2, !dbg !14394
  br i1 %164, label %337, label %157, !dbg !14395, !llvm.loop !14396

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !14398
  %167 = and i32 %166, 4, !dbg !14399
  %168 = icmp eq i32 %167, 0, !dbg !14400
  br i1 %168, label %237, label %169, !dbg !14401

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !14213, metadata !DIExpression()), !dbg !14402
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14403
  %171 = and i32 %170, 268435456, !dbg !14403
  %172 = icmp eq i32 %171, 0, !dbg !14403
  br i1 %172, label %173, label %180, !dbg !14404

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !14405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !14405
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14217, metadata !DIExpression()), !dbg !14405
  store volatile i32 0, i32* %2, align 4, !dbg !14405
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14405
  %176 = or i32 %175, 268435456, !dbg !14405
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14405
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14405
  %178 = and i32 %177, 268435456, !dbg !14405
  store volatile i32 %178, i32* %2, align 4, !dbg !14405
  %179 = load volatile i32, i32* %2, align 4, !dbg !14405
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !14406
  call void @llvm.dbg.value(metadata i32 1, metadata !14213, metadata !DIExpression()), !dbg !14402
  br label %180, !dbg !14407

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()), !dbg !14402
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14408
  %182 = and i32 %181, 256, !dbg !14408
  %183 = icmp eq i32 %182, 0, !dbg !14408
  br i1 %183, label %184, label %196, !dbg !14410

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14411
  %186 = or i32 %185, 256, !dbg !14411
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14411
  %187 = tail call i32 @HAL_GetTick() #27, !dbg !14413
  call void @llvm.dbg.value(metadata i32 %187, metadata !14211, metadata !DIExpression()), !dbg !14221
  br label %188, !dbg !14414

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14415
  %190 = and i32 %189, 256, !dbg !14415
  %191 = icmp eq i32 %190, 0, !dbg !14415
  br i1 %191, label %192, label %196, !dbg !14414

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #27, !dbg !14416
  %194 = sub i32 %193, %187, !dbg !14419
  %195 = icmp ugt i32 %194, 2, !dbg !14420
  br i1 %195, label %337, label %188, !dbg !14421, !llvm.loop !14422

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14424
  %198 = load i32, i32* %197, align 4, !dbg !14424
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !14427

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14428
  %201 = or i32 %200, 1, !dbg !14428
  br label %212, !dbg !14428

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14430
  %204 = or i32 %203, 4, !dbg !14430
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14430
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14430
  %206 = or i32 %205, 1, !dbg !14430
  br label %212, !dbg !14430

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14433
  %209 = and i32 %208, -2, !dbg !14433
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14433
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14433
  %211 = and i32 %210, -5, !dbg !14433
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14435
  %214 = load i32, i32* %197, align 4, !dbg !14436
  %215 = icmp eq i32 %214, 0, !dbg !14438
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !14439
  call void @llvm.dbg.value(metadata i32 %216, metadata !14211, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata i32 %216, metadata !14211, metadata !DIExpression()), !dbg !14221
  br i1 %215, label %225, label %217, !dbg !14440

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14441
  %219 = and i32 %218, 2, !dbg !14443
  %220 = icmp eq i32 %219, 0, !dbg !14443
  br i1 %220, label %221, label %233, !dbg !14444

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #27, !dbg !14445
  %223 = sub i32 %222, %216, !dbg !14448
  %224 = icmp ugt i32 %223, 5000, !dbg !14449
  br i1 %224, label %337, label %217, !dbg !14450, !llvm.loop !14451

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14453
  %227 = and i32 %226, 2, !dbg !14453
  %228 = icmp eq i32 %227, 0, !dbg !14453
  br i1 %228, label %233, label %229, !dbg !14455

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !14456
  %231 = sub i32 %230, %216, !dbg !14459
  %232 = icmp ugt i32 %231, 5000, !dbg !14460
  br i1 %232, label %337, label %225, !dbg !14461, !llvm.loop !14462

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !14464

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14465
  %236 = and i32 %235, -268435457, !dbg !14465
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14465
  br label %237, !dbg !14468

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14469
  %239 = load i32, i32* %238, align 4, !dbg !14469
  %240 = icmp eq i32 %239, 0, !dbg !14471
  br i1 %240, label %336, label %241, !dbg !14472

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14473
  %243 = and i32 %242, 12, !dbg !14473
  %244 = icmp eq i32 %243, 8, !dbg !14476
  br i1 %244, label %297, label %245, !dbg !14477

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !14478
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14481
  %247 = tail call i32 @HAL_GetTick() #27, !dbg !14481
  call void @llvm.dbg.value(metadata i32 %247, metadata !14211, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata i32 %247, metadata !14211, metadata !DIExpression()), !dbg !14221
  br i1 %246, label %248, label %289, !dbg !14482

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14483
  %250 = and i32 %249, 33554432, !dbg !14483
  %251 = icmp eq i32 %250, 0, !dbg !14483
  br i1 %251, label %256, label %252, !dbg !14485

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #27, !dbg !14486
  %254 = sub i32 %253, %247, !dbg !14489
  %255 = icmp ugt i32 %254, 2, !dbg !14490
  br i1 %255, label %337, label %248, !dbg !14491, !llvm.loop !14492

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14494
  %258 = load i32, i32* %257, align 4, !dbg !14494
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14494
  %260 = load i32, i32* %259, align 4, !dbg !14494
  %261 = or i32 %260, %258, !dbg !14494
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14494
  %263 = load i32, i32* %262, align 4, !dbg !14494
  %264 = shl i32 %263, 6, !dbg !14494
  %265 = or i32 %261, %264, !dbg !14494
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14494
  %267 = load i32, i32* %266, align 4, !dbg !14494
  %268 = shl i32 %267, 15, !dbg !14494
  %269 = add i32 %268, -65536, !dbg !14494
  %270 = and i32 %269, -65536, !dbg !14494
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14494
  %272 = load i32, i32* %271, align 4, !dbg !14494
  %273 = shl i32 %272, 24, !dbg !14494
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14494
  %275 = load i32, i32* %274, align 4, !dbg !14494
  %276 = shl i32 %275, 28, !dbg !14494
  %277 = or i32 %265, %273, !dbg !14494
  %278 = or i32 %277, %270, !dbg !14494
  %279 = or i32 %278, %276, !dbg !14494
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14494
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14495
  %280 = tail call i32 @HAL_GetTick() #27, !dbg !14496
  call void @llvm.dbg.value(metadata i32 %280, metadata !14211, metadata !DIExpression()), !dbg !14221
  br label %281, !dbg !14497

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14498
  %283 = and i32 %282, 33554432, !dbg !14499
  %284 = icmp eq i32 %283, 0, !dbg !14499
  br i1 %284, label %285, label %336, !dbg !14497

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #27, !dbg !14500
  %287 = sub i32 %286, %280, !dbg !14503
  %288 = icmp ugt i32 %287, 2, !dbg !14504
  br i1 %288, label %337, label %281, !dbg !14505, !llvm.loop !14506

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14508
  %291 = and i32 %290, 33554432, !dbg !14508
  %292 = icmp eq i32 %291, 0, !dbg !14508
  br i1 %292, label %336, label %293, !dbg !14510

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #27, !dbg !14511
  %295 = sub i32 %294, %247, !dbg !14514
  %296 = icmp ugt i32 %295, 2, !dbg !14515
  br i1 %296, label %337, label %289, !dbg !14516, !llvm.loop !14517

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !14519
  br i1 %298, label %337, label %299, !dbg !14522

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %300, metadata !14212, metadata !DIExpression()), !dbg !14221
  %301 = and i32 %300, 4194304, !dbg !14525
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14527
  %303 = load i32, i32* %302, align 4, !dbg !14527
  %304 = icmp eq i32 %301, %303, !dbg !14528
  br i1 %304, label %305, label %337, !dbg !14529

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !14530
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14531
  %308 = load i32, i32* %307, align 4, !dbg !14531
  %309 = icmp eq i32 %306, %308, !dbg !14532
  br i1 %309, label %310, label %337, !dbg !14533

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !14534
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14535
  %313 = load i32, i32* %312, align 4, !dbg !14535
  %314 = shl i32 %313, 6, !dbg !14536
  %315 = icmp eq i32 %311, %314, !dbg !14537
  br i1 %315, label %316, label %337, !dbg !14538

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !14539
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14540
  %319 = load i32, i32* %318, align 4, !dbg !14540
  %320 = shl i32 %319, 15, !dbg !14541
  %321 = add i32 %320, -65536, !dbg !14541
  %322 = and i32 %321, -65536, !dbg !14541
  %323 = icmp eq i32 %317, %322, !dbg !14542
  br i1 %323, label %324, label %337, !dbg !14543

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !14544
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14545
  %327 = load i32, i32* %326, align 4, !dbg !14545
  %328 = shl i32 %327, 24, !dbg !14546
  %329 = icmp eq i32 %325, %328, !dbg !14547
  br i1 %329, label %330, label %337, !dbg !14548

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !14549
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14550
  %333 = load i32, i32* %332, align 4, !dbg !14550
  %334 = shl i32 %333, 28, !dbg !14551
  %335 = icmp eq i32 %331, %334, !dbg !14552
  br i1 %335, label %336, label %337, !dbg !14553

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !14554

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !14221
  ret i32 %338, !dbg !14555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #17 !dbg !14556 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14560, metadata !DIExpression()), !dbg !14561
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14562
  store i32 15, i32* %2, align 4, !dbg !14563
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14564
  %4 = and i32 %3, 262144, !dbg !14566
  %5 = icmp eq i32 %4, 0, !dbg !14567
  br i1 %5, label %8, label %6, !dbg !14568

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14569
  store i32 327680, i32* %7, align 4, !dbg !14571
  br label %15, !dbg !14572

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14573
  %10 = and i32 %9, 65536, !dbg !14575
  %11 = icmp eq i32 %10, 0, !dbg !14576
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14577
  br i1 %11, label %14, label %13, !dbg !14578

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !14579
  br label %15, !dbg !14581

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !14582
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14584
  %17 = and i32 %16, 1, !dbg !14586
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14587
  store i32 %17, i32* %18, align 4, !dbg !14589
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14590
  %20 = lshr i32 %19, 3, !dbg !14591
  %21 = and i32 %20, 31, !dbg !14591
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14592
  store i32 %21, i32* %22, align 4, !dbg !14593
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14594
  %24 = and i32 %23, 4, !dbg !14596
  %25 = icmp eq i32 %24, 0, !dbg !14597
  br i1 %25, label %28, label %26, !dbg !14598

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14599
  store i32 5, i32* %27, align 4, !dbg !14601
  br label %35, !dbg !14602

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14603
  %30 = and i32 %29, 1, !dbg !14605
  %31 = icmp eq i32 %30, 0, !dbg !14606
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14607
  br i1 %31, label %34, label %33, !dbg !14608

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !14609
  br label %35, !dbg !14611

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !14612
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14614
  %37 = and i32 %36, 1, !dbg !14616
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14617
  store i32 %37, i32* %38, align 4, !dbg !14619
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14620
  %40 = and i32 %39, 16777216, !dbg !14622
  %41 = icmp eq i32 %40, 0, !dbg !14623
  %42 = select i1 %41, i32 1, i32 2, !dbg !14624
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14625
  store i32 %42, i32* %43, align 4, !dbg !14627
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14628
  %45 = and i32 %44, 4194304, !dbg !14629
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14630
  store i32 %45, i32* %46, align 4, !dbg !14631
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14632
  %48 = and i32 %47, 63, !dbg !14633
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14634
  store i32 %48, i32* %49, align 4, !dbg !14635
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14636
  %51 = lshr i32 %50, 6, !dbg !14637
  %52 = and i32 %51, 511, !dbg !14637
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14638
  store i32 %52, i32* %53, align 4, !dbg !14639
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14640
  %55 = shl i32 %54, 1, !dbg !14641
  %56 = and i32 %55, 393216, !dbg !14641
  %57 = add nuw nsw i32 %56, 131072, !dbg !14641
  %58 = lshr exact i32 %57, 16, !dbg !14642
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14643
  store i32 %58, i32* %59, align 4, !dbg !14644
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14645
  %61 = lshr i32 %60, 24, !dbg !14646
  %62 = and i32 %61, 15, !dbg !14646
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14647
  store i32 %62, i32* %63, align 4, !dbg !14648
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14649
  %65 = lshr i32 %64, 28, !dbg !14650
  %66 = and i32 %65, 7, !dbg !14650
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14651
  store i32 %66, i32* %67, align 4, !dbg !14652
  ret void, !dbg !14653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !14654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14657, metadata !DIExpression()), !dbg !14658
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !14659
  ret void, !dbg !14660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !14661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14664, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.value(metadata i32 1000, metadata !14665, metadata !DIExpression()), !dbg !14666
  %2 = udiv i32 %0, 1000, !dbg !14667
  %3 = add nsw i32 %2, -1, !dbg !14668
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14669
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14670
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14671
  ret void, !dbg !14672
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !14673 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14675, metadata !DIExpression()), !dbg !14677
  %3 = bitcast i32* %2 to i8*, !dbg !14678
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14678
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14676, metadata !DIExpression()), !dbg !14679
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14680
  store volatile i32 %4, i32* %2, align 4, !dbg !14679
  %5 = load volatile i32, i32* %2, align 4, !dbg !14681
  %6 = icmp eq i32 %0, -1, !dbg !14682
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()), !dbg !14677
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %8, metadata !14675, metadata !DIExpression()), !dbg !14677
  br label %9, !dbg !14684

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14675, metadata !DIExpression()), !dbg !14677
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()), !dbg !14677
  %12 = shl i32 %11, 15, !dbg !14677
  %13 = ashr i32 %12, 31, !dbg !14677
  %14 = add i32 %13, %10, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %14, metadata !14675, metadata !DIExpression()), !dbg !14677
  %15 = icmp eq i32 %14, 0, !dbg !14684
  br i1 %15, label %16, label %9, !dbg !14684

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14688
  ret void, !dbg !14688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14691, metadata !DIExpression()), !dbg !14692
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14693
  ret void, !dbg !14694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !14695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14700, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i32 0, metadata !14703, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i32 0, metadata !14704, metadata !DIExpression()), !dbg !14705
  %2 = icmp eq i32 %0, 0, !dbg !14706
  br i1 %2, label %72, label %3, !dbg !14708

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14709
  %5 = icmp eq i32 %4, 49152, !dbg !14712
  br i1 %5, label %6, label %21, !dbg !14713

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !14714
  %8 = select i1 %7, i32 0, i32 5, !dbg !14717
  call void @llvm.dbg.value(metadata i32 %8, metadata !14703, metadata !DIExpression()), !dbg !14705
  %9 = add i32 %0, -120000001, !dbg !14718
  %10 = icmp ult i32 %9, 30000000, !dbg !14718
  %11 = select i1 %10, i32 4, i32 %8, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %11, metadata !14703, metadata !DIExpression()), !dbg !14705
  %12 = icmp ult i32 %9, -30000000, !dbg !14720
  %13 = select i1 %12, i32 %11, i32 3, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %13, metadata !14703, metadata !DIExpression()), !dbg !14705
  %14 = icmp ugt i32 %0, 60000000, !dbg !14722
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !14724
  br i1 %16, label %21, label %17, !dbg !14724

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !14725
  %19 = and i1 %18, %15, !dbg !14728
  %20 = select i1 %19, i32 1, i32 %13, !dbg !14728
  br label %21, !dbg !14728

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !14705
  call void @llvm.dbg.value(metadata i32 %22, metadata !14703, metadata !DIExpression()), !dbg !14705
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14729
  %24 = icmp eq i32 %23, 32768, !dbg !14731
  br i1 %24, label %25, label %45, !dbg !14732

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !14733
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !14736
  %29 = select i1 %28, i32 5, i32 %22, !dbg !14736
  call void @llvm.dbg.value(metadata i32 %29, metadata !14703, metadata !DIExpression()), !dbg !14705
  %30 = icmp ugt i32 %0, 12000000, !dbg !14737
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !14739
  %33 = select i1 %32, i32 4, i32 %29, !dbg !14739
  call void @llvm.dbg.value(metadata i32 %33, metadata !14703, metadata !DIExpression()), !dbg !14705
  %34 = icmp ugt i32 %0, 90000000, !dbg !14740
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !14742
  %37 = select i1 %36, i32 3, i32 %33, !dbg !14742
  call void @llvm.dbg.value(metadata i32 %37, metadata !14703, metadata !DIExpression()), !dbg !14705
  %38 = icmp ugt i32 %0, 60000000, !dbg !14743
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !14745
  br i1 %40, label %45, label %41, !dbg !14745

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !14746
  %43 = select i1 %42, i1 %39, i1 false, !dbg !14749
  %44 = select i1 %43, i32 1, i32 %37, !dbg !14749
  br label %45, !dbg !14749

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !14750
  call void @llvm.dbg.value(metadata i32 %46, metadata !14703, metadata !DIExpression()), !dbg !14705
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14751
  %48 = icmp eq i32 %47, 16384, !dbg !14753
  br i1 %48, label %49, label %61, !dbg !14754

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !14755
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !14758
  %53 = select i1 %52, i32 3, i32 %46, !dbg !14758
  call void @llvm.dbg.value(metadata i32 %53, metadata !14703, metadata !DIExpression()), !dbg !14705
  %54 = icmp ugt i32 %0, 60000000, !dbg !14759
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !14761
  br i1 %56, label %61, label %57, !dbg !14761

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !14762
  %59 = select i1 %58, i1 %55, i1 false, !dbg !14765
  %60 = select i1 %59, i32 1, i32 %53, !dbg !14765
  br label %61, !dbg !14765

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !14750
  call void @llvm.dbg.value(metadata i32 %62, metadata !14703, metadata !DIExpression()), !dbg !14705
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !14766
  call void @llvm.dbg.value(metadata i32 2, metadata !14701, metadata !DIExpression()), !dbg !14705
  br label %63, !dbg !14767

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !14750
  call void @llvm.dbg.value(metadata i32 %64, metadata !14701, metadata !DIExpression()), !dbg !14705
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14768
  call void @llvm.dbg.value(metadata i32 %65, metadata !14702, metadata !DIExpression()), !dbg !14705
  %66 = add nsw i32 %64, -1, !dbg !14770
  call void @llvm.dbg.value(metadata i32 %66, metadata !14701, metadata !DIExpression()), !dbg !14705
  %67 = icmp ne i32 %65, %62, !dbg !14771
  %68 = icmp ne i32 %66, 0, !dbg !14772
  %69 = select i1 %67, i1 %68, i1 false, !dbg !14772
  br i1 %69, label %63, label %70, !dbg !14773, !llvm.loop !14774

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !14776
  call void @llvm.dbg.value(metadata i32 %73, metadata !14704, metadata !DIExpression()), !dbg !14705
  ret i32 %73, !dbg !14777
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14778 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14780
  %2 = and i32 %1, 49152, !dbg !14780
  ret i32 %2, !dbg !14781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !14782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14784, metadata !DIExpression()), !dbg !14785
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14786
  %3 = and i32 %2, -16, !dbg !14786
  %4 = or i32 %3, %0, !dbg !14786
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14786
  ret void, !dbg !14787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14788 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14789
  %2 = and i32 %1, 15, !dbg !14789
  ret i32 %2, !dbg !14790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !14791 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14809, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14810, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i32 0, metadata !14811, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.value(metadata i32 0, metadata !14812, metadata !DIExpression()), !dbg !14813
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14814
  %4 = icmp eq i32 %3, 0, !dbg !14816
  br i1 %4, label %5, label %21, !dbg !14817

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !14818
  call void @llvm.dbg.value(metadata i32 %6, metadata !14812, metadata !DIExpression()), !dbg !14813
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.212() #26, !dbg !14820
  %8 = icmp eq i32 %7, 1, !dbg !14822
  br i1 %8, label %13, label %9, !dbg !14823

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.213() #26, !dbg !14824
  br label %10, !dbg !14826

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.212() #26, !dbg !14827
  %12 = icmp eq i32 %11, 1, !dbg !14828
  br i1 %12, label %13, label %10, !dbg !14826, !llvm.loop !14829

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14831
  %15 = load i32, i32* %14, align 4, !dbg !14831
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14832
  %17 = load i32, i32* %16, align 4, !dbg !14832
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14833
  %19 = load i32, i32* %18, align 4, !dbg !14833
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.214(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !14834
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14835
  call void @llvm.dbg.value(metadata i32 %20, metadata !14811, metadata !DIExpression()), !dbg !14813
  br label %21, !dbg !14836

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14837
  call void @llvm.dbg.value(metadata i32 %22, metadata !14811, metadata !DIExpression()), !dbg !14813
  ret i32 %22, !dbg !14838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14839 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14843, metadata !DIExpression()), !dbg !14844
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.216() #26, !dbg !14845
  %2 = icmp ne i32 %1, 0, !dbg !14847
  call void @llvm.dbg.value(metadata i1 %2, metadata !14843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14844
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !14848
  %4 = icmp ne i32 %3, 0, !dbg !14850
  call void @llvm.dbg.value(metadata i1 undef, metadata !14843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14844
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !14851
  %6 = icmp ne i32 %5, 0, !dbg !14853
  %7 = select i1 %6, i1 true, i1 %4, !dbg !14854
  %8 = select i1 %7, i1 true, i1 %2, !dbg !14854
  %9 = zext i1 %8 to i32, !dbg !14854
  call void @llvm.dbg.value(metadata i32 %9, metadata !14843, metadata !DIExpression()), !dbg !14844
  ret i32 %9, !dbg !14855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14860, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14861, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata i32 0, metadata !14862, metadata !DIExpression()), !dbg !14863
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14864
  %4 = load i32, i32* %3, align 4, !dbg !14864
  %5 = and i32 %4, 63, !dbg !14865
  %6 = udiv i32 %0, %5, !dbg !14866
  call void @llvm.dbg.value(metadata i32 %6, metadata !14862, metadata !DIExpression()), !dbg !14863
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14867
  %8 = load i32, i32* %7, align 4, !dbg !14867
  %9 = and i32 %8, 511, !dbg !14868
  %10 = mul i32 %9, %6, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %10, metadata !14862, metadata !DIExpression()), !dbg !14863
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14870
  %12 = load i32, i32* %11, align 4, !dbg !14870
  %13 = lshr i32 %12, 15, !dbg !14871
  %14 = and i32 %13, 131070, !dbg !14871
  %15 = add nuw nsw i32 %14, 2, !dbg !14871
  %16 = udiv i32 %10, %15, !dbg !14872
  call void @llvm.dbg.value(metadata i32 %16, metadata !14862, metadata !DIExpression()), !dbg !14863
  ret i32 %16, !dbg !14873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.212() unnamed_addr #17 !dbg !14874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14875
  %2 = lshr i32 %1, 1, !dbg !14876
  %3 = and i32 %2, 1, !dbg !14876
  ret i32 %3, !dbg !14877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.213() unnamed_addr #15 !dbg !14878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14879
  %2 = or i32 %1, 1, !dbg !14879
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14879
  ret void, !dbg !14880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.214(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !14881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14883, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata i32 %1, metadata !14884, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata i32 %2, metadata !14885, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata i32 %3, metadata !14886, metadata !DIExpression()), !dbg !14887
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14888
  %6 = and i32 %5, -4227072, !dbg !14888
  %7 = or i32 %1, %0, !dbg !14888
  %8 = shl i32 %2, 6, !dbg !14888
  %9 = or i32 %7, %8, !dbg !14888
  %10 = or i32 %9, %6, !dbg !14888
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14888
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14889
  %12 = and i32 %11, -196609, !dbg !14889
  %13 = or i32 %12, %3, !dbg !14889
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14889
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14890
  %15 = and i32 %14, -1879048193, !dbg !14890
  %16 = or i32 %15, %3, !dbg !14890
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14890
  ret void, !dbg !14891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !14892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14896, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14897, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata i32 0, metadata !14898, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata i32 0, metadata !14899, metadata !DIExpression()), !dbg !14900
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14901
  %4 = load i32, i32* %3, align 4, !dbg !14901
  %5 = lshr i32 %4, 4, !dbg !14901
  %6 = and i32 %5, 15, !dbg !14901
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14901
  %8 = load i8, i8* %7, align 1, !dbg !14901
  %9 = zext i8 %8 to i32, !dbg !14901
  %10 = lshr i32 %0, %9, !dbg !14901
  call void @llvm.dbg.value(metadata i32 %10, metadata !14899, metadata !DIExpression()), !dbg !14900
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14902
  %12 = icmp ult i32 %11, %10, !dbg !14904
  br i1 %12, label %13, label %16, !dbg !14905

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14906
  call void @llvm.dbg.value(metadata i32 %14, metadata !14898, metadata !DIExpression()), !dbg !14900
  %15 = icmp eq i32 %14, 0, !dbg !14908
  br i1 %15, label %16, label %30, !dbg !14910

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.215() #26, !dbg !14911
  br label %17, !dbg !14913

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.216() #26, !dbg !14914
  %19 = icmp eq i32 %18, 1, !dbg !14915
  br i1 %19, label %20, label %17, !dbg !14913, !llvm.loop !14916

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14918
  tail call fastcc void @LL_RCC_SetAHBPrescaler.217(i32 noundef %21) #26, !dbg !14919
  tail call fastcc void @LL_RCC_SetSysClkSource.218() #26, !dbg !14920
  br label %22, !dbg !14921

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.219() #26, !dbg !14922
  %24 = icmp eq i32 %23, 8, !dbg !14923
  br i1 %24, label %25, label %22, !dbg !14921, !llvm.loop !14924

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14926
  %27 = load i32, i32* %26, align 4, !dbg !14926
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.220(i32 noundef %27) #26, !dbg !14927
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14928
  %29 = load i32, i32* %28, align 4, !dbg !14928
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.221(i32 noundef %29) #26, !dbg !14929
  br label %30, !dbg !14930

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14931
  %33 = icmp ugt i32 %32, %10, !dbg !14933
  br i1 %33, label %34, label %36, !dbg !14934

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14935
  call void @llvm.dbg.value(metadata i32 %35, metadata !14898, metadata !DIExpression()), !dbg !14900
  br label %36, !dbg !14937

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14900
  call void @llvm.dbg.value(metadata i32 %37, metadata !14898, metadata !DIExpression()), !dbg !14900
  %38 = icmp eq i32 %37, 0, !dbg !14938
  br i1 %38, label %39, label %40, !dbg !14940

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14941
  br label %40, !dbg !14943

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.215() unnamed_addr #15 !dbg !14945 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14946
  %2 = or i32 %1, 16777216, !dbg !14946
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14946
  ret void, !dbg !14947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.216() unnamed_addr #17 !dbg !14948 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14949
  %2 = lshr i32 %1, 25, !dbg !14950
  %3 = and i32 %2, 1, !dbg !14950
  ret i32 %3, !dbg !14951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.217(i32 noundef %0) unnamed_addr #15 !dbg !14952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14954, metadata !DIExpression()), !dbg !14955
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14956
  %3 = and i32 %2, -241, !dbg !14956
  %4 = or i32 %3, %0, !dbg !14956
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14956
  ret void, !dbg !14957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.218() unnamed_addr #15 !dbg !14958 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14960, metadata !DIExpression()), !dbg !14961
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14962
  %2 = and i32 %1, -4, !dbg !14962
  %3 = or i32 %2, 2, !dbg !14962
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14962
  ret void, !dbg !14963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.219() unnamed_addr #17 !dbg !14964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14965
  %2 = and i32 %1, 12, !dbg !14965
  ret i32 %2, !dbg !14966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.220(i32 noundef %0) unnamed_addr #15 !dbg !14967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14969, metadata !DIExpression()), !dbg !14970
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14971
  %3 = and i32 %2, -7169, !dbg !14971
  %4 = or i32 %3, %0, !dbg !14971
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14971
  ret void, !dbg !14972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.221(i32 noundef %0) unnamed_addr #15 !dbg !14973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14975, metadata !DIExpression()), !dbg !14976
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14977
  %3 = and i32 %2, -57345, !dbg !14977
  %4 = or i32 %3, %0, !dbg !14977
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14977
  ret void, !dbg !14978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #17 !dbg !14979 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14980
  %2 = lshr i32 %1, 29, !dbg !14981
  %3 = and i32 %2, 1, !dbg !14981
  ret i32 %3, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14983 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14984
  %2 = lshr i32 %1, 27, !dbg !14985
  %3 = and i32 %2, 1, !dbg !14985
  ret i32 %3, !dbg !14986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14991, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 %1, metadata !14992, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14993, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14994, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 0, metadata !14995, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !14997
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14998
  %6 = icmp eq i32 %5, 0, !dbg !15000
  br i1 %6, label %7, label %27, !dbg !15001

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %8, metadata !14996, metadata !DIExpression()), !dbg !14997
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.222() #26, !dbg !15004
  %10 = icmp eq i32 %9, 1, !dbg !15006
  br i1 %10, label %19, label %11, !dbg !15007

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !15008
  br i1 %12, label %13, label %14, !dbg !15011

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !15012
  br label %15, !dbg !15014

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.223() #26, !dbg !15015
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.224() #26, !dbg !15017
  br label %16, !dbg !15018

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.222() #26, !dbg !15019
  %18 = icmp eq i32 %17, 1, !dbg !15020
  br i1 %18, label %19, label %16, !dbg !15018, !llvm.loop !15021

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !15023
  %21 = load i32, i32* %20, align 4, !dbg !15023
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !15024
  %23 = load i32, i32* %22, align 4, !dbg !15024
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !15025
  %25 = load i32, i32* %24, align 4, !dbg !15025
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.214(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !15026
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !15027
  call void @llvm.dbg.value(metadata i32 %26, metadata !14995, metadata !DIExpression()), !dbg !14997
  br label %27, !dbg !15028

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !15029
  call void @llvm.dbg.value(metadata i32 %28, metadata !14995, metadata !DIExpression()), !dbg !14997
  ret i32 %28, !dbg !15030
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.222() unnamed_addr #17 !dbg !15031 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15032
  %2 = lshr i32 %1, 17, !dbg !15033
  %3 = and i32 %2, 1, !dbg !15033
  ret i32 %3, !dbg !15034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !15035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15036
  %2 = or i32 %1, 262144, !dbg !15036
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15036
  ret void, !dbg !15037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.223() unnamed_addr #15 !dbg !15038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15039
  %2 = and i32 %1, -262145, !dbg !15039
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15039
  ret void, !dbg !15040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.224() unnamed_addr #15 !dbg !15041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15042
  %2 = or i32 %1, 65536, !dbg !15042
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15042
  ret void, !dbg !15043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !15044 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !15047, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15047, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata i32 undef, metadata !15047, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !15063
  ret void, !dbg !15064
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !15065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15069, metadata !DIExpression()), !dbg !15071
  %2 = icmp eq i8* %0, null, !dbg !15072
  br i1 %2, label %29, label %3, !dbg !15074

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !15075
  %5 = icmp eq i8 %4, 0, !dbg !15076
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !15077
  br i1 %6, label %29, label %8, !dbg !15077

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !15070, metadata !DIExpression()), !dbg !15071
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !15078

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !15070, metadata !DIExpression()), !dbg !15071
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !15080
  br i1 %10, label %11, label %15, !dbg !15085

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !15086
  %13 = load i8*, i8** %12, align 4, !dbg !15086
  %14 = icmp eq i8* %13, %0, !dbg !15087
  br i1 %14, label %29, label %15, !dbg !15088

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !15089
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !15070, metadata !DIExpression()), !dbg !15071
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !15090
  br i1 %17, label %7, label %8, !dbg !15091, !llvm.loop !15092

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !15070, metadata !DIExpression()), !dbg !15071
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !15094
  br i1 %20, label %21, label %26, !dbg !15098

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !15099
  %23 = load i8*, i8** %22, align 4, !dbg !15099
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !15100
  %25 = icmp eq i32 %24, 0, !dbg !15101
  br i1 %25, label %29, label %26, !dbg !15102

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !15103
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !15070, metadata !DIExpression()), !dbg !15071
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !15104
  br i1 %28, label %29, label %18, !dbg !15078, !llvm.loop !15105

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !15071
  ret %struct.device* %30, !dbg !15107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !15108 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15112, metadata !DIExpression()), !dbg !15113
  %2 = icmp eq %struct.device* %0, null, !dbg !15114
  br i1 %2, label %14, label %3, !dbg !15116

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !15117
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !15117
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15118
  %7 = load i8, i8* %6, align 1, !dbg !15118
  %8 = and i8 %7, 1, !dbg !15118
  %9 = icmp eq i8 %8, 0, !dbg !15118
  br i1 %9, label %14, label %10, !dbg !15119

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !15120
  %12 = load i8, i8* %11, align 1, !dbg !15120
  %13 = icmp eq i8 %12, 0, !dbg !15121
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !15113
  ret i1 %15, !dbg !15122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !15123 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !15128, metadata !DIExpression()), !dbg !15129
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !15130
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !15131
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15132 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15140, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !15141, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata i8* %2, metadata !15142, metadata !DIExpression()), !dbg !15145
  %5 = bitcast i32* %4 to i8*, !dbg !15146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15146
  call void @llvm.dbg.value(metadata i32 0, metadata !15143, metadata !DIExpression()), !dbg !15145
  store i32 0, i32* %4, align 4, !dbg !15147
  call void @llvm.dbg.value(metadata i32* %4, metadata !15143, metadata !DIExpression(DW_OP_deref)), !dbg !15145
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !15148
  call void @llvm.dbg.value(metadata i16* %6, metadata !15144, metadata !DIExpression()), !dbg !15145
  %7 = load i32, i32* %4, align 4, !dbg !15149
  call void @llvm.dbg.value(metadata i32 %7, metadata !15143, metadata !DIExpression()), !dbg !15145
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !15150
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15151
  ret i32 %8, !dbg !15152
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !15153 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15157, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata i32* %1, metadata !15158, metadata !DIExpression()), !dbg !15163
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !15164
  %4 = load i16*, i16** %3, align 4, !dbg !15164
  call void @llvm.dbg.value(metadata i16* %4, metadata !15159, metadata !DIExpression()), !dbg !15163
  %5 = icmp eq i16* %4, null, !dbg !15165
  br i1 %5, label %14, label %6, !dbg !15166

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !15167
  call void @llvm.dbg.value(metadata i32 %7, metadata !15160, metadata !DIExpression()), !dbg !15167
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !15168
  %9 = load i16, i16* %8, align 2, !dbg !15168
  %10 = add i16 %9, -32767, !dbg !15169
  %11 = icmp ult i16 %10, 2, !dbg !15169
  %12 = add i32 %7, 1, !dbg !15170
  call void @llvm.dbg.value(metadata i32 %12, metadata !15160, metadata !DIExpression()), !dbg !15167
  br i1 %11, label %13, label %6, !dbg !15169, !llvm.loop !15172

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !15175
  br label %14, !dbg !15176

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !15177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !15178 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !15182, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata i32 %1, metadata !15183, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !15184, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata i8* %3, metadata !15185, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata i32 0, metadata !15186, metadata !DIExpression()), !dbg !15194
  %5 = icmp eq i32 %1, 0, !dbg !15195
  br i1 %5, label %16, label %8, !dbg !15196

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !15186, metadata !DIExpression()), !dbg !15194
  %7 = icmp eq i32 %15, %1, !dbg !15195
  br i1 %7, label %16, label %8, !dbg !15196, !llvm.loop !15197

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !15186, metadata !DIExpression()), !dbg !15194
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !15199
  %11 = load i16, i16* %10, align 2, !dbg !15199
  call void @llvm.dbg.value(metadata i16 %11, metadata !15188, metadata !DIExpression()), !dbg !15200
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !15201
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !15191, metadata !DIExpression()), !dbg !15200
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %13, metadata !15192, metadata !DIExpression()), !dbg !15200
  %14 = icmp slt i32 %13, 0, !dbg !15203
  %15 = add nuw i32 %9, 1, !dbg !15205
  call void @llvm.dbg.value(metadata i32 %15, metadata !15186, metadata !DIExpression()), !dbg !15194
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !15206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !15207 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !15211, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !15212, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !15213, metadata !DIExpression()), !dbg !15214
  %2 = sext i16 %0 to i32, !dbg !15215
  %3 = icmp slt i16 %0, 1, !dbg !15217
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !15218
  %6 = add nsw i32 %2, -1, !dbg !15218
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !15218
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !15218
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !15212, metadata !DIExpression()), !dbg !15214
  ret %struct.device* %8, !dbg !15219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15220 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15222, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !15223, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i8* %2, metadata !15224, metadata !DIExpression()), !dbg !15227
  %5 = bitcast i32* %4 to i8*, !dbg !15228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15228
  call void @llvm.dbg.value(metadata i32 0, metadata !15225, metadata !DIExpression()), !dbg !15227
  store i32 0, i32* %4, align 4, !dbg !15229
  call void @llvm.dbg.value(metadata i32* %4, metadata !15225, metadata !DIExpression(DW_OP_deref)), !dbg !15227
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !15230
  call void @llvm.dbg.value(metadata i16* %6, metadata !15226, metadata !DIExpression()), !dbg !15227
  %7 = load i32, i32* %4, align 4, !dbg !15231
  call void @llvm.dbg.value(metadata i32 %7, metadata !15225, metadata !DIExpression()), !dbg !15227
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !15232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15233
  ret i32 %8, !dbg !15234
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !15235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15237, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata i32* %1, metadata !15238, metadata !DIExpression()), !dbg !15242
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !15243
  %4 = load i16*, i16** %3, align 4, !dbg !15243
  call void @llvm.dbg.value(metadata i16* %4, metadata !15239, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata i32 0, metadata !15240, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata i32 0, metadata !15241, metadata !DIExpression()), !dbg !15242
  %5 = icmp eq i16* %4, null, !dbg !15244
  br i1 %5, label %22, label %6, !dbg !15246

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !15240, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata i16* %8, metadata !15239, metadata !DIExpression()), !dbg !15242
  %9 = load i16, i16* %8, align 2, !dbg !15247
  %10 = icmp eq i16 %9, -32768, !dbg !15251
  call void @llvm.dbg.value(metadata i32 undef, metadata !15240, metadata !DIExpression()), !dbg !15242
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !15252
  call void @llvm.dbg.value(metadata i16* %11, metadata !15239, metadata !DIExpression()), !dbg !15242
  %12 = zext i1 %10 to i32, !dbg !15253
  %13 = add i32 %7, %12, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %13, metadata !15240, metadata !DIExpression()), !dbg !15242
  %14 = icmp eq i32 %13, 2, !dbg !15254
  br i1 %14, label %15, label %6, !dbg !15255

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !15242
  call void @llvm.dbg.value(metadata i32 %16, metadata !15241, metadata !DIExpression()), !dbg !15242
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !15256
  %18 = load i16, i16* %17, align 2, !dbg !15256
  %19 = icmp eq i16 %18, 32767, !dbg !15257
  %20 = add i32 %16, 1, !dbg !15258
  call void @llvm.dbg.value(metadata i32 %20, metadata !15241, metadata !DIExpression()), !dbg !15242
  br i1 %19, label %21, label %15, !dbg !15260, !llvm.loop !15261

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !15263
  br label %22, !dbg !15264

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !15265
  call void @llvm.dbg.value(metadata i16* %23, metadata !15239, metadata !DIExpression()), !dbg !15242
  ret i16* %23, !dbg !15266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !15267 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15270
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !15271
  ret i32* %2, !dbg !15272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !15273 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !15422, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15423, metadata !DIExpression()), !dbg !15424
  ret void, !dbg !15425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15430, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.value(metadata i32 %1, metadata !15431, metadata !DIExpression()), !dbg !15432
  ret void, !dbg !15433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15438, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i32 %1, metadata !15439, metadata !DIExpression()), !dbg !15440
  ret void, !dbg !15441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15446, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i8* %1, metadata !15447, metadata !DIExpression()), !dbg !15448
  ret i32 -134, !dbg !15449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15454, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata i8* %1, metadata !15455, metadata !DIExpression()), !dbg !15456
  ret i32 -134, !dbg !15457
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !15458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15461, metadata !DIExpression()), !dbg !15462
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15463, !srcloc !15469
  call void @llvm.dbg.value(metadata i32 undef, metadata !15466, metadata !DIExpression()) #25, !dbg !15470
  call void @llvm.dbg.value(metadata i32 undef, metadata !15467, metadata !DIExpression()) #25, !dbg !15470
  br label %3, !dbg !15471

3:                                                ; preds = %3, %1
  br label %3, !dbg !15472, !llvm.loop !15475
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15482, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15483, metadata !DIExpression()), !dbg !15484
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.231, i32 0, i32 0), i32 noundef 69) #27, !dbg !15485
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15490
  unreachable, !dbg !15490
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !15491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15493, metadata !DIExpression()), !dbg !15494
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15495
  unreachable, !dbg !15495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15499, metadata !DIExpression()), !dbg !15502
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15503, !srcloc !15469
  call void @llvm.dbg.value(metadata i32 undef, metadata !15466, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15467, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15500, metadata !DIExpression()), !dbg !15502
  %4 = tail call fastcc %struct.k_thread* @k_current_get.234() #28, !dbg !15506
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15501, metadata !DIExpression()), !dbg !15502
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !15507
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.235, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !15507
  %6 = icmp eq %struct.__esf* %1, null, !dbg !15512
  br i1 %6, label %15, label %7, !dbg !15514

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15515, metadata !DIExpression()), !dbg !15520
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !15522
  %9 = load i32, i32* %8, align 4, !dbg !15522
  %10 = and i32 %9, 511, !dbg !15523
  %11 = icmp eq i32 %10, 0, !dbg !15524
  br i1 %11, label %13, label %12, !dbg !15525

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.236, i32 0, i32 0), i32 noundef 69) #27, !dbg !15526
  br label %13, !dbg !15532

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !15533
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.237, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !15533
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !15538
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15515, metadata !DIExpression()), !dbg !15539
  br label %17, !dbg !15544

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !15533
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.237, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !15533
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !15538
  br label %17, !dbg !15545

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %18, metadata !15466, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %18, metadata !15500, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15546, metadata !DIExpression()) #25, !dbg !15549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15551, !srcloc !15552
  tail call fastcc void @k_thread_abort.238(%struct.k_thread* noundef %4) #26, !dbg !15553
  ret void, !dbg !15556
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.234() unnamed_addr #13 !dbg !15557 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.246() #28, !dbg !15561
  ret %struct.k_thread* %1, !dbg !15562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !15563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15567, metadata !DIExpression()), !dbg !15568
  %2 = icmp ult i32 %0, 5, !dbg !15569
  br i1 %2, label %3, label %6, !dbg !15569

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !15569
  %5 = load i8*, i8** %4, align 4, !dbg !15569
  br label %6, !dbg !15569

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.240, i32 0, i32 0), %1 ], !dbg !15570
  ret i8* %7, !dbg !15572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15577, metadata !DIExpression()), !dbg !15579
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !15580
  br i1 %2, label %9, label %3, !dbg !15581

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !15582
  call void @llvm.dbg.value(metadata i8* %4, metadata !15578, metadata !DIExpression()), !dbg !15579
  %5 = icmp eq i8* %4, null, !dbg !15583
  br i1 %5, label %9, label %6, !dbg !15585

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !15586
  %8 = icmp eq i8 %7, 0, !dbg !15587
  br i1 %8, label %9, label %10, !dbg !15588

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.239, i32 0, i32 0), metadata !15578, metadata !DIExpression()), !dbg !15579
  br label %10, !dbg !15589

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.239, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !15579
  call void @llvm.dbg.value(metadata i8* %11, metadata !15578, metadata !DIExpression()), !dbg !15579
  ret i8* %11, !dbg !15591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.238(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15596, metadata !DIExpression()), !dbg !15597
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15598, !srcloc !15600
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !15601
  ret void, !dbg !15602
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.246() unnamed_addr #13 !dbg !15603 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15604, !srcloc !15606
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !15607
  ret %struct.k_thread* %1, !dbg !15608
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15609 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15613, metadata !DIExpression()), !dbg !15616
  call void @llvm.dbg.value(metadata i32 %1, metadata !15614, metadata !DIExpression()), !dbg !15616
  call void @llvm.dbg.value(metadata i32 %2, metadata !15615, metadata !DIExpression()), !dbg !15616
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !15617
  ret void, !dbg !15618
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15623, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.value(metadata i8* %1, metadata !15624, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.value(metadata i32 %2, metadata !15625, metadata !DIExpression()), !dbg !15626
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !15627
  ret void, !dbg !15628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !15629 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !15630
  ret void, !dbg !15631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !15632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15634, metadata !DIExpression()), !dbg !15635
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !15636
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15637
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !15638
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !15639
  %4 = trunc i32 %0 to i8, !dbg !15640
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !15641
  store i8 %4, i8* %5, align 4, !dbg !15642
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !15643
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !15644
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !15645
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !15646
  store i8* %8, i8** %9, align 4, !dbg !15647
  ret void, !dbg !15648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !15649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15651, metadata !DIExpression()), !dbg !15657
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15652, metadata !DIExpression()), !dbg !15657
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15659
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15653, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata i8* null, metadata !15656, metadata !DIExpression()), !dbg !15657
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15660
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15661
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !15662
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !15663
  ret void, !dbg !15664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15665 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15669, metadata !DIExpression()), !dbg !15670
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15671
  ret i8* %2, !dbg !15672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15678, metadata !DIExpression()), !dbg !15679
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15680
  %3 = load i8, i8* %2, align 1, !dbg !15681
  %4 = and i8 %3, -5, !dbg !15681
  store i8 %4, i8* %2, align 1, !dbg !15681
  ret void, !dbg !15682
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !15683 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !15686
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !15687
  %3 = ptrtoint i8* %2 to i32, !dbg !15696
  %4 = add i32 %3, 2048, !dbg !15697
  call void @llvm.dbg.value(metadata i32 %4, metadata !15691, metadata !DIExpression()) #25, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %4, metadata !15699, metadata !DIExpression()) #25, !dbg !15702
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15704, !srcloc !15705
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15706
  %6 = or i32 %5, 512, !dbg !15706
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15706
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -2, i32 noundef 255) #27, !dbg !15707
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -5, i32 noundef 0) #27, !dbg !15710
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -12, i32 noundef 0) #27, !dbg !15711
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -11, i32 noundef 0) #27, !dbg !15712
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -10, i32 noundef 0) #27, !dbg !15713
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -4, i32 noundef 0) #27, !dbg !15714
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15715
  %8 = or i32 %7, 458752, !dbg !15715
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15715
  tail call void @z_arm_fault_init() #27, !dbg !15716
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15717
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15718
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15721
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15722
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15723
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15724
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15724
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15685, metadata !DIExpression()), !dbg !15725
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15726
  call void @z_device_state_init() #27, !dbg !15727
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15728
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15729
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15730
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15731
  unreachable, !dbg !15731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2462, metadata !DIExpression()), !dbg !15732
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15733
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15733
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2463, metadata !DIExpression()), !dbg !15732
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2463, metadata !DIExpression()), !dbg !15732
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15734
  br i1 %7, label %8, label %35, !dbg !15735

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2463, metadata !DIExpression()), !dbg !15732
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15736
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15736
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2473, metadata !DIExpression()), !dbg !15737
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15738
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15738
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %14, metadata !2477, metadata !DIExpression()), !dbg !15737
  %15 = icmp eq %struct.device* %11, null, !dbg !15740
  br i1 %15, label %32, label %16, !dbg !15742

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15743
  br i1 %17, label %26, label %18, !dbg !15746

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15747
  call void @llvm.dbg.value(metadata i32 %19, metadata !2477, metadata !DIExpression()), !dbg !15737
  %20 = icmp ult i32 %19, 255, !dbg !15749
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15749
  call void @llvm.dbg.value(metadata i32 %21, metadata !2477, metadata !DIExpression()), !dbg !15737
  %22 = trunc i32 %21 to i8, !dbg !15750
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15751
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15751
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15752
  store i8 %22, i8* %25, align 1, !dbg !15753
  br label %26, !dbg !15754

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15755
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15755
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15756
  %30 = load i8, i8* %29, align 1, !dbg !15757
  %31 = or i8 %30, 1, !dbg !15757
  store i8 %31, i8* %29, align 1, !dbg !15757
  br label %32, !dbg !15758

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15759
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2463, metadata !DIExpression()), !dbg !15732
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15734
  br i1 %34, label %8, label %35, !dbg !15735, !llvm.loop !15760

35:                                               ; preds = %32, %1
  ret void, !dbg !15762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.255(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !15763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15765, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 %1, metadata !15766, metadata !DIExpression()), !dbg !15767
  %3 = trunc i32 %1 to i8, !dbg !15768
  %4 = shl i8 %3, 4, !dbg !15768
  %5 = and i32 %0, 15, !dbg !15771
  %6 = add nsw i32 %5, -4, !dbg !15772
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15773
  store volatile i8 %4, i8* %7, align 1, !dbg !15774
  ret void, !dbg !15775
}

; Function Attrs: optsize
declare !dbg !15776 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15777 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15780, metadata !DIExpression()), !dbg !15781
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15782
  store i8 1, i8* %2, align 1, !dbg !15783
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15784
  store i8 1, i8* %3, align 4, !dbg !15785
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15786
  store i32 0, i32* %4, align 4, !dbg !15787
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15788
  store i32 0, i32* %5, align 4, !dbg !15789
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15790
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15791
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15792
  ret void, !dbg !15793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15794 {
  tail call void @z_sched_init() #27, !dbg !15799
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15800
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.256, i32 0, i32 0)) #27, !dbg !15801
  call void @llvm.dbg.value(metadata i8* %1, metadata !15798, metadata !DIExpression()), !dbg !15802
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15803
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15804
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15805
  ret i8* %1, !dbg !15806
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15811, metadata !DIExpression()), !dbg !15812
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15813
  unreachable, !dbg !15814
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15817, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i8* %1, metadata !15818, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i8* %2, metadata !15819, metadata !DIExpression()), !dbg !15820
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15821
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15822
  tail call void @boot_banner() #27, !dbg !15823
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15824
  tail call void @z_init_static_threads() #27, !dbg !15825
  tail call void @main() #27, !dbg !15826
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15827
  %5 = and i8 %4, -2, !dbg !15827
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15827
  ret void, !dbg !15828
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15829 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15839, metadata !DIExpression()), !dbg !15841
  call void @llvm.dbg.value(metadata i8* %1, metadata !15840, metadata !DIExpression()), !dbg !15841
  ret void, !dbg !15842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15843 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15845, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i8* %1, metadata !15846, metadata !DIExpression()), !dbg !15847
  ret void, !dbg !15848
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15849 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15850, !srcloc !15857
  call void @llvm.dbg.value(metadata i32 %1, metadata !15853, metadata !DIExpression()) #25, !dbg !15858
  %2 = icmp ne i32 %1, 0, !dbg !15859
  ret i1 %2, !dbg !15860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15861 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15862
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15863
  %3 = load i8, i8* %2, align 4, !dbg !15864
  %4 = or i8 %3, 1, !dbg !15864
  store i8 %4, i8* %2, align 4, !dbg !15864
  ret void, !dbg !15865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15866 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15867
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15868
  %3 = load i8, i8* %2, align 4, !dbg !15869
  %4 = and i8 %3, -2, !dbg !15869
  store i8 %4, i8* %2, align 4, !dbg !15869
  ret void, !dbg !15870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15871 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15872
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15873
  %3 = load i8, i8* %2, align 4, !dbg !15873
  %4 = and i8 %3, 1, !dbg !15874
  %5 = icmp ne i8 %4, 0, !dbg !15875
  ret i1 %5, !dbg !15876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15881, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i8* %1, metadata !15882, metadata !DIExpression()), !dbg !15883
  ret i32 -88, !dbg !15884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15889, metadata !DIExpression()), !dbg !15890
  ret i8* null, !dbg !15891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15892 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i8* %1, metadata !15897, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 %2, metadata !15898, metadata !DIExpression()), !dbg !15899
  ret i32 -88, !dbg !15900
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2602, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i8* %1, metadata !2603, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 %2, metadata !2604, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 0, metadata !2605, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i8 undef, metadata !2607, metadata !DIExpression()), !dbg !15901
  %4 = icmp eq i8* %1, null, !dbg !15902
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15904
  br i1 %6, label %46, label %7, !dbg !15904

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15905
  %9 = load i8, i8* %8, align 1, !dbg !15905
  call void @llvm.dbg.value(metadata i8 %9, metadata !2607, metadata !DIExpression()), !dbg !15901
  %10 = add i32 %2, -1, !dbg !15906
  call void @llvm.dbg.value(metadata i32 %10, metadata !2604, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i8 0, metadata !2608, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata i8 %9, metadata !2607, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 0, metadata !2605, metadata !DIExpression()), !dbg !15901
  %11 = icmp eq i8 %9, 0, !dbg !15908
  br i1 %11, label %12, label %15, !dbg !15910

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15911
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15912
  store i8 0, i8* %14, align 1, !dbg !15913
  br label %46, !dbg !15914

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2608, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata i8 %17, metadata !2607, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 %18, metadata !2605, metadata !DIExpression()), !dbg !15901
  %19 = zext i8 %17 to i32, !dbg !15915
  %20 = zext i8 %16 to i32, !dbg !15916
  %21 = shl nuw i32 1, %20, !dbg !15916
  call void @llvm.dbg.value(metadata i32 %21, metadata !2606, metadata !DIExpression()), !dbg !15901
  %22 = and i32 %21, %19, !dbg !15918
  %23 = icmp eq i32 %22, 0, !dbg !15920
  br i1 %23, label %42, label %24, !dbg !15921

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15922
  %26 = sub i32 %10, %18, !dbg !15923
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15924
  %28 = load i8*, i8** %27, align 4, !dbg !15924
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15925
  %30 = load i32, i32* %29, align 4, !dbg !15925
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15926
  %32 = add i32 %31, %18, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %32, metadata !2605, metadata !DIExpression()), !dbg !15901
  %33 = trunc i32 %21 to i8, !dbg !15928
  %34 = xor i8 %33, -1, !dbg !15928
  %35 = and i8 %17, %34, !dbg !15928
  call void @llvm.dbg.value(metadata i8 %35, metadata !2607, metadata !DIExpression()), !dbg !15901
  %36 = icmp eq i8 %35, 0, !dbg !15929
  br i1 %36, label %12, label %37, !dbg !15931

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15932
  %39 = sub i32 %10, %32, !dbg !15934
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.259, i32 0, i32 0), i32 noundef 1) #26, !dbg !15935
  %41 = add i32 %40, %32, !dbg !15936
  call void @llvm.dbg.value(metadata i32 %41, metadata !2605, metadata !DIExpression()), !dbg !15901
  br label %42, !dbg !15937

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15901
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15901
  call void @llvm.dbg.value(metadata i8 %44, metadata !2607, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 %43, metadata !2605, metadata !DIExpression()), !dbg !15901
  %45 = add i8 %16, 1, !dbg !15938
  call void @llvm.dbg.value(metadata i8 %45, metadata !2608, metadata !DIExpression()), !dbg !15907
  br label %15, !dbg !15910

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.260, i32 0, i32 0), %3 ], !dbg !15901
  ret i8* %47, !dbg !15939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15944, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 %1, metadata !15945, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i8* %2, metadata !15946, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 %3, metadata !15947, metadata !DIExpression()), !dbg !15949
  %5 = icmp ult i32 %1, %3, !dbg !15950
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %6, metadata !15948, metadata !DIExpression()), !dbg !15949
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15951
  ret i32 %6, !dbg !15952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15957, metadata !DIExpression()), !dbg !15958
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15959
  ret void, !dbg !15960
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15970, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15971, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 %2, metadata !15972, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15973, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i8* %4, metadata !15974, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i8* %5, metadata !15975, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i8* %6, metadata !15976, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 %7, metadata !15977, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i32 %8, metadata !15978, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i8* undef, metadata !15979, metadata !DIExpression()), !dbg !15981
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15982
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15983
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15984
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15985
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15986
  call void @llvm.dbg.value(metadata i8* %13, metadata !15980, metadata !DIExpression()), !dbg !15981
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15987
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15988
  store i8* null, i8** %14, align 4, !dbg !15989
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15990
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15990
  br i1 %16, label %20, label %17, !dbg !15992

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15993
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15993
  br label %20, !dbg !15994

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15981
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15995
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15997
  ret i8* %13, !dbg !15998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15999 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16004, metadata !DIExpression()), !dbg !16005
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16006
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !16007
  ret void, !dbg !16008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !16009 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !16014, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 %1, metadata !16015, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 %2, metadata !16016, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i32 %3, metadata !16017, metadata !DIExpression()), !dbg !16018
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !16019
  store %union.anon* null, %union.anon** %5, align 8, !dbg !16020
  %6 = trunc i32 %3 to i8, !dbg !16021
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !16022
  store i8 %6, i8* %7, align 4, !dbg !16023
  %8 = trunc i32 %2 to i8, !dbg !16024
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !16025
  store i8 %8, i8* %9, align 1, !dbg !16026
  %10 = trunc i32 %1 to i8, !dbg !16027
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !16028
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !16028
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !16028
  store i8 %10, i8* %13, align 2, !dbg !16029
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !16030
  store i8 0, i8* %14, align 1, !dbg !16031
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !16032
  ret void, !dbg !16033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !16034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16038, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16039, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata i32 %2, metadata !16040, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata i32 0, metadata !16045, metadata !DIExpression()), !dbg !16046
  %4 = add i32 %2, 7, !dbg !16047
  %5 = and i32 %4, -8, !dbg !16047
  %6 = add i32 %5, 64, !dbg !16047
  call void @llvm.dbg.value(metadata i32 %6, metadata !16041, metadata !DIExpression()), !dbg !16046
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.270(%struct.z_thread_stack_element* noundef %1) #26, !dbg !16049
  call void @llvm.dbg.value(metadata i8* %7, metadata !16044, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata i32 %5, metadata !16042, metadata !DIExpression()), !dbg !16046
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !16050
  call void @llvm.dbg.value(metadata i8* %8, metadata !16043, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata i32 0, metadata !16045, metadata !DIExpression()), !dbg !16046
  %9 = ptrtoint i8* %7 to i32, !dbg !16051
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !16052
  store i32 %9, i32* %10, align 4, !dbg !16053
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !16054
  store i32 %5, i32* %11, align 4, !dbg !16055
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !16056
  store i32 0, i32* %12, align 4, !dbg !16057
  call void @llvm.dbg.value(metadata i8* %8, metadata !16043, metadata !DIExpression()), !dbg !16046
  ret i8* %8, !dbg !16058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.270(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !16059 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !16063, metadata !DIExpression()), !dbg !16064
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !16065
  ret i8* %2, !dbg !16066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !16072, metadata !DIExpression()), !dbg !16073
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !16074
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16075
  ret void, !dbg !16076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16077 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16079, metadata !DIExpression()), !dbg !16080
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16081
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !16082
  ret void, !dbg !16083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16084 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16088, metadata !DIExpression()), !dbg !16089
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16090
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16091
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16092
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16093
  ret void, !dbg !16094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16095 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16100, metadata !DIExpression()), !dbg !16101
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16102
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16103
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16104
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16105
  ret void, !dbg !16106
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !16107 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !16124, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16115, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16116, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i32 %2, metadata !16117, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !16118, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i8* %4, metadata !16119, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i8* %5, metadata !16120, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i8* %6, metadata !16121, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i32 %7, metadata !16122, metadata !DIExpression()), !dbg !16125
  call void @llvm.dbg.value(metadata i32 %8, metadata !16123, metadata !DIExpression()), !dbg !16125
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !16126
  %13 = icmp eq i64 %11, -1, !dbg !16127
  br i1 %13, label %15, label %14, !dbg !16129

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !16130
  br label %15, !dbg !16132

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !16133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16134 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16139, metadata !DIExpression()), !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16138, metadata !DIExpression()), !dbg !16140
  %4 = icmp eq i64 %3, 0, !dbg !16141
  br i1 %4, label %5, label %6, !dbg !16143

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !16144
  br label %7, !dbg !16146

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16147
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !16149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16150 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16154, metadata !DIExpression()), !dbg !16155
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16156, !srcloc !16158
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !16159
  ret void, !dbg !16160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16161 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16164, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16163, metadata !DIExpression()), !dbg !16165
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16166
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16167
  ret void, !dbg !16168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !16169 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16171, metadata !DIExpression()), !dbg !16191
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !16192

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !16193
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16189, metadata !DIExpression()), !dbg !16194
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !16195

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !16171, metadata !DIExpression()), !dbg !16191
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !16196
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !16196
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !16199
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !16199
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !16200
  %9 = load i32, i32* %8, align 4, !dbg !16200
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !16201
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !16201
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !16202
  %13 = load i8*, i8** %12, align 4, !dbg !16202
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !16203
  %15 = load i8*, i8** %14, align 4, !dbg !16203
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !16204
  %17 = load i8*, i8** %16, align 4, !dbg !16204
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !16205
  %19 = load i32, i32* %18, align 4, !dbg !16205
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !16206
  %21 = load i32, i32* %20, align 4, !dbg !16206
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !16207
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !16208
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !16209
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !16210
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !16210
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !16211
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !16171, metadata !DIExpression()), !dbg !16191
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16212
  br i1 %27, label %2, label %1, !dbg !16192, !llvm.loop !16214

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !16193
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16189, metadata !DIExpression()), !dbg !16194
  br label %29, !dbg !16195

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !16216
  ret void, !dbg !16217

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !16189, metadata !DIExpression()), !dbg !16194
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !16218
  %33 = load i32, i32* %32, align 4, !dbg !16218
  %34 = icmp eq i32 %33, -1, !dbg !16222
  br i1 %34, label %43, label %35, !dbg !16223

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !16224
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !16224
  %38 = icmp sgt i32 %33, 0, !dbg !16226
  %39 = select i1 %38, i32 %33, i32 0, !dbg !16226
  %40 = zext i32 %39 to i64, !dbg !16226
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !16226
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !16227
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !16227
  br label %43, !dbg !16228

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !16229
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !16189, metadata !DIExpression()), !dbg !16194
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16230
  br i1 %45, label %30, label %29, !dbg !16195, !llvm.loop !16232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !16234 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16239, metadata !DIExpression()), !dbg !16240
  call void @llvm.dbg.value(metadata i64 %0, metadata !16241, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i32 1000, metadata !16246, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i32 10000, metadata !16247, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8 1, metadata !16248, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8 0, metadata !16249, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8 1, metadata !16250, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8 0, metadata !16251, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8 1, metadata !16252, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i8 0, metadata !16253, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i64 0, metadata !16254, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i64 0, metadata !16254, metadata !DIExpression()), !dbg !16258
  %2 = mul i64 %0, 10, !dbg !16260
  ret i64 %2, !dbg !16266
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !16267 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !16269, metadata !DIExpression()), !dbg !16273
  call void @llvm.dbg.value(metadata i8* %1, metadata !16270, metadata !DIExpression()), !dbg !16273
  call void @llvm.dbg.value(metadata i8* %2, metadata !16271, metadata !DIExpression()), !dbg !16273
  call void @llvm.dbg.value(metadata i8* %3, metadata !16272, metadata !DIExpression()), !dbg !16273
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16274
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !16275
  %7 = load i8, i8* %6, align 4, !dbg !16276
  %8 = or i8 %7, 4, !dbg !16276
  store i8 %8, i8* %6, align 4, !dbg !16276
  tail call void @z_thread_essential_clear() #26, !dbg !16277
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !16278
  unreachable, !dbg !16278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !16279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16283, metadata !DIExpression()), !dbg !16284
  ret i32 -134, !dbg !16285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !16286 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16290, metadata !DIExpression()), !dbg !16292
  call void @llvm.dbg.value(metadata i32 %1, metadata !16291, metadata !DIExpression()), !dbg !16292
  ret i32 -134, !dbg !16293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !16294 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16301, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !16302, metadata !DIExpression()), !dbg !16303
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !16304
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !16306
  %6 = select i1 %5, i32 -22, i32 0, !dbg !16303
  ret i32 %6, !dbg !16307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !16308 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16312, metadata !DIExpression()), !dbg !16313
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !16314
  %3 = select i1 %2, i32 -22, i32 0, !dbg !16313
  ret i32 %3, !dbg !16316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !16317 {
  tail call void @sys_clock_idle_exit() #27, !dbg !16319
  ret void, !dbg !16320
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !16321 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16323, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i8* %1, metadata !16324, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i8* %2, metadata !16325, metadata !DIExpression()), !dbg !16326
  br label %4, !dbg !16327

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16328, !srcloc !16335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16331, metadata !DIExpression()) #25, !dbg !16336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16332, metadata !DIExpression()) #25, !dbg !16336
  tail call fastcc void @k_cpu_idle() #26, !dbg !16337
  br label %4, !dbg !16327, !llvm.loop !16338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !16340 {
  tail call void @arch_cpu_idle() #27, !dbg !16341
  ret void, !dbg !16342
}

; Function Attrs: optsize
declare !dbg !16343 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16348, metadata !DIExpression()), !dbg !16352
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16349, metadata !DIExpression()), !dbg !16352
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16353
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16353
  %5 = load i8, i8* %4, align 2, !dbg !16353
  call void @llvm.dbg.value(metadata i8 %5, metadata !16350, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16352
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16354
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16354
  %8 = load i8, i8* %7, align 2, !dbg !16354
  call void @llvm.dbg.value(metadata i8 %8, metadata !16351, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16352
  %9 = icmp eq i8 %8, %5, !dbg !16355
  %10 = sext i8 %5 to i32, !dbg !16357
  %11 = sext i8 %8 to i32, !dbg !16357
  %12 = sub nsw i32 %11, %10, !dbg !16357
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16357
  ret i32 %13, !dbg !16358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16363, metadata !DIExpression()), !dbg !16364
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !16365
  %3 = icmp eq i32 %2, 0, !dbg !16367
  br i1 %3, label %8, label %4, !dbg !16368

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !16369
  %6 = add i32 %5, %2, !dbg !16371
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16372
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !16373
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !16374
  br label %8, !dbg !16375

8:                                                ; preds = %4, %1
  ret void, !dbg !16376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !16377 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16381, metadata !DIExpression()), !dbg !16383
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %1, metadata !16382, metadata !DIExpression()), !dbg !16383
  ret i32 %1, !dbg !16385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16390, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 %1, metadata !16391, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 0, metadata !16392, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16408
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16410, !srcloc !16416
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %4, metadata !16413, metadata !DIExpression()) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16417
  call void @llvm.dbg.value(metadata i32 %4, metadata !16407, metadata !DIExpression()) #25, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %4, metadata !16398, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()), !dbg !16400
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16418
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !16421
  %6 = icmp sgt i32 %0, 0, !dbg !16422
  %7 = icmp sgt i32 %5, 2, !dbg !16424
  %8 = select i1 %7, i32 %5, i32 2, !dbg !16424
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !16424
  store i32 %9, i32* @slice_ticks, align 4, !dbg !16425
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16426
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i32 %4, metadata !16428, metadata !DIExpression()) #25, !dbg !16434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !16434
  call void @llvm.dbg.value(metadata i32 %4, metadata !16436, metadata !DIExpression()) #25, !dbg !16439
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16441, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !16392, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()), !dbg !16400
  ret void, !dbg !16443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !16444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16446, metadata !DIExpression()), !dbg !16447
  call void @llvm.dbg.value(metadata i32 %0, metadata !16448, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16463
  call void @llvm.dbg.value(metadata i32 1000, metadata !16451, metadata !DIExpression()), !dbg !16463
  call void @llvm.dbg.value(metadata i32 10000, metadata !16452, metadata !DIExpression()), !dbg !16463
  call void @llvm.dbg.value(metadata i8 1, metadata !16453, metadata !DIExpression()), !dbg !16463
  call void @llvm.dbg.value(metadata i1 true, metadata !16454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16463
  call void @llvm.dbg.value(metadata i1 true, metadata !16455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16463
  call void @llvm.dbg.value(metadata i8 0, metadata !16456, metadata !DIExpression()), !dbg !16463
  call void @llvm.dbg.value(metadata i1 true, metadata !16457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16463
  call void @llvm.dbg.value(metadata i1 false, metadata !16458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16463
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !16463
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !16463
  %2 = mul i32 %0, 10, !dbg !16465
  ret i32 %2, !dbg !16471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16474, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16477
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16479, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16479
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16481
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %3, metadata !16475, metadata !DIExpression()), !dbg !16476
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16482
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16484
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !16485
  br i1 %6, label %7, label %8, !dbg !16486

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16487
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !16489
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !16491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16493, !srcloc !16442
  br label %24, !dbg !16494

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16495
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !16496
  %10 = icmp eq i32 %9, 0, !dbg !16496
  br i1 %10, label %21, label %11, !dbg !16498

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !16499
  br i1 %12, label %13, label %21, !dbg !16500

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16501
  %15 = icmp sgt i32 %14, %0, !dbg !16504
  br i1 %15, label %19, label %16, !dbg !16505

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16506
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %18, metadata !16475, metadata !DIExpression()), !dbg !16476
  br label %22, !dbg !16508

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !16509
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16509
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16511
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !16476
  call void @llvm.dbg.value(metadata i32 %23, metadata !16475, metadata !DIExpression()), !dbg !16476
  call void @llvm.dbg.value(metadata i32 %23, metadata !16428, metadata !DIExpression()) #25, !dbg !16513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !16513
  call void @llvm.dbg.value(metadata i32 %23, metadata !16436, metadata !DIExpression()) #25, !dbg !16515
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !16517, !srcloc !16442
  br label %24, !dbg !16518

24:                                               ; preds = %22, %7
  ret void, !dbg !16518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !16519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16523, metadata !DIExpression()), !dbg !16525
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !16526
  %3 = icmp eq i32 %2, 0, !dbg !16526
  br i1 %3, label %16, label %4, !dbg !16527

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16528
  br i1 %5, label %16, label %6, !dbg !16529

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16530
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16530
  %9 = load i8, i8* %8, align 2, !dbg !16530
  %10 = sext i8 %9 to i32, !dbg !16531
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16532
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !16533
  br i1 %12, label %16, label %13, !dbg !16534

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !16535
  %15 = xor i1 %14, true, !dbg !16536
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16525
  call void @llvm.dbg.value(metadata i1 %17, metadata !16524, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16525
  ret i1 %17, !dbg !16537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16538 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16542, metadata !DIExpression()), !dbg !16544
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16545
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16543, metadata !DIExpression()), !dbg !16544
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !16546
  br i1 %3, label %5, label %4, !dbg !16548

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !16549
  br label %5, !dbg !16551

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16542, metadata !DIExpression()), !dbg !16544
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16552
  ret i32 %6, !dbg !16553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16554 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16556, metadata !DIExpression()), !dbg !16558
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16559
  %3 = load i8, i8* %2, align 1, !dbg !16559
  call void @llvm.dbg.value(metadata i8 %3, metadata !16557, metadata !DIExpression()), !dbg !16558
  %4 = and i8 %3, 31, !dbg !16560
  %5 = icmp ne i8 %4, 0, !dbg !16561
  ret i1 %5, !dbg !16562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16565, metadata !DIExpression()), !dbg !16566
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16567
  br i1 %2, label %3, label %7, !dbg !16569

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()) #25, !dbg !16573
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16576
  %5 = load i8, i8* %4, align 1, !dbg !16577
  %6 = and i8 %5, 127, !dbg !16577
  store i8 %6, i8* %4, align 1, !dbg !16577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16578, metadata !DIExpression()) #25, !dbg !16581
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16585
  br label %7, !dbg !16586

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16587, metadata !DIExpression()) #25, !dbg !16590
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16592
  %9 = load i8, i8* %8, align 1, !dbg !16593
  %10 = or i8 %9, -128, !dbg !16593
  store i8 %10, i8* %8, align 1, !dbg !16593
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16594, metadata !DIExpression()) #25, !dbg !16597
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16601, metadata !DIExpression()) #25, !dbg !16609
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16607, metadata !DIExpression()) #25, !dbg !16609
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16611
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !16608, metadata !DIExpression()) #25, !dbg !16609
  %12 = icmp eq %struct._dnode* %11, null, !dbg !16613
  br i1 %12, label %23, label %13, !dbg !16611

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16608, metadata !DIExpression()) #25, !dbg !16609
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !16615
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !16608, metadata !DIExpression()) #25, !dbg !16609
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !16616
  %17 = icmp sgt i32 %16, 0, !dbg !16619
  br i1 %17, label %18, label %20, !dbg !16620

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16621
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !16623
  br label %25, !dbg !16624

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !16613
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16608, metadata !DIExpression()) #25, !dbg !16609
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16613
  br i1 %22, label %23, label %13, !dbg !16611, !llvm.loop !16625

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16627
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !16628
  br label %25, !dbg !16629

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16630
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !16631
  %28 = zext i1 %27 to i32, !dbg !16631
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !16632
  ret void, !dbg !16633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16636, metadata !DIExpression()), !dbg !16637
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !16638
  ret i1 %2, !dbg !16639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !16640 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16642, metadata !DIExpression()), !dbg !16644
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16643, metadata !DIExpression()), !dbg !16644
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16645
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !16646
  ret void, !dbg !16647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16648 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16652, metadata !DIExpression()), !dbg !16653
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !16654
  br i1 %2, label %6, label %3, !dbg !16654

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16655
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16655
  br label %6, !dbg !16654

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16654
  ret %struct._dnode* %7, !dbg !16656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16657 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16661, metadata !DIExpression()), !dbg !16665
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16662, metadata !DIExpression()), !dbg !16665
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16666
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16666
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16663, metadata !DIExpression()), !dbg !16665
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16667
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16668
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16669
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16670
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16671
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16672
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16673
  ret void, !dbg !16674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16675 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16679, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16680, metadata !DIExpression()), !dbg !16681
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16682
  br i1 %3, label %6, label %4, !dbg !16683

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16684
  br label %6, !dbg !16683

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16683
  ret %struct._dnode* %7, !dbg !16685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16686 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16690, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16691, metadata !DIExpression()), !dbg !16693
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16694
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16694
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16692, metadata !DIExpression()), !dbg !16693
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16695
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16696
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16697
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16698
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16699
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16700
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16701
  ret void, !dbg !16702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16705, metadata !DIExpression()), !dbg !16707
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16708
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16715, metadata !DIExpression()) #25, !dbg !16717
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16718
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16719
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16719
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16706, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16720, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 %0, metadata !16725, metadata !DIExpression()) #25, !dbg !16726
  %6 = icmp eq i32 %0, 0, !dbg !16729
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16731
  br i1 %6, label %8, label %15, !dbg !16732

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16733
  br i1 %9, label %15, label %10, !dbg !16735

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16736
  br i1 %11, label %15, label %12, !dbg !16738

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16739
  %14 = icmp eq i32 %13, 0, !dbg !16739
  br i1 %14, label %18, label %15, !dbg !16741

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16742
  br i1 %16, label %18, label %17, !dbg !16745

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16746
  br label %18, !dbg !16748

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16731
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16731
  ret void, !dbg !16749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16750 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16754, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16755, metadata !DIExpression()), !dbg !16757
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16758
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16756, metadata !DIExpression()), !dbg !16757
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16755, metadata !DIExpression()), !dbg !16757
  ret %struct.k_thread* %3, !dbg !16759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16762, metadata !DIExpression()), !dbg !16763
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16764
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16765
  %4 = xor i1 %3, true, !dbg !16766
  ret i1 %4, !dbg !16767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16770, metadata !DIExpression()), !dbg !16771
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16772
  %3 = load i16, i16* %2, align 2, !dbg !16772
  %4 = icmp ult i16 %3, 128, !dbg !16773
  %5 = zext i1 %4 to i32, !dbg !16773
  ret i32 %5, !dbg !16774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16775 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16781, metadata !DIExpression()), !dbg !16782
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16783
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16784
  %4 = xor i1 %3, true, !dbg !16785
  ret i1 %4, !dbg !16786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16787 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16793, metadata !DIExpression()), !dbg !16794
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16795
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16795
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16796
  ret i1 %4, !dbg !16797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16798 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16800, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16801, metadata !DIExpression()), !dbg !16802
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16803
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16803
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16804
  br i1 %5, label %9, label %6, !dbg !16805

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16806
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16806
  br label %9, !dbg !16805

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16805
  ret %struct._dnode* %10, !dbg !16807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16808 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16812, metadata !DIExpression()), !dbg !16813
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16814
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16814
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16815
  ret i1 %4, !dbg !16816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16817 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16821, metadata !DIExpression()), !dbg !16824
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16825
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16825
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16822, metadata !DIExpression()), !dbg !16824
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16826
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16826
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16823, metadata !DIExpression()), !dbg !16824
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16827
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16828
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16829
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16830
  tail call fastcc void @sys_dnode_init.275(%struct._dnode* noundef %0) #26, !dbg !16831
  ret void, !dbg !16832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.275(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16835, metadata !DIExpression()), !dbg !16836
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16837
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16838
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16839
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16840
  ret void, !dbg !16841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16846, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.value(metadata i32 128, metadata !16847, metadata !DIExpression()), !dbg !16848
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16849
  %3 = load i8, i8* %2, align 1, !dbg !16849
  %4 = icmp slt i8 %3, 0, !dbg !16850
  ret i1 %4, !dbg !16851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16856, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 %1, metadata !16857, metadata !DIExpression()), !dbg !16858
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16859
  ret i1 %3, !dbg !16860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16863, metadata !DIExpression()), !dbg !16864
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16865
  ret i1 %2, !dbg !16866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16869, metadata !DIExpression()), !dbg !16871
  call void @llvm.dbg.value(metadata i32 %1, metadata !16870, metadata !DIExpression()), !dbg !16871
  %3 = icmp slt i32 %0, %1, !dbg !16872
  ret i1 %3, !dbg !16873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16876, metadata !DIExpression()), !dbg !16880
  call void @llvm.dbg.value(metadata i32 0, metadata !16877, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16882
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16884, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16884
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16886
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !16882
  call void @llvm.dbg.value(metadata i32 %3, metadata !16879, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16877, metadata !DIExpression()), !dbg !16881
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16887
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !16892
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !16894
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16896, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !16877, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16877, metadata !DIExpression()), !dbg !16881
  ret void, !dbg !16897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16900, metadata !DIExpression()), !dbg !16901
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16902
  br i1 %2, label %24, label %3, !dbg !16904

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16905
  br i1 %4, label %5, label %24, !dbg !16906

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16587, metadata !DIExpression()) #25, !dbg !16907
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16910
  %7 = load i8, i8* %6, align 1, !dbg !16911
  %8 = or i8 %7, -128, !dbg !16911
  store i8 %8, i8* %6, align 1, !dbg !16911
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16594, metadata !DIExpression()) #25, !dbg !16912
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16601, metadata !DIExpression()) #25, !dbg !16914
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16607, metadata !DIExpression()) #25, !dbg !16914
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16916
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !16608, metadata !DIExpression()) #25, !dbg !16914
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16917
  br i1 %10, label %21, label %11, !dbg !16916

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16608, metadata !DIExpression()) #25, !dbg !16914
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16918
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16608, metadata !DIExpression()) #25, !dbg !16914
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16919
  %15 = icmp sgt i32 %14, 0, !dbg !16920
  br i1 %15, label %16, label %18, !dbg !16921

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16922
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16923
  br label %23, !dbg !16924

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16917
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !16608, metadata !DIExpression()) #25, !dbg !16914
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16917
  br i1 %20, label %21, label %11, !dbg !16916, !llvm.loop !16925

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16927
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16928
  br label %23, !dbg !16929

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16930
  br label %24, !dbg !16931

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16933 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16935, metadata !DIExpression()), !dbg !16936
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16937
  br i1 %2, label %6, label %3, !dbg !16938

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16939
  %5 = xor i1 %4, true, !dbg !16938
  br label %6, !dbg !16938

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 0, metadata !16944, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16949
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16951, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %3, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16954
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !16957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !16959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16961, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !16944, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  ret void, !dbg !16962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16968
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16970, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16970
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %3, metadata !16966, metadata !DIExpression()), !dbg !16967
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16973
  br i1 %4, label %5, label %6, !dbg !16975

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !16976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !16976
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !16979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16981, !srcloc !16442
  br label %8, !dbg !16982

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.280(%struct.k_thread* noundef %0) #26, !dbg !16983
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16984
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16985
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16985
  br label %8, !dbg !16986

8:                                                ; preds = %6, %5
  ret void, !dbg !16986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16989, metadata !DIExpression()), !dbg !16990
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16991
  %3 = load i8, i8* %2, align 1, !dbg !16991
  %4 = and i8 %3, 4, !dbg !16992
  %5 = icmp eq i8 %4, 0, !dbg !16993
  ret i1 %5, !dbg !16994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.280(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16997, metadata !DIExpression()), !dbg !16998
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16999
  %3 = load i8, i8* %2, align 1, !dbg !17000
  %4 = and i8 %3, -5, !dbg !17000
  store i8 %4, i8* %2, align 1, !dbg !17000
  ret void, !dbg !17001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !17002 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !17005, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17004, metadata !DIExpression()), !dbg !17006
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !17007
  br i1 %4, label %5, label %9, !dbg !17009

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !17010
  br i1 %6, label %7, label %9, !dbg !17011

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !17012, metadata !DIExpression()) #25, !dbg !17018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17017, metadata !DIExpression()) #25, !dbg !17018
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17021
  br label %10, !dbg !17022

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !17023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17023
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !17026
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17028, !srcloc !16442
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !17029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !17030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17034, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.value(metadata i32 %0, metadata !17036, metadata !DIExpression()), !dbg !17041
  %2 = icmp eq i32 %0, 0, !dbg !17043
  br i1 %2, label %3, label %6, !dbg !17044

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17045, !srcloc !17052
  call void @llvm.dbg.value(metadata i32 %4, metadata !17048, metadata !DIExpression()) #25, !dbg !17053
  %5 = icmp eq i32 %4, 0, !dbg !17054
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !17035
  ret i1 %7, !dbg !17055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !17056 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17059
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17058, metadata !DIExpression()), !dbg !17060
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17061
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17062
  ret i1 %3, !dbg !17063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17066, metadata !DIExpression()), !dbg !17068
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !17069
  call void @llvm.dbg.value(metadata i32 %2, metadata !17067, metadata !DIExpression()), !dbg !17068
  ret i32 %2, !dbg !17070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17071 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17073, metadata !DIExpression()), !dbg !17077
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17078
  call void @llvm.dbg.value(metadata i32 0, metadata !17074, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17080
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17082, !srcloc !16416
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17082
  call void @llvm.dbg.value(metadata i32 %4, metadata !16413, metadata !DIExpression()) #25, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17084
  call void @llvm.dbg.value(metadata i32 %4, metadata !16407, metadata !DIExpression()) #25, !dbg !17080
  call void @llvm.dbg.value(metadata i32 %4, metadata !17076, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata i32 undef, metadata !17074, metadata !DIExpression()), !dbg !17079
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !17085
  br i1 %5, label %6, label %10, !dbg !17089

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()) #25, !dbg !17090
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17093
  %8 = load i8, i8* %7, align 1, !dbg !17094
  %9 = and i8 %8, 127, !dbg !17094
  store i8 %9, i8* %7, align 1, !dbg !17094
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16578, metadata !DIExpression()) #25, !dbg !17095
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17097
  br label %10, !dbg !17098

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !17099
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17100
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !17101
  %13 = zext i1 %12 to i32, !dbg !17101
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %4, metadata !16428, metadata !DIExpression()) #25, !dbg !17103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %4, metadata !16436, metadata !DIExpression()) #25, !dbg !17105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17107, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17074, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata i32 undef, metadata !17074, metadata !DIExpression()), !dbg !17079
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17108
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17110
  br i1 %15, label %16, label %17, !dbg !17111

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17112
  br label %17, !dbg !17114

17:                                               ; preds = %16, %10
  ret void, !dbg !17115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17116 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17118, metadata !DIExpression()), !dbg !17119
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17120
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !17121
  ret i32 %3, !dbg !17122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17125, metadata !DIExpression()), !dbg !17126
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17127
  %3 = load i8, i8* %2, align 1, !dbg !17128
  %4 = or i8 %3, 16, !dbg !17128
  store i8 %4, i8* %2, align 1, !dbg !17128
  ret void, !dbg !17129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !17130 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17131, !srcloc !16416
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17131
  call void @llvm.dbg.value(metadata i32 %2, metadata !16413, metadata !DIExpression()) #25, !dbg !17133
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17133
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !17134
  ret void, !dbg !17135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17138, metadata !DIExpression()), !dbg !17139
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !17140
  br i1 %2, label %3, label %5, !dbg !17142

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !17143
  br label %6, !dbg !17145

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16436, metadata !DIExpression()) #25, !dbg !17146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !17149, !srcloc !16442
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17153, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17156
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17158, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !17156
  call void @llvm.dbg.value(metadata i32 %3, metadata !17154, metadata !DIExpression()), !dbg !17155
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !17161
  br i1 %4, label %6, label %5, !dbg !17163

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !17167
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17169, !srcloc !16442
  br label %8, !dbg !17170

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17171
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17172
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17173
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !17173
  br label %8, !dbg !17174

8:                                                ; preds = %6, %5
  ret void, !dbg !17174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17177, metadata !DIExpression()), !dbg !17178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17179
  %3 = load i8, i8* %2, align 1, !dbg !17179
  %4 = and i8 %3, 16, !dbg !17180
  %5 = icmp ne i8 %4, 0, !dbg !17181
  ret i1 %5, !dbg !17182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !17183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17185, metadata !DIExpression()), !dbg !17186
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17187
  %3 = load i8, i8* %2, align 1, !dbg !17188
  %4 = and i8 %3, -17, !dbg !17188
  store i8 %4, i8* %2, align 1, !dbg !17188
  ret void, !dbg !17189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17190 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17200, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17198, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17199, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i32 0, metadata !17201, metadata !DIExpression()), !dbg !17205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17206
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17208, !srcloc !16416
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !17208
  call void @llvm.dbg.value(metadata i32 %5, metadata !16413, metadata !DIExpression()) #25, !dbg !17210
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17210
  call void @llvm.dbg.value(metadata i32 %5, metadata !16407, metadata !DIExpression()) #25, !dbg !17206
  call void @llvm.dbg.value(metadata i32 %5, metadata !17203, metadata !DIExpression()), !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17201, metadata !DIExpression()), !dbg !17205
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !17211
  call void @llvm.dbg.value(metadata i32 %5, metadata !16428, metadata !DIExpression()) #25, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %5, metadata !16436, metadata !DIExpression()) #25, !dbg !17216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !17218, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17201, metadata !DIExpression()), !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17201, metadata !DIExpression()), !dbg !17205
  ret void, !dbg !17219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17220 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17224, metadata !DIExpression()), !dbg !17225
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17222, metadata !DIExpression()), !dbg !17225
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17223, metadata !DIExpression()), !dbg !17225
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !17226
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !17227
  ret void, !dbg !17228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !17229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17233, metadata !DIExpression()), !dbg !17235
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17234, metadata !DIExpression()), !dbg !17235
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !17236
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !17237
  %3 = icmp eq %union.anon* %1, null, !dbg !17238
  br i1 %3, label %21, label %4, !dbg !17240

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17241
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !17243
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !17244
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16601, metadata !DIExpression()) #25, !dbg !17245
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16607, metadata !DIExpression()) #25, !dbg !17245
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !17247
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16608, metadata !DIExpression()) #25, !dbg !17245
  %8 = icmp eq %struct._dnode* %7, null, !dbg !17248
  br i1 %8, label %19, label %9, !dbg !17247

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16608, metadata !DIExpression()) #25, !dbg !17245
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !17249
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16608, metadata !DIExpression()) #25, !dbg !17245
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !17250
  %13 = icmp sgt i32 %12, 0, !dbg !17251
  br i1 %13, label %14, label %16, !dbg !17252

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17253
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !17254
  br label %21, !dbg !17255

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !17248
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16608, metadata !DIExpression()) #25, !dbg !17245
  %18 = icmp eq %struct._dnode* %17, null, !dbg !17248
  br i1 %18, label %19, label %9, !dbg !17247, !llvm.loop !17256

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17258
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !17259
  br label %21, !dbg !17260

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !17261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17262 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17267, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17266, metadata !DIExpression()), !dbg !17268
  %4 = icmp eq i64 %3, -1, !dbg !17269
  br i1 %4, label %6, label %5, !dbg !17271

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.281(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !17272
  br label %6, !dbg !17274

6:                                                ; preds = %5, %2
  ret void, !dbg !17275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.281(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17276 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17279, metadata !DIExpression()), !dbg !17280
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17278, metadata !DIExpression()), !dbg !17280
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17281
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !17282
  ret void, !dbg !17283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17284 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17286, metadata !DIExpression()), !dbg !17294
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17295
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17287, metadata !DIExpression()), !dbg !17294
  call void @llvm.dbg.value(metadata i32 0, metadata !17288, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17297
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17299, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17297
  call void @llvm.dbg.value(metadata i32 undef, metadata !17290, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17288, metadata !DIExpression()), !dbg !17296
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17302
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !17303
  %7 = load i8, i8* %6, align 1, !dbg !17303
  %8 = and i8 %7, 40, !dbg !17304
  %9 = icmp eq i8 %8, 0, !dbg !17304
  call void @llvm.dbg.value(metadata i1 %9, metadata !17291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17305
  br i1 %9, label %10, label %17, !dbg !17306

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17307
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !17307
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !17307
  %14 = icmp eq %union.anon* %13, null, !dbg !17311
  br i1 %14, label %16, label %15, !dbg !17312

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !17313
  br label %16, !dbg !17315

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.280(%struct.k_thread* noundef nonnull %3) #26, !dbg !17316
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !17317
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !17318
  br label %17, !dbg !17319

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !17299
  call void @llvm.dbg.value(metadata i32 %18, metadata !16413, metadata !DIExpression()) #25, !dbg !17301
  call void @llvm.dbg.value(metadata i32 %18, metadata !16407, metadata !DIExpression()) #25, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %18, metadata !17290, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !17320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17320
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !17322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !17324, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17288, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17288, metadata !DIExpression()), !dbg !17296
  ret void, !dbg !17325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !17326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17328, metadata !DIExpression()), !dbg !17329
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17330
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !17331
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17332
  store %union.anon* null, %union.anon** %2, align 8, !dbg !17333
  ret void, !dbg !17334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !17335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17337, metadata !DIExpression()), !dbg !17338
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17339
  %3 = load i8, i8* %2, align 1, !dbg !17340
  %4 = and i8 %3, -3, !dbg !17340
  store i8 %4, i8* %2, align 1, !dbg !17340
  ret void, !dbg !17341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17344, metadata !DIExpression()), !dbg !17345
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !17346
  br i1 %2, label %3, label %7, !dbg !17348

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()) #25, !dbg !17349
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17352
  %5 = load i8, i8* %4, align 1, !dbg !17353
  %6 = and i8 %5, 127, !dbg !17353
  store i8 %6, i8* %4, align 1, !dbg !17353
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16578, metadata !DIExpression()) #25, !dbg !17354
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17356
  br label %7, !dbg !17357

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17358
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17359
  %10 = zext i1 %9 to i32, !dbg !17359
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !17360
  ret void, !dbg !17361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !17362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17364, metadata !DIExpression()), !dbg !17365
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17366
  %3 = load i8, i8* %2, align 1, !dbg !17367
  %4 = or i8 %3, 2, !dbg !17367
  store i8 %4, i8* %2, align 1, !dbg !17367
  ret void, !dbg !17368
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !17369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17371, metadata !DIExpression()), !dbg !17375
  call void @llvm.dbg.value(metadata i32 0, metadata !17372, metadata !DIExpression()), !dbg !17376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17377
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17379, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17379
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !17381
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17381
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !17377
  call void @llvm.dbg.value(metadata i32 %3, metadata !17374, metadata !DIExpression()), !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()), !dbg !17376
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !17382
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !17385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17385
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !17387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17389, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17372, metadata !DIExpression()), !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()), !dbg !17376
  ret void, !dbg !17390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17391 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17397, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i32 %0, metadata !17395, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !17396, metadata !DIExpression()), !dbg !17402
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17403
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !17404
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17405
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17406
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !17407
  call void @llvm.dbg.value(metadata i32 %6, metadata !17398, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i32 0, metadata !17399, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17409
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17411, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !17401, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !17399, metadata !DIExpression()), !dbg !17408
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17414
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17418
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !17419
  br i1 %10, label %11, label %12, !dbg !17420

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17421
  br label %12, !dbg !17423

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !17411
  call void @llvm.dbg.value(metadata i32 %13, metadata !16413, metadata !DIExpression()) #25, !dbg !17413
  call void @llvm.dbg.value(metadata i32 %13, metadata !16407, metadata !DIExpression()) #25, !dbg !17409
  call void @llvm.dbg.value(metadata i32 %13, metadata !17401, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !17424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17424
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !17426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !17428, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17399, metadata !DIExpression()), !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !17399, metadata !DIExpression()), !dbg !17408
  ret i32 %6, !dbg !17429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17430 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.value(metadata i64 undef, metadata !17437, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17434, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17436, metadata !DIExpression()), !dbg !17438
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17439
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17441
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17443, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17441
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17446
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17447
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !17012, metadata !DIExpression()) #25, !dbg !17448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17017, metadata !DIExpression()) #25, !dbg !17448
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !17450
  ret i32 %9, !dbg !17451
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17452 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17456, metadata !DIExpression()), !dbg !17461
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17457, metadata !DIExpression()), !dbg !17461
  call void @llvm.dbg.value(metadata i32 0, metadata !17458, metadata !DIExpression()), !dbg !17462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17463
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17465, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17463
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()), !dbg !17462
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17457, metadata !DIExpression()), !dbg !17461
  call void @llvm.dbg.value(metadata i32 undef, metadata !17458, metadata !DIExpression()), !dbg !17462
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !17468
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17457, metadata !DIExpression()), !dbg !17461
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !17471
  br i1 %5, label %7, label %6, !dbg !17473

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !17474
  br label %7, !dbg !17476

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17465
  call void @llvm.dbg.value(metadata i32 %8, metadata !16413, metadata !DIExpression()) #25, !dbg !17467
  call void @llvm.dbg.value(metadata i32 %8, metadata !16407, metadata !DIExpression()) #25, !dbg !17463
  call void @llvm.dbg.value(metadata i32 %8, metadata !17460, metadata !DIExpression()), !dbg !17462
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !17477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17477
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !17479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17481, !srcloc !16442
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17457, metadata !DIExpression()), !dbg !17461
  call void @llvm.dbg.value(metadata i32 undef, metadata !17458, metadata !DIExpression()), !dbg !17462
  ret %struct.k_thread* %4, !dbg !17482
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17483 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17485, metadata !DIExpression()), !dbg !17490
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17486, metadata !DIExpression()), !dbg !17490
  call void @llvm.dbg.value(metadata i32 0, metadata !17487, metadata !DIExpression()), !dbg !17491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17492
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17494, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17492
  call void @llvm.dbg.value(metadata i32 undef, metadata !17489, metadata !DIExpression()), !dbg !17491
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17486, metadata !DIExpression()), !dbg !17490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17487, metadata !DIExpression()), !dbg !17491
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !17497
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17486, metadata !DIExpression()), !dbg !17490
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !17500
  br i1 %5, label %8, label %6, !dbg !17502

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !17503
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !17505
  br label %8, !dbg !17506

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17494
  call void @llvm.dbg.value(metadata i32 %9, metadata !16413, metadata !DIExpression()) #25, !dbg !17496
  call void @llvm.dbg.value(metadata i32 %9, metadata !16407, metadata !DIExpression()) #25, !dbg !17492
  call void @llvm.dbg.value(metadata i32 %9, metadata !17489, metadata !DIExpression()), !dbg !17491
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !17507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17507
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !17509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17511, !srcloc !16442
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17486, metadata !DIExpression()), !dbg !17490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17487, metadata !DIExpression()), !dbg !17491
  ret %struct.k_thread* %4, !dbg !17512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17515, metadata !DIExpression()), !dbg !17516
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17371, metadata !DIExpression()) #25, !dbg !17517
  call void @llvm.dbg.value(metadata i32 0, metadata !17372, metadata !DIExpression()) #25, !dbg !17519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17520
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17522, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17522
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !17524
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17524
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !17520
  call void @llvm.dbg.value(metadata i32 %3, metadata !17374, metadata !DIExpression()) #25, !dbg !17519
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17519
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17525
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !17526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17526
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !17528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17530, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17372, metadata !DIExpression()) #25, !dbg !17519
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17519
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17531
  ret void, !dbg !17532
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17535, metadata !DIExpression()), !dbg !17541
  call void @llvm.dbg.value(metadata i32 %1, metadata !17536, metadata !DIExpression()), !dbg !17541
  call void @llvm.dbg.value(metadata i8 0, metadata !17537, metadata !DIExpression()), !dbg !17541
  call void @llvm.dbg.value(metadata i32 0, metadata !17538, metadata !DIExpression()), !dbg !17542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17543
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17545, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17540, metadata !DIExpression()), !dbg !17542
  call void @llvm.dbg.value(metadata i8 poison, metadata !17537, metadata !DIExpression()), !dbg !17541
  call void @llvm.dbg.value(metadata i32 undef, metadata !17538, metadata !DIExpression()), !dbg !17542
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !17548
  call void @llvm.dbg.value(metadata i1 %6, metadata !17537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17541
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !17551

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()) #25, !dbg !17552
  %11 = load i8, i8* %4, align 1, !dbg !17558
  %12 = and i8 %11, 127, !dbg !17558
  store i8 %12, i8* %4, align 1, !dbg !17558
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16578, metadata !DIExpression()) #25, !dbg !17559
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17561
  store i8 %9, i8* %8, align 2, !dbg !17562
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16587, metadata !DIExpression()) #25, !dbg !17563
  %13 = load i8, i8* %4, align 1, !dbg !17565
  %14 = or i8 %13, -128, !dbg !17565
  store i8 %14, i8* %4, align 1, !dbg !17565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16594, metadata !DIExpression()) #25, !dbg !17566
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16601, metadata !DIExpression()) #25, !dbg !17568
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16607, metadata !DIExpression()) #25, !dbg !17568
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17570
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16608, metadata !DIExpression()) #25, !dbg !17568
  %16 = icmp eq %struct._dnode* %15, null, !dbg !17571
  br i1 %16, label %26, label %17, !dbg !17570

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !16608, metadata !DIExpression()) #25, !dbg !17568
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !17572
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !16608, metadata !DIExpression()) #25, !dbg !17568
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !17573
  %21 = icmp sgt i32 %20, 0, !dbg !17574
  br i1 %21, label %22, label %23, !dbg !17575

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !17576
  br label %27, !dbg !17577

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !17571
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16608, metadata !DIExpression()) #25, !dbg !17568
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17571
  br i1 %25, label %26, label %17, !dbg !17570, !llvm.loop !17578

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !17580
  br label %27, !dbg !17581

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17582
  br label %29, !dbg !17583

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !17584
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !17545
  call void @llvm.dbg.value(metadata i32 %30, metadata !16413, metadata !DIExpression()) #25, !dbg !17547
  call void @llvm.dbg.value(metadata i32 %30, metadata !16407, metadata !DIExpression()) #25, !dbg !17543
  call void @llvm.dbg.value(metadata i32 %30, metadata !17540, metadata !DIExpression()), !dbg !17542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !17586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17586
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !17588
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !17590, !srcloc !16442
  call void @llvm.dbg.value(metadata i8 poison, metadata !17537, metadata !DIExpression()), !dbg !17541
  call void @llvm.dbg.value(metadata i32 undef, metadata !17538, metadata !DIExpression()), !dbg !17542
  ret i1 %6, !dbg !17591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17596, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.value(metadata i32 %1, metadata !17597, metadata !DIExpression()), !dbg !17599
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17600
  call void @llvm.dbg.value(metadata i1 %3, metadata !17598, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17599
  br i1 %3, label %4, label %12, !dbg !17601

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17603
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17604
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17604
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17604
  %9 = load i8, i8* %8, align 1, !dbg !17604
  %10 = icmp eq i8 %9, 0, !dbg !17605
  br i1 %10, label %11, label %12, !dbg !17606

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17607
  br label %12, !dbg !17609

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17611 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17613, metadata !DIExpression()), !dbg !17616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17617
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17619, !srcloc !16416
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17619
  call void @llvm.dbg.value(metadata i32 %2, metadata !16413, metadata !DIExpression()) #25, !dbg !17621
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17621
  call void @llvm.dbg.value(metadata i32 %2, metadata !16407, metadata !DIExpression()) #25, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %2, metadata !17615, metadata !DIExpression()), !dbg !17616
  call void @llvm.dbg.value(metadata i32 undef, metadata !17613, metadata !DIExpression()), !dbg !17616
  tail call fastcc void @z_sched_lock() #26, !dbg !17622
  call void @llvm.dbg.value(metadata i32 %2, metadata !16428, metadata !DIExpression()) #25, !dbg !17625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %2, metadata !16436, metadata !DIExpression()) #25, !dbg !17627
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17629, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17613, metadata !DIExpression()), !dbg !17616
  call void @llvm.dbg.value(metadata i32 undef, metadata !17613, metadata !DIExpression()), !dbg !17616
  ret void, !dbg !17630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17631 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17632
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17633
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !17633
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !17633
  %5 = load i8, i8* %4, align 1, !dbg !17634
  %6 = add i8 %5, -1, !dbg !17634
  store i8 %6, i8* %4, align 1, !dbg !17634
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17635, !srcloc !17637
  ret void, !dbg !17638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17639 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17641, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17645
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17647, !srcloc !16416
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17647
  call void @llvm.dbg.value(metadata i32 %2, metadata !16413, metadata !DIExpression()) #25, !dbg !17649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17649
  call void @llvm.dbg.value(metadata i32 %2, metadata !16407, metadata !DIExpression()) #25, !dbg !17645
  call void @llvm.dbg.value(metadata i32 %2, metadata !17643, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata i32 undef, metadata !17641, metadata !DIExpression()), !dbg !17644
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17650
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !17653
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !17653
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !17653
  %7 = load i8, i8* %6, align 1, !dbg !17654
  %8 = add i8 %7, 1, !dbg !17654
  store i8 %8, i8* %6, align 1, !dbg !17654
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !17655
  call void @llvm.dbg.value(metadata i32 %2, metadata !16428, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata i32 %2, metadata !16436, metadata !DIExpression()) #25, !dbg !17658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17660, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 1, metadata !17641, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata i32 undef, metadata !17641, metadata !DIExpression()), !dbg !17644
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17661
  ret void, !dbg !17662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !17663 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17664
  ret %struct.k_thread* %1, !dbg !17665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !17666 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17670, metadata !DIExpression()), !dbg !17675
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17671, metadata !DIExpression()), !dbg !17675
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17676
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17672, metadata !DIExpression()), !dbg !17675
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17677
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17673, metadata !DIExpression()), !dbg !17675
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17678
  call void @llvm.dbg.value(metadata i32 %5, metadata !17674, metadata !DIExpression()), !dbg !17675
  %6 = icmp sgt i32 %5, 0, !dbg !17679
  br i1 %6, label %17, label %7, !dbg !17681

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17682
  br i1 %8, label %17, label %9, !dbg !17684

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17685
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17685
  %12 = load i32, i32* %11, align 8, !dbg !17685
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17687
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17687
  %15 = load i32, i32* %14, align 8, !dbg !17687
  %16 = icmp ult i32 %12, %15, !dbg !17688
  br label %17, !dbg !17689

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17690
  ret i1 %18, !dbg !17691
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17692 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17709, metadata !DIExpression()), !dbg !17724
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17710, metadata !DIExpression()), !dbg !17724
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17725
  %5 = load i32, i32* %4, align 4, !dbg !17726
  %6 = add nsw i32 %5, 1, !dbg !17726
  store i32 %6, i32* %4, align 4, !dbg !17726
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17727
  store i32 %5, i32* %7, align 8, !dbg !17728
  %8 = load i32, i32* %4, align 4, !dbg !17729
  %9 = icmp eq i32 %8, 0, !dbg !17730
  br i1 %9, label %10, label %32, !dbg !17731

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17732
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17732
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17712, metadata !DIExpression()), !dbg !17732
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17732
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17732
  %14 = load i32, i32* %13, align 4, !dbg !17732
  %15 = shl i32 %14, 2, !dbg !17732
  %16 = alloca i8, i32 %15, align 8, !dbg !17732
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17732
  store i8* %16, i8** %17, align 4, !dbg !17732
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17732
  %19 = alloca i8, i32 %14, align 8, !dbg !17732
  store i8* %19, i8** %18, align 4, !dbg !17732
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17732
  store i32 -1, i32* %20, align 4, !dbg !17732
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17733
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17721, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17711, metadata !DIExpression()), !dbg !17724
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17735
  br i1 %22, label %23, label %24, !dbg !17732

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17735
  br label %32, !dbg !17736

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17711, metadata !DIExpression()), !dbg !17724
  %26 = load i32, i32* %4, align 4, !dbg !17737
  %27 = add nsw i32 %26, 1, !dbg !17737
  store i32 %27, i32* %4, align 4, !dbg !17737
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17739
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17739
  store i32 %26, i32* %29, align 8, !dbg !17740
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17733
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17721, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17711, metadata !DIExpression()), !dbg !17724
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17735
  br i1 %31, label %23, label %24, !dbg !17732, !llvm.loop !17741

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17743
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17744
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17745
  ret void, !dbg !17746
}

; Function Attrs: optsize
declare !dbg !17747 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17752 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17755 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17757, metadata !DIExpression()), !dbg !17759
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17758, metadata !DIExpression()), !dbg !17759
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17760
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17761
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17762
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17763
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17763
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17765
  br i1 %7, label %8, label %10, !dbg !17766

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17767
  store i32 0, i32* %9, align 4, !dbg !17769
  br label %10, !dbg !17770

10:                                               ; preds = %8, %2
  ret void, !dbg !17771
}

; Function Attrs: optsize
declare !dbg !17772 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17773 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17777, metadata !DIExpression()), !dbg !17780
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17778, metadata !DIExpression()), !dbg !17780
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17781
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17782
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17779, metadata !DIExpression()), !dbg !17780
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17778, metadata !DIExpression()), !dbg !17780
  ret %struct.k_thread* %4, !dbg !17783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17784 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17788, metadata !DIExpression()), !dbg !17789
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17790
  ret %struct.rbnode* %2, !dbg !17791
}

; Function Attrs: optsize
declare !dbg !17792 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17795 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17807, metadata !DIExpression()), !dbg !17811
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17812
  %3 = load i32, i32* %2, align 4, !dbg !17812
  %4 = icmp eq i32 %3, 0, !dbg !17814
  br i1 %4, label %10, label %5, !dbg !17815

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17808, metadata !DIExpression()), !dbg !17811
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17816, !range !9528
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17817
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17809, metadata !DIExpression()), !dbg !17811
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17818
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17810, metadata !DIExpression()), !dbg !17811
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17808, metadata !DIExpression()), !dbg !17811
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17811
  ret %struct.k_thread* %11, !dbg !17819
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17820 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17824, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i32 0, metadata !17825, metadata !DIExpression()), !dbg !17827
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17828
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17826, metadata !DIExpression()), !dbg !17827
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17829
  br i1 %3, label %8, label %4, !dbg !17830

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17831
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17833
  call void @llvm.dbg.value(metadata i32 1, metadata !17825, metadata !DIExpression()), !dbg !17827
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17828
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17826, metadata !DIExpression()), !dbg !17827
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17829
  br i1 %7, label %8, label %4, !dbg !17830, !llvm.loop !17834

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17827
  ret i32 %9, !dbg !17836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17837 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17839, metadata !DIExpression()), !dbg !17840
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17841
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17842
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17843
  ret %struct.k_thread* %4, !dbg !17844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17845 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17854, metadata !DIExpression()), !dbg !17855
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17856
  tail call fastcc void @sys_dlist_init.288(%struct._dnode* noundef nonnull %2) #26, !dbg !17857
  ret void, !dbg !17858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.288(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17859 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17863, metadata !DIExpression()), !dbg !17864
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17865
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17866
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17867
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17868
  ret void, !dbg !17869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17870 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17871
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17872
  ret void, !dbg !17873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17879, metadata !DIExpression()), !dbg !17880
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17881
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17881
  %4 = load i8, i8* %3, align 2, !dbg !17881
  %5 = sext i8 %4 to i32, !dbg !17882
  ret i32 %5, !dbg !17883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17888, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata i32 %1, metadata !17889, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17890, metadata !DIExpression()), !dbg !17891
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17892
  ret void, !dbg !17893
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17894 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17895
  br i1 %1, label %8, label %2, !dbg !17896

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17897
  br i1 %3, label %8, label %4, !dbg !17898

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17899
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17900
  %7 = xor i1 %6, true, !dbg !17898
  br label %8, !dbg !17898

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17902 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17903, !range !8717
  %2 = icmp eq i8 %1, 0, !dbg !17903
  ret i1 %2, !dbg !17904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17905 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !17908
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17910, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !17912
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !17912
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !17908
  call void @llvm.dbg.value(metadata i32 undef, metadata !17907, metadata !DIExpression()), !dbg !17913
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17914
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16570, metadata !DIExpression()) #25, !dbg !17917
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17919
  %4 = load i8, i8* %3, align 1, !dbg !17920
  %5 = and i8 %4, 127, !dbg !17920
  store i8 %5, i8* %3, align 1, !dbg !17920
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16578, metadata !DIExpression()) #25, !dbg !17921
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17923
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17924
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16587, metadata !DIExpression()) #25, !dbg !17925
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17927
  %8 = load i8, i8* %7, align 1, !dbg !17928
  %9 = or i8 %8, -128, !dbg !17928
  store i8 %9, i8* %7, align 1, !dbg !17928
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16594, metadata !DIExpression()) #25, !dbg !17929
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16601, metadata !DIExpression()) #25, !dbg !17931
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16607, metadata !DIExpression()) #25, !dbg !17931
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17933
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16608, metadata !DIExpression()) #25, !dbg !17931
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17934
  br i1 %11, label %22, label %12, !dbg !17933

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16608, metadata !DIExpression()) #25, !dbg !17931
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17935
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16608, metadata !DIExpression()) #25, !dbg !17931
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17936
  %16 = icmp sgt i32 %15, 0, !dbg !17937
  br i1 %16, label %17, label %19, !dbg !17938

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17939
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17940
  br label %24, !dbg !17941

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17934
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16608, metadata !DIExpression()) #25, !dbg !17931
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17934
  br i1 %21, label %22, label %12, !dbg !17933, !llvm.loop !17942

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17944
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17945
  br label %24, !dbg !17946

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17910
  call void @llvm.dbg.value(metadata i32 %25, metadata !16413, metadata !DIExpression()) #25, !dbg !17912
  call void @llvm.dbg.value(metadata i32 %25, metadata !16407, metadata !DIExpression()) #25, !dbg !17908
  call void @llvm.dbg.value(metadata i32 %25, metadata !17907, metadata !DIExpression()), !dbg !17913
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17947
  call void @llvm.dbg.value(metadata i32 undef, metadata !17012, metadata !DIExpression()) #25, !dbg !17948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17017, metadata !DIExpression()) #25, !dbg !17948
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17950
  ret void, !dbg !17951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17952 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17956, metadata !DIExpression()), !dbg !17959
  %3 = icmp eq i64 %2, -1, !dbg !17960
  br i1 %3, label %4, label %6, !dbg !17962

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17963
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17965
  br label %11, !dbg !17966

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17957, metadata !DIExpression()), !dbg !17959
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17967
  %8 = sext i32 %7 to i64, !dbg !17967
  call void @llvm.dbg.value(metadata i64 %8, metadata !17957, metadata !DIExpression()), !dbg !17959
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17968
  %10 = trunc i64 %9 to i32, !dbg !17968
  call void @llvm.dbg.value(metadata i32 %10, metadata !17958, metadata !DIExpression()), !dbg !17959
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17959
  ret i32 %12, !dbg !17969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17974, metadata !DIExpression()), !dbg !17975
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17976, !srcloc !17978
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17979
  ret void, !dbg !17980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17981 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17985, metadata !DIExpression()), !dbg !17989
  %2 = icmp eq i64 %0, 0, !dbg !17990
  br i1 %2, label %3, label %4, !dbg !17992

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17993
  br label %29, !dbg !17995

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17987, metadata !DIExpression()), !dbg !17989
  %5 = icmp sgt i64 %0, -3, !dbg !17996
  br i1 %5, label %6, label %10, !dbg !17998

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17999
  %8 = trunc i64 %0 to i32, !dbg !18001
  %9 = add i32 %7, %8, !dbg !18001
  call void @llvm.dbg.value(metadata i32 %9, metadata !17986, metadata !DIExpression()), !dbg !17989
  br label %13, !dbg !18002

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !18003
  %12 = sub i32 -2, %11, !dbg !18003
  call void @llvm.dbg.value(metadata i32 %12, metadata !17986, metadata !DIExpression()), !dbg !17989
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !18005
  call void @llvm.dbg.value(metadata i32 %14, metadata !17986, metadata !DIExpression()), !dbg !17989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !18006
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18008, !srcloc !16416
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !18008
  call void @llvm.dbg.value(metadata i32 %16, metadata !16413, metadata !DIExpression()) #25, !dbg !18010
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18010
  call void @llvm.dbg.value(metadata i32 %16, metadata !16407, metadata !DIExpression()) #25, !dbg !18006
  call void @llvm.dbg.value(metadata i32 %16, metadata !17988, metadata !DIExpression()), !dbg !17989
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18011
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !18012
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !18013
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18014
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !18015
  tail call fastcc void @z_add_thread_timeout.281(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !18015
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18016
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !18017
  call void @llvm.dbg.value(metadata i32 %16, metadata !17012, metadata !DIExpression()) #25, !dbg !18018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17017, metadata !DIExpression()) #25, !dbg !18018
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !18020
  %22 = zext i32 %14 to i64, !dbg !18021
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !18022
  %24 = zext i32 %23 to i64, !dbg !18022
  %25 = sub nsw i64 %22, %24, !dbg !18023
  call void @llvm.dbg.value(metadata i64 %25, metadata !17985, metadata !DIExpression()), !dbg !17989
  %26 = icmp sgt i64 %25, 0, !dbg !18024
  %27 = select i1 %26, i64 %25, i64 0, !dbg !18024
  %28 = trunc i64 %27 to i32, !dbg !18024
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17989
  ret i32 %30, !dbg !18025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !18026 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18028, metadata !DIExpression()), !dbg !18029
  call void @llvm.dbg.value(metadata i64 %0, metadata !16448, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i32 10000, metadata !16451, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i32 1000, metadata !16452, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i8 1, metadata !16453, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i1 false, metadata !16454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18030
  call void @llvm.dbg.value(metadata i1 false, metadata !16455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18030
  call void @llvm.dbg.value(metadata i8 0, metadata !16456, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i1 false, metadata !16457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18030
  call void @llvm.dbg.value(metadata i1 true, metadata !16458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18030
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i64 %0, metadata !16448, metadata !DIExpression()), !dbg !18030
  %2 = udiv i64 %0, 10, !dbg !18032
  ret i64 %2, !dbg !18036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !18037 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18038, !srcloc !18040
  tail call void @z_impl_k_yield() #26, !dbg !18041
  ret void, !dbg !18042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !18043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18047, metadata !DIExpression()), !dbg !18049
  %2 = sext i32 %0 to i64, !dbg !18050
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !18051
  call void @llvm.dbg.value(metadata i64 %3, metadata !18048, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18049
  %4 = shl i64 %3, 32, !dbg !18052
  %5 = ashr exact i64 %4, 32, !dbg !18052
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !18053
  call void @llvm.dbg.value(metadata i32 %6, metadata !18048, metadata !DIExpression()), !dbg !18049
  %7 = sext i32 %6 to i64, !dbg !18054
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !18055
  %9 = trunc i64 %8 to i32, !dbg !18055
  ret i32 %9, !dbg !18056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !18057 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18059, metadata !DIExpression()), !dbg !18060
  call void @llvm.dbg.value(metadata i64 %0, metadata !16448, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16451, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i32 10000, metadata !16452, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i8 1, metadata !16453, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i1 false, metadata !16454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18061
  call void @llvm.dbg.value(metadata i1 true, metadata !16455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18061
  call void @llvm.dbg.value(metadata i8 0, metadata !16456, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i1 false, metadata !16457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18061
  call void @llvm.dbg.value(metadata i1 true, metadata !16458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18061
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !18061
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !18061
  %2 = add i64 %0, 99, !dbg !18063
  call void @llvm.dbg.value(metadata i64 %2, metadata !16448, metadata !DIExpression()), !dbg !18061
  %3 = udiv i64 %2, 100, !dbg !18064
  ret i64 %3, !dbg !18065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !18066 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18068, metadata !DIExpression()), !dbg !18069
  call void @llvm.dbg.value(metadata i64 %0, metadata !16448, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.value(metadata i32 10000, metadata !16451, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16452, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.value(metadata i8 1, metadata !16453, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.value(metadata i1 false, metadata !16454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18070
  call void @llvm.dbg.value(metadata i1 false, metadata !16455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18070
  call void @llvm.dbg.value(metadata i8 0, metadata !16456, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.value(metadata i1 true, metadata !16457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18070
  call void @llvm.dbg.value(metadata i1 false, metadata !16458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18070
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !18070
  call void @llvm.dbg.value(metadata i64 0, metadata !16459, metadata !DIExpression()), !dbg !18070
  %2 = mul i64 %0, 100, !dbg !18072
  ret i64 %2, !dbg !18074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18077, metadata !DIExpression()), !dbg !18078
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !18079
  br i1 %2, label %14, label %3, !dbg !18081

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !18082
  %5 = icmp slt i32 %4, 0, !dbg !18084
  br i1 %5, label %6, label %10, !dbg !18085

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18086
  %8 = load i8, i8* %7, align 1, !dbg !18086
  %9 = icmp eq i8 %8, 16, !dbg !18089
  br i1 %9, label %10, label %14, !dbg !18090

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !18091
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !18092
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18093, !srcloc !17052
  call void @llvm.dbg.value(metadata i32 %11, metadata !17048, metadata !DIExpression()) #25, !dbg !18097
  %12 = icmp eq i32 %11, 0, !dbg !18098
  br i1 %12, label %13, label %14, !dbg !18099

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !18100
  br label %14, !dbg !18102

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18106, metadata !DIExpression()), !dbg !18107
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18108
  %3 = load i8, i8* %2, align 1, !dbg !18108
  %4 = and i8 %3, 2, !dbg !18109
  %5 = icmp ne i8 %4, 0, !dbg !18110
  ret i1 %5, !dbg !18111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !18112 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18117
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18116, metadata !DIExpression()), !dbg !18118
  ret %struct.k_thread* %1, !dbg !18119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18120 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18121, !srcloc !17052
  call void @llvm.dbg.value(metadata i32 %1, metadata !17048, metadata !DIExpression()) #25, !dbg !18124
  %2 = icmp eq i32 %1, 0, !dbg !18125
  br i1 %2, label %3, label %8, !dbg !18126

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18127
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !18128
  %6 = icmp ne i32 %5, 0, !dbg !18126
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18132, metadata !DIExpression()), !dbg !18134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !18135
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18137, !srcloc !16416
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18137
  call void @llvm.dbg.value(metadata i32 %3, metadata !16413, metadata !DIExpression()) #25, !dbg !18139
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18139
  call void @llvm.dbg.value(metadata i32 %3, metadata !16407, metadata !DIExpression()) #25, !dbg !18135
  call void @llvm.dbg.value(metadata i32 %3, metadata !18133, metadata !DIExpression()), !dbg !18134
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18140
  %5 = load i8, i8* %4, align 4, !dbg !18140
  %6 = and i8 %5, 1, !dbg !18142
  %7 = icmp eq i8 %6, 0, !dbg !18143
  br i1 %7, label %9, label %8, !dbg !18144

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !18145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !18145
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !18148
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18150, !srcloc !16442
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !18151, !srcloc !18153
  br label %24, !dbg !18154

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18155
  %11 = load i8, i8* %10, align 1, !dbg !18155
  %12 = and i8 %11, 8, !dbg !18157
  %13 = icmp eq i8 %12, 0, !dbg !18158
  br i1 %13, label %15, label %14, !dbg !18159

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !18160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !18160
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !18163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18165, !srcloc !16442
  br label %24, !dbg !18166

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !18167
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18168
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18170
  br i1 %17, label %18, label %23, !dbg !18171

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18172, !srcloc !17052
  call void @llvm.dbg.value(metadata i32 %19, metadata !17048, metadata !DIExpression()) #25, !dbg !18175
  %20 = icmp eq i32 %19, 0, !dbg !18176
  br i1 %20, label %21, label %23, !dbg !18177

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !17012, metadata !DIExpression()) #25, !dbg !18178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17017, metadata !DIExpression()) #25, !dbg !18178
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !18181
  br label %23, !dbg !18182

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !16428, metadata !DIExpression()) #25, !dbg !18183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !18183
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !18185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18187, !srcloc !16442
  br label %24, !dbg !18188

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !18188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18191, metadata !DIExpression()), !dbg !18192
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18193
  %3 = load i8, i8* %2, align 1, !dbg !18193
  %4 = and i8 %3, 8, !dbg !18195
  %5 = icmp eq i8 %4, 0, !dbg !18196
  br i1 %5, label %6, label %20, !dbg !18197

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18198
  %8 = or i8 %7, 8, !dbg !18198
  store i8 %8, i8* %2, align 1, !dbg !18198
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !18200
  br i1 %9, label %10, label %12, !dbg !18202

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()) #25, !dbg !18203
  %11 = and i8 %8, 95, !dbg !18206
  store i8 %11, i8* %2, align 1, !dbg !18206
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16578, metadata !DIExpression()) #25, !dbg !18207
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !18209
  br label %12, !dbg !18210

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18211
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !18211
  %15 = icmp eq %union.anon* %14, null, !dbg !18213
  br i1 %15, label %17, label %16, !dbg !18214

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !18215
  br label %17, !dbg !18217

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !18218
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18219
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !18220
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !18221
  br label %20, !dbg !18222

20:                                               ; preds = %17, %1
  ret void, !dbg !18223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18224 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18228, metadata !DIExpression()), !dbg !18230
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !18231
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18229, metadata !DIExpression()), !dbg !18230
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18232
  br i1 %3, label %10, label %4, !dbg !18233

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !18234
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !18236
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18237, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.value(metadata i32 0, metadata !18242, metadata !DIExpression()), !dbg !18243
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18245
  store i32 0, i32* %7, align 4, !dbg !18246
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !18247
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !18231
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18229, metadata !DIExpression()), !dbg !18230
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18232
  br i1 %9, label %10, label %4, !dbg !18233, !llvm.loop !18248

10:                                               ; preds = %4, %1
  ret void, !dbg !18250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18251 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18256, metadata !DIExpression()), !dbg !18259
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18255, metadata !DIExpression()), !dbg !18259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !18260
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18262, !srcloc !16416
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18262
  call void @llvm.dbg.value(metadata i32 %4, metadata !16413, metadata !DIExpression()) #25, !dbg !18264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18264
  call void @llvm.dbg.value(metadata i32 %4, metadata !16407, metadata !DIExpression()) #25, !dbg !18260
  call void @llvm.dbg.value(metadata i32 %4, metadata !18257, metadata !DIExpression()), !dbg !18259
  call void @llvm.dbg.value(metadata i32 0, metadata !18258, metadata !DIExpression()), !dbg !18259
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18265
  %6 = load i8, i8* %5, align 1, !dbg !18265
  %7 = and i8 %6, 8, !dbg !18267
  %8 = icmp eq i8 %7, 0, !dbg !18268
  br i1 %8, label %9, label %24, !dbg !18269

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !18256, metadata !DIExpression()), !dbg !18259
  %11 = icmp eq i64 %10, 0, !dbg !18270
  br i1 %11, label %24, label %12, !dbg !18272

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18273
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !18275
  br i1 %14, label %24, label %15, !dbg !18276

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18277
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !18277
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !18278
  %19 = icmp eq %union.anon* %17, %18, !dbg !18279
  br i1 %19, label %24, label %20, !dbg !18280

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18281
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !18283
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18284
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !18285
  call void @llvm.dbg.value(metadata i32 %4, metadata !17012, metadata !DIExpression()) #25, !dbg !18286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17017, metadata !DIExpression()) #25, !dbg !18286
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !18288
  call void @llvm.dbg.value(metadata i32 %23, metadata !18258, metadata !DIExpression()), !dbg !18259
  br label %26, !dbg !18289

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !18290
  call void @llvm.dbg.value(metadata i32 %25, metadata !18258, metadata !DIExpression()), !dbg !18259
  call void @llvm.dbg.value(metadata i32 %4, metadata !16428, metadata !DIExpression()) #25, !dbg !18291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !18291
  call void @llvm.dbg.value(metadata i32 %4, metadata !16436, metadata !DIExpression()) #25, !dbg !18293
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !18295, !srcloc !16442
  br label %26, !dbg !18296

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !18259
  ret i32 %27, !dbg !18297
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18298 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18302, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i32 %1, metadata !18303, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i8* %2, metadata !18304, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i8 0, metadata !18306, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i32 0, metadata !18307, metadata !DIExpression()), !dbg !18311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !18312
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18314, !srcloc !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16413, metadata !DIExpression()) #25, !dbg !18316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16414, metadata !DIExpression()) #25, !dbg !18316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16407, metadata !DIExpression()) #25, !dbg !18312
  call void @llvm.dbg.value(metadata i32 undef, metadata !18309, metadata !DIExpression()), !dbg !18311
  call void @llvm.dbg.value(metadata i8 poison, metadata !18306, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i32 undef, metadata !18307, metadata !DIExpression()), !dbg !18311
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !18317
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18305, metadata !DIExpression()), !dbg !18310
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18320
  br i1 %7, label %12, label %8, !dbg !18322

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18323, metadata !DIExpression()), !dbg !18331
  call void @llvm.dbg.value(metadata i32 %1, metadata !18329, metadata !DIExpression()), !dbg !18331
  call void @llvm.dbg.value(metadata i8* %2, metadata !18330, metadata !DIExpression()), !dbg !18331
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18237, metadata !DIExpression()), !dbg !18334
  call void @llvm.dbg.value(metadata i32 %1, metadata !18242, metadata !DIExpression()), !dbg !18334
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !18336
  store i32 %1, i32* %9, align 4, !dbg !18337
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !18338
  store i8* %2, i8** %10, align 4, !dbg !18339
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !18340
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !18341
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !18342
  call void @llvm.dbg.value(metadata i8 1, metadata !18306, metadata !DIExpression()), !dbg !18310
  br label %12, !dbg !18343

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !18314
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !18314
  call void @llvm.dbg.value(metadata i32 %14, metadata !16413, metadata !DIExpression()) #25, !dbg !18316
  call void @llvm.dbg.value(metadata i32 %14, metadata !16407, metadata !DIExpression()) #25, !dbg !18312
  call void @llvm.dbg.value(metadata i32 %14, metadata !18309, metadata !DIExpression()), !dbg !18311
  call void @llvm.dbg.value(metadata i8 poison, metadata !18306, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()) #25, !dbg !18344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16433, metadata !DIExpression()) #25, !dbg !18344
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !18346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18348, !srcloc !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !18307, metadata !DIExpression()), !dbg !18311
  ret i1 %13, !dbg !18349
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18350 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18356, metadata !DIExpression()), !dbg !18361
  call void @llvm.dbg.value(metadata i64 undef, metadata !18358, metadata !DIExpression()), !dbg !18361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18355, metadata !DIExpression()), !dbg !18361
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18357, metadata !DIExpression()), !dbg !18361
  call void @llvm.dbg.value(metadata i8** %4, metadata !18359, metadata !DIExpression()), !dbg !18361
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !18362
  call void @llvm.dbg.value(metadata i32 %6, metadata !18360, metadata !DIExpression()), !dbg !18361
  %7 = icmp eq i8** %4, null, !dbg !18363
  br i1 %7, label %12, label %8, !dbg !18365

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18366
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18368
  %11 = load i8*, i8** %10, align 4, !dbg !18368
  store i8* %11, i8** %4, align 4, !dbg !18369
  br label %12, !dbg !18370

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18372 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18374
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18375
  ret void, !dbg !18376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18377 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18387, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18385, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18386, metadata !DIExpression()), !dbg !18404
  %5 = icmp eq i64 %4, -1, !dbg !18405
  br i1 %5, label %55, label %6, !dbg !18407

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18408
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !18409
  call void @llvm.dbg.value(metadata i32 0, metadata !18388, metadata !DIExpression()), !dbg !18410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18418
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18420, !srcloc !18426
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !18420
  call void @llvm.dbg.value(metadata i32 %9, metadata !18423, metadata !DIExpression()) #25, !dbg !18427
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18427
  call void @llvm.dbg.value(metadata i32 %9, metadata !18417, metadata !DIExpression()) #25, !dbg !18418
  call void @llvm.dbg.value(metadata i32 %9, metadata !18394, metadata !DIExpression()), !dbg !18410
  call void @llvm.dbg.value(metadata i32 undef, metadata !18388, metadata !DIExpression()), !dbg !18410
  %10 = icmp slt i64 %4, -1, !dbg !18428
  br i1 %10, label %11, label %17, !dbg !18429

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !18430
  %13 = add i64 %4, %12, !dbg !18431
  %14 = sub i64 -2, %13, !dbg !18431
  call void @llvm.dbg.value(metadata i64 %14, metadata !18398, metadata !DIExpression()), !dbg !18432
  %15 = icmp sgt i64 %14, 1, !dbg !18433
  %16 = select i1 %15, i64 %14, i64 1, !dbg !18433
  br label %22, !dbg !18434

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !18435
  %19 = tail call fastcc i32 @elapsed.299() #26, !dbg !18437
  %20 = sext i32 %19 to i64, !dbg !18437
  %21 = add nsw i64 %18, %20, !dbg !18438
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !18439
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18440
  store i64 %23, i64* %24, align 8, !dbg !18441
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !18442
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !18395, metadata !DIExpression()), !dbg !18444
  %26 = icmp eq %struct._timeout* %25, null, !dbg !18445
  br i1 %26, label %42, label %27, !dbg !18445

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !18446
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !18395, metadata !DIExpression()), !dbg !18444
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !18450
  %31 = load i64, i64* %30, align 8, !dbg !18450
  %32 = icmp slt i64 %28, %31, !dbg !18451
  br i1 %32, label %33, label %38, !dbg !18452

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !18450
  %35 = sub nsw i64 %31, %28, !dbg !18453
  store i64 %35, i64* %34, align 8, !dbg !18453
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !18455
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18456
  tail call fastcc void @sys_dlist_insert.300(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !18457
  br label %44, !dbg !18458

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !18459
  store i64 %39, i64* %24, align 8, !dbg !18459
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !18460
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !18395, metadata !DIExpression()), !dbg !18444
  %41 = icmp eq %struct._timeout* %40, null, !dbg !18445
  br i1 %41, label %42, label %27, !dbg !18445, !llvm.loop !18461

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18463
  tail call fastcc void @sys_dlist_append.301(%struct._dnode* noundef %43) #26, !dbg !18466
  br label %44, !dbg !18467

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !18468
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !18469
  br i1 %46, label %47, label %54, !dbg !18470

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !18471
  call void @llvm.dbg.value(metadata i32 %48, metadata !18401, metadata !DIExpression()), !dbg !18472
  %49 = icmp ne i32 %48, 0, !dbg !18473
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !18475
  br i1 %52, label %54, label %53, !dbg !18475

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !18476
  br label %54, !dbg !18478

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !18479, metadata !DIExpression()) #25, !dbg !18485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18485
  call void @llvm.dbg.value(metadata i32 %9, metadata !18487, metadata !DIExpression()) #25, !dbg !18490
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18492, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 undef, metadata !18388, metadata !DIExpression()), !dbg !18410
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !18494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.299() unnamed_addr #1 !dbg !18495 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18498
  %2 = icmp eq i32 %1, 0, !dbg !18499
  br i1 %2, label %3, label %5, !dbg !18498

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18500
  br label %5, !dbg !18498

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18498
  ret i32 %6, !dbg !18501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !18502 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.304() #26, !dbg !18508
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18506, metadata !DIExpression()), !dbg !18509
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18510
  ret %struct._timeout* %2, !dbg !18511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.300(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !18512 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18516, metadata !DIExpression()), !dbg !18520
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18517, metadata !DIExpression()), !dbg !18520
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18521
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18521
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18518, metadata !DIExpression()), !dbg !18520
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18522
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18523
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18524
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18525
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18526
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18527
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18528
  ret void, !dbg !18529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !18530 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18534, metadata !DIExpression()), !dbg !18536
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18537
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.302(%struct._dnode* noundef %2) #26, !dbg !18538
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18535, metadata !DIExpression()), !dbg !18536
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18539
  ret %struct._timeout* %4, !dbg !18540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.301(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !18541 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18546, metadata !DIExpression()), !dbg !18549
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18547, metadata !DIExpression()), !dbg !18549
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18550
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18548, metadata !DIExpression()), !dbg !18549
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18551
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18552
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18553
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18554
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18555
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18556
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18557
  ret void, !dbg !18558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18559 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !18564
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18561, metadata !DIExpression()), !dbg !18565
  %2 = tail call fastcc i32 @elapsed.299() #26, !dbg !18566
  call void @llvm.dbg.value(metadata i32 %2, metadata !18562, metadata !DIExpression()), !dbg !18565
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18567
  br i1 %3, label %14, label %4, !dbg !18569

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18570
  %6 = load i64, i64* %5, align 8, !dbg !18570
  %7 = sext i32 %2 to i64, !dbg !18571
  %8 = sub nsw i64 %6, %7, !dbg !18572
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18573
  br i1 %9, label %14, label %10, !dbg !18574

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18575
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18575
  %13 = trunc i64 %12 to i32, !dbg !18575
  call void @llvm.dbg.value(metadata i32 %13, metadata !18563, metadata !DIExpression()), !dbg !18565
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18577
  call void @llvm.dbg.value(metadata i32 %15, metadata !18563, metadata !DIExpression()), !dbg !18565
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18578
  %17 = icmp ne i32 %16, 0, !dbg !18580
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18581
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18581
  call void @llvm.dbg.value(metadata i32 %20, metadata !18563, metadata !DIExpression()), !dbg !18565
  ret i32 %20, !dbg !18582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.302(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18583 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18587, metadata !DIExpression()), !dbg !18589
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18588, metadata !DIExpression()), !dbg !18589
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18590
  br i1 %2, label %5, label %3, !dbg !18591

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.303(%struct._dnode* noundef nonnull %0) #26, !dbg !18592
  br label %5, !dbg !18591

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18591
  ret %struct._dnode* %6, !dbg !18593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.303(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18594 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18596, metadata !DIExpression()), !dbg !18598
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18597, metadata !DIExpression()), !dbg !18598
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18599
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18600
  br i1 %3, label %7, label %4, !dbg !18601

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18602
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18602
  br label %7, !dbg !18601

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18601
  ret %struct._dnode* %8, !dbg !18603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.304() unnamed_addr #10 !dbg !18604 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18608, metadata !DIExpression()), !dbg !18609
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.305() #26, !dbg !18610
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18610
  ret %struct._dnode* %3, !dbg !18611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.305() unnamed_addr #10 !dbg !18612 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18616, metadata !DIExpression()), !dbg !18617
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18618
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18619
  ret i1 %2, !dbg !18620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18621 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18625, metadata !DIExpression()), !dbg !18630
  call void @llvm.dbg.value(metadata i32 -22, metadata !18626, metadata !DIExpression()), !dbg !18630
  call void @llvm.dbg.value(metadata i32 0, metadata !18627, metadata !DIExpression()), !dbg !18631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18632
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18634, !srcloc !18426
  call void @llvm.dbg.value(metadata i32 undef, metadata !18423, metadata !DIExpression()) #25, !dbg !18636
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18636
  call void @llvm.dbg.value(metadata i32 undef, metadata !18417, metadata !DIExpression()) #25, !dbg !18632
  call void @llvm.dbg.value(metadata i32 undef, metadata !18629, metadata !DIExpression()), !dbg !18631
  call void @llvm.dbg.value(metadata i32 -22, metadata !18626, metadata !DIExpression()), !dbg !18630
  call void @llvm.dbg.value(metadata i32 undef, metadata !18627, metadata !DIExpression()), !dbg !18631
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18626, metadata !DIExpression()), !dbg !18630
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.308(%struct._dnode* noundef %3) #26, !dbg !18637
  br i1 %4, label %5, label %6, !dbg !18641

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !18642
  call void @llvm.dbg.value(metadata i32 0, metadata !18626, metadata !DIExpression()), !dbg !18630
  br label %6, !dbg !18644

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !18630
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !18634
  call void @llvm.dbg.value(metadata i32 %8, metadata !18423, metadata !DIExpression()) #25, !dbg !18636
  call void @llvm.dbg.value(metadata i32 %8, metadata !18417, metadata !DIExpression()) #25, !dbg !18632
  call void @llvm.dbg.value(metadata i32 %8, metadata !18629, metadata !DIExpression()), !dbg !18631
  call void @llvm.dbg.value(metadata i32 %7, metadata !18626, metadata !DIExpression()), !dbg !18630
  call void @llvm.dbg.value(metadata i32 undef, metadata !18479, metadata !DIExpression()) #25, !dbg !18645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18645
  call void @llvm.dbg.value(metadata i32 undef, metadata !18487, metadata !DIExpression()) #25, !dbg !18647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !18649, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 undef, metadata !18627, metadata !DIExpression()), !dbg !18631
  ret i32 %7, !dbg !18650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.308(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18651 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18657, metadata !DIExpression()), !dbg !18658
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18659
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18659
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18660
  ret i1 %4, !dbg !18661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !18662 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18664, metadata !DIExpression()), !dbg !18665
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !18666
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18668
  br i1 %3, label %10, label %4, !dbg !18669

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18670
  %6 = load i64, i64* %5, align 8, !dbg !18670
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18672
  %8 = load i64, i64* %7, align 8, !dbg !18673
  %9 = add nsw i64 %8, %6, !dbg !18673
  store i64 %9, i64* %7, align 8, !dbg !18673
  br label %10, !dbg !18674

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18675
  tail call fastcc void @sys_dlist_remove.309(%struct._dnode* noundef %11) #26, !dbg !18676
  ret void, !dbg !18677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.309(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18678 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18682, metadata !DIExpression()), !dbg !18685
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18686
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18686
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18683, metadata !DIExpression()), !dbg !18685
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18687
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18687
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18684, metadata !DIExpression()), !dbg !18685
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18688
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18689
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18690
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18691
  tail call fastcc void @sys_dnode_init.310(%struct._dnode* noundef %0) #26, !dbg !18692
  ret void, !dbg !18693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.310(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18694 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18696, metadata !DIExpression()), !dbg !18697
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18698
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18699
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18700
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18701
  ret void, !dbg !18702
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18703 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18709, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i64 0, metadata !18710, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i32 0, metadata !18711, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18716
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18718, !srcloc !18426
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18718
  call void @llvm.dbg.value(metadata i32 %3, metadata !18423, metadata !DIExpression()) #25, !dbg !18720
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18720
  call void @llvm.dbg.value(metadata i32 %3, metadata !18417, metadata !DIExpression()) #25, !dbg !18716
  call void @llvm.dbg.value(metadata i32 %3, metadata !18713, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.value(metadata i64 0, metadata !18710, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i32 undef, metadata !18711, metadata !DIExpression()), !dbg !18715
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18721
  call void @llvm.dbg.value(metadata i64 %4, metadata !18710, metadata !DIExpression()), !dbg !18714
  call void @llvm.dbg.value(metadata i32 %3, metadata !18479, metadata !DIExpression()) #25, !dbg !18724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18724
  call void @llvm.dbg.value(metadata i32 %3, metadata !18487, metadata !DIExpression()) #25, !dbg !18726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18728, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 undef, metadata !18711, metadata !DIExpression()), !dbg !18715
  ret i64 %4, !dbg !18729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18730 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18732, metadata !DIExpression()), !dbg !18736
  call void @llvm.dbg.value(metadata i64 0, metadata !18733, metadata !DIExpression()), !dbg !18736
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.311(%struct._timeout* noundef %0) #26, !dbg !18737
  br i1 %2, label %21, label %3, !dbg !18739

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18740
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18734, metadata !DIExpression()), !dbg !18741
  call void @llvm.dbg.value(metadata i64 0, metadata !18733, metadata !DIExpression()), !dbg !18736
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18742
  br i1 %5, label %16, label %6, !dbg !18744

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18734, metadata !DIExpression()), !dbg !18741
  call void @llvm.dbg.value(metadata i64 %8, metadata !18733, metadata !DIExpression()), !dbg !18736
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18745
  %10 = load i64, i64* %9, align 8, !dbg !18745
  %11 = add nsw i64 %10, %8, !dbg !18747
  call void @llvm.dbg.value(metadata i64 %11, metadata !18733, metadata !DIExpression()), !dbg !18736
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18748
  br i1 %12, label %16, label %13, !dbg !18750

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18751
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18734, metadata !DIExpression()), !dbg !18741
  call void @llvm.dbg.value(metadata i64 %11, metadata !18733, metadata !DIExpression()), !dbg !18736
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18742
  br i1 %15, label %16, label %6, !dbg !18744, !llvm.loop !18752

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18736
  call void @llvm.dbg.value(metadata i64 %17, metadata !18733, metadata !DIExpression()), !dbg !18736
  %18 = tail call fastcc i32 @elapsed.299() #26, !dbg !18754
  %19 = sext i32 %18 to i64, !dbg !18754
  %20 = sub nsw i64 %17, %19, !dbg !18755
  br label %21, !dbg !18756

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18736
  ret i64 %22, !dbg !18757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.311(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18758 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18762, metadata !DIExpression()), !dbg !18763
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18764
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.308(%struct._dnode* noundef %2) #26, !dbg !18765
  %4 = xor i1 %3, true, !dbg !18766
  ret i1 %4, !dbg !18767
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18768 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18770, metadata !DIExpression()), !dbg !18775
  call void @llvm.dbg.value(metadata i64 0, metadata !18771, metadata !DIExpression()), !dbg !18775
  call void @llvm.dbg.value(metadata i32 0, metadata !18772, metadata !DIExpression()), !dbg !18776
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18777
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18779, !srcloc !18426
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18779
  call void @llvm.dbg.value(metadata i32 %3, metadata !18423, metadata !DIExpression()) #25, !dbg !18781
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18781
  call void @llvm.dbg.value(metadata i32 %3, metadata !18417, metadata !DIExpression()) #25, !dbg !18777
  call void @llvm.dbg.value(metadata i32 %3, metadata !18774, metadata !DIExpression()), !dbg !18776
  call void @llvm.dbg.value(metadata i64 0, metadata !18771, metadata !DIExpression()), !dbg !18775
  call void @llvm.dbg.value(metadata i32 undef, metadata !18772, metadata !DIExpression()), !dbg !18776
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18782
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18785
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18771, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18775
  call void @llvm.dbg.value(metadata i32 %3, metadata !18479, metadata !DIExpression()) #25, !dbg !18786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18786
  call void @llvm.dbg.value(metadata i32 %3, metadata !18487, metadata !DIExpression()) #25, !dbg !18788
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18790, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 undef, metadata !18772, metadata !DIExpression()), !dbg !18776
  %6 = add i64 %5, %4, !dbg !18791
  ret i64 %6, !dbg !18792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18793 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18795, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.value(metadata i32 0, metadata !18796, metadata !DIExpression()), !dbg !18800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18801
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18803, !srcloc !18426
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18803
  call void @llvm.dbg.value(metadata i32 %2, metadata !18423, metadata !DIExpression()) #25, !dbg !18805
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18805
  call void @llvm.dbg.value(metadata i32 %2, metadata !18417, metadata !DIExpression()) #25, !dbg !18801
  call void @llvm.dbg.value(metadata i32 %2, metadata !18798, metadata !DIExpression()), !dbg !18800
  call void @llvm.dbg.value(metadata i32 -1, metadata !18795, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.value(metadata i32 undef, metadata !18796, metadata !DIExpression()), !dbg !18800
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18806
  call void @llvm.dbg.value(metadata i32 %3, metadata !18795, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.value(metadata i32 %2, metadata !18479, metadata !DIExpression()) #25, !dbg !18809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18809
  call void @llvm.dbg.value(metadata i32 %2, metadata !18487, metadata !DIExpression()) #25, !dbg !18811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18813, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 undef, metadata !18796, metadata !DIExpression()), !dbg !18800
  ret i32 %3, !dbg !18814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18817, metadata !DIExpression()), !dbg !18827
  call void @llvm.dbg.value(metadata i1 %1, metadata !18818, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18827
  call void @llvm.dbg.value(metadata i32 0, metadata !18819, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18829
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18831, !srcloc !18426
  call void @llvm.dbg.value(metadata i32 undef, metadata !18423, metadata !DIExpression()) #25, !dbg !18833
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18833
  call void @llvm.dbg.value(metadata i32 undef, metadata !18417, metadata !DIExpression()) #25, !dbg !18829
  call void @llvm.dbg.value(metadata i32 undef, metadata !18821, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18819, metadata !DIExpression()), !dbg !18828
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18834
  call void @llvm.dbg.value(metadata i32 %4, metadata !18822, metadata !DIExpression()), !dbg !18835
  call void @llvm.dbg.value(metadata i1 undef, metadata !18825, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18835
  %5 = icmp slt i32 %4, 2, !dbg !18836
  call void @llvm.dbg.value(metadata i1 %5, metadata !18826, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18835
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18837
  call void @llvm.dbg.value(metadata i1 %6, metadata !18825, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18835
  br i1 %7, label %11, label %8, !dbg !18837

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18839
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18839
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18841
  br label %11, !dbg !18842

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18831
  call void @llvm.dbg.value(metadata i32 %12, metadata !18423, metadata !DIExpression()) #25, !dbg !18833
  call void @llvm.dbg.value(metadata i32 %12, metadata !18417, metadata !DIExpression()) #25, !dbg !18829
  call void @llvm.dbg.value(metadata i32 %12, metadata !18821, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18479, metadata !DIExpression()) #25, !dbg !18843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18843
  call void @llvm.dbg.value(metadata i32 undef, metadata !18487, metadata !DIExpression()) #25, !dbg !18845
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18847, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 1, metadata !18819, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.value(metadata i32 undef, metadata !18819, metadata !DIExpression()), !dbg !18828
  ret void, !dbg !18848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18853, metadata !DIExpression()), !dbg !18858
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18860
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18862, !srcloc !18426
  call void @llvm.dbg.value(metadata i32 undef, metadata !18423, metadata !DIExpression()) #25, !dbg !18864
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18864
  call void @llvm.dbg.value(metadata i32 undef, metadata !18417, metadata !DIExpression()) #25, !dbg !18860
  call void @llvm.dbg.value(metadata i32 undef, metadata !18854, metadata !DIExpression()), !dbg !18858
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18858
  call void @llvm.dbg.value(metadata i32 undef, metadata !18854, metadata !DIExpression()), !dbg !18858
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18865
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18866
  br i1 %4, label %28, label %5, !dbg !18867

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18868
  %10 = load i64, i64* %9, align 8, !dbg !18868
  %11 = sext i32 %8 to i64, !dbg !18869
  %12 = icmp sgt i64 %10, %11, !dbg !18870
  br i1 %12, label %26, label %13, !dbg !18871

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18858
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18855, metadata !DIExpression()), !dbg !18872
  %15 = trunc i64 %10 to i32, !dbg !18873
  call void @llvm.dbg.value(metadata i32 %15, metadata !18857, metadata !DIExpression()), !dbg !18872
  %16 = sext i32 %15 to i64, !dbg !18874
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18875
  %18 = add i64 %17, %16, !dbg !18875
  store i64 %18, i64* @curr_tick, align 8, !dbg !18875
  store i64 0, i64* %9, align 8, !dbg !18876
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18877
  call void @llvm.dbg.value(metadata i32 %14, metadata !18479, metadata !DIExpression()) #25, !dbg !18878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18878
  call void @llvm.dbg.value(metadata i32 %14, metadata !18487, metadata !DIExpression()) #25, !dbg !18880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18882, !srcloc !18493
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18883
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18883
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18885
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18887, !srcloc !18426
  call void @llvm.dbg.value(metadata i32 undef, metadata !18423, metadata !DIExpression()) #25, !dbg !18889
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18889
  call void @llvm.dbg.value(metadata i32 undef, metadata !18417, metadata !DIExpression()) #25, !dbg !18885
  call void @llvm.dbg.value(metadata i32 undef, metadata !18854, metadata !DIExpression()), !dbg !18858
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18890
  %23 = sub nsw i32 %22, %15, !dbg !18890
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18858
  call void @llvm.dbg.value(metadata i32 undef, metadata !18854, metadata !DIExpression()), !dbg !18858
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18865
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18866
  br i1 %25, label %28, label %5, !dbg !18867, !llvm.loop !18891

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18893
  store i64 %27, i64* %9, align 8, !dbg !18893
  br label %32, !dbg !18896

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18858
  %31 = sext i32 %30 to i64, !dbg !18897
  br label %32, !dbg !18897

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18897
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18858
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18898
  %37 = add i64 %36, %33, !dbg !18898
  store i64 %37, i64* @curr_tick, align 8, !dbg !18898
  store i32 0, i32* @announce_remaining, align 4, !dbg !18899
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18900
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18901
  call void @llvm.dbg.value(metadata i32 %35, metadata !18479, metadata !DIExpression()) #25, !dbg !18902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18902
  call void @llvm.dbg.value(metadata i32 %35, metadata !18487, metadata !DIExpression()) #25, !dbg !18904
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18906, !srcloc !18493
  ret void, !dbg !18907
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18908 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18912, metadata !DIExpression()), !dbg !18916
  call void @llvm.dbg.value(metadata i32 0, metadata !18913, metadata !DIExpression()), !dbg !18917
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18411, metadata !DIExpression()) #25, !dbg !18918
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18920, !srcloc !18426
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18920
  call void @llvm.dbg.value(metadata i32 %2, metadata !18423, metadata !DIExpression()) #25, !dbg !18922
  call void @llvm.dbg.value(metadata i32 undef, metadata !18424, metadata !DIExpression()) #25, !dbg !18922
  call void @llvm.dbg.value(metadata i32 %2, metadata !18417, metadata !DIExpression()) #25, !dbg !18918
  call void @llvm.dbg.value(metadata i32 %2, metadata !18915, metadata !DIExpression()), !dbg !18917
  call void @llvm.dbg.value(metadata i64 0, metadata !18912, metadata !DIExpression()), !dbg !18916
  call void @llvm.dbg.value(metadata i32 undef, metadata !18913, metadata !DIExpression()), !dbg !18917
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18923
  %4 = tail call fastcc i32 @elapsed.299() #26, !dbg !18926
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18912, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18916
  call void @llvm.dbg.value(metadata i32 %2, metadata !18479, metadata !DIExpression()) #25, !dbg !18927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18484, metadata !DIExpression()) #25, !dbg !18927
  call void @llvm.dbg.value(metadata i32 %2, metadata !18487, metadata !DIExpression()) #25, !dbg !18929
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18931, !srcloc !18493
  call void @llvm.dbg.value(metadata i32 undef, metadata !18913, metadata !DIExpression()), !dbg !18917
  %5 = sext i32 %4 to i64, !dbg !18926
  %6 = add i64 %3, %5, !dbg !18932
  ret i64 %6, !dbg !18933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18934 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18935
  %2 = trunc i64 %1 to i32, !dbg !18936
  ret i32 %2, !dbg !18937
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18938 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18939
  ret i64 %1, !dbg !18940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18943, metadata !DIExpression()), !dbg !18950
  %2 = icmp eq i32 %0, 0, !dbg !18951
  br i1 %2, label %10, label %3, !dbg !18953

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18954
  call void @llvm.dbg.value(metadata i32 %4, metadata !18944, metadata !DIExpression()), !dbg !18950
  %5 = mul i32 %0, 84, !dbg !18955
  call void @llvm.dbg.value(metadata i32 %5, metadata !18945, metadata !DIExpression()), !dbg !18950
  br label %6, !dbg !18956

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18957
  call void @llvm.dbg.value(metadata i32 %7, metadata !18946, metadata !DIExpression()), !dbg !18958
  %8 = sub i32 %7, %4, !dbg !18959
  %9 = icmp ult i32 %8, %5, !dbg !18961
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18963 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18964
  ret i32 %1, !dbg !18965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18966 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18968
  ret i32 %1, !dbg !18969
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18970 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18974, metadata !DIExpression()), !dbg !18976
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18977

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18978
  br label %14, !dbg !18982

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18975, metadata !DIExpression()), !dbg !18976
  %6 = icmp slt i64 %2, -1, !dbg !18983
  br i1 %6, label %7, label %9, !dbg !18986

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18987
  br label %14, !dbg !18988

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18990
  %11 = icmp ugt i64 %2, 1, !dbg !18991
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18991
  %13 = add nsw i64 %10, %12, !dbg !18992
  br label %14, !dbg !18993

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18994
  ret i64 %15, !dbg !18995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18996 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.320, i32 0, i32 0)) #27, !dbg !18998
  ret void, !dbg !18999
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!946, !2, !2765, !27, !379, !403, !2767, !2769, !2803, !414, !458, !2805, !2808, !487, !507, !2810, !2818, !2826, !2842, !2853, !2899, !2901, !2929, !2957, !3000, !3072, !3117, !519, !675, !3145, !711, !721, !746, !986, !3150, !1125, !1191, !1373, !1678, !1962, !3191, !2075, !2165, !3193, !3256, !3323, !2216, !3326, !2223, !2593, !3344, !2613, !3346, !2728, !3349}
!llvm.ident = !{!3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351, !3351}
!llvm.module.flags = !{!3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !414, file: !431, line: 56, type: !432, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !430, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 407, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 398, size: 224, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !420, file: !419, line: 400, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !420, file: !419, line: 401, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !420, file: !419, line: 402, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 403, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 404, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !420, file: !419, line: 405, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !420, file: !419, line: 406, baseType: !423, size: 32, offset: 192)
!430 = !{!412}
!431 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !435)
!434 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !{!436, !455}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !433, file: !434, line: 60, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DISubroutineType(types: !439)
!439 = !{!125, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !443)
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !137, line: 380, baseType: !140, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !442, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !442, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !137, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !137, line: 359, baseType: !150, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !442, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !434, line: 65, baseType: !440, size: 32, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !458, file: !461, line: 71, type: !462, isLocal: true, isDefinition: true, align: 32)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !460, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!460 = !{!456}
!461 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !464)
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !463, file: !434, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!125, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !137, line: 380, baseType: !140, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !137, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !137, line: 359, baseType: !150, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !463, file: !434, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !487, file: !501, line: 37, type: !502, isLocal: true, isDefinition: true)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !489, globals: !500, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!489 = !{!184, !490, !491, !150}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !493)
!492 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !494, file: !492, line: 65, baseType: !497, size: 1408)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 44)
!500 = !{!485}
!501 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 256)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "sbox", scope: !507, file: !516, line: 37, type: !502, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !509, globals: !515, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!509 = !{!510, !490, !184, !150}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !512, file: !492, line: 65, baseType: !497, size: 1408)
!515 = !{!505}
!516 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !519, file: !526, line: 17, type: !668, isLocal: false, isDefinition: true)
!519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !521, globals: !522, splitDebugInlining: false, nameTableKind: None)
!520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!521 = !{!272, !125, !208, !124}
!522 = !{!517, !523, !664}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !525, file: !526, line: 198, type: !650, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !526, file: !526, line: 175, type: !527, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !645)
!526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !532)
!531 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!533, !599, !612, !613, !614, !615, !621, !640}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !531, line: 247, baseType: !534, size: 384)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !535)
!535 = !{!536, !564, !572, !573, !574, !585, !586, !587}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 60, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 60, size: 64, elements: !538)
!538 = !{!539, !555}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !537, file: !531, line: 61, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !542)
!541 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 38, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 38, size: 32, elements: !546)
!546 = !{!547, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !545, file: !541, line: 39, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !541, line: 40, baseType: !548, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 42, baseType: !551, size: 32, offset: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 42, size: 32, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !551, file: !541, line: 43, baseType: !548, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !541, line: 44, baseType: !548, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !537, file: !531, line: 62, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !556, file: !557, line: 50, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !562)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !534, file: !531, line: 68, baseType: !565, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !568, file: !567, line: 232, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !542)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !534, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !534, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 90, baseType: !575, size: 16, offset: 112)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 90, size: 16, elements: !576)
!576 = !{!577, !584}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !531, line: 91, baseType: !578, size: 16)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !531, line: 91, size: 16, elements: !579)
!579 = !{!580, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !578, file: !531, line: 96, baseType: !581, size: 8)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !582)
!582 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !578, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !575, file: !531, line: 100, baseType: !227, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !534, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !534, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !534, file: !531, line: 131, baseType: !588, size: 192, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !589)
!589 = !{!590, !591, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !588, file: !567, line: 245, baseType: !540, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !588, file: !567, line: 246, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !588, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !530, file: !531, line: 250, baseType: !600, size: 288, offset: 384)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !602)
!601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !600, file: !601, line: 26, baseType: !208, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !600, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !600, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !600, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !600, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !600, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !600, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !600, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !600, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !530, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !530, file: !531, line: 256, baseType: !566, size: 64, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !530, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !530, file: !531, line: 300, baseType: !616, size: 96, offset: 800)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !617)
!617 = !{!618, !619, !620}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !616, file: !531, line: 153, baseType: !22, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !616, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !530, file: !531, line: 325, baseType: !622, size: 32, offset: 896)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !{!626, !635, !636}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !623, file: !624, line: 5074, baseType: !627, size: 96)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !629)
!628 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!629 = !{!630, !633, !634}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !627, file: !628, line: 57, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !628, line: 57, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !623, file: !624, line: 5075, baseType: !566, size: 64, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !623, file: !624, line: 5076, baseType: !637, offset: 160)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!638 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!639 = !{}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !530, file: !531, line: 343, baseType: !641, size: 64, offset: 928)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !641, file: !601, line: 63, baseType: !208, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !641, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!645 = !{!646, !647, !648, !649}
!646 = !DILocalVariable(name: "thread", arg: 1, scope: !525, file: !526, line: 175, type: !529)
!647 = !DILocalVariable(name: "region_num", scope: !525, file: !526, line: 200, type: !150)
!648 = !DILocalVariable(name: "guard_start", scope: !525, file: !526, line: 265, type: !22)
!649 = !DILocalVariable(name: "guard_size", scope: !525, file: !526, line: 266, type: !272)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 96, elements: !662)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !653)
!652 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !651, file: !652, line: 53, baseType: !22, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !651, file: !652, line: 55, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !659)
!658 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !659, file: !658, line: 150, baseType: !208, size: 32)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "static_regions", scope: !519, file: !526, line: 62, type: !666, isLocal: true, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 96, elements: !662)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !670)
!670 = !{!671, !672}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !373, line: 17, baseType: !140, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !669, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !675, file: !708, line: 39, type: !150, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !677, globals: !707, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!677 = !{!678, !124, !125, !695, !150}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !680, line: 1226, baseType: !681)
!680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 1213, size: 352, elements: !682)
!682 = !{!683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !681, file: !680, line: 1215, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !681, file: !680, line: 1216, baseType: !423, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !681, file: !680, line: 1217, baseType: !423, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !681, file: !680, line: 1218, baseType: !423, size: 32, offset: 96)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !681, file: !680, line: 1219, baseType: !423, size: 32, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !681, file: !680, line: 1220, baseType: !423, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !681, file: !680, line: 1221, baseType: !423, size: 32, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !681, file: !680, line: 1222, baseType: !423, size: 32, offset: 224)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !681, file: !680, line: 1223, baseType: !423, size: 32, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !681, file: !680, line: 1224, baseType: !423, size: 32, offset: 288)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !681, file: !680, line: 1225, baseType: !423, size: 32, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !697, file: !698, line: 29, baseType: !208, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !697, file: !698, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !658, line: 143, baseType: !208, size: 32)
!707 = !{!673}
!708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !711, file: !718, line: 21, type: !409, isLocal: true, isDefinition: true)
!711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !713, globals: !717, splitDebugInlining: false, nameTableKind: None)
!712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!713 = !{!714, !125, !124}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !716, line: 22, baseType: !125)
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!709}
!718 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !721, file: !726, line: 13, type: !743, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !723, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!723 = !{!724, !719}
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "mpu_config", scope: !721, file: !726, line: 37, type: !727, isLocal: false, isDefinition: true)
!726 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !698, line: 41, size: 64, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !728, file: !698, line: 43, baseType: !208, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !728, file: !698, line: 45, baseType: !732, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !734, file: !698, line: 29, baseType: !208, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !734, file: !698, line: 37, baseType: !739, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !740, file: !658, line: 143, baseType: !208, size: 32)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !562)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !746, file: !859, line: 72, type: !941, isLocal: true, isDefinition: true)
!746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !748, retainedTypes: !845, globals: !856, splitDebugInlining: false, nameTableKind: None)
!747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!748 = !{!46, !749}
!749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 65, baseType: !125, size: 32, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844}
!751 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!752 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!753 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!754 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!755 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!756 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!757 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!758 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!759 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!760 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!761 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!762 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!763 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!764 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!765 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!766 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!767 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!768 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!769 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!770 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!771 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!772 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!773 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!774 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!775 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!776 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!777 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!778 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!779 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!780 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!781 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!782 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!783 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!784 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!785 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!786 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!787 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!788 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!789 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!790 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!791 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!792 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!793 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!794 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!795 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!796 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!797 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!798 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!799 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!800 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!801 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!802 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!803 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!804 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!805 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!806 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!807 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!808 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!809 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!810 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!811 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!812 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!813 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!814 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!815 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!816 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!817 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!818 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!819 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!820 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!821 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!822 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!823 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!824 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!825 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!826 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!827 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!828 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!829 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!830 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!831 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!832 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!833 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!834 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!835 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!836 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!837 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!838 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!839 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!840 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!841 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!842 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!843 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!844 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!845 = !{!272, !125, !124, !846}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 392, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 384, size: 192, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !848, file: !419, line: 386, baseType: !423, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !848, file: !419, line: 387, baseType: !423, size: 32, offset: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !848, file: !419, line: 388, baseType: !423, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !848, file: !419, line: 389, baseType: !423, size: 32, offset: 96)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !848, file: !419, line: 390, baseType: !423, size: 32, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !848, file: !419, line: 391, baseType: !423, size: 32, offset: 160)
!856 = !{!857, !863, !879, !890, !905, !744, !907, !921, !923, !925, !927, !929, !931, !933, !935, !937, !939}
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !746, file: !859, line: 424, type: !860, isLocal: false, isDefinition: true, align: 16)
!859 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !861)
!861 = !{!862}
!862 = !DISubrange(count: 4)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !746, file: !859, line: 424, type: !865, isLocal: false, isDefinition: true, align: 32)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !867)
!867 = !{!868, !869, !870, !871, !877, !878}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !866, file: !137, line: 380, baseType: !140, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !866, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !866, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !866, file: !137, line: 386, baseType: !872, size: 32, offset: 96)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !874)
!874 = !{!875, !876}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !873, file: !137, line: 359, baseType: !150, size: 8)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !873, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !866, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !866, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !746, file: !859, line: 424, type: !881, isLocal: true, isDefinition: true, align: 32)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !883)
!883 = !{!884, !889}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !882, file: !434, line: 60, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!125, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !882, file: !434, line: 65, baseType: !888, size: 32, offset: 32)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "exti_data", scope: !746, file: !859, line: 423, type: !892, isLocal: true, isDefinition: true)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !859, line: 107, size: 1472, elements: !893)
!893 = !{!894}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !892, file: !859, line: 109, baseType: !895, size: 1472)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !896, size: 1472, elements: !332)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !859, line: 101, size: 64, elements: !897)
!897 = !{!898, !904}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !896, file: !859, line: 102, baseType: !899, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !900, line: 63, baseType: !901)
!900 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !125, !124}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !896, file: !859, line: 103, baseType: !124, size: 32, offset: 32)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !746, file: !859, line: 424, type: !873, isLocal: true, isDefinition: true, align: 8)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !909, file: !859, line: 493, type: !914, isLocal: true, isDefinition: true, align: 32)
!909 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !859, file: !859, line: 460, type: !910, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !912)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !888}
!912 = !{!913}
!913 = !DILocalVariable(name: "dev", arg: 1, scope: !909, file: !859, line: 460, type: !888)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !915)
!915 = !{!916, !918, !919, !920}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !914, file: !10, line: 55, baseType: !917, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !914, file: !10, line: 57, baseType: !917, size: 32, offset: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !914, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !914, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !909, file: !859, line: 497, type: !914, isLocal: true, isDefinition: true, align: 32)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !909, file: !859, line: 507, type: !914, isLocal: true, isDefinition: true, align: 32)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !909, file: !859, line: 512, type: !914, isLocal: true, isDefinition: true, align: 32)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !909, file: !859, line: 516, type: !914, isLocal: true, isDefinition: true, align: 32)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !909, file: !859, line: 523, type: !914, isLocal: true, isDefinition: true, align: 32)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !909, file: !859, line: 527, type: !914, isLocal: true, isDefinition: true, align: 32)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !909, file: !859, line: 581, type: !914, isLocal: true, isDefinition: true, align: 32)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !909, file: !859, line: 586, type: !914, isLocal: true, isDefinition: true, align: 32)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !909, file: !859, line: 591, type: !914, isLocal: true, isDefinition: true, align: 32)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !909, file: !859, line: 595, type: !914, isLocal: true, isDefinition: true, align: 32)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !942, size: 736, elements: !332)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 163, baseType: !749)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !946, file: !951, line: 25, type: !981, isLocal: false, isDefinition: true, align: 16)
!946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !948, splitDebugInlining: false, nameTableKind: None)
!947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!948 = !{!949, !944, !955, !957, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977, !979}
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !946, file: !951, line: 20, type: !952, isLocal: false, isDefinition: true, align: 16)
!951 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 240, elements: !953)
!953 = !{!954}
!954 = !DISubrange(count: 15)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !946, file: !951, line: 32, type: !860, isLocal: false, isDefinition: true, align: 16)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !946, file: !951, line: 39, type: !860, isLocal: false, isDefinition: true, align: 16)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !946, file: !951, line: 46, type: !860, isLocal: false, isDefinition: true, align: 16)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !946, file: !951, line: 53, type: !860, isLocal: false, isDefinition: true, align: 16)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !946, file: !951, line: 60, type: !860, isLocal: false, isDefinition: true, align: 16)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !946, file: !951, line: 67, type: !860, isLocal: false, isDefinition: true, align: 16)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !946, file: !951, line: 74, type: !860, isLocal: false, isDefinition: true, align: 16)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !946, file: !951, line: 81, type: !860, isLocal: false, isDefinition: true, align: 16)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !946, file: !951, line: 88, type: !860, isLocal: false, isDefinition: true, align: 16)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !946, file: !951, line: 95, type: !860, isLocal: false, isDefinition: true, align: 16)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !946, file: !951, line: 102, type: !860, isLocal: false, isDefinition: true, align: 16)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !946, file: !951, line: 109, type: !860, isLocal: false, isDefinition: true, align: 16)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !946, file: !951, line: 114, type: !981, isLocal: false, isDefinition: true, align: 16)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !982)
!982 = !{!983}
!983 = !DISubrange(count: 3)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !986, file: !1051, line: 398, type: !1084, isLocal: true, isDefinition: true)
!986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !988, retainedTypes: !1001, globals: !1048, splitDebugInlining: false, nameTableKind: None)
!987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!988 = !{!989, !46, !994}
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !990, line: 197, baseType: !32, size: 32, elements: !991)
!990 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!991 = !{!992, !993}
!992 = !DIEnumerator(name: "SUCCESS", value: 0)
!993 = !DIEnumerator(name: "ERROR", value: 1)
!994 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !995, line: 44, baseType: !32, size: 32, elements: !996)
!995 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!996 = !{!997, !998, !999, !1000}
!997 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!998 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!999 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1000 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1001 = !{!124, !125, !208, !1002, !1041, !1047}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 586, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 550, size: 1216, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1004, file: !419, line: 552, baseType: !423, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1004, file: !419, line: 553, baseType: !423, size: 32, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1004, file: !419, line: 554, baseType: !423, size: 32, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1004, file: !419, line: 555, baseType: !423, size: 32, offset: 96)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1004, file: !419, line: 556, baseType: !423, size: 32, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1004, file: !419, line: 557, baseType: !423, size: 32, offset: 160)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1004, file: !419, line: 558, baseType: !423, size: 32, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1004, file: !419, line: 559, baseType: !208, size: 32, offset: 224)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1004, file: !419, line: 560, baseType: !423, size: 32, offset: 256)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1004, file: !419, line: 561, baseType: !423, size: 32, offset: 288)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1004, file: !419, line: 562, baseType: !1017, size: 64, offset: 320)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !562)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1004, file: !419, line: 563, baseType: !423, size: 32, offset: 384)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1004, file: !419, line: 564, baseType: !423, size: 32, offset: 416)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1004, file: !419, line: 565, baseType: !423, size: 32, offset: 448)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1004, file: !419, line: 566, baseType: !208, size: 32, offset: 480)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1004, file: !419, line: 567, baseType: !423, size: 32, offset: 512)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1004, file: !419, line: 568, baseType: !423, size: 32, offset: 544)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1004, file: !419, line: 569, baseType: !1017, size: 64, offset: 576)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1004, file: !419, line: 570, baseType: !423, size: 32, offset: 640)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1004, file: !419, line: 571, baseType: !423, size: 32, offset: 672)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1004, file: !419, line: 572, baseType: !423, size: 32, offset: 704)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1004, file: !419, line: 573, baseType: !208, size: 32, offset: 736)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1004, file: !419, line: 574, baseType: !423, size: 32, offset: 768)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1004, file: !419, line: 575, baseType: !423, size: 32, offset: 800)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1004, file: !419, line: 576, baseType: !1017, size: 64, offset: 832)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1004, file: !419, line: 577, baseType: !423, size: 32, offset: 896)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1004, file: !419, line: 578, baseType: !423, size: 32, offset: 928)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1004, file: !419, line: 579, baseType: !1017, size: 64, offset: 960)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1004, file: !419, line: 580, baseType: !423, size: 32, offset: 1024)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1004, file: !419, line: 581, baseType: !423, size: 32, offset: 1056)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1004, file: !419, line: 582, baseType: !423, size: 32, offset: 1088)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1004, file: !419, line: 583, baseType: !423, size: 32, offset: 1120)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1004, file: !419, line: 584, baseType: !423, size: 32, offset: 1152)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1004, file: !419, line: 585, baseType: !423, size: 32, offset: 1184)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1043, line: 343, size: 64, elements: !1044)
!1043 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1044 = !{!1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1042, file: !1043, line: 344, baseType: !208, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1042, file: !1043, line: 345, baseType: !208, size: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1048 = !{!1049, !1055, !1071, !1082, !984}
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !986, file: !1051, line: 752, type: !1052, isLocal: false, isDefinition: true, align: 16)
!1051 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 800, elements: !1053)
!1053 = !{!1054}
!1054 = !DISubrange(count: 50)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !986, file: !1051, line: 752, type: !1057, isLocal: false, isDefinition: true, align: 32)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1069, !1070}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1058, file: !137, line: 380, baseType: !140, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1058, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1058, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1058, file: !137, line: 386, baseType: !1064, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1065, file: !137, line: 359, baseType: !150, size: 8)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1065, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1058, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1058, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !986, file: !1051, line: 752, type: !1073, isLocal: true, isDefinition: true, align: 32)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1075)
!1075 = !{!1076, !1081}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1074, file: !434, line: 60, baseType: !1077, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!125, !1080}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1074, file: !434, line: 65, baseType: !1080, size: 32, offset: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !986, file: !1051, line: 752, type: !1065, isLocal: true, isDefinition: true, align: 8)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !995, line: 100, size: 224, elements: !1085)
!1085 = !{!1086, !1092, !1093, !1102, !1107, !1112, !1118}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1084, file: !995, line: 101, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !995, line: 76, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!125, !1080, !1091}
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !995, line: 56, baseType: !124)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1084, file: !995, line: 102, baseType: !1087, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1084, file: !995, line: 103, baseType: !1094, size: 32, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !995, line: 83, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!125, !1080, !1091, !1098, !124}
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !995, line: 72, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !1080, !1091, !124}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1084, file: !995, line: 104, baseType: !1103, size: 32, offset: 96)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !995, line: 79, baseType: !1104)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!125, !1080, !1091, !1047}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1084, file: !995, line: 105, baseType: !1108, size: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !995, line: 88, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!994, !1080, !1091}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1084, file: !995, line: 106, baseType: !1113, size: 32, offset: 160)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !995, line: 92, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!125, !1080, !1091, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !995, line: 64, baseType: !124)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1084, file: !995, line: 107, baseType: !1119, size: 32, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !995, line: 96, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!125, !1080, !1091, !124}
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1125, file: !1182, line: 603, type: !1184, isLocal: true, isDefinition: true, align: 32)
!1125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1127, globals: !1179, splitDebugInlining: false, nameTableKind: None)
!1126 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!1127 = !{!124, !125, !1128}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1131, line: 336, size: 160, elements: !1132)
!1131 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1132 = !{!1133, !1153, !1157, !1161, !1174}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1130, file: !1131, line: 365, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!125, !1137, !1152}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144, !1150, !1151}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1139, file: !137, line: 380, baseType: !140, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1139, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1139, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1139, file: !137, line: 386, baseType: !1145, size: 32, offset: 96)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1147)
!1147 = !{!1148, !1149}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1146, file: !137, line: 359, baseType: !150, size: 8)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1146, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1139, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1139, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1130, file: !1131, line: 366, baseType: !1154, size: 32, offset: 32)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !1137, !151}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1130, file: !1131, line: 374, baseType: !1158, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!125, !1137}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1130, file: !1131, line: 377, baseType: !1162, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!125, !1137, !1165}
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1131, line: 122, size: 64, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1167, file: !1131, line: 123, baseType: !208, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1167, file: !1131, line: 124, baseType: !150, size: 8, offset: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1167, file: !1131, line: 125, baseType: !150, size: 8, offset: 40)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1167, file: !1131, line: 126, baseType: !150, size: 8, offset: 48)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1167, file: !1131, line: 127, baseType: !150, size: 8, offset: 56)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1130, file: !1131, line: 379, baseType: !1175, size: 32, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!125, !1137, !1178}
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1179 = !{!1123, !1180}
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1125, file: !1182, line: 38, type: !1183, isLocal: true, isDefinition: true)
!1182 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1186)
!1186 = !{!1187, !1188}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1185, file: !434, line: 60, baseType: !1158, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1185, file: !434, line: 65, baseType: !1137, size: 32, offset: 32)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1191, file: !1197, line: 22, type: !1366, isLocal: false, isDefinition: true)
!1191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1193, globals: !1194, splitDebugInlining: false, nameTableKind: None)
!1192 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!1193 = !{!30, !39, !42, !116}
!1194 = !{!1189, !1195, !1198, !1214, !1225, !1227, !1355}
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1191, file: !1197, line: 324, type: !981, isLocal: false, isDefinition: true, align: 16)
!1197 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1191, file: !1197, line: 324, type: !1200, isLocal: true, isDefinition: true, align: 32)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206, !1212, !1213}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1201, file: !137, line: 380, baseType: !140, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1201, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1201, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1201, file: !137, line: 386, baseType: !1207, size: 32, offset: 96)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1209)
!1209 = !{!1210, !1211}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1208, file: !137, line: 359, baseType: !150, size: 8)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1208, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1201, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1201, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1191, file: !1197, line: 324, type: !1216, isLocal: true, isDefinition: true, align: 32)
!1216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1218)
!1218 = !{!1219, !1224}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1217, file: !434, line: 60, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!125, !1223}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1217, file: !434, line: 65, baseType: !1223, size: 32, offset: 32)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1191, file: !1197, line: 324, type: !1208, isLocal: true, isDefinition: true, align: 8)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1191, file: !1197, line: 317, type: !1229, isLocal: true, isDefinition: true)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1230)
!1230 = !{!1231, !1232, !1308, !1312, !1320, !1343, !1347}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1229, file: !128, line: 66, baseType: !1220, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1229, file: !128, line: 69, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!125, !1223, !1236, !39, !30, !42}
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1238)
!1238 = !{!1239, !1281, !1286, !1287, !1288, !1289, !1306, !1307}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1237, file: !31, line: 116, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1241)
!1241 = !{!1242, !1243}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1240, file: !31, line: 76, baseType: !30, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, scope: !1240, file: !31, line: 78, baseType: !1244, size: 32, offset: 32)
!1244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1240, file: !31, line: 78, size: 32, elements: !1245)
!1245 = !{!1246, !1260, !1265, !1267, !1279}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1244, file: !31, line: 79, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1248)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!125, !1236, !1251}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1252, file: !31, line: 183, baseType: !184, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1252, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1252, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1252, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1252, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1252, file: !31, line: 208, baseType: !1236, size: 32, offset: 160)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1244, file: !31, line: 80, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!125, !1236, !1251, !184}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1244, file: !31, line: 81, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1262)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1244, file: !31, line: 82, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1269)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!125, !1236, !1272, !184}
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1273, file: !31, line: 219, baseType: !1251, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1273, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1273, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1273, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1244, file: !31, line: 83, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1269)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1237, file: !31, line: 126, baseType: !1282, size: 32, offset: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1237, file: !31, line: 119, size: 32, elements: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1282, file: !31, line: 121, baseType: !184, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1282, file: !31, line: 125, baseType: !124, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1237, file: !31, line: 131, baseType: !1223, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1237, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1237, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1237, file: !31, line: 156, baseType: !1290, size: 32, offset: 192)
!1290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1237, file: !31, line: 152, size: 32, elements: !1291)
!1291 = !{!1292, !1297, !1301}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1290, file: !31, line: 153, baseType: !1293, size: 32)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1294)
!1294 = !{!1295, !1296}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1293, file: !31, line: 88, baseType: !227, size: 16)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1293, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1290, file: !31, line: 154, baseType: !1298, size: 32)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1298, file: !31, line: 96, baseType: !208, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1290, file: !31, line: 155, baseType: !1302, size: 32)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1303)
!1303 = !{!1304, !1305}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1302, file: !31, line: 100, baseType: !227, size: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1302, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1237, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1237, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1229, file: !128, line: 74, baseType: !1309, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!125, !1223, !1236}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1229, file: !128, line: 77, baseType: !1313, size: 32, offset: 96)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!125, !1223, !1316}
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{null, !1251, !125}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1229, file: !128, line: 81, baseType: !1321, size: 32, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!125, !1223, !1324, !116}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1341, !1342}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1325, file: !117, line: 51, baseType: !1223, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1325, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1325, file: !117, line: 65, baseType: !1330, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!125, !1324, !1334, !153}
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1335, file: !117, line: 91, baseType: !184, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1335, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1335, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1335, file: !117, line: 107, baseType: !1324, size: 32, offset: 96)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1325, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1325, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1229, file: !128, line: 84, baseType: !1344, size: 32, offset: 160)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!125, !1223, !1324}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1229, file: !128, line: 86, baseType: !1348, size: 32, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!125, !1223, !1351}
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{null, !1334, !125}
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1191, file: !1197, line: 26, type: !1357, isLocal: true, isDefinition: true)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1358, size: 2880, elements: !562)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1359, line: 22, size: 1440, elements: !1360)
!1359 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1360 = !{!1361, !1362}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1358, file: !1359, line: 23, baseType: !125, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1358, file: !1359, line: 24, baseType: !1363, size: 1408, offset: 32)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !1364)
!1364 = !{!1365}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1363, file: !492, line: 65, baseType: !497, size: 1408)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1368)
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1367, file: !373, line: 17, baseType: !140, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1367, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1373, file: !1544, line: 762, type: !1653, isLocal: true, isDefinition: true)
!1373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1375, retainedTypes: !1393, globals: !1541, splitDebugInlining: false, nameTableKind: None)
!1374 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!1375 = !{!46, !1376, !1382, !1387, !994}
!1376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1377, line: 506, baseType: !32, size: 32, elements: !1378)
!1377 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1378 = !{!1379, !1380, !1381}
!1379 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1380 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1381 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1377, line: 512, baseType: !32, size: 32, elements: !1383)
!1383 = !{!1384, !1385, !1386}
!1384 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1385 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1386 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !900, line: 43, baseType: !32, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392}
!1389 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1390 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1391 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1392 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1393 = !{!124, !125, !1394, !1464, !1469, !1429, !1382, !1376, !1474, !1475, !208, !1489, !1444, !393, !1501, !1502}
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1377, line: 523, size: 288, elements: !1397)
!1397 = !{!1398, !1419, !1425, !1430, !1434, !1435, !1436, !1440, !1460}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1396, file: !1377, line: 524, baseType: !1399, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!125, !1402, !1417, !1418}
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1415, !1416}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1404, file: !137, line: 380, baseType: !140, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1404, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1404, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1404, file: !137, line: 386, baseType: !1410, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1412)
!1412 = !{!1413, !1414}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1411, file: !137, line: 359, baseType: !150, size: 8)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1411, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1404, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1404, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1377, line: 237, baseType: !150)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1377, line: 257, baseType: !208)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1396, file: !1377, line: 530, baseType: !1420, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!125, !1402, !1423}
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1377, line: 229, baseType: !208)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1396, file: !1377, line: 532, baseType: !1426, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!125, !1402, !1429, !1424}
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1377, line: 216, baseType: !208)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1396, file: !1377, line: 535, baseType: !1431, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!125, !1402, !1429}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1396, file: !1377, line: 537, baseType: !1431, size: 32, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1396, file: !1377, line: 539, baseType: !1431, size: 32, offset: 160)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1396, file: !1377, line: 541, baseType: !1437, size: 32, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!125, !1402, !1417, !1376, !1382}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1396, file: !1377, line: 544, baseType: !1441, size: 32, offset: 224)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!125, !1402, !1444, !153}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1377, line: 478, size: 96, elements: !1446)
!1446 = !{!1447, !1454, !1459}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1445, file: !1377, line: 482, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1449, line: 33, baseType: !1450)
!1449 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1449, line: 29, size: 32, elements: !1451)
!1451 = !{!1452}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1450, file: !1449, line: 30, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1445, file: !1377, line: 485, baseType: !1455, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1377, line: 464, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{null, !1402, !1444, !1429}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1445, file: !1377, line: 493, baseType: !1429, size: 32, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1396, file: !1377, line: 547, baseType: !1461, size: 32, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!208, !1402}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1377, line: 428, size: 32, elements: !1467)
!1467 = !{!1468}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1466, file: !1377, line: 434, baseType: !1429, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1377, line: 441, size: 32, elements: !1472)
!1472 = !{!1473}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1471, file: !1377, line: 447, baseType: !1429, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 469, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 458, size: 320, elements: !1478)
!1478 = !{!1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1477, file: !419, line: 460, baseType: !423, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1477, file: !419, line: 461, baseType: !423, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1477, file: !419, line: 462, baseType: !423, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1477, file: !419, line: 463, baseType: !423, size: 32, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1477, file: !419, line: 464, baseType: !423, size: 32, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1477, file: !419, line: 465, baseType: !423, size: 32, offset: 160)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1477, file: !419, line: 466, baseType: !423, size: 32, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1477, file: !419, line: 467, baseType: !423, size: 32, offset: 224)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1477, file: !419, line: 468, baseType: !1488, size: 64, offset: 256)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !562)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 484, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 475, size: 384, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1497, !1498, !1499, !1500}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1491, file: !419, line: 477, baseType: !423, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1491, file: !419, line: 478, baseType: !423, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1491, file: !419, line: 479, baseType: !1496, size: 128, offset: 64)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !861)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1491, file: !419, line: 480, baseType: !1017, size: 64, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1491, file: !419, line: 481, baseType: !423, size: 32, offset: 256)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1491, file: !419, line: 482, baseType: !1017, size: 64, offset: 288)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1491, file: !419, line: 483, baseType: !423, size: 32, offset: 352)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !995, line: 100, size: 224, elements: !1505)
!1505 = !{!1506, !1511, !1512, !1521, !1526, !1531, !1536}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1504, file: !995, line: 101, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !995, line: 76, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!125, !1402, !1091}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1504, file: !995, line: 102, baseType: !1507, size: 32, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1504, file: !995, line: 103, baseType: !1513, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !995, line: 83, baseType: !1514)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!125, !1402, !1091, !1517, !124}
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !995, line: 72, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{null, !1402, !1091, !124}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1504, file: !995, line: 104, baseType: !1522, size: 32, offset: 96)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !995, line: 79, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!125, !1402, !1091, !1047}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1504, file: !995, line: 105, baseType: !1527, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !995, line: 88, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{!994, !1402, !1091}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1504, file: !995, line: 106, baseType: !1532, size: 32, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !995, line: 92, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!125, !1402, !1091, !1117}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1504, file: !995, line: 107, baseType: !1537, size: 32, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !995, line: 96, baseType: !1538)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!125, !1402, !1091, !124}
!1541 = !{!1542, !1548, !1550, !1560, !1562, !1564, !1566, !1568, !1570, !1572, !1577, !1579, !1581, !1583, !1585, !1587, !1589, !1591, !1593, !1595, !1597, !1599, !1601, !1603, !1605, !1619, !1621, !1623, !1625, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1371, !1649, !1651, !1664, !1666, !1668, !1670, !1672, !1674}
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1373, file: !1544, line: 762, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1544 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 5)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1373, file: !1544, line: 762, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1373, file: !1544, line: 762, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1554)
!1554 = !{!1555, !1559}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1553, file: !434, line: 60, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!125, !1402}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1553, file: !434, line: 65, baseType: !1402, size: 32, offset: 32)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1373, file: !1544, line: 766, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1373, file: !1544, line: 766, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1373, file: !1544, line: 766, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1373, file: !1544, line: 770, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1373, file: !1544, line: 770, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1373, file: !1544, line: 770, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1373, file: !1544, line: 774, type: !1574, isLocal: false, isDefinition: true, align: 16)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 144, elements: !1575)
!1575 = !{!1576}
!1576 = !DISubrange(count: 9)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1373, file: !1544, line: 774, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1373, file: !1544, line: 774, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1373, file: !1544, line: 778, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1373, file: !1544, line: 778, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1373, file: !1544, line: 778, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1373, file: !1544, line: 782, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1373, file: !1544, line: 782, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1373, file: !1544, line: 782, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1373, file: !1544, line: 786, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1373, file: !1544, line: 786, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1373, file: !1544, line: 786, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1373, file: !1544, line: 790, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1373, file: !1544, line: 790, type: !1403, isLocal: false, isDefinition: true, align: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1373, file: !1544, line: 790, type: !1552, isLocal: true, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1373, file: !1544, line: 762, type: !1607, isLocal: true, isDefinition: true)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1608, line: 237, size: 128, elements: !1609)
!1608 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1609 = !{!1610, !1611, !1612}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1607, file: !1608, line: 239, baseType: !1471, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1607, file: !1608, line: 241, baseType: !1402, size: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1607, file: !1608, line: 243, baseType: !1613, size: 64, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1449, line: 40, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1449, line: 35, size: 64, elements: !1615)
!1615 = !{!1616, !1618}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1614, file: !1449, line: 36, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1614, file: !1449, line: 37, baseType: !1617, size: 32, offset: 32)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1373, file: !1544, line: 762, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1373, file: !1544, line: 766, type: !1607, isLocal: true, isDefinition: true)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1373, file: !1544, line: 766, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1373, file: !1544, line: 770, type: !1607, isLocal: true, isDefinition: true)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1373, file: !1544, line: 770, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1373, file: !1544, line: 774, type: !1607, isLocal: true, isDefinition: true)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1373, file: !1544, line: 774, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1373, file: !1544, line: 778, type: !1607, isLocal: true, isDefinition: true)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1373, file: !1544, line: 778, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1373, file: !1544, line: 782, type: !1607, isLocal: true, isDefinition: true)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1373, file: !1544, line: 782, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1373, file: !1544, line: 786, type: !1607, isLocal: true, isDefinition: true)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1373, file: !1544, line: 786, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1373, file: !1544, line: 790, type: !1607, isLocal: true, isDefinition: true)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1373, file: !1544, line: 790, type: !1411, isLocal: true, isDefinition: true, align: 8)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1373, file: !1544, line: 656, type: !1395, isLocal: true, isDefinition: true)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1373, file: !1544, line: 766, type: !1653, isLocal: true, isDefinition: true)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1608, line: 224, size: 160, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1654, file: !1608, line: 226, baseType: !1466, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1654, file: !1608, line: 228, baseType: !1047, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1654, file: !1608, line: 230, baseType: !125, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1654, file: !1608, line: 231, baseType: !1660, size: 64, offset: 96)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1043, line: 343, size: 64, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1660, file: !1043, line: 344, baseType: !208, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1660, file: !1043, line: 345, baseType: !208, size: 32, offset: 32)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1373, file: !1544, line: 770, type: !1653, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1373, file: !1544, line: 774, type: !1653, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1373, file: !1544, line: 778, type: !1653, isLocal: true, isDefinition: true)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1373, file: !1544, line: 782, type: !1653, isLocal: true, isDefinition: true)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1373, file: !1544, line: 786, type: !1653, isLocal: true, isDefinition: true)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1373, file: !1544, line: 790, type: !1653, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1678, file: !1819, line: 44, type: !1955, isLocal: false, isDefinition: true)
!1678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1680, retainedTypes: !1713, globals: !1816, splitDebugInlining: false, nameTableKind: None)
!1679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!1680 = !{!46, !1681, !1688, !1695, !1702, !1708, !994}
!1681 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1131, line: 47, baseType: !32, size: 32, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1687}
!1683 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1684 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1685 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1686 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1687 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1688 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1131, line: 75, baseType: !32, size: 32, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694}
!1690 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1691 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1692 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1693 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1694 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1131, line: 92, baseType: !32, size: 32, elements: !1696)
!1696 = !{!1697, !1698, !1699, !1700, !1701}
!1697 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1698 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1699 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1700 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1701 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1702 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1131, line: 84, baseType: !32, size: 32, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707}
!1704 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1705 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1706 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1707 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1708 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1131, line: 107, baseType: !32, size: 32, elements: !1709)
!1709 = !{!1710, !1711, !1712}
!1710 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1711 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1712 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1713 = !{!124, !125, !1714, !151, !150, !1763, !208, !1091, !1774, !227, !1813, !1815}
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1131, line: 336, size: 160, elements: !1717)
!1717 = !{!1718, !1737, !1741, !1745, !1758}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1716, file: !1131, line: 365, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!125, !1722, !1152}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1735, !1736}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1724, file: !137, line: 380, baseType: !140, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1724, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1724, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1724, file: !137, line: 386, baseType: !1730, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1732)
!1732 = !{!1733, !1734}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1731, file: !137, line: 359, baseType: !150, size: 8)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1731, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1724, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1724, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1716, file: !1131, line: 366, baseType: !1738, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{null, !1722, !151}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1716, file: !1131, line: 374, baseType: !1742, size: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!125, !1722}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1716, file: !1131, line: 377, baseType: !1746, size: 32, offset: 96)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!125, !1722, !1749}
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1131, line: 122, size: 64, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1751, file: !1131, line: 123, baseType: !208, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1751, file: !1131, line: 124, baseType: !150, size: 8, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1751, file: !1131, line: 125, baseType: !150, size: 8, offset: 40)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1751, file: !1131, line: 126, baseType: !150, size: 8, offset: 48)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1751, file: !1131, line: 127, baseType: !150, size: 8, offset: 56)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1716, file: !1131, line: 379, baseType: !1759, size: 32, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!125, !1722, !1762}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 783, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 774, size: 224, elements: !1766)
!1766 = !{!1767, !1768, !1769, !1770, !1771, !1772, !1773}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1765, file: !419, line: 776, baseType: !423, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1765, file: !419, line: 777, baseType: !423, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1765, file: !419, line: 778, baseType: !423, size: 32, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1765, file: !419, line: 779, baseType: !423, size: 32, offset: 96)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1765, file: !419, line: 780, baseType: !423, size: 32, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1765, file: !419, line: 781, baseType: !423, size: 32, offset: 160)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1765, file: !419, line: 782, baseType: !423, size: 32, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !995, line: 100, size: 224, elements: !1777)
!1777 = !{!1778, !1783, !1784, !1793, !1798, !1803, !1808}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1776, file: !995, line: 101, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !995, line: 76, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!125, !1722, !1091}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1776, file: !995, line: 102, baseType: !1779, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1776, file: !995, line: 103, baseType: !1785, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !995, line: 83, baseType: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!125, !1722, !1091, !1789, !124}
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !995, line: 72, baseType: !1790)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{null, !1722, !1091, !124}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1776, file: !995, line: 104, baseType: !1794, size: 32, offset: 96)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !995, line: 79, baseType: !1795)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!125, !1722, !1091, !1047}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1776, file: !995, line: 105, baseType: !1799, size: 32, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !995, line: 88, baseType: !1800)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!994, !1722, !1091}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1776, file: !995, line: 106, baseType: !1804, size: 32, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !995, line: 92, baseType: !1805)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!125, !1722, !1091, !1117}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1776, file: !995, line: 107, baseType: !1809, size: 32, offset: 192)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !995, line: 96, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!125, !1722, !1091, !124}
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1814)
!1814 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!1816 = !{!1676, !1817, !1821, !1823, !1830, !1832, !1834, !1836, !1838, !1840, !1842, !1844, !1846, !1848, !1850, !1852, !1854, !1856, !1900, !1903, !1905, !1908, !1911, !1913, !1919, !1921, !1923, !1925, !1927, !1929, !1931, !1933, !1935, !1937, !1939, !1941, !1943, !1945, !1947, !1949, !1951, !1953}
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1820, isLocal: false, isDefinition: true, align: 16)
!1819 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1723, isLocal: false, isDefinition: true, align: 32)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1825, isLocal: true, isDefinition: true, align: 32)
!1825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1826, file: !434, line: 60, baseType: !1742, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1826, file: !434, line: 65, baseType: !1722, size: 32, offset: 32)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1820, isLocal: false, isDefinition: true, align: 16)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1723, isLocal: false, isDefinition: true, align: 32)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1825, isLocal: true, isDefinition: true, align: 32)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1820, isLocal: false, isDefinition: true, align: 16)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1723, isLocal: false, isDefinition: true, align: 32)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1825, isLocal: true, isDefinition: true, align: 32)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1820, isLocal: false, isDefinition: true, align: 16)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1723, isLocal: false, isDefinition: true, align: 32)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1825, isLocal: true, isDefinition: true, align: 32)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1731, isLocal: true, isDefinition: true, align: 8)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1731, isLocal: true, isDefinition: true, align: 8)
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1731, isLocal: true, isDefinition: true, align: 8)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1731, isLocal: true, isDefinition: true, align: 8)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1678, file: !1819, line: 1914, type: !1858, isLocal: true, isDefinition: true)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1860, line: 22, size: 224, elements: !1861)
!1860 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1861 = !{!1862, !1863, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1859, file: !1860, line: 24, baseType: !1763, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1859, file: !1860, line: 26, baseType: !1864, size: 32, offset: 32)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1043, line: 343, size: 64, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1866, file: !1043, line: 344, baseType: !208, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1866, file: !1043, line: 345, baseType: !208, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1859, file: !1860, line: 28, baseType: !272, size: 32, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1859, file: !1860, line: 30, baseType: !153, size: 8, offset: 96)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1859, file: !1860, line: 32, baseType: !125, size: 32, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1859, file: !1860, line: 34, baseType: !153, size: 8, offset: 160)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1859, file: !1860, line: 36, baseType: !153, size: 8, offset: 168)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1859, file: !1860, line: 38, baseType: !153, size: 8, offset: 176)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1859, file: !1860, line: 40, baseType: !153, size: 8, offset: 184)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1859, file: !1860, line: 41, baseType: !1878, size: 32, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1881, line: 60, size: 64, elements: !1882)
!1881 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1882 = !{!1883, !1899}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1880, file: !1881, line: 69, baseType: !1884, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1881, line: 50, size: 64, elements: !1887)
!1887 = !{!1888, !1897, !1898}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1886, file: !1881, line: 52, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1891)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1892, line: 37, baseType: !1893)
!1892 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1892, line: 32, size: 64, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1893, file: !1892, line: 34, baseType: !208, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1893, file: !1892, line: 36, baseType: !208, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1886, file: !1881, line: 54, baseType: !150, size: 8, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1886, file: !1881, line: 56, baseType: !150, size: 8, offset: 40)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1880, file: !1881, line: 71, baseType: !150, size: 8, offset: 32)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1678, file: !1819, line: 1914, type: !1902, isLocal: true, isDefinition: true)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 64, elements: !662)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1879, isLocal: true, isDefinition: true)
!1905 = !DIGlobalVariableExpression(var: !1906, expr: !DIExpression())
!1906 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1907, isLocal: true, isDefinition: true)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1885, size: 64, elements: !662)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1678, file: !1819, line: 1914, type: !1910, isLocal: true, isDefinition: true)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 128, elements: !562)
!1911 = !DIGlobalVariableExpression(var: !1912, expr: !DIExpression())
!1912 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1678, file: !1819, line: 1539, type: !1715, isLocal: true, isDefinition: true)
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1678, file: !1819, line: 1914, type: !1915, isLocal: true, isDefinition: true)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1860, line: 74, size: 64, elements: !1916)
!1916 = !{!1917, !1918}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1915, file: !1860, line: 76, baseType: !208, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1915, file: !1860, line: 78, baseType: !1722, size: 32, offset: 32)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1678, file: !1819, line: 1914, type: !1858, isLocal: true, isDefinition: true)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1678, file: !1819, line: 1914, type: !1902, isLocal: true, isDefinition: true)
!1923 = !DIGlobalVariableExpression(var: !1924, expr: !DIExpression())
!1924 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1879, isLocal: true, isDefinition: true)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1907, isLocal: true, isDefinition: true)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1678, file: !1819, line: 1914, type: !1910, isLocal: true, isDefinition: true)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1678, file: !1819, line: 1914, type: !1915, isLocal: true, isDefinition: true)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1678, file: !1819, line: 1914, type: !1858, isLocal: true, isDefinition: true)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1678, file: !1819, line: 1914, type: !1902, isLocal: true, isDefinition: true)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1879, isLocal: true, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1907, isLocal: true, isDefinition: true)
!1939 = !DIGlobalVariableExpression(var: !1940, expr: !DIExpression())
!1940 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1678, file: !1819, line: 1914, type: !1910, isLocal: true, isDefinition: true)
!1941 = !DIGlobalVariableExpression(var: !1942, expr: !DIExpression())
!1942 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1678, file: !1819, line: 1914, type: !1915, isLocal: true, isDefinition: true)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1678, file: !1819, line: 1914, type: !1858, isLocal: true, isDefinition: true)
!1945 = !DIGlobalVariableExpression(var: !1946, expr: !DIExpression())
!1946 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1678, file: !1819, line: 1914, type: !1902, isLocal: true, isDefinition: true)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1879, isLocal: true, isDefinition: true)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1907, isLocal: true, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1678, file: !1819, line: 1914, type: !1910, isLocal: true, isDefinition: true)
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1678, file: !1819, line: 1914, type: !1915, isLocal: true, isDefinition: true)
!1955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1956, file: !373, line: 17, baseType: !140, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1956, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1962, file: !2040, line: 65, type: !423, isLocal: true, isDefinition: true)
!1962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1964, retainedTypes: !1965, globals: !2037, splitDebugInlining: false, nameTableKind: None)
!1963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!1964 = !{!749}
!1965 = !{!1966, !1968, !917, !150, !208, !1976, !2007}
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1967, line: 46, baseType: !598)
!1967 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !1971)
!1971 = !{!1972, !1973, !1974, !1975}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1970, file: !680, line: 766, baseType: !423, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1970, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1970, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1970, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !1979)
!1979 = !{!1980, !1982, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1997, !2002, !2006}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1978, file: !680, line: 413, baseType: !1981, size: 256)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1978, file: !680, line: 414, baseType: !1983, size: 768, offset: 256)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1984)
!1984 = !{!1985}
!1985 = !DISubrange(count: 24)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1978, file: !680, line: 415, baseType: !1981, size: 256, offset: 1024)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1978, file: !680, line: 416, baseType: !1983, size: 768, offset: 1280)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1978, file: !680, line: 417, baseType: !1981, size: 256, offset: 2048)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1978, file: !680, line: 418, baseType: !1983, size: 768, offset: 2304)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1978, file: !680, line: 419, baseType: !1981, size: 256, offset: 3072)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1978, file: !680, line: 420, baseType: !1983, size: 768, offset: 3328)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1978, file: !680, line: 421, baseType: !1981, size: 256, offset: 4096)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1978, file: !680, line: 422, baseType: !1994, size: 1792, offset: 4352)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1995)
!1995 = !{!1996}
!1996 = !DISubrange(count: 56)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1978, file: !680, line: 423, baseType: !1998, size: 1920, offset: 6144)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 1920, elements: !2000)
!1999 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!2000 = !{!2001}
!2001 = !DISubrange(count: 240)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1978, file: !680, line: 424, baseType: !2003, size: 20608, offset: 8064)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !2004)
!2004 = !{!2005}
!2005 = !DISubrange(count: 644)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1978, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2009)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2010)
!2010 = !{!2011, !2012, !2013, !2014, !2015, !2016, !2017, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2028, !2029, !2030, !2032, !2034, !2036}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2009, file: !680, line: 447, baseType: !684, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2009, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2009, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2009, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2009, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2009, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2009, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1999, size: 96, elements: !364)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2009, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2009, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2009, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2009, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2009, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2009, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2009, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2009, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !562)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2009, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2009, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2009, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 128, elements: !861)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2009, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!2033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 160, elements: !1546)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2009, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1546)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2009, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2037 = !{!2038, !2064, !2067, !2069, !2071, !1960}
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1962, file: !2040, line: 285, type: !2041, isLocal: true, isDefinition: true, align: 32)
!2040 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2043)
!2043 = !{!2044, !2063}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2042, file: !434, line: 60, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!125, !2048}
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2061, !2062}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2050, file: !137, line: 380, baseType: !140, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2050, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2050, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2050, file: !137, line: 386, baseType: !2056, size: 32, offset: 96)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2058)
!2058 = !{!2059, !2060}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2057, file: !137, line: 359, baseType: !150, size: 8)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2057, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2050, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2050, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2042, file: !434, line: 65, baseType: !2048, size: 32, offset: 32)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "lock", scope: !1962, file: !2040, line: 34, type: !2066, isLocal: true, isDefinition: true)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "last_load", scope: !1962, file: !2040, line: 36, type: !208, isLocal: true, isDefinition: true)
!2069 = !DIGlobalVariableExpression(var: !2070, expr: !DIExpression())
!2070 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1962, file: !2040, line: 48, type: !208, isLocal: true, isDefinition: true)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1962, file: !2040, line: 54, type: !208, isLocal: true, isDefinition: true)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2075, file: !2157, line: 22, type: !2159, isLocal: true, isDefinition: true)
!2075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2077, retainedTypes: !2078, globals: !2154, splitDebugInlining: false, nameTableKind: None)
!2076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2077 = !{!1376, !1382}
!2078 = !{!2079, !2143, !2148, !1429, !1382, !1376, !2153, !124}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2081)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1377, line: 523, size: 288, elements: !2082)
!2082 = !{!2083, !2102, !2106, !2110, !2114, !2115, !2116, !2120, !2139}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2081, file: !1377, line: 524, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!125, !2087, !1417, !1418}
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094, !2100, !2101}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2089, file: !137, line: 380, baseType: !140, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2089, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2089, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2089, file: !137, line: 386, baseType: !2095, size: 32, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2097)
!2097 = !{!2098, !2099}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2096, file: !137, line: 359, baseType: !150, size: 8)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2096, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2089, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2089, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2081, file: !1377, line: 530, baseType: !2103, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!125, !2087, !1423}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2081, file: !1377, line: 532, baseType: !2107, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{!125, !2087, !1429, !1424}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2081, file: !1377, line: 535, baseType: !2111, size: 32, offset: 96)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!125, !2087, !1429}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2081, file: !1377, line: 537, baseType: !2111, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2081, file: !1377, line: 539, baseType: !2111, size: 32, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2081, file: !1377, line: 541, baseType: !2117, size: 32, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!125, !2087, !1417, !1376, !1382}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2081, file: !1377, line: 544, baseType: !2121, size: 32, offset: 224)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!125, !2087, !2124, !153}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1377, line: 478, size: 96, elements: !2126)
!2126 = !{!2127, !2133, !2138}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2125, file: !1377, line: 482, baseType: !2128, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1449, line: 33, baseType: !2129)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1449, line: 29, size: 32, elements: !2130)
!2130 = !{!2131}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2129, file: !1449, line: 30, baseType: !2132, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2125, file: !1377, line: 485, baseType: !2134, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1377, line: 464, baseType: !2135)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{null, !2087, !2124, !1429}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2125, file: !1377, line: 493, baseType: !1429, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2081, file: !1377, line: 547, baseType: !2140, size: 32, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!208, !2087}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1377, line: 428, size: 32, elements: !2146)
!2146 = !{!2147}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2145, file: !1377, line: 434, baseType: !1429, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1377, line: 441, size: 32, elements: !2151)
!2151 = !{!2152}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2150, file: !1377, line: 447, baseType: !1429, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2154 = !{!2155, !2073}
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2156 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2075, file: !2157, line: 37, type: !2158, isLocal: true, isDefinition: true)
!2157 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2160, size: 352, elements: !2161)
!2160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2087)
!2161 = !{!2162}
!2162 = !DISubrange(count: 11)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2165, file: !2209, line: 139, type: !2213, isLocal: false, isDefinition: true)
!2165 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2166, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2167, globals: !2206, splitDebugInlining: false, nameTableKind: None)
!2166 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 586, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 550, size: 1216, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2170, file: !419, line: 552, baseType: !423, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2170, file: !419, line: 553, baseType: !423, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2170, file: !419, line: 554, baseType: !423, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2170, file: !419, line: 555, baseType: !423, size: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2170, file: !419, line: 556, baseType: !423, size: 32, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2170, file: !419, line: 557, baseType: !423, size: 32, offset: 160)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2170, file: !419, line: 558, baseType: !423, size: 32, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2170, file: !419, line: 559, baseType: !208, size: 32, offset: 224)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2170, file: !419, line: 560, baseType: !423, size: 32, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2170, file: !419, line: 561, baseType: !423, size: 32, offset: 288)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2170, file: !419, line: 562, baseType: !1017, size: 64, offset: 320)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2170, file: !419, line: 563, baseType: !423, size: 32, offset: 384)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2170, file: !419, line: 564, baseType: !423, size: 32, offset: 416)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2170, file: !419, line: 565, baseType: !423, size: 32, offset: 448)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2170, file: !419, line: 566, baseType: !208, size: 32, offset: 480)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2170, file: !419, line: 567, baseType: !423, size: 32, offset: 512)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2170, file: !419, line: 568, baseType: !423, size: 32, offset: 544)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2170, file: !419, line: 569, baseType: !1017, size: 64, offset: 576)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2170, file: !419, line: 570, baseType: !423, size: 32, offset: 640)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2170, file: !419, line: 571, baseType: !423, size: 32, offset: 672)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2170, file: !419, line: 572, baseType: !423, size: 32, offset: 704)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2170, file: !419, line: 573, baseType: !208, size: 32, offset: 736)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2170, file: !419, line: 574, baseType: !423, size: 32, offset: 768)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2170, file: !419, line: 575, baseType: !423, size: 32, offset: 800)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2170, file: !419, line: 576, baseType: !1017, size: 64, offset: 832)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2170, file: !419, line: 577, baseType: !423, size: 32, offset: 896)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2170, file: !419, line: 578, baseType: !423, size: 32, offset: 928)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2170, file: !419, line: 579, baseType: !1017, size: 64, offset: 960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2170, file: !419, line: 580, baseType: !423, size: 32, offset: 1024)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2170, file: !419, line: 581, baseType: !423, size: 32, offset: 1056)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2170, file: !419, line: 582, baseType: !423, size: 32, offset: 1088)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2170, file: !419, line: 583, baseType: !423, size: 32, offset: 1120)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2170, file: !419, line: 584, baseType: !423, size: 32, offset: 1152)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2170, file: !419, line: 585, baseType: !423, size: 32, offset: 1184)
!2206 = !{!2207, !2210, !2163}
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2165, file: !2209, line: 137, type: !208, isLocal: false, isDefinition: true)
!2209 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2165, file: !2209, line: 138, type: !2212, isLocal: false, isDefinition: true)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2216, file: !2219, line: 23, type: !2220, isLocal: false, isDefinition: true)
!2216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2217, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2218, splitDebugInlining: false, nameTableKind: None)
!2217 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2218 = !{!2214}
!2219 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2223, file: !2227, line: 37, type: !2481, isLocal: false, isDefinition: true)
!2223 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2224, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2225, retainedTypes: !2234, globals: !2307, splitDebugInlining: false, nameTableKind: None)
!2224 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2225 = !{!2226, !46, !749}
!2226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2227, line: 63, baseType: !32, size: 32, elements: !2228)
!2227 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2228 = !{!2229, !2230, !2231, !2232, !2233}
!2229 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2230 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2231 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2232 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2233 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2234 = !{!272, !124, !125, !2235, !393, !208, !2265, !917, !150, !2290}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2238, line: 51, size: 64, elements: !2239)
!2238 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2239 = !{!2240, !2260}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2237, file: !2238, line: 52, baseType: !2241, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2238, line: 38, baseType: !2242)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!125, !2245, !184, !227}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2258, !2259}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2247, file: !137, line: 380, baseType: !140, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2247, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2247, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2247, file: !137, line: 386, baseType: !2253, size: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2254, file: !137, line: 359, baseType: !150, size: 8)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2254, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2247, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2247, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2237, file: !2238, line: 53, baseType: !2261, size: 32, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2238, line: 47, baseType: !2262)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!125, !2245, !184, !227, !208}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2267, file: !680, line: 447, baseType: !684, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2267, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2267, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2267, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2267, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2267, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2267, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2267, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2267, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2267, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2267, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2267, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2267, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2267, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2267, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2267, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2267, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2267, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2267, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2267, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2267, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2292)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2292, file: !680, line: 413, baseType: !1981, size: 256)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2292, file: !680, line: 414, baseType: !1983, size: 768, offset: 256)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2292, file: !680, line: 415, baseType: !1981, size: 256, offset: 1024)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2292, file: !680, line: 416, baseType: !1983, size: 768, offset: 1280)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2292, file: !680, line: 417, baseType: !1981, size: 256, offset: 2048)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2292, file: !680, line: 418, baseType: !1983, size: 768, offset: 2304)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2292, file: !680, line: 419, baseType: !1981, size: 256, offset: 3072)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2292, file: !680, line: 420, baseType: !1983, size: 768, offset: 3328)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2292, file: !680, line: 421, baseType: !1981, size: 256, offset: 4096)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2292, file: !680, line: 422, baseType: !1994, size: 1792, offset: 4352)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2292, file: !680, line: 423, baseType: !1998, size: 1920, offset: 6144)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2292, file: !680, line: 424, baseType: !2003, size: 20608, offset: 8064)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2292, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2307 = !{!2221, !2308, !2430, !2439, !2441, !2444, !2449, !2451, !2456}
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "_kernel", scope: !2223, file: !2227, line: 40, type: !2310, isLocal: false, isDefinition: true)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !567, line: 158, size: 288, elements: !2311)
!2311 = !{!2312, !2425}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2310, file: !567, line: 159, baseType: !2313, size: 192)
!2313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2314, size: 192, elements: !662)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !567, line: 100, size: 192, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2419, !2420, !2421, !2422}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2314, file: !567, line: 102, baseType: !208, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2314, file: !567, line: 105, baseType: !393, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2314, file: !567, line: 108, baseType: !2319, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2321)
!2321 = !{!2322, !2380, !2392, !2393, !2394, !2395, !2401, !2414}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2320, file: !531, line: 247, baseType: !2323, size: 384)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2324)
!2324 = !{!2325, !2349, !2356, !2357, !2358, !2367, !2368, !2369}
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !531, line: 60, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !531, line: 60, size: 64, elements: !2327)
!2327 = !{!2328, !2343}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2326, file: !531, line: 61, baseType: !2329, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2330)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2331)
!2331 = !{!2332, !2338}
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !541, line: 38, baseType: !2333, size: 32)
!2333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !541, line: 38, size: 32, elements: !2334)
!2334 = !{!2335, !2337}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2333, file: !541, line: 39, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2333, file: !541, line: 40, baseType: !2336, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !541, line: 42, baseType: !2339, size: 32, offset: 32)
!2339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !541, line: 42, size: 32, elements: !2340)
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2339, file: !541, line: 43, baseType: !2336, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2339, file: !541, line: 44, baseType: !2336, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2326, file: !531, line: 62, baseType: !2344, size: 64)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2345)
!2345 = !{!2346}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2344, file: !557, line: 50, baseType: !2347, size: 64)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2348, size: 64, elements: !562)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2323, file: !531, line: 68, baseType: !2350, size: 32, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2353)
!2353 = !{!2354}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2352, file: !567, line: 232, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2330)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2323, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2323, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !531, line: 90, baseType: !2359, size: 16, offset: 112)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !531, line: 90, size: 16, elements: !2360)
!2360 = !{!2361, !2366}
!2361 = !DIDerivedType(tag: DW_TAG_member, scope: !2359, file: !531, line: 91, baseType: !2362, size: 16)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2359, file: !531, line: 91, size: 16, elements: !2363)
!2363 = !{!2364, !2365}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2362, file: !531, line: 96, baseType: !581, size: 8)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2362, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2359, file: !531, line: 100, baseType: !227, size: 16)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2323, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2323, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2323, file: !531, line: 131, baseType: !2370, size: 192, offset: 192)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2371)
!2371 = !{!2372, !2373, !2379}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2370, file: !567, line: 245, baseType: !2329, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2370, file: !567, line: 246, baseType: !2374, size: 32, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{null, !2378}
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2370, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2320, file: !531, line: 250, baseType: !2381, size: 288, offset: 384)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2381, file: !601, line: 26, baseType: !208, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2381, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2381, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2381, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2381, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2381, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2381, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2381, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2381, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2320, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2320, file: !531, line: 256, baseType: !2351, size: 64, offset: 704)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2320, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2320, file: !531, line: 300, baseType: !2396, size: 96, offset: 800)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2397)
!2397 = !{!2398, !2399, !2400}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2396, file: !531, line: 153, baseType: !22, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2396, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2396, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2320, file: !531, line: 325, baseType: !2402, size: 32, offset: 896)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2404)
!2404 = !{!2405, !2411, !2412}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2403, file: !624, line: 5074, baseType: !2406, size: 96)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2407)
!2407 = !{!2408, !2409, !2410}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2406, file: !628, line: 57, baseType: !631, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2406, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2406, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2403, file: !624, line: 5075, baseType: !2351, size: 64, offset: 96)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2403, file: !624, line: 5076, baseType: !2413, offset: 160)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2320, file: !531, line: 343, baseType: !2415, size: 64, offset: 928)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2416)
!2416 = !{!2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2415, file: !601, line: 63, baseType: !208, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2415, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2314, file: !567, line: 111, baseType: !2319, size: 32, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2314, file: !567, line: 124, baseType: !125, size: 32, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2314, file: !567, line: 127, baseType: !150, size: 8, offset: 160)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2314, file: !567, line: 153, baseType: !2423, offset: 168)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2424, line: 33, elements: !639)
!2424 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2310, file: !567, line: 170, baseType: !2426, size: 96, offset: 192)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2426, file: !567, line: 86, baseType: !2319, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2426, file: !567, line: 90, baseType: !2355, size: 64, offset: 32)
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2223, file: !2227, line: 43, type: !2432, isLocal: false, isDefinition: true, align: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2433, size: 8704, elements: !2437)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2434, line: 47, size: 8, elements: !2435)
!2434 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2435 = !{!2436}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2433, file: !2434, line: 48, baseType: !142, size: 8)
!2437 = !{!2438}
!2438 = !DISubrange(count: 1088)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2223, file: !2227, line: 44, type: !2320, isLocal: false, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2223, file: !2227, line: 48, type: !2443, isLocal: false, isDefinition: true)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2320, size: 1024, elements: !662)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2223, file: !2227, line: 86, type: !2446, isLocal: false, isDefinition: true, align: 512)
!2446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2433, size: 16896, elements: !2447)
!2447 = !{!663, !2448}
!2448 = !DISubrange(count: 2112)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2223, file: !2227, line: 217, type: !153, isLocal: false, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2223, file: !2227, line: 50, type: !2453, isLocal: true, isDefinition: true, align: 512)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2433, size: 3072, elements: !2454)
!2454 = !{!663, !2455}
!2455 = !DISubrange(count: 384)
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "levels", scope: !2458, file: !2227, line: 232, type: !2478, isLocal: true, isDefinition: true)
!2458 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2227, file: !2227, line: 230, type: !2459, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !2461)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{null, !2226}
!2461 = !{!2462, !2463, !2473, !2477}
!2462 = !DILocalVariable(name: "level", arg: 1, scope: !2458, file: !2227, line: 230, type: !2226)
!2463 = !DILocalVariable(name: "entry", scope: !2458, file: !2227, line: 244, type: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2467)
!2467 = !{!2468, !2472}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2466, file: !434, line: 60, baseType: !2469, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!125, !2245}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2466, file: !434, line: 65, baseType: !2245, size: 32, offset: 32)
!2473 = !DILocalVariable(name: "dev", scope: !2474, file: !2227, line: 247, type: !2245)
!2474 = distinct !DILexicalBlock(scope: !2475, file: !2227, line: 246, column: 64)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !2227, line: 246, column: 2)
!2476 = distinct !DILexicalBlock(scope: !2458, file: !2227, line: 246, column: 2)
!2477 = !DILocalVariable(name: "rc", scope: !2474, file: !2227, line: 248, type: !125)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, size: 192, elements: !2479)
!2479 = !{!2480}
!2480 = !DISubrange(count: 6)
!2481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2482, file: !373, line: 17, baseType: !140, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2482, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2486 = !DIGlobalVariableExpression(var: !2487, expr: !DIExpression())
!2487 = distinct !DIGlobalVariable(name: "states_str", scope: !2488, file: !2489, line: 276, type: !2610, isLocal: true, isDefinition: true)
!2488 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2489, file: !2489, line: 271, type: !2490, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !2601)
!2489 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!140, !2492, !393, !272}
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2493)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2495)
!2495 = !{!2496, !2554, !2566, !2567, !2568, !2569, !2575, !2588}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2494, file: !531, line: 247, baseType: !2497, size: 384)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2498)
!2498 = !{!2499, !2523, !2530, !2531, !2532, !2541, !2542, !2543}
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !531, line: 60, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !531, line: 60, size: 64, elements: !2501)
!2501 = !{!2502, !2517}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2500, file: !531, line: 61, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2505)
!2505 = !{!2506, !2512}
!2506 = !DIDerivedType(tag: DW_TAG_member, scope: !2504, file: !541, line: 38, baseType: !2507, size: 32)
!2507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2504, file: !541, line: 38, size: 32, elements: !2508)
!2508 = !{!2509, !2511}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2507, file: !541, line: 39, baseType: !2510, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2507, file: !541, line: 40, baseType: !2510, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, scope: !2504, file: !541, line: 42, baseType: !2513, size: 32, offset: 32)
!2513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2504, file: !541, line: 42, size: 32, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2513, file: !541, line: 43, baseType: !2510, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2513, file: !541, line: 44, baseType: !2510, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2500, file: !531, line: 62, baseType: !2518, size: 64)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2519)
!2519 = !{!2520}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2518, file: !557, line: 50, baseType: !2521, size: 64)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2522, size: 64, elements: !562)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2497, file: !531, line: 68, baseType: !2524, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2526)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2527)
!2527 = !{!2528}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2526, file: !567, line: 232, baseType: !2529, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2504)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2497, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2497, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2532 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !531, line: 90, baseType: !2533, size: 16, offset: 112)
!2533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !531, line: 90, size: 16, elements: !2534)
!2534 = !{!2535, !2540}
!2535 = !DIDerivedType(tag: DW_TAG_member, scope: !2533, file: !531, line: 91, baseType: !2536, size: 16)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2533, file: !531, line: 91, size: 16, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2536, file: !531, line: 96, baseType: !581, size: 8)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2536, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2533, file: !531, line: 100, baseType: !227, size: 16)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2497, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2497, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2497, file: !531, line: 131, baseType: !2544, size: 192, offset: 192)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2545)
!2545 = !{!2546, !2547, !2553}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2544, file: !567, line: 245, baseType: !2503, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2544, file: !567, line: 246, baseType: !2548, size: 32, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2549)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{null, !2552}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2544, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2494, file: !531, line: 250, baseType: !2555, size: 288, offset: 384)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2555, file: !601, line: 26, baseType: !208, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2555, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2555, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2555, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2555, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2555, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2555, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2555, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2555, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2494, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2494, file: !531, line: 256, baseType: !2525, size: 64, offset: 704)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2494, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2494, file: !531, line: 300, baseType: !2570, size: 96, offset: 800)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2571)
!2571 = !{!2572, !2573, !2574}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2570, file: !531, line: 153, baseType: !22, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2570, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2570, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2494, file: !531, line: 325, baseType: !2576, size: 32, offset: 896)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2578)
!2578 = !{!2579, !2585, !2586}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2577, file: !624, line: 5074, baseType: !2580, size: 96)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2581)
!2581 = !{!2582, !2583, !2584}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2580, file: !628, line: 57, baseType: !631, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2580, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2580, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2577, file: !624, line: 5075, baseType: !2525, size: 64, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2577, file: !624, line: 5076, baseType: !2587, offset: 160)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2494, file: !531, line: 343, baseType: !2589, size: 64, offset: 928)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2590)
!2590 = !{!2591, !2592}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2589, file: !601, line: 63, baseType: !208, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2589, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2594, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2595, globals: !2597, splitDebugInlining: false, nameTableKind: None)
!2594 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2595 = !{!124, !140, !1966, !150, !125, !2596, !24, !272, !393, !22, !208, !1813}
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!2597 = !{!2486, !2598}
!2598 = !DIGlobalVariableExpression(var: !2599, expr: !DIExpression())
!2599 = distinct !DIGlobalVariable(name: "states_sz", scope: !2488, file: !2489, line: 279, type: !2600, isLocal: true, isDefinition: true)
!2600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2158, size: 256, elements: !337)
!2601 = !{!2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2602 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2488, file: !2489, line: 271, type: !2492)
!2603 = !DILocalVariable(name: "buf", arg: 2, scope: !2488, file: !2489, line: 271, type: !393)
!2604 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2488, file: !2489, line: 271, type: !272)
!2605 = !DILocalVariable(name: "off", scope: !2488, file: !2489, line: 273, type: !272)
!2606 = !DILocalVariable(name: "bit", scope: !2488, file: !2489, line: 274, type: !150)
!2607 = !DILocalVariable(name: "thread_state", scope: !2488, file: !2489, line: 275, type: !150)
!2608 = !DILocalVariable(name: "index", scope: !2609, file: !2489, line: 293, type: !150)
!2609 = distinct !DILexicalBlock(scope: !2488, file: !2489, line: 293, column: 2)
!2610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2611 = !DIGlobalVariableExpression(var: !2612, expr: !DIExpression())
!2612 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2613, file: !2721, line: 56, type: !2710, isLocal: false, isDefinition: true)
!2613 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2614, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2615, globals: !2718, splitDebugInlining: false, nameTableKind: None)
!2614 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2615 = !{!2616, !393, !124, !2716, !184, !1966, !917, !125, !208, !1813, !2717}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2618)
!2618 = !{!2619, !2677, !2689, !2690, !2691, !2692, !2698, !2711}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2617, file: !531, line: 247, baseType: !2620, size: 384)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2621)
!2621 = !{!2622, !2646, !2653, !2654, !2655, !2664, !2665, !2666}
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2620, file: !531, line: 60, baseType: !2623, size: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2620, file: !531, line: 60, size: 64, elements: !2624)
!2624 = !{!2625, !2640}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2623, file: !531, line: 61, baseType: !2626, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2627)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2628)
!2628 = !{!2629, !2635}
!2629 = !DIDerivedType(tag: DW_TAG_member, scope: !2627, file: !541, line: 38, baseType: !2630, size: 32)
!2630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2627, file: !541, line: 38, size: 32, elements: !2631)
!2631 = !{!2632, !2634}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2630, file: !541, line: 39, baseType: !2633, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2630, file: !541, line: 40, baseType: !2633, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, scope: !2627, file: !541, line: 42, baseType: !2636, size: 32, offset: 32)
!2636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2627, file: !541, line: 42, size: 32, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2636, file: !541, line: 43, baseType: !2633, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2636, file: !541, line: 44, baseType: !2633, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2623, file: !531, line: 62, baseType: !2641, size: 64)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2642)
!2642 = !{!2643}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2641, file: !557, line: 50, baseType: !2644, size: 64)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2645, size: 64, elements: !562)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2620, file: !531, line: 68, baseType: !2647, size: 32, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2650)
!2650 = !{!2651}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2649, file: !567, line: 232, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2627)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2620, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2620, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2655 = !DIDerivedType(tag: DW_TAG_member, scope: !2620, file: !531, line: 90, baseType: !2656, size: 16, offset: 112)
!2656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2620, file: !531, line: 90, size: 16, elements: !2657)
!2657 = !{!2658, !2663}
!2658 = !DIDerivedType(tag: DW_TAG_member, scope: !2656, file: !531, line: 91, baseType: !2659, size: 16)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2656, file: !531, line: 91, size: 16, elements: !2660)
!2660 = !{!2661, !2662}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2659, file: !531, line: 96, baseType: !581, size: 8)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2659, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2656, file: !531, line: 100, baseType: !227, size: 16)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2620, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2620, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2620, file: !531, line: 131, baseType: !2667, size: 192, offset: 192)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2668)
!2668 = !{!2669, !2670, !2676}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2667, file: !567, line: 245, baseType: !2626, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2667, file: !567, line: 246, baseType: !2671, size: 32, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2672)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{null, !2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2667, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2617, file: !531, line: 250, baseType: !2678, size: 288, offset: 384)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2679)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2678, file: !601, line: 26, baseType: !208, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2678, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2678, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2678, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2678, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2678, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2678, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2678, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2678, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2617, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2617, file: !531, line: 256, baseType: !2648, size: 64, offset: 704)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2617, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2617, file: !531, line: 300, baseType: !2693, size: 96, offset: 800)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2694)
!2694 = !{!2695, !2696, !2697}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2693, file: !531, line: 153, baseType: !22, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2693, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2693, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2617, file: !531, line: 325, baseType: !2699, size: 32, offset: 896)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2701)
!2701 = !{!2702, !2708, !2709}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2700, file: !624, line: 5074, baseType: !2703, size: 96)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2704)
!2704 = !{!2705, !2706, !2707}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2703, file: !628, line: 57, baseType: !631, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2703, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2703, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2700, file: !624, line: 5075, baseType: !2648, size: 64, offset: 96)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2700, file: !624, line: 5076, baseType: !2710, offset: 160)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2617, file: !531, line: 343, baseType: !2712, size: 64, offset: 928)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2712, file: !601, line: 63, baseType: !208, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2712, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2718 = !{!2611, !2719, !2722, !2724}
!2719 = !DIGlobalVariableExpression(var: !2720, expr: !DIExpression())
!2720 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2613, file: !2721, line: 404, type: !125, isLocal: true, isDefinition: true)
!2721 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2722 = !DIGlobalVariableExpression(var: !2723, expr: !DIExpression())
!2723 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2613, file: !2721, line: 405, type: !125, isLocal: true, isDefinition: true)
!2724 = !DIGlobalVariableExpression(var: !2725, expr: !DIExpression())
!2725 = distinct !DIGlobalVariable(name: "pending_current", scope: !2613, file: !2721, line: 425, type: !2616, isLocal: true, isDefinition: true)
!2726 = !DIGlobalVariableExpression(var: !2727, expr: !DIExpression())
!2727 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2728, file: !2758, line: 15, type: !1813, isLocal: true, isDefinition: true)
!2728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2729, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2730, globals: !2755, splitDebugInlining: false, nameTableKind: None)
!2729 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2730 = !{!1966, !124, !917, !208, !1813, !125, !2731, !393, !598}
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 32)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2733)
!2733 = !{!2734, !2749, !2754}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2732, file: !567, line: 245, baseType: !2735, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2736)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2737)
!2737 = !{!2738, !2744}
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !541, line: 38, baseType: !2739, size: 32)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !541, line: 38, size: 32, elements: !2740)
!2740 = !{!2741, !2743}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2739, file: !541, line: 39, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2739, file: !541, line: 40, baseType: !2742, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, scope: !2736, file: !541, line: 42, baseType: !2745, size: 32, offset: 32)
!2745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2736, file: !541, line: 42, size: 32, elements: !2746)
!2746 = !{!2747, !2748}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2745, file: !541, line: 43, baseType: !2742, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2745, file: !541, line: 44, baseType: !2742, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2732, file: !567, line: 246, baseType: !2750, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2751)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 32)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{null, !2731}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2732, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2755 = !{!2726, !2756, !2760, !2762}
!2756 = !DIGlobalVariableExpression(var: !2757, expr: !DIExpression())
!2757 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2728, file: !2758, line: 19, type: !2759, isLocal: true, isDefinition: true)
!2758 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2760 = !DIGlobalVariableExpression(var: !2761, expr: !DIExpression())
!2761 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2728, file: !2758, line: 25, type: !125, isLocal: true, isDefinition: true)
!2762 = !DIGlobalVariableExpression(var: !2763, expr: !DIExpression())
!2763 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2728, file: !2758, line: 17, type: !2764, isLocal: true, isDefinition: true)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2736)
!2765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2767 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2768, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2768 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2769 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2770, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2771, retainedTypes: !2791, splitDebugInlining: false, nameTableKind: None)
!2770 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2771 = !{!2772, !2780}
!2772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2773, line: 69, baseType: !32, size: 32, elements: !2774)
!2773 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2774 = !{!2775, !2776, !2777, !2778, !2779}
!2775 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2776 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2777 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2778 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2779 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2780 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2773, line: 56, baseType: !32, size: 32, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2782 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2783 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2784 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2785 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2786 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2787 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2788 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2789 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2790 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2791 = !{!125, !2772, !2780, !2792, !582, !160, !2794, !2795, !151, !228, !140, !272, !124, !22, !32, !387, !2797, !2798, !389, !388, !391, !390, !2793, !2799, !2800, !2801, !2802}
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2773, line: 31, baseType: !2793)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2773, line: 32, baseType: !2796)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1814)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2805 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2806, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2807, splitDebugInlining: false, nameTableKind: None)
!2806 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2807 = !{!140, !151, !125, !32}
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2812, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2812 = !{!184, !490, !2813}
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2814)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2816)
!2816 = !{!2817}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2815, file: !492, line: 65, baseType: !497, size: 1408)
!2818 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2819, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2820, splitDebugInlining: false, nameTableKind: None)
!2819 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2820 = !{!184, !2821, !150}
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2822)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 32)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2824)
!2824 = !{!2825}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2823, file: !492, line: 65, baseType: !497, size: 1408)
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2828 = !{!2829, !2835, !184, !150, !227}
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2830, line: 95, baseType: !2831)
!2830 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2830, line: 91, size: 96, elements: !2833)
!2833 = !{!2834, !2840, !2841}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2832, file: !2830, line: 92, baseType: !2835, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2838)
!2838 = !{!2839}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2837, file: !492, line: 65, baseType: !497, size: 1408)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2832, file: !2830, line: 93, baseType: !184, size: 32, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2832, file: !2830, line: 94, baseType: !32, size: 32, offset: 64)
!2842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2843, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2844, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2843 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2844 = !{!2845, !46}
!2845 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2846, line: 27, baseType: !32, size: 32, elements: !2847)
!2846 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2847 = !{!2848, !2849, !2850, !2851, !2852}
!2848 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2849 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2850 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2851 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2852 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2855, retainedTypes: !2856, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2855 = !{!749, !2845, !46}
!2856 = !{!943, !2857, !124, !125, !917, !208, !150, !2874}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2859)
!2859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2860)
!2860 = !{!2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2859, file: !680, line: 413, baseType: !1981, size: 256)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2859, file: !680, line: 414, baseType: !1983, size: 768, offset: 256)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2859, file: !680, line: 415, baseType: !1981, size: 256, offset: 1024)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2859, file: !680, line: 416, baseType: !1983, size: 768, offset: 1280)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2859, file: !680, line: 417, baseType: !1981, size: 256, offset: 2048)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2859, file: !680, line: 418, baseType: !1983, size: 768, offset: 2304)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2859, file: !680, line: 419, baseType: !1981, size: 256, offset: 3072)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2859, file: !680, line: 420, baseType: !1983, size: 768, offset: 3328)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2859, file: !680, line: 421, baseType: !1981, size: 256, offset: 4096)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2859, file: !680, line: 422, baseType: !1994, size: 1792, offset: 4352)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2859, file: !680, line: 423, baseType: !1998, size: 1920, offset: 6144)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2859, file: !680, line: 424, baseType: !2003, size: 20608, offset: 8064)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2859, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2877)
!2877 = !{!2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2876, file: !680, line: 447, baseType: !684, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2876, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2876, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2876, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2876, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2876, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2876, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2876, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2876, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2876, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2876, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2876, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2876, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2876, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2876, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2876, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2876, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2876, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2876, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2876, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2876, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2900, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2900 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2901 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2902, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2903, splitDebugInlining: false, nameTableKind: None)
!2902 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2903 = !{!124, !125, !22, !2904}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2906)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2907)
!2907 = !{!2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2906, file: !680, line: 447, baseType: !684, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2906, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2906, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2906, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2906, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2906, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2906, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2906, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2906, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2906, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2906, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2906, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2906, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2906, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2906, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2906, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2906, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2906, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2906, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2906, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2906, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2931, splitDebugInlining: false, nameTableKind: None)
!2930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2931 = !{!2932, !124, !125}
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2934)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2935)
!2935 = !{!2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2934, file: !680, line: 447, baseType: !684, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2934, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2934, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2934, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2934, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2934, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2934, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2934, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2934, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2934, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2934, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2934, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2934, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2934, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2934, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2934, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2934, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2934, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2934, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2934, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2934, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2957 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2958, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2959, splitDebugInlining: false, nameTableKind: None)
!2958 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!2959 = !{!2960, !208, !124, !125}
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2962, line: 98, size: 256, elements: !2963)
!2962 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2963 = !{!2964, !2969, !2974, !2979, !2984, !2989, !2994, !2999}
!2964 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 99, baseType: !2965, size: 32)
!2965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 99, size: 32, elements: !2966)
!2966 = !{!2967, !2968}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2965, file: !2962, line: 99, baseType: !208, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2965, file: !2962, line: 99, baseType: !208, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 100, baseType: !2970, size: 32, offset: 32)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 100, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2970, file: !2962, line: 100, baseType: !208, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2970, file: !2962, line: 100, baseType: !208, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 101, baseType: !2975, size: 32, offset: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 101, size: 32, elements: !2976)
!2976 = !{!2977, !2978}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2975, file: !2962, line: 101, baseType: !208, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2975, file: !2962, line: 101, baseType: !208, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 102, baseType: !2980, size: 32, offset: 96)
!2980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 102, size: 32, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2980, file: !2962, line: 102, baseType: !208, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2980, file: !2962, line: 102, baseType: !208, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 103, baseType: !2985, size: 32, offset: 128)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 103, size: 32, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2985, file: !2962, line: 103, baseType: !208, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2985, file: !2962, line: 103, baseType: !208, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 104, baseType: !2990, size: 32, offset: 160)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 104, size: 32, elements: !2991)
!2991 = !{!2992, !2993}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2990, file: !2962, line: 104, baseType: !208, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2990, file: !2962, line: 104, baseType: !208, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, scope: !2961, file: !2962, line: 105, baseType: !2995, size: 32, offset: 192)
!2995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2961, file: !2962, line: 105, size: 32, elements: !2996)
!2996 = !{!2997, !2998}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2995, file: !2962, line: 105, baseType: !208, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2995, file: !2962, line: 105, baseType: !208, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2961, file: !2962, line: 106, baseType: !208, size: 32, offset: 224)
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2844, retainedTypes: !3002, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3002 = !{!3003, !124, !125, !3028, !3071, !208}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3005, file: !680, line: 447, baseType: !684, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3005, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3005, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3005, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3005, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3005, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3005, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3005, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3005, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3005, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3005, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3005, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3005, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3005, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3005, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3005, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3005, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3005, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3005, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3005, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3005, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2962, line: 141, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2962, line: 97, size: 256, elements: !3031)
!3031 = !{!3032}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3030, file: !2962, line: 107, baseType: !3033, size: 256)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2962, line: 98, size: 256, elements: !3034)
!3034 = !{!3035, !3040, !3045, !3050, !3055, !3060, !3065, !3070}
!3035 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 99, baseType: !3036, size: 32)
!3036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 99, size: 32, elements: !3037)
!3037 = !{!3038, !3039}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3036, file: !2962, line: 99, baseType: !208, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3036, file: !2962, line: 99, baseType: !208, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 100, baseType: !3041, size: 32, offset: 32)
!3041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 100, size: 32, elements: !3042)
!3042 = !{!3043, !3044}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3041, file: !2962, line: 100, baseType: !208, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3041, file: !2962, line: 100, baseType: !208, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 101, baseType: !3046, size: 32, offset: 64)
!3046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 101, size: 32, elements: !3047)
!3047 = !{!3048, !3049}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3046, file: !2962, line: 101, baseType: !208, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3046, file: !2962, line: 101, baseType: !208, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 102, baseType: !3051, size: 32, offset: 96)
!3051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 102, size: 32, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3051, file: !2962, line: 102, baseType: !208, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3051, file: !2962, line: 102, baseType: !208, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 103, baseType: !3056, size: 32, offset: 128)
!3056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 103, size: 32, elements: !3057)
!3057 = !{!3058, !3059}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3056, file: !2962, line: 103, baseType: !208, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3056, file: !2962, line: 103, baseType: !208, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 104, baseType: !3061, size: 32, offset: 160)
!3061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 104, size: 32, elements: !3062)
!3062 = !{!3063, !3064}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3061, file: !2962, line: 104, baseType: !208, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3061, file: !2962, line: 104, baseType: !208, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, scope: !3033, file: !2962, line: 105, baseType: !3066, size: 32, offset: 192)
!3066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !2962, line: 105, size: 32, elements: !3067)
!3067 = !{!3068, !3069}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3066, file: !2962, line: 105, baseType: !208, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3066, file: !2962, line: 105, baseType: !208, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3033, file: !2962, line: 106, baseType: !208, size: 32, offset: 224)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!3072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1964, retainedTypes: !3074, splitDebugInlining: false, nameTableKind: None)
!3073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3074 = !{!943, !917, !150, !208, !3075, !3092}
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !3077)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !3078)
!3078 = !{!3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3077, file: !680, line: 413, baseType: !1981, size: 256)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3077, file: !680, line: 414, baseType: !1983, size: 768, offset: 256)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3077, file: !680, line: 415, baseType: !1981, size: 256, offset: 1024)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3077, file: !680, line: 416, baseType: !1983, size: 768, offset: 1280)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3077, file: !680, line: 417, baseType: !1981, size: 256, offset: 2048)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3077, file: !680, line: 418, baseType: !1983, size: 768, offset: 2304)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3077, file: !680, line: 419, baseType: !1981, size: 256, offset: 3072)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3077, file: !680, line: 420, baseType: !1983, size: 768, offset: 3328)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3077, file: !680, line: 421, baseType: !1981, size: 256, offset: 4096)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3077, file: !680, line: 422, baseType: !1994, size: 1792, offset: 4352)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3077, file: !680, line: 423, baseType: !1998, size: 1920, offset: 6144)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3077, file: !680, line: 424, baseType: !2003, size: 20608, offset: 8064)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3077, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3094)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3095)
!3095 = !{!3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3094, file: !680, line: 447, baseType: !684, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3094, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3094, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3094, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3094, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3094, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3094, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3094, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3094, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3094, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3094, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3094, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3094, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3094, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3094, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3094, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3094, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3094, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3094, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3094, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3094, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3117 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3118, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3119, splitDebugInlining: false, nameTableKind: None)
!3118 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3119 = !{!3120, !124, !125}
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3122, file: !680, line: 447, baseType: !684, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3122, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3122, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3122, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3122, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3122, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3122, file: !680, line: 453, baseType: !2018, size: 96, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3122, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3122, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3122, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3122, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3122, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3122, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3122, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3122, file: !680, line: 461, baseType: !2027, size: 64, offset: 512)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3122, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3122, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3122, file: !680, line: 464, baseType: !2031, size: 128, offset: 640)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3122, file: !680, line: 465, baseType: !2033, size: 160, offset: 768)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3122, file: !680, line: 466, baseType: !2035, size: 160, offset: 928)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3122, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3147, splitDebugInlining: false, nameTableKind: None)
!3146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3147 = !{!142, !393, !272, !1152, !3148, !151, !124}
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3150 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3151, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3152, splitDebugInlining: false, nameTableKind: None)
!3151 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3152 = !{!3153}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 586, baseType: !3155)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 550, size: 1216, elements: !3156)
!3156 = !{!3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3155, file: !419, line: 552, baseType: !423, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3155, file: !419, line: 553, baseType: !423, size: 32, offset: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3155, file: !419, line: 554, baseType: !423, size: 32, offset: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3155, file: !419, line: 555, baseType: !423, size: 32, offset: 96)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3155, file: !419, line: 556, baseType: !423, size: 32, offset: 128)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3155, file: !419, line: 557, baseType: !423, size: 32, offset: 160)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3155, file: !419, line: 558, baseType: !423, size: 32, offset: 192)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3155, file: !419, line: 559, baseType: !208, size: 32, offset: 224)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3155, file: !419, line: 560, baseType: !423, size: 32, offset: 256)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3155, file: !419, line: 561, baseType: !423, size: 32, offset: 288)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3155, file: !419, line: 562, baseType: !1017, size: 64, offset: 320)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3155, file: !419, line: 563, baseType: !423, size: 32, offset: 384)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3155, file: !419, line: 564, baseType: !423, size: 32, offset: 416)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3155, file: !419, line: 565, baseType: !423, size: 32, offset: 448)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3155, file: !419, line: 566, baseType: !208, size: 32, offset: 480)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3155, file: !419, line: 567, baseType: !423, size: 32, offset: 512)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3155, file: !419, line: 568, baseType: !423, size: 32, offset: 544)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3155, file: !419, line: 569, baseType: !1017, size: 64, offset: 576)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3155, file: !419, line: 570, baseType: !423, size: 32, offset: 640)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3155, file: !419, line: 571, baseType: !423, size: 32, offset: 672)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3155, file: !419, line: 572, baseType: !423, size: 32, offset: 704)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3155, file: !419, line: 573, baseType: !208, size: 32, offset: 736)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3155, file: !419, line: 574, baseType: !423, size: 32, offset: 768)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3155, file: !419, line: 575, baseType: !423, size: 32, offset: 800)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3155, file: !419, line: 576, baseType: !1017, size: 64, offset: 832)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3155, file: !419, line: 577, baseType: !423, size: 32, offset: 896)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3155, file: !419, line: 578, baseType: !423, size: 32, offset: 928)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3155, file: !419, line: 579, baseType: !1017, size: 64, offset: 960)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3155, file: !419, line: 580, baseType: !423, size: 32, offset: 1024)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3155, file: !419, line: 581, baseType: !423, size: 32, offset: 1056)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3155, file: !419, line: 582, baseType: !423, size: 32, offset: 1088)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3155, file: !419, line: 583, baseType: !423, size: 32, offset: 1120)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3155, file: !419, line: 584, baseType: !423, size: 32, offset: 1152)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3155, file: !419, line: 585, baseType: !423, size: 32, offset: 1184)
!3191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3192 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3195, retainedTypes: !3211, splitDebugInlining: false, nameTableKind: None)
!3194 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3195 = !{!3196, !3203, !3207}
!3196 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3197, line: 38, baseType: !32, size: 32, elements: !3198)
!3197 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3198 = !{!3199, !3200, !3201, !3202}
!3199 = !DIEnumerator(name: "HAL_OK", value: 0)
!3200 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3201 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3202 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3203 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !990, line: 184, baseType: !32, size: 32, elements: !3204)
!3204 = !{!3205, !3206}
!3205 = !DIEnumerator(name: "RESET", value: 0)
!3206 = !DIEnumerator(name: "SET", value: 1)
!3207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !990, line: 190, baseType: !32, size: 32, elements: !3208)
!3208 = !{!3209, !3210}
!3209 = !DIEnumerator(name: "DISABLE", value: 0)
!3210 = !DIEnumerator(name: "ENABLE", value: 1)
!3211 = !{!3212, !208, !3250, !1815, !150, !1813, !124}
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 586, baseType: !3214)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 550, size: 1216, elements: !3215)
!3215 = !{!3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3214, file: !419, line: 552, baseType: !423, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3214, file: !419, line: 553, baseType: !423, size: 32, offset: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3214, file: !419, line: 554, baseType: !423, size: 32, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3214, file: !419, line: 555, baseType: !423, size: 32, offset: 96)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3214, file: !419, line: 556, baseType: !423, size: 32, offset: 128)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3214, file: !419, line: 557, baseType: !423, size: 32, offset: 160)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3214, file: !419, line: 558, baseType: !423, size: 32, offset: 192)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3214, file: !419, line: 559, baseType: !208, size: 32, offset: 224)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3214, file: !419, line: 560, baseType: !423, size: 32, offset: 256)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3214, file: !419, line: 561, baseType: !423, size: 32, offset: 288)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3214, file: !419, line: 562, baseType: !1017, size: 64, offset: 320)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3214, file: !419, line: 563, baseType: !423, size: 32, offset: 384)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3214, file: !419, line: 564, baseType: !423, size: 32, offset: 416)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3214, file: !419, line: 565, baseType: !423, size: 32, offset: 448)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3214, file: !419, line: 566, baseType: !208, size: 32, offset: 480)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3214, file: !419, line: 567, baseType: !423, size: 32, offset: 512)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3214, file: !419, line: 568, baseType: !423, size: 32, offset: 544)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3214, file: !419, line: 569, baseType: !1017, size: 64, offset: 576)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3214, file: !419, line: 570, baseType: !423, size: 32, offset: 640)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3214, file: !419, line: 571, baseType: !423, size: 32, offset: 672)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3214, file: !419, line: 572, baseType: !423, size: 32, offset: 704)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3214, file: !419, line: 573, baseType: !208, size: 32, offset: 736)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3214, file: !419, line: 574, baseType: !423, size: 32, offset: 768)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3214, file: !419, line: 575, baseType: !423, size: 32, offset: 800)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3214, file: !419, line: 576, baseType: !1017, size: 64, offset: 832)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3214, file: !419, line: 577, baseType: !423, size: 32, offset: 896)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3214, file: !419, line: 578, baseType: !423, size: 32, offset: 928)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3214, file: !419, line: 579, baseType: !1017, size: 64, offset: 960)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3214, file: !419, line: 580, baseType: !423, size: 32, offset: 1024)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3214, file: !419, line: 581, baseType: !423, size: 32, offset: 1056)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3214, file: !419, line: 582, baseType: !423, size: 32, offset: 1088)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3214, file: !419, line: 583, baseType: !423, size: 32, offset: 1120)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3214, file: !419, line: 584, baseType: !423, size: 32, offset: 1152)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3214, file: !419, line: 585, baseType: !423, size: 32, offset: 1184)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 544, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 540, size: 64, elements: !3253)
!3253 = !{!3254, !3255}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3252, file: !419, line: 542, baseType: !423, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3252, file: !419, line: 543, baseType: !423, size: 32, offset: 32)
!3256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3257, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3258, retainedTypes: !3259, splitDebugInlining: false, nameTableKind: None)
!3257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3258 = !{!989}
!3259 = !{!3260, !208, !3268, !3274, !3285}
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !3262)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !3263)
!3263 = !{!3264, !3265, !3266, !3267}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3262, file: !680, line: 766, baseType: !423, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3262, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3262, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3262, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 544, baseType: !3270)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 540, size: 64, elements: !3271)
!3271 = !{!3272, !3273}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3270, file: !419, line: 542, baseType: !423, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3270, file: !419, line: 543, baseType: !423, size: 32, offset: 32)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 407, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 398, size: 224, elements: !3277)
!3277 = !{!3278, !3279, !3280, !3281, !3282, !3283, !3284}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3276, file: !419, line: 400, baseType: !423, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3276, file: !419, line: 401, baseType: !423, size: 32, offset: 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3276, file: !419, line: 402, baseType: !423, size: 32, offset: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3276, file: !419, line: 403, baseType: !423, size: 32, offset: 96)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3276, file: !419, line: 404, baseType: !423, size: 32, offset: 128)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3276, file: !419, line: 405, baseType: !423, size: 32, offset: 160)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3276, file: !419, line: 406, baseType: !423, size: 32, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 586, baseType: !3287)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 550, size: 1216, elements: !3288)
!3288 = !{!3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3287, file: !419, line: 552, baseType: !423, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3287, file: !419, line: 553, baseType: !423, size: 32, offset: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3287, file: !419, line: 554, baseType: !423, size: 32, offset: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3287, file: !419, line: 555, baseType: !423, size: 32, offset: 96)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3287, file: !419, line: 556, baseType: !423, size: 32, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3287, file: !419, line: 557, baseType: !423, size: 32, offset: 160)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3287, file: !419, line: 558, baseType: !423, size: 32, offset: 192)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3287, file: !419, line: 559, baseType: !208, size: 32, offset: 224)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3287, file: !419, line: 560, baseType: !423, size: 32, offset: 256)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3287, file: !419, line: 561, baseType: !423, size: 32, offset: 288)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3287, file: !419, line: 562, baseType: !1017, size: 64, offset: 320)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3287, file: !419, line: 563, baseType: !423, size: 32, offset: 384)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3287, file: !419, line: 564, baseType: !423, size: 32, offset: 416)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3287, file: !419, line: 565, baseType: !423, size: 32, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3287, file: !419, line: 566, baseType: !208, size: 32, offset: 480)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3287, file: !419, line: 567, baseType: !423, size: 32, offset: 512)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3287, file: !419, line: 568, baseType: !423, size: 32, offset: 544)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3287, file: !419, line: 569, baseType: !1017, size: 64, offset: 576)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3287, file: !419, line: 570, baseType: !423, size: 32, offset: 640)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3287, file: !419, line: 571, baseType: !423, size: 32, offset: 672)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3287, file: !419, line: 572, baseType: !423, size: 32, offset: 704)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3287, file: !419, line: 573, baseType: !208, size: 32, offset: 736)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3287, file: !419, line: 574, baseType: !423, size: 32, offset: 768)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3287, file: !419, line: 575, baseType: !423, size: 32, offset: 800)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3287, file: !419, line: 576, baseType: !1017, size: 64, offset: 832)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3287, file: !419, line: 577, baseType: !423, size: 32, offset: 896)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3287, file: !419, line: 578, baseType: !423, size: 32, offset: 928)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3287, file: !419, line: 579, baseType: !1017, size: 64, offset: 960)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3287, file: !419, line: 580, baseType: !423, size: 32, offset: 1024)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3287, file: !419, line: 581, baseType: !423, size: 32, offset: 1056)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3287, file: !419, line: 582, baseType: !423, size: 32, offset: 1088)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3287, file: !419, line: 583, baseType: !423, size: 32, offset: 1120)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3287, file: !419, line: 584, baseType: !423, size: 32, offset: 1152)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3287, file: !419, line: 585, baseType: !423, size: 32, offset: 1184)
!3323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3325, splitDebugInlining: false, nameTableKind: None)
!3324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3325 = !{!124, !272}
!3326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3328, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3328 = !{!3329, !3336, !46}
!3329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3330, line: 14, baseType: !32, size: 32, elements: !3331)
!3330 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3331 = !{!3332, !3333, !3334, !3335}
!3332 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3333 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3334 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3335 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3330, line: 42, baseType: !32, size: 32, elements: !3337)
!3337 = !{!3338, !3339, !3340, !3341, !3342, !3343}
!3338 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3339 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3340 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3341 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3342 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3343 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3348, splitDebugInlining: false, nameTableKind: None)
!3347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3348 = !{!22, !124, !125}
!3349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!3351 = !{!"Ubuntu clang version 14.0.6"}
!3352 = !{i32 7, !"Dwarf Version", i32 4}
!3353 = !{i32 2, !"Debug Info Version", i32 3}
!3354 = !{i32 1, !"wchar_size", i32 4}
!3355 = !{i32 1, !"min_enum_size", i32 4}
!3356 = !{i32 1, !"branch-target-enforcement", i32 0}
!3357 = !{i32 1, !"sign-return-address", i32 0}
!3358 = !{i32 1, !"sign-return-address-all", i32 0}
!3359 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3360 = !{i32 7, !"frame-pointer", i32 2}
!3361 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3362, file: !3362, line: 26, type: !3363, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2765, retainedNodes: !639)
!3362 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3363 = !DISubroutineType(types: !3364)
!3364 = !{null}
!3365 = !DILocation(line: 28, column: 1, scope: !3361)
!3366 = !{i64 2155362195, i64 2155362215, i64 2155362278}
!3367 = !DILocation(line: 29, column: 1, scope: !3361)
!3368 = !{i64 2155362610, i64 2155362630, i64 2155362693}
!3369 = !DILocation(line: 30, column: 1, scope: !3361)
!3370 = !{i64 2155363029, i64 2155363049, i64 2155363112}
!3371 = !DILocation(line: 31, column: 1, scope: !3361)
!3372 = !{i64 2155363448, i64 2155363468, i64 2155363531}
!3373 = !DILocation(line: 33, column: 1, scope: !3361)
!3374 = !{i64 2155363740, i64 2155363760, i64 2155363823}
!3375 = !DILocation(line: 35, column: 1, scope: !3361)
!3376 = !{i64 2155364065, i64 2155364085, i64 2155364148}
!3377 = !DILocation(line: 50, column: 1, scope: !3361)
!3378 = !{i64 2155364492, i64 2155364512, i64 2155364575}
!3379 = !DILocation(line: 54, column: 1, scope: !3361)
!3380 = !{i64 2155368992, i64 2155369012, i64 2155369075}
!3381 = !DILocation(line: 61, column: 1, scope: !3361)
!3382 = !{i64 2155369309, i64 2155369329, i64 2155369392}
!3383 = !DILocation(line: 63, column: 1, scope: !3361)
!3384 = !{i64 2155369689, i64 2155369709, i64 2155369772}
!3385 = !DILocation(line: 64, column: 1, scope: !3361)
!3386 = !{i64 2155370211, i64 2155370231, i64 2155370294}
!3387 = !DILocation(line: 65, column: 1, scope: !3361)
!3388 = !{i64 2155370709, i64 2155370729, i64 2155370792}
!3389 = !DILocation(line: 66, column: 1, scope: !3361)
!3390 = !{i64 2155371191, i64 2155371211, i64 2155371274}
!3391 = !DILocation(line: 67, column: 1, scope: !3361)
!3392 = !{i64 2155371698, i64 2155371718, i64 2155371781}
!3393 = !DILocation(line: 68, column: 1, scope: !3361)
!3394 = !{i64 2155372186, i64 2155372206, i64 2155372269}
!3395 = !DILocation(line: 70, column: 1, scope: !3361)
!3396 = !{i64 2155372654, i64 2155372674, i64 2155372737}
!3397 = !DILocation(line: 71, column: 1, scope: !3361)
!3398 = !{i64 2155373096, i64 2155373116, i64 2155373179}
!3399 = !DILocation(line: 72, column: 1, scope: !3361)
!3400 = !{i64 2155373554, i64 2155373574, i64 2155373637}
!3401 = !DILocation(line: 79, column: 1, scope: !3361)
!3402 = !{i64 2155374008, i64 2155374028, i64 2155374091}
!3403 = !DILocation(line: 80, column: 1, scope: !3361)
!3404 = !{i64 2155374519, i64 2155374539, i64 2155374602}
!3405 = !DILocation(line: 82, column: 1, scope: !3361)
!3406 = !{i64 2155375010, i64 2155375030, i64 2155375093}
!3407 = !DILocation(line: 97, column: 1, scope: !3361)
!3408 = !{i64 2155375347, i64 2155375367, i64 2155375430}
!3409 = !DILocation(line: 99, column: 1, scope: !3361)
!3410 = !{i64 2155375565, i64 2155375585, i64 2155375648}
!3411 = !DILocation(line: 102, column: 1, scope: !3361)
!3412 = !{i64 2155375822, i64 2155375842, i64 2155375905}
!3413 = !DILocation(line: 105, column: 1, scope: !3361)
!3414 = !{i64 2155376062, i64 2155376082, i64 2155376145}
!3415 = !DILocation(line: 115, column: 1, scope: !3361)
!3416 = !{i64 2155376401, i64 2155376421, i64 2155376484}
!3417 = !DILocation(line: 118, column: 1, scope: !3361)
!3418 = !{i64 2155376745, i64 2155376765, i64 2155376828}
!3419 = !DILocation(line: 32, column: 1, scope: !3420)
!3420 = !DILexicalBlockFile(scope: !3361, file: !3421, discriminator: 0)
!3421 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3422 = !{i64 2155377101, i64 2155377121, i64 2155377184}
!3423 = !DILocation(line: 33, column: 1, scope: !3420)
!3424 = !{i64 2155377613, i64 2155377633, i64 2155377696}
!3425 = !DILocation(line: 53, column: 1, scope: !3420)
!3426 = !{i64 2155378121, i64 2155378141, i64 2155378204}
!3427 = !DILocation(line: 54, column: 1, scope: !3420)
!3428 = !{i64 2155382600, i64 2155382620, i64 2155382683}
!3429 = !DILocation(line: 55, column: 1, scope: !3420)
!3430 = !{i64 2155383018, i64 2155383038, i64 2155383101}
!3431 = !DILocation(line: 56, column: 1, scope: !3420)
!3432 = !{i64 2155383436, i64 2155383456, i64 2155383519}
!3433 = !DILocation(line: 57, column: 1, scope: !3420)
!3434 = !{i64 2155383854, i64 2155383874, i64 2155383937}
!3435 = !DILocation(line: 58, column: 1, scope: !3420)
!3436 = !{i64 2155384272, i64 2155384292, i64 2155384355}
!3437 = !DILocation(line: 59, column: 1, scope: !3420)
!3438 = !{i64 2155384690, i64 2155384710, i64 2155384773}
!3439 = !DILocation(line: 60, column: 1, scope: !3420)
!3440 = !{i64 2155385114, i64 2155385134, i64 2155385197}
!3441 = !DILocation(line: 61, column: 1, scope: !3420)
!3442 = !{i64 2155385431, i64 2155385451, i64 2155385514}
!3443 = !DILocation(line: 70, column: 1, scope: !3420)
!3444 = !{i64 2155385660, i64 2155385680, i64 2155385743}
!3445 = !DILocation(line: 72, column: 1, scope: !3420)
!3446 = !{i64 2155385992, i64 2155386012, i64 2155386075}
!3447 = !DILocation(line: 73, column: 1, scope: !3420)
!3448 = !{i64 2155386442, i64 2155386462, i64 2155386525}
!3449 = !DILocation(line: 74, column: 1, scope: !3420)
!3450 = !{i64 2155386892, i64 2155386912, i64 2155386975}
!3451 = !DILocation(line: 75, column: 1, scope: !3420)
!3452 = !{i64 2155387342, i64 2155387362, i64 2155387425}
!3453 = !DILocation(line: 76, column: 1, scope: !3420)
!3454 = !{i64 2155387792, i64 2155387812, i64 2155387875}
!3455 = !DILocation(line: 77, column: 1, scope: !3420)
!3456 = !{i64 2155388242, i64 2155388262, i64 2155388325}
!3457 = !DILocation(line: 78, column: 1, scope: !3420)
!3458 = !{i64 2155388692, i64 2155388712, i64 2155388775}
!3459 = !DILocation(line: 79, column: 1, scope: !3420)
!3460 = !{i64 2155389142, i64 2155389162, i64 2155389225}
!3461 = !DILocation(line: 80, column: 1, scope: !3420)
!3462 = !{i64 2155389595, i64 2155389615, i64 2155389678}
!3463 = !DILocation(line: 84, column: 1, scope: !3420)
!3464 = !{i64 2155389927, i64 2155389947, i64 2155390010}
!3465 = !DILocation(line: 91, column: 1, scope: !3420)
!3466 = !{i64 2155390324, i64 2155390344, i64 2155390407}
!3467 = !DILocation(line: 93, column: 1, scope: !3420)
!3468 = !{i64 2155390691, i64 2155390711, i64 2155390774}
!3469 = !DILocation(line: 106, column: 1, scope: !3420)
!3470 = !{i64 2155390961, i64 2155390981, i64 2155391044}
!3471 = !DILocation(line: 11, column: 1, scope: !3472)
!3472 = !DILexicalBlockFile(scope: !3361, file: !3473, discriminator: 0)
!3473 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3474 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3475)
!3475 = !{!3476, !3477}
!3476 = !DILocalVariable(name: "dev", arg: 1, scope: !3474, file: !294, line: 80, type: !134)
!3477 = !DILocalVariable(name: "flags", scope: !3474, file: !294, line: 82, type: !208)
!3478 = !DILocation(line: 0, scope: !3474)
!3479 = !DILocation(line: 84, column: 10, scope: !3474)
!3480 = !DILocation(line: 85, column: 13, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3474, file: !294, line: 85, column: 6)
!3482 = !DILocation(line: 85, column: 28, scope: !3481)
!3483 = !DILocation(line: 85, column: 6, scope: !3474)
!3484 = !DILocation(line: 86, column: 3, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !294, line: 86, column: 3)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !294, line: 86, column: 3)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !294, line: 86, column: 3)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !294, line: 86, column: 3)
!3489 = distinct !DILexicalBlock(scope: !3481, file: !294, line: 85, column: 35)
!3490 = !DILocation(line: 88, column: 3, scope: !3489)
!3491 = !DILocation(line: 91, column: 13, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3474, file: !294, line: 91, column: 6)
!3493 = !DILocation(line: 91, column: 29, scope: !3492)
!3494 = !DILocation(line: 91, column: 6, scope: !3474)
!3495 = !DILocation(line: 92, column: 3, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !294, line: 92, column: 3)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !294, line: 92, column: 3)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !294, line: 92, column: 3)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !294, line: 92, column: 3)
!3500 = distinct !DILexicalBlock(scope: !3492, file: !294, line: 91, column: 36)
!3501 = !DILocation(line: 94, column: 3, scope: !3500)
!3502 = !DILocation(line: 97, column: 13, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3474, file: !294, line: 97, column: 6)
!3504 = !DILocation(line: 97, column: 37, scope: !3503)
!3505 = !DILocation(line: 97, column: 6, scope: !3474)
!3506 = !DILocation(line: 98, column: 3, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !294, line: 98, column: 3)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !294, line: 98, column: 3)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !294, line: 98, column: 3)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !294, line: 98, column: 3)
!3511 = distinct !DILexicalBlock(scope: !3503, file: !294, line: 97, column: 44)
!3512 = !DILocation(line: 100, column: 3, scope: !3511)
!3513 = !DILocation(line: 103, column: 12, scope: !3474)
!3514 = !DILocation(line: 105, column: 2, scope: !3474)
!3515 = !DILocation(line: 107, column: 1, scope: !3474)
!3516 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3517)
!3517 = !{!3518, !3519, !3520}
!3518 = !DILocalVariable(name: "dev", arg: 1, scope: !3516, file: !128, line: 108, type: !134)
!3519 = !DILocalVariable(name: "api", scope: !3516, file: !128, line: 110, type: !126)
!3520 = !DILocalVariable(name: "tmp", scope: !3516, file: !128, line: 111, type: !125)
!3521 = !DILocation(line: 0, scope: !3516)
!3522 = !DILocation(line: 113, column: 42, scope: !3516)
!3523 = !DILocation(line: 115, column: 13, scope: !3516)
!3524 = !DILocation(line: 115, column: 8, scope: !3516)
!3525 = !DILocation(line: 125, column: 2, scope: !3516)
!3526 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3527, file: !3527, line: 175, type: !3528, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3530)
!3527 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!142, !125}
!3530 = !{!3531}
!3531 = !DILocalVariable(name: "level", arg: 1, scope: !3526, file: !3527, line: 175, type: !125)
!3532 = !DILocation(line: 0, scope: !3526)
!3533 = !DILocation(line: 177, column: 2, scope: !3526)
!3534 = !DILocation(line: 189, column: 1, scope: !3526)
!3535 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3536)
!3536 = !{!3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546}
!3537 = !DILocalVariable(name: "dev", arg: 1, scope: !3535, file: !294, line: 109, type: !134)
!3538 = !DILocalVariable(name: "ecb_key", scope: !3535, file: !294, line: 112, type: !311)
!3539 = !DILocalVariable(name: "ecb_plaintext", scope: !3535, file: !294, line: 116, type: !311)
!3540 = !DILocalVariable(name: "ecb_ciphertext", scope: !3535, file: !294, line: 120, type: !2212)
!3541 = !DILocalVariable(name: "encrypted", scope: !3535, file: !294, line: 125, type: !311)
!3542 = !DILocalVariable(name: "decrypted", scope: !3535, file: !294, line: 126, type: !311)
!3543 = !DILocalVariable(name: "ini", scope: !3535, file: !294, line: 127, type: !166)
!3544 = !DILocalVariable(name: "encrypt", scope: !3535, file: !294, line: 132, type: !181)
!3545 = !DILocalVariable(name: "decrypt", scope: !3535, file: !294, line: 138, type: !181)
!3546 = !DILabel(scope: !3535, name: "out", file: !294, line: 191)
!3547 = !DILocation(line: 0, scope: !3535)
!3548 = !DILocation(line: 112, column: 2, scope: !3535)
!3549 = !DILocation(line: 112, column: 10, scope: !3535)
!3550 = !DILocation(line: 116, column: 2, scope: !3535)
!3551 = !DILocation(line: 116, column: 10, scope: !3535)
!3552 = !DILocation(line: 120, column: 2, scope: !3535)
!3553 = !DILocation(line: 120, column: 16, scope: !3535)
!3554 = !DILocation(line: 125, column: 2, scope: !3535)
!3555 = !DILocation(line: 125, column: 10, scope: !3535)
!3556 = !DILocation(line: 126, column: 2, scope: !3535)
!3557 = !DILocation(line: 126, column: 10, scope: !3535)
!3558 = !DILocation(line: 127, column: 2, scope: !3535)
!3559 = !DILocation(line: 127, column: 20, scope: !3535)
!3560 = !DILocation(line: 129, column: 7, scope: !3535)
!3561 = !DILocation(line: 127, column: 26, scope: !3535)
!3562 = !DILocation(line: 130, column: 12, scope: !3535)
!3563 = !DILocation(line: 132, column: 2, scope: !3535)
!3564 = !DILocation(line: 132, column: 20, scope: !3535)
!3565 = !DILocation(line: 132, column: 30, scope: !3535)
!3566 = !DILocation(line: 138, column: 2, scope: !3535)
!3567 = !DILocation(line: 138, column: 20, scope: !3535)
!3568 = !DILocation(line: 138, column: 30, scope: !3535)
!3569 = !DILocation(line: 145, column: 6, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 145, column: 6)
!3571 = !DILocation(line: 145, column: 6, scope: !3535)
!3572 = !DILocation(line: 151, column: 6, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 151, column: 6)
!3574 = !DILocation(line: 151, column: 6, scope: !3535)
!3575 = !DILocation(line: 152, column: 3, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !294, line: 152, column: 3)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !294, line: 152, column: 3)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !294, line: 152, column: 3)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !294, line: 152, column: 3)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !294, line: 151, column: 39)
!3581 = !DILocation(line: 153, column: 3, scope: !3580)
!3582 = !DILocation(line: 156, column: 2, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !294, line: 156, column: 2)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !294, line: 156, column: 2)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !294, line: 156, column: 2)
!3586 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 156, column: 2)
!3587 = !DILocation(line: 158, column: 21, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 158, column: 6)
!3589 = !DILocation(line: 158, column: 6, scope: !3588)
!3590 = !DILocation(line: 158, column: 6, scope: !3535)
!3591 = !DILocation(line: 159, column: 3, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !294, line: 159, column: 3)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !294, line: 159, column: 3)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !294, line: 159, column: 3)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !294, line: 159, column: 3)
!3596 = distinct !DILexicalBlock(scope: !3588, file: !294, line: 158, column: 71)
!3597 = !DILocation(line: 161, column: 51, scope: !3596)
!3598 = !DILocation(line: 161, column: 3, scope: !3596)
!3599 = !DILocation(line: 163, column: 3, scope: !3596)
!3600 = !DILocation(line: 166, column: 2, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !294, line: 166, column: 2)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !294, line: 166, column: 2)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !294, line: 166, column: 2)
!3604 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 166, column: 2)
!3605 = !DILocation(line: 167, column: 2, scope: !3535)
!3606 = !DILocation(line: 169, column: 6, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 169, column: 6)
!3608 = !DILocation(line: 169, column: 6, scope: !3535)
!3609 = !DILocation(line: 175, column: 6, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 175, column: 6)
!3611 = !DILocation(line: 175, column: 6, scope: !3535)
!3612 = !DILocation(line: 176, column: 3, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !294, line: 176, column: 3)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !294, line: 176, column: 3)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !294, line: 176, column: 3)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !294, line: 176, column: 3)
!3617 = distinct !DILexicalBlock(scope: !3610, file: !294, line: 175, column: 39)
!3618 = !DILocation(line: 177, column: 3, scope: !3617)
!3619 = !DILocation(line: 180, column: 2, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !294, line: 180, column: 2)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !294, line: 180, column: 2)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !294, line: 180, column: 2)
!3623 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 180, column: 2)
!3624 = !DILocation(line: 182, column: 21, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 182, column: 6)
!3626 = !DILocation(line: 182, column: 6, scope: !3625)
!3627 = !DILocation(line: 182, column: 6, scope: !3535)
!3628 = !DILocation(line: 183, column: 3, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !294, line: 183, column: 3)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !294, line: 183, column: 3)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !294, line: 183, column: 3)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !294, line: 183, column: 3)
!3633 = distinct !DILexicalBlock(scope: !3625, file: !294, line: 182, column: 69)
!3634 = !DILocation(line: 185, column: 50, scope: !3633)
!3635 = !DILocation(line: 185, column: 3, scope: !3633)
!3636 = !DILocation(line: 187, column: 3, scope: !3633)
!3637 = !DILocation(line: 190, column: 2, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !294, line: 190, column: 2)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !294, line: 190, column: 2)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !294, line: 190, column: 2)
!3641 = distinct !DILexicalBlock(scope: !3535, file: !294, line: 190, column: 2)
!3642 = !DILocation(line: 190, column: 2, scope: !3641)
!3643 = !DILocation(line: 191, column: 1, scope: !3535)
!3644 = !DILocation(line: 192, column: 2, scope: !3535)
!3645 = !DILocation(line: 193, column: 1, scope: !3535)
!3646 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3647)
!3647 = !{!3648, !3649, !3650, !3651, !3652, !3653, !3654}
!3648 = !DILocalVariable(name: "dev", arg: 1, scope: !3646, file: !128, line: 159, type: !134)
!3649 = !DILocalVariable(name: "ctx", arg: 2, scope: !3646, file: !128, line: 160, type: !165)
!3650 = !DILocalVariable(name: "algo", arg: 3, scope: !3646, file: !128, line: 161, type: !39)
!3651 = !DILocalVariable(name: "mode", arg: 4, scope: !3646, file: !128, line: 162, type: !30)
!3652 = !DILocalVariable(name: "optype", arg: 5, scope: !3646, file: !128, line: 163, type: !42)
!3653 = !DILocalVariable(name: "api", scope: !3646, file: !128, line: 165, type: !126)
!3654 = !DILocalVariable(name: "flags", scope: !3646, file: !128, line: 166, type: !208)
!3655 = !DILocation(line: 0, scope: !3646)
!3656 = !DILocation(line: 168, column: 42, scope: !3646)
!3657 = !DILocation(line: 169, column: 7, scope: !3646)
!3658 = !DILocation(line: 169, column: 14, scope: !3646)
!3659 = !DILocation(line: 170, column: 11, scope: !3646)
!3660 = !DILocation(line: 170, column: 23, scope: !3646)
!3661 = !DILocation(line: 187, column: 14, scope: !3646)
!3662 = !DILocation(line: 187, column: 9, scope: !3646)
!3663 = !DILocation(line: 187, column: 2, scope: !3646)
!3664 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3665)
!3665 = !{!3666, !3667}
!3666 = !DILocalVariable(name: "ctx", arg: 1, scope: !3664, file: !128, line: 249, type: !165)
!3667 = !DILocalVariable(name: "pkt", arg: 2, scope: !3664, file: !128, line: 250, type: !180)
!3668 = !DILocation(line: 0, scope: !3664)
!3669 = !DILocation(line: 255, column: 7, scope: !3664)
!3670 = !DILocation(line: 255, column: 11, scope: !3664)
!3671 = !DILocation(line: 256, column: 18, scope: !3664)
!3672 = !DILocation(line: 256, column: 9, scope: !3664)
!3673 = !DILocation(line: 256, column: 2, scope: !3664)
!3674 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3675, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3677)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{null, !490, !184, !272}
!3677 = !{!3678, !3679, !3680, !3681, !3682}
!3678 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3674, file: !294, line: 50, type: !490)
!3679 = !DILocalVariable(name: "result", arg: 2, scope: !3674, file: !294, line: 51, type: !184)
!3680 = !DILocalVariable(name: "length", arg: 3, scope: !3674, file: !294, line: 51, type: !272)
!3681 = !DILocalVariable(name: "i", scope: !3674, file: !294, line: 53, type: !125)
!3682 = !DILocalVariable(name: "j", scope: !3674, file: !294, line: 53, type: !125)
!3683 = !DILocation(line: 0, scope: !3674)
!3684 = !DILocation(line: 55, column: 2, scope: !3674)
!3685 = !DILocation(line: 57, column: 23, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !294, line: 57, column: 2)
!3687 = distinct !DILexicalBlock(scope: !3674, file: !294, line: 57, column: 2)
!3688 = !DILocation(line: 57, column: 2, scope: !3687)
!3689 = !DILocation(line: 66, column: 2, scope: !3674)
!3690 = !DILocation(line: 68, column: 2, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3674, file: !294, line: 68, column: 2)
!3692 = !DILocation(line: 58, column: 21, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3686, file: !294, line: 57, column: 43)
!3694 = !DILocation(line: 58, column: 3, scope: !3693)
!3695 = !DILocation(line: 60, column: 9, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3693, file: !294, line: 60, column: 7)
!3697 = !DILocation(line: 60, column: 7, scope: !3693)
!3698 = !DILocation(line: 61, column: 4, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3696, file: !294, line: 60, column: 16)
!3700 = !DILocation(line: 63, column: 3, scope: !3699)
!3701 = !DILocation(line: 0, scope: !3687)
!3702 = !DILocation(line: 57, column: 34, scope: !3686)
!3703 = !DILocation(line: 57, column: 39, scope: !3686)
!3704 = distinct !{!3704, !3688, !3705}
!3705 = !DILocation(line: 64, column: 2, scope: !3687)
!3706 = !DILocation(line: 69, column: 21, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !294, line: 68, column: 43)
!3708 = distinct !DILexicalBlock(scope: !3691, file: !294, line: 68, column: 2)
!3709 = !DILocation(line: 69, column: 3, scope: !3707)
!3710 = !DILocation(line: 71, column: 9, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3707, file: !294, line: 71, column: 7)
!3712 = !DILocation(line: 71, column: 7, scope: !3707)
!3713 = !DILocation(line: 72, column: 4, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3711, file: !294, line: 71, column: 16)
!3715 = !DILocation(line: 74, column: 3, scope: !3714)
!3716 = !DILocation(line: 0, scope: !3691)
!3717 = !DILocation(line: 68, column: 34, scope: !3708)
!3718 = !DILocation(line: 68, column: 39, scope: !3708)
!3719 = !DILocation(line: 68, column: 23, scope: !3708)
!3720 = distinct !{!3720, !3690, !3721}
!3721 = !DILocation(line: 75, column: 2, scope: !3691)
!3722 = !DILocation(line: 77, column: 2, scope: !3674)
!3723 = !DILocation(line: 78, column: 1, scope: !3674)
!3724 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3725)
!3725 = !{!3726, !3727, !3728}
!3726 = !DILocalVariable(name: "dev", arg: 1, scope: !3724, file: !128, line: 201, type: !134)
!3727 = !DILocalVariable(name: "ctx", arg: 2, scope: !3724, file: !128, line: 202, type: !165)
!3728 = !DILocalVariable(name: "api", scope: !3724, file: !128, line: 204, type: !126)
!3729 = !DILocation(line: 0, scope: !3724)
!3730 = !DILocation(line: 206, column: 42, scope: !3724)
!3731 = !DILocation(line: 208, column: 14, scope: !3724)
!3732 = !DILocation(line: 208, column: 9, scope: !3724)
!3733 = !DILocation(line: 208, column: 2, scope: !3724)
!3734 = !DILocation(line: 0, scope: !293)
!3735 = !DILocation(line: 207, column: 2, scope: !293)
!3736 = !DILocation(line: 207, column: 10, scope: !293)
!3737 = !DILocation(line: 208, column: 2, scope: !293)
!3738 = !DILocation(line: 208, column: 10, scope: !293)
!3739 = !DILocation(line: 209, column: 2, scope: !293)
!3740 = !DILocation(line: 209, column: 20, scope: !293)
!3741 = !DILocation(line: 211, column: 7, scope: !293)
!3742 = !DILocation(line: 209, column: 26, scope: !293)
!3743 = !DILocation(line: 212, column: 12, scope: !293)
!3744 = !DILocation(line: 214, column: 2, scope: !293)
!3745 = !DILocation(line: 214, column: 20, scope: !293)
!3746 = !DILocation(line: 214, column: 30, scope: !293)
!3747 = !DILocation(line: 220, column: 2, scope: !293)
!3748 = !DILocation(line: 220, column: 20, scope: !293)
!3749 = !DILocation(line: 220, column: 30, scope: !293)
!3750 = !DILocation(line: 232, column: 6, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3752 = !DILocation(line: 232, column: 6, scope: !293)
!3753 = !DILocation(line: 238, column: 6, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3755 = !DILocation(line: 238, column: 6, scope: !293)
!3756 = !DILocation(line: 239, column: 3, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !294, line: 239, column: 3)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !294, line: 239, column: 3)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !294, line: 239, column: 3)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !294, line: 239, column: 3)
!3761 = distinct !DILexicalBlock(scope: !3754, file: !294, line: 238, column: 41)
!3762 = !DILocation(line: 240, column: 3, scope: !3761)
!3763 = !DILocation(line: 243, column: 2, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !294, line: 243, column: 2)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !294, line: 243, column: 2)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !294, line: 243, column: 2)
!3767 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3768 = !DILocation(line: 245, column: 21, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3770 = !DILocation(line: 245, column: 6, scope: !3769)
!3771 = !DILocation(line: 245, column: 6, scope: !293)
!3772 = !DILocation(line: 246, column: 3, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !294, line: 246, column: 3)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !294, line: 246, column: 3)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !294, line: 246, column: 3)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !294, line: 246, column: 3)
!3777 = distinct !DILexicalBlock(scope: !3769, file: !294, line: 245, column: 71)
!3778 = !DILocation(line: 248, column: 51, scope: !3777)
!3779 = !DILocation(line: 248, column: 3, scope: !3777)
!3780 = !DILocation(line: 250, column: 3, scope: !3777)
!3781 = !DILocation(line: 253, column: 2, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !294, line: 253, column: 2)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !294, line: 253, column: 2)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !294, line: 253, column: 2)
!3785 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3786 = !DILocation(line: 254, column: 2, scope: !293)
!3787 = !DILocation(line: 256, column: 6, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3789 = !DILocation(line: 256, column: 6, scope: !293)
!3790 = !DILocation(line: 263, column: 6, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3792 = !DILocation(line: 263, column: 6, scope: !293)
!3793 = !DILocation(line: 264, column: 3, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !294, line: 264, column: 3)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !294, line: 264, column: 3)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !294, line: 264, column: 3)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !294, line: 264, column: 3)
!3798 = distinct !DILexicalBlock(scope: !3791, file: !294, line: 263, column: 48)
!3799 = !DILocation(line: 265, column: 3, scope: !3798)
!3800 = !DILocation(line: 268, column: 2, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !294, line: 268, column: 2)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !294, line: 268, column: 2)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !294, line: 268, column: 2)
!3804 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3805 = !DILocation(line: 270, column: 21, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3807 = !DILocation(line: 270, column: 6, scope: !3806)
!3808 = !DILocation(line: 270, column: 6, scope: !293)
!3809 = !DILocation(line: 271, column: 3, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !294, line: 271, column: 3)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !294, line: 271, column: 3)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !294, line: 271, column: 3)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !294, line: 271, column: 3)
!3814 = distinct !DILexicalBlock(scope: !3806, file: !294, line: 270, column: 61)
!3815 = !DILocation(line: 273, column: 46, scope: !3814)
!3816 = !DILocation(line: 273, column: 3, scope: !3814)
!3817 = !DILocation(line: 275, column: 3, scope: !3814)
!3818 = !DILocation(line: 278, column: 2, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !294, line: 278, column: 2)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !294, line: 278, column: 2)
!3821 = distinct !DILexicalBlock(scope: !3822, file: !294, line: 278, column: 2)
!3822 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3823 = !DILocation(line: 278, column: 2, scope: !3822)
!3824 = !DILocation(line: 279, column: 1, scope: !293)
!3825 = !DILocation(line: 280, column: 2, scope: !293)
!3826 = !DILocation(line: 281, column: 1, scope: !293)
!3827 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3828)
!3828 = !{!3829, !3830, !3831}
!3829 = !DILocalVariable(name: "ctx", arg: 1, scope: !3827, file: !128, line: 270, type: !165)
!3830 = !DILocalVariable(name: "pkt", arg: 2, scope: !3827, file: !128, line: 271, type: !180)
!3831 = !DILocalVariable(name: "iv", arg: 3, scope: !3827, file: !128, line: 271, type: !184)
!3832 = !DILocation(line: 0, scope: !3827)
!3833 = !DILocation(line: 276, column: 7, scope: !3827)
!3834 = !DILocation(line: 276, column: 11, scope: !3827)
!3835 = !DILocation(line: 277, column: 18, scope: !3827)
!3836 = !DILocation(line: 277, column: 9, scope: !3827)
!3837 = !DILocation(line: 277, column: 2, scope: !3827)
!3838 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3839)
!3839 = !{!3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847}
!3840 = !DILocalVariable(name: "dev", arg: 1, scope: !3838, file: !294, line: 294, type: !134)
!3841 = !DILocalVariable(name: "encrypted", scope: !3838, file: !294, line: 296, type: !304)
!3842 = !DILocalVariable(name: "decrypted", scope: !3838, file: !294, line: 297, type: !304)
!3843 = !DILocalVariable(name: "ini", scope: !3838, file: !294, line: 298, type: !166)
!3844 = !DILocalVariable(name: "encrypt", scope: !3838, file: !294, line: 305, type: !181)
!3845 = !DILocalVariable(name: "decrypt", scope: !3838, file: !294, line: 311, type: !181)
!3846 = !DILocalVariable(name: "iv", scope: !3838, file: !294, line: 317, type: !363)
!3847 = !DILabel(scope: !3838, name: "out", file: !294, line: 368)
!3848 = !DILocation(line: 0, scope: !3838)
!3849 = !DILocation(line: 296, column: 2, scope: !3838)
!3850 = !DILocation(line: 296, column: 10, scope: !3838)
!3851 = !DILocation(line: 297, column: 2, scope: !3838)
!3852 = !DILocation(line: 297, column: 10, scope: !3838)
!3853 = !DILocation(line: 298, column: 2, scope: !3838)
!3854 = !DILocation(line: 298, column: 20, scope: !3838)
!3855 = !DILocation(line: 298, column: 26, scope: !3838)
!3856 = !DILocation(line: 300, column: 7, scope: !3838)
!3857 = !DILocation(line: 303, column: 24, scope: !3838)
!3858 = !DILocation(line: 301, column: 12, scope: !3838)
!3859 = !DILocation(line: 305, column: 2, scope: !3838)
!3860 = !DILocation(line: 305, column: 20, scope: !3838)
!3861 = !DILocation(line: 305, column: 30, scope: !3838)
!3862 = !DILocation(line: 311, column: 2, scope: !3838)
!3863 = !DILocation(line: 311, column: 20, scope: !3838)
!3864 = !DILocation(line: 311, column: 30, scope: !3838)
!3865 = !DILocation(line: 317, column: 2, scope: !3838)
!3866 = !DILocation(line: 317, column: 10, scope: !3838)
!3867 = !DILocation(line: 322, column: 6, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 322, column: 6)
!3869 = !DILocation(line: 322, column: 6, scope: !3838)
!3870 = !DILocation(line: 328, column: 6, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 328, column: 6)
!3872 = !DILocation(line: 328, column: 6, scope: !3838)
!3873 = !DILocation(line: 329, column: 3, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !294, line: 329, column: 3)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !294, line: 329, column: 3)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !294, line: 329, column: 3)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !294, line: 329, column: 3)
!3878 = distinct !DILexicalBlock(scope: !3871, file: !294, line: 328, column: 41)
!3879 = !DILocation(line: 330, column: 3, scope: !3878)
!3880 = !DILocation(line: 333, column: 2, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !294, line: 333, column: 2)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !294, line: 333, column: 2)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !294, line: 333, column: 2)
!3884 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 333, column: 2)
!3885 = !DILocation(line: 335, column: 21, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 335, column: 6)
!3887 = !DILocation(line: 335, column: 6, scope: !3886)
!3888 = !DILocation(line: 335, column: 6, scope: !3838)
!3889 = !DILocation(line: 336, column: 3, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !294, line: 336, column: 3)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !294, line: 336, column: 3)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !294, line: 336, column: 3)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !294, line: 336, column: 3)
!3894 = distinct !DILexicalBlock(scope: !3886, file: !294, line: 335, column: 71)
!3895 = !DILocation(line: 338, column: 51, scope: !3894)
!3896 = !DILocation(line: 338, column: 3, scope: !3894)
!3897 = !DILocation(line: 340, column: 3, scope: !3894)
!3898 = !DILocation(line: 343, column: 2, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !294, line: 343, column: 2)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !294, line: 343, column: 2)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !294, line: 343, column: 2)
!3902 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 343, column: 2)
!3903 = !DILocation(line: 344, column: 2, scope: !3838)
!3904 = !DILocation(line: 346, column: 6, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 346, column: 6)
!3906 = !DILocation(line: 346, column: 6, scope: !3838)
!3907 = !DILocation(line: 352, column: 6, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 352, column: 6)
!3909 = !DILocation(line: 352, column: 6, scope: !3838)
!3910 = !DILocation(line: 353, column: 3, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !294, line: 353, column: 3)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !294, line: 353, column: 3)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !294, line: 353, column: 3)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 353, column: 3)
!3915 = distinct !DILexicalBlock(scope: !3908, file: !294, line: 352, column: 41)
!3916 = !DILocation(line: 354, column: 3, scope: !3915)
!3917 = !DILocation(line: 357, column: 2, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !294, line: 357, column: 2)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !294, line: 357, column: 2)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !294, line: 357, column: 2)
!3921 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 357, column: 2)
!3922 = !DILocation(line: 359, column: 21, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 359, column: 6)
!3924 = !DILocation(line: 359, column: 6, scope: !3923)
!3925 = !DILocation(line: 359, column: 6, scope: !3838)
!3926 = !DILocation(line: 360, column: 3, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !294, line: 360, column: 3)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !294, line: 360, column: 3)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !294, line: 360, column: 3)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !294, line: 360, column: 3)
!3931 = distinct !DILexicalBlock(scope: !3923, file: !294, line: 359, column: 61)
!3932 = !DILocation(line: 363, column: 14, scope: !3931)
!3933 = !DILocation(line: 362, column: 3, scope: !3931)
!3934 = !DILocation(line: 364, column: 3, scope: !3931)
!3935 = !DILocation(line: 367, column: 2, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !294, line: 367, column: 2)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !294, line: 367, column: 2)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !294, line: 367, column: 2)
!3939 = distinct !DILexicalBlock(scope: !3838, file: !294, line: 367, column: 2)
!3940 = !DILocation(line: 367, column: 2, scope: !3939)
!3941 = !DILocation(line: 368, column: 1, scope: !3838)
!3942 = !DILocation(line: 369, column: 2, scope: !3838)
!3943 = !DILocation(line: 370, column: 1, scope: !3838)
!3944 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3945)
!3945 = !{!3946, !3947, !3948}
!3946 = !DILocalVariable(name: "ctx", arg: 1, scope: !3944, file: !128, line: 297, type: !165)
!3947 = !DILocalVariable(name: "pkt", arg: 2, scope: !3944, file: !128, line: 298, type: !180)
!3948 = !DILocalVariable(name: "iv", arg: 3, scope: !3944, file: !128, line: 298, type: !184)
!3949 = !DILocation(line: 0, scope: !3944)
!3950 = !DILocation(line: 303, column: 7, scope: !3944)
!3951 = !DILocation(line: 303, column: 11, scope: !3944)
!3952 = !DILocation(line: 304, column: 18, scope: !3944)
!3953 = !DILocation(line: 304, column: 9, scope: !3944)
!3954 = !DILocation(line: 304, column: 2, scope: !3944)
!3955 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3956)
!3956 = !{!3957, !3958, !3960, !3964, !3965, !3966, !3967, !3968}
!3957 = !DILocalVariable(name: "dev", arg: 1, scope: !3955, file: !294, line: 394, type: !134)
!3958 = !DILocalVariable(name: "encrypted", scope: !3955, file: !294, line: 396, type: !3959)
!3959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !1053)
!3960 = !DILocalVariable(name: "decrypted", scope: !3955, file: !294, line: 397, type: !3961)
!3961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !3962)
!3962 = !{!3963}
!3963 = !DISubrange(count: 25)
!3964 = !DILocalVariable(name: "ini", scope: !3955, file: !294, line: 398, type: !166)
!3965 = !DILocalVariable(name: "encrypt", scope: !3955, file: !294, line: 407, type: !181)
!3966 = !DILocalVariable(name: "ccm_op", scope: !3955, file: !294, line: 413, type: !203)
!3967 = !DILocalVariable(name: "decrypt", scope: !3955, file: !294, line: 425, type: !181)
!3968 = !DILabel(scope: !3955, name: "out", file: !294, line: 480)
!3969 = !DILocation(line: 0, scope: !3955)
!3970 = !DILocation(line: 396, column: 2, scope: !3955)
!3971 = !DILocation(line: 396, column: 10, scope: !3955)
!3972 = !DILocation(line: 397, column: 2, scope: !3955)
!3973 = !DILocation(line: 397, column: 10, scope: !3955)
!3974 = !DILocation(line: 398, column: 2, scope: !3955)
!3975 = !DILocation(line: 398, column: 20, scope: !3955)
!3976 = !DILocation(line: 398, column: 26, scope: !3955)
!3977 = !DILocation(line: 400, column: 7, scope: !3955)
!3978 = !DILocation(line: 401, column: 15, scope: !3955)
!3979 = !DILocation(line: 401, column: 27, scope: !3955)
!3980 = !DILocation(line: 405, column: 12, scope: !3955)
!3981 = !DILocation(line: 407, column: 2, scope: !3955)
!3982 = !DILocation(line: 407, column: 20, scope: !3955)
!3983 = !DILocation(line: 407, column: 30, scope: !3955)
!3984 = !DILocation(line: 413, column: 2, scope: !3955)
!3985 = !DILocation(line: 413, column: 25, scope: !3955)
!3986 = !DILocation(line: 413, column: 34, scope: !3955)
!3987 = !DILocation(line: 423, column: 20, scope: !3955)
!3988 = !DILocation(line: 425, column: 2, scope: !3955)
!3989 = !DILocation(line: 425, column: 20, scope: !3955)
!3990 = !DILocation(line: 425, column: 30, scope: !3955)
!3991 = !DILocation(line: 432, column: 6, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 432, column: 6)
!3993 = !DILocation(line: 432, column: 6, scope: !3955)
!3994 = !DILocation(line: 438, column: 13, scope: !3955)
!3995 = !DILocation(line: 439, column: 6, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 439, column: 6)
!3997 = !DILocation(line: 439, column: 6, scope: !3955)
!3998 = !DILocation(line: 440, column: 3, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !294, line: 440, column: 3)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !294, line: 440, column: 3)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !294, line: 440, column: 3)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !294, line: 440, column: 3)
!4003 = distinct !DILexicalBlock(scope: !3996, file: !294, line: 439, column: 47)
!4004 = !DILocation(line: 441, column: 3, scope: !4003)
!4005 = !DILocation(line: 444, column: 2, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !294, line: 444, column: 2)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !294, line: 444, column: 2)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !294, line: 444, column: 2)
!4009 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 444, column: 2)
!4010 = !DILocation(line: 446, column: 21, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 446, column: 6)
!4012 = !DILocation(line: 446, column: 6, scope: !4011)
!4013 = !DILocation(line: 446, column: 6, scope: !3955)
!4014 = !DILocation(line: 447, column: 3, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !294, line: 447, column: 3)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !294, line: 447, column: 3)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 447, column: 3)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !294, line: 447, column: 3)
!4019 = distinct !DILexicalBlock(scope: !4011, file: !294, line: 446, column: 67)
!4020 = !DILocation(line: 450, column: 14, scope: !4019)
!4021 = !DILocation(line: 449, column: 3, scope: !4019)
!4022 = !DILocation(line: 451, column: 3, scope: !4019)
!4023 = !DILocation(line: 454, column: 2, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !294, line: 454, column: 2)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !294, line: 454, column: 2)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !294, line: 454, column: 2)
!4027 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 454, column: 2)
!4028 = !DILocation(line: 455, column: 2, scope: !3955)
!4029 = !DILocation(line: 457, column: 6, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 457, column: 6)
!4031 = !DILocation(line: 457, column: 6, scope: !3955)
!4032 = !DILocation(line: 463, column: 13, scope: !3955)
!4033 = !DILocation(line: 464, column: 6, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 464, column: 6)
!4035 = !DILocation(line: 464, column: 6, scope: !3955)
!4036 = !DILocation(line: 465, column: 3, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !294, line: 465, column: 3)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !294, line: 465, column: 3)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !294, line: 465, column: 3)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !294, line: 465, column: 3)
!4041 = distinct !DILexicalBlock(scope: !4034, file: !294, line: 464, column: 47)
!4042 = !DILocation(line: 466, column: 3, scope: !4041)
!4043 = !DILocation(line: 469, column: 2, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !294, line: 469, column: 2)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !294, line: 469, column: 2)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 469, column: 2)
!4047 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 469, column: 2)
!4048 = !DILocation(line: 471, column: 21, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 471, column: 6)
!4050 = !DILocation(line: 471, column: 6, scope: !4049)
!4051 = !DILocation(line: 471, column: 6, scope: !3955)
!4052 = !DILocation(line: 472, column: 3, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !294, line: 472, column: 3)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !294, line: 472, column: 3)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !294, line: 472, column: 3)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !294, line: 472, column: 3)
!4057 = distinct !DILexicalBlock(scope: !4049, file: !294, line: 471, column: 59)
!4058 = !DILocation(line: 475, column: 14, scope: !4057)
!4059 = !DILocation(line: 474, column: 3, scope: !4057)
!4060 = !DILocation(line: 476, column: 3, scope: !4057)
!4061 = !DILocation(line: 479, column: 2, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !294, line: 479, column: 2)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !294, line: 479, column: 2)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !294, line: 479, column: 2)
!4065 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 479, column: 2)
!4066 = !DILocation(line: 479, column: 2, scope: !4065)
!4067 = !DILocation(line: 480, column: 1, scope: !3955)
!4068 = !DILocation(line: 481, column: 2, scope: !3955)
!4069 = !DILocation(line: 482, column: 1, scope: !3955)
!4070 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4071)
!4071 = !{!4072, !4073, !4074}
!4072 = !DILocalVariable(name: "ctx", arg: 1, scope: !4070, file: !128, line: 319, type: !165)
!4073 = !DILocalVariable(name: "pkt", arg: 2, scope: !4070, file: !128, line: 320, type: !202)
!4074 = !DILocalVariable(name: "nonce", arg: 3, scope: !4070, file: !128, line: 320, type: !184)
!4075 = !DILocation(line: 0, scope: !4070)
!4076 = !DILocation(line: 325, column: 7, scope: !4070)
!4077 = !DILocation(line: 325, column: 12, scope: !4070)
!4078 = !DILocation(line: 325, column: 16, scope: !4070)
!4079 = !DILocation(line: 326, column: 18, scope: !4070)
!4080 = !DILocation(line: 326, column: 9, scope: !4070)
!4081 = !DILocation(line: 326, column: 2, scope: !4070)
!4082 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4083)
!4083 = !{!4084, !4085, !4089, !4091, !4092, !4093, !4094, !4095}
!4084 = !DILocalVariable(name: "dev", arg: 1, scope: !4082, file: !294, line: 511, type: !134)
!4085 = !DILocalVariable(name: "encrypted", scope: !4082, file: !294, line: 513, type: !4086)
!4086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4087)
!4087 = !{!4088}
!4088 = !DISubrange(count: 60)
!4089 = !DILocalVariable(name: "decrypted", scope: !4082, file: !294, line: 514, type: !4090)
!4090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !498)
!4091 = !DILocalVariable(name: "ini", scope: !4082, file: !294, line: 515, type: !166)
!4092 = !DILocalVariable(name: "encrypt", scope: !4082, file: !294, line: 524, type: !181)
!4093 = !DILocalVariable(name: "gcm_op", scope: !4082, file: !294, line: 530, type: !203)
!4094 = !DILocalVariable(name: "decrypt", scope: !4082, file: !294, line: 542, type: !181)
!4095 = !DILabel(scope: !4082, name: "out", file: !294, line: 597)
!4096 = !DILocation(line: 0, scope: !4082)
!4097 = !DILocation(line: 513, column: 2, scope: !4082)
!4098 = !DILocation(line: 513, column: 10, scope: !4082)
!4099 = !DILocation(line: 514, column: 2, scope: !4082)
!4100 = !DILocation(line: 514, column: 10, scope: !4082)
!4101 = !DILocation(line: 515, column: 2, scope: !4082)
!4102 = !DILocation(line: 515, column: 20, scope: !4082)
!4103 = !DILocation(line: 515, column: 26, scope: !4082)
!4104 = !DILocation(line: 517, column: 7, scope: !4082)
!4105 = !DILocation(line: 518, column: 15, scope: !4082)
!4106 = !DILocation(line: 518, column: 27, scope: !4082)
!4107 = !DILocation(line: 522, column: 12, scope: !4082)
!4108 = !DILocation(line: 524, column: 2, scope: !4082)
!4109 = !DILocation(line: 524, column: 20, scope: !4082)
!4110 = !DILocation(line: 524, column: 30, scope: !4082)
!4111 = !DILocation(line: 530, column: 2, scope: !4082)
!4112 = !DILocation(line: 530, column: 25, scope: !4082)
!4113 = !DILocation(line: 530, column: 34, scope: !4082)
!4114 = !DILocation(line: 540, column: 20, scope: !4082)
!4115 = !DILocation(line: 542, column: 2, scope: !4082)
!4116 = !DILocation(line: 542, column: 20, scope: !4082)
!4117 = !DILocation(line: 542, column: 30, scope: !4082)
!4118 = !DILocation(line: 549, column: 6, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 549, column: 6)
!4120 = !DILocation(line: 549, column: 6, scope: !4082)
!4121 = !DILocation(line: 555, column: 13, scope: !4082)
!4122 = !DILocation(line: 556, column: 6, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 556, column: 6)
!4124 = !DILocation(line: 556, column: 6, scope: !4082)
!4125 = !DILocation(line: 557, column: 3, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !294, line: 557, column: 3)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !294, line: 557, column: 3)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !294, line: 557, column: 3)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !294, line: 557, column: 3)
!4130 = distinct !DILexicalBlock(scope: !4123, file: !294, line: 556, column: 47)
!4131 = !DILocation(line: 558, column: 3, scope: !4130)
!4132 = !DILocation(line: 561, column: 2, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !294, line: 561, column: 2)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !294, line: 561, column: 2)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !294, line: 561, column: 2)
!4136 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 561, column: 2)
!4137 = !DILocation(line: 563, column: 21, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 563, column: 6)
!4139 = !DILocation(line: 563, column: 6, scope: !4138)
!4140 = !DILocation(line: 563, column: 6, scope: !4082)
!4141 = !DILocation(line: 564, column: 3, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !294, line: 564, column: 3)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !294, line: 564, column: 3)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !294, line: 564, column: 3)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !294, line: 564, column: 3)
!4146 = distinct !DILexicalBlock(scope: !4138, file: !294, line: 563, column: 67)
!4147 = !DILocation(line: 567, column: 14, scope: !4146)
!4148 = !DILocation(line: 566, column: 3, scope: !4146)
!4149 = !DILocation(line: 568, column: 3, scope: !4146)
!4150 = !DILocation(line: 571, column: 2, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !294, line: 571, column: 2)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !294, line: 571, column: 2)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !294, line: 571, column: 2)
!4154 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 571, column: 2)
!4155 = !DILocation(line: 572, column: 2, scope: !4082)
!4156 = !DILocation(line: 574, column: 6, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 574, column: 6)
!4158 = !DILocation(line: 574, column: 6, scope: !4082)
!4159 = !DILocation(line: 580, column: 13, scope: !4082)
!4160 = !DILocation(line: 581, column: 6, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 581, column: 6)
!4162 = !DILocation(line: 581, column: 6, scope: !4082)
!4163 = !DILocation(line: 582, column: 3, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !294, line: 582, column: 3)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !294, line: 582, column: 3)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !294, line: 582, column: 3)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !294, line: 582, column: 3)
!4168 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 581, column: 47)
!4169 = !DILocation(line: 583, column: 3, scope: !4168)
!4170 = !DILocation(line: 586, column: 2, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !294, line: 586, column: 2)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !294, line: 586, column: 2)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !294, line: 586, column: 2)
!4174 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 586, column: 2)
!4175 = !DILocation(line: 588, column: 21, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 588, column: 6)
!4177 = !DILocation(line: 588, column: 6, scope: !4176)
!4178 = !DILocation(line: 588, column: 6, scope: !4082)
!4179 = !DILocation(line: 589, column: 3, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !294, line: 589, column: 3)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !294, line: 589, column: 3)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !294, line: 589, column: 3)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !294, line: 589, column: 3)
!4184 = distinct !DILexicalBlock(scope: !4176, file: !294, line: 588, column: 59)
!4185 = !DILocation(line: 592, column: 14, scope: !4184)
!4186 = !DILocation(line: 591, column: 3, scope: !4184)
!4187 = !DILocation(line: 593, column: 3, scope: !4184)
!4188 = !DILocation(line: 596, column: 2, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !294, line: 596, column: 2)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !294, line: 596, column: 2)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !294, line: 596, column: 2)
!4192 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 596, column: 2)
!4193 = !DILocation(line: 596, column: 2, scope: !4192)
!4194 = !DILocation(line: 597, column: 1, scope: !4082)
!4195 = !DILocation(line: 598, column: 2, scope: !4082)
!4196 = !DILocation(line: 599, column: 1, scope: !4082)
!4197 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4198)
!4198 = !{!4199, !4200, !4201}
!4199 = !DILocalVariable(name: "ctx", arg: 1, scope: !4197, file: !128, line: 341, type: !165)
!4200 = !DILocalVariable(name: "pkt", arg: 2, scope: !4197, file: !128, line: 342, type: !202)
!4201 = !DILocalVariable(name: "nonce", arg: 3, scope: !4197, file: !128, line: 342, type: !184)
!4202 = !DILocation(line: 0, scope: !4197)
!4203 = !DILocation(line: 347, column: 7, scope: !4197)
!4204 = !DILocation(line: 347, column: 12, scope: !4197)
!4205 = !DILocation(line: 347, column: 16, scope: !4197)
!4206 = !DILocation(line: 348, column: 18, scope: !4197)
!4207 = !DILocation(line: 348, column: 9, scope: !4197)
!4208 = !DILocation(line: 348, column: 2, scope: !4197)
!4209 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3363, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4210)
!4210 = !{!4211, !4212, !4220}
!4211 = !DILocalVariable(name: "dev", scope: !4209, file: !294, line: 609, type: !134)
!4212 = !DILocalVariable(name: "modes", scope: !4209, file: !294, line: 623, type: !4213)
!4213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4214, size: 384, elements: !2479)
!4214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4215)
!4215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4216)
!4216 = !{!4217, !4218}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4215, file: !294, line: 602, baseType: !140, size: 32)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4215, file: !294, line: 603, baseType: !4219, size: 32, offset: 32)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4220 = !DILocalVariable(name: "i", scope: !4209, file: !294, line: 631, type: !125)
!4221 = !DILocation(line: 609, column: 29, scope: !4209)
!4222 = !DILocation(line: 0, scope: !4209)
!4223 = !DILocation(line: 611, column: 7, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4209, file: !294, line: 611, column: 6)
!4225 = !DILocation(line: 611, column: 6, scope: !4209)
!4226 = !DILocation(line: 612, column: 3, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !294, line: 612, column: 3)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !294, line: 612, column: 3)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !294, line: 612, column: 3)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !294, line: 612, column: 3)
!4231 = distinct !DILexicalBlock(scope: !4224, file: !294, line: 611, column: 12)
!4232 = !DILocation(line: 613, column: 3, scope: !4231)
!4233 = !DILocation(line: 623, column: 25, scope: !4209)
!4234 = !DILocation(line: 633, column: 6, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4209, file: !294, line: 633, column: 6)
!4236 = !DILocation(line: 633, column: 6, scope: !4209)
!4237 = !DILocation(line: 634, column: 3, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !294, line: 634, column: 3)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !294, line: 634, column: 3)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !294, line: 634, column: 3)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !294, line: 634, column: 3)
!4242 = distinct !DILexicalBlock(scope: !4235, file: !294, line: 633, column: 38)
!4243 = !DILocation(line: 635, column: 3, scope: !4242)
!4244 = !DILocation(line: 638, column: 2, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !294, line: 638, column: 2)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !294, line: 638, column: 2)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !294, line: 638, column: 2)
!4248 = distinct !DILexicalBlock(scope: !4209, file: !294, line: 638, column: 2)
!4249 = !DILocation(line: 640, column: 2, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4209, file: !294, line: 640, column: 2)
!4251 = !DILocation(line: 640, column: 23, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4250, file: !294, line: 640, column: 2)
!4253 = !DILocation(line: 641, column: 3, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !294, line: 641, column: 3)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !294, line: 641, column: 3)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !294, line: 641, column: 3)
!4257 = distinct !DILexicalBlock(scope: !4258, file: !294, line: 641, column: 3)
!4258 = distinct !DILexicalBlock(scope: !4252, file: !294, line: 640, column: 34)
!4259 = !DILocation(line: 642, column: 12, scope: !4258)
!4260 = !DILocation(line: 642, column: 3, scope: !4258)
!4261 = !DILocation(line: 640, column: 30, scope: !4252)
!4262 = distinct !{!4262, !4249, !4263}
!4263 = !DILocation(line: 643, column: 2, scope: !4250)
!4264 = !DILocation(line: 644, column: 1, scope: !4209)
!4265 = distinct !DISubprogram(name: "device_get_binding", scope: !4266, file: !4266, line: 24, type: !4267, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4269)
!4266 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!134, !140}
!4269 = !{!4270}
!4270 = !DILocalVariable(name: "name", arg: 1, scope: !4265, file: !4266, line: 24, type: !140)
!4271 = !DILocation(line: 0, scope: !4265)
!4272 = !DILocation(line: 32, column: 2, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4265, file: !4266, line: 32, column: 2)
!4274 = !{i64 2149479178}
!4275 = !DILocation(line: 33, column: 9, scope: !4265)
!4276 = !DILocation(line: 33, column: 2, scope: !4265)
!4277 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4278, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4287)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!125, !124, !272, !208, !140, !4280}
!4280 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4281, line: 99, baseType: !4282)
!4281 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4281, line: 40, baseType: !4283)
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4284)
!4284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4285)
!4285 = !{!4286}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4284, file: !395, line: 18, baseType: !124, size: 32)
!4287 = !{!4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4322, !4331, !4334, !4335, !4338, !4341, !4344, !4347, !4353}
!4288 = !DILocalVariable(name: "packaged", arg: 1, scope: !4277, file: !395, line: 233, type: !124)
!4289 = !DILocalVariable(name: "len", arg: 2, scope: !4277, file: !395, line: 233, type: !272)
!4290 = !DILocalVariable(name: "flags", arg: 3, scope: !4277, file: !395, line: 233, type: !208)
!4291 = !DILocalVariable(name: "fmt", arg: 4, scope: !4277, file: !395, line: 234, type: !140)
!4292 = !DILocalVariable(name: "ap", arg: 5, scope: !4277, file: !395, line: 234, type: !4280)
!4293 = !DILocalVariable(name: "buf0", scope: !4277, file: !395, line: 247, type: !184)
!4294 = !DILocalVariable(name: "buf", scope: !4277, file: !395, line: 248, type: !184)
!4295 = !DILocalVariable(name: "size", scope: !4277, file: !395, line: 249, type: !32)
!4296 = !DILocalVariable(name: "align", scope: !4277, file: !395, line: 250, type: !32)
!4297 = !DILocalVariable(name: "str_ptr_pos", scope: !4277, file: !395, line: 251, type: !311)
!4298 = !DILocalVariable(name: "str_ptr_arg", scope: !4277, file: !395, line: 252, type: !311)
!4299 = !DILocalVariable(name: "s_idx", scope: !4277, file: !395, line: 253, type: !32)
!4300 = !DILocalVariable(name: "s_rw_cnt", scope: !4277, file: !395, line: 254, type: !32)
!4301 = !DILocalVariable(name: "s_ro_cnt", scope: !4277, file: !395, line: 255, type: !32)
!4302 = !DILocalVariable(name: "arg_idx", scope: !4277, file: !395, line: 256, type: !125)
!4303 = !DILocalVariable(name: "i", scope: !4277, file: !395, line: 257, type: !32)
!4304 = !DILocalVariable(name: "s", scope: !4277, file: !395, line: 258, type: !140)
!4305 = !DILocalVariable(name: "parsing", scope: !4277, file: !395, line: 259, type: !153)
!4306 = !DILocalVariable(name: "rws_pos_en", scope: !4277, file: !395, line: 263, type: !153)
!4307 = !DILocalVariable(name: "fros_cnt", scope: !4277, file: !395, line: 268, type: !125)
!4308 = !DILocalVariable(name: "is_str_arg", scope: !4277, file: !395, line: 269, type: !153)
!4309 = !DILocalVariable(name: "pkg_hdr", scope: !4277, file: !395, line: 270, type: !4310)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 32)
!4311 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4312, line: 78, size: 32, elements: !4313)
!4312 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4313 = !{!4314, !4321}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4311, file: !4312, line: 80, baseType: !4315, size: 32)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4312, line: 45, size: 32, elements: !4316)
!4316 = !{!4317, !4318, !4319, !4320}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4315, file: !4312, line: 47, baseType: !150, size: 8)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4315, file: !4312, line: 50, baseType: !150, size: 8, offset: 8)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4315, file: !4312, line: 53, baseType: !150, size: 8, offset: 16)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4315, file: !4312, line: 56, baseType: !150, size: 8, offset: 24)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4311, file: !4312, line: 82, baseType: !124, size: 32)
!4322 = !DILocalVariable(name: "v", scope: !4323, file: !395, line: 567, type: !4327)
!4323 = distinct !DILexicalBlock(scope: !4324, file: !395, line: 562, column: 14)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !395, line: 481, column: 18)
!4325 = distinct !DILexicalBlock(scope: !4326, file: !395, line: 466, column: 3)
!4326 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 343, column: 15)
!4327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4277, file: !395, line: 567, size: 64, elements: !4328)
!4328 = !{!4329, !4330}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4327, file: !395, line: 567, baseType: !385, size: 64)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4327, file: !395, line: 567, baseType: !383, size: 64)
!4331 = !DILocalVariable(name: "is_ro", scope: !4332, file: !395, line: 620, type: !153)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !395, line: 613, column: 19)
!4333 = distinct !DILexicalBlock(scope: !4326, file: !395, line: 613, column: 7)
!4334 = !DILocalVariable(name: "do_ro", scope: !4332, file: !395, line: 621, type: !153)
!4335 = !DILocalVariable(name: "s_ptr_idx", scope: !4336, file: !395, line: 626, type: !208)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !395, line: 625, column: 11)
!4337 = distinct !DILexicalBlock(scope: !4332, file: !395, line: 623, column: 8)
!4338 = !DILocalVariable(name: "v", scope: !4339, file: !395, line: 684, type: !125)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !395, line: 683, column: 35)
!4340 = distinct !DILexicalBlock(scope: !4333, file: !395, line: 683, column: 14)
!4341 = !DILocalVariable(name: "v", scope: !4342, file: !395, line: 691, type: !389)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !395, line: 690, column: 36)
!4343 = distinct !DILexicalBlock(scope: !4340, file: !395, line: 690, column: 14)
!4344 = !DILocalVariable(name: "v", scope: !4345, file: !395, line: 698, type: !391)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !395, line: 697, column: 41)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !395, line: 697, column: 14)
!4347 = !DILocalVariable(name: "pos", scope: !4348, file: !395, line: 762, type: !150)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !395, line: 757, column: 31)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !395, line: 757, column: 3)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !395, line: 757, column: 3)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !395, line: 756, column: 16)
!4352 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 756, column: 6)
!4353 = !DILabel(scope: !4332, name: "process_string", file: !395, line: 615)
!4354 = !DILocation(line: 0, scope: !4277)
!4355 = !DILocation(line: 251, column: 2, scope: !4277)
!4356 = !DILocation(line: 251, column: 10, scope: !4277)
!4357 = !DILocation(line: 252, column: 2, scope: !4277)
!4358 = !DILocation(line: 252, column: 10, scope: !4277)
!4359 = !DILocation(line: 263, column: 29, scope: !4277)
!4360 = !DILocation(line: 263, column: 21, scope: !4277)
!4361 = !DILocation(line: 268, column: 21, scope: !4277)
!4362 = !DILocation(line: 268, column: 19, scope: !4277)
!4363 = !DILocation(line: 273, column: 6, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 273, column: 6)
!4365 = !DILocation(line: 273, column: 26, scope: !4364)
!4366 = !DILocation(line: 273, column: 6, scope: !4277)
!4367 = !DILocation(line: 297, column: 6, scope: !4277)
!4368 = !DILocation(line: 305, column: 11, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 305, column: 6)
!4370 = !DILocation(line: 305, column: 6, scope: !4277)
!4371 = !DILocation(line: 327, column: 19, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 327, column: 6)
!4373 = !DILocation(line: 327, column: 22, scope: !4372)
!4374 = !DILocation(line: 327, column: 33, scope: !4372)
!4375 = !DILocation(line: 327, column: 50, scope: !4372)
!4376 = !DILocation(line: 327, column: 6, scope: !4277)
!4377 = !DILocation(line: 338, column: 9, scope: !4277)
!4378 = !DILocation(line: 341, column: 2, scope: !4277)
!4379 = !DILocation(line: 472, column: 8, scope: !4325)
!4380 = !DILocation(line: 473, column: 14, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !395, line: 473, column: 9)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !395, line: 472, column: 18)
!4383 = distinct !DILexicalBlock(scope: !4325, file: !395, line: 472, column: 8)
!4384 = !DILocation(line: 473, column: 9, scope: !4382)
!4385 = !DILocation(line: 479, column: 5, scope: !4382)
!4386 = !DILocation(line: 468, column: 9, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4325, file: !395, line: 468, column: 8)
!4388 = !DILocation(line: 468, column: 8, scope: !4387)
!4389 = !DILocation(line: 468, column: 15, scope: !4387)
!4390 = !DILocation(line: 468, column: 8, scope: !4325)
!4391 = distinct !{!4391, !4392, !4393}
!4392 = !DILocation(line: 343, column: 2, scope: !4277)
!4393 = !DILocation(line: 712, column: 2, scope: !4277)
!4394 = !DILocation(line: 481, column: 4, scope: !4325)
!4395 = !DILocation(line: 484, column: 12, scope: !4324)
!4396 = !DILocation(line: 485, column: 5, scope: !4324)
!4397 = !DILocation(line: 505, column: 5, scope: !4324)
!4398 = !DILocation(line: 518, column: 5, scope: !4324)
!4399 = !DILocation(line: 523, column: 5, scope: !4324)
!4400 = !DILocation(line: 532, column: 9, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4324, file: !395, line: 532, column: 9)
!4402 = !DILocation(line: 532, column: 17, scope: !4401)
!4403 = !DILocation(line: 532, column: 9, scope: !4324)
!4404 = !DILocation(line: 533, column: 10, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !395, line: 533, column: 10)
!4406 = distinct !DILexicalBlock(scope: !4401, file: !395, line: 532, column: 25)
!4407 = !DILocation(line: 533, column: 18, scope: !4405)
!4408 = !DILocation(line: 0, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4323, file: !395, line: 569, column: 9)
!4410 = !DILocation(line: 0, scope: !4323)
!4411 = !DILocation(line: 579, column: 20, scope: !4323)
!4412 = !DILocation(line: 579, column: 11, scope: !4323)
!4413 = !DILocation(line: 580, column: 9, scope: !4323)
!4414 = !DILocation(line: 582, column: 21, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !395, line: 582, column: 10)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !395, line: 580, column: 23)
!4417 = distinct !DILexicalBlock(scope: !4323, file: !395, line: 580, column: 9)
!4418 = !DILocation(line: 582, column: 28, scope: !4415)
!4419 = !DILocation(line: 582, column: 10, scope: !4416)
!4420 = !DILocation(line: 0, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !395, line: 587, column: 17)
!4422 = distinct !DILexicalBlock(scope: !4416, file: !395, line: 585, column: 10)
!4423 = !DILocation(line: 593, column: 9, scope: !4323)
!4424 = !DILocation(line: 600, column: 5, scope: !4324)
!4425 = !DILocation(line: 605, column: 18, scope: !4326)
!4426 = !DILocation(line: 605, column: 9, scope: !4326)
!4427 = !DILocation(line: 608, column: 20, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4326, file: !395, line: 608, column: 7)
!4429 = !DILocation(line: 608, column: 23, scope: !4428)
!4430 = !DILocation(line: 608, column: 34, scope: !4428)
!4431 = !DILocation(line: 608, column: 41, scope: !4428)
!4432 = !DILocation(line: 608, column: 7, scope: !4326)
!4433 = !DILocation(line: 613, column: 7, scope: !4326)
!4434 = !DILocation(line: 614, column: 8, scope: !4332)
!4435 = !DILocation(line: 614, column: 4, scope: !4332)
!4436 = !DILocation(line: 255, column: 15, scope: !4277)
!4437 = !DILocation(line: 256, column: 6, scope: !4277)
!4438 = !DILocation(line: 254, column: 15, scope: !4277)
!4439 = !DILocation(line: 253, column: 15, scope: !4277)
!4440 = !DILocation(line: 320, column: 7, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4369, file: !395, line: 305, column: 20)
!4442 = !DILocation(line: 615, column: 1, scope: !4332)
!4443 = !DILocation(line: 616, column: 8, scope: !4332)
!4444 = !DILocation(line: 617, column: 5, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !395, line: 616, column: 22)
!4446 = distinct !DILexicalBlock(scope: !4332, file: !395, line: 616, column: 8)
!4447 = !DILocation(line: 617, column: 25, scope: !4445)
!4448 = !DILocation(line: 618, column: 4, scope: !4445)
!4449 = !DILocation(line: 620, column: 26, scope: !4332)
!4450 = !DILocation(line: 620, column: 29, scope: !4332)
!4451 = !DILocation(line: 620, column: 17, scope: !4332)
!4452 = !DILocation(line: 620, column: 43, scope: !4332)
!4453 = !DILocation(line: 0, scope: !4332)
!4454 = !DILocation(line: 623, column: 14, scope: !4337)
!4455 = !DILocation(line: 626, column: 26, scope: !4336)
!4456 = !DILocation(line: 626, column: 37, scope: !4336)
!4457 = !DILocation(line: 0, scope: !4336)
!4458 = !DILocation(line: 634, column: 15, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4336, file: !395, line: 634, column: 9)
!4460 = !DILocation(line: 644, column: 9, scope: !4336)
!4461 = !DILocation(line: 649, column: 27, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !395, line: 644, column: 23)
!4463 = distinct !DILexicalBlock(scope: !4336, file: !395, line: 644, column: 9)
!4464 = !DILocation(line: 649, column: 6, scope: !4462)
!4465 = !DILocation(line: 649, column: 25, scope: !4462)
!4466 = !DILocation(line: 650, column: 27, scope: !4462)
!4467 = !DILocation(line: 650, column: 6, scope: !4462)
!4468 = !DILocation(line: 650, column: 25, scope: !4462)
!4469 = !DILocation(line: 651, column: 10, scope: !4462)
!4470 = !DILocation(line: 653, column: 26, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !395, line: 651, column: 17)
!4472 = distinct !DILexicalBlock(scope: !4462, file: !395, line: 651, column: 10)
!4473 = !DILocation(line: 654, column: 15, scope: !4471)
!4474 = !DILocation(line: 655, column: 6, scope: !4471)
!4475 = !DILocation(line: 656, column: 15, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !395, line: 655, column: 13)
!4477 = !DILocation(line: 658, column: 16, scope: !4463)
!4478 = !DILocation(line: 663, column: 10, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4480, file: !395, line: 658, column: 23)
!4480 = distinct !DILexicalBlock(scope: !4463, file: !395, line: 658, column: 16)
!4481 = !DILocation(line: 664, column: 5, scope: !4479)
!4482 = !DILocation(line: 664, column: 16, scope: !4480)
!4483 = !DILocation(line: 669, column: 10, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !395, line: 664, column: 28)
!4485 = distinct !DILexicalBlock(scope: !4480, file: !395, line: 664, column: 16)
!4486 = !DILocation(line: 670, column: 5, scope: !4484)
!4487 = !DILocation(line: 675, column: 13, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4485, file: !395, line: 670, column: 12)
!4489 = !DILocation(line: 675, column: 27, scope: !4488)
!4490 = !DILocation(line: 675, column: 10, scope: !4488)
!4491 = !DILocation(line: 678, column: 10, scope: !4336)
!4492 = !DILocation(line: 680, column: 8, scope: !4332)
!4493 = !DILocation(line: 683, column: 14, scope: !4333)
!4494 = !DILocation(line: 684, column: 12, scope: !4339)
!4495 = !DILocation(line: 0, scope: !4339)
!4496 = !DILocation(line: 686, column: 8, scope: !4339)
!4497 = !DILocation(line: 687, column: 5, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !395, line: 686, column: 22)
!4499 = distinct !DILexicalBlock(scope: !4339, file: !395, line: 686, column: 8)
!4500 = !DILocation(line: 687, column: 17, scope: !4498)
!4501 = !DILocation(line: 688, column: 4, scope: !4498)
!4502 = !DILocation(line: 698, column: 18, scope: !4345)
!4503 = !DILocation(line: 0, scope: !4345)
!4504 = !DILocation(line: 700, column: 8, scope: !4345)
!4505 = !DILocation(line: 704, column: 6, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !395, line: 703, column: 12)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !395, line: 701, column: 9)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !395, line: 700, column: 22)
!4509 = distinct !DILexicalBlock(scope: !4345, file: !395, line: 700, column: 8)
!4510 = !DILocation(line: 704, column: 24, scope: !4506)
!4511 = !DILocation(line: 706, column: 4, scope: !4508)
!4512 = !DILocation(line: 0, scope: !4340)
!4513 = !DILocation(line: 0, scope: !4326)
!4514 = !DILocation(line: 720, column: 6, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 720, column: 6)
!4516 = !DILocation(line: 720, column: 17, scope: !4515)
!4517 = !DILocation(line: 720, column: 31, scope: !4515)
!4518 = !DILocation(line: 720, column: 6, scope: !4277)
!4519 = !DILocation(line: 729, column: 6, scope: !4277)
!4520 = !DILocation(line: 730, column: 21, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !395, line: 729, column: 20)
!4522 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 729, column: 6)
!4523 = !DILocation(line: 730, column: 27, scope: !4521)
!4524 = !DILocation(line: 730, column: 3, scope: !4521)
!4525 = !DILocation(line: 737, column: 22, scope: !4277)
!4526 = !DILocation(line: 737, column: 20, scope: !4277)
!4527 = !DILocation(line: 0, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 739, column: 6)
!4529 = !DILocation(line: 745, column: 17, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4528, file: !395, line: 743, column: 9)
!4531 = !DILocation(line: 745, column: 25, scope: !4530)
!4532 = !DILocation(line: 746, column: 17, scope: !4530)
!4533 = !DILocation(line: 746, column: 28, scope: !4530)
!4534 = !DILocation(line: 749, column: 29, scope: !4277)
!4535 = !DILocation(line: 749, column: 16, scope: !4277)
!4536 = !DILocation(line: 749, column: 27, scope: !4277)
!4537 = !DILocation(line: 756, column: 6, scope: !4352)
!4538 = !DILocation(line: 756, column: 6, scope: !4277)
!4539 = !DILocation(line: 757, column: 3, scope: !4350)
!4540 = !DILocation(line: 758, column: 10, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4348, file: !395, line: 758, column: 8)
!4542 = !DILocation(line: 758, column: 25, scope: !4541)
!4543 = !DILocation(line: 758, column: 8, scope: !4348)
!4544 = !DILocation(line: 0, scope: !4348)
!4545 = !DILocation(line: 765, column: 8, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4348, file: !395, line: 765, column: 8)
!4547 = !DILocation(line: 765, column: 19, scope: !4546)
!4548 = !DILocation(line: 765, column: 23, scope: !4546)
!4549 = !DILocation(line: 765, column: 8, scope: !4348)
!4550 = !DILocation(line: 762, column: 33, scope: !4348)
!4551 = !DILocation(line: 769, column: 8, scope: !4348)
!4552 = !DILocation(line: 769, column: 11, scope: !4348)
!4553 = !DILocation(line: 757, column: 27, scope: !4349)
!4554 = !DILocation(line: 757, column: 17, scope: !4349)
!4555 = distinct !{!4555, !4539, !4556}
!4556 = !DILocation(line: 770, column: 3, scope: !4350)
!4557 = !DILocation(line: 774, column: 16, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !395, line: 774, column: 2)
!4559 = distinct !DILexicalBlock(scope: !4277, file: !395, line: 774, column: 2)
!4560 = !DILocation(line: 774, column: 2, scope: !4559)
!4561 = !DILocation(line: 776, column: 16, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !395, line: 776, column: 7)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !395, line: 774, column: 30)
!4564 = !DILocation(line: 776, column: 19, scope: !4562)
!4565 = !DILocation(line: 776, column: 34, scope: !4562)
!4566 = !DILocation(line: 776, column: 7, scope: !4563)
!4567 = !DILocation(line: 780, column: 7, scope: !4563)
!4568 = !DILocation(line: 782, column: 13, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !395, line: 780, column: 19)
!4570 = distinct !DILexicalBlock(scope: !4563, file: !395, line: 780, column: 7)
!4571 = !DILocation(line: 782, column: 8, scope: !4569)
!4572 = !DILocation(line: 782, column: 11, scope: !4569)
!4573 = !DILocation(line: 783, column: 3, scope: !4569)
!4574 = !DILocation(line: 785, column: 26, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4570, file: !395, line: 783, column: 10)
!4576 = !DILocation(line: 785, column: 41, scope: !4575)
!4577 = !DILocation(line: 785, column: 24, scope: !4575)
!4578 = !DILocation(line: 785, column: 8, scope: !4575)
!4579 = !DILocation(line: 787, column: 52, scope: !4575)
!4580 = !DILocation(line: 789, column: 11, scope: !4575)
!4581 = !DILocation(line: 789, column: 21, scope: !4575)
!4582 = !DILocation(line: 0, scope: !4570)
!4583 = !DILocation(line: 793, column: 7, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4563, file: !395, line: 793, column: 7)
!4585 = !DILocation(line: 793, column: 18, scope: !4584)
!4586 = !DILocation(line: 793, column: 22, scope: !4584)
!4587 = !DILocation(line: 793, column: 29, scope: !4584)
!4588 = !DILocation(line: 793, column: 7, scope: !4563)
!4589 = !DILocation(line: 797, column: 12, scope: !4563)
!4590 = !DILocation(line: 797, column: 7, scope: !4563)
!4591 = !DILocation(line: 797, column: 10, scope: !4563)
!4592 = !DILocation(line: 799, column: 3, scope: !4563)
!4593 = !DILocation(line: 800, column: 7, scope: !4563)
!4594 = !DILocation(line: 801, column: 2, scope: !4563)
!4595 = !DILocation(line: 338, column: 4, scope: !4277)
!4596 = !DILocation(line: 774, column: 26, scope: !4558)
!4597 = distinct !{!4597, !4560, !4598}
!4598 = !DILocation(line: 801, column: 2, scope: !4559)
!4599 = !DILocation(line: 808, column: 9, scope: !4277)
!4600 = !DILocation(line: 808, column: 2, scope: !4277)
!4601 = !DILocation(line: 813, column: 1, scope: !4277)
!4602 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4603, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4605)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!153, !140}
!4605 = !{!4606}
!4606 = !DILocalVariable(name: "addr", arg: 1, scope: !4602, file: !395, line: 33, type: !140)
!4607 = !DILocation(line: 0, scope: !4602)
!4608 = !DILocation(line: 41, column: 9, scope: !4602)
!4609 = !DILocation(line: 41, column: 2, scope: !4602)
!4610 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4611, file: !4611, line: 24, type: !4612, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4614)
!4611 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!153, !13}
!4614 = !{!4615}
!4615 = !DILocalVariable(name: "addr", arg: 1, scope: !4610, file: !4611, line: 24, type: !13)
!4616 = !DILocation(line: 0, scope: !4610)
!4617 = !DILocation(line: 49, column: 30, scope: !4610)
!4618 = !DILocation(line: 49, column: 57, scope: !4610)
!4619 = !DILocation(line: 49, column: 2, scope: !4610)
!4620 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4621, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!125, !124, !272, !208, !140, null}
!4623 = !{!4624, !4625, !4626, !4627, !4628, !4629}
!4624 = !DILocalVariable(name: "packaged", arg: 1, scope: !4620, file: !395, line: 815, type: !124)
!4625 = !DILocalVariable(name: "len", arg: 2, scope: !4620, file: !395, line: 815, type: !272)
!4626 = !DILocalVariable(name: "flags", arg: 3, scope: !4620, file: !395, line: 815, type: !208)
!4627 = !DILocalVariable(name: "format", arg: 4, scope: !4620, file: !395, line: 816, type: !140)
!4628 = !DILocalVariable(name: "ap", scope: !4620, file: !395, line: 818, type: !4280)
!4629 = !DILocalVariable(name: "ret", scope: !4620, file: !395, line: 819, type: !125)
!4630 = !DILocation(line: 0, scope: !4620)
!4631 = !DILocation(line: 818, column: 2, scope: !4620)
!4632 = !DILocation(line: 818, column: 10, scope: !4620)
!4633 = !DILocation(line: 821, column: 2, scope: !4620)
!4634 = !DILocation(line: 822, column: 8, scope: !4620)
!4635 = !DILocation(line: 823, column: 2, scope: !4620)
!4636 = !DILocation(line: 825, column: 1, scope: !4620)
!4637 = !DILocation(line: 824, column: 2, scope: !4620)
!4638 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4639, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4649)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!125, !4641, !4645, !124, !124}
!4641 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4312, line: 297, baseType: !4642)
!4642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 32)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!125, null}
!4645 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4312, line: 328, baseType: !4646)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 32)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!125, !4641, !124, !140, !4280}
!4649 = !{!4650, !4651, !4652, !4653, !4654, !4655, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668}
!4650 = !DILocalVariable(name: "out", arg: 1, scope: !4638, file: !395, line: 827, type: !4641)
!4651 = !DILocalVariable(name: "formatter", arg: 2, scope: !4638, file: !395, line: 828, type: !4645)
!4652 = !DILocalVariable(name: "ctx", arg: 3, scope: !4638, file: !395, line: 829, type: !124)
!4653 = !DILocalVariable(name: "packaged", arg: 4, scope: !4638, file: !395, line: 829, type: !124)
!4654 = !DILocalVariable(name: "buf", scope: !4638, file: !395, line: 831, type: !184)
!4655 = !DILocalVariable(name: "hdr", scope: !4638, file: !395, line: 832, type: !4656)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 32)
!4657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4312, line: 96, size: 64, elements: !4658)
!4658 = !{!4659, !4660}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4657, file: !4312, line: 98, baseType: !4311, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4657, file: !4312, line: 101, baseType: !393, size: 32, offset: 32)
!4661 = !DILocalVariable(name: "s", scope: !4638, file: !395, line: 833, type: !393)
!4662 = !DILocalVariable(name: "ps", scope: !4638, file: !395, line: 833, type: !392)
!4663 = !DILocalVariable(name: "i", scope: !4638, file: !395, line: 834, type: !32)
!4664 = !DILocalVariable(name: "args_size", scope: !4638, file: !395, line: 834, type: !32)
!4665 = !DILocalVariable(name: "s_nbr", scope: !4638, file: !395, line: 834, type: !32)
!4666 = !DILocalVariable(name: "ros_nbr", scope: !4638, file: !395, line: 834, type: !32)
!4667 = !DILocalVariable(name: "rws_nbr", scope: !4638, file: !395, line: 834, type: !32)
!4668 = !DILocalVariable(name: "s_idx", scope: !4638, file: !395, line: 834, type: !32)
!4669 = !DILocation(line: 0, scope: !4638)
!4670 = !DILocation(line: 836, column: 10, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4638, file: !395, line: 836, column: 6)
!4672 = !DILocation(line: 836, column: 6, scope: !4638)
!4673 = !DILocation(line: 842, column: 28, scope: !4638)
!4674 = !DILocation(line: 842, column: 14, scope: !4638)
!4675 = !DILocation(line: 852, column: 16, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !395, line: 852, column: 2)
!4677 = distinct !DILexicalBlock(scope: !4638, file: !395, line: 852, column: 2)
!4678 = !DILocation(line: 852, column: 2, scope: !4677)
!4679 = !DILocation(line: 841, column: 28, scope: !4638)
!4680 = !DILocation(line: 841, column: 14, scope: !4638)
!4681 = !DILocation(line: 841, column: 32, scope: !4638)
!4682 = !DILocation(line: 847, column: 19, scope: !4638)
!4683 = !DILocation(line: 843, column: 28, scope: !4638)
!4684 = !DILocation(line: 843, column: 14, scope: !4638)
!4685 = !DILocation(line: 847, column: 31, scope: !4638)
!4686 = !DILocation(line: 844, column: 28, scope: !4638)
!4687 = !DILocation(line: 844, column: 14, scope: !4638)
!4688 = !DILocation(line: 847, column: 45, scope: !4638)
!4689 = !DILocation(line: 847, column: 41, scope: !4638)
!4690 = !DILocation(line: 854, column: 24, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4676, file: !395, line: 852, column: 30)
!4692 = !DILocation(line: 854, column: 11, scope: !4691)
!4693 = !DILocation(line: 855, column: 30, scope: !4691)
!4694 = !DILocation(line: 855, column: 22, scope: !4691)
!4695 = !DILocation(line: 855, column: 8, scope: !4691)
!4696 = !DILocation(line: 857, column: 7, scope: !4691)
!4697 = !DILocation(line: 859, column: 8, scope: !4691)
!4698 = !DILocation(line: 859, column: 18, scope: !4691)
!4699 = !DILocation(line: 859, column: 5, scope: !4691)
!4700 = !DILocation(line: 852, column: 26, scope: !4676)
!4701 = distinct !{!4701, !4678, !4702}
!4702 = !DILocation(line: 860, column: 2, scope: !4677)
!4703 = !DILocation(line: 863, column: 6, scope: !4638)
!4704 = !DILocation(line: 866, column: 56, scope: !4638)
!4705 = !DILocation(line: 866, column: 9, scope: !4638)
!4706 = !DILocation(line: 866, column: 2, scope: !4638)
!4707 = !DILocation(line: 867, column: 1, scope: !4638)
!4708 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4709, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4711)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!125, !4641, !4645, !124, !140, !124}
!4711 = !{!4712, !4713, !4714, !4715, !4716, !4717}
!4712 = !DILocalVariable(name: "out", arg: 1, scope: !4708, file: !395, line: 179, type: !4641)
!4713 = !DILocalVariable(name: "formatter", arg: 2, scope: !4708, file: !395, line: 180, type: !4645)
!4714 = !DILocalVariable(name: "ctx", arg: 3, scope: !4708, file: !395, line: 181, type: !124)
!4715 = !DILocalVariable(name: "fmt", arg: 4, scope: !4708, file: !395, line: 182, type: !140)
!4716 = !DILocalVariable(name: "buf", arg: 5, scope: !4708, file: !395, line: 182, type: !124)
!4717 = !DILocalVariable(name: "u", scope: !4708, file: !395, line: 187, type: !4718)
!4718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4708, file: !395, line: 184, size: 32, elements: !4719)
!4719 = !{!4720, !4721}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4718, file: !395, line: 185, baseType: !4280, size: 32)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4718, file: !395, line: 186, baseType: !124, size: 32)
!4722 = !DILocation(line: 0, scope: !4708)
!4723 = !DILocation(line: 191, column: 9, scope: !4708)
!4724 = !DILocation(line: 191, column: 2, scope: !4708)
!4725 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4726, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4728)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!153, !140, !125}
!4728 = !{!4729, !4730, !4731, !4732, !4733}
!4729 = !DILocalVariable(name: "fmt", arg: 1, scope: !4725, file: !395, line: 881, type: !140)
!4730 = !DILocalVariable(name: "n", arg: 2, scope: !4725, file: !395, line: 881, type: !125)
!4731 = !DILocalVariable(name: "c", scope: !4725, file: !395, line: 883, type: !142)
!4732 = !DILocalVariable(name: "mod", scope: !4725, file: !395, line: 884, type: !153)
!4733 = !DILocalVariable(name: "cnt", scope: !4725, file: !395, line: 885, type: !125)
!4734 = !DILocation(line: 0, scope: !4725)
!4735 = !DILocation(line: 887, column: 14, scope: !4725)
!4736 = !DILocation(line: 887, column: 22, scope: !4725)
!4737 = !DILocation(line: 887, column: 2, scope: !4725)
!4738 = !DILocation(line: 887, column: 18, scope: !4725)
!4739 = !DILocation(line: 888, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4725, file: !395, line: 887, column: 31)
!4741 = !DILocation(line: 889, column: 12, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !395, line: 889, column: 8)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !395, line: 888, column: 12)
!4744 = distinct !DILexicalBlock(scope: !4740, file: !395, line: 888, column: 7)
!4745 = !DILocation(line: 889, column: 8, scope: !4743)
!4746 = !DILocation(line: 890, column: 11, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !395, line: 890, column: 9)
!4748 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 889, column: 18)
!4749 = !DILocation(line: 890, column: 9, scope: !4748)
!4750 = !DILocation(line: 892, column: 16, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4747, file: !395, line: 892, column: 16)
!4752 = !DILocation(line: 892, column: 16, scope: !4747)
!4753 = !DILocation(line: 895, column: 15, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 895, column: 15)
!4755 = !DILocation(line: 895, column: 15, scope: !4742)
!4756 = !DILocation(line: 900, column: 9, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4740, file: !395, line: 900, column: 7)
!4758 = !DILocation(line: 900, column: 7, scope: !4740)
!4759 = distinct !{!4759, !4737, !4760}
!4760 = !DILocation(line: 903, column: 2, scope: !4725)
!4761 = !DILocation(line: 906, column: 1, scope: !4725)
!4762 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4763, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4765)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{!153, !142}
!4765 = !{!4766}
!4766 = !DILocalVariable(name: "c", arg: 1, scope: !4762, file: !395, line: 873, type: !142)
!4767 = !DILocation(line: 0, scope: !4762)
!4768 = !DILocation(line: 875, column: 19, scope: !4762)
!4769 = !DILocation(line: 875, column: 2, scope: !4762)
!4770 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4771, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4777)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!125, !124, !272, !4773, !124, !208, !3071, !272}
!4773 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4312, line: 308, baseType: !4774)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4775, size: 32)
!4775 = !DISubroutineType(types: !4776)
!4776 = !{!125, !13, !272, !124}
!4777 = !{!4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4795, !4796, !4797, !4798, !4799, !4805, !4808, !4809, !4810, !4812, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4828, !4831, !4832, !4833, !4834, !4835, !4836, !4838, !4841, !4842, !4843}
!4778 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4770, file: !395, line: 908, type: !124)
!4779 = !DILocalVariable(name: "in_len", arg: 2, scope: !4770, file: !395, line: 909, type: !272)
!4780 = !DILocalVariable(name: "cb", arg: 3, scope: !4770, file: !395, line: 910, type: !4773)
!4781 = !DILocalVariable(name: "ctx", arg: 4, scope: !4770, file: !395, line: 911, type: !124)
!4782 = !DILocalVariable(name: "flags", arg: 5, scope: !4770, file: !395, line: 912, type: !208)
!4783 = !DILocalVariable(name: "strl", arg: 6, scope: !4770, file: !395, line: 913, type: !3071)
!4784 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4770, file: !395, line: 914, type: !272)
!4785 = !DILocalVariable(name: "buf", scope: !4770, file: !395, line: 918, type: !184)
!4786 = !DILocalVariable(name: "buf32", scope: !4770, file: !395, line: 919, type: !1047)
!4787 = !DILocalVariable(name: "args_size", scope: !4770, file: !395, line: 920, type: !32)
!4788 = !DILocalVariable(name: "ros_nbr", scope: !4770, file: !395, line: 920, type: !32)
!4789 = !DILocalVariable(name: "rws_nbr", scope: !4770, file: !395, line: 920, type: !32)
!4790 = !DILocalVariable(name: "fmt_present", scope: !4770, file: !395, line: 921, type: !153)
!4791 = !DILocalVariable(name: "rw_cpy", scope: !4770, file: !395, line: 922, type: !153)
!4792 = !DILocalVariable(name: "ro_cpy", scope: !4770, file: !395, line: 923, type: !153)
!4793 = !DILocalVariable(name: "in_desc", scope: !4770, file: !395, line: 924, type: !4794)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 32)
!4795 = !DILocalVariable(name: "out_len", scope: !4770, file: !395, line: 960, type: !125)
!4796 = !DILocalVariable(name: "fmt", scope: !4770, file: !395, line: 965, type: !140)
!4797 = !DILocalVariable(name: "str_pos", scope: !4770, file: !395, line: 966, type: !184)
!4798 = !DILocalVariable(name: "strl_cnt", scope: !4770, file: !395, line: 967, type: !272)
!4799 = !DILocalVariable(name: "i", scope: !4800, file: !395, line: 973, type: !125)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !395, line: 973, column: 4)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !395, line: 972, column: 15)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !395, line: 972, column: 7)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !395, line: 970, column: 18)
!4804 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 970, column: 6)
!4805 = !DILocalVariable(name: "str", scope: !4806, file: !395, line: 974, type: !140)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !395, line: 973, column: 38)
!4807 = distinct !DILexicalBlock(scope: !4800, file: !395, line: 973, column: 4)
!4808 = !DILocalVariable(name: "len", scope: !4806, file: !395, line: 975, type: !125)
!4809 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4803, file: !395, line: 990, type: !153)
!4810 = !DILocalVariable(name: "i", scope: !4811, file: !395, line: 995, type: !125)
!4811 = distinct !DILexicalBlock(scope: !4803, file: !395, line: 995, column: 3)
!4812 = !DILocalVariable(name: "arg_idx", scope: !4813, file: !395, line: 996, type: !150)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !395, line: 995, column: 37)
!4814 = distinct !DILexicalBlock(scope: !4811, file: !395, line: 995, column: 3)
!4815 = !DILocalVariable(name: "arg_pos", scope: !4813, file: !395, line: 997, type: !150)
!4816 = !DILocalVariable(name: "str", scope: !4813, file: !395, line: 998, type: !140)
!4817 = !DILocalVariable(name: "is_ro", scope: !4813, file: !395, line: 999, type: !153)
!4818 = !DILocalVariable(name: "len", scope: !4813, file: !395, line: 1000, type: !125)
!4819 = !DILocalVariable(name: "out_desc", scope: !4770, file: !395, line: 1038, type: !4315)
!4820 = !DILocalVariable(name: "cpy_str_pos", scope: !4770, file: !395, line: 1040, type: !311)
!4821 = !DILocalVariable(name: "keep_str_pos", scope: !4770, file: !395, line: 1042, type: !311)
!4822 = !DILocalVariable(name: "scpy_cnt", scope: !4770, file: !395, line: 1043, type: !150)
!4823 = !DILocalVariable(name: "keep_cnt", scope: !4770, file: !395, line: 1044, type: !150)
!4824 = !DILocalVariable(name: "dst", scope: !4770, file: !395, line: 1045, type: !184)
!4825 = !DILocalVariable(name: "rv", scope: !4770, file: !395, line: 1046, type: !125)
!4826 = !DILocalVariable(name: "i", scope: !4827, file: !395, line: 1074, type: !125)
!4827 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1074, column: 2)
!4828 = !DILocalVariable(name: "arg_idx", scope: !4829, file: !395, line: 1075, type: !150)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !395, line: 1074, column: 36)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !395, line: 1074, column: 2)
!4831 = !DILocalVariable(name: "arg_pos", scope: !4829, file: !395, line: 1076, type: !150)
!4832 = !DILocalVariable(name: "str", scope: !4829, file: !395, line: 1077, type: !140)
!4833 = !DILocalVariable(name: "is_ro", scope: !4829, file: !395, line: 1078, type: !153)
!4834 = !DILocalVariable(name: "in_desc_backup", scope: !4770, file: !395, line: 1114, type: !4315)
!4835 = !DILocalVariable(name: "strs_len", scope: !4770, file: !395, line: 1134, type: !272)
!4836 = !DILocalVariable(name: "i", scope: !4837, file: !395, line: 1143, type: !125)
!4837 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1143, column: 2)
!4838 = !DILocalVariable(name: "loc", scope: !4839, file: !395, line: 1144, type: !150)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !395, line: 1143, column: 37)
!4840 = distinct !DILexicalBlock(scope: !4837, file: !395, line: 1143, column: 2)
!4841 = !DILocalVariable(name: "str", scope: !4839, file: !395, line: 1145, type: !140)
!4842 = !DILocalVariable(name: "str_len", scope: !4839, file: !395, line: 1146, type: !227)
!4843 = !DILabel(scope: !4844, name: "calculate_string_length", file: !395, line: 1021)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !395, line: 1020, column: 56)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !395, line: 1020, column: 15)
!4846 = distinct !DILexicalBlock(scope: !4813, file: !395, line: 1014, column: 8)
!4847 = !DILocation(line: 0, scope: !4770)
!4848 = !DILocation(line: 919, column: 20, scope: !4770)
!4849 = !DILocation(line: 921, column: 27, scope: !4770)
!4850 = !DILocation(line: 921, column: 21, scope: !4770)
!4851 = !DILocation(line: 926, column: 18, scope: !4770)
!4852 = !DILocation(line: 926, column: 11, scope: !4770)
!4853 = !DILocation(line: 926, column: 34, scope: !4770)
!4854 = !DILocation(line: 931, column: 21, scope: !4770)
!4855 = !DILocation(line: 931, column: 12, scope: !4770)
!4856 = !DILocation(line: 932, column: 11, scope: !4770)
!4857 = !DILocation(line: 932, column: 19, scope: !4770)
!4858 = !DILocation(line: 938, column: 21, scope: !4770)
!4859 = !DILocation(line: 938, column: 12, scope: !4770)
!4860 = !DILocation(line: 939, column: 19, scope: !4770)
!4861 = !DILocation(line: 939, column: 23, scope: !4770)
!4862 = !DILocation(line: 946, column: 14, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 946, column: 6)
!4864 = !DILocation(line: 947, column: 7, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !395, line: 947, column: 7)
!4866 = distinct !DILexicalBlock(scope: !4863, file: !395, line: 946, column: 26)
!4867 = !DILocation(line: 947, column: 7, scope: !4866)
!4868 = !DILocation(line: 948, column: 4, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4865, file: !395, line: 947, column: 11)
!4870 = !DILocation(line: 949, column: 3, scope: !4869)
!4871 = !DILocation(line: 958, column: 23, scope: !4770)
!4872 = !DILocation(line: 958, column: 14, scope: !4770)
!4873 = !DILocation(line: 958, column: 27, scope: !4770)
!4874 = !DILocation(line: 965, column: 41, scope: !4770)
!4875 = !DILocation(line: 965, column: 20, scope: !4770)
!4876 = !DILocation(line: 966, column: 22, scope: !4770)
!4877 = !DILocation(line: 970, column: 9, scope: !4804)
!4878 = !DILocation(line: 970, column: 6, scope: !4770)
!4879 = !DILocation(line: 972, column: 7, scope: !4803)
!4880 = !DILocation(line: 0, scope: !4800)
!4881 = !DILocation(line: 973, column: 4, scope: !4800)
!4882 = !DILocation(line: 974, column: 46, scope: !4806)
!4883 = !DILocation(line: 974, column: 40, scope: !4806)
!4884 = !DILocation(line: 974, column: 23, scope: !4806)
!4885 = !DILocation(line: 0, scope: !4806)
!4886 = !DILocation(line: 975, column: 15, scope: !4806)
!4887 = !DILocation(line: 978, column: 14, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4806, file: !395, line: 978, column: 9)
!4889 = !DILocation(line: 979, column: 25, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4888, file: !395, line: 978, column: 38)
!4891 = !DILocation(line: 979, column: 19, scope: !4890)
!4892 = !DILocation(line: 979, column: 6, scope: !4890)
!4893 = !DILocation(line: 979, column: 23, scope: !4890)
!4894 = !DILocation(line: 980, column: 5, scope: !4890)
!4895 = !DILocation(line: 981, column: 13, scope: !4806)
!4896 = !DILocation(line: 982, column: 12, scope: !4806)
!4897 = !DILocation(line: 973, column: 34, scope: !4807)
!4898 = !DILocation(line: 973, column: 22, scope: !4807)
!4899 = distinct !{!4899, !4881, !4900}
!4900 = !DILocation(line: 983, column: 4, scope: !4800)
!4901 = !DILocation(line: 985, column: 16, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !395, line: 985, column: 8)
!4903 = distinct !DILexicalBlock(scope: !4802, file: !395, line: 984, column: 10)
!4904 = !DILocation(line: 967, column: 9, scope: !4770)
!4905 = !DILocation(line: 971, column: 11, scope: !4803)
!4906 = !DILocation(line: 0, scope: !4803)
!4907 = !DILocation(line: 0, scope: !4811)
!4908 = !DILocation(line: 995, column: 21, scope: !4814)
!4909 = !DILocation(line: 995, column: 3, scope: !4811)
!4910 = !DILocation(line: 990, column: 34, scope: !4803)
!4911 = !DILocation(line: 990, column: 26, scope: !4803)
!4912 = !DILocation(line: 996, column: 30, scope: !4813)
!4913 = !DILocation(line: 0, scope: !4813)
!4914 = !DILocation(line: 997, column: 30, scope: !4813)
!4915 = !DILocation(line: 997, column: 22, scope: !4813)
!4916 = !DILocation(line: 998, column: 39, scope: !4813)
!4917 = !DILocation(line: 998, column: 22, scope: !4813)
!4918 = !DILocation(line: 999, column: 17, scope: !4813)
!4919 = !DILocation(line: 1002, column: 20, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4813, file: !395, line: 1002, column: 8)
!4921 = !DILocation(line: 996, column: 22, scope: !4813)
!4922 = !DILocation(line: 1002, column: 35, scope: !4920)
!4923 = !DILocation(line: 1002, column: 23, scope: !4920)
!4924 = !DILocation(line: 1002, column: 8, scope: !4813)
!4925 = !DILocation(line: 1003, column: 5, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !395, line: 1003, column: 5)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !395, line: 1003, column: 5)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !395, line: 1003, column: 5)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !395, line: 1003, column: 5)
!4930 = distinct !DILexicalBlock(scope: !4920, file: !395, line: 1002, column: 45)
!4931 = !DILocation(line: 1010, column: 13, scope: !4930)
!4932 = !DILocation(line: 1011, column: 5, scope: !4930)
!4933 = !DILocation(line: 1014, column: 8, scope: !4813)
!4934 = !DILocation(line: 1015, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4846, file: !395, line: 1014, column: 15)
!4936 = !DILocation(line: 1018, column: 14, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !395, line: 1017, column: 12)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !395, line: 1015, column: 9)
!4939 = !DILocation(line: 1020, column: 4, scope: !4935)
!4940 = !DILocation(line: 1020, column: 15, scope: !4846)
!4941 = !DILocation(line: 1021, column: 1, scope: !4844)
!4942 = !DILocation(line: 1022, column: 11, scope: !4844)
!4943 = !DILocation(line: 1025, column: 14, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4844, file: !395, line: 1025, column: 9)
!4945 = !DILocation(line: 1026, column: 25, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4944, file: !395, line: 1025, column: 38)
!4947 = !DILocation(line: 1026, column: 19, scope: !4946)
!4948 = !DILocation(line: 1026, column: 6, scope: !4946)
!4949 = !DILocation(line: 1026, column: 23, scope: !4946)
!4950 = !DILocation(line: 1027, column: 5, scope: !4946)
!4951 = !DILocation(line: 1031, column: 21, scope: !4844)
!4952 = !DILocation(line: 1031, column: 13, scope: !4844)
!4953 = !DILocation(line: 1032, column: 4, scope: !4844)
!4954 = !DILocation(line: 995, column: 33, scope: !4814)
!4955 = distinct !{!4955, !4909, !4956}
!4956 = !DILocation(line: 1033, column: 3, scope: !4811)
!4957 = !DILocation(line: 1040, column: 10, scope: !4770)
!4958 = !DILocation(line: 1042, column: 10, scope: !4770)
!4959 = !DILocation(line: 1052, column: 6, scope: !4770)
!4960 = !DILocation(line: 1055, column: 9, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4962, file: !395, line: 1052, column: 14)
!4962 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1052, column: 6)
!4963 = !DILocation(line: 1056, column: 2, scope: !4961)
!4964 = !DILocation(line: 1056, column: 21, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !395, line: 1056, column: 13)
!4966 = !DILocation(line: 1066, column: 3, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !395, line: 1065, column: 11)
!4968 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1065, column: 6)
!4969 = !DILocation(line: 1067, column: 2, scope: !4967)
!4970 = !DILocation(line: 1068, column: 10, scope: !4770)
!4971 = !DILocation(line: 0, scope: !4827)
!4972 = !DILocation(line: 1074, column: 20, scope: !4830)
!4973 = !DILocation(line: 1074, column: 2, scope: !4827)
!4974 = !DILocation(line: 1110, column: 24, scope: !4770)
!4975 = !DILocation(line: 1053, column: 12, scope: !4961)
!4976 = !DILocation(line: 1054, column: 12, scope: !4961)
!4977 = !DILocation(line: 1108, column: 30, scope: !4770)
!4978 = !DILocation(line: 1108, column: 40, scope: !4770)
!4979 = !DILocation(line: 1108, column: 38, scope: !4770)
!4980 = !DILocation(line: 1109, column: 31, scope: !4770)
!4981 = !DILocation(line: 1109, column: 24, scope: !4770)
!4982 = !DILocation(line: 1110, column: 31, scope: !4770)
!4983 = !DILocation(line: 1114, column: 31, scope: !4770)
!4984 = !DILocation(line: 1114, column: 48, scope: !4770)
!4985 = !DILocation(line: 1115, column: 13, scope: !4770)
!4986 = !DILocation(line: 1118, column: 7, scope: !4770)
!4987 = !DILocation(line: 1119, column: 9, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1119, column: 6)
!4989 = !DILocation(line: 1119, column: 6, scope: !4770)
!4990 = !DILocation(line: 1075, column: 29, scope: !4829)
!4991 = !DILocation(line: 1075, column: 21, scope: !4829)
!4992 = !DILocation(line: 0, scope: !4829)
!4993 = !DILocation(line: 1076, column: 29, scope: !4829)
!4994 = !DILocation(line: 1076, column: 21, scope: !4829)
!4995 = !DILocation(line: 1077, column: 38, scope: !4829)
!4996 = !DILocation(line: 1077, column: 21, scope: !4829)
!4997 = !DILocation(line: 1078, column: 16, scope: !4829)
!4998 = !DILocation(line: 1080, column: 19, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4829, file: !395, line: 1080, column: 7)
!5000 = !DILocation(line: 1080, column: 34, scope: !4999)
!5001 = !DILocation(line: 1080, column: 22, scope: !4999)
!5002 = !DILocation(line: 1080, column: 7, scope: !4829)
!5003 = !DILocation(line: 1084, column: 7, scope: !4829)
!5004 = !DILocation(line: 1085, column: 8, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !395, line: 1084, column: 14)
!5006 = distinct !DILexicalBlock(scope: !4829, file: !395, line: 1084, column: 7)
!5007 = !DILocation(line: 1087, column: 25, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !395, line: 1085, column: 49)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !395, line: 1085, column: 8)
!5010 = !DILocation(line: 1088, column: 4, scope: !5008)
!5011 = !DILocation(line: 1088, column: 15, scope: !5009)
!5012 = !DILocation(line: 1090, column: 26, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5014, file: !395, line: 1088, column: 61)
!5014 = distinct !DILexicalBlock(scope: !5009, file: !395, line: 1088, column: 15)
!5015 = !DILocation(line: 1091, column: 4, scope: !5013)
!5016 = !DILocation(line: 1095, column: 8, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5006, file: !395, line: 1094, column: 10)
!5018 = !DILocation(line: 1097, column: 25, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5020, file: !395, line: 1095, column: 49)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !395, line: 1095, column: 8)
!5021 = !DILocation(line: 1098, column: 4, scope: !5019)
!5022 = !DILocation(line: 1100, column: 26, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !395, line: 1098, column: 11)
!5024 = !DILocation(line: 1100, column: 5, scope: !5023)
!5025 = !DILocation(line: 1100, column: 30, scope: !5023)
!5026 = !DILocation(line: 1101, column: 26, scope: !5023)
!5027 = !DILocation(line: 0, scope: !5006)
!5028 = !DILocation(line: 1074, column: 32, scope: !4830)
!5029 = distinct !{!5029, !4973, !5030}
!5030 = !DILocation(line: 1104, column: 2, scope: !4827)
!5031 = !DILocation(line: 1124, column: 13, scope: !4770)
!5032 = !DILocation(line: 1127, column: 10, scope: !4770)
!5033 = !DILocation(line: 1127, column: 7, scope: !4770)
!5034 = !DILocation(line: 1128, column: 9, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1128, column: 6)
!5036 = !DILocation(line: 1128, column: 6, scope: !4770)
!5037 = !DILocation(line: 1134, column: 27, scope: !4770)
!5038 = !DILocation(line: 1136, column: 7, scope: !4770)
!5039 = !DILocation(line: 1137, column: 9, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !4770, file: !395, line: 1137, column: 6)
!5041 = !DILocation(line: 1137, column: 6, scope: !4770)
!5042 = !DILocation(line: 1131, column: 10, scope: !4770)
!5043 = !DILocation(line: 1140, column: 10, scope: !4770)
!5044 = !DILocation(line: 0, scope: !4837)
!5045 = !DILocation(line: 1143, column: 20, scope: !4840)
!5046 = !DILocation(line: 1143, column: 2, scope: !4837)
!5047 = !DILocation(line: 1144, column: 3, scope: !4839)
!5048 = !DILocation(line: 1144, column: 17, scope: !4839)
!5049 = !DILocation(line: 0, scope: !4839)
!5050 = !DILocation(line: 1144, column: 11, scope: !4839)
!5051 = !DILocation(line: 1145, column: 38, scope: !4839)
!5052 = !DILocation(line: 1145, column: 21, scope: !4839)
!5053 = !DILocation(line: 1146, column: 22, scope: !4839)
!5054 = !DILocation(line: 1146, column: 29, scope: !4839)
!5055 = !DILocation(line: 1148, column: 8, scope: !4839)
!5056 = !DILocation(line: 1149, column: 10, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !4839, file: !395, line: 1149, column: 7)
!5058 = !DILocation(line: 1149, column: 7, scope: !4839)
!5059 = !DILocation(line: 1154, column: 8, scope: !4839)
!5060 = !DILocation(line: 1155, column: 10, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !4839, file: !395, line: 1155, column: 7)
!5062 = !DILocation(line: 1155, column: 7, scope: !4839)
!5063 = !DILocation(line: 1159, column: 2, scope: !4840)
!5064 = !DILocation(line: 1152, column: 11, scope: !4839)
!5065 = !DILocation(line: 1158, column: 11, scope: !4839)
!5066 = !DILocation(line: 1143, column: 33, scope: !4840)
!5067 = distinct !{!5067, !5046, !5068}
!5068 = !DILocation(line: 1159, column: 2, scope: !4837)
!5069 = !DILocation(line: 1162, column: 8, scope: !4770)
!5070 = !DILocation(line: 1164, column: 2, scope: !4770)
!5071 = !DILocation(line: 1165, column: 1, scope: !4770)
!5072 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !5073, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5075)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!272, !124}
!5075 = !{!5076, !5077, !5078, !5079, !5080, !5081, !5082}
!5076 = !DILocalVariable(name: "packaged", arg: 1, scope: !5072, file: !395, line: 196, type: !124)
!5077 = !DILocalVariable(name: "buf", scope: !5072, file: !395, line: 200, type: !184)
!5078 = !DILocalVariable(name: "start", scope: !5072, file: !395, line: 201, type: !184)
!5079 = !DILocalVariable(name: "args_size", scope: !5072, file: !395, line: 202, type: !32)
!5080 = !DILocalVariable(name: "s_nbr", scope: !5072, file: !395, line: 202, type: !32)
!5081 = !DILocalVariable(name: "ros_nbr", scope: !5072, file: !395, line: 202, type: !32)
!5082 = !DILocalVariable(name: "i", scope: !5083, file: !395, line: 215, type: !125)
!5083 = distinct !DILexicalBlock(scope: !5072, file: !395, line: 215, column: 2)
!5084 = !DILocation(line: 0, scope: !5072)
!5085 = !DILocation(line: 204, column: 14, scope: !5072)
!5086 = !DILocation(line: 204, column: 21, scope: !5072)
!5087 = !DILocation(line: 205, column: 14, scope: !5072)
!5088 = !DILocation(line: 206, column: 14, scope: !5072)
!5089 = !DILocation(line: 209, column: 6, scope: !5072)
!5090 = !DILocation(line: 212, column: 6, scope: !5072)
!5091 = !DILocation(line: 0, scope: !5083)
!5092 = !DILocation(line: 215, column: 20, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5083, file: !395, line: 215, column: 2)
!5094 = !DILocation(line: 215, column: 2, scope: !5083)
!5095 = !DILocation(line: 220, column: 33, scope: !5072)
!5096 = !DILocation(line: 220, column: 2, scope: !5072)
!5097 = !DILocation(line: 216, column: 6, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5093, file: !395, line: 215, column: 34)
!5099 = !DILocation(line: 217, column: 10, scope: !5098)
!5100 = !DILocation(line: 217, column: 36, scope: !5098)
!5101 = !DILocation(line: 217, column: 7, scope: !5098)
!5102 = !DILocation(line: 215, column: 30, scope: !5093)
!5103 = distinct !{!5103, !5094, !5104}
!5104 = !DILocation(line: 218, column: 2, scope: !5083)
!5105 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5106, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5108)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!125, !4773, !124, !140, !227}
!5108 = !{!5109, !5110, !5111, !5112}
!5109 = !DILocalVariable(name: "cb", arg: 1, scope: !5105, file: !395, line: 223, type: !4773)
!5110 = !DILocalVariable(name: "ctx", arg: 2, scope: !5105, file: !395, line: 223, type: !124)
!5111 = !DILocalVariable(name: "str", arg: 3, scope: !5105, file: !395, line: 223, type: !140)
!5112 = !DILocalVariable(name: "strl", arg: 4, scope: !5105, file: !395, line: 223, type: !227)
!5113 = !DILocation(line: 0, scope: !5105)
!5114 = !DILocation(line: 225, column: 9, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5105, file: !395, line: 225, column: 6)
!5116 = !DILocation(line: 225, column: 6, scope: !5105)
!5117 = !DILocation(line: 226, column: 14, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5115, file: !395, line: 225, column: 18)
!5119 = !DILocation(line: 226, column: 12, scope: !5118)
!5120 = !DILocation(line: 226, column: 3, scope: !5118)
!5121 = !DILocation(line: 229, column: 14, scope: !5105)
!5122 = !DILocation(line: 229, column: 9, scope: !5105)
!5123 = !DILocation(line: 229, column: 27, scope: !5105)
!5124 = !DILocation(line: 229, column: 39, scope: !5105)
!5125 = !DILocation(line: 230, column: 17, scope: !5105)
!5126 = !DILocation(line: 230, column: 9, scope: !5105)
!5127 = !DILocation(line: 230, column: 2, scope: !5105)
!5128 = !DILocation(line: 231, column: 1, scope: !5105)
!5129 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5130)
!5130 = !{!5131}
!5131 = !DILocalVariable(name: "c", arg: 1, scope: !5129, file: !408, line: 45, type: !125)
!5132 = !DILocation(line: 0, scope: !5129)
!5133 = !DILocation(line: 50, column: 2, scope: !5129)
!5134 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5135, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5137)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{null, !409}
!5137 = !{!5138}
!5138 = !DILocalVariable(name: "fn", arg: 1, scope: !5134, file: !408, line: 63, type: !409)
!5139 = !DILocation(line: 0, scope: !5134)
!5140 = !DILocation(line: 65, column: 12, scope: !5134)
!5141 = !DILocation(line: 66, column: 1, scope: !5134)
!5142 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5143, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !639)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{!124}
!5145 = !DILocation(line: 78, column: 9, scope: !5142)
!5146 = !DILocation(line: 78, column: 2, scope: !5142)
!5147 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5148, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5156)
!5148 = !DISubroutineType(types: !5149)
!5149 = !{null, !140, !5150}
!5150 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4281, line: 99, baseType: !5151)
!5151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4281, line: 40, baseType: !5152)
!5152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5153)
!5153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5154)
!5154 = !{!5155}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5153, file: !408, line: 79, baseType: !124, size: 32)
!5156 = !{!5157, !5158, !5159}
!5157 = !DILocalVariable(name: "fmt", arg: 1, scope: !5147, file: !408, line: 113, type: !140)
!5158 = !DILocalVariable(name: "ap", arg: 2, scope: !5147, file: !408, line: 113, type: !5150)
!5159 = !DILocalVariable(name: "ctx", scope: !5160, file: !408, line: 121, type: !5162)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !408, line: 120, column: 27)
!5161 = distinct !DILexicalBlock(scope: !5147, file: !408, line: 120, column: 6)
!5162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5163)
!5163 = !{!5164, !5165}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5162, file: !408, line: 85, baseType: !32, size: 32)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5162, file: !408, line: 86, baseType: !5166, offset: 32)
!5166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5167)
!5167 = !{!5168}
!5168 = !DISubrange(count: 0)
!5169 = !DILocation(line: 0, scope: !5147)
!5170 = !DILocation(line: 148, column: 3, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5161, file: !408, line: 138, column: 9)
!5172 = !DILocation(line: 155, column: 1, scope: !5147)
!5173 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5174, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5176)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!125, !125, !124}
!5176 = !{!5177, !5178}
!5177 = !DILocalVariable(name: "c", arg: 1, scope: !5173, file: !408, line: 107, type: !125)
!5178 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5173, file: !408, line: 107, type: !124)
!5179 = !DILocation(line: 0, scope: !5173)
!5180 = !DILocation(line: 110, column: 9, scope: !5173)
!5181 = !DILocation(line: 110, column: 2, scope: !5173)
!5182 = distinct !DISubprogram(name: "cbvprintf", scope: !4312, file: !4312, line: 739, type: !5183, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5185)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!125, !4641, !124, !140, !5150}
!5185 = !{!5186, !5187, !5188, !5189}
!5186 = !DILocalVariable(name: "out", arg: 1, scope: !5182, file: !4312, line: 739, type: !4641)
!5187 = !DILocalVariable(name: "ctx", arg: 2, scope: !5182, file: !4312, line: 739, type: !124)
!5188 = !DILocalVariable(name: "format", arg: 3, scope: !5182, file: !4312, line: 739, type: !140)
!5189 = !DILocalVariable(name: "ap", arg: 4, scope: !5182, file: !4312, line: 739, type: !5150)
!5190 = !DILocation(line: 0, scope: !5182)
!5191 = !DILocation(line: 741, column: 9, scope: !5182)
!5192 = !DILocation(line: 741, column: 2, scope: !5182)
!5193 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5194, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5196)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{null, !393, !272}
!5196 = !{!5197, !5198, !5199}
!5197 = !DILocalVariable(name: "c", arg: 1, scope: !5193, file: !408, line: 157, type: !393)
!5198 = !DILocalVariable(name: "n", arg: 2, scope: !5193, file: !408, line: 157, type: !272)
!5199 = !DILocalVariable(name: "i", scope: !5193, file: !408, line: 159, type: !272)
!5200 = !DILocation(line: 0, scope: !5193)
!5201 = !DILocation(line: 164, column: 16, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !408, line: 164, column: 2)
!5203 = distinct !DILexicalBlock(scope: !5193, file: !408, line: 164, column: 2)
!5204 = !DILocation(line: 164, column: 2, scope: !5203)
!5205 = !DILocation(line: 165, column: 3, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5202, file: !408, line: 164, column: 26)
!5207 = !DILocation(line: 165, column: 13, scope: !5206)
!5208 = !DILocation(line: 164, column: 22, scope: !5202)
!5209 = distinct !{!5209, !5204, !5210}
!5210 = !DILocation(line: 166, column: 2, scope: !5203)
!5211 = !DILocation(line: 171, column: 1, scope: !5193)
!5212 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5213, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5215)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{null, !140, null}
!5215 = !{!5216, !5217}
!5216 = !DILocalVariable(name: "fmt", arg: 1, scope: !5212, file: !408, line: 203, type: !140)
!5217 = !DILocalVariable(name: "ap", scope: !5212, file: !408, line: 205, type: !5150)
!5218 = !DILocation(line: 0, scope: !5212)
!5219 = !DILocation(line: 205, column: 2, scope: !5212)
!5220 = !DILocation(line: 205, column: 10, scope: !5212)
!5221 = !DILocation(line: 207, column: 2, scope: !5212)
!5222 = !DILocation(line: 209, column: 2, scope: !5212)
!5223 = !DILocation(line: 211, column: 2, scope: !5212)
!5224 = !DILocation(line: 212, column: 1, scope: !5212)
!5225 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5226, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5228)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{!125, !393, !272, !140, null}
!5228 = !{!5229, !5230, !5231, !5232, !5233}
!5229 = !DILocalVariable(name: "str", arg: 1, scope: !5225, file: !408, line: 239, type: !393)
!5230 = !DILocalVariable(name: "size", arg: 2, scope: !5225, file: !408, line: 239, type: !272)
!5231 = !DILocalVariable(name: "fmt", arg: 3, scope: !5225, file: !408, line: 239, type: !140)
!5232 = !DILocalVariable(name: "ap", scope: !5225, file: !408, line: 241, type: !5150)
!5233 = !DILocalVariable(name: "ret", scope: !5225, file: !408, line: 242, type: !125)
!5234 = !DILocation(line: 0, scope: !5225)
!5235 = !DILocation(line: 241, column: 2, scope: !5225)
!5236 = !DILocation(line: 241, column: 10, scope: !5225)
!5237 = !DILocation(line: 244, column: 2, scope: !5225)
!5238 = !DILocation(line: 245, column: 8, scope: !5225)
!5239 = !DILocation(line: 246, column: 2, scope: !5225)
!5240 = !DILocation(line: 249, column: 1, scope: !5225)
!5241 = !DILocation(line: 248, column: 2, scope: !5225)
!5242 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5243, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5245)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!125, !393, !272, !140, !5150}
!5245 = !{!5246, !5247, !5248, !5249, !5250}
!5246 = !DILocalVariable(name: "str", arg: 1, scope: !5242, file: !408, line: 251, type: !393)
!5247 = !DILocalVariable(name: "size", arg: 2, scope: !5242, file: !408, line: 251, type: !272)
!5248 = !DILocalVariable(name: "fmt", arg: 3, scope: !5242, file: !408, line: 251, type: !140)
!5249 = !DILocalVariable(name: "ap", arg: 4, scope: !5242, file: !408, line: 251, type: !5150)
!5250 = !DILocalVariable(name: "ctx", scope: !5242, file: !408, line: 253, type: !5251)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5252)
!5252 = !{!5253, !5254, !5255}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5251, file: !408, line: 218, baseType: !393, size: 32)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5251, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5251, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5256 = !DILocation(line: 0, scope: !5242)
!5257 = !DILocation(line: 253, column: 2, scope: !5242)
!5258 = !DILocation(line: 253, column: 21, scope: !5242)
!5259 = !DILocation(line: 253, column: 27, scope: !5242)
!5260 = !DILocation(line: 255, column: 2, scope: !5242)
!5261 = !DILocation(line: 257, column: 10, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5242, file: !408, line: 257, column: 6)
!5263 = !DILocation(line: 257, column: 22, scope: !5262)
!5264 = !DILocation(line: 257, column: 16, scope: !5262)
!5265 = !DILocation(line: 257, column: 6, scope: !5242)
!5266 = !DILocation(line: 258, column: 3, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5262, file: !408, line: 257, column: 27)
!5268 = !DILocation(line: 258, column: 18, scope: !5267)
!5269 = !DILocation(line: 259, column: 2, scope: !5267)
!5270 = !DILocation(line: 262, column: 1, scope: !5242)
!5271 = !DILocation(line: 261, column: 2, scope: !5242)
!5272 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5273, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5276)
!5273 = !DISubroutineType(types: !5274)
!5274 = !{!125, !125, !5275}
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5251, size: 32)
!5276 = !{!5277, !5278}
!5277 = !DILocalVariable(name: "c", arg: 1, scope: !5272, file: !408, line: 223, type: !125)
!5278 = !DILocalVariable(name: "ctx", arg: 2, scope: !5272, file: !408, line: 223, type: !5275)
!5279 = !DILocation(line: 0, scope: !5272)
!5280 = !DILocation(line: 225, column: 11, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5272, file: !408, line: 225, column: 6)
!5282 = !DILocation(line: 225, column: 15, scope: !5281)
!5283 = !DILocation(line: 0, scope: !5281)
!5284 = !DILocation(line: 225, column: 23, scope: !5281)
!5285 = !DILocation(line: 225, column: 45, scope: !5281)
!5286 = !DILocation(line: 225, column: 37, scope: !5281)
!5287 = !DILocation(line: 225, column: 6, scope: !5272)
!5288 = !DILocation(line: 226, column: 8, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5281, file: !408, line: 225, column: 50)
!5290 = !DILocation(line: 226, column: 13, scope: !5289)
!5291 = !DILocation(line: 227, column: 3, scope: !5289)
!5292 = !DILocation(line: 230, column: 29, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5272, file: !408, line: 230, column: 6)
!5294 = !DILocation(line: 230, column: 17, scope: !5293)
!5295 = !DILocation(line: 230, column: 6, scope: !5272)
!5296 = !DILocation(line: 231, column: 22, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5293, file: !408, line: 230, column: 34)
!5298 = !DILocation(line: 231, column: 3, scope: !5297)
!5299 = !DILocation(line: 231, column: 26, scope: !5297)
!5300 = !DILocation(line: 232, column: 2, scope: !5297)
!5301 = !DILocation(line: 233, column: 28, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5293, file: !408, line: 232, column: 9)
!5303 = !DILocation(line: 233, column: 22, scope: !5302)
!5304 = !DILocation(line: 233, column: 3, scope: !5302)
!5305 = !DILocation(line: 233, column: 26, scope: !5302)
!5306 = !DILocation(line: 237, column: 1, scope: !5272)
!5307 = distinct !DISubprogram(name: "z_thread_entry", scope: !5308, file: !5308, line: 30, type: !5309, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !5316)
!5308 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5309 = !DISubroutineType(types: !5310)
!5310 = !{null, !5311, !124, !124, !124}
!5311 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5312, line: 46, baseType: !5313)
!5312 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 32)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null, !124, !124, !124}
!5316 = !{!5317, !5318, !5319, !5320}
!5317 = !DILocalVariable(name: "entry", arg: 1, scope: !5307, file: !5308, line: 30, type: !5311)
!5318 = !DILocalVariable(name: "p1", arg: 2, scope: !5307, file: !5308, line: 31, type: !124)
!5319 = !DILocalVariable(name: "p2", arg: 3, scope: !5307, file: !5308, line: 31, type: !124)
!5320 = !DILocalVariable(name: "p3", arg: 4, scope: !5307, file: !5308, line: 31, type: !124)
!5321 = !DILocation(line: 0, scope: !5307)
!5322 = !DILocation(line: 36, column: 2, scope: !5307)
!5323 = !DILocation(line: 38, column: 17, scope: !5307)
!5324 = !DILocation(line: 38, column: 2, scope: !5307)
!5325 = !DILocation(line: 45, column: 2, scope: !5307)
!5326 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !5327, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !639)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!5329}
!5329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !5330)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 32)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !5332)
!5332 = !{!5333, !5391, !5403, !5404, !5405, !5406, !5412, !5425}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5331, file: !531, line: 247, baseType: !5334, size: 384)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !5335)
!5335 = !{!5336, !5360, !5367, !5368, !5369, !5378, !5379, !5380}
!5336 = !DIDerivedType(tag: DW_TAG_member, scope: !5334, file: !531, line: 60, baseType: !5337, size: 64)
!5337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5334, file: !531, line: 60, size: 64, elements: !5338)
!5338 = !{!5339, !5354}
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5337, file: !531, line: 61, baseType: !5340, size: 64)
!5340 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !5341)
!5341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !5342)
!5342 = !{!5343, !5349}
!5343 = !DIDerivedType(tag: DW_TAG_member, scope: !5341, file: !541, line: 38, baseType: !5344, size: 32)
!5344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5341, file: !541, line: 38, size: 32, elements: !5345)
!5345 = !{!5346, !5348}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5344, file: !541, line: 39, baseType: !5347, size: 32)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5344, file: !541, line: 40, baseType: !5347, size: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, scope: !5341, file: !541, line: 42, baseType: !5350, size: 32, offset: 32)
!5350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5341, file: !541, line: 42, size: 32, elements: !5351)
!5351 = !{!5352, !5353}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5350, file: !541, line: 43, baseType: !5347, size: 32)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5350, file: !541, line: 44, baseType: !5347, size: 32)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5337, file: !531, line: 62, baseType: !5355, size: 64)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !5356)
!5356 = !{!5357}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5355, file: !557, line: 50, baseType: !5358, size: 64)
!5358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5359, size: 64, elements: !562)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5334, file: !531, line: 68, baseType: !5361, size: 32, offset: 64)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 32)
!5362 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !5363)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !5364)
!5364 = !{!5365}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5363, file: !567, line: 232, baseType: !5366, size: 64)
!5366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !5341)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5334, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5334, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!5369 = !DIDerivedType(tag: DW_TAG_member, scope: !5334, file: !531, line: 90, baseType: !5370, size: 16, offset: 112)
!5370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5334, file: !531, line: 90, size: 16, elements: !5371)
!5371 = !{!5372, !5377}
!5372 = !DIDerivedType(tag: DW_TAG_member, scope: !5370, file: !531, line: 91, baseType: !5373, size: 16)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5370, file: !531, line: 91, size: 16, elements: !5374)
!5374 = !{!5375, !5376}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5373, file: !531, line: 96, baseType: !581, size: 8)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5373, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5370, file: !531, line: 100, baseType: !227, size: 16)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5334, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5334, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5334, file: !531, line: 131, baseType: !5381, size: 192, offset: 192)
!5381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !5382)
!5382 = !{!5383, !5384, !5390}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5381, file: !567, line: 245, baseType: !5340, size: 64)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5381, file: !567, line: 246, baseType: !5385, size: 32, offset: 64)
!5385 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !5386)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 32)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{null, !5389}
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5381, size: 32)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5381, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5331, file: !531, line: 250, baseType: !5392, size: 288, offset: 384)
!5392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !5393)
!5393 = !{!5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5392, file: !601, line: 26, baseType: !208, size: 32)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5392, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5392, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5392, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5392, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5392, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5392, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5392, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5392, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5331, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5331, file: !531, line: 256, baseType: !5362, size: 64, offset: 704)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5331, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5331, file: !531, line: 300, baseType: !5407, size: 96, offset: 800)
!5407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !5408)
!5408 = !{!5409, !5410, !5411}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5407, file: !531, line: 153, baseType: !22, size: 32)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5407, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5407, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5331, file: !531, line: 325, baseType: !5413, size: 32, offset: 896)
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 32)
!5414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !5415)
!5415 = !{!5416, !5422, !5423}
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5414, file: !624, line: 5074, baseType: !5417, size: 96)
!5417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !5418)
!5418 = !{!5419, !5420, !5421}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5417, file: !628, line: 57, baseType: !631, size: 32)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5417, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5417, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5414, file: !624, line: 5075, baseType: !5362, size: 64, offset: 96)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5414, file: !624, line: 5076, baseType: !5424, offset: 160)
!5424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5331, file: !531, line: 343, baseType: !5426, size: 64, offset: 928)
!5426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !5427)
!5427 = !{!5428, !5429}
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5426, file: !601, line: 63, baseType: !208, size: 32)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5426, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!5430 = !DILocation(line: 535, column: 9, scope: !5326)
!5431 = !DILocation(line: 535, column: 2, scope: !5326)
!5432 = distinct !DISubprogram(name: "k_thread_abort", scope: !5433, file: !5433, line: 188, type: !5434, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !5436)
!5433 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!5434 = !DISubroutineType(types: !5435)
!5435 = !{null, !5329}
!5436 = !{!5437}
!5437 = !DILocalVariable(name: "thread", arg: 1, scope: !5432, file: !5433, line: 188, type: !5329)
!5438 = !DILocation(line: 0, scope: !5432)
!5439 = !DILocation(line: 197, column: 2, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5432, file: !5433, line: 197, column: 2)
!5441 = !{i64 2155059460}
!5442 = !DILocation(line: 198, column: 2, scope: !5432)
!5443 = !DILocation(line: 199, column: 1, scope: !5432)
!5444 = distinct !DISubprogram(name: "z_current_get", scope: !5433, file: !5433, line: 173, type: !5327, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !639)
!5445 = !DILocation(line: 180, column: 2, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5444, file: !5433, line: 180, column: 2)
!5447 = !{i64 2155059392}
!5448 = !DILocation(line: 181, column: 9, scope: !5444)
!5449 = !DILocation(line: 181, column: 2, scope: !5444)
!5450 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2773, file: !2773, line: 1338, type: !5451, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !5459)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{!125, !4641, !124, !140, !5453, !208}
!5453 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4281, line: 99, baseType: !5454)
!5454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4281, line: 40, baseType: !5455)
!5455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2773, baseType: !5456)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5457)
!5457 = !{!5458}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5456, file: !2773, baseType: !124, size: 32)
!5459 = !{!5460, !5461, !5462, !5463, !5464, !5465, !5469, !5470, !5471, !5473, !5478, !5521, !5524, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5536, !5537, !5538, !5542, !5545, !5547, !5550, !5551, !5552, !5557, !5563, !5566, !5570, !5576, !5580, !5583, !5585, !5588}
!5460 = !DILocalVariable(name: "out", arg: 1, scope: !5450, file: !2773, line: 1338, type: !4641)
!5461 = !DILocalVariable(name: "ctx", arg: 2, scope: !5450, file: !2773, line: 1338, type: !124)
!5462 = !DILocalVariable(name: "fp", arg: 3, scope: !5450, file: !2773, line: 1338, type: !140)
!5463 = !DILocalVariable(name: "ap", arg: 4, scope: !5450, file: !2773, line: 1339, type: !5453)
!5464 = !DILocalVariable(name: "flags", arg: 5, scope: !5450, file: !2773, line: 1339, type: !208)
!5465 = !DILocalVariable(name: "buf", scope: !5450, file: !2773, line: 1341, type: !5466)
!5466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5467)
!5467 = !{!5468}
!5468 = !DISubrange(count: 22)
!5469 = !DILocalVariable(name: "count", scope: !5450, file: !2773, line: 1342, type: !272)
!5470 = !DILocalVariable(name: "sint", scope: !5450, file: !2773, line: 1343, type: !2792)
!5471 = !DILocalVariable(name: "tagged_ap", scope: !5450, file: !2773, line: 1345, type: !5472)
!5472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5473 = !DILocalVariable(name: "rc", scope: !5474, file: !2773, line: 1377, type: !125)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !2773, line: 1377, column: 4)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !2773, line: 1376, column: 19)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1376, column: 7)
!5477 = distinct !DILexicalBlock(scope: !5450, file: !2773, line: 1375, column: 19)
!5478 = !DILocalVariable(name: "state", scope: !5477, file: !2773, line: 1395, type: !5479)
!5479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5450, file: !2773, line: 1392, size: 192, elements: !5480)
!5480 = !{!5481, !5489}
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5479, file: !2773, line: 1393, baseType: !5482, size: 64)
!5482 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2773, line: 166, size: 64, elements: !5483)
!5483 = !{!5484, !5485, !5486, !5487, !5488}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5482, file: !2773, line: 168, baseType: !2792, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5482, file: !2773, line: 171, baseType: !2795, size: 64)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5482, file: !2773, line: 174, baseType: !385, size: 64)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5482, file: !2773, line: 177, baseType: !383, size: 64)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5482, file: !2773, line: 180, baseType: !124, size: 32)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5479, file: !2773, line: 1394, baseType: !5490, size: 96, offset: 64)
!5490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2773, line: 189, size: 96, elements: !5491)
!5491 = !{!5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5516}
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5490, file: !2773, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5490, file: !2773, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5490, file: !2773, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5490, file: !2773, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5490, file: !2773, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5490, file: !2773, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5490, file: !2773, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5490, file: !2773, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5490, file: !2773, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5490, file: !2773, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5490, file: !2773, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5490, file: !2773, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5490, file: !2773, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5490, file: !2773, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5490, file: !2773, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5490, file: !2773, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5490, file: !2773, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5490, file: !2773, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5490, file: !2773, line: 260, baseType: !151, size: 8, offset: 24)
!5511 = !DIDerivedType(tag: DW_TAG_member, scope: !5490, file: !2773, line: 262, baseType: !5512, size: 32, offset: 32)
!5512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5490, file: !2773, line: 262, size: 32, elements: !5513)
!5513 = !{!5514, !5515}
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5512, file: !2773, line: 267, baseType: !125, size: 32)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5512, file: !2773, line: 289, baseType: !125, size: 32)
!5516 = !DIDerivedType(tag: DW_TAG_member, scope: !5490, file: !2773, line: 292, baseType: !5517, size: 32, offset: 64)
!5517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5490, file: !2773, line: 292, size: 32, elements: !5518)
!5518 = !{!5519, !5520}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5517, file: !2773, line: 297, baseType: !125, size: 32)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5517, file: !2773, line: 306, baseType: !125, size: 32)
!5521 = !DILocalVariable(name: "conv", scope: !5477, file: !2773, line: 1400, type: !5522)
!5522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5523)
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 32)
!5524 = !DILocalVariable(name: "value", scope: !5477, file: !2773, line: 1401, type: !5525)
!5525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5526)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 32)
!5527 = !DILocalVariable(name: "sp", scope: !5477, file: !2773, line: 1402, type: !140)
!5528 = !DILocalVariable(name: "width", scope: !5477, file: !2773, line: 1403, type: !125)
!5529 = !DILocalVariable(name: "precision", scope: !5477, file: !2773, line: 1404, type: !125)
!5530 = !DILocalVariable(name: "bps", scope: !5477, file: !2773, line: 1405, type: !140)
!5531 = !DILocalVariable(name: "bpe", scope: !5477, file: !2773, line: 1406, type: !140)
!5532 = !DILocalVariable(name: "sign", scope: !5477, file: !2773, line: 1407, type: !142)
!5533 = !DILocalVariable(name: "arg", scope: !5534, file: !2773, line: 1432, type: !125)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !2773, line: 1431, column: 24)
!5535 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1431, column: 7)
!5536 = !DILocalVariable(name: "specifier_cat", scope: !5477, file: !2773, line: 1468, type: !2772)
!5537 = !DILocalVariable(name: "length_mod", scope: !5477, file: !2773, line: 1470, type: !2780)
!5538 = !DILocalVariable(name: "rc", scope: !5539, file: !2773, line: 1575, type: !125)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !2773, line: 1575, column: 4)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !2773, line: 1574, column: 43)
!5541 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1574, column: 7)
!5542 = !DILocalVariable(name: "rc", scope: !5543, file: !2773, line: 1584, type: !125)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1584, column: 4)
!5544 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1582, column: 28)
!5545 = !DILocalVariable(name: "len", scope: !5546, file: !2773, line: 1589, type: !272)
!5546 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1586, column: 13)
!5547 = !DILocalVariable(name: "len", scope: !5548, file: !2773, line: 1641, type: !272)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !2773, line: 1640, column: 24)
!5549 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1640, column: 8)
!5550 = !DILocalVariable(name: "nj_len", scope: !5477, file: !2773, line: 1722, type: !272)
!5551 = !DILocalVariable(name: "pad_len", scope: !5477, file: !2773, line: 1723, type: !125)
!5552 = !DILocalVariable(name: "pad", scope: !5553, file: !2773, line: 1751, type: !142)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !2773, line: 1750, column: 26)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !2773, line: 1750, column: 8)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !2773, line: 1747, column: 18)
!5556 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1747, column: 7)
!5557 = !DILocalVariable(name: "rc", scope: !5558, file: !2773, line: 1758, type: !125)
!5558 = distinct !DILexicalBlock(scope: !5559, file: !2773, line: 1758, column: 7)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !2773, line: 1757, column: 21)
!5560 = distinct !DILexicalBlock(scope: !5561, file: !2773, line: 1757, column: 10)
!5561 = distinct !DILexicalBlock(scope: !5562, file: !2773, line: 1756, column: 26)
!5562 = distinct !DILexicalBlock(scope: !5553, file: !2773, line: 1756, column: 9)
!5563 = !DILocalVariable(name: "rc", scope: !5564, file: !2773, line: 1765, type: !125)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !2773, line: 1765, column: 6)
!5565 = distinct !DILexicalBlock(scope: !5553, file: !2773, line: 1764, column: 25)
!5566 = !DILocalVariable(name: "rc", scope: !5567, file: !2773, line: 1774, type: !125)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !2773, line: 1774, column: 4)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !2773, line: 1773, column: 18)
!5569 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1773, column: 7)
!5570 = !DILocalVariable(name: "rc", scope: !5571, file: !2773, line: 1819, type: !125)
!5571 = distinct !DILexicalBlock(scope: !5572, file: !2773, line: 1819, column: 5)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !2773, line: 1818, column: 44)
!5573 = distinct !DILexicalBlock(scope: !5574, file: !2773, line: 1818, column: 8)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !2773, line: 1817, column: 10)
!5575 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1777, column: 7)
!5576 = !DILocalVariable(name: "rc", scope: !5577, file: !2773, line: 1823, type: !125)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !2773, line: 1823, column: 5)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2773, line: 1822, column: 26)
!5579 = distinct !DILexicalBlock(scope: !5574, file: !2773, line: 1822, column: 8)
!5580 = !DILocalVariable(name: "rc", scope: !5581, file: !2773, line: 1828, type: !125)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !2773, line: 1828, column: 5)
!5582 = distinct !DILexicalBlock(scope: !5574, file: !2773, line: 1827, column: 26)
!5583 = !DILocalVariable(name: "rc", scope: !5584, file: !2773, line: 1831, type: !125)
!5584 = distinct !DILexicalBlock(scope: !5574, file: !2773, line: 1831, column: 4)
!5585 = !DILocalVariable(name: "rc", scope: !5586, file: !2773, line: 1836, type: !125)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !2773, line: 1836, column: 4)
!5587 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1835, column: 21)
!5588 = !DILabel(scope: !5544, name: "prec_int_pad0", file: !2773, line: 1634)
!5589 = !DILocation(line: 0, scope: !5450)
!5590 = !DILocation(line: 1341, column: 2, scope: !5450)
!5591 = !DILocation(line: 1341, column: 7, scope: !5450)
!5592 = !DILocation(line: 1375, column: 2, scope: !5450)
!5593 = !DILocation(line: 1342, column: 9, scope: !5450)
!5594 = !DILocation(line: 1375, column: 9, scope: !5450)
!5595 = !DILocation(line: 1377, column: 4, scope: !5474)
!5596 = !DILocation(line: 0, scope: !5474)
!5597 = !DILocation(line: 1377, column: 4, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5474, file: !2773, line: 1377, column: 4)
!5599 = distinct !{!5599, !5592, !5600}
!5600 = !DILocation(line: 1839, column: 2, scope: !5450)
!5601 = !DILocation(line: 1392, column: 3, scope: !5477)
!5602 = !DILocation(line: 1395, column: 5, scope: !5477)
!5603 = !DILocation(line: 0, scope: !5477)
!5604 = !DILocation(line: 1409, column: 8, scope: !5477)
!5605 = !DILocation(line: 1414, column: 13, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1414, column: 7)
!5607 = !DILocation(line: 1414, column: 7, scope: !5477)
!5608 = !DILocation(line: 1415, column: 12, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5606, file: !2773, line: 1414, column: 25)
!5610 = !DILocation(line: 1417, column: 14, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5609, file: !2773, line: 1417, column: 8)
!5612 = !DILocation(line: 1417, column: 8, scope: !5609)
!5613 = !DILocation(line: 1418, column: 21, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5611, file: !2773, line: 1417, column: 19)
!5615 = !DILocation(line: 1419, column: 13, scope: !5614)
!5616 = !DILocation(line: 1420, column: 4, scope: !5614)
!5617 = !DILocation(line: 1421, column: 20, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5606, file: !2773, line: 1421, column: 14)
!5619 = !DILocation(line: 1421, column: 14, scope: !5606)
!5620 = !DILocation(line: 1431, column: 13, scope: !5535)
!5621 = !DILocation(line: 1431, column: 7, scope: !5477)
!5622 = !DILocation(line: 1432, column: 14, scope: !5534)
!5623 = !DILocation(line: 0, scope: !5534)
!5624 = !DILocation(line: 1434, column: 12, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5534, file: !2773, line: 1434, column: 8)
!5626 = !DILocation(line: 1434, column: 8, scope: !5534)
!5627 = !DILocation(line: 1435, column: 24, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5625, file: !2773, line: 1434, column: 17)
!5629 = !DILocation(line: 1436, column: 4, scope: !5628)
!5630 = !DILocation(line: 1439, column: 20, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5535, file: !2773, line: 1439, column: 14)
!5632 = !DILocation(line: 1439, column: 14, scope: !5535)
!5633 = !DILocation(line: 1469, column: 37, scope: !5477)
!5634 = !DILocation(line: 1448, column: 20, scope: !5477)
!5635 = !DILocation(line: 1449, column: 22, scope: !5477)
!5636 = !DILocation(line: 1471, column: 34, scope: !5477)
!5637 = !DILocation(line: 1478, column: 7, scope: !5477)
!5638 = !DILocation(line: 1479, column: 4, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !2773, line: 1478, column: 40)
!5640 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1478, column: 7)
!5641 = !DILocation(line: 1484, column: 19, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5639, file: !2773, line: 1479, column: 24)
!5643 = !DILocation(line: 1484, column: 17, scope: !5642)
!5644 = !DILocation(line: 1485, column: 5, scope: !5642)
!5645 = !DILocation(line: 1492, column: 20, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !2773, line: 1491, column: 12)
!5647 = distinct !DILexicalBlock(scope: !5642, file: !2773, line: 1487, column: 9)
!5648 = !DILocation(line: 1492, column: 18, scope: !5646)
!5649 = !DILocation(line: 1494, column: 5, scope: !5642)
!5650 = !DILocation(line: 1497, column: 23, scope: !5642)
!5651 = !DILocation(line: 1496, column: 17, scope: !5642)
!5652 = !DILocation(line: 1498, column: 5, scope: !5642)
!5653 = !DILocation(line: 1501, column: 23, scope: !5642)
!5654 = !DILocation(line: 1500, column: 17, scope: !5642)
!5655 = !DILocation(line: 1502, column: 5, scope: !5642)
!5656 = !DILocation(line: 1513, column: 23, scope: !5642)
!5657 = !DILocation(line: 1513, column: 6, scope: !5642)
!5658 = !DILocation(line: 1512, column: 17, scope: !5642)
!5659 = !DILocation(line: 1514, column: 5, scope: !5642)
!5660 = !DILocation(line: 0, scope: !5642)
!5661 = !DILocation(line: 1516, column: 8, scope: !5639)
!5662 = !DILocation(line: 1517, column: 19, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !2773, line: 1516, column: 33)
!5664 = distinct !DILexicalBlock(scope: !5639, file: !2773, line: 1516, column: 8)
!5665 = !DILocation(line: 1517, column: 17, scope: !5663)
!5666 = !DILocation(line: 1518, column: 4, scope: !5663)
!5667 = !DILocation(line: 1519, column: 19, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !2773, line: 1518, column: 39)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !2773, line: 1518, column: 15)
!5670 = !DILocation(line: 1519, column: 17, scope: !5668)
!5671 = !DILocation(line: 1520, column: 4, scope: !5668)
!5672 = !DILocation(line: 1522, column: 4, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !2773, line: 1521, column: 47)
!5674 = distinct !DILexicalBlock(scope: !5640, file: !2773, line: 1521, column: 14)
!5675 = !DILocation(line: 1527, column: 19, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5673, file: !2773, line: 1522, column: 24)
!5677 = !DILocation(line: 1527, column: 17, scope: !5676)
!5678 = !DILocation(line: 1528, column: 5, scope: !5676)
!5679 = !DILocation(line: 0, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5676, file: !2773, line: 1530, column: 9)
!5681 = !DILocation(line: 1540, column: 23, scope: !5676)
!5682 = !DILocation(line: 1539, column: 17, scope: !5676)
!5683 = !DILocation(line: 1542, column: 5, scope: !5676)
!5684 = !DILocation(line: 1545, column: 23, scope: !5676)
!5685 = !DILocation(line: 1544, column: 17, scope: !5676)
!5686 = !DILocation(line: 1547, column: 5, scope: !5676)
!5687 = !DILocation(line: 1551, column: 23, scope: !5676)
!5688 = !DILocation(line: 1551, column: 6, scope: !5676)
!5689 = !DILocation(line: 1550, column: 17, scope: !5676)
!5690 = !DILocation(line: 1552, column: 5, scope: !5676)
!5691 = !DILocation(line: 0, scope: !5676)
!5692 = !DILocation(line: 1554, column: 8, scope: !5673)
!5693 = !DILocation(line: 1555, column: 19, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5695, file: !2773, line: 1554, column: 33)
!5695 = distinct !DILexicalBlock(scope: !5673, file: !2773, line: 1554, column: 8)
!5696 = !DILocation(line: 1555, column: 17, scope: !5694)
!5697 = !DILocation(line: 1556, column: 4, scope: !5694)
!5698 = !DILocation(line: 1557, column: 19, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5700, file: !2773, line: 1556, column: 39)
!5700 = distinct !DILexicalBlock(scope: !5695, file: !2773, line: 1556, column: 15)
!5701 = !DILocation(line: 1557, column: 17, scope: !5699)
!5702 = !DILocation(line: 1558, column: 4, scope: !5699)
!5703 = !DILocation(line: 0, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !2773, line: 1560, column: 8)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !2773, line: 1559, column: 45)
!5706 = distinct !DILexicalBlock(scope: !5674, file: !2773, line: 1559, column: 14)
!5707 = !DILocation(line: 1566, column: 17, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !2773, line: 1565, column: 46)
!5709 = distinct !DILexicalBlock(scope: !5706, file: !2773, line: 1565, column: 14)
!5710 = !DILocation(line: 1566, column: 15, scope: !5708)
!5711 = !DILocation(line: 1567, column: 3, scope: !5708)
!5712 = !DILocation(line: 1574, column: 21, scope: !5541)
!5713 = !DILocation(line: 1575, column: 4, scope: !5539)
!5714 = !DILocation(line: 0, scope: !5539)
!5715 = !DILocation(line: 1575, column: 4, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5539, file: !2773, line: 1575, column: 4)
!5717 = !DILocation(line: 1582, column: 17, scope: !5477)
!5718 = !DILocation(line: 1582, column: 3, scope: !5477)
!5719 = !DILocation(line: 1584, column: 4, scope: !5543)
!5720 = !DILocation(line: 0, scope: !5543)
!5721 = !DILocation(line: 1584, column: 4, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5543, file: !2773, line: 1584, column: 4)
!5723 = !DILocation(line: 1587, column: 31, scope: !5546)
!5724 = !DILocation(line: 1591, column: 18, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5546, file: !2773, line: 1591, column: 8)
!5726 = !DILocation(line: 1591, column: 8, scope: !5546)
!5727 = !DILocation(line: 1592, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5725, file: !2773, line: 1591, column: 24)
!5729 = !DILocation(line: 0, scope: !5546)
!5730 = !DILocation(line: 1593, column: 4, scope: !5728)
!5731 = !DILocation(line: 1594, column: 11, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !2773, line: 1593, column: 11)
!5733 = !DILocation(line: 1604, column: 51, scope: !5544)
!5734 = !DILocation(line: 1604, column: 13, scope: !5544)
!5735 = !DILocation(line: 1604, column: 11, scope: !5544)
!5736 = !DILocation(line: 1606, column: 4, scope: !5544)
!5737 = !DILocation(line: 1609, column: 14, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1609, column: 8)
!5739 = !DILocation(line: 1609, column: 8, scope: !5544)
!5740 = !DILocation(line: 1619, column: 18, scope: !5544)
!5741 = !DILocation(line: 1620, column: 13, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1620, column: 8)
!5743 = !DILocation(line: 1620, column: 8, scope: !5544)
!5744 = !DILocation(line: 1622, column: 36, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5742, file: !2773, line: 1620, column: 18)
!5746 = !DILocation(line: 1622, column: 17, scope: !5745)
!5747 = !DILocation(line: 1623, column: 4, scope: !5745)
!5748 = !DILocation(line: 1632, column: 29, scope: !5544)
!5749 = !DILocation(line: 1632, column: 10, scope: !5544)
!5750 = !DILocation(line: 1632, column: 4, scope: !5544)
!5751 = !DILocation(line: 1407, column: 8, scope: !5477)
!5752 = !DILocation(line: 0, scope: !5544)
!5753 = !DILocation(line: 1634, column: 3, scope: !5544)
!5754 = !DILocation(line: 1640, column: 18, scope: !5549)
!5755 = !DILocation(line: 1640, column: 8, scope: !5544)
!5756 = !DILocation(line: 1729, column: 13, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1729, column: 7)
!5758 = !DILocation(line: 1641, column: 22, scope: !5548)
!5759 = !DILocation(line: 0, scope: !5548)
!5760 = !DILocation(line: 1646, column: 21, scope: !5548)
!5761 = !DILocation(line: 1649, column: 13, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5548, file: !2773, line: 1649, column: 9)
!5763 = !DILocation(line: 1649, column: 9, scope: !5548)
!5764 = !DILocation(line: 1650, column: 35, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5762, file: !2773, line: 1649, column: 34)
!5766 = !DILocation(line: 1650, column: 23, scope: !5765)
!5767 = !DILocation(line: 1651, column: 5, scope: !5765)
!5768 = !DILocation(line: 1660, column: 15, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1660, column: 8)
!5770 = !DILocation(line: 1660, column: 19, scope: !5769)
!5771 = !DILocation(line: 1660, column: 8, scope: !5544)
!5772 = !DILocation(line: 1661, column: 23, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5769, file: !2773, line: 1660, column: 28)
!5774 = !DILocation(line: 1661, column: 11, scope: !5773)
!5775 = !DILocation(line: 1665, column: 22, scope: !5773)
!5776 = !DILocation(line: 1666, column: 21, scope: !5773)
!5777 = !DILocation(line: 1668, column: 5, scope: !5773)
!5778 = !DILocation(line: 1677, column: 30, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !2773, line: 1676, column: 49)
!5780 = distinct !DILexicalBlock(scope: !5544, file: !2773, line: 1676, column: 8)
!5781 = !DILocation(line: 1677, column: 5, scope: !5779)
!5782 = !DILocation(line: 1680, column: 4, scope: !5544)
!5783 = !DILocation(line: 0, scope: !5725)
!5784 = !DILocation(line: 1597, column: 14, scope: !5546)
!5785 = !DILocation(line: 1699, column: 11, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1699, column: 7)
!5787 = !DILocation(line: 1699, column: 7, scope: !5477)
!5788 = !DILocation(line: 1725, column: 7, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1725, column: 7)
!5790 = !DILocation(line: 1725, column: 12, scope: !5789)
!5791 = !DILocation(line: 1747, column: 13, scope: !5556)
!5792 = !DILocation(line: 1747, column: 7, scope: !5477)
!5793 = !DILocation(line: 1722, column: 24, scope: !5477)
!5794 = !DILocation(line: 1725, column: 7, scope: !5477)
!5795 = !DILocation(line: 1729, column: 7, scope: !5477)
!5796 = !DILocation(line: 1736, column: 13, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5477, file: !2773, line: 1736, column: 7)
!5798 = !DILocation(line: 1735, column: 19, scope: !5477)
!5799 = !DILocation(line: 1736, column: 7, scope: !5477)
!5800 = !DILocation(line: 1748, column: 10, scope: !5555)
!5801 = !DILocation(line: 1750, column: 15, scope: !5554)
!5802 = !DILocation(line: 1750, column: 8, scope: !5555)
!5803 = !DILocation(line: 0, scope: !5553)
!5804 = !DILocation(line: 1756, column: 15, scope: !5562)
!5805 = !DILocation(line: 1756, column: 9, scope: !5553)
!5806 = !DILocation(line: 1758, column: 7, scope: !5558)
!5807 = !DILocation(line: 0, scope: !5558)
!5808 = !DILocation(line: 1758, column: 7, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5558, file: !2773, line: 1758, column: 7)
!5810 = !DILocation(line: 1764, column: 5, scope: !5553)
!5811 = !DILocation(line: 0, scope: !5555)
!5812 = !DILocation(line: 1764, column: 20, scope: !5553)
!5813 = !DILocation(line: 1764, column: 17, scope: !5553)
!5814 = !DILocation(line: 1765, column: 6, scope: !5564)
!5815 = !DILocation(line: 0, scope: !5564)
!5816 = !DILocation(line: 1765, column: 6, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5564, file: !2773, line: 1765, column: 6)
!5818 = distinct !{!5818, !5810, !5819}
!5819 = !DILocation(line: 1766, column: 5, scope: !5553)
!5820 = !DILocation(line: 1773, column: 12, scope: !5569)
!5821 = !DILocation(line: 1773, column: 7, scope: !5477)
!5822 = !DILocation(line: 1773, column: 7, scope: !5569)
!5823 = !DILocation(line: 1774, column: 4, scope: !5567)
!5824 = !DILocation(line: 0, scope: !5567)
!5825 = !DILocation(line: 1774, column: 4, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5567, file: !2773, line: 1774, column: 4)
!5827 = !DILocation(line: 1818, column: 8, scope: !5573)
!5828 = !DILocation(line: 1818, column: 27, scope: !5573)
!5829 = !DILocation(line: 1818, column: 25, scope: !5573)
!5830 = !DILocation(line: 1818, column: 8, scope: !5574)
!5831 = !DILocation(line: 1819, column: 5, scope: !5571)
!5832 = !DILocation(line: 0, scope: !5571)
!5833 = !DILocation(line: 1819, column: 5, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5571, file: !2773, line: 1819, column: 5)
!5835 = !DILocation(line: 1822, column: 14, scope: !5579)
!5836 = !DILocation(line: 1822, column: 8, scope: !5574)
!5837 = !DILocation(line: 1823, column: 5, scope: !5577)
!5838 = !DILocation(line: 0, scope: !5577)
!5839 = !DILocation(line: 1823, column: 5, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5577, file: !2773, line: 1823, column: 5)
!5841 = !DILocation(line: 1826, column: 20, scope: !5574)
!5842 = !DILocation(line: 1827, column: 4, scope: !5574)
!5843 = !DILocation(line: 0, scope: !5574)
!5844 = !DILocation(line: 1827, column: 21, scope: !5574)
!5845 = !DILocation(line: 1827, column: 18, scope: !5574)
!5846 = !DILocation(line: 1828, column: 5, scope: !5581)
!5847 = !DILocation(line: 0, scope: !5581)
!5848 = !DILocation(line: 1828, column: 5, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5581, file: !2773, line: 1828, column: 5)
!5850 = distinct !{!5850, !5842, !5851}
!5851 = !DILocation(line: 1829, column: 4, scope: !5574)
!5852 = !DILocation(line: 1831, column: 4, scope: !5584)
!5853 = !DILocation(line: 0, scope: !5584)
!5854 = !DILocation(line: 1831, column: 4, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5584, file: !2773, line: 1831, column: 4)
!5856 = !DILocation(line: 1835, column: 16, scope: !5477)
!5857 = !DILocation(line: 1835, column: 3, scope: !5477)
!5858 = !DILocation(line: 1836, column: 4, scope: !5586)
!5859 = !DILocation(line: 0, scope: !5586)
!5860 = !DILocation(line: 1836, column: 4, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5586, file: !2773, line: 1836, column: 4)
!5862 = !DILocation(line: 1837, column: 4, scope: !5587)
!5863 = distinct !{!5863, !5857, !5864}
!5864 = !DILocation(line: 1838, column: 3, scope: !5477)
!5865 = !DILocation(line: 1844, column: 1, scope: !5450)
!5866 = distinct !DISubprogram(name: "extract_conversion", scope: !2773, file: !2773, line: 642, type: !5867, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !5869)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!140, !5523, !140}
!5869 = !{!5870, !5871}
!5870 = !DILocalVariable(name: "conv", arg: 1, scope: !5866, file: !2773, line: 642, type: !5523)
!5871 = !DILocalVariable(name: "sp", arg: 2, scope: !5866, file: !2773, line: 643, type: !140)
!5872 = !DILocation(line: 0, scope: !5866)
!5873 = !DILocation(line: 645, column: 10, scope: !5866)
!5874 = !DILocation(line: 653, column: 2, scope: !5866)
!5875 = !DILocation(line: 654, column: 6, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5866, file: !2773, line: 654, column: 6)
!5877 = !DILocation(line: 654, column: 10, scope: !5876)
!5878 = !DILocation(line: 654, column: 6, scope: !5866)
!5879 = !DILocation(line: 655, column: 24, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5876, file: !2773, line: 654, column: 18)
!5881 = !DILocation(line: 655, column: 19, scope: !5880)
!5882 = !DILocation(line: 656, column: 3, scope: !5880)
!5883 = !DILocation(line: 659, column: 7, scope: !5866)
!5884 = !DILocation(line: 660, column: 7, scope: !5866)
!5885 = !DILocation(line: 661, column: 7, scope: !5866)
!5886 = !DILocation(line: 662, column: 7, scope: !5866)
!5887 = !DILocation(line: 663, column: 7, scope: !5866)
!5888 = !DILocation(line: 665, column: 2, scope: !5866)
!5889 = !DILocation(line: 666, column: 1, scope: !5866)
!5890 = distinct !DISubprogram(name: "outs", scope: !2773, file: !2773, line: 1319, type: !5891, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !5893)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{!125, !4641, !124, !140, !140}
!5893 = !{!5894, !5895, !5896, !5897, !5898, !5899}
!5894 = !DILocalVariable(name: "out", arg: 1, scope: !5890, file: !2773, line: 1319, type: !4641)
!5895 = !DILocalVariable(name: "ctx", arg: 2, scope: !5890, file: !2773, line: 1320, type: !124)
!5896 = !DILocalVariable(name: "sp", arg: 3, scope: !5890, file: !2773, line: 1321, type: !140)
!5897 = !DILocalVariable(name: "ep", arg: 4, scope: !5890, file: !2773, line: 1322, type: !140)
!5898 = !DILocalVariable(name: "count", scope: !5890, file: !2773, line: 1324, type: !272)
!5899 = !DILocalVariable(name: "rc", scope: !5900, file: !2773, line: 1327, type: !125)
!5900 = distinct !DILexicalBlock(scope: !5890, file: !2773, line: 1326, column: 45)
!5901 = !DILocation(line: 0, scope: !5890)
!5902 = !DILocation(line: 1326, column: 2, scope: !5890)
!5903 = !DILocation(line: 1324, column: 9, scope: !5890)
!5904 = !DILocation(line: 1326, column: 13, scope: !5890)
!5905 = !DILocation(line: 1326, column: 19, scope: !5890)
!5906 = !DILocation(line: 1327, column: 21, scope: !5900)
!5907 = !DILocation(line: 1326, column: 36, scope: !5890)
!5908 = !DILocation(line: 1326, column: 39, scope: !5890)
!5909 = !DILocation(line: 1327, column: 24, scope: !5900)
!5910 = !DILocation(line: 1327, column: 16, scope: !5900)
!5911 = !DILocation(line: 1327, column: 12, scope: !5900)
!5912 = !DILocation(line: 0, scope: !5900)
!5913 = !DILocation(line: 1329, column: 10, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5900, file: !2773, line: 1329, column: 7)
!5915 = !DILocation(line: 1329, column: 7, scope: !5900)
!5916 = distinct !{!5916, !5902, !5917}
!5917 = !DILocation(line: 1333, column: 2, scope: !5890)
!5918 = !DILocation(line: 1336, column: 1, scope: !5890)
!5919 = distinct !DISubprogram(name: "encode_uint", scope: !2773, file: !2773, line: 788, type: !5920, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !5922)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!393, !2795, !5523, !393, !140}
!5922 = !{!5923, !5924, !5925, !5926, !5927, !5928, !5930, !5931}
!5923 = !DILocalVariable(name: "value", arg: 1, scope: !5919, file: !2773, line: 788, type: !2795)
!5924 = !DILocalVariable(name: "conv", arg: 2, scope: !5919, file: !2773, line: 789, type: !5523)
!5925 = !DILocalVariable(name: "bps", arg: 3, scope: !5919, file: !2773, line: 790, type: !393)
!5926 = !DILocalVariable(name: "bpe", arg: 4, scope: !5919, file: !2773, line: 791, type: !140)
!5927 = !DILocalVariable(name: "upcase", scope: !5919, file: !2773, line: 793, type: !153)
!5928 = !DILocalVariable(name: "radix", scope: !5919, file: !2773, line: 794, type: !5929)
!5929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5930 = !DILocalVariable(name: "bp", scope: !5919, file: !2773, line: 795, type: !393)
!5931 = !DILocalVariable(name: "lsv", scope: !5932, file: !2773, line: 798, type: !32)
!5932 = distinct !DILexicalBlock(scope: !5919, file: !2773, line: 797, column: 5)
!5933 = !DILocation(line: 0, scope: !5919)
!5934 = !DILocation(line: 793, column: 35, scope: !5919)
!5935 = !DILocation(line: 793, column: 24, scope: !5919)
!5936 = !DILocation(line: 793, column: 16, scope: !5919)
!5937 = !DILocation(line: 794, column: 29, scope: !5919)
!5938 = !DILocation(line: 795, column: 24, scope: !5919)
!5939 = !DILocation(line: 795, column: 17, scope: !5919)
!5940 = !DILocation(line: 797, column: 2, scope: !5919)
!5941 = !DILocation(line: 802, column: 9, scope: !5932)
!5942 = !DILocation(line: 798, column: 22, scope: !5932)
!5943 = !DILocation(line: 0, scope: !5932)
!5944 = !DILocation(line: 800, column: 16, scope: !5932)
!5945 = !DILocation(line: 800, column: 11, scope: !5932)
!5946 = !DILocation(line: 800, column: 4, scope: !5932)
!5947 = !DILocation(line: 800, column: 9, scope: !5932)
!5948 = !DILocation(line: 803, column: 18, scope: !5919)
!5949 = !DILocation(line: 803, column: 24, scope: !5919)
!5950 = !DILocation(line: 803, column: 2, scope: !5932)
!5951 = distinct !{!5951, !5940, !5952}
!5952 = !DILocation(line: 803, column: 37, scope: !5919)
!5953 = !DILocation(line: 808, column: 12, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5919, file: !2773, line: 808, column: 6)
!5955 = !DILocation(line: 808, column: 6, scope: !5919)
!5956 = !DILocation(line: 809, column: 7, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !2773, line: 808, column: 23)
!5958 = !DILocation(line: 813, column: 3, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !2773, line: 811, column: 27)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !2773, line: 811, column: 14)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !2773, line: 809, column: 7)
!5962 = !DILocation(line: 0, scope: !5961)
!5963 = !DILocation(line: 818, column: 2, scope: !5919)
!5964 = distinct !DISubprogram(name: "store_count", scope: !2773, file: !2773, line: 1280, type: !5965, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !5969)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{null, !5967, !124, !125}
!5967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5968, size: 32)
!5968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5490)
!5969 = !{!5970, !5971, !5972}
!5970 = !DILocalVariable(name: "conv", arg: 1, scope: !5964, file: !2773, line: 1280, type: !5967)
!5971 = !DILocalVariable(name: "dp", arg: 2, scope: !5964, file: !2773, line: 1281, type: !124)
!5972 = !DILocalVariable(name: "count", arg: 3, scope: !5964, file: !2773, line: 1282, type: !125)
!5973 = !DILocation(line: 0, scope: !5964)
!5974 = !DILocation(line: 1284, column: 38, scope: !5964)
!5975 = !DILocation(line: 1284, column: 2, scope: !5964)
!5976 = !DILocation(line: 1286, column: 4, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5964, file: !2773, line: 1284, column: 50)
!5978 = !DILocation(line: 1286, column: 14, scope: !5977)
!5979 = !DILocation(line: 1287, column: 3, scope: !5977)
!5980 = !DILocation(line: 1289, column: 24, scope: !5977)
!5981 = !DILocation(line: 1289, column: 22, scope: !5977)
!5982 = !DILocation(line: 1290, column: 3, scope: !5977)
!5983 = !DILocation(line: 1292, column: 18, scope: !5977)
!5984 = !DILocation(line: 1292, column: 4, scope: !5977)
!5985 = !DILocation(line: 1292, column: 16, scope: !5977)
!5986 = !DILocation(line: 1293, column: 3, scope: !5977)
!5987 = !DILocation(line: 1295, column: 4, scope: !5977)
!5988 = !DILocation(line: 1295, column: 15, scope: !5977)
!5989 = !DILocation(line: 1296, column: 3, scope: !5977)
!5990 = !DILocation(line: 1298, column: 22, scope: !5977)
!5991 = !DILocation(line: 1298, column: 4, scope: !5977)
!5992 = !DILocation(line: 1298, column: 20, scope: !5977)
!5993 = !DILocation(line: 1299, column: 3, scope: !5977)
!5994 = !DILocation(line: 1301, column: 21, scope: !5977)
!5995 = !DILocation(line: 1301, column: 4, scope: !5977)
!5996 = !DILocation(line: 1301, column: 19, scope: !5977)
!5997 = !DILocation(line: 1302, column: 3, scope: !5977)
!5998 = !DILocation(line: 1304, column: 4, scope: !5977)
!5999 = !DILocation(line: 1304, column: 17, scope: !5977)
!6000 = !DILocation(line: 1305, column: 3, scope: !5977)
!6001 = !DILocation(line: 1307, column: 4, scope: !5977)
!6002 = !DILocation(line: 1307, column: 20, scope: !5977)
!6003 = !DILocation(line: 1308, column: 3, scope: !5977)
!6004 = !DILocation(line: 1316, column: 1, scope: !5964)
!6005 = distinct !DISubprogram(name: "isupper", scope: !6006, file: !6006, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6007)
!6006 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6007 = !{!6008}
!6008 = !DILocalVariable(name: "a", arg: 1, scope: !6005, file: !6006, line: 16, type: !125)
!6009 = !DILocation(line: 0, scope: !6005)
!6010 = !DILocation(line: 18, column: 29, scope: !6005)
!6011 = !DILocation(line: 18, column: 45, scope: !6005)
!6012 = !DILocation(line: 18, column: 2, scope: !6005)
!6013 = distinct !DISubprogram(name: "conversion_radix", scope: !2773, file: !2773, line: 761, type: !6014, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6016)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!272, !142}
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "specifier", arg: 1, scope: !6013, file: !2773, line: 761, type: !142)
!6018 = !DILocation(line: 0, scope: !6013)
!6019 = !DILocation(line: 763, column: 2, scope: !6013)
!6020 = !DILocation(line: 770, column: 3, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6013, file: !2773, line: 763, column: 21)
!6022 = !DILocation(line: 774, column: 3, scope: !6021)
!6023 = !DILocation(line: 0, scope: !6021)
!6024 = !DILocation(line: 776, column: 1, scope: !6013)
!6025 = distinct !DISubprogram(name: "extract_flags", scope: !2773, file: !2773, line: 339, type: !5867, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6026)
!6026 = !{!6027, !6028, !6029}
!6027 = !DILocalVariable(name: "conv", arg: 1, scope: !6025, file: !2773, line: 339, type: !5523)
!6028 = !DILocalVariable(name: "sp", arg: 2, scope: !6025, file: !2773, line: 340, type: !140)
!6029 = !DILocalVariable(name: "loop", scope: !6025, file: !2773, line: 342, type: !153)
!6030 = !DILocation(line: 0, scope: !6025)
!6031 = !DILocation(line: 344, column: 2, scope: !6025)
!6032 = !DILocation(line: 345, column: 11, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6025, file: !2773, line: 344, column: 5)
!6034 = !DILocation(line: 345, column: 3, scope: !6033)
!6035 = !DILocation(line: 351, column: 4, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !2773, line: 345, column: 16)
!6037 = !DILocation(line: 354, column: 4, scope: !6036)
!6038 = !DILocation(line: 357, column: 4, scope: !6036)
!6039 = !DILocation(line: 360, column: 4, scope: !6036)
!6040 = !DILocation(line: 0, scope: !6036)
!6041 = !DILocation(line: 370, column: 12, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6025, file: !2773, line: 370, column: 6)
!6043 = !DILocation(line: 370, column: 22, scope: !6042)
!6044 = !DILocation(line: 371, column: 19, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6042, file: !2773, line: 370, column: 42)
!6046 = !DILocation(line: 372, column: 2, scope: !6045)
!6047 = !DILocation(line: 376, column: 2, scope: !6025)
!6048 = distinct !DISubprogram(name: "extract_width", scope: !2773, file: !2773, line: 388, type: !5867, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6049)
!6049 = !{!6050, !6051, !6052, !6053}
!6050 = !DILocalVariable(name: "conv", arg: 1, scope: !6048, file: !2773, line: 388, type: !5523)
!6051 = !DILocalVariable(name: "sp", arg: 2, scope: !6048, file: !2773, line: 389, type: !140)
!6052 = !DILocalVariable(name: "wp", scope: !6048, file: !2773, line: 398, type: !140)
!6053 = !DILocalVariable(name: "width", scope: !6048, file: !2773, line: 399, type: !272)
!6054 = !DILocation(line: 0, scope: !6048)
!6055 = !DILocation(line: 391, column: 8, scope: !6048)
!6056 = !DILocation(line: 391, column: 22, scope: !6048)
!6057 = !DILocation(line: 393, column: 6, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6048, file: !2773, line: 393, column: 6)
!6059 = !DILocation(line: 393, column: 10, scope: !6058)
!6060 = !DILocation(line: 393, column: 6, scope: !6048)
!6061 = !DILocation(line: 394, column: 20, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6058, file: !2773, line: 393, column: 18)
!6063 = !DILocation(line: 395, column: 10, scope: !6062)
!6064 = !DILocation(line: 395, column: 3, scope: !6062)
!6065 = !DILocation(line: 399, column: 17, scope: !6048)
!6066 = !DILocation(line: 401, column: 6, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6048, file: !2773, line: 401, column: 6)
!6068 = !DILocation(line: 401, column: 9, scope: !6067)
!6069 = !DILocation(line: 401, column: 6, scope: !6048)
!6070 = !DILocation(line: 402, column: 23, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !2773, line: 401, column: 16)
!6072 = !DILocation(line: 403, column: 9, scope: !6071)
!6073 = !DILocation(line: 403, column: 21, scope: !6071)
!6074 = !DILocation(line: 405, column: 11, scope: !6071)
!6075 = !DILocation(line: 404, column: 21, scope: !6071)
!6076 = !DILocation(line: 406, column: 2, scope: !6071)
!6077 = !DILocation(line: 409, column: 1, scope: !6048)
!6078 = distinct !DISubprogram(name: "extract_prec", scope: !2773, file: !2773, line: 420, type: !5867, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6079)
!6079 = !{!6080, !6081, !6082}
!6080 = !DILocalVariable(name: "conv", arg: 1, scope: !6078, file: !2773, line: 420, type: !5523)
!6081 = !DILocalVariable(name: "sp", arg: 2, scope: !6078, file: !2773, line: 421, type: !140)
!6082 = !DILocalVariable(name: "prec", scope: !6078, file: !2773, line: 435, type: !272)
!6083 = !DILocation(line: 0, scope: !6078)
!6084 = !DILocation(line: 423, column: 24, scope: !6078)
!6085 = !DILocation(line: 423, column: 28, scope: !6078)
!6086 = !DILocation(line: 423, column: 8, scope: !6078)
!6087 = !DILocation(line: 423, column: 21, scope: !6078)
!6088 = !DILocation(line: 425, column: 6, scope: !6078)
!6089 = !DILocation(line: 428, column: 2, scope: !6078)
!6090 = !DILocation(line: 430, column: 6, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6078, file: !2773, line: 430, column: 6)
!6092 = !DILocation(line: 430, column: 10, scope: !6091)
!6093 = !DILocation(line: 430, column: 6, scope: !6078)
!6094 = !DILocation(line: 431, column: 19, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6091, file: !2773, line: 430, column: 18)
!6096 = !DILocation(line: 432, column: 10, scope: !6095)
!6097 = !DILocation(line: 432, column: 3, scope: !6095)
!6098 = !DILocation(line: 435, column: 16, scope: !6078)
!6099 = !DILocation(line: 437, column: 8, scope: !6078)
!6100 = !DILocation(line: 437, column: 19, scope: !6078)
!6101 = !DILocation(line: 439, column: 10, scope: !6078)
!6102 = !DILocation(line: 438, column: 20, scope: !6078)
!6103 = !DILocation(line: 441, column: 9, scope: !6078)
!6104 = !DILocation(line: 442, column: 1, scope: !6078)
!6105 = distinct !DISubprogram(name: "extract_length", scope: !2773, file: !2773, line: 453, type: !5867, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6106)
!6106 = !{!6107, !6108}
!6107 = !DILocalVariable(name: "conv", arg: 1, scope: !6105, file: !2773, line: 453, type: !5523)
!6108 = !DILocalVariable(name: "sp", arg: 2, scope: !6105, file: !2773, line: 454, type: !140)
!6109 = !DILocation(line: 0, scope: !6105)
!6110 = !DILocation(line: 456, column: 10, scope: !6105)
!6111 = !DILocation(line: 456, column: 2, scope: !6105)
!6112 = !DILocation(line: 458, column: 8, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !2773, line: 458, column: 7)
!6114 = distinct !DILexicalBlock(scope: !6105, file: !2773, line: 456, column: 15)
!6115 = !DILocation(line: 458, column: 7, scope: !6113)
!6116 = !DILocation(line: 458, column: 13, scope: !6113)
!6117 = !DILocation(line: 0, scope: !6113)
!6118 = !DILocation(line: 458, column: 7, scope: !6114)
!6119 = !DILocation(line: 459, column: 21, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6113, file: !2773, line: 458, column: 21)
!6121 = !DILocation(line: 460, column: 4, scope: !6120)
!6122 = !DILocation(line: 461, column: 3, scope: !6120)
!6123 = !DILocation(line: 462, column: 21, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6113, file: !2773, line: 461, column: 10)
!6125 = !DILocation(line: 466, column: 8, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6114, file: !2773, line: 466, column: 7)
!6127 = !DILocation(line: 466, column: 7, scope: !6126)
!6128 = !DILocation(line: 466, column: 13, scope: !6126)
!6129 = !DILocation(line: 0, scope: !6126)
!6130 = !DILocation(line: 466, column: 7, scope: !6114)
!6131 = !DILocation(line: 467, column: 21, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6126, file: !2773, line: 466, column: 21)
!6133 = !DILocation(line: 468, column: 4, scope: !6132)
!6134 = !DILocation(line: 469, column: 3, scope: !6132)
!6135 = !DILocation(line: 470, column: 21, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6126, file: !2773, line: 469, column: 10)
!6137 = !DILocation(line: 474, column: 9, scope: !6114)
!6138 = !DILocation(line: 474, column: 20, scope: !6114)
!6139 = !DILocation(line: 475, column: 3, scope: !6114)
!6140 = !DILocation(line: 476, column: 3, scope: !6114)
!6141 = !DILocation(line: 478, column: 9, scope: !6114)
!6142 = !DILocation(line: 478, column: 20, scope: !6114)
!6143 = !DILocation(line: 479, column: 3, scope: !6114)
!6144 = !DILocation(line: 480, column: 3, scope: !6114)
!6145 = !DILocation(line: 482, column: 9, scope: !6114)
!6146 = !DILocation(line: 482, column: 20, scope: !6114)
!6147 = !DILocation(line: 483, column: 3, scope: !6114)
!6148 = !DILocation(line: 484, column: 3, scope: !6114)
!6149 = !DILocation(line: 486, column: 9, scope: !6114)
!6150 = !DILocation(line: 486, column: 20, scope: !6114)
!6151 = !DILocation(line: 487, column: 3, scope: !6114)
!6152 = !DILocation(line: 492, column: 21, scope: !6114)
!6153 = !DILocation(line: 493, column: 3, scope: !6114)
!6154 = !DILocation(line: 495, column: 9, scope: !6114)
!6155 = !DILocation(line: 495, column: 20, scope: !6114)
!6156 = !DILocation(line: 496, column: 3, scope: !6114)
!6157 = !DILocation(line: 498, column: 2, scope: !6105)
!6158 = distinct !DISubprogram(name: "extract_specifier", scope: !2773, file: !2773, line: 513, type: !5867, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6159)
!6159 = !{!6160, !6161, !6162, !6163}
!6160 = !DILocalVariable(name: "conv", arg: 1, scope: !6158, file: !2773, line: 513, type: !5523)
!6161 = !DILocalVariable(name: "sp", arg: 2, scope: !6158, file: !2773, line: 514, type: !140)
!6162 = !DILocalVariable(name: "unsupported", scope: !6158, file: !2773, line: 516, type: !153)
!6163 = !DILabel(scope: !6164, name: "int_conv", file: !2773, line: 526)
!6164 = distinct !DILexicalBlock(scope: !6158, file: !2773, line: 520, column: 27)
!6165 = !DILocation(line: 0, scope: !6158)
!6166 = !DILocation(line: 518, column: 20, scope: !6158)
!6167 = !DILocation(line: 518, column: 8, scope: !6158)
!6168 = !DILocation(line: 518, column: 18, scope: !6158)
!6169 = !DILocation(line: 520, column: 2, scope: !6158)
!6170 = !DILocation(line: 525, column: 3, scope: !6164)
!6171 = !DILocation(line: 0, scope: !6164)
!6172 = !DILocation(line: 526, column: 1, scope: !6164)
!6173 = !DILocation(line: 528, column: 24, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6164, file: !2773, line: 528, column: 7)
!6175 = !DILocation(line: 528, column: 7, scope: !6164)
!6176 = !DILocation(line: 535, column: 23, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6164, file: !2773, line: 535, column: 7)
!6178 = !DILocation(line: 535, column: 7, scope: !6164)
!6179 = !DILocation(line: 536, column: 36, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6177, file: !2773, line: 535, column: 31)
!6181 = !DILocation(line: 537, column: 3, scope: !6180)
!6182 = !DILocation(line: 570, column: 9, scope: !6164)
!6183 = !DILocation(line: 570, column: 23, scope: !6164)
!6184 = !DILocation(line: 575, column: 4, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !2773, line: 573, column: 48)
!6186 = distinct !DILexicalBlock(scope: !6164, file: !2773, line: 573, column: 7)
!6187 = !DILocation(line: 603, column: 9, scope: !6164)
!6188 = !DILocation(line: 603, column: 23, scope: !6164)
!6189 = !DILocation(line: 605, column: 24, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6164, file: !2773, line: 605, column: 7)
!6191 = !DILocation(line: 605, column: 7, scope: !6164)
!6192 = !DILocation(line: 612, column: 9, scope: !6164)
!6193 = !DILocation(line: 612, column: 23, scope: !6164)
!6194 = !DILocation(line: 619, column: 24, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6164, file: !2773, line: 619, column: 7)
!6196 = !DILocation(line: 619, column: 7, scope: !6164)
!6197 = !DILocation(line: 625, column: 9, scope: !6164)
!6198 = !DILocation(line: 625, column: 17, scope: !6164)
!6199 = !DILocation(line: 626, column: 3, scope: !6164)
!6200 = !DILocation(line: 629, column: 20, scope: !6158)
!6201 = !DILocation(line: 629, column: 8, scope: !6158)
!6202 = !DILocation(line: 518, column: 23, scope: !6158)
!6203 = !DILocation(line: 631, column: 2, scope: !6158)
!6204 = distinct !DISubprogram(name: "extract_decimal", scope: !2773, file: !2773, line: 318, type: !6205, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6207)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!272, !386}
!6207 = !{!6208, !6209, !6210}
!6208 = !DILocalVariable(name: "str", arg: 1, scope: !6204, file: !2773, line: 318, type: !386)
!6209 = !DILocalVariable(name: "sp", scope: !6204, file: !2773, line: 320, type: !140)
!6210 = !DILocalVariable(name: "val", scope: !6204, file: !2773, line: 321, type: !272)
!6211 = !DILocation(line: 0, scope: !6204)
!6212 = !DILocation(line: 320, column: 19, scope: !6204)
!6213 = !DILocation(line: 323, column: 37, scope: !6204)
!6214 = !DILocation(line: 323, column: 17, scope: !6204)
!6215 = !DILocation(line: 323, column: 9, scope: !6204)
!6216 = !DILocation(line: 323, column: 2, scope: !6204)
!6217 = !DILocation(line: 324, column: 13, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6204, file: !2773, line: 323, column: 43)
!6219 = !DILocation(line: 324, column: 24, scope: !6218)
!6220 = !DILocation(line: 324, column: 19, scope: !6218)
!6221 = !DILocation(line: 324, column: 27, scope: !6218)
!6222 = distinct !{!6222, !6216, !6223}
!6223 = !DILocation(line: 325, column: 2, scope: !6204)
!6224 = !DILocation(line: 326, column: 7, scope: !6204)
!6225 = !DILocation(line: 327, column: 2, scope: !6204)
!6226 = distinct !DISubprogram(name: "isdigit", scope: !6006, file: !6006, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2769, retainedNodes: !6227)
!6227 = !{!6228}
!6228 = !DILocalVariable(name: "a", arg: 1, scope: !6226, file: !6006, line: 43, type: !125)
!6229 = !DILocation(line: 0, scope: !6226)
!6230 = !DILocation(line: 45, column: 29, scope: !6226)
!6231 = !DILocation(line: 45, column: 45, scope: !6226)
!6232 = !DILocation(line: 45, column: 2, scope: !6226)
!6233 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6234, file: !6234, line: 9, type: !3363, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !639)
!6234 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!6235 = !DILocation(line: 11, column: 1, scope: !6233)
!6236 = !{i64 2147566074, i64 2147566117, i64 2147566157}
!6237 = !DILocation(line: 12, column: 1, scope: !6233)
!6238 = !{i64 2147570301, i64 2147570344, i64 2147570384}
!6239 = !DILocation(line: 13, column: 1, scope: !6233)
!6240 = !{i64 2147570510, i64 2147570553, i64 2147570593}
!6241 = !DILocation(line: 14, column: 1, scope: !6233)
!6242 = !{i64 2147570679, i64 2147570722, i64 2147570762}
!6243 = !DILocation(line: 15, column: 1, scope: !6233)
!6244 = !{i64 2147570842, i64 2147570885, i64 2147570925}
!6245 = !DILocation(line: 16, column: 1, scope: !6233)
!6246 = !{i64 2147571026, i64 2147571069, i64 2147571109}
!6247 = !DILocation(line: 17, column: 1, scope: !6233)
!6248 = !{i64 2147571205, i64 2147571248, i64 2147571288}
!6249 = !DILocation(line: 18, column: 1, scope: !6233)
!6250 = !{i64 2147571447, i64 2147571490, i64 2147571530}
!6251 = !DILocation(line: 19, column: 1, scope: !6233)
!6252 = !{i64 2147571682, i64 2147571725, i64 2147571765}
!6253 = !DILocation(line: 20, column: 1, scope: !6233)
!6254 = !{i64 2147571868, i64 2147571911, i64 2147571951}
!6255 = !DILocation(line: 21, column: 1, scope: !6233)
!6256 = !{i64 2147572084, i64 2147572127, i64 2147572167}
!6257 = !DILocation(line: 22, column: 1, scope: !6233)
!6258 = !{i64 2147572287, i64 2147572330, i64 2147572370}
!6259 = !DILocation(line: 23, column: 1, scope: !6233)
!6260 = !{i64 2147572490, i64 2147572533, i64 2147572573}
!6261 = !DILocation(line: 24, column: 1, scope: !6233)
!6262 = !{i64 2147572665, i64 2147572708, i64 2147572748}
!6263 = !DILocation(line: 25, column: 1, scope: !6233)
!6264 = !{i64 2147572873, i64 2147572916, i64 2147572956}
!6265 = !DILocation(line: 26, column: 1, scope: !6233)
!6266 = !{i64 2147573077, i64 2147573120, i64 2147573160}
!6267 = !DILocation(line: 27, column: 1, scope: !6233)
!6268 = !{i64 2147573270, i64 2147573313, i64 2147573353}
!6269 = !DILocation(line: 28, column: 1, scope: !6233)
!6270 = !{i64 2147573472, i64 2147573515, i64 2147573555}
!6271 = !DILocation(line: 29, column: 1, scope: !6233)
!6272 = !{i64 2147573671, i64 2147573714, i64 2147573754}
!6273 = !DILocation(line: 30, column: 1, scope: !6233)
!6274 = !{i64 2147573898, i64 2147573941, i64 2147573981}
!6275 = !DILocation(line: 31, column: 1, scope: !6233)
!6276 = !{i64 2147574100, i64 2147574143, i64 2147574183}
!6277 = !DILocation(line: 32, column: 1, scope: !6233)
!6278 = !{i64 2147574315, i64 2147574358, i64 2147574398}
!6279 = !DILocation(line: 33, column: 1, scope: !6233)
!6280 = !{i64 2147574496, i64 2147574539, i64 2147574579}
!6281 = !DILocation(line: 34, column: 1, scope: !6233)
!6282 = !{i64 2147574668, i64 2147574711, i64 2147574751}
!6283 = !DILocation(line: 35, column: 1, scope: !6233)
!6284 = !{i64 2147574870, i64 2147574913, i64 2147574953}
!6285 = !DILocation(line: 36, column: 1, scope: !6233)
!6286 = !{i64 2147575096, i64 2147575139, i64 2147575179}
!6287 = !DILocation(line: 37, column: 1, scope: !6233)
!6288 = !{i64 2147575295, i64 2147575338, i64 2147575378}
!6289 = !DILocation(line: 38, column: 1, scope: !6233)
!6290 = !{i64 2147575470, i64 2147575513, i64 2147575553}
!6291 = !DILocation(line: 39, column: 1, scope: !6233)
!6292 = !{i64 2147575723, i64 2147575766, i64 2147575806}
!6293 = !DILocation(line: 40, column: 1, scope: !6233)
!6294 = !{i64 2147575964, i64 2147576007, i64 2147576047}
!6295 = !DILocation(line: 41, column: 1, scope: !6233)
!6296 = !{i64 2147576199, i64 2147576242, i64 2147576282}
!6297 = !DILocation(line: 42, column: 1, scope: !6233)
!6298 = !{i64 2147576431, i64 2147576474, i64 2147576514}
!6299 = !DILocation(line: 43, column: 1, scope: !6233)
!6300 = !{i64 2147576657, i64 2147576700, i64 2147576740}
!6301 = !DILocation(line: 44, column: 1, scope: !6233)
!6302 = !{i64 2147576883, i64 2147576926, i64 2147576966}
!6303 = !DILocation(line: 45, column: 1, scope: !6233)
!6304 = !{i64 2147577109, i64 2147577152, i64 2147577192}
!6305 = !DILocation(line: 46, column: 1, scope: !6233)
!6306 = !{i64 2147577344, i64 2147577387, i64 2147577427}
!6307 = !DILocation(line: 47, column: 1, scope: !6233)
!6308 = !{i64 2147577588, i64 2147577631, i64 2147577671}
!6309 = !DILocation(line: 48, column: 1, scope: !6233)
!6310 = !{i64 2147577835, i64 2147577878, i64 2147577918}
!6311 = !DILocation(line: 49, column: 1, scope: !6233)
!6312 = !{i64 2147578067, i64 2147578110, i64 2147578150}
!6313 = !DILocation(line: 50, column: 1, scope: !6233)
!6314 = !{i64 2147578311, i64 2147578354, i64 2147578394}
!6315 = !DILocation(line: 51, column: 1, scope: !6233)
!6316 = !{i64 2147578549, i64 2147578592, i64 2147578632}
!6317 = !DILocation(line: 52, column: 1, scope: !6233)
!6318 = !{i64 2147578823, i64 2147578866, i64 2147578906}
!6319 = !DILocation(line: 53, column: 1, scope: !6233)
!6320 = !{i64 2147579061, i64 2147579104, i64 2147579144}
!6321 = !DILocation(line: 54, column: 1, scope: !6233)
!6322 = !{i64 2147583375, i64 2147583418, i64 2147583458}
!6323 = !DILocation(line: 55, column: 1, scope: !6233)
!6324 = !{i64 2147583619, i64 2147583662, i64 2147583702}
!6325 = !DILocation(line: 56, column: 1, scope: !6233)
!6326 = !{i64 2147583854, i64 2147583897, i64 2147583937}
!6327 = !DILocation(line: 57, column: 1, scope: !6233)
!6328 = !{i64 2147584104, i64 2147584147, i64 2147584187}
!6329 = !DILocation(line: 58, column: 1, scope: !6233)
!6330 = !{i64 2147584351, i64 2147584394, i64 2147584434}
!6331 = !DILocation(line: 59, column: 1, scope: !6233)
!6332 = !{i64 2147584586, i64 2147584629, i64 2147584669}
!6333 = !DILocation(line: 60, column: 1, scope: !6233)
!6334 = !{i64 2147584821, i64 2147584864, i64 2147584904}
!6335 = !DILocation(line: 61, column: 1, scope: !6233)
!6336 = !{i64 2147585056, i64 2147585099, i64 2147585139}
!6337 = !DILocation(line: 62, column: 1, scope: !6233)
!6338 = !{i64 2147585291, i64 2147585334, i64 2147585374}
!6339 = !DILocation(line: 63, column: 1, scope: !6233)
!6340 = !{i64 2147585535, i64 2147585578, i64 2147585618}
!6341 = !DILocation(line: 64, column: 1, scope: !6233)
!6342 = !{i64 2147585773, i64 2147585816, i64 2147585856}
!6343 = !DILocation(line: 65, column: 1, scope: !6233)
!6344 = !{i64 2147586014, i64 2147586057, i64 2147586097}
!6345 = !DILocation(line: 66, column: 1, scope: !6233)
!6346 = !{i64 2147586294, i64 2147586337, i64 2147586377}
!6347 = !DILocation(line: 67, column: 1, scope: !6233)
!6348 = !{i64 2147586553, i64 2147586596, i64 2147586636}
!6349 = !DILocation(line: 68, column: 1, scope: !6233)
!6350 = !{i64 2147586791, i64 2147586834, i64 2147586874}
!6351 = !DILocation(line: 69, column: 1, scope: !6233)
!6352 = !{i64 2147587020, i64 2147587063, i64 2147587103}
!6353 = !DILocation(line: 70, column: 1, scope: !6233)
!6354 = !{i64 2147587228, i64 2147587271, i64 2147587311}
!6355 = !DILocation(line: 71, column: 1, scope: !6233)
!6356 = !{i64 2147587439, i64 2147587482, i64 2147587522}
!6357 = !DILocation(line: 72, column: 1, scope: !6233)
!6358 = !{i64 2147587674, i64 2147587717, i64 2147587757}
!6359 = !DILocation(line: 73, column: 1, scope: !6233)
!6360 = !{i64 2147587903, i64 2147587946, i64 2147587986}
!6361 = !DILocation(line: 74, column: 1, scope: !6233)
!6362 = !{i64 2147588120, i64 2147588163, i64 2147588203}
!6363 = !DILocation(line: 75, column: 1, scope: !6233)
!6364 = !{i64 2147588349, i64 2147588392, i64 2147588432}
!6365 = !DILocation(line: 76, column: 1, scope: !6233)
!6366 = !{i64 2147588587, i64 2147588630, i64 2147588670}
!6367 = !DILocation(line: 77, column: 1, scope: !6233)
!6368 = !{i64 2147588819, i64 2147588862, i64 2147588902}
!6369 = !DILocation(line: 78, column: 1, scope: !6233)
!6370 = !{i64 2147589045, i64 2147589088, i64 2147589128}
!6371 = !DILocation(line: 79, column: 1, scope: !6233)
!6372 = !{i64 2147589262, i64 2147589305, i64 2147589345}
!6373 = !DILocation(line: 80, column: 1, scope: !6233)
!6374 = !{i64 2147589494, i64 2147589537, i64 2147589577}
!6375 = !DILocation(line: 81, column: 1, scope: !6233)
!6376 = !{i64 2147589720, i64 2147589763, i64 2147589803}
!6377 = !DILocation(line: 82, column: 1, scope: !6233)
!6378 = !{i64 2147589934, i64 2147589977, i64 2147590017}
!6379 = !DILocation(line: 83, column: 1, scope: !6233)
!6380 = !{i64 2147590154, i64 2147590197, i64 2147590237}
!6381 = !DILocation(line: 84, column: 1, scope: !6233)
!6382 = !{i64 2147590386, i64 2147590429, i64 2147590469}
!6383 = !DILocation(line: 85, column: 1, scope: !6233)
!6384 = !{i64 2147590594, i64 2147590637, i64 2147590677}
!6385 = !DILocation(line: 86, column: 1, scope: !6233)
!6386 = !{i64 2147590799, i64 2147590842, i64 2147590882}
!6387 = !DILocation(line: 87, column: 1, scope: !6233)
!6388 = !{i64 2147591016, i64 2147591059, i64 2147591099}
!6389 = !DILocation(line: 88, column: 1, scope: !6233)
!6390 = !{i64 2147591230, i64 2147591273, i64 2147591313}
!6391 = !DILocation(line: 89, column: 1, scope: !6233)
!6392 = !{i64 2147595517, i64 2147595560, i64 2147595600}
!6393 = !DILocation(line: 90, column: 1, scope: !6233)
!6394 = !{i64 2147595737, i64 2147595780, i64 2147595820}
!6395 = !DILocation(line: 91, column: 1, scope: !6233)
!6396 = !{i64 2147595942, i64 2147595985, i64 2147596025}
!6397 = !DILocation(line: 92, column: 1, scope: !6233)
!6398 = !{i64 2147596174, i64 2147596217, i64 2147596257}
!6399 = !DILocation(line: 93, column: 1, scope: !6233)
!6400 = !{i64 2147596409, i64 2147596452, i64 2147596492}
!6401 = !DILocation(line: 94, column: 1, scope: !6233)
!6402 = !{i64 2147596659, i64 2147596702, i64 2147596742}
!6403 = !DILocation(line: 95, column: 1, scope: !6233)
!6404 = !{i64 2147596909, i64 2147596952, i64 2147596992}
!6405 = !DILocation(line: 96, column: 1, scope: !6233)
!6406 = !{i64 2147597147, i64 2147597190, i64 2147597230}
!6407 = !DILocation(line: 97, column: 1, scope: !6233)
!6408 = !{i64 2147597358, i64 2147597401, i64 2147597441}
!6409 = !DILocation(line: 98, column: 1, scope: !6233)
!6410 = !{i64 2147597575, i64 2147597618, i64 2147597658}
!6411 = !DILocation(line: 99, column: 1, scope: !6233)
!6412 = !{i64 2147597771, i64 2147597814, i64 2147597854}
!6413 = !DILocation(line: 100, column: 1, scope: !6233)
!6414 = !{i64 2147597973, i64 2147598016, i64 2147598056}
!6415 = !DILocation(line: 101, column: 1, scope: !6233)
!6416 = !{i64 2147598166, i64 2147598209, i64 2147598249}
!6417 = !DILocation(line: 102, column: 1, scope: !6233)
!6418 = !{i64 2147598374, i64 2147598417, i64 2147598457}
!6419 = !DILocation(line: 103, column: 1, scope: !6233)
!6420 = !{i64 2147598567, i64 2147598610, i64 2147598650}
!6421 = !DILocation(line: 104, column: 1, scope: !6233)
!6422 = !{i64 2147598772, i64 2147598815, i64 2147598855}
!6423 = !DILocation(line: 105, column: 1, scope: !6233)
!6424 = !{i64 2147598977, i64 2147599020, i64 2147599060}
!6425 = !DILocation(line: 106, column: 1, scope: !6233)
!6426 = !{i64 2147599182, i64 2147599225, i64 2147599265}
!6427 = !DILocation(line: 107, column: 1, scope: !6233)
!6428 = !{i64 2147599390, i64 2147599433, i64 2147599473}
!6429 = !DILocation(line: 108, column: 1, scope: !6233)
!6430 = !{i64 2147599586, i64 2147599629, i64 2147599669}
!6431 = !DILocation(line: 109, column: 1, scope: !6233)
!6432 = !{i64 2147599818, i64 2147599861, i64 2147599901}
!6433 = !DILocation(line: 110, column: 1, scope: !6233)
!6434 = !{i64 2147600029, i64 2147600072, i64 2147600112}
!6435 = !DILocation(line: 111, column: 1, scope: !6233)
!6436 = !{i64 2147600228, i64 2147600271, i64 2147600311}
!6437 = !DILocation(line: 112, column: 1, scope: !6233)
!6438 = !{i64 2147600403, i64 2147600446, i64 2147600486}
!6439 = !DILocation(line: 113, column: 1, scope: !6233)
!6440 = !{i64 2147600587, i64 2147600630, i64 2147600670}
!6441 = !DILocation(line: 114, column: 1, scope: !6233)
!6442 = !{i64 2147600789, i64 2147600832, i64 2147600872}
!6443 = !DILocation(line: 115, column: 1, scope: !6233)
!6444 = !{i64 2147600988, i64 2147601031, i64 2147601071}
!6445 = !DILocation(line: 116, column: 1, scope: !6233)
!6446 = !{i64 2147601193, i64 2147601236, i64 2147601276}
!6447 = !DILocation(line: 117, column: 1, scope: !6233)
!6448 = !{i64 2147601386, i64 2147601429, i64 2147601469}
!6449 = !DILocation(line: 118, column: 1, scope: !6233)
!6450 = !{i64 2147601552, i64 2147601595, i64 2147601635}
!6451 = !DILocation(line: 119, column: 1, scope: !6233)
!6452 = !{i64 2147601736, i64 2147601779, i64 2147601819}
!6453 = !DILocation(line: 120, column: 1, scope: !6233)
!6454 = !{i64 2147601926, i64 2147601969, i64 2147602009}
!6455 = !DILocation(line: 121, column: 1, scope: !6233)
!6456 = !{i64 2147602110, i64 2147602153, i64 2147602193}
!6457 = !DILocation(line: 122, column: 1, scope: !6233)
!6458 = !{i64 2147602324, i64 2147602367, i64 2147602407}
!6459 = !DILocation(line: 123, column: 1, scope: !6233)
!6460 = !{i64 2147602535, i64 2147602578, i64 2147602618}
!6461 = !DILocation(line: 124, column: 1, scope: !6233)
!6462 = !{i64 2147602758, i64 2147602801, i64 2147602841}
!6463 = !DILocation(line: 125, column: 1, scope: !6233)
!6464 = !{i64 2147602942, i64 2147602985, i64 2147603025}
!6465 = !DILocation(line: 126, column: 1, scope: !6233)
!6466 = !{i64 2147603156, i64 2147603199, i64 2147603239}
!6467 = !DILocation(line: 127, column: 1, scope: !6233)
!6468 = !{i64 2147603322, i64 2147603365, i64 2147603405}
!6469 = !DILocation(line: 128, column: 1, scope: !6233)
!6470 = !{i64 2147603503, i64 2147603546, i64 2147603586}
!6471 = !DILocation(line: 129, column: 1, scope: !6233)
!6472 = !{i64 2147603696, i64 2147603739, i64 2147603779}
!6473 = !DILocation(line: 130, column: 1, scope: !6233)
!6474 = !{i64 2147603922, i64 2147603965, i64 2147604005}
!6475 = !DILocation(line: 131, column: 1, scope: !6233)
!6476 = !{i64 2147604136, i64 2147604179, i64 2147604219}
!6477 = !DILocation(line: 132, column: 1, scope: !6233)
!6478 = !{i64 2147604362, i64 2147604405, i64 2147604445}
!6479 = !DILocation(line: 133, column: 1, scope: !6233)
!6480 = !{i64 2147608640, i64 2147608683, i64 2147608723}
!6481 = !DILocation(line: 134, column: 1, scope: !6233)
!6482 = !{i64 2147608917, i64 2147608960, i64 2147609000}
!6483 = !DILocation(line: 135, column: 1, scope: !6233)
!6484 = !{i64 2147609143, i64 2147609186, i64 2147609226}
!6485 = !DILocation(line: 136, column: 1, scope: !6233)
!6486 = !{i64 2147609351, i64 2147609394, i64 2147609434}
!6487 = !DILocation(line: 137, column: 1, scope: !6233)
!6488 = !{i64 2147609547, i64 2147609590, i64 2147609630}
!6489 = !DILocation(line: 138, column: 1, scope: !6233)
!6490 = !{i64 2147609812, i64 2147609855, i64 2147609895}
!6491 = !DILocation(line: 139, column: 1, scope: !6233)
!6492 = !{i64 2147610026, i64 2147610069, i64 2147610109}
!6493 = !DILocation(line: 140, column: 1, scope: !6233)
!6494 = !{i64 2147610201, i64 2147610244, i64 2147610284}
!6495 = !DILocation(line: 141, column: 1, scope: !6233)
!6496 = !{i64 2147610455, i64 2147610498, i64 2147610538}
!6497 = !DILocation(line: 142, column: 1, scope: !6233)
!6498 = !{i64 2147610654, i64 2147610697, i64 2147610737}
!6499 = !DILocation(line: 143, column: 1, scope: !6233)
!6500 = !{i64 2147610896, i64 2147610939, i64 2147610979}
!6501 = !DILocation(line: 144, column: 1, scope: !6233)
!6502 = !{i64 2147611059, i64 2147611102, i64 2147611142}
!6503 = !DILocation(line: 145, column: 1, scope: !6233)
!6504 = !{i64 2147611246, i64 2147611289, i64 2147611329}
!6505 = !DILocation(line: 146, column: 1, scope: !6233)
!6506 = !{i64 2147611454, i64 2147611497, i64 2147611537}
!6507 = !DILocation(line: 147, column: 1, scope: !6233)
!6508 = !{i64 2147611650, i64 2147611693, i64 2147611733}
!6509 = !DILocation(line: 148, column: 1, scope: !6233)
!6510 = !{i64 2147611843, i64 2147611886, i64 2147611926}
!6511 = !DILocation(line: 149, column: 1, scope: !6233)
!6512 = !{i64 2147612026, i64 2147612069, i64 2147612109}
!6513 = !DILocation(line: 150, column: 1, scope: !6233)
!6514 = !{i64 2147612240, i64 2147612283, i64 2147612323}
!6515 = !DILocation(line: 151, column: 1, scope: !6233)
!6516 = !{i64 2147612451, i64 2147612494, i64 2147612534}
!6517 = !DILocation(line: 152, column: 1, scope: !6233)
!6518 = !{i64 2147612671, i64 2147612714, i64 2147612754}
!6519 = !DILocation(line: 153, column: 1, scope: !6233)
!6520 = !{i64 2147612878, i64 2147612921, i64 2147612961}
!6521 = !DILocation(line: 154, column: 1, scope: !6233)
!6522 = !{i64 2147613151, i64 2147613194, i64 2147613234}
!6523 = !DILocation(line: 155, column: 1, scope: !6233)
!6524 = !{i64 2147613399, i64 2147613442, i64 2147613482}
!6525 = !DILocation(line: 156, column: 1, scope: !6233)
!6526 = !{i64 2147613598, i64 2147613641, i64 2147613681}
!6527 = !DILocation(line: 157, column: 1, scope: !6233)
!6528 = !{i64 2147613833, i64 2147613876, i64 2147613916}
!6529 = !DILocation(line: 158, column: 1, scope: !6233)
!6530 = !{i64 2147614083, i64 2147614126, i64 2147614166}
!6531 = !DILocation(line: 159, column: 1, scope: !6233)
!6532 = !{i64 2147614285, i64 2147614328, i64 2147614368}
!6533 = !DILocation(line: 160, column: 1, scope: !6233)
!6534 = !{i64 2147614508, i64 2147614551, i64 2147614591}
!6535 = !DILocation(line: 161, column: 1, scope: !6233)
!6536 = !{i64 2147614722, i64 2147614765, i64 2147614805}
!6537 = !DILocation(line: 162, column: 1, scope: !6233)
!6538 = !{i64 2147614966, i64 2147615009, i64 2147615049}
!6539 = !DILocation(line: 163, column: 1, scope: !6233)
!6540 = !{i64 2147615195, i64 2147615238, i64 2147615278}
!6541 = !DILocation(line: 164, column: 1, scope: !6233)
!6542 = !{i64 2147615424, i64 2147615467, i64 2147615507}
!6543 = !DILocation(line: 165, column: 1, scope: !6233)
!6544 = !{i64 2147615632, i64 2147615675, i64 2147615715}
!6545 = !DILocation(line: 166, column: 1, scope: !6233)
!6546 = !{i64 2147615870, i64 2147615913, i64 2147615953}
!6547 = !DILocation(line: 167, column: 1, scope: !6233)
!6548 = !{i64 2147616096, i64 2147616139, i64 2147616179}
!6549 = !DILocation(line: 168, column: 1, scope: !6233)
!6550 = !{i64 2147616355, i64 2147616398, i64 2147616438}
!6551 = !DILocation(line: 169, column: 1, scope: !6233)
!6552 = !{i64 2147616575, i64 2147616618, i64 2147616658}
!6553 = !DILocation(line: 170, column: 1, scope: !6233)
!6554 = !{i64 2147616807, i64 2147616850, i64 2147616890}
!6555 = !DILocation(line: 171, column: 1, scope: !6233)
!6556 = !{i64 2147617048, i64 2147617091, i64 2147617131}
!6557 = !DILocation(line: 172, column: 1, scope: !6233)
!6558 = !{i64 2147621350, i64 2147621393, i64 2147621433}
!6559 = !DILocation(line: 173, column: 1, scope: !6233)
!6560 = !{i64 2147621573, i64 2147621616, i64 2147621656}
!6561 = !DILocation(line: 174, column: 1, scope: !6233)
!6562 = !{i64 2147621790, i64 2147621833, i64 2147621873}
!6563 = !DILocation(line: 175, column: 1, scope: !6233)
!6564 = !{i64 2147622031, i64 2147622074, i64 2147622114}
!6565 = !DILocation(line: 176, column: 1, scope: !6233)
!6566 = !{i64 2147622218, i64 2147622261, i64 2147622301}
!6567 = !DILocation(line: 177, column: 1, scope: !6233)
!6568 = !{i64 2147622405, i64 2147622448, i64 2147622488}
!6569 = !DILocation(line: 178, column: 1, scope: !6233)
!6570 = !{i64 2147622568, i64 2147622611, i64 2147622651}
!6571 = !DILocation(line: 179, column: 1, scope: !6233)
!6572 = !{i64 2147622773, i64 2147622816, i64 2147622856}
!6573 = !DILocation(line: 180, column: 1, scope: !6233)
!6574 = !{i64 2147622966, i64 2147623009, i64 2147623049}
!6575 = !DILocation(line: 181, column: 1, scope: !6233)
!6576 = !{i64 2147623225, i64 2147623268, i64 2147623308}
!6577 = !DILocation(line: 182, column: 1, scope: !6233)
!6578 = !{i64 2147623448, i64 2147623491, i64 2147623531}
!6579 = !DILocation(line: 183, column: 1, scope: !6233)
!6580 = !{i64 2147623677, i64 2147623720, i64 2147623760}
!6581 = !DILocation(line: 184, column: 1, scope: !6233)
!6582 = !{i64 2147623891, i64 2147623934, i64 2147623974}
!6583 = !DILocation(line: 185, column: 1, scope: !6233)
!6584 = !{i64 2147624093, i64 2147624136, i64 2147624176}
!6585 = !DILocation(line: 186, column: 1, scope: !6233)
!6586 = !{i64 2147624289, i64 2147624332, i64 2147624372}
!6587 = !DILocation(line: 187, column: 1, scope: !6233)
!6588 = !{i64 2147624501, i64 2147624544, i64 2147624584}
!6589 = !DILocation(line: 188, column: 1, scope: !6233)
!6590 = !{i64 2147624722, i64 2147624765, i64 2147624805}
!6591 = !DILocation(line: 189, column: 1, scope: !6233)
!6592 = !{i64 2147624936, i64 2147624979, i64 2147625019}
!6593 = !DILocation(line: 190, column: 1, scope: !6233)
!6594 = !{i64 2147625126, i64 2147625169, i64 2147625209}
!6595 = !DILocation(line: 191, column: 1, scope: !6233)
!6596 = !{i64 2147625325, i64 2147625368, i64 2147625408}
!6597 = !DILocation(line: 192, column: 1, scope: !6233)
!6598 = !{i64 2147625530, i64 2147625573, i64 2147625613}
!6599 = !DILocation(line: 193, column: 1, scope: !6233)
!6600 = !{i64 2147625750, i64 2147625793, i64 2147625833}
!6601 = !DILocation(line: 194, column: 1, scope: !6233)
!6602 = !{i64 2147625951, i64 2147625994, i64 2147626034}
!6603 = !DILocation(line: 195, column: 1, scope: !6233)
!6604 = !{i64 2147626150, i64 2147626193, i64 2147626233}
!6605 = !DILocation(line: 196, column: 1, scope: !6233)
!6606 = !{i64 2147626355, i64 2147626398, i64 2147626438}
!6607 = !DILocation(line: 197, column: 1, scope: !6233)
!6608 = !{i64 2147626524, i64 2147626567, i64 2147626607}
!6609 = !DILocation(line: 198, column: 1, scope: !6233)
!6610 = !{i64 2147626708, i64 2147626751, i64 2147626791}
!6611 = !DILocation(line: 199, column: 1, scope: !6233)
!6612 = !{i64 2147626892, i64 2147626935, i64 2147626975}
!6613 = !DILocation(line: 200, column: 1, scope: !6233)
!6614 = !{i64 2147627079, i64 2147627122, i64 2147627162}
!6615 = !DILocation(line: 201, column: 1, scope: !6233)
!6616 = !{i64 2147627263, i64 2147627306, i64 2147627346}
!6617 = !DILocation(line: 202, column: 1, scope: !6233)
!6618 = !{i64 2147627501, i64 2147627544, i64 2147627584}
!6619 = !DILocation(line: 203, column: 1, scope: !6233)
!6620 = !{i64 2147627731, i64 2147627774, i64 2147627814}
!6621 = !DILocation(line: 204, column: 1, scope: !6233)
!6622 = !{i64 2147627960, i64 2147628003, i64 2147628043}
!6623 = !DILocation(line: 205, column: 1, scope: !6233)
!6624 = !{i64 2147628147, i64 2147628190, i64 2147628230}
!6625 = !DILocation(line: 206, column: 1, scope: !6233)
!6626 = !{i64 2147628343, i64 2147628386, i64 2147628426}
!6627 = !DILocation(line: 207, column: 1, scope: !6233)
!6628 = !{i64 2147628551, i64 2147628594, i64 2147628634}
!6629 = !DILocation(line: 208, column: 1, scope: !6233)
!6630 = !{i64 2147628763, i64 2147628806, i64 2147628846}
!6631 = !DILocation(line: 209, column: 1, scope: !6233)
!6632 = !{i64 2147628962, i64 2147629005, i64 2147629045}
!6633 = !DILocation(line: 210, column: 1, scope: !6233)
!6634 = !{i64 2147629200, i64 2147629243, i64 2147629283}
!6635 = !DILocation(line: 211, column: 1, scope: !6233)
!6636 = !{i64 2147629396, i64 2147629439, i64 2147629479}
!6637 = !DILocation(line: 212, column: 1, scope: !6233)
!6638 = !{i64 2147629598, i64 2147629641, i64 2147629681}
!6639 = !DILocation(line: 213, column: 1, scope: !6233)
!6640 = !{i64 2147629791, i64 2147629834, i64 2147629874}
!6641 = !DILocation(line: 214, column: 1, scope: !6233)
!6642 = !{i64 2147630025, i64 2147630068, i64 2147630108}
!6643 = !DILocation(line: 215, column: 1, scope: !6233)
!6644 = !{i64 2147630188, i64 2147630231, i64 2147630271}
!6645 = !DILocation(line: 216, column: 1, scope: !6233)
!6646 = !{i64 2147634488, i64 2147634531, i64 2147634571}
!6647 = !DILocation(line: 217, column: 1, scope: !6233)
!6648 = !{i64 2147634727, i64 2147634770, i64 2147634810}
!6649 = !DILocation(line: 218, column: 1, scope: !6233)
!6650 = !{i64 2147634963, i64 2147635006, i64 2147635046}
!6651 = !DILocation(line: 219, column: 1, scope: !6233)
!6652 = !{i64 2147635193, i64 2147635236, i64 2147635276}
!6653 = !DILocation(line: 220, column: 1, scope: !6233)
!6654 = !{i64 2147635380, i64 2147635423, i64 2147635463}
!6655 = !DILocation(line: 221, column: 1, scope: !6233)
!6656 = !{i64 2147635579, i64 2147635622, i64 2147635662}
!6657 = !DILocation(line: 222, column: 1, scope: !6233)
!6658 = !{i64 2147635850, i64 2147635893, i64 2147635933}
!6659 = !DILocation(line: 223, column: 1, scope: !6233)
!6660 = !{i64 2147636025, i64 2147636068, i64 2147636108}
!6661 = !DILocation(line: 224, column: 1, scope: !6233)
!6662 = !{i64 2147636259, i64 2147636302, i64 2147636342}
!6663 = !DILocation(line: 225, column: 1, scope: !6233)
!6664 = !{i64 2147636467, i64 2147636510, i64 2147636550}
!6665 = !DILocation(line: 226, column: 1, scope: !6233)
!6666 = !{i64 2147636685, i64 2147636728, i64 2147636768}
!6667 = !DILocation(line: 227, column: 1, scope: !6233)
!6668 = !{i64 2147636875, i64 2147636918, i64 2147636958}
!6669 = !DILocation(line: 228, column: 1, scope: !6233)
!6670 = !{i64 2147637107, i64 2147637150, i64 2147637190}
!6671 = !DILocation(line: 229, column: 1, scope: !6233)
!6672 = !{i64 2147637327, i64 2147637370, i64 2147637410}
!6673 = !DILocation(line: 230, column: 1, scope: !6233)
!6674 = !{i64 2147637523, i64 2147637566, i64 2147637606}
!6675 = !DILocation(line: 231, column: 1, scope: !6233)
!6676 = !{i64 2147637729, i64 2147637772, i64 2147637812}
!6677 = !DILocation(line: 232, column: 1, scope: !6233)
!6678 = !{i64 2147637934, i64 2147637977, i64 2147638017}
!6679 = !DILocation(line: 233, column: 1, scope: !6233)
!6680 = !{i64 2147638148, i64 2147638191, i64 2147638231}
!6681 = !DILocation(line: 234, column: 1, scope: !6233)
!6682 = !{i64 2147638374, i64 2147638417, i64 2147638457}
!6683 = !DILocation(line: 235, column: 1, scope: !6233)
!6684 = !{i64 2147638582, i64 2147638625, i64 2147638665}
!6685 = !DILocation(line: 236, column: 1, scope: !6233)
!6686 = !{i64 2147638778, i64 2147638821, i64 2147638861}
!6687 = !DILocation(line: 237, column: 1, scope: !6233)
!6688 = !{i64 2147639010, i64 2147639053, i64 2147639093}
!6689 = !DILocation(line: 238, column: 1, scope: !6233)
!6690 = !{i64 2147639194, i64 2147639237, i64 2147639277}
!6691 = !DILocation(line: 239, column: 1, scope: !6233)
!6692 = !{i64 2147639403, i64 2147639446, i64 2147639486}
!6693 = !DILocation(line: 240, column: 1, scope: !6233)
!6694 = !{i64 2147639611, i64 2147639654, i64 2147639694}
!6695 = !DILocation(line: 241, column: 1, scope: !6233)
!6696 = !{i64 2147639807, i64 2147639850, i64 2147639890}
!6697 = !DILocation(line: 242, column: 1, scope: !6233)
!6698 = !{i64 2147639991, i64 2147640034, i64 2147640074}
!6699 = !DILocation(line: 243, column: 1, scope: !6233)
!6700 = !{i64 2147640217, i64 2147640260, i64 2147640300}
!6701 = !DILocation(line: 244, column: 1, scope: !6233)
!6702 = !{i64 2147640443, i64 2147640486, i64 2147640526}
!6703 = !DILocation(line: 245, column: 1, scope: !6233)
!6704 = !{i64 2147640669, i64 2147640712, i64 2147640752}
!6705 = !DILocation(line: 246, column: 1, scope: !6233)
!6706 = !{i64 2147640895, i64 2147640938, i64 2147640978}
!6707 = !DILocation(line: 247, column: 1, scope: !6233)
!6708 = !{i64 2147641121, i64 2147641164, i64 2147641204}
!6709 = !DILocation(line: 248, column: 1, scope: !6233)
!6710 = !{i64 2147641353, i64 2147641396, i64 2147641436}
!6711 = !DILocation(line: 249, column: 1, scope: !6233)
!6712 = !{i64 2147641591, i64 2147641634, i64 2147641674}
!6713 = !DILocation(line: 250, column: 1, scope: !6233)
!6714 = !{i64 2147641811, i64 2147641854, i64 2147641894}
!6715 = !DILocation(line: 251, column: 1, scope: !6233)
!6716 = !{i64 2147642055, i64 2147642098, i64 2147642138}
!6717 = !DILocation(line: 252, column: 1, scope: !6233)
!6718 = !{i64 2147642296, i64 2147642339, i64 2147642379}
!6719 = !DILocation(line: 253, column: 1, scope: !6233)
!6720 = !{i64 2147642531, i64 2147642574, i64 2147642614}
!6721 = !DILocation(line: 254, column: 1, scope: !6233)
!6722 = !{i64 2147642763, i64 2147642806, i64 2147642846}
!6723 = !DILocation(line: 255, column: 1, scope: !6233)
!6724 = !{i64 2147642965, i64 2147643008, i64 2147643048}
!6725 = !DILocation(line: 256, column: 1, scope: !6233)
!6726 = !{i64 2147647276, i64 2147647319, i64 2147647359}
!6727 = !DILocation(line: 257, column: 1, scope: !6233)
!6728 = !{i64 2147647514, i64 2147647557, i64 2147647597}
!6729 = !DILocation(line: 258, column: 1, scope: !6233)
!6730 = !{i64 2147647722, i64 2147647765, i64 2147647805}
!6731 = !DILocation(line: 259, column: 1, scope: !6233)
!6732 = !{i64 2147647918, i64 2147647961, i64 2147648001}
!6733 = !DILocation(line: 260, column: 1, scope: !6233)
!6734 = !{i64 2147648102, i64 2147648145, i64 2147648185}
!6735 = !DILocation(line: 261, column: 1, scope: !6233)
!6736 = !{i64 2147648319, i64 2147648362, i64 2147648402}
!6737 = !DILocation(line: 262, column: 1, scope: !6233)
!6738 = !{i64 2147648524, i64 2147648567, i64 2147648607}
!6739 = !DILocation(line: 263, column: 1, scope: !6233)
!6740 = !{i64 2147648759, i64 2147648802, i64 2147648842}
!6741 = !DILocation(line: 264, column: 1, scope: !6233)
!6742 = !{i64 2147648982, i64 2147649025, i64 2147649065}
!6743 = !DILocation(line: 265, column: 1, scope: !6233)
!6744 = !{i64 2147649206, i64 2147649249, i64 2147649289}
!6745 = !DILocation(line: 266, column: 1, scope: !6233)
!6746 = !{i64 2147649444, i64 2147649487, i64 2147649527}
!6747 = !DILocation(line: 267, column: 1, scope: !6233)
!6748 = !{i64 2147649682, i64 2147649725, i64 2147649765}
!6749 = !DILocation(line: 268, column: 1, scope: !6233)
!6750 = !{i64 2147649854, i64 2147649897, i64 2147649937}
!6751 = !DILocation(line: 269, column: 1, scope: !6233)
!6752 = !{i64 2147650069, i64 2147650112, i64 2147650152}
!6753 = !DILocation(line: 270, column: 1, scope: !6233)
!6754 = !{i64 2147650283, i64 2147650326, i64 2147650366}
!6755 = !DILocation(line: 271, column: 1, scope: !6233)
!6756 = !{i64 2147650485, i64 2147650528, i64 2147650568}
!6757 = !DILocation(line: 272, column: 1, scope: !6233)
!6758 = !{i64 2147650702, i64 2147650745, i64 2147650785}
!6759 = !DILocation(line: 273, column: 1, scope: !6233)
!6760 = !{i64 2147650955, i64 2147650998, i64 2147651038}
!6761 = !DILocation(line: 274, column: 1, scope: !6233)
!6762 = !{i64 2147651199, i64 2147651242, i64 2147651282}
!6763 = !DILocation(line: 275, column: 1, scope: !6233)
!6764 = !{i64 2147651416, i64 2147651459, i64 2147651499}
!6765 = !DILocation(line: 276, column: 1, scope: !6233)
!6766 = !{i64 2147651621, i64 2147651664, i64 2147651704}
!6767 = !DILocation(line: 277, column: 1, scope: !6233)
!6768 = !{i64 2147651814, i64 2147651857, i64 2147651897}
!6769 = !DILocation(line: 278, column: 1, scope: !6233)
!6770 = !{i64 2147652067, i64 2147652110, i64 2147652150}
!6771 = !DILocation(line: 279, column: 1, scope: !6233)
!6772 = !{i64 2147652275, i64 2147652318, i64 2147652358}
!6773 = !DILocation(line: 280, column: 1, scope: !6233)
!6774 = !{i64 2147652471, i64 2147652514, i64 2147652554}
!6775 = !DILocation(line: 281, column: 1, scope: !6233)
!6776 = !{i64 2147652685, i64 2147652728, i64 2147652768}
!6777 = !DILocation(line: 282, column: 1, scope: !6233)
!6778 = !{i64 2147652893, i64 2147652936, i64 2147652976}
!6779 = !DILocation(line: 283, column: 1, scope: !6233)
!6780 = !{i64 2147653083, i64 2147653126, i64 2147653166}
!6781 = !DILocation(line: 284, column: 1, scope: !6233)
!6782 = !{i64 2147653297, i64 2147653340, i64 2147653380}
!6783 = !DILocation(line: 285, column: 1, scope: !6233)
!6784 = !{i64 2147653559, i64 2147653602, i64 2147653642}
!6785 = !DILocation(line: 286, column: 1, scope: !6233)
!6786 = !{i64 2147653770, i64 2147653813, i64 2147653853}
!6787 = !DILocation(line: 287, column: 1, scope: !6233)
!6788 = !{i64 2147654014, i64 2147654057, i64 2147654097}
!6789 = !DILocation(line: 288, column: 1, scope: !6233)
!6790 = !{i64 2147654225, i64 2147654268, i64 2147654308}
!6791 = !DILocation(line: 289, column: 1, scope: !6233)
!6792 = !{i64 2147654454, i64 2147654497, i64 2147654537}
!6793 = !DILocation(line: 290, column: 1, scope: !6233)
!6794 = !{i64 2147654719, i64 2147654762, i64 2147654802}
!6795 = !DILocation(line: 291, column: 1, scope: !6233)
!6796 = !{i64 2147654924, i64 2147654967, i64 2147655007}
!6797 = !DILocation(line: 292, column: 1, scope: !6233)
!6798 = !{i64 2147655120, i64 2147655163, i64 2147655203}
!6799 = !DILocation(line: 293, column: 1, scope: !6233)
!6800 = !{i64 2147655343, i64 2147655386, i64 2147655426}
!6801 = !DILocation(line: 294, column: 1, scope: !6233)
!6802 = !{i64 2147655506, i64 2147655549, i64 2147655589}
!6803 = !DILocation(line: 295, column: 1, scope: !6233)
!6804 = !{i64 2147655711, i64 2147655754, i64 2147655794}
!6805 = !DILocation(line: 296, column: 1, scope: !6233)
!6806 = !{i64 2147659992, i64 2147660035, i64 2147660075}
!6807 = !DILocation(line: 297, column: 1, scope: !6233)
!6808 = !{i64 2147660206, i64 2147660249, i64 2147660289}
!6809 = !DILocation(line: 298, column: 1, scope: !6233)
!6810 = !{i64 2147660450, i64 2147660493, i64 2147660533}
!6811 = !DILocation(line: 299, column: 1, scope: !6233)
!6812 = !{i64 2147660682, i64 2147660725, i64 2147660765}
!6813 = !DILocation(line: 300, column: 1, scope: !6233)
!6814 = !{i64 2147660896, i64 2147660939, i64 2147660979}
!6815 = !DILocation(line: 301, column: 1, scope: !6233)
!6816 = !{i64 2147661107, i64 2147661150, i64 2147661190}
!6817 = !DILocation(line: 302, column: 1, scope: !6233)
!6818 = !{i64 2147661300, i64 2147661343, i64 2147661383}
!6819 = !DILocation(line: 303, column: 1, scope: !6233)
!6820 = !{i64 2147661499, i64 2147661542, i64 2147661582}
!6821 = !DILocation(line: 304, column: 1, scope: !6233)
!6822 = !{i64 2147661671, i64 2147661714, i64 2147661754}
!6823 = !DILocation(line: 305, column: 1, scope: !6233)
!6824 = !{i64 2147661864, i64 2147661907, i64 2147661947}
!6825 = !DILocation(line: 306, column: 1, scope: !6233)
!6826 = !{i64 2147662060, i64 2147662103, i64 2147662143}
!6827 = !DILocation(line: 307, column: 1, scope: !6233)
!6828 = !{i64 2147662223, i64 2147662266, i64 2147662306}
!6829 = !DILocation(line: 308, column: 1, scope: !6233)
!6830 = !{i64 2147662425, i64 2147662468, i64 2147662508}
!6831 = !DILocation(line: 309, column: 1, scope: !6233)
!6832 = !{i64 2147662630, i64 2147662673, i64 2147662713}
!6833 = !DILocation(line: 310, column: 1, scope: !6233)
!6834 = !{i64 2147662838, i64 2147662881, i64 2147662921}
!6835 = !DILocation(line: 311, column: 1, scope: !6233)
!6836 = !{i64 2147663031, i64 2147663074, i64 2147663114}
!6837 = !DILocation(line: 312, column: 1, scope: !6233)
!6838 = !{i64 2147663218, i64 2147663261, i64 2147663301}
!6839 = !DILocation(line: 313, column: 1, scope: !6233)
!6840 = !{i64 2147663445, i64 2147663488, i64 2147663528}
!6841 = !DILocation(line: 314, column: 1, scope: !6233)
!6842 = !{i64 2147663662, i64 2147663705, i64 2147663745}
!6843 = !DILocation(line: 315, column: 1, scope: !6233)
!6844 = !{i64 2147663954, i64 2147663997, i64 2147664037}
!6845 = !DILocation(line: 316, column: 1, scope: !6233)
!6846 = !{i64 2147664186, i64 2147664229, i64 2147664269}
!6847 = !DILocation(line: 317, column: 1, scope: !6233)
!6848 = !{i64 2147664403, i64 2147664446, i64 2147664486}
!6849 = !DILocation(line: 318, column: 1, scope: !6233)
!6850 = !{i64 2147664610, i64 2147664653, i64 2147664693}
!6851 = !DILocation(line: 319, column: 1, scope: !6233)
!6852 = !{i64 2147664811, i64 2147664854, i64 2147664894}
!6853 = !DILocation(line: 320, column: 1, scope: !6233)
!6854 = !{i64 2147665043, i64 2147665086, i64 2147665126}
!6855 = !DILocation(line: 321, column: 1, scope: !6233)
!6856 = !{i64 2147665251, i64 2147665294, i64 2147665334}
!6857 = !DILocation(line: 322, column: 1, scope: !6233)
!6858 = !{i64 2147665441, i64 2147665484, i64 2147665524}
!6859 = !DILocation(line: 323, column: 1, scope: !6233)
!6860 = !{i64 2147665667, i64 2147665710, i64 2147665750}
!6861 = !DILocation(line: 324, column: 1, scope: !6233)
!6862 = !{i64 2147665856, i64 2147665899, i64 2147665939}
!6863 = !DILocation(line: 325, column: 1, scope: !6233)
!6864 = !{i64 2147666127, i64 2147666170, i64 2147666210}
!6865 = !DILocation(line: 326, column: 1, scope: !6233)
!6866 = !{i64 2147666347, i64 2147666390, i64 2147666430}
!6867 = !DILocation(line: 327, column: 1, scope: !6233)
!6868 = !{i64 2147666600, i64 2147666643, i64 2147666683}
!6869 = !DILocation(line: 328, column: 1, scope: !6233)
!6870 = !{i64 2147666808, i64 2147666851, i64 2147666891}
!6871 = !DILocation(line: 329, column: 1, scope: !6233)
!6872 = !{i64 2147667040, i64 2147667083, i64 2147667123}
!6873 = !DILocation(line: 330, column: 1, scope: !6233)
!6874 = !{i64 2147667251, i64 2147667294, i64 2147667334}
!6875 = !DILocation(line: 331, column: 1, scope: !6233)
!6876 = !{i64 2147667441, i64 2147667484, i64 2147667524}
!6877 = !DILocation(line: 332, column: 1, scope: !6233)
!6878 = !{i64 2147667655, i64 2147667698, i64 2147667738}
!6879 = !DILocation(line: 333, column: 1, scope: !6233)
!6880 = !{i64 2147667854, i64 2147667897, i64 2147667937}
!6881 = !DILocation(line: 334, column: 1, scope: !6233)
!6882 = !{i64 2147668041, i64 2147668084, i64 2147668124}
!6883 = !DILocation(line: 335, column: 1, scope: !6233)
!6884 = !{i64 2147668249, i64 2147668292, i64 2147668332}
!6885 = !DILocation(line: 336, column: 1, scope: !6233)
!6886 = !{i64 2147668478, i64 2147668521, i64 2147668561}
!6887 = !DILocation(line: 337, column: 1, scope: !6233)
!6888 = !{i64 2147668680, i64 2147668723, i64 2147668763}
!6889 = !DILocation(line: 338, column: 1, scope: !6233)
!6890 = !{i64 2147672940, i64 2147672983, i64 2147673023}
!6891 = !DILocation(line: 339, column: 1, scope: !6233)
!6892 = !{i64 2147673130, i64 2147673173, i64 2147673213}
!6893 = !DILocation(line: 340, column: 1, scope: !6233)
!6894 = !{i64 2147673347, i64 2147673390, i64 2147673430}
!6895 = !DILocation(line: 342, column: 1, scope: !6233)
!6896 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !431, file: !431, line: 30, type: !438, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6897)
!6897 = !{!6898, !6899}
!6898 = !DILocalVariable(name: "arg", arg: 1, scope: !6896, file: !431, line: 30, type: !440)
!6899 = !DILocalVariable(name: "key", scope: !6896, file: !431, line: 32, type: !208)
!6900 = !DILocation(line: 0, scope: !6896)
!6901 = !DILocation(line: 37, column: 2, scope: !6896)
!6902 = !DILocation(line: 38, column: 2, scope: !6896)
!6903 = !DILocation(line: 55, column: 2, scope: !6904, inlinedAt: !6911)
!6904 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6908)
!6905 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!32}
!6908 = !{!6909, !6910}
!6909 = !DILocalVariable(name: "key", scope: !6904, file: !6905, line: 44, type: !32)
!6910 = !DILocalVariable(name: "tmp", scope: !6904, file: !6905, line: 53, type: !32)
!6911 = distinct !DILocation(line: 40, column: 8, scope: !6896)
!6912 = !{i64 2186356}
!6913 = !DILocation(line: 0, scope: !6904, inlinedAt: !6911)
!6914 = !DILocalVariable(name: "key", arg: 1, scope: !6915, file: !6905, line: 84, type: !32)
!6915 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6918)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{null, !32}
!6918 = !{!6914}
!6919 = !DILocation(line: 0, scope: !6915, inlinedAt: !6920)
!6920 = distinct !DILocation(line: 47, column: 2, scope: !6896)
!6921 = !DILocation(line: 95, column: 2, scope: !6915, inlinedAt: !6920)
!6922 = !{i64 2187173}
!6923 = !DILocation(line: 51, column: 18, scope: !6896)
!6924 = !DILocation(line: 53, column: 2, scope: !6896)
!6925 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6926, file: !6926, line: 1609, type: !3363, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6926 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6927 = !DILocation(line: 1611, column: 3, scope: !6925)
!6928 = !DILocation(line: 1612, column: 1, scope: !6925)
!6929 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6926, file: !6926, line: 1629, type: !3363, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6930 = !DILocation(line: 1631, column: 3, scope: !6929)
!6931 = !DILocation(line: 1632, column: 1, scope: !6929)
!6932 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !461, file: !461, line: 26, type: !467, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !6933)
!6933 = !{!6934}
!6934 = !DILocalVariable(name: "dev", arg: 1, scope: !6932, file: !461, line: 26, type: !469)
!6935 = !DILocation(line: 0, scope: !6932)
!6936 = !DILocation(line: 68, column: 2, scope: !6932)
!6937 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6938, file: !6938, line: 14, type: !5213, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !6939)
!6938 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6939 = !{!6940, !6941}
!6940 = !DILocalVariable(name: "fmt", arg: 1, scope: !6937, file: !6938, line: 14, type: !140)
!6941 = !DILocalVariable(name: "ap", scope: !6937, file: !6938, line: 16, type: !6942)
!6942 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4281, line: 99, baseType: !6943)
!6943 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4281, line: 40, baseType: !6944)
!6944 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6938, baseType: !6945)
!6945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6946)
!6946 = !{!6947}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6945, file: !6938, line: 16, baseType: !124, size: 32)
!6948 = !DILocation(line: 0, scope: !6937)
!6949 = !DILocation(line: 16, column: 2, scope: !6937)
!6950 = !DILocation(line: 16, column: 10, scope: !6937)
!6951 = !DILocation(line: 18, column: 2, scope: !6937)
!6952 = !DILocation(line: 19, column: 2, scope: !6937)
!6953 = !DILocation(line: 20, column: 2, scope: !6937)
!6954 = !DILocation(line: 21, column: 1, scope: !6937)
!6955 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6938, file: !6938, line: 23, type: !6956, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !6958)
!6956 = !DISubroutineType(types: !6957)
!6957 = !{null, !140, !6942}
!6958 = !{!6959, !6960}
!6959 = !DILocalVariable(name: "fmt", arg: 1, scope: !6955, file: !6938, line: 23, type: !140)
!6960 = !DILocalVariable(name: "ap", arg: 2, scope: !6955, file: !6938, line: 23, type: !6942)
!6961 = !DILocation(line: 0, scope: !6955)
!6962 = !DILocation(line: 25, column: 2, scope: !6955)
!6963 = !DILocation(line: 26, column: 1, scope: !6955)
!6964 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6938, file: !6938, line: 52, type: !6965, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !6967)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{null, !125, !13, !272}
!6967 = !{!6968, !6969, !6970, !6971}
!6968 = !DILocalVariable(name: "level", arg: 1, scope: !6964, file: !6938, line: 52, type: !125)
!6969 = !DILocalVariable(name: "data", arg: 2, scope: !6964, file: !6938, line: 52, type: !13)
!6970 = !DILocalVariable(name: "size", arg: 3, scope: !6964, file: !6938, line: 52, type: !272)
!6971 = !DILocalVariable(name: "data_buffer", scope: !6964, file: !6938, line: 54, type: !140)
!6972 = !DILocation(line: 0, scope: !6964)
!6973 = !DILocation(line: 55, column: 14, scope: !6964)
!6974 = !DILocation(line: 55, column: 2, scope: !6964)
!6975 = !DILocation(line: 56, column: 3, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6964, file: !6938, line: 55, column: 20)
!6977 = !DILocation(line: 57, column: 3, scope: !6976)
!6978 = !DILocation(line: 59, column: 7, scope: !6976)
!6979 = distinct !{!6979, !6974, !6980}
!6980 = !DILocation(line: 65, column: 2, scope: !6964)
!6981 = !DILocation(line: 66, column: 1, scope: !6964)
!6982 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3527, file: !3527, line: 175, type: !3528, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !6983)
!6983 = !{!6984}
!6984 = !DILocalVariable(name: "level", arg: 1, scope: !6982, file: !3527, line: 175, type: !125)
!6985 = !DILocation(line: 0, scope: !6982)
!6986 = !DILocation(line: 177, column: 2, scope: !6982)
!6987 = !DILocation(line: 189, column: 1, scope: !6982)
!6988 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6938, file: !6938, line: 28, type: !6989, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{null, !140, !272}
!6991 = !{!6992, !6993, !6994, !6996, !6998}
!6992 = !DILocalVariable(name: "data", arg: 1, scope: !6988, file: !6938, line: 28, type: !140)
!6993 = !DILocalVariable(name: "length", arg: 2, scope: !6988, file: !6938, line: 28, type: !272)
!6994 = !DILocalVariable(name: "i", scope: !6995, file: !6938, line: 30, type: !272)
!6995 = distinct !DILexicalBlock(scope: !6988, file: !6938, line: 30, column: 2)
!6996 = !DILocalVariable(name: "i", scope: !6997, file: !6938, line: 40, type: !272)
!6997 = distinct !DILexicalBlock(scope: !6988, file: !6938, line: 40, column: 2)
!6998 = !DILocalVariable(name: "c", scope: !6999, file: !6938, line: 42, type: !151)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6938, line: 41, column: 19)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6938, line: 41, column: 7)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6938, line: 40, column: 54)
!7002 = distinct !DILexicalBlock(scope: !6997, file: !6938, line: 40, column: 2)
!7003 = !DILocation(line: 0, scope: !6988)
!7004 = !DILocation(line: 0, scope: !6995)
!7005 = !DILocation(line: 30, column: 2, scope: !6995)
!7006 = !DILocation(line: 38, column: 2, scope: !6988)
!7007 = !DILocation(line: 0, scope: !6997)
!7008 = !DILocation(line: 40, column: 2, scope: !6997)
!7009 = !DILocation(line: 31, column: 9, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6938, line: 31, column: 7)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6938, line: 30, column: 54)
!7012 = distinct !DILexicalBlock(scope: !6995, file: !6938, line: 30, column: 2)
!7013 = !DILocation(line: 31, column: 7, scope: !7011)
!7014 = !DILocation(line: 32, column: 35, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7010, file: !6938, line: 31, column: 19)
!7016 = !DILocation(line: 32, column: 20, scope: !7015)
!7017 = !DILocation(line: 32, column: 4, scope: !7015)
!7018 = !DILocation(line: 33, column: 3, scope: !7015)
!7019 = !DILocation(line: 34, column: 4, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7010, file: !6938, line: 33, column: 10)
!7021 = !DILocation(line: 30, column: 50, scope: !7012)
!7022 = !DILocation(line: 30, column: 24, scope: !7012)
!7023 = distinct !{!7023, !7005, !7024}
!7024 = !DILocation(line: 36, column: 2, scope: !6995)
!7025 = !DILocation(line: 49, column: 2, scope: !6988)
!7026 = !DILocation(line: 50, column: 1, scope: !6988)
!7027 = !DILocation(line: 41, column: 9, scope: !7000)
!7028 = !DILocation(line: 41, column: 7, scope: !7001)
!7029 = !DILocation(line: 42, column: 22, scope: !6999)
!7030 = !DILocation(line: 0, scope: !6999)
!7031 = !DILocation(line: 44, column: 25, scope: !6999)
!7032 = !DILocation(line: 44, column: 17, scope: !6999)
!7033 = !DILocation(line: 44, column: 33, scope: !6999)
!7034 = !DILocation(line: 44, column: 4, scope: !6999)
!7035 = !DILocation(line: 45, column: 3, scope: !6999)
!7036 = !DILocation(line: 46, column: 4, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7000, file: !6938, line: 45, column: 10)
!7038 = !DILocation(line: 40, column: 50, scope: !7002)
!7039 = !DILocation(line: 40, column: 24, scope: !7002)
!7040 = distinct !{!7040, !7008, !7041}
!7041 = !DILocation(line: 48, column: 2, scope: !6997)
!7042 = distinct !DISubprogram(name: "isprint", scope: !6006, file: !6006, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !7043)
!7043 = !{!7044}
!7044 = !DILocalVariable(name: "c", arg: 1, scope: !7042, file: !6006, line: 37, type: !125)
!7045 = !DILocation(line: 0, scope: !7042)
!7046 = !DILocation(line: 39, column: 38, scope: !7042)
!7047 = !DILocation(line: 39, column: 2, scope: !7042)
!7048 = distinct !DISubprogram(name: "_copy", scope: !7049, file: !7049, line: 40, type: !7050, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7052)
!7049 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!32, !184, !32, !490, !32}
!7052 = !{!7053, !7054, !7055, !7056}
!7053 = !DILocalVariable(name: "to", arg: 1, scope: !7048, file: !7049, line: 40, type: !184)
!7054 = !DILocalVariable(name: "to_len", arg: 2, scope: !7048, file: !7049, line: 40, type: !32)
!7055 = !DILocalVariable(name: "from", arg: 3, scope: !7048, file: !7049, line: 41, type: !490)
!7056 = !DILocalVariable(name: "from_len", arg: 4, scope: !7048, file: !7049, line: 41, type: !32)
!7057 = !DILocation(line: 0, scope: !7048)
!7058 = !DILocation(line: 43, column: 15, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7048, file: !7049, line: 43, column: 6)
!7060 = !DILocation(line: 43, column: 6, scope: !7048)
!7061 = !DILocation(line: 44, column: 9, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7059, file: !7049, line: 43, column: 26)
!7063 = !DILocation(line: 45, column: 3, scope: !7062)
!7064 = !DILocation(line: 0, scope: !7059)
!7065 = !DILocation(line: 49, column: 1, scope: !7048)
!7066 = distinct !DISubprogram(name: "_set", scope: !7049, file: !7049, line: 51, type: !7067, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7069)
!7067 = !DISubroutineType(types: !7068)
!7068 = !{null, !124, !150, !32}
!7069 = !{!7070, !7071, !7072}
!7070 = !DILocalVariable(name: "to", arg: 1, scope: !7066, file: !7049, line: 51, type: !124)
!7071 = !DILocalVariable(name: "val", arg: 2, scope: !7066, file: !7049, line: 51, type: !150)
!7072 = !DILocalVariable(name: "len", arg: 3, scope: !7066, file: !7049, line: 51, type: !32)
!7073 = !DILocation(line: 0, scope: !7066)
!7074 = !DILocation(line: 53, column: 19, scope: !7066)
!7075 = !DILocation(line: 53, column: 8, scope: !7066)
!7076 = !DILocation(line: 54, column: 1, scope: !7066)
!7077 = distinct !DISubprogram(name: "_double_byte", scope: !7049, file: !7049, line: 59, type: !7078, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{!150, !150}
!7080 = !{!7081}
!7081 = !DILocalVariable(name: "a", arg: 1, scope: !7077, file: !7049, line: 59, type: !150)
!7082 = !DILocation(line: 0, scope: !7077)
!7083 = !DILocation(line: 61, column: 12, scope: !7077)
!7084 = !DILocation(line: 61, column: 27, scope: !7077)
!7085 = !DILocation(line: 61, column: 17, scope: !7077)
!7086 = !DILocation(line: 61, column: 2, scope: !7077)
!7087 = distinct !DISubprogram(name: "_compare", scope: !7049, file: !7049, line: 64, type: !7088, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7090)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{!125, !490, !490, !272}
!7090 = !{!7091, !7092, !7093, !7094, !7095, !7096, !7097}
!7091 = !DILocalVariable(name: "a", arg: 1, scope: !7087, file: !7049, line: 64, type: !490)
!7092 = !DILocalVariable(name: "b", arg: 2, scope: !7087, file: !7049, line: 64, type: !490)
!7093 = !DILocalVariable(name: "size", arg: 3, scope: !7087, file: !7049, line: 64, type: !272)
!7094 = !DILocalVariable(name: "tempa", scope: !7087, file: !7049, line: 66, type: !490)
!7095 = !DILocalVariable(name: "tempb", scope: !7087, file: !7049, line: 67, type: !490)
!7096 = !DILocalVariable(name: "result", scope: !7087, file: !7049, line: 68, type: !150)
!7097 = !DILocalVariable(name: "i", scope: !7098, file: !7049, line: 70, type: !32)
!7098 = distinct !DILexicalBlock(scope: !7087, file: !7049, line: 70, column: 2)
!7099 = !DILocation(line: 0, scope: !7087)
!7100 = !DILocation(line: 0, scope: !7098)
!7101 = !DILocation(line: 70, column: 29, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7098, file: !7049, line: 70, column: 2)
!7103 = !DILocation(line: 70, column: 2, scope: !7098)
!7104 = !DILocation(line: 73, column: 2, scope: !7087)
!7105 = !DILocation(line: 71, column: 13, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7102, file: !7049, line: 70, column: 42)
!7107 = !DILocation(line: 71, column: 24, scope: !7106)
!7108 = !DILocation(line: 71, column: 22, scope: !7106)
!7109 = !DILocation(line: 71, column: 10, scope: !7106)
!7110 = !DILocation(line: 70, column: 38, scope: !7102)
!7111 = distinct !{!7111, !7103, !7112}
!7112 = !DILocation(line: 72, column: 2, scope: !7098)
!7113 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !501, file: !501, line: 62, type: !7114, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7116)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{!125, !491, !490}
!7116 = !{!7117, !7118}
!7117 = !DILocalVariable(name: "s", arg: 1, scope: !7113, file: !501, line: 62, type: !491)
!7118 = !DILocalVariable(name: "k", arg: 2, scope: !7113, file: !501, line: 62, type: !490)
!7119 = !DILocation(line: 0, scope: !7113)
!7120 = !DILocation(line: 64, column: 9, scope: !7113)
!7121 = !DILocation(line: 64, column: 2, scope: !7113)
!7122 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !501, file: !501, line: 129, type: !7123, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7126)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!125, !184, !490, !7125}
!7125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!7126 = !{!7127, !7128, !7129, !7130, !7131}
!7127 = !DILocalVariable(name: "out", arg: 1, scope: !7122, file: !501, line: 129, type: !184)
!7128 = !DILocalVariable(name: "in", arg: 2, scope: !7122, file: !501, line: 129, type: !490)
!7129 = !DILocalVariable(name: "s", arg: 3, scope: !7122, file: !501, line: 129, type: !7125)
!7130 = !DILocalVariable(name: "state", scope: !7122, file: !501, line: 131, type: !311)
!7131 = !DILocalVariable(name: "i", scope: !7122, file: !501, line: 132, type: !32)
!7132 = !DILocation(line: 0, scope: !7122)
!7133 = !DILocation(line: 131, column: 2, scope: !7122)
!7134 = !DILocation(line: 131, column: 10, scope: !7122)
!7135 = !DILocation(line: 134, column: 10, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7122, file: !501, line: 134, column: 6)
!7137 = !DILocation(line: 134, column: 6, scope: !7122)
!7138 = !DILocation(line: 142, column: 8, scope: !7122)
!7139 = !DILocation(line: 144, column: 32, scope: !7122)
!7140 = !DILocation(line: 144, column: 2, scope: !7122)
!7141 = !DILocation(line: 146, column: 2, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7122, file: !501, line: 146, column: 2)
!7143 = !DILocation(line: 147, column: 3, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !501, line: 146, column: 31)
!7145 = distinct !DILexicalBlock(scope: !7142, file: !501, line: 146, column: 2)
!7146 = !DILocation(line: 148, column: 3, scope: !7144)
!7147 = !DILocation(line: 149, column: 37, scope: !7144)
!7148 = !DILocation(line: 149, column: 33, scope: !7144)
!7149 = !DILocation(line: 149, column: 3, scope: !7144)
!7150 = !DILocation(line: 150, column: 3, scope: !7144)
!7151 = !DILocation(line: 146, column: 26, scope: !7145)
!7152 = !DILocation(line: 146, column: 21, scope: !7145)
!7153 = distinct !{!7153, !7141, !7154}
!7154 = !DILocation(line: 151, column: 2, scope: !7142)
!7155 = !DILocation(line: 144, column: 23, scope: !7122)
!7156 = !DILocation(line: 153, column: 2, scope: !7122)
!7157 = !DILocation(line: 154, column: 2, scope: !7122)
!7158 = !DILocation(line: 155, column: 2, scope: !7122)
!7159 = !DILocation(line: 157, column: 8, scope: !7122)
!7160 = !DILocation(line: 160, column: 2, scope: !7122)
!7161 = !DILocation(line: 163, column: 2, scope: !7122)
!7162 = !DILocation(line: 164, column: 1, scope: !7122)
!7163 = distinct !DISubprogram(name: "add_round_key", scope: !501, file: !501, line: 92, type: !7164, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7167)
!7164 = !DISubroutineType(types: !7165)
!7165 = !{null, !184, !7166}
!7166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 32)
!7167 = !{!7168, !7169}
!7168 = !DILocalVariable(name: "s", arg: 1, scope: !7163, file: !501, line: 92, type: !184)
!7169 = !DILocalVariable(name: "k", arg: 2, scope: !7163, file: !501, line: 92, type: !7166)
!7170 = !DILocation(line: 0, scope: !7163)
!7171 = !DILocation(line: 94, column: 20, scope: !7163)
!7172 = !DILocation(line: 94, column: 25, scope: !7163)
!7173 = !DILocation(line: 94, column: 7, scope: !7163)
!7174 = !DILocation(line: 94, column: 51, scope: !7163)
!7175 = !DILocation(line: 94, column: 56, scope: !7163)
!7176 = !DILocation(line: 94, column: 33, scope: !7163)
!7177 = !DILocation(line: 94, column: 38, scope: !7163)
!7178 = !DILocation(line: 95, column: 20, scope: !7163)
!7179 = !DILocation(line: 95, column: 25, scope: !7163)
!7180 = !DILocation(line: 95, column: 2, scope: !7163)
!7181 = !DILocation(line: 95, column: 7, scope: !7163)
!7182 = !DILocation(line: 95, column: 50, scope: !7163)
!7183 = !DILocation(line: 95, column: 32, scope: !7163)
!7184 = !DILocation(line: 95, column: 37, scope: !7163)
!7185 = !DILocation(line: 96, column: 20, scope: !7163)
!7186 = !DILocation(line: 96, column: 25, scope: !7163)
!7187 = !DILocation(line: 96, column: 2, scope: !7163)
!7188 = !DILocation(line: 96, column: 7, scope: !7163)
!7189 = !DILocation(line: 96, column: 51, scope: !7163)
!7190 = !DILocation(line: 96, column: 56, scope: !7163)
!7191 = !DILocation(line: 96, column: 33, scope: !7163)
!7192 = !DILocation(line: 96, column: 38, scope: !7163)
!7193 = !DILocation(line: 97, column: 20, scope: !7163)
!7194 = !DILocation(line: 97, column: 25, scope: !7163)
!7195 = !DILocation(line: 97, column: 2, scope: !7163)
!7196 = !DILocation(line: 97, column: 7, scope: !7163)
!7197 = !DILocation(line: 97, column: 50, scope: !7163)
!7198 = !DILocation(line: 97, column: 32, scope: !7163)
!7199 = !DILocation(line: 97, column: 37, scope: !7163)
!7200 = !DILocation(line: 98, column: 20, scope: !7163)
!7201 = !DILocation(line: 98, column: 25, scope: !7163)
!7202 = !DILocation(line: 98, column: 2, scope: !7163)
!7203 = !DILocation(line: 98, column: 7, scope: !7163)
!7204 = !DILocation(line: 98, column: 51, scope: !7163)
!7205 = !DILocation(line: 98, column: 56, scope: !7163)
!7206 = !DILocation(line: 98, column: 33, scope: !7163)
!7207 = !DILocation(line: 98, column: 38, scope: !7163)
!7208 = !DILocation(line: 99, column: 21, scope: !7163)
!7209 = !DILocation(line: 99, column: 26, scope: !7163)
!7210 = !DILocation(line: 99, column: 2, scope: !7163)
!7211 = !DILocation(line: 99, column: 8, scope: !7163)
!7212 = !DILocation(line: 99, column: 52, scope: !7163)
!7213 = !DILocation(line: 99, column: 33, scope: !7163)
!7214 = !DILocation(line: 99, column: 39, scope: !7163)
!7215 = !DILocation(line: 100, column: 21, scope: !7163)
!7216 = !DILocation(line: 100, column: 26, scope: !7163)
!7217 = !DILocation(line: 100, column: 2, scope: !7163)
!7218 = !DILocation(line: 100, column: 8, scope: !7163)
!7219 = !DILocation(line: 100, column: 53, scope: !7163)
!7220 = !DILocation(line: 100, column: 58, scope: !7163)
!7221 = !DILocation(line: 100, column: 34, scope: !7163)
!7222 = !DILocation(line: 100, column: 40, scope: !7163)
!7223 = !DILocation(line: 101, column: 21, scope: !7163)
!7224 = !DILocation(line: 101, column: 26, scope: !7163)
!7225 = !DILocation(line: 101, column: 2, scope: !7163)
!7226 = !DILocation(line: 101, column: 8, scope: !7163)
!7227 = !DILocation(line: 101, column: 52, scope: !7163)
!7228 = !DILocation(line: 101, column: 33, scope: !7163)
!7229 = !DILocation(line: 101, column: 39, scope: !7163)
!7230 = !DILocation(line: 102, column: 1, scope: !7163)
!7231 = distinct !DISubprogram(name: "inv_shift_rows", scope: !501, file: !501, line: 118, type: !7232, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7234)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{null, !184}
!7234 = !{!7235, !7236}
!7235 = !DILocalVariable(name: "s", arg: 1, scope: !7231, file: !501, line: 118, type: !184)
!7236 = !DILocalVariable(name: "t", scope: !7231, file: !501, line: 120, type: !311)
!7237 = !DILocation(line: 0, scope: !7231)
!7238 = !DILocation(line: 120, column: 2, scope: !7231)
!7239 = !DILocation(line: 120, column: 10, scope: !7231)
!7240 = !DILocation(line: 122, column: 10, scope: !7231)
!7241 = !DILocation(line: 122, column: 8, scope: !7231)
!7242 = !DILocation(line: 122, column: 23, scope: !7231)
!7243 = !DILocation(line: 122, column: 16, scope: !7231)
!7244 = !DILocation(line: 122, column: 21, scope: !7231)
!7245 = !DILocation(line: 122, column: 37, scope: !7231)
!7246 = !DILocation(line: 122, column: 30, scope: !7231)
!7247 = !DILocation(line: 122, column: 35, scope: !7231)
!7248 = !DILocation(line: 122, column: 51, scope: !7231)
!7249 = !DILocation(line: 122, column: 44, scope: !7231)
!7250 = !DILocation(line: 122, column: 49, scope: !7231)
!7251 = !DILocation(line: 123, column: 10, scope: !7231)
!7252 = !DILocation(line: 123, column: 2, scope: !7231)
!7253 = !DILocation(line: 123, column: 8, scope: !7231)
!7254 = !DILocation(line: 123, column: 23, scope: !7231)
!7255 = !DILocation(line: 123, column: 16, scope: !7231)
!7256 = !DILocation(line: 123, column: 21, scope: !7231)
!7257 = !DILocation(line: 123, column: 36, scope: !7231)
!7258 = !DILocation(line: 123, column: 29, scope: !7231)
!7259 = !DILocation(line: 123, column: 34, scope: !7231)
!7260 = !DILocation(line: 123, column: 50, scope: !7231)
!7261 = !DILocation(line: 123, column: 43, scope: !7231)
!7262 = !DILocation(line: 123, column: 48, scope: !7231)
!7263 = !DILocation(line: 124, column: 10, scope: !7231)
!7264 = !DILocation(line: 124, column: 2, scope: !7231)
!7265 = !DILocation(line: 124, column: 8, scope: !7231)
!7266 = !DILocation(line: 124, column: 23, scope: !7231)
!7267 = !DILocation(line: 124, column: 16, scope: !7231)
!7268 = !DILocation(line: 124, column: 21, scope: !7231)
!7269 = !DILocation(line: 124, column: 37, scope: !7231)
!7270 = !DILocation(line: 124, column: 29, scope: !7231)
!7271 = !DILocation(line: 124, column: 35, scope: !7231)
!7272 = !DILocation(line: 124, column: 51, scope: !7231)
!7273 = !DILocation(line: 124, column: 43, scope: !7231)
!7274 = !DILocation(line: 124, column: 49, scope: !7231)
!7275 = !DILocation(line: 125, column: 10, scope: !7231)
!7276 = !DILocation(line: 125, column: 2, scope: !7231)
!7277 = !DILocation(line: 125, column: 8, scope: !7231)
!7278 = !DILocation(line: 125, column: 25, scope: !7231)
!7279 = !DILocation(line: 125, column: 17, scope: !7231)
!7280 = !DILocation(line: 125, column: 23, scope: !7231)
!7281 = !DILocation(line: 125, column: 39, scope: !7231)
!7282 = !DILocation(line: 125, column: 31, scope: !7231)
!7283 = !DILocation(line: 125, column: 37, scope: !7231)
!7284 = !DILocation(line: 125, column: 53, scope: !7231)
!7285 = !DILocation(line: 125, column: 45, scope: !7231)
!7286 = !DILocation(line: 125, column: 51, scope: !7231)
!7287 = !DILocation(line: 126, column: 8, scope: !7231)
!7288 = !DILocation(line: 127, column: 1, scope: !7231)
!7289 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !501, file: !501, line: 104, type: !7232, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7290)
!7290 = !{!7291, !7292}
!7291 = !DILocalVariable(name: "s", arg: 1, scope: !7289, file: !501, line: 104, type: !184)
!7292 = !DILocalVariable(name: "i", scope: !7289, file: !501, line: 106, type: !32)
!7293 = !DILocation(line: 0, scope: !7289)
!7294 = !DILocation(line: 108, column: 2, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7289, file: !501, line: 108, column: 2)
!7296 = !DILocation(line: 109, column: 19, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !501, line: 108, column: 32)
!7298 = distinct !DILexicalBlock(scope: !7295, file: !501, line: 108, column: 2)
!7299 = !DILocation(line: 109, column: 10, scope: !7297)
!7300 = !DILocation(line: 109, column: 8, scope: !7297)
!7301 = !DILocation(line: 108, column: 27, scope: !7298)
!7302 = !DILocation(line: 108, column: 16, scope: !7298)
!7303 = distinct !{!7303, !7294, !7304}
!7304 = !DILocation(line: 110, column: 2, scope: !7295)
!7305 = !DILocation(line: 111, column: 1, scope: !7289)
!7306 = distinct !DISubprogram(name: "inv_mix_columns", scope: !501, file: !501, line: 81, type: !7232, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7307)
!7307 = !{!7308, !7309}
!7308 = !DILocalVariable(name: "s", arg: 1, scope: !7306, file: !501, line: 81, type: !184)
!7309 = !DILocalVariable(name: "t", scope: !7306, file: !501, line: 83, type: !311)
!7310 = !DILocation(line: 0, scope: !7306)
!7311 = !DILocation(line: 83, column: 2, scope: !7306)
!7312 = !DILocation(line: 83, column: 10, scope: !7306)
!7313 = !DILocation(line: 85, column: 2, scope: !7306)
!7314 = !DILocation(line: 86, column: 19, scope: !7306)
!7315 = !DILocation(line: 86, column: 27, scope: !7306)
!7316 = !DILocation(line: 86, column: 2, scope: !7306)
!7317 = !DILocation(line: 87, column: 19, scope: !7306)
!7318 = !DILocation(line: 87, column: 29, scope: !7306)
!7319 = !DILocation(line: 87, column: 2, scope: !7306)
!7320 = !DILocation(line: 88, column: 19, scope: !7306)
!7321 = !DILocation(line: 88, column: 29, scope: !7306)
!7322 = !DILocation(line: 88, column: 2, scope: !7306)
!7323 = !DILocation(line: 89, column: 8, scope: !7306)
!7324 = !DILocation(line: 90, column: 1, scope: !7306)
!7325 = distinct !DISubprogram(name: "mult_row_column", scope: !501, file: !501, line: 73, type: !7326, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7328)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{null, !184, !490}
!7328 = !{!7329, !7330}
!7329 = !DILocalVariable(name: "out", arg: 1, scope: !7325, file: !501, line: 73, type: !184)
!7330 = !DILocalVariable(name: "in", arg: 2, scope: !7325, file: !501, line: 73, type: !490)
!7331 = !DILocation(line: 0, scope: !7325)
!7332 = !DILocation(line: 75, column: 11, scope: !7325)
!7333 = !DILocation(line: 75, column: 26, scope: !7325)
!7334 = !DILocation(line: 75, column: 41, scope: !7325)
!7335 = !DILocation(line: 75, column: 56, scope: !7325)
!7336 = !DILocation(line: 75, column: 24, scope: !7325)
!7337 = !DILocation(line: 75, column: 39, scope: !7325)
!7338 = !DILocation(line: 75, column: 54, scope: !7325)
!7339 = !DILocation(line: 75, column: 9, scope: !7325)
!7340 = !DILocation(line: 76, column: 11, scope: !7325)
!7341 = !DILocation(line: 76, column: 26, scope: !7325)
!7342 = !DILocation(line: 76, column: 41, scope: !7325)
!7343 = !DILocation(line: 76, column: 56, scope: !7325)
!7344 = !DILocation(line: 76, column: 24, scope: !7325)
!7345 = !DILocation(line: 76, column: 39, scope: !7325)
!7346 = !DILocation(line: 76, column: 54, scope: !7325)
!7347 = !DILocation(line: 76, column: 2, scope: !7325)
!7348 = !DILocation(line: 76, column: 9, scope: !7325)
!7349 = !DILocation(line: 77, column: 11, scope: !7325)
!7350 = !DILocation(line: 77, column: 26, scope: !7325)
!7351 = !DILocation(line: 77, column: 41, scope: !7325)
!7352 = !DILocation(line: 77, column: 56, scope: !7325)
!7353 = !DILocation(line: 77, column: 24, scope: !7325)
!7354 = !DILocation(line: 77, column: 39, scope: !7325)
!7355 = !DILocation(line: 77, column: 54, scope: !7325)
!7356 = !DILocation(line: 77, column: 2, scope: !7325)
!7357 = !DILocation(line: 77, column: 9, scope: !7325)
!7358 = !DILocation(line: 78, column: 11, scope: !7325)
!7359 = !DILocation(line: 78, column: 26, scope: !7325)
!7360 = !DILocation(line: 78, column: 41, scope: !7325)
!7361 = !DILocation(line: 78, column: 56, scope: !7325)
!7362 = !DILocation(line: 78, column: 24, scope: !7325)
!7363 = !DILocation(line: 78, column: 39, scope: !7325)
!7364 = !DILocation(line: 78, column: 54, scope: !7325)
!7365 = !DILocation(line: 78, column: 2, scope: !7325)
!7366 = !DILocation(line: 78, column: 9, scope: !7325)
!7367 = !DILocation(line: 79, column: 1, scope: !7325)
!7368 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !516, file: !516, line: 70, type: !7369, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7371)
!7369 = !DISubroutineType(types: !7370)
!7370 = !{!125, !510, !490}
!7371 = !{!7372, !7373, !7374, !7376, !7377}
!7372 = !DILocalVariable(name: "s", arg: 1, scope: !7368, file: !516, line: 70, type: !510)
!7373 = !DILocalVariable(name: "k", arg: 2, scope: !7368, file: !516, line: 70, type: !490)
!7374 = !DILocalVariable(name: "rconst", scope: !7368, file: !516, line: 72, type: !7375)
!7375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5929, size: 352, elements: !2161)
!7376 = !DILocalVariable(name: "i", scope: !7368, file: !516, line: 76, type: !32)
!7377 = !DILocalVariable(name: "t", scope: !7368, file: !516, line: 77, type: !32)
!7378 = !DILocation(line: 0, scope: !7368)
!7379 = !DILocation(line: 72, column: 21, scope: !7368)
!7380 = !DILocation(line: 79, column: 8, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7368, file: !516, line: 79, column: 6)
!7382 = !DILocation(line: 79, column: 6, scope: !7368)
!7383 = !DILocation(line: 91, column: 7, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !516, line: 90, column: 35)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !516, line: 90, column: 2)
!7386 = distinct !DILexicalBlock(scope: !7368, file: !516, line: 90, column: 2)
!7387 = !DILocation(line: 90, column: 2, scope: !7386)
!7388 = !DILocation(line: 86, column: 22, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7390, file: !516, line: 85, column: 27)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !516, line: 85, column: 2)
!7391 = distinct !DILexicalBlock(scope: !7368, file: !516, line: 85, column: 2)
!7392 = !DILocation(line: 86, column: 18, scope: !7389)
!7393 = !DILocation(line: 86, column: 25, scope: !7389)
!7394 = !DILocation(line: 86, column: 40, scope: !7389)
!7395 = !DILocation(line: 86, column: 34, scope: !7389)
!7396 = !DILocation(line: 86, column: 43, scope: !7389)
!7397 = !DILocation(line: 86, column: 31, scope: !7389)
!7398 = !DILocation(line: 87, column: 17, scope: !7389)
!7399 = !DILocation(line: 87, column: 11, scope: !7389)
!7400 = !DILocation(line: 87, column: 20, scope: !7389)
!7401 = !DILocation(line: 86, column: 49, scope: !7389)
!7402 = !DILocation(line: 87, column: 34, scope: !7389)
!7403 = !DILocation(line: 87, column: 28, scope: !7389)
!7404 = !DILocation(line: 87, column: 27, scope: !7389)
!7405 = !DILocation(line: 87, column: 25, scope: !7389)
!7406 = !DILocation(line: 86, column: 3, scope: !7389)
!7407 = !DILocation(line: 86, column: 15, scope: !7389)
!7408 = !DILocation(line: 85, column: 22, scope: !7390)
!7409 = !DILocation(line: 85, column: 16, scope: !7390)
!7410 = !DILocation(line: 85, column: 2, scope: !7391)
!7411 = distinct !{!7411, !7410, !7412}
!7412 = !DILocation(line: 88, column: 2, scope: !7391)
!7413 = !DILocation(line: 92, column: 10, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7384, file: !516, line: 92, column: 7)
!7415 = !DILocation(line: 92, column: 16, scope: !7414)
!7416 = !DILocation(line: 92, column: 7, scope: !7384)
!7417 = !DILocation(line: 93, column: 8, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7414, file: !516, line: 92, column: 22)
!7419 = !DILocation(line: 93, column: 38, scope: !7418)
!7420 = !DILocation(line: 93, column: 30, scope: !7418)
!7421 = !DILocation(line: 93, column: 28, scope: !7418)
!7422 = !DILocation(line: 94, column: 3, scope: !7418)
!7423 = !DILocation(line: 0, scope: !7384)
!7424 = !DILocation(line: 95, column: 27, scope: !7384)
!7425 = !DILocation(line: 95, column: 17, scope: !7384)
!7426 = !DILocation(line: 95, column: 32, scope: !7384)
!7427 = !DILocation(line: 95, column: 3, scope: !7384)
!7428 = !DILocation(line: 95, column: 15, scope: !7384)
!7429 = !DILocation(line: 90, column: 30, scope: !7385)
!7430 = !DILocation(line: 90, column: 11, scope: !7385)
!7431 = distinct !{!7431, !7387, !7432}
!7432 = !DILocation(line: 96, column: 2, scope: !7386)
!7433 = !DILocation(line: 99, column: 1, scope: !7368)
!7434 = distinct !DISubprogram(name: "rotword", scope: !516, file: !516, line: 62, type: !7435, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7437)
!7435 = !DISubroutineType(types: !7436)
!7436 = !{!32, !32}
!7437 = !{!7438}
!7438 = !DILocalVariable(name: "a", arg: 1, scope: !7434, file: !516, line: 62, type: !32)
!7439 = !DILocation(line: 0, scope: !7434)
!7440 = !DILocation(line: 64, column: 21, scope: !7434)
!7441 = !DILocation(line: 64, column: 2, scope: !7434)
!7442 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !516, file: !516, line: 158, type: !7443, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7446)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{!125, !184, !490, !7445}
!7445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!7446 = !{!7447, !7448, !7449, !7450, !7451}
!7447 = !DILocalVariable(name: "out", arg: 1, scope: !7442, file: !516, line: 158, type: !184)
!7448 = !DILocalVariable(name: "in", arg: 2, scope: !7442, file: !516, line: 158, type: !490)
!7449 = !DILocalVariable(name: "s", arg: 3, scope: !7442, file: !516, line: 158, type: !7445)
!7450 = !DILocalVariable(name: "state", scope: !7442, file: !516, line: 160, type: !311)
!7451 = !DILocalVariable(name: "i", scope: !7442, file: !516, line: 161, type: !32)
!7452 = !DILocation(line: 0, scope: !7442)
!7453 = !DILocation(line: 160, column: 2, scope: !7442)
!7454 = !DILocation(line: 160, column: 10, scope: !7442)
!7455 = !DILocation(line: 163, column: 10, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7442, file: !516, line: 163, column: 6)
!7457 = !DILocation(line: 163, column: 6, scope: !7442)
!7458 = !DILocation(line: 171, column: 8, scope: !7442)
!7459 = !DILocation(line: 172, column: 23, scope: !7442)
!7460 = !DILocation(line: 172, column: 2, scope: !7442)
!7461 = !DILocation(line: 174, column: 2, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7442, file: !516, line: 174, column: 2)
!7463 = !DILocation(line: 175, column: 3, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !516, line: 174, column: 33)
!7465 = distinct !DILexicalBlock(scope: !7462, file: !516, line: 174, column: 2)
!7466 = !DILocation(line: 176, column: 3, scope: !7464)
!7467 = !DILocation(line: 177, column: 3, scope: !7464)
!7468 = !DILocation(line: 178, column: 40, scope: !7464)
!7469 = !DILocation(line: 178, column: 37, scope: !7464)
!7470 = !DILocation(line: 178, column: 33, scope: !7464)
!7471 = !DILocation(line: 178, column: 3, scope: !7464)
!7472 = !DILocation(line: 174, column: 16, scope: !7465)
!7473 = distinct !{!7473, !7461, !7474}
!7474 = !DILocation(line: 179, column: 2, scope: !7462)
!7475 = !DILocation(line: 181, column: 2, scope: !7442)
!7476 = !DILocation(line: 182, column: 2, scope: !7442)
!7477 = !DILocation(line: 183, column: 32, scope: !7442)
!7478 = !DILocation(line: 183, column: 2, scope: !7442)
!7479 = !DILocation(line: 185, column: 8, scope: !7442)
!7480 = !DILocation(line: 188, column: 2, scope: !7442)
!7481 = !DILocation(line: 190, column: 2, scope: !7442)
!7482 = !DILocation(line: 191, column: 1, scope: !7442)
!7483 = distinct !DISubprogram(name: "add_round_key", scope: !516, file: !516, line: 101, type: !7164, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7484)
!7484 = !{!7485, !7486}
!7485 = !DILocalVariable(name: "s", arg: 1, scope: !7483, file: !516, line: 101, type: !184)
!7486 = !DILocalVariable(name: "k", arg: 2, scope: !7483, file: !516, line: 101, type: !7166)
!7487 = !DILocation(line: 0, scope: !7483)
!7488 = !DILocation(line: 103, column: 20, scope: !7483)
!7489 = !DILocation(line: 103, column: 25, scope: !7483)
!7490 = !DILocation(line: 103, column: 7, scope: !7483)
!7491 = !DILocation(line: 103, column: 51, scope: !7483)
!7492 = !DILocation(line: 103, column: 56, scope: !7483)
!7493 = !DILocation(line: 103, column: 33, scope: !7483)
!7494 = !DILocation(line: 103, column: 38, scope: !7483)
!7495 = !DILocation(line: 104, column: 20, scope: !7483)
!7496 = !DILocation(line: 104, column: 25, scope: !7483)
!7497 = !DILocation(line: 104, column: 2, scope: !7483)
!7498 = !DILocation(line: 104, column: 7, scope: !7483)
!7499 = !DILocation(line: 104, column: 50, scope: !7483)
!7500 = !DILocation(line: 104, column: 32, scope: !7483)
!7501 = !DILocation(line: 104, column: 37, scope: !7483)
!7502 = !DILocation(line: 105, column: 20, scope: !7483)
!7503 = !DILocation(line: 105, column: 25, scope: !7483)
!7504 = !DILocation(line: 105, column: 2, scope: !7483)
!7505 = !DILocation(line: 105, column: 7, scope: !7483)
!7506 = !DILocation(line: 105, column: 51, scope: !7483)
!7507 = !DILocation(line: 105, column: 56, scope: !7483)
!7508 = !DILocation(line: 105, column: 33, scope: !7483)
!7509 = !DILocation(line: 105, column: 38, scope: !7483)
!7510 = !DILocation(line: 106, column: 20, scope: !7483)
!7511 = !DILocation(line: 106, column: 25, scope: !7483)
!7512 = !DILocation(line: 106, column: 2, scope: !7483)
!7513 = !DILocation(line: 106, column: 7, scope: !7483)
!7514 = !DILocation(line: 106, column: 50, scope: !7483)
!7515 = !DILocation(line: 106, column: 32, scope: !7483)
!7516 = !DILocation(line: 106, column: 37, scope: !7483)
!7517 = !DILocation(line: 107, column: 20, scope: !7483)
!7518 = !DILocation(line: 107, column: 25, scope: !7483)
!7519 = !DILocation(line: 107, column: 2, scope: !7483)
!7520 = !DILocation(line: 107, column: 7, scope: !7483)
!7521 = !DILocation(line: 107, column: 51, scope: !7483)
!7522 = !DILocation(line: 107, column: 56, scope: !7483)
!7523 = !DILocation(line: 107, column: 33, scope: !7483)
!7524 = !DILocation(line: 107, column: 38, scope: !7483)
!7525 = !DILocation(line: 108, column: 21, scope: !7483)
!7526 = !DILocation(line: 108, column: 26, scope: !7483)
!7527 = !DILocation(line: 108, column: 2, scope: !7483)
!7528 = !DILocation(line: 108, column: 8, scope: !7483)
!7529 = !DILocation(line: 108, column: 52, scope: !7483)
!7530 = !DILocation(line: 108, column: 33, scope: !7483)
!7531 = !DILocation(line: 108, column: 39, scope: !7483)
!7532 = !DILocation(line: 109, column: 21, scope: !7483)
!7533 = !DILocation(line: 109, column: 26, scope: !7483)
!7534 = !DILocation(line: 109, column: 2, scope: !7483)
!7535 = !DILocation(line: 109, column: 8, scope: !7483)
!7536 = !DILocation(line: 109, column: 53, scope: !7483)
!7537 = !DILocation(line: 109, column: 58, scope: !7483)
!7538 = !DILocation(line: 109, column: 34, scope: !7483)
!7539 = !DILocation(line: 109, column: 40, scope: !7483)
!7540 = !DILocation(line: 110, column: 21, scope: !7483)
!7541 = !DILocation(line: 110, column: 26, scope: !7483)
!7542 = !DILocation(line: 110, column: 2, scope: !7483)
!7543 = !DILocation(line: 110, column: 8, scope: !7483)
!7544 = !DILocation(line: 110, column: 52, scope: !7483)
!7545 = !DILocation(line: 110, column: 33, scope: !7483)
!7546 = !DILocation(line: 110, column: 39, scope: !7483)
!7547 = !DILocation(line: 111, column: 1, scope: !7483)
!7548 = distinct !DISubprogram(name: "sub_bytes", scope: !516, file: !516, line: 113, type: !7232, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7549)
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "s", arg: 1, scope: !7548, file: !516, line: 113, type: !184)
!7551 = !DILocalVariable(name: "i", scope: !7548, file: !516, line: 115, type: !32)
!7552 = !DILocation(line: 0, scope: !7548)
!7553 = !DILocation(line: 117, column: 2, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7548, file: !516, line: 117, column: 2)
!7555 = !DILocation(line: 118, column: 15, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !516, line: 117, column: 34)
!7557 = distinct !DILexicalBlock(scope: !7554, file: !516, line: 117, column: 2)
!7558 = !DILocation(line: 118, column: 10, scope: !7556)
!7559 = !DILocation(line: 118, column: 8, scope: !7556)
!7560 = !DILocation(line: 117, column: 29, scope: !7557)
!7561 = !DILocation(line: 117, column: 16, scope: !7557)
!7562 = distinct !{!7562, !7553, !7563}
!7563 = !DILocation(line: 119, column: 2, scope: !7554)
!7564 = !DILocation(line: 120, column: 1, scope: !7548)
!7565 = distinct !DISubprogram(name: "shift_rows", scope: !516, file: !516, line: 147, type: !7232, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7566)
!7566 = !{!7567, !7568}
!7567 = !DILocalVariable(name: "s", arg: 1, scope: !7565, file: !516, line: 147, type: !184)
!7568 = !DILocalVariable(name: "t", scope: !7565, file: !516, line: 149, type: !311)
!7569 = !DILocation(line: 0, scope: !7565)
!7570 = !DILocation(line: 149, column: 2, scope: !7565)
!7571 = !DILocation(line: 149, column: 10, scope: !7565)
!7572 = !DILocation(line: 151, column: 10, scope: !7565)
!7573 = !DILocation(line: 151, column: 8, scope: !7565)
!7574 = !DILocation(line: 151, column: 23, scope: !7565)
!7575 = !DILocation(line: 151, column: 16, scope: !7565)
!7576 = !DILocation(line: 151, column: 21, scope: !7565)
!7577 = !DILocation(line: 151, column: 36, scope: !7565)
!7578 = !DILocation(line: 151, column: 29, scope: !7565)
!7579 = !DILocation(line: 151, column: 34, scope: !7565)
!7580 = !DILocation(line: 151, column: 50, scope: !7565)
!7581 = !DILocation(line: 151, column: 43, scope: !7565)
!7582 = !DILocation(line: 151, column: 48, scope: !7565)
!7583 = !DILocation(line: 152, column: 10, scope: !7565)
!7584 = !DILocation(line: 152, column: 2, scope: !7565)
!7585 = !DILocation(line: 152, column: 8, scope: !7565)
!7586 = !DILocation(line: 152, column: 23, scope: !7565)
!7587 = !DILocation(line: 152, column: 16, scope: !7565)
!7588 = !DILocation(line: 152, column: 21, scope: !7565)
!7589 = !DILocation(line: 152, column: 36, scope: !7565)
!7590 = !DILocation(line: 152, column: 29, scope: !7565)
!7591 = !DILocation(line: 152, column: 34, scope: !7565)
!7592 = !DILocation(line: 152, column: 50, scope: !7565)
!7593 = !DILocation(line: 152, column: 43, scope: !7565)
!7594 = !DILocation(line: 152, column: 48, scope: !7565)
!7595 = !DILocation(line: 153, column: 10, scope: !7565)
!7596 = !DILocation(line: 153, column: 2, scope: !7565)
!7597 = !DILocation(line: 153, column: 8, scope: !7565)
!7598 = !DILocation(line: 153, column: 23, scope: !7565)
!7599 = !DILocation(line: 153, column: 16, scope: !7565)
!7600 = !DILocation(line: 153, column: 21, scope: !7565)
!7601 = !DILocation(line: 153, column: 38, scope: !7565)
!7602 = !DILocation(line: 153, column: 30, scope: !7565)
!7603 = !DILocation(line: 153, column: 36, scope: !7565)
!7604 = !DILocation(line: 153, column: 52, scope: !7565)
!7605 = !DILocation(line: 153, column: 44, scope: !7565)
!7606 = !DILocation(line: 153, column: 50, scope: !7565)
!7607 = !DILocation(line: 154, column: 10, scope: !7565)
!7608 = !DILocation(line: 154, column: 2, scope: !7565)
!7609 = !DILocation(line: 154, column: 8, scope: !7565)
!7610 = !DILocation(line: 154, column: 25, scope: !7565)
!7611 = !DILocation(line: 154, column: 17, scope: !7565)
!7612 = !DILocation(line: 154, column: 23, scope: !7565)
!7613 = !DILocation(line: 154, column: 39, scope: !7565)
!7614 = !DILocation(line: 154, column: 31, scope: !7565)
!7615 = !DILocation(line: 154, column: 37, scope: !7565)
!7616 = !DILocation(line: 154, column: 53, scope: !7565)
!7617 = !DILocation(line: 154, column: 45, scope: !7565)
!7618 = !DILocation(line: 154, column: 51, scope: !7565)
!7619 = !DILocation(line: 155, column: 9, scope: !7565)
!7620 = !DILocation(line: 156, column: 1, scope: !7565)
!7621 = distinct !DISubprogram(name: "mix_columns", scope: !516, file: !516, line: 132, type: !7232, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7622)
!7622 = !{!7623, !7624}
!7623 = !DILocalVariable(name: "s", arg: 1, scope: !7621, file: !516, line: 132, type: !184)
!7624 = !DILocalVariable(name: "t", scope: !7621, file: !516, line: 134, type: !311)
!7625 = !DILocation(line: 0, scope: !7621)
!7626 = !DILocation(line: 134, column: 2, scope: !7621)
!7627 = !DILocation(line: 134, column: 10, scope: !7621)
!7628 = !DILocation(line: 136, column: 2, scope: !7621)
!7629 = !DILocation(line: 137, column: 19, scope: !7621)
!7630 = !DILocation(line: 137, column: 27, scope: !7621)
!7631 = !DILocation(line: 137, column: 2, scope: !7621)
!7632 = !DILocation(line: 138, column: 19, scope: !7621)
!7633 = !DILocation(line: 138, column: 32, scope: !7621)
!7634 = !DILocation(line: 138, column: 2, scope: !7621)
!7635 = !DILocation(line: 139, column: 19, scope: !7621)
!7636 = !DILocation(line: 139, column: 32, scope: !7621)
!7637 = !DILocation(line: 139, column: 2, scope: !7621)
!7638 = !DILocation(line: 140, column: 9, scope: !7621)
!7639 = !DILocation(line: 141, column: 1, scope: !7621)
!7640 = distinct !DISubprogram(name: "mult_row_column", scope: !516, file: !516, line: 124, type: !7326, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7641)
!7641 = !{!7642, !7643}
!7642 = !DILocalVariable(name: "out", arg: 1, scope: !7640, file: !516, line: 124, type: !184)
!7643 = !DILocalVariable(name: "in", arg: 2, scope: !7640, file: !516, line: 124, type: !490)
!7644 = !DILocation(line: 0, scope: !7640)
!7645 = !DILocation(line: 126, column: 24, scope: !7640)
!7646 = !DILocation(line: 126, column: 11, scope: !7640)
!7647 = !DILocation(line: 126, column: 33, scope: !7640)
!7648 = !DILocation(line: 126, column: 49, scope: !7640)
!7649 = !DILocation(line: 126, column: 57, scope: !7640)
!7650 = !DILocation(line: 126, column: 31, scope: !7640)
!7651 = !DILocation(line: 126, column: 47, scope: !7640)
!7652 = !DILocation(line: 126, column: 55, scope: !7640)
!7653 = !DILocation(line: 126, column: 9, scope: !7640)
!7654 = !DILocation(line: 127, column: 11, scope: !7640)
!7655 = !DILocation(line: 127, column: 32, scope: !7640)
!7656 = !DILocation(line: 127, column: 19, scope: !7640)
!7657 = !DILocation(line: 127, column: 41, scope: !7640)
!7658 = !DILocation(line: 127, column: 57, scope: !7640)
!7659 = !DILocation(line: 127, column: 17, scope: !7640)
!7660 = !DILocation(line: 127, column: 39, scope: !7640)
!7661 = !DILocation(line: 127, column: 55, scope: !7640)
!7662 = !DILocation(line: 127, column: 2, scope: !7640)
!7663 = !DILocation(line: 127, column: 9, scope: !7640)
!7664 = !DILocation(line: 128, column: 11, scope: !7640)
!7665 = !DILocation(line: 128, column: 19, scope: !7640)
!7666 = !DILocation(line: 128, column: 40, scope: !7640)
!7667 = !DILocation(line: 128, column: 27, scope: !7640)
!7668 = !DILocation(line: 128, column: 49, scope: !7640)
!7669 = !DILocation(line: 128, column: 17, scope: !7640)
!7670 = !DILocation(line: 128, column: 25, scope: !7640)
!7671 = !DILocation(line: 128, column: 47, scope: !7640)
!7672 = !DILocation(line: 128, column: 2, scope: !7640)
!7673 = !DILocation(line: 128, column: 9, scope: !7640)
!7674 = !DILocation(line: 129, column: 11, scope: !7640)
!7675 = !DILocation(line: 129, column: 27, scope: !7640)
!7676 = !DILocation(line: 129, column: 25, scope: !7640)
!7677 = !DILocation(line: 129, column: 35, scope: !7640)
!7678 = !DILocation(line: 129, column: 33, scope: !7640)
!7679 = !DILocation(line: 129, column: 56, scope: !7640)
!7680 = !DILocation(line: 129, column: 43, scope: !7640)
!7681 = !DILocation(line: 129, column: 41, scope: !7640)
!7682 = !DILocation(line: 129, column: 2, scope: !7640)
!7683 = !DILocation(line: 129, column: 9, scope: !7640)
!7684 = !DILocation(line: 130, column: 1, scope: !7640)
!7685 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7686, file: !7686, line: 37, type: !7687, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !7690)
!7686 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7687 = !DISubroutineType(types: !7688)
!7688 = !{!125, !184, !32, !490, !32, !490, !7689}
!7689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2813)
!7690 = !{!7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699}
!7691 = !DILocalVariable(name: "out", arg: 1, scope: !7685, file: !7686, line: 37, type: !184)
!7692 = !DILocalVariable(name: "outlen", arg: 2, scope: !7685, file: !7686, line: 37, type: !32)
!7693 = !DILocalVariable(name: "in", arg: 3, scope: !7685, file: !7686, line: 37, type: !490)
!7694 = !DILocalVariable(name: "inlen", arg: 4, scope: !7685, file: !7686, line: 38, type: !32)
!7695 = !DILocalVariable(name: "iv", arg: 5, scope: !7685, file: !7686, line: 38, type: !490)
!7696 = !DILocalVariable(name: "sched", arg: 6, scope: !7685, file: !7686, line: 39, type: !7689)
!7697 = !DILocalVariable(name: "buffer", scope: !7685, file: !7686, line: 42, type: !311)
!7698 = !DILocalVariable(name: "n", scope: !7685, file: !7686, line: 43, type: !32)
!7699 = !DILocalVariable(name: "m", scope: !7685, file: !7686, line: 43, type: !32)
!7700 = !DILocation(line: 0, scope: !7685)
!7701 = !DILocation(line: 42, column: 2, scope: !7685)
!7702 = !DILocation(line: 42, column: 10, scope: !7685)
!7703 = !DILocation(line: 46, column: 10, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7685, file: !7686, line: 46, column: 6)
!7705 = !DILocation(line: 46, column: 27, scope: !7704)
!7706 = !DILocation(line: 58, column: 8, scope: !7685)
!7707 = !DILocation(line: 60, column: 8, scope: !7685)
!7708 = !DILocation(line: 63, column: 2, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7685, file: !7686, line: 63, column: 2)
!7710 = !DILocation(line: 61, column: 6, scope: !7685)
!7711 = !DILocation(line: 64, column: 21, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7686, line: 63, column: 34)
!7713 = distinct !DILexicalBlock(scope: !7709, file: !7686, line: 63, column: 2)
!7714 = !DILocation(line: 64, column: 18, scope: !7712)
!7715 = !DILocation(line: 64, column: 11, scope: !7712)
!7716 = !DILocation(line: 64, column: 3, scope: !7712)
!7717 = !DILocation(line: 64, column: 15, scope: !7712)
!7718 = !DILocation(line: 65, column: 9, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7712, file: !7686, line: 65, column: 7)
!7720 = !DILocation(line: 65, column: 7, scope: !7712)
!7721 = !DILocation(line: 66, column: 10, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !7686, line: 65, column: 31)
!7723 = !DILocation(line: 67, column: 10, scope: !7722)
!7724 = !DILocation(line: 69, column: 8, scope: !7722)
!7725 = !DILocation(line: 71, column: 3, scope: !7722)
!7726 = !DILocation(line: 0, scope: !7712)
!7727 = !DILocation(line: 63, column: 29, scope: !7713)
!7728 = !DILocation(line: 63, column: 20, scope: !7713)
!7729 = distinct !{!7729, !7708, !7730}
!7730 = !DILocation(line: 72, column: 2, scope: !7709)
!7731 = !DILocation(line: 75, column: 1, scope: !7685)
!7732 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7686, file: !7686, line: 77, type: !7687, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !7733)
!7733 = !{!7734, !7735, !7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743}
!7734 = !DILocalVariable(name: "out", arg: 1, scope: !7732, file: !7686, line: 77, type: !184)
!7735 = !DILocalVariable(name: "outlen", arg: 2, scope: !7732, file: !7686, line: 77, type: !32)
!7736 = !DILocalVariable(name: "in", arg: 3, scope: !7732, file: !7686, line: 77, type: !490)
!7737 = !DILocalVariable(name: "inlen", arg: 4, scope: !7732, file: !7686, line: 78, type: !32)
!7738 = !DILocalVariable(name: "iv", arg: 5, scope: !7732, file: !7686, line: 78, type: !490)
!7739 = !DILocalVariable(name: "sched", arg: 6, scope: !7732, file: !7686, line: 79, type: !7689)
!7740 = !DILocalVariable(name: "buffer", scope: !7732, file: !7686, line: 82, type: !311)
!7741 = !DILocalVariable(name: "p", scope: !7732, file: !7686, line: 83, type: !490)
!7742 = !DILocalVariable(name: "n", scope: !7732, file: !7686, line: 84, type: !32)
!7743 = !DILocalVariable(name: "m", scope: !7732, file: !7686, line: 84, type: !32)
!7744 = !DILocation(line: 0, scope: !7732)
!7745 = !DILocation(line: 82, column: 2, scope: !7732)
!7746 = !DILocation(line: 82, column: 10, scope: !7732)
!7747 = !DILocation(line: 87, column: 10, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7732, file: !7686, line: 87, column: 6)
!7749 = !DILocation(line: 87, column: 27, scope: !7748)
!7750 = !DILocation(line: 105, column: 10, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !7686, line: 105, column: 7)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !7686, line: 104, column: 35)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !7686, line: 104, column: 2)
!7754 = distinct !DILexicalBlock(scope: !7732, file: !7686, line: 104, column: 2)
!7755 = !DILocation(line: 105, column: 31, scope: !7751)
!7756 = !DILocation(line: 105, column: 7, scope: !7752)
!7757 = !DILocation(line: 106, column: 10, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !7686, line: 105, column: 37)
!7759 = !DILocation(line: 107, column: 7, scope: !7758)
!7760 = !DILocation(line: 109, column: 3, scope: !7758)
!7761 = !DILocation(line: 0, scope: !7754)
!7762 = !DILocation(line: 110, column: 20, scope: !7752)
!7763 = !DILocation(line: 110, column: 12, scope: !7752)
!7764 = !DILocation(line: 110, column: 28, scope: !7752)
!7765 = !DILocation(line: 110, column: 26, scope: !7752)
!7766 = !DILocation(line: 110, column: 24, scope: !7752)
!7767 = !DILocation(line: 110, column: 7, scope: !7752)
!7768 = !DILocation(line: 110, column: 10, scope: !7752)
!7769 = !DILocation(line: 104, column: 30, scope: !7753)
!7770 = !DILocation(line: 104, column: 20, scope: !7753)
!7771 = !DILocation(line: 104, column: 2, scope: !7754)
!7772 = distinct !{!7772, !7771, !7773}
!7773 = !DILocation(line: 111, column: 2, scope: !7754)
!7774 = !DILocation(line: 114, column: 1, scope: !7732)
!7775 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7776, file: !7776, line: 37, type: !7777, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2818, retainedNodes: !7780)
!7776 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7777 = !DISubroutineType(types: !7778)
!7778 = !{!125, !184, !32, !490, !32, !184, !7779}
!7779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2821)
!7780 = !{!7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790}
!7781 = !DILocalVariable(name: "out", arg: 1, scope: !7775, file: !7776, line: 37, type: !184)
!7782 = !DILocalVariable(name: "outlen", arg: 2, scope: !7775, file: !7776, line: 37, type: !32)
!7783 = !DILocalVariable(name: "in", arg: 3, scope: !7775, file: !7776, line: 37, type: !490)
!7784 = !DILocalVariable(name: "inlen", arg: 4, scope: !7775, file: !7776, line: 38, type: !32)
!7785 = !DILocalVariable(name: "ctr", arg: 5, scope: !7775, file: !7776, line: 38, type: !184)
!7786 = !DILocalVariable(name: "sched", arg: 6, scope: !7775, file: !7776, line: 38, type: !7779)
!7787 = !DILocalVariable(name: "buffer", scope: !7775, file: !7776, line: 41, type: !311)
!7788 = !DILocalVariable(name: "nonce", scope: !7775, file: !7776, line: 42, type: !311)
!7789 = !DILocalVariable(name: "block_num", scope: !7775, file: !7776, line: 43, type: !32)
!7790 = !DILocalVariable(name: "i", scope: !7775, file: !7776, line: 44, type: !32)
!7791 = !DILocation(line: 0, scope: !7775)
!7792 = !DILocation(line: 41, column: 2, scope: !7775)
!7793 = !DILocation(line: 41, column: 10, scope: !7775)
!7794 = !DILocation(line: 42, column: 2, scope: !7775)
!7795 = !DILocation(line: 42, column: 10, scope: !7775)
!7796 = !DILocation(line: 47, column: 10, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7775, file: !7776, line: 47, column: 6)
!7798 = !DILocation(line: 47, column: 27, scope: !7797)
!7799 = !DILocation(line: 58, column: 8, scope: !7775)
!7800 = !DILocation(line: 61, column: 15, scope: !7775)
!7801 = !DILocation(line: 61, column: 35, scope: !7775)
!7802 = !DILocation(line: 62, column: 8, scope: !7775)
!7803 = !DILocation(line: 62, column: 27, scope: !7775)
!7804 = !DILocation(line: 61, column: 45, scope: !7775)
!7805 = !DILocation(line: 61, column: 25, scope: !7775)
!7806 = !DILocation(line: 61, column: 32, scope: !7775)
!7807 = !DILocation(line: 62, column: 18, scope: !7775)
!7808 = !DILocation(line: 61, column: 52, scope: !7775)
!7809 = !DILocation(line: 62, column: 26, scope: !7775)
!7810 = !DILocation(line: 62, column: 24, scope: !7775)
!7811 = !DILocation(line: 63, column: 2, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7775, file: !7776, line: 63, column: 2)
!7813 = !DILocation(line: 64, column: 10, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7776, line: 64, column: 7)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7776, line: 63, column: 30)
!7816 = distinct !DILexicalBlock(scope: !7812, file: !7776, line: 63, column: 2)
!7817 = !DILocation(line: 64, column: 33, scope: !7814)
!7818 = !DILocation(line: 64, column: 7, scope: !7815)
!7819 = !DILocation(line: 66, column: 8, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !7776, line: 66, column: 8)
!7821 = distinct !DILexicalBlock(scope: !7814, file: !7776, line: 64, column: 39)
!7822 = !DILocation(line: 66, column: 8, scope: !7821)
!7823 = !DILocation(line: 67, column: 14, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7820, file: !7776, line: 66, column: 46)
!7825 = !DILocation(line: 68, column: 37, scope: !7824)
!7826 = !DILocation(line: 68, column: 17, scope: !7824)
!7827 = !DILocation(line: 68, column: 15, scope: !7824)
!7828 = !DILocation(line: 69, column: 37, scope: !7824)
!7829 = !DILocation(line: 69, column: 17, scope: !7824)
!7830 = !DILocation(line: 69, column: 15, scope: !7824)
!7831 = !DILocation(line: 70, column: 37, scope: !7824)
!7832 = !DILocation(line: 70, column: 17, scope: !7824)
!7833 = !DILocation(line: 70, column: 15, scope: !7824)
!7834 = !DILocation(line: 71, column: 17, scope: !7824)
!7835 = !DILocation(line: 71, column: 15, scope: !7824)
!7836 = !DILocation(line: 75, column: 3, scope: !7821)
!7837 = !DILocation(line: 77, column: 12, scope: !7815)
!7838 = !DILocation(line: 77, column: 47, scope: !7815)
!7839 = !DILocation(line: 77, column: 44, scope: !7815)
!7840 = !DILocation(line: 77, column: 42, scope: !7815)
!7841 = !DILocation(line: 77, column: 7, scope: !7815)
!7842 = !DILocation(line: 77, column: 10, scope: !7815)
!7843 = !DILocation(line: 63, column: 25, scope: !7816)
!7844 = !DILocation(line: 63, column: 16, scope: !7816)
!7845 = distinct !{!7845, !7811, !7846}
!7846 = !DILocation(line: 78, column: 2, scope: !7812)
!7847 = !DILocation(line: 81, column: 2, scope: !7775)
!7848 = !DILocation(line: 81, column: 10, scope: !7775)
!7849 = !DILocation(line: 81, column: 23, scope: !7775)
!7850 = !DILocation(line: 81, column: 31, scope: !7775)
!7851 = !DILocation(line: 82, column: 2, scope: !7775)
!7852 = !DILocation(line: 82, column: 10, scope: !7775)
!7853 = !DILocation(line: 82, column: 23, scope: !7775)
!7854 = !DILocation(line: 82, column: 31, scope: !7775)
!7855 = !DILocation(line: 84, column: 2, scope: !7775)
!7856 = !DILocation(line: 85, column: 1, scope: !7775)
!7857 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7858, file: !7858, line: 39, type: !7859, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7861)
!7858 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7859 = !DISubroutineType(types: !7860)
!7860 = !{!125, !2829, !2835, !184, !32, !32}
!7861 = !{!7862, !7863, !7864, !7865, !7866}
!7862 = !DILocalVariable(name: "c", arg: 1, scope: !7857, file: !7858, line: 39, type: !2829)
!7863 = !DILocalVariable(name: "sched", arg: 2, scope: !7857, file: !7858, line: 39, type: !2835)
!7864 = !DILocalVariable(name: "nonce", arg: 3, scope: !7857, file: !7858, line: 39, type: !184)
!7865 = !DILocalVariable(name: "nlen", arg: 4, scope: !7857, file: !7858, line: 40, type: !32)
!7866 = !DILocalVariable(name: "mlen", arg: 5, scope: !7857, file: !7858, line: 40, type: !32)
!7867 = !DILocation(line: 0, scope: !7857)
!7868 = !DILocation(line: 44, column: 8, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7857, file: !7858, line: 44, column: 6)
!7870 = !DILocation(line: 44, column: 27, scope: !7869)
!7871 = !DILocation(line: 50, column: 24, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !7858, line: 50, column: 13)
!7873 = distinct !DILexicalBlock(scope: !7869, file: !7858, line: 48, column: 13)
!7874 = !DILocation(line: 54, column: 5, scope: !7857)
!7875 = !DILocation(line: 54, column: 10, scope: !7857)
!7876 = !DILocation(line: 55, column: 5, scope: !7857)
!7877 = !DILocation(line: 55, column: 11, scope: !7857)
!7878 = !DILocation(line: 56, column: 5, scope: !7857)
!7879 = !DILocation(line: 56, column: 11, scope: !7857)
!7880 = !DILocation(line: 58, column: 2, scope: !7857)
!7881 = !DILocation(line: 59, column: 1, scope: !7857)
!7882 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7858, file: !7858, line: 137, type: !7883, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7885)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!125, !184, !32, !490, !32, !490, !32, !2829}
!7885 = !{!7886, !7887, !7888, !7889, !7890, !7891, !7892, !7893, !7894, !7895}
!7886 = !DILocalVariable(name: "out", arg: 1, scope: !7882, file: !7858, line: 137, type: !184)
!7887 = !DILocalVariable(name: "olen", arg: 2, scope: !7882, file: !7858, line: 137, type: !32)
!7888 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7882, file: !7858, line: 138, type: !490)
!7889 = !DILocalVariable(name: "alen", arg: 4, scope: !7882, file: !7858, line: 139, type: !32)
!7890 = !DILocalVariable(name: "payload", arg: 5, scope: !7882, file: !7858, line: 139, type: !490)
!7891 = !DILocalVariable(name: "plen", arg: 6, scope: !7882, file: !7858, line: 140, type: !32)
!7892 = !DILocalVariable(name: "c", arg: 7, scope: !7882, file: !7858, line: 140, type: !2829)
!7893 = !DILocalVariable(name: "b", scope: !7882, file: !7858, line: 154, type: !311)
!7894 = !DILocalVariable(name: "tag", scope: !7882, file: !7858, line: 155, type: !311)
!7895 = !DILocalVariable(name: "i", scope: !7882, file: !7858, line: 156, type: !32)
!7896 = !DILocation(line: 0, scope: !7882)
!7897 = !DILocation(line: 144, column: 11, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7882, file: !7858, line: 144, column: 6)
!7899 = !DILocation(line: 144, column: 29, scope: !7898)
!7900 = !DILocation(line: 146, column: 10, scope: !7898)
!7901 = !DILocation(line: 146, column: 15, scope: !7898)
!7902 = !DILocation(line: 147, column: 10, scope: !7898)
!7903 = !DILocation(line: 147, column: 15, scope: !7898)
!7904 = !DILocation(line: 150, column: 22, scope: !7898)
!7905 = !DILocation(line: 150, column: 17, scope: !7898)
!7906 = !DILocation(line: 150, column: 9, scope: !7898)
!7907 = !DILocation(line: 144, column: 6, scope: !7882)
!7908 = !DILocation(line: 154, column: 2, scope: !7882)
!7909 = !DILocation(line: 154, column: 10, scope: !7882)
!7910 = !DILocation(line: 155, column: 2, scope: !7882)
!7911 = !DILocation(line: 155, column: 10, scope: !7882)
!7912 = !DILocation(line: 161, column: 10, scope: !7882)
!7913 = !DILocation(line: 161, column: 53, scope: !7882)
!7914 = !DILocation(line: 161, column: 31, scope: !7882)
!7915 = !DILocation(line: 161, column: 9, scope: !7882)
!7916 = !DILocation(line: 161, column: 7, scope: !7882)
!7917 = !DILocation(line: 162, column: 2, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7882, file: !7858, line: 162, column: 2)
!7919 = !DILocation(line: 163, column: 21, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !7858, line: 162, column: 28)
!7921 = distinct !DILexicalBlock(scope: !7918, file: !7858, line: 162, column: 2)
!7922 = !DILocation(line: 163, column: 10, scope: !7920)
!7923 = !DILocation(line: 163, column: 3, scope: !7920)
!7924 = !DILocation(line: 163, column: 8, scope: !7920)
!7925 = !DILocation(line: 162, column: 23, scope: !7921)
!7926 = !DILocation(line: 162, column: 16, scope: !7921)
!7927 = distinct !{!7927, !7917, !7928}
!7928 = !DILocation(line: 164, column: 2, scope: !7918)
!7929 = !DILocation(line: 165, column: 25, scope: !7882)
!7930 = !DILocation(line: 165, column: 10, scope: !7882)
!7931 = !DILocation(line: 165, column: 2, scope: !7882)
!7932 = !DILocation(line: 165, column: 8, scope: !7882)
!7933 = !DILocation(line: 166, column: 10, scope: !7882)
!7934 = !DILocation(line: 166, column: 2, scope: !7882)
!7935 = !DILocation(line: 166, column: 8, scope: !7882)
!7936 = !DILocation(line: 169, column: 35, scope: !7882)
!7937 = !DILocation(line: 169, column: 9, scope: !7882)
!7938 = !DILocation(line: 170, column: 6, scope: !7882)
!7939 = !DILocation(line: 171, column: 49, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !7858, line: 170, column: 16)
!7941 = distinct !DILexicalBlock(scope: !7882, file: !7858, line: 170, column: 6)
!7942 = !DILocation(line: 171, column: 3, scope: !7940)
!7943 = !DILocation(line: 172, column: 2, scope: !7940)
!7944 = !DILocation(line: 173, column: 6, scope: !7882)
!7945 = !DILocation(line: 174, column: 41, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7858, line: 173, column: 16)
!7947 = distinct !DILexicalBlock(scope: !7882, file: !7858, line: 173, column: 6)
!7948 = !DILocation(line: 174, column: 3, scope: !7946)
!7949 = !DILocation(line: 175, column: 2, scope: !7946)
!7950 = !DILocation(line: 180, column: 7, scope: !7882)
!7951 = !DILocation(line: 181, column: 16, scope: !7882)
!7952 = !DILocation(line: 181, column: 8, scope: !7882)
!7953 = !DILocation(line: 184, column: 47, scope: !7882)
!7954 = !DILocation(line: 184, column: 2, scope: !7882)
!7955 = !DILocation(line: 186, column: 16, scope: !7882)
!7956 = !DILocation(line: 186, column: 8, scope: !7882)
!7957 = !DILocation(line: 189, column: 33, scope: !7882)
!7958 = !DILocation(line: 189, column: 9, scope: !7882)
!7959 = !DILocation(line: 191, column: 21, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7858, line: 191, column: 2)
!7961 = distinct !DILexicalBlock(scope: !7882, file: !7858, line: 191, column: 2)
!7962 = !DILocation(line: 191, column: 16, scope: !7960)
!7963 = !DILocation(line: 191, column: 2, scope: !7961)
!7964 = !DILocation(line: 190, column: 6, scope: !7882)
!7965 = !DILocation(line: 192, column: 12, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7960, file: !7858, line: 191, column: 32)
!7967 = !DILocation(line: 192, column: 21, scope: !7966)
!7968 = !DILocation(line: 192, column: 19, scope: !7966)
!7969 = !DILocation(line: 192, column: 7, scope: !7966)
!7970 = !DILocation(line: 192, column: 10, scope: !7966)
!7971 = !DILocation(line: 191, column: 27, scope: !7960)
!7972 = distinct !{!7972, !7963, !7973}
!7973 = !DILocation(line: 193, column: 2, scope: !7961)
!7974 = !DILocation(line: 196, column: 1, scope: !7882)
!7975 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7858, file: !7858, line: 64, type: !7976, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !7978)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{null, !184, !490, !32, !32, !2835}
!7978 = !{!7979, !7980, !7981, !7982, !7983, !7984}
!7979 = !DILocalVariable(name: "T", arg: 1, scope: !7975, file: !7858, line: 64, type: !184)
!7980 = !DILocalVariable(name: "data", arg: 2, scope: !7975, file: !7858, line: 64, type: !490)
!7981 = !DILocalVariable(name: "dlen", arg: 3, scope: !7975, file: !7858, line: 64, type: !32)
!7982 = !DILocalVariable(name: "flag", arg: 4, scope: !7975, file: !7858, line: 65, type: !32)
!7983 = !DILocalVariable(name: "sched", arg: 5, scope: !7975, file: !7858, line: 65, type: !2835)
!7984 = !DILocalVariable(name: "i", scope: !7975, file: !7858, line: 68, type: !32)
!7985 = !DILocation(line: 0, scope: !7975)
!7986 = !DILocation(line: 70, column: 11, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7975, file: !7858, line: 70, column: 6)
!7988 = !DILocation(line: 70, column: 6, scope: !7975)
!7989 = !DILocation(line: 71, column: 26, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7987, file: !7858, line: 70, column: 16)
!7991 = !DILocation(line: 71, column: 8, scope: !7990)
!7992 = !DILocation(line: 72, column: 3, scope: !7990)
!7993 = !DILocation(line: 72, column: 8, scope: !7990)
!7994 = !DILocation(line: 73, column: 8, scope: !7990)
!7995 = !DILocation(line: 74, column: 2, scope: !7990)
!7996 = !DILocation(line: 0, scope: !7987)
!7997 = !DILocation(line: 78, column: 11, scope: !7975)
!7998 = !DILocation(line: 78, column: 2, scope: !7975)
!7999 = !DILocation(line: 79, column: 30, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7975, file: !7858, line: 78, column: 19)
!8001 = !DILocation(line: 79, column: 25, scope: !8000)
!8002 = !DILocation(line: 79, column: 6, scope: !8000)
!8003 = !DILocation(line: 79, column: 9, scope: !8000)
!8004 = !DILocation(line: 79, column: 3, scope: !8000)
!8005 = !DILocation(line: 79, column: 22, scope: !8000)
!8006 = !DILocation(line: 80, column: 11, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8000, file: !7858, line: 80, column: 7)
!8008 = !DILocation(line: 80, column: 24, scope: !8007)
!8009 = !DILocation(line: 80, column: 30, scope: !8007)
!8010 = !DILocation(line: 81, column: 11, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8007, file: !7858, line: 80, column: 44)
!8012 = !DILocation(line: 82, column: 3, scope: !8011)
!8013 = distinct !{!8013, !7998, !8014}
!8014 = !DILocation(line: 83, column: 2, scope: !7975)
!8015 = !DILocation(line: 84, column: 1, scope: !7975)
!8016 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7858, file: !7858, line: 93, type: !8017, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !8020)
!8017 = !DISubroutineType(types: !8018)
!8018 = !{!125, !184, !32, !490, !32, !184, !8019}
!8019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2835)
!8020 = !{!8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030}
!8021 = !DILocalVariable(name: "out", arg: 1, scope: !8016, file: !7858, line: 93, type: !184)
!8022 = !DILocalVariable(name: "outlen", arg: 2, scope: !8016, file: !7858, line: 93, type: !32)
!8023 = !DILocalVariable(name: "in", arg: 3, scope: !8016, file: !7858, line: 93, type: !490)
!8024 = !DILocalVariable(name: "inlen", arg: 4, scope: !8016, file: !7858, line: 94, type: !32)
!8025 = !DILocalVariable(name: "ctr", arg: 5, scope: !8016, file: !7858, line: 94, type: !184)
!8026 = !DILocalVariable(name: "sched", arg: 6, scope: !8016, file: !7858, line: 94, type: !8019)
!8027 = !DILocalVariable(name: "buffer", scope: !8016, file: !7858, line: 97, type: !311)
!8028 = !DILocalVariable(name: "nonce", scope: !8016, file: !7858, line: 98, type: !311)
!8029 = !DILocalVariable(name: "block_num", scope: !8016, file: !7858, line: 99, type: !227)
!8030 = !DILocalVariable(name: "i", scope: !8016, file: !7858, line: 100, type: !32)
!8031 = !DILocation(line: 0, scope: !8016)
!8032 = !DILocation(line: 97, column: 2, scope: !8016)
!8033 = !DILocation(line: 97, column: 10, scope: !8016)
!8034 = !DILocation(line: 98, column: 2, scope: !8016)
!8035 = !DILocation(line: 98, column: 10, scope: !8016)
!8036 = !DILocation(line: 103, column: 10, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8016, file: !7858, line: 103, column: 6)
!8038 = !DILocation(line: 103, column: 27, scope: !8037)
!8039 = !DILocation(line: 114, column: 9, scope: !8016)
!8040 = !DILocation(line: 117, column: 27, scope: !8016)
!8041 = !DILocation(line: 117, column: 44, scope: !8016)
!8042 = !DILocation(line: 117, column: 37, scope: !8016)
!8043 = !DILocation(line: 117, column: 43, scope: !8016)
!8044 = !DILocation(line: 117, column: 42, scope: !8016)
!8045 = !DILocation(line: 118, column: 2, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8016, file: !7858, line: 118, column: 2)
!8047 = !DILocation(line: 119, column: 10, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7858, line: 119, column: 7)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7858, line: 118, column: 30)
!8050 = distinct !DILexicalBlock(scope: !8046, file: !7858, line: 118, column: 2)
!8051 = !DILocation(line: 119, column: 33, scope: !8048)
!8052 = !DILocation(line: 119, column: 7, scope: !8049)
!8053 = !DILocation(line: 120, column: 13, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8048, file: !7858, line: 119, column: 39)
!8055 = !DILocation(line: 121, column: 36, scope: !8054)
!8056 = !DILocation(line: 121, column: 16, scope: !8054)
!8057 = !DILocation(line: 121, column: 14, scope: !8054)
!8058 = !DILocation(line: 122, column: 16, scope: !8054)
!8059 = !DILocation(line: 122, column: 14, scope: !8054)
!8060 = !DILocation(line: 123, column: 9, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8054, file: !7858, line: 123, column: 8)
!8062 = !DILocation(line: 123, column: 8, scope: !8054)
!8063 = !DILocation(line: 128, column: 12, scope: !8049)
!8064 = !DILocation(line: 128, column: 49, scope: !8049)
!8065 = !DILocation(line: 128, column: 46, scope: !8049)
!8066 = !DILocation(line: 128, column: 44, scope: !8049)
!8067 = !DILocation(line: 128, column: 7, scope: !8049)
!8068 = !DILocation(line: 128, column: 10, scope: !8049)
!8069 = !DILocation(line: 118, column: 25, scope: !8050)
!8070 = !DILocation(line: 118, column: 16, scope: !8050)
!8071 = distinct !{!8071, !8045, !8072}
!8072 = !DILocation(line: 129, column: 2, scope: !8046)
!8073 = !DILocation(line: 132, column: 12, scope: !8016)
!8074 = !DILocation(line: 132, column: 33, scope: !8016)
!8075 = !DILocation(line: 132, column: 2, scope: !8016)
!8076 = !DILocation(line: 132, column: 10, scope: !8016)
!8077 = !DILocation(line: 132, column: 23, scope: !8016)
!8078 = !DILocation(line: 132, column: 31, scope: !8016)
!8079 = !DILocation(line: 134, column: 2, scope: !8016)
!8080 = !DILocation(line: 135, column: 1, scope: !8016)
!8081 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7858, file: !7858, line: 198, type: !7883, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !8082)
!8082 = !{!8083, !8084, !8085, !8086, !8087, !8088, !8089, !8090, !8091, !8092}
!8083 = !DILocalVariable(name: "out", arg: 1, scope: !8081, file: !7858, line: 198, type: !184)
!8084 = !DILocalVariable(name: "olen", arg: 2, scope: !8081, file: !7858, line: 198, type: !32)
!8085 = !DILocalVariable(name: "associated_data", arg: 3, scope: !8081, file: !7858, line: 199, type: !490)
!8086 = !DILocalVariable(name: "alen", arg: 4, scope: !8081, file: !7858, line: 200, type: !32)
!8087 = !DILocalVariable(name: "payload", arg: 5, scope: !8081, file: !7858, line: 200, type: !490)
!8088 = !DILocalVariable(name: "plen", arg: 6, scope: !8081, file: !7858, line: 201, type: !32)
!8089 = !DILocalVariable(name: "c", arg: 7, scope: !8081, file: !7858, line: 201, type: !2829)
!8090 = !DILocalVariable(name: "b", scope: !8081, file: !7858, line: 215, type: !311)
!8091 = !DILocalVariable(name: "tag", scope: !8081, file: !7858, line: 216, type: !311)
!8092 = !DILocalVariable(name: "i", scope: !8081, file: !7858, line: 217, type: !32)
!8093 = !DILocation(line: 0, scope: !8081)
!8094 = !DILocation(line: 205, column: 11, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 205, column: 6)
!8096 = !DILocation(line: 205, column: 29, scope: !8095)
!8097 = !DILocation(line: 207, column: 13, scope: !8095)
!8098 = !DILocation(line: 207, column: 18, scope: !8095)
!8099 = !DILocation(line: 208, column: 13, scope: !8095)
!8100 = !DILocation(line: 208, column: 18, scope: !8095)
!8101 = !DILocation(line: 211, column: 24, scope: !8095)
!8102 = !DILocation(line: 211, column: 19, scope: !8095)
!8103 = !DILocation(line: 211, column: 12, scope: !8095)
!8104 = !DILocation(line: 205, column: 6, scope: !8081)
!8105 = !DILocation(line: 215, column: 2, scope: !8081)
!8106 = !DILocation(line: 215, column: 10, scope: !8081)
!8107 = !DILocation(line: 216, column: 2, scope: !8081)
!8108 = !DILocation(line: 216, column: 10, scope: !8081)
!8109 = !DILocation(line: 222, column: 7, scope: !8081)
!8110 = !DILocation(line: 223, column: 2, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 223, column: 2)
!8112 = !DILocation(line: 224, column: 21, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !7858, line: 223, column: 27)
!8114 = distinct !DILexicalBlock(scope: !8111, file: !7858, line: 223, column: 2)
!8115 = !DILocation(line: 224, column: 10, scope: !8113)
!8116 = !DILocation(line: 224, column: 3, scope: !8113)
!8117 = !DILocation(line: 224, column: 8, scope: !8113)
!8118 = !DILocation(line: 223, column: 22, scope: !8114)
!8119 = !DILocation(line: 223, column: 16, scope: !8114)
!8120 = distinct !{!8120, !8110, !8121}
!8121 = !DILocation(line: 225, column: 2, scope: !8111)
!8122 = !DILocation(line: 226, column: 10, scope: !8081)
!8123 = !DILocation(line: 226, column: 16, scope: !8081)
!8124 = !DILocation(line: 226, column: 2, scope: !8081)
!8125 = !DILocation(line: 226, column: 8, scope: !8081)
!8126 = !DILocation(line: 229, column: 67, scope: !8081)
!8127 = !DILocation(line: 229, column: 2, scope: !8081)
!8128 = !DILocation(line: 231, column: 16, scope: !8081)
!8129 = !DILocation(line: 231, column: 8, scope: !8081)
!8130 = !DILocation(line: 234, column: 33, scope: !8081)
!8131 = !DILocation(line: 234, column: 9, scope: !8081)
!8132 = !DILocation(line: 235, column: 16, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !7858, line: 235, column: 2)
!8134 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 235, column: 2)
!8135 = !DILocation(line: 235, column: 2, scope: !8134)
!8136 = !DILocation(line: 236, column: 39, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8133, file: !7858, line: 235, column: 32)
!8138 = !DILocation(line: 236, column: 12, scope: !8137)
!8139 = !DILocation(line: 236, column: 46, scope: !8137)
!8140 = !DILocation(line: 236, column: 44, scope: !8137)
!8141 = !DILocation(line: 236, column: 3, scope: !8137)
!8142 = !DILocation(line: 236, column: 10, scope: !8137)
!8143 = !DILocation(line: 235, column: 27, scope: !8133)
!8144 = distinct !{!8144, !8135, !8145}
!8145 = !DILocation(line: 237, column: 2, scope: !8134)
!8146 = !DILocation(line: 242, column: 10, scope: !8081)
!8147 = !DILocation(line: 242, column: 51, scope: !8081)
!8148 = !DILocation(line: 242, column: 30, scope: !8081)
!8149 = !DILocation(line: 242, column: 9, scope: !8081)
!8150 = !DILocation(line: 242, column: 7, scope: !8081)
!8151 = !DILocation(line: 243, column: 2, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 243, column: 2)
!8153 = !DILocation(line: 244, column: 21, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !7858, line: 243, column: 27)
!8155 = distinct !DILexicalBlock(scope: !8152, file: !7858, line: 243, column: 2)
!8156 = !DILocation(line: 244, column: 10, scope: !8154)
!8157 = !DILocation(line: 244, column: 3, scope: !8154)
!8158 = !DILocation(line: 244, column: 8, scope: !8154)
!8159 = !DILocation(line: 243, column: 22, scope: !8155)
!8160 = !DILocation(line: 243, column: 16, scope: !8155)
!8161 = distinct !{!8161, !8151, !8162}
!8162 = !DILocation(line: 245, column: 2, scope: !8152)
!8163 = !DILocation(line: 246, column: 26, scope: !8081)
!8164 = !DILocation(line: 246, column: 37, scope: !8081)
!8165 = !DILocation(line: 246, column: 10, scope: !8081)
!8166 = !DILocation(line: 246, column: 8, scope: !8081)
!8167 = !DILocation(line: 247, column: 10, scope: !8081)
!8168 = !DILocation(line: 247, column: 8, scope: !8081)
!8169 = !DILocation(line: 250, column: 33, scope: !8081)
!8170 = !DILocation(line: 250, column: 9, scope: !8081)
!8171 = !DILocation(line: 251, column: 6, scope: !8081)
!8172 = !DILocation(line: 252, column: 47, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7858, line: 251, column: 16)
!8174 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 251, column: 6)
!8175 = !DILocation(line: 252, column: 3, scope: !8173)
!8176 = !DILocation(line: 253, column: 2, scope: !8173)
!8177 = !DILocation(line: 254, column: 6, scope: !8081)
!8178 = !DILocation(line: 255, column: 33, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !7858, line: 254, column: 16)
!8180 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 254, column: 6)
!8181 = !DILocation(line: 255, column: 28, scope: !8179)
!8182 = !DILocation(line: 255, column: 45, scope: !8179)
!8183 = !DILocation(line: 255, column: 3, scope: !8179)
!8184 = !DILocation(line: 256, column: 2, scope: !8179)
!8185 = !DILocation(line: 259, column: 26, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8081, file: !7858, line: 259, column: 6)
!8187 = !DILocation(line: 259, column: 6, scope: !8186)
!8188 = !DILocation(line: 259, column: 32, scope: !8186)
!8189 = !DILocation(line: 259, column: 6, scope: !8081)
!8190 = !DILocation(line: 263, column: 26, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8186, file: !7858, line: 261, column: 11)
!8192 = !DILocation(line: 263, column: 21, scope: !8191)
!8193 = !DILocation(line: 263, column: 3, scope: !8191)
!8194 = !DILocation(line: 264, column: 3, scope: !8191)
!8195 = !DILocation(line: 0, scope: !8186)
!8196 = !DILocation(line: 266, column: 1, scope: !8081)
!8197 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8198, file: !8198, line: 57, type: !8199, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !8245)
!8198 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8199 = !DISubroutineType(types: !8200)
!8200 = !{null, !32, !8201}
!8201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8202, size: 32)
!8202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8203)
!8203 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2962, line: 141, baseType: !8204)
!8204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2962, line: 97, size: 256, elements: !8205)
!8205 = !{!8206}
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8204, file: !2962, line: 107, baseType: !8207, size: 256)
!8207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2962, line: 98, size: 256, elements: !8208)
!8208 = !{!8209, !8214, !8219, !8224, !8229, !8234, !8239, !8244}
!8209 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 99, baseType: !8210, size: 32)
!8210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 99, size: 32, elements: !8211)
!8211 = !{!8212, !8213}
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8210, file: !2962, line: 99, baseType: !208, size: 32)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8210, file: !2962, line: 99, baseType: !208, size: 32)
!8214 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 100, baseType: !8215, size: 32, offset: 32)
!8215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 100, size: 32, elements: !8216)
!8216 = !{!8217, !8218}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8215, file: !2962, line: 100, baseType: !208, size: 32)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8215, file: !2962, line: 100, baseType: !208, size: 32)
!8219 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 101, baseType: !8220, size: 32, offset: 64)
!8220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 101, size: 32, elements: !8221)
!8221 = !{!8222, !8223}
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8220, file: !2962, line: 101, baseType: !208, size: 32)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8220, file: !2962, line: 101, baseType: !208, size: 32)
!8224 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 102, baseType: !8225, size: 32, offset: 96)
!8225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 102, size: 32, elements: !8226)
!8226 = !{!8227, !8228}
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8225, file: !2962, line: 102, baseType: !208, size: 32)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8225, file: !2962, line: 102, baseType: !208, size: 32)
!8229 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 103, baseType: !8230, size: 32, offset: 128)
!8230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 103, size: 32, elements: !8231)
!8231 = !{!8232, !8233}
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8230, file: !2962, line: 103, baseType: !208, size: 32)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8230, file: !2962, line: 103, baseType: !208, size: 32)
!8234 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 104, baseType: !8235, size: 32, offset: 160)
!8235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 104, size: 32, elements: !8236)
!8236 = !{!8237, !8238}
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8235, file: !2962, line: 104, baseType: !208, size: 32)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8235, file: !2962, line: 104, baseType: !208, size: 32)
!8239 = !DIDerivedType(tag: DW_TAG_member, scope: !8207, file: !2962, line: 105, baseType: !8240, size: 32, offset: 192)
!8240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8207, file: !2962, line: 105, size: 32, elements: !8241)
!8241 = !{!8242, !8243}
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8240, file: !2962, line: 105, baseType: !208, size: 32)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8240, file: !2962, line: 105, baseType: !208, size: 32)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8207, file: !2962, line: 106, baseType: !208, size: 32, offset: 224)
!8245 = !{!8246, !8247}
!8246 = !DILocalVariable(name: "reason", arg: 1, scope: !8197, file: !8198, line: 57, type: !32)
!8247 = !DILocalVariable(name: "esf", arg: 2, scope: !8197, file: !8198, line: 57, type: !8201)
!8248 = !DILocation(line: 0, scope: !8197)
!8249 = !DILocation(line: 60, column: 10, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8197, file: !8198, line: 60, column: 6)
!8251 = !DILocation(line: 60, column: 6, scope: !8197)
!8252 = !DILocation(line: 61, column: 3, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8250, file: !8198, line: 60, column: 19)
!8254 = !DILocation(line: 62, column: 2, scope: !8253)
!8255 = !DILocation(line: 63, column: 2, scope: !8197)
!8256 = !DILocation(line: 64, column: 1, scope: !8197)
!8257 = distinct !DISubprogram(name: "esf_dump", scope: !8198, file: !8198, line: 20, type: !8258, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !8260)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{null, !8201}
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "esf", arg: 1, scope: !8257, file: !8198, line: 20, type: !8201)
!8262 = !DILocation(line: 0, scope: !8257)
!8263 = !DILocation(line: 22, column: 2, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !8198, line: 22, column: 2)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !8198, line: 22, column: 2)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !8198, line: 22, column: 2)
!8267 = distinct !DILexicalBlock(scope: !8257, file: !8198, line: 22, column: 2)
!8268 = !DILocation(line: 24, column: 2, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !8198, line: 24, column: 2)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !8198, line: 24, column: 2)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !8198, line: 24, column: 2)
!8272 = distinct !DILexicalBlock(scope: !8257, file: !8198, line: 24, column: 2)
!8273 = !DILocation(line: 26, column: 2, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !8198, line: 26, column: 2)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !8198, line: 26, column: 2)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !8198, line: 26, column: 2)
!8277 = distinct !DILexicalBlock(scope: !8257, file: !8198, line: 26, column: 2)
!8278 = !DILocation(line: 53, column: 2, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !8198, line: 53, column: 2)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !8198, line: 53, column: 2)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !8198, line: 53, column: 2)
!8282 = distinct !DILexicalBlock(scope: !8257, file: !8198, line: 53, column: 2)
!8283 = !DILocation(line: 55, column: 1, scope: !8257)
!8284 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8198, file: !8198, line: 82, type: !8285, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !8300)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{null, !8201, !8287}
!8287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8288, size: 32)
!8288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8289)
!8289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8290)
!8290 = !{!8291, !8292, !8293, !8294, !8295, !8296, !8297, !8298, !8299}
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8289, file: !601, line: 26, baseType: !208, size: 32)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8289, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8289, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8289, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8289, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8289, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8289, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8289, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8289, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8300 = !{!8301, !8302, !8303}
!8301 = !DILocalVariable(name: "esf", arg: 1, scope: !8284, file: !8198, line: 82, type: !8201)
!8302 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8284, file: !8198, line: 82, type: !8287)
!8303 = !DILocalVariable(name: "reason", scope: !8284, file: !8198, line: 88, type: !32)
!8304 = !DILocation(line: 0, scope: !8284)
!8305 = !DILocation(line: 88, column: 35, scope: !8284)
!8306 = !DILocation(line: 108, column: 2, scope: !8284)
!8307 = !DILocation(line: 131, column: 1, scope: !8284)
!8308 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8198, file: !8198, line: 133, type: !8309, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !8311)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{null, !124}
!8311 = !{!8312, !8313, !8314}
!8312 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8308, file: !8198, line: 133, type: !124)
!8313 = !DILocalVariable(name: "ssf_contents", scope: !8308, file: !8198, line: 135, type: !1047)
!8314 = !DILocalVariable(name: "oops_esf", scope: !8308, file: !8198, line: 136, type: !8203)
!8315 = !DILocation(line: 0, scope: !8308)
!8316 = !DILocation(line: 136, column: 2, scope: !8308)
!8317 = !DILocation(line: 136, column: 15, scope: !8308)
!8318 = !DILocation(line: 139, column: 22, scope: !8308)
!8319 = !DILocation(line: 139, column: 17, scope: !8308)
!8320 = !DILocation(line: 139, column: 20, scope: !8308)
!8321 = !DILocation(line: 141, column: 2, scope: !8308)
!8322 = !DILocation(line: 142, column: 2, scope: !8308)
!8323 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8324, file: !8324, line: 40, type: !6916, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8325)
!8324 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8325 = !{!8326}
!8326 = !DILocalVariable(name: "irq", arg: 1, scope: !8323, file: !8324, line: 40, type: !32)
!8327 = !DILocation(line: 0, scope: !8323)
!8328 = !DILocation(line: 42, column: 2, scope: !8323)
!8329 = !DILocation(line: 43, column: 1, scope: !8323)
!8330 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !680, file: !680, line: 1684, type: !8331, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8333)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{null, !943}
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8330, file: !680, line: 1684, type: !943)
!8335 = !DILocation(line: 0, scope: !8330)
!8336 = !DILocation(line: 1686, column: 23, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8330, file: !680, line: 1686, column: 7)
!8338 = !DILocation(line: 1686, column: 7, scope: !8330)
!8339 = !DILocation(line: 1688, column: 5, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8337, file: !680, line: 1687, column: 3)
!8341 = !{i64 2151255878}
!8342 = !DILocation(line: 1689, column: 81, scope: !8340)
!8343 = !DILocation(line: 1689, column: 60, scope: !8340)
!8344 = !DILocation(line: 1689, column: 34, scope: !8340)
!8345 = !DILocation(line: 1689, column: 5, scope: !8340)
!8346 = !DILocation(line: 1689, column: 43, scope: !8340)
!8347 = !DILocation(line: 1690, column: 5, scope: !8340)
!8348 = !{i64 2151255992}
!8349 = !DILocation(line: 1691, column: 3, scope: !8340)
!8350 = !DILocation(line: 1692, column: 1, scope: !8330)
!8351 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8324, file: !8324, line: 45, type: !6916, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8352)
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "irq", arg: 1, scope: !8351, file: !8324, line: 45, type: !32)
!8354 = !DILocation(line: 0, scope: !8351)
!8355 = !DILocation(line: 47, column: 2, scope: !8351)
!8356 = !DILocation(line: 48, column: 1, scope: !8351)
!8357 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !680, file: !680, line: 1722, type: !8331, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8358)
!8358 = !{!8359}
!8359 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8357, file: !680, line: 1722, type: !943)
!8360 = !DILocation(line: 0, scope: !8357)
!8361 = !DILocation(line: 1724, column: 23, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8357, file: !680, line: 1724, column: 7)
!8363 = !DILocation(line: 1724, column: 7, scope: !8357)
!8364 = !DILocation(line: 1726, column: 81, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8362, file: !680, line: 1725, column: 3)
!8366 = !DILocation(line: 1726, column: 60, scope: !8365)
!8367 = !DILocation(line: 1726, column: 34, scope: !8365)
!8368 = !DILocation(line: 1726, column: 5, scope: !8365)
!8369 = !DILocation(line: 1726, column: 43, scope: !8365)
!8370 = !DILocation(line: 271, column: 3, scope: !8371, inlinedAt: !8373)
!8371 = distinct !DISubprogram(name: "__DSB", scope: !8372, file: !8372, line: 269, type: !3363, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !639)
!8372 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8373 = distinct !DILocation(line: 1727, column: 5, scope: !8365)
!8374 = !{i64 3710261}
!8375 = !DILocation(line: 260, column: 3, scope: !8376, inlinedAt: !8377)
!8376 = distinct !DISubprogram(name: "__ISB", scope: !8372, file: !8372, line: 258, type: !3363, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !639)
!8377 = distinct !DILocation(line: 1728, column: 5, scope: !8365)
!8378 = !{i64 3709978}
!8379 = !DILocation(line: 1729, column: 3, scope: !8365)
!8380 = !DILocation(line: 1730, column: 1, scope: !8357)
!8381 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8324, file: !8324, line: 50, type: !8382, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8384)
!8382 = !DISubroutineType(types: !8383)
!8383 = !{!125, !32}
!8384 = !{!8385}
!8385 = !DILocalVariable(name: "irq", arg: 1, scope: !8381, file: !8324, line: 50, type: !32)
!8386 = !DILocation(line: 0, scope: !8381)
!8387 = !DILocation(line: 52, column: 20, scope: !8381)
!8388 = !DILocation(line: 52, column: 9, scope: !8381)
!8389 = !DILocation(line: 52, column: 41, scope: !8381)
!8390 = !DILocation(line: 52, column: 39, scope: !8381)
!8391 = !DILocation(line: 52, column: 2, scope: !8381)
!8392 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8324, file: !8324, line: 64, type: !8393, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8395)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{null, !32, !32, !208}
!8395 = !{!8396, !8397, !8398}
!8396 = !DILocalVariable(name: "irq", arg: 1, scope: !8392, file: !8324, line: 64, type: !32)
!8397 = !DILocalVariable(name: "prio", arg: 2, scope: !8392, file: !8324, line: 64, type: !32)
!8398 = !DILocalVariable(name: "flags", arg: 3, scope: !8392, file: !8324, line: 64, type: !208)
!8399 = !DILocation(line: 0, scope: !8392)
!8400 = !DILocation(line: 83, column: 8, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !8324, line: 82, column: 9)
!8402 = distinct !DILexicalBlock(scope: !8392, file: !8324, line: 76, column: 6)
!8403 = !DILocation(line: 95, column: 2, scope: !8392)
!8404 = !DILocation(line: 96, column: 1, scope: !8392)
!8405 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8406, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8408)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{null, !943, !208}
!8408 = !{!8409, !8410}
!8409 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8405, file: !680, line: 1814, type: !943)
!8410 = !DILocalVariable(name: "priority", arg: 2, scope: !8405, file: !680, line: 1814, type: !208)
!8411 = !DILocation(line: 0, scope: !8405)
!8412 = !DILocation(line: 0, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8405, file: !680, line: 1816, column: 7)
!8414 = !DILocation(line: 1816, column: 7, scope: !8405)
!8415 = !DILocation(line: 1824, column: 1, scope: !8405)
!8416 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8324, file: !8324, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8417)
!8417 = !{!8418}
!8418 = !DILocalVariable(name: "unused", arg: 1, scope: !8416, file: !8324, line: 155, type: !13)
!8419 = !DILocation(line: 0, scope: !8416)
!8420 = !DILocation(line: 159, column: 2, scope: !8416)
!8421 = !DILocation(line: 160, column: 1, scope: !8416)
!8422 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8423, file: !8423, line: 87, type: !3363, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2899, retainedNodes: !639)
!8423 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8424 = !DILocation(line: 89, column: 2, scope: !8422)
!8425 = !DILocation(line: 90, column: 2, scope: !8422)
!8426 = !DILocation(line: 91, column: 1, scope: !8422)
!8427 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8423, file: !8423, line: 23, type: !3363, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8428 = !DISubprogram(name: "z_arm_int_exit", scope: !8429, file: !8429, line: 153, type: !3363, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8429 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8430 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8431, file: !8431, line: 256, type: !3363, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !639)
!8431 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8432 = !DILocation(line: 258, column: 2, scope: !8430)
!8433 = !DILocation(line: 260, column: 2, scope: !8430)
!8434 = !DILocation(line: 262, column: 2, scope: !8430)
!8435 = !DILocation(line: 263, column: 2, scope: !8430)
!8436 = !DILocation(line: 267, column: 2, scope: !8430)
!8437 = !DILocation(line: 268, column: 2, scope: !8430)
!8438 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8431, file: !8431, line: 53, type: !3363, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !639)
!8439 = !DILocation(line: 55, column: 12, scope: !8438)
!8440 = !DILocation(line: 271, column: 3, scope: !8441, inlinedAt: !8442)
!8441 = distinct !DISubprogram(name: "__DSB", scope: !8372, file: !8372, line: 269, type: !3363, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !639)
!8442 = distinct !DILocation(line: 56, column: 2, scope: !8438)
!8443 = !{i64 3708932}
!8444 = !DILocation(line: 260, column: 3, scope: !8445, inlinedAt: !8446)
!8445 = distinct !DISubprogram(name: "__ISB", scope: !8372, file: !8372, line: 258, type: !3363, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !639)
!8446 = distinct !DILocation(line: 57, column: 2, scope: !8438)
!8447 = !{i64 3708649}
!8448 = !DILocation(line: 58, column: 1, scope: !8438)
!8449 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8431, file: !8431, line: 96, type: !3363, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !639)
!8450 = !DILocation(line: 103, column: 13, scope: !8449)
!8451 = !DILocation(line: 975, column: 3, scope: !8452, inlinedAt: !8457)
!8452 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8372, file: !8372, line: 971, type: !8453, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !8455)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!208}
!8455 = !{!8456}
!8456 = !DILocalVariable(name: "result", scope: !8452, file: !8372, line: 973, type: !208)
!8457 = distinct !DILocation(line: 189, column: 16, scope: !8449)
!8458 = !{i64 3729762}
!8459 = !DILocation(line: 0, scope: !8452, inlinedAt: !8457)
!8460 = !DILocation(line: 189, column: 32, scope: !8449)
!8461 = !DILocalVariable(name: "control", arg: 1, scope: !8462, file: !8372, line: 1001, type: !208)
!8462 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8372, file: !8372, line: 1001, type: !8463, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2901, retainedNodes: !8465)
!8463 = !DISubroutineType(types: !8464)
!8464 = !{null, !208}
!8465 = !{!8461}
!8466 = !DILocation(line: 0, scope: !8462, inlinedAt: !8467)
!8467 = distinct !DILocation(line: 189, column: 2, scope: !8449)
!8468 = !DILocation(line: 1003, column: 3, scope: !8462, inlinedAt: !8467)
!8469 = !{i64 3730482}
!8470 = !DILocation(line: 260, column: 3, scope: !8445, inlinedAt: !8471)
!8471 = distinct !DILocation(line: 1004, column: 3, scope: !8462, inlinedAt: !8467)
!8472 = !DILocation(line: 191, column: 1, scope: !8449)
!8473 = distinct !DISubprogram(name: "arch_swap", scope: !8474, file: !8474, line: 33, type: !8382, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !8475)
!8474 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "key", arg: 1, scope: !8473, file: !8474, line: 33, type: !32)
!8477 = !DILocation(line: 0, scope: !8473)
!8478 = !DILocation(line: 36, column: 2, scope: !8473)
!8479 = !DILocation(line: 36, column: 17, scope: !8473)
!8480 = !DILocation(line: 36, column: 25, scope: !8473)
!8481 = !DILocation(line: 37, column: 37, scope: !8473)
!8482 = !DILocation(line: 37, column: 17, scope: !8473)
!8483 = !DILocation(line: 37, column: 35, scope: !8473)
!8484 = !DILocation(line: 41, column: 12, scope: !8473)
!8485 = !DILocalVariable(name: "key", arg: 1, scope: !8486, file: !6905, line: 84, type: !32)
!8486 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2929, retainedNodes: !8487)
!8487 = !{!8485}
!8488 = !DILocation(line: 0, scope: !8486, inlinedAt: !8489)
!8489 = distinct !DILocation(line: 44, column: 2, scope: !8473)
!8490 = !DILocation(line: 95, column: 2, scope: !8486, inlinedAt: !8489)
!8491 = !{i64 2279433}
!8492 = !DILocation(line: 53, column: 9, scope: !8473)
!8493 = !DILocation(line: 53, column: 24, scope: !8473)
!8494 = !DILocation(line: 53, column: 2, scope: !8473)
!8495 = distinct !DISubprogram(name: "arch_new_thread", scope: !8496, file: !8496, line: 56, type: !8497, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2957, retainedNodes: !8604)
!8496 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8497 = !DISubroutineType(types: !8498)
!8498 = !{null, !8499, !8599, !393, !5311, !124, !124, !124}
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8500, size: 32)
!8500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !8501)
!8501 = !{!8502, !8560, !8572, !8573, !8574, !8575, !8581, !8594}
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8500, file: !531, line: 247, baseType: !8503, size: 384)
!8503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !8504)
!8504 = !{!8505, !8529, !8536, !8537, !8538, !8547, !8548, !8549}
!8505 = !DIDerivedType(tag: DW_TAG_member, scope: !8503, file: !531, line: 60, baseType: !8506, size: 64)
!8506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8503, file: !531, line: 60, size: 64, elements: !8507)
!8507 = !{!8508, !8523}
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8506, file: !531, line: 61, baseType: !8509, size: 64)
!8509 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !8510)
!8510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !8511)
!8511 = !{!8512, !8518}
!8512 = !DIDerivedType(tag: DW_TAG_member, scope: !8510, file: !541, line: 38, baseType: !8513, size: 32)
!8513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8510, file: !541, line: 38, size: 32, elements: !8514)
!8514 = !{!8515, !8517}
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8513, file: !541, line: 39, baseType: !8516, size: 32)
!8516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8510, size: 32)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8513, file: !541, line: 40, baseType: !8516, size: 32)
!8518 = !DIDerivedType(tag: DW_TAG_member, scope: !8510, file: !541, line: 42, baseType: !8519, size: 32, offset: 32)
!8519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8510, file: !541, line: 42, size: 32, elements: !8520)
!8520 = !{!8521, !8522}
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8519, file: !541, line: 43, baseType: !8516, size: 32)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8519, file: !541, line: 44, baseType: !8516, size: 32)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8506, file: !531, line: 62, baseType: !8524, size: 64)
!8524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !8525)
!8525 = !{!8526}
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8524, file: !557, line: 50, baseType: !8527, size: 64)
!8527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8528, size: 64, elements: !562)
!8528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8524, size: 32)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8503, file: !531, line: 68, baseType: !8530, size: 32, offset: 64)
!8530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8531, size: 32)
!8531 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !8532)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !8533)
!8533 = !{!8534}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8532, file: !567, line: 232, baseType: !8535, size: 64)
!8535 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !8510)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8503, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8503, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!8538 = !DIDerivedType(tag: DW_TAG_member, scope: !8503, file: !531, line: 90, baseType: !8539, size: 16, offset: 112)
!8539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8503, file: !531, line: 90, size: 16, elements: !8540)
!8540 = !{!8541, !8546}
!8541 = !DIDerivedType(tag: DW_TAG_member, scope: !8539, file: !531, line: 91, baseType: !8542, size: 16)
!8542 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8539, file: !531, line: 91, size: 16, elements: !8543)
!8543 = !{!8544, !8545}
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8542, file: !531, line: 96, baseType: !581, size: 8)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8542, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8539, file: !531, line: 100, baseType: !227, size: 16)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8503, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8503, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8503, file: !531, line: 131, baseType: !8550, size: 192, offset: 192)
!8550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !8551)
!8551 = !{!8552, !8553, !8559}
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8550, file: !567, line: 245, baseType: !8509, size: 64)
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8550, file: !567, line: 246, baseType: !8554, size: 32, offset: 64)
!8554 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !8555)
!8555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8556, size: 32)
!8556 = !DISubroutineType(types: !8557)
!8557 = !{null, !8558}
!8558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8550, size: 32)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8550, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8500, file: !531, line: 250, baseType: !8561, size: 288, offset: 384)
!8561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8562)
!8562 = !{!8563, !8564, !8565, !8566, !8567, !8568, !8569, !8570, !8571}
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8561, file: !601, line: 26, baseType: !208, size: 32)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8561, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8561, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8561, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8561, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8561, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8561, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8561, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8561, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8500, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8500, file: !531, line: 256, baseType: !8531, size: 64, offset: 704)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8500, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8500, file: !531, line: 300, baseType: !8576, size: 96, offset: 800)
!8576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !8577)
!8577 = !{!8578, !8579, !8580}
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8576, file: !531, line: 153, baseType: !22, size: 32)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8576, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8576, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8500, file: !531, line: 325, baseType: !8582, size: 32, offset: 896)
!8582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 32)
!8583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !8584)
!8584 = !{!8585, !8591, !8592}
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8583, file: !624, line: 5074, baseType: !8586, size: 96)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !8587)
!8587 = !{!8588, !8589, !8590}
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8586, file: !628, line: 57, baseType: !631, size: 32)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8586, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8586, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8583, file: !624, line: 5075, baseType: !8531, size: 64, offset: 96)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8583, file: !624, line: 5076, baseType: !8593, offset: 160)
!8593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8500, file: !531, line: 343, baseType: !8595, size: 64, offset: 928)
!8595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !8596)
!8596 = !{!8597, !8598}
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8595, file: !601, line: 63, baseType: !208, size: 32)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8595, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!8599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8600, size: 32)
!8600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5312, line: 44, baseType: !8601)
!8601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2434, line: 47, size: 8, elements: !8602)
!8602 = !{!8603}
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8601, file: !2434, line: 48, baseType: !142, size: 8)
!8604 = !{!8605, !8606, !8607, !8608, !8609, !8610, !8611, !8612}
!8605 = !DILocalVariable(name: "thread", arg: 1, scope: !8495, file: !8496, line: 56, type: !8499)
!8606 = !DILocalVariable(name: "stack", arg: 2, scope: !8495, file: !8496, line: 56, type: !8599)
!8607 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8495, file: !8496, line: 57, type: !393)
!8608 = !DILocalVariable(name: "entry", arg: 4, scope: !8495, file: !8496, line: 57, type: !5311)
!8609 = !DILocalVariable(name: "p1", arg: 5, scope: !8495, file: !8496, line: 58, type: !124)
!8610 = !DILocalVariable(name: "p2", arg: 6, scope: !8495, file: !8496, line: 58, type: !124)
!8611 = !DILocalVariable(name: "p3", arg: 7, scope: !8495, file: !8496, line: 58, type: !124)
!8612 = !DILocalVariable(name: "iframe", scope: !8495, file: !8496, line: 60, type: !2960)
!8613 = !DILocation(line: 0, scope: !8495)
!8614 = !DILocation(line: 85, column: 11, scope: !8495)
!8615 = !DILocation(line: 93, column: 10, scope: !8495)
!8616 = !DILocation(line: 98, column: 13, scope: !8495)
!8617 = !DILocation(line: 100, column: 15, scope: !8495)
!8618 = !DILocation(line: 100, column: 10, scope: !8495)
!8619 = !DILocation(line: 100, column: 13, scope: !8495)
!8620 = !DILocation(line: 101, column: 15, scope: !8495)
!8621 = !DILocation(line: 101, column: 10, scope: !8495)
!8622 = !DILocation(line: 101, column: 13, scope: !8495)
!8623 = !DILocation(line: 102, column: 15, scope: !8495)
!8624 = !DILocation(line: 102, column: 10, scope: !8495)
!8625 = !DILocation(line: 102, column: 13, scope: !8495)
!8626 = !DILocation(line: 103, column: 15, scope: !8495)
!8627 = !DILocation(line: 103, column: 10, scope: !8495)
!8628 = !DILocation(line: 103, column: 13, scope: !8495)
!8629 = !DILocation(line: 106, column: 10, scope: !8495)
!8630 = !DILocation(line: 106, column: 15, scope: !8495)
!8631 = !DILocation(line: 122, column: 29, scope: !8495)
!8632 = !DILocation(line: 122, column: 23, scope: !8495)
!8633 = !DILocation(line: 122, column: 27, scope: !8495)
!8634 = !DILocation(line: 123, column: 15, scope: !8495)
!8635 = !DILocation(line: 123, column: 23, scope: !8495)
!8636 = !DILocation(line: 143, column: 1, scope: !8495)
!8637 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8496, file: !8496, line: 385, type: !8638, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2957, retainedNodes: !8641)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!208, !8640, !8640}
!8640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8641 = !{!8642, !8643, !8644, !8647}
!8642 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8637, file: !8496, line: 385, type: !8640)
!8643 = !DILocalVariable(name: "psp", arg: 2, scope: !8637, file: !8496, line: 385, type: !8640)
!8644 = !DILocalVariable(name: "thread", scope: !8637, file: !8496, line: 388, type: !8645)
!8645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8646, size: 32)
!8646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8500)
!8647 = !DILocalVariable(name: "guard_len", scope: !8637, file: !8496, line: 405, type: !208)
!8648 = !DILocation(line: 0, scope: !8637)
!8649 = !DILocation(line: 388, column: 34, scope: !8637)
!8650 = !DILocation(line: 390, column: 13, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8637, file: !8496, line: 390, column: 6)
!8652 = !DILocation(line: 390, column: 6, scope: !8637)
!8653 = !DILocation(line: 438, column: 6, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8637, file: !8496, line: 438, column: 6)
!8655 = !DILocation(line: 438, column: 6, scope: !8637)
!8656 = !DILocation(line: 442, column: 3, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8654, file: !8496, line: 440, column: 22)
!8658 = !DILocation(line: 455, column: 1, scope: !8637)
!8659 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8496, file: !8496, line: 530, type: !8660, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2957, retainedNodes: !8662)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{null, !8499, !393, !5311}
!8662 = !{!8663, !8664, !8665}
!8663 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8659, file: !8496, line: 530, type: !8499)
!8664 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8659, file: !8496, line: 530, type: !393)
!8665 = !DILocalVariable(name: "_main", arg: 3, scope: !8659, file: !8496, line: 531, type: !5311)
!8666 = !DILocation(line: 0, scope: !8659)
!8667 = !DILocation(line: 535, column: 11, scope: !8659)
!8668 = !DILocation(line: 560, column: 2, scope: !8659)
!8669 = !DILocation(line: 576, column: 2, scope: !8659)
!8670 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8671 = !DILocation(line: 603, column: 2, scope: !8659)
!8672 = distinct !DISubprogram(name: "z_arm_fault", scope: !8673, file: !8673, line: 1036, type: !8674, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8689)
!8673 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8674 = !DISubroutineType(types: !8675)
!8675 = !{null, !208, !208, !208, !8676}
!8676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8677, size: 32)
!8677 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8678)
!8678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8679)
!8679 = !{!8680, !8681, !8682, !8683, !8684, !8685, !8686, !8687, !8688}
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8678, file: !601, line: 26, baseType: !208, size: 32)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8678, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8678, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8678, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8678, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8678, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8678, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8678, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8678, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8689 = !{!8690, !8691, !8692, !8693, !8694, !8695, !8696, !8697, !8698, !8699}
!8690 = !DILocalVariable(name: "msp", arg: 1, scope: !8672, file: !8673, line: 1036, type: !208)
!8691 = !DILocalVariable(name: "psp", arg: 2, scope: !8672, file: !8673, line: 1036, type: !208)
!8692 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8672, file: !8673, line: 1036, type: !208)
!8693 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8672, file: !8673, line: 1037, type: !8676)
!8694 = !DILocalVariable(name: "reason", scope: !8672, file: !8673, line: 1039, type: !208)
!8695 = !DILocalVariable(name: "fault", scope: !8672, file: !8673, line: 1040, type: !125)
!8696 = !DILocalVariable(name: "recoverable", scope: !8672, file: !8673, line: 1041, type: !153)
!8697 = !DILocalVariable(name: "nested_exc", scope: !8672, file: !8673, line: 1041, type: !153)
!8698 = !DILocalVariable(name: "esf", scope: !8672, file: !8673, line: 1042, type: !3028)
!8699 = !DILocalVariable(name: "esf_copy", scope: !8672, file: !8673, line: 1047, type: !3029)
!8700 = !DILocation(line: 0, scope: !8672)
!8701 = !DILocation(line: 1040, column: 19, scope: !8672)
!8702 = !DILocation(line: 1040, column: 24, scope: !8672)
!8703 = !DILocation(line: 1041, column: 2, scope: !8672)
!8704 = !DILocation(line: 1047, column: 2, scope: !8672)
!8705 = !DILocation(line: 1047, column: 15, scope: !8672)
!8706 = !DILocalVariable(name: "key", arg: 1, scope: !8707, file: !6905, line: 84, type: !32)
!8707 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8708)
!8708 = !{!8706}
!8709 = !DILocation(line: 0, scope: !8707, inlinedAt: !8710)
!8710 = distinct !DILocation(line: 1050, column: 2, scope: !8672)
!8711 = !DILocation(line: 95, column: 2, scope: !8707, inlinedAt: !8710)
!8712 = !{i64 2312677}
!8713 = !DILocation(line: 1055, column: 9, scope: !8672)
!8714 = !DILocation(line: 1063, column: 11, scope: !8672)
!8715 = !DILocation(line: 1064, column: 6, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8672, file: !8673, line: 1064, column: 6)
!8717 = !{i8 0, i8 2}
!8718 = !DILocation(line: 1064, column: 6, scope: !8672)
!8719 = !DILocation(line: 1070, column: 20, scope: !8672)
!8720 = !DILocation(line: 1070, column: 2, scope: !8672)
!8721 = !DILocation(line: 1089, column: 6, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8672, file: !8673, line: 1089, column: 6)
!8723 = !DILocation(line: 0, scope: !8722)
!8724 = !DILocation(line: 1089, column: 6, scope: !8672)
!8725 = !DILocation(line: 1090, column: 28, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !8673, line: 1090, column: 7)
!8727 = distinct !DILexicalBlock(scope: !8722, file: !8673, line: 1089, column: 18)
!8728 = !DILocation(line: 1090, column: 44, scope: !8726)
!8729 = !DILocation(line: 1090, column: 7, scope: !8727)
!8730 = !DILocation(line: 1091, column: 24, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8726, file: !8673, line: 1090, column: 50)
!8732 = !DILocation(line: 1092, column: 3, scope: !8731)
!8733 = !DILocation(line: 1094, column: 23, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8722, file: !8673, line: 1093, column: 9)
!8735 = !DILocation(line: 1097, column: 2, scope: !8672)
!8736 = !DILocation(line: 1098, column: 1, scope: !8672)
!8737 = distinct !DISubprogram(name: "get_esf", scope: !8673, file: !8673, line: 894, type: !8738, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8741)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{!3028, !208, !208, !208, !8740}
!8740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8741 = !{!8742, !8743, !8744, !8745, !8746, !8747}
!8742 = !DILocalVariable(name: "msp", arg: 1, scope: !8737, file: !8673, line: 894, type: !208)
!8743 = !DILocalVariable(name: "psp", arg: 2, scope: !8737, file: !8673, line: 894, type: !208)
!8744 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8737, file: !8673, line: 894, type: !208)
!8745 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8737, file: !8673, line: 895, type: !8740)
!8746 = !DILocalVariable(name: "alternative_state_exc", scope: !8737, file: !8673, line: 897, type: !153)
!8747 = !DILocalVariable(name: "ptr_esf", scope: !8737, file: !8673, line: 898, type: !3028)
!8748 = !DILocation(line: 0, scope: !8737)
!8749 = !DILocation(line: 900, column: 14, scope: !8737)
!8750 = !DILocation(line: 902, column: 49, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8737, file: !8673, line: 902, column: 6)
!8752 = !DILocation(line: 902, column: 6, scope: !8737)
!8753 = !DILocation(line: 983, column: 44, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8737, file: !8673, line: 983, column: 6)
!8755 = !DILocation(line: 985, column: 3, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !8673, line: 985, column: 3)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8673, line: 985, column: 3)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !8673, line: 985, column: 3)
!8759 = distinct !DILexicalBlock(scope: !8760, file: !8673, line: 985, column: 3)
!8760 = distinct !DILexicalBlock(scope: !8754, file: !8673, line: 984, column: 47)
!8761 = !DILocation(line: 986, column: 3, scope: !8760)
!8762 = !DILocation(line: 983, column: 18, scope: !8754)
!8763 = !DILocation(line: 991, column: 7, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !8673, line: 990, column: 30)
!8765 = distinct !DILexicalBlock(scope: !8737, file: !8673, line: 990, column: 6)
!8766 = !DILocation(line: 998, column: 16, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !8673, line: 995, column: 10)
!8768 = distinct !DILexicalBlock(scope: !8764, file: !8673, line: 991, column: 7)
!8769 = !DILocation(line: 1002, column: 2, scope: !8737)
!8770 = !DILocation(line: 1003, column: 1, scope: !8737)
!8771 = distinct !DISubprogram(name: "fault_handle", scope: !8673, file: !8673, line: 786, type: !8772, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8774)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!208, !3028, !125, !8740}
!8774 = !{!8775, !8776, !8777, !8778}
!8775 = !DILocalVariable(name: "esf", arg: 1, scope: !8771, file: !8673, line: 786, type: !3028)
!8776 = !DILocalVariable(name: "fault", arg: 2, scope: !8771, file: !8673, line: 786, type: !125)
!8777 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8771, file: !8673, line: 786, type: !8740)
!8778 = !DILocalVariable(name: "reason", scope: !8771, file: !8673, line: 788, type: !208)
!8779 = !DILocation(line: 0, scope: !8771)
!8780 = !DILocation(line: 790, column: 15, scope: !8771)
!8781 = !DILocation(line: 792, column: 2, scope: !8771)
!8782 = !DILocation(line: 794, column: 12, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8771, file: !8673, line: 792, column: 17)
!8784 = !DILocation(line: 795, column: 3, scope: !8783)
!8785 = !DILocation(line: 800, column: 12, scope: !8783)
!8786 = !DILocation(line: 801, column: 3, scope: !8783)
!8787 = !DILocation(line: 803, column: 12, scope: !8783)
!8788 = !DILocation(line: 804, column: 3, scope: !8783)
!8789 = !DILocation(line: 806, column: 12, scope: !8783)
!8790 = !DILocation(line: 807, column: 3, scope: !8783)
!8791 = !DILocation(line: 814, column: 3, scope: !8783)
!8792 = !DILocation(line: 815, column: 3, scope: !8783)
!8793 = !DILocation(line: 820, column: 3, scope: !8783)
!8794 = !DILocation(line: 821, column: 3, scope: !8783)
!8795 = !DILocation(line: 829, column: 2, scope: !8771)
!8796 = distinct !DISubprogram(name: "hard_fault", scope: !8673, file: !8673, line: 709, type: !8797, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8799)
!8797 = !DISubroutineType(types: !8798)
!8798 = !{!208, !3028, !8740}
!8799 = !{!8800, !8801, !8802}
!8800 = !DILocalVariable(name: "esf", arg: 1, scope: !8796, file: !8673, line: 709, type: !3028)
!8801 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8796, file: !8673, line: 709, type: !8740)
!8802 = !DILocalVariable(name: "reason", scope: !8796, file: !8673, line: 711, type: !208)
!8803 = !DILocation(line: 0, scope: !8796)
!8804 = !DILocation(line: 713, column: 2, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !8673, line: 713, column: 2)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !8673, line: 713, column: 2)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !8673, line: 713, column: 2)
!8808 = distinct !DILexicalBlock(scope: !8796, file: !8673, line: 713, column: 2)
!8809 = !DILocation(line: 732, column: 15, scope: !8796)
!8810 = !DILocation(line: 734, column: 12, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8796, file: !8673, line: 734, column: 6)
!8812 = !DILocation(line: 734, column: 17, scope: !8811)
!8813 = !DILocation(line: 734, column: 41, scope: !8811)
!8814 = !DILocation(line: 734, column: 6, scope: !8796)
!8815 = !DILocation(line: 735, column: 3, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8817, file: !8673, line: 735, column: 3)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !8673, line: 735, column: 3)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !8673, line: 735, column: 3)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !8673, line: 735, column: 3)
!8820 = distinct !DILexicalBlock(scope: !8811, file: !8673, line: 734, column: 47)
!8821 = !DILocation(line: 736, column: 2, scope: !8820)
!8822 = !DILocation(line: 736, column: 19, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8811, file: !8673, line: 736, column: 13)
!8824 = !DILocation(line: 736, column: 49, scope: !8823)
!8825 = !DILocation(line: 736, column: 13, scope: !8811)
!8826 = !DILocation(line: 737, column: 3, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !8673, line: 737, column: 3)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !8673, line: 737, column: 3)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !8673, line: 737, column: 3)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8673, line: 737, column: 3)
!8831 = distinct !DILexicalBlock(scope: !8823, file: !8673, line: 736, column: 55)
!8832 = !DILocation(line: 738, column: 2, scope: !8831)
!8833 = !DILocation(line: 738, column: 19, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8823, file: !8673, line: 738, column: 13)
!8835 = !DILocation(line: 738, column: 24, scope: !8834)
!8836 = !DILocation(line: 738, column: 47, scope: !8834)
!8837 = !DILocation(line: 738, column: 13, scope: !8823)
!8838 = !DILocation(line: 739, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !8673, line: 739, column: 3)
!8840 = distinct !DILexicalBlock(scope: !8841, file: !8673, line: 739, column: 3)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !8673, line: 739, column: 3)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !8673, line: 739, column: 3)
!8843 = distinct !DILexicalBlock(scope: !8834, file: !8673, line: 738, column: 53)
!8844 = !DILocation(line: 740, column: 7, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8843, file: !8673, line: 740, column: 7)
!8846 = !DILocation(line: 740, column: 7, scope: !8843)
!8847 = !DILocation(line: 741, column: 4, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !8673, line: 741, column: 4)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !8673, line: 741, column: 4)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !8673, line: 741, column: 4)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !8673, line: 741, column: 4)
!8852 = distinct !DILexicalBlock(scope: !8845, file: !8673, line: 740, column: 38)
!8853 = !DILocation(line: 742, column: 24, scope: !8852)
!8854 = !DILocation(line: 743, column: 3, scope: !8852)
!8855 = !DILocation(line: 743, column: 20, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8845, file: !8673, line: 743, column: 14)
!8857 = !DILocation(line: 743, column: 25, scope: !8856)
!8858 = !DILocation(line: 743, column: 52, scope: !8856)
!8859 = !DILocation(line: 743, column: 14, scope: !8845)
!8860 = !DILocation(line: 744, column: 13, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8856, file: !8673, line: 743, column: 58)
!8862 = !DILocation(line: 745, column: 3, scope: !8861)
!8863 = !DILocation(line: 745, column: 20, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8856, file: !8673, line: 745, column: 14)
!8865 = !DILocation(line: 745, column: 25, scope: !8864)
!8866 = !DILocation(line: 745, column: 52, scope: !8864)
!8867 = !DILocation(line: 745, column: 14, scope: !8856)
!8868 = !DILocation(line: 746, column: 13, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8864, file: !8673, line: 745, column: 58)
!8870 = !DILocation(line: 747, column: 3, scope: !8869)
!8871 = !DILocation(line: 747, column: 20, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8864, file: !8673, line: 747, column: 14)
!8873 = !DILocation(line: 747, column: 52, scope: !8872)
!8874 = !DILocation(line: 747, column: 14, scope: !8864)
!8875 = !DILocation(line: 748, column: 13, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8872, file: !8673, line: 747, column: 58)
!8877 = !DILocation(line: 753, column: 3, scope: !8876)
!8878 = !DILocation(line: 766, column: 2, scope: !8796)
!8879 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8673, file: !8673, line: 229, type: !8772, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8880)
!8880 = !{!8881, !8882, !8883, !8884, !8885, !8886, !8889}
!8881 = !DILocalVariable(name: "esf", arg: 1, scope: !8879, file: !8673, line: 229, type: !3028)
!8882 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8879, file: !8673, line: 229, type: !125)
!8883 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8879, file: !8673, line: 230, type: !8740)
!8884 = !DILocalVariable(name: "reason", scope: !8879, file: !8673, line: 232, type: !208)
!8885 = !DILocalVariable(name: "mmfar", scope: !8879, file: !8673, line: 233, type: !208)
!8886 = !DILocalVariable(name: "temp", scope: !8887, file: !8673, line: 254, type: !208)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !8673, line: 244, column: 48)
!8888 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 244, column: 6)
!8889 = !DILocalVariable(name: "min_stack_ptr", scope: !8890, file: !8673, line: 309, type: !208)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !8673, line: 308, column: 43)
!8891 = distinct !DILexicalBlock(scope: !8892, file: !8673, line: 308, column: 7)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !8673, line: 289, column: 40)
!8893 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 288, column: 6)
!8894 = !DILocation(line: 0, scope: !8879)
!8895 = !DILocation(line: 235, column: 2, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !8673, line: 235, column: 2)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !8673, line: 235, column: 2)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !8673, line: 235, column: 2)
!8899 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 235, column: 2)
!8900 = !DILocation(line: 237, column: 12, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 237, column: 6)
!8902 = !DILocation(line: 237, column: 17, scope: !8901)
!8903 = !DILocation(line: 237, column: 41, scope: !8901)
!8904 = !DILocation(line: 237, column: 6, scope: !8879)
!8905 = !DILocation(line: 238, column: 3, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8907, file: !8673, line: 238, column: 3)
!8907 = distinct !DILexicalBlock(scope: !8908, file: !8673, line: 238, column: 3)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !8673, line: 238, column: 3)
!8909 = distinct !DILexicalBlock(scope: !8910, file: !8673, line: 238, column: 3)
!8910 = distinct !DILexicalBlock(scope: !8901, file: !8673, line: 237, column: 47)
!8911 = !DILocation(line: 240, column: 2, scope: !8910)
!8912 = !DILocation(line: 241, column: 12, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 241, column: 6)
!8914 = !DILocation(line: 241, column: 17, scope: !8913)
!8915 = !DILocation(line: 241, column: 43, scope: !8913)
!8916 = !DILocation(line: 241, column: 6, scope: !8879)
!8917 = !DILocation(line: 242, column: 3, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !8673, line: 242, column: 3)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !8673, line: 242, column: 3)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !8673, line: 242, column: 3)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !8673, line: 242, column: 3)
!8922 = distinct !DILexicalBlock(scope: !8913, file: !8673, line: 241, column: 49)
!8923 = !DILocation(line: 243, column: 2, scope: !8922)
!8924 = !DILocation(line: 244, column: 12, scope: !8888)
!8925 = !DILocation(line: 244, column: 17, scope: !8888)
!8926 = !DILocation(line: 244, column: 42, scope: !8888)
!8927 = !DILocation(line: 244, column: 6, scope: !8879)
!8928 = !DILocation(line: 245, column: 3, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !8673, line: 245, column: 3)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !8673, line: 245, column: 3)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !8673, line: 245, column: 3)
!8932 = distinct !DILexicalBlock(scope: !8887, file: !8673, line: 245, column: 3)
!8933 = !DILocation(line: 254, column: 24, scope: !8887)
!8934 = !DILocation(line: 0, scope: !8887)
!8935 = !DILocation(line: 256, column: 13, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8887, file: !8673, line: 256, column: 7)
!8937 = !DILocation(line: 256, column: 18, scope: !8936)
!8938 = !DILocation(line: 256, column: 44, scope: !8936)
!8939 = !DILocation(line: 256, column: 7, scope: !8887)
!8940 = !DILocation(line: 258, column: 4, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !8673, line: 258, column: 4)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !8673, line: 258, column: 4)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !8673, line: 258, column: 4)
!8944 = distinct !DILexicalBlock(scope: !8945, file: !8673, line: 258, column: 4)
!8945 = distinct !DILexicalBlock(scope: !8936, file: !8673, line: 256, column: 50)
!8946 = !DILocation(line: 259, column: 24, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8945, file: !8673, line: 259, column: 8)
!8948 = !DILocation(line: 259, column: 8, scope: !8945)
!8949 = !DILocation(line: 261, column: 15, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8947, file: !8673, line: 259, column: 30)
!8951 = !DILocation(line: 262, column: 4, scope: !8950)
!8952 = !DILocation(line: 265, column: 12, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 265, column: 6)
!8954 = !DILocation(line: 265, column: 17, scope: !8953)
!8955 = !DILocation(line: 265, column: 42, scope: !8953)
!8956 = !DILocation(line: 265, column: 6, scope: !8879)
!8957 = !DILocation(line: 266, column: 3, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !8673, line: 266, column: 3)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !8673, line: 266, column: 3)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !8673, line: 266, column: 3)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !8673, line: 266, column: 3)
!8962 = distinct !DILexicalBlock(scope: !8953, file: !8673, line: 265, column: 48)
!8963 = !DILocation(line: 267, column: 2, scope: !8962)
!8964 = !DILocation(line: 269, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 269, column: 6)
!8966 = !DILocation(line: 269, column: 17, scope: !8965)
!8967 = !DILocation(line: 269, column: 41, scope: !8965)
!8968 = !DILocation(line: 269, column: 6, scope: !8879)
!8969 = !DILocation(line: 270, column: 3, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !8673, line: 270, column: 3)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !8673, line: 270, column: 3)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !8673, line: 270, column: 3)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !8673, line: 270, column: 3)
!8974 = distinct !DILexicalBlock(scope: !8965, file: !8673, line: 269, column: 47)
!8975 = !DILocation(line: 272, column: 2, scope: !8974)
!8976 = !DILocation(line: 288, column: 12, scope: !8893)
!8977 = !DILocation(line: 288, column: 17, scope: !8893)
!8978 = !DILocation(line: 288, column: 41, scope: !8893)
!8979 = !DILocation(line: 289, column: 9, scope: !8893)
!8980 = !DILocation(line: 289, column: 14, scope: !8893)
!8981 = !DILocation(line: 288, column: 6, scope: !8879)
!8982 = !DILocation(line: 308, column: 12, scope: !8891)
!8983 = !DILocation(line: 308, column: 17, scope: !8891)
!8984 = !DILocation(line: 308, column: 7, scope: !8892)
!8985 = !DILocation(line: 310, column: 6, scope: !8890)
!8986 = !DILocation(line: 309, column: 29, scope: !8890)
!8987 = !DILocation(line: 0, scope: !8890)
!8988 = !DILocation(line: 312, column: 8, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8890, file: !8673, line: 312, column: 8)
!8990 = !DILocation(line: 312, column: 8, scope: !8890)
!8991 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8992, file: !8372, line: 1099, type: !208)
!8992 = distinct !DISubprogram(name: "__set_PSP", scope: !8372, file: !8372, line: 1099, type: !8463, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8993)
!8993 = !{!8991}
!8994 = !DILocation(line: 0, scope: !8992, inlinedAt: !8995)
!8995 = distinct !DILocation(line: 338, column: 5, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8989, file: !8673, line: 312, column: 23)
!8997 = !DILocation(line: 1101, column: 3, scope: !8992, inlinedAt: !8995)
!8998 = !{i64 3759901}
!8999 = !DILocation(line: 341, column: 4, scope: !8996)
!9000 = !DILocation(line: 360, column: 12, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8879, file: !8673, line: 360, column: 6)
!9002 = !DILocation(line: 360, column: 17, scope: !9001)
!9003 = !DILocation(line: 360, column: 41, scope: !9001)
!9004 = !DILocation(line: 360, column: 6, scope: !8879)
!9005 = !DILocation(line: 361, column: 14, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9001, file: !8673, line: 360, column: 47)
!9007 = !DILocation(line: 362, column: 2, scope: !9006)
!9008 = !DILocation(line: 366, column: 12, scope: !8879)
!9009 = !DILocation(line: 369, column: 15, scope: !8879)
!9010 = !DILocation(line: 371, column: 2, scope: !8879)
!9011 = distinct !DISubprogram(name: "bus_fault", scope: !8673, file: !8673, line: 383, type: !9012, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !9014)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{!125, !3028, !125, !8740}
!9014 = !{!9015, !9016, !9017, !9018, !9019}
!9015 = !DILocalVariable(name: "esf", arg: 1, scope: !9011, file: !8673, line: 383, type: !3028)
!9016 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !9011, file: !8673, line: 383, type: !125)
!9017 = !DILocalVariable(name: "recoverable", arg: 3, scope: !9011, file: !8673, line: 383, type: !8740)
!9018 = !DILocalVariable(name: "reason", scope: !9011, file: !8673, line: 385, type: !208)
!9019 = !DILocalVariable(name: "bfar", scope: !9020, file: !8673, line: 405, type: !208)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !8673, line: 395, column: 42)
!9021 = distinct !DILexicalBlock(scope: !9011, file: !8673, line: 395, column: 6)
!9022 = !DILocation(line: 0, scope: !9011)
!9023 = !DILocation(line: 387, column: 2, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8673, line: 387, column: 2)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !8673, line: 387, column: 2)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !8673, line: 387, column: 2)
!9027 = distinct !DILexicalBlock(scope: !9011, file: !8673, line: 387, column: 2)
!9028 = !DILocation(line: 389, column: 11, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9011, file: !8673, line: 389, column: 6)
!9030 = !DILocation(line: 389, column: 16, scope: !9029)
!9031 = !DILocation(line: 389, column: 6, scope: !9011)
!9032 = !DILocation(line: 390, column: 3, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !8673, line: 390, column: 3)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !8673, line: 390, column: 3)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !8673, line: 390, column: 3)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !8673, line: 390, column: 3)
!9037 = distinct !DILexicalBlock(scope: !9029, file: !8673, line: 389, column: 39)
!9038 = !DILocation(line: 391, column: 2, scope: !9037)
!9039 = !DILocation(line: 392, column: 11, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9011, file: !8673, line: 392, column: 6)
!9041 = !DILocation(line: 392, column: 16, scope: !9040)
!9042 = !DILocation(line: 392, column: 6, scope: !9011)
!9043 = !DILocation(line: 393, column: 3, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !8673, line: 393, column: 3)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !8673, line: 393, column: 3)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8673, line: 393, column: 3)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !8673, line: 393, column: 3)
!9048 = distinct !DILexicalBlock(scope: !9040, file: !8673, line: 392, column: 41)
!9049 = !DILocation(line: 394, column: 2, scope: !9048)
!9050 = !DILocation(line: 395, column: 11, scope: !9021)
!9051 = !DILocation(line: 395, column: 16, scope: !9021)
!9052 = !DILocation(line: 395, column: 6, scope: !9011)
!9053 = !DILocation(line: 396, column: 3, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !8673, line: 396, column: 3)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !8673, line: 396, column: 3)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !8673, line: 396, column: 3)
!9057 = distinct !DILexicalBlock(scope: !9020, file: !8673, line: 396, column: 3)
!9058 = !DILocation(line: 405, column: 3, scope: !9020)
!9059 = !DILocation(line: 0, scope: !9020)
!9060 = !DILocation(line: 407, column: 13, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9020, file: !8673, line: 407, column: 7)
!9062 = !DILocation(line: 407, column: 18, scope: !9061)
!9063 = !DILocation(line: 407, column: 44, scope: !9061)
!9064 = !DILocation(line: 407, column: 7, scope: !9020)
!9065 = !DILocation(line: 408, column: 4, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !8673, line: 408, column: 4)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !8673, line: 408, column: 4)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !8673, line: 408, column: 4)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !8673, line: 408, column: 4)
!9070 = distinct !DILexicalBlock(scope: !9061, file: !8673, line: 407, column: 50)
!9071 = !DILocation(line: 409, column: 24, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9070, file: !8673, line: 409, column: 8)
!9073 = !DILocation(line: 409, column: 8, scope: !9070)
!9074 = !DILocation(line: 411, column: 15, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9072, file: !8673, line: 409, column: 30)
!9076 = !DILocation(line: 412, column: 4, scope: !9075)
!9077 = !DILocation(line: 415, column: 11, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9011, file: !8673, line: 415, column: 6)
!9079 = !DILocation(line: 415, column: 16, scope: !9078)
!9080 = !DILocation(line: 415, column: 6, scope: !9011)
!9081 = !DILocation(line: 416, column: 3, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !8673, line: 416, column: 3)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !8673, line: 416, column: 3)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !8673, line: 416, column: 3)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !8673, line: 416, column: 3)
!9086 = distinct !DILexicalBlock(scope: !9078, file: !8673, line: 415, column: 44)
!9087 = !DILocation(line: 417, column: 2, scope: !9086)
!9088 = !DILocation(line: 418, column: 12, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9011, file: !8673, line: 418, column: 6)
!9090 = !DILocation(line: 418, column: 17, scope: !9089)
!9091 = !DILocation(line: 418, column: 41, scope: !9089)
!9092 = !DILocation(line: 418, column: 6, scope: !9011)
!9093 = !DILocation(line: 423, column: 18, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9089, file: !8673, line: 423, column: 13)
!9095 = !DILocation(line: 423, column: 23, scope: !9094)
!9096 = !DILocation(line: 423, column: 13, scope: !9089)
!9097 = !DILocation(line: 0, scope: !9089)
!9098 = !DILocation(line: 524, column: 12, scope: !9011)
!9099 = !DILocation(line: 526, column: 15, scope: !9011)
!9100 = !DILocation(line: 528, column: 2, scope: !9011)
!9101 = distinct !DISubprogram(name: "usage_fault", scope: !8673, file: !8673, line: 539, type: !9102, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !9106)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{!208, !9104}
!9104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9105, size: 32)
!9105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3029)
!9106 = !{!9107, !9108}
!9107 = !DILocalVariable(name: "esf", arg: 1, scope: !9101, file: !8673, line: 539, type: !9104)
!9108 = !DILocalVariable(name: "reason", scope: !9101, file: !8673, line: 541, type: !208)
!9109 = !DILocation(line: 0, scope: !9101)
!9110 = !DILocation(line: 543, column: 2, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !8673, line: 543, column: 2)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !8673, line: 543, column: 2)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !8673, line: 543, column: 2)
!9114 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 543, column: 2)
!9115 = !DILocation(line: 546, column: 12, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 546, column: 6)
!9117 = !DILocation(line: 546, column: 17, scope: !9116)
!9118 = !DILocation(line: 546, column: 43, scope: !9116)
!9119 = !DILocation(line: 546, column: 6, scope: !9101)
!9120 = !DILocation(line: 547, column: 3, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !8673, line: 547, column: 3)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !8673, line: 547, column: 3)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !8673, line: 547, column: 3)
!9124 = distinct !DILexicalBlock(scope: !9125, file: !8673, line: 547, column: 3)
!9125 = distinct !DILexicalBlock(scope: !9116, file: !8673, line: 546, column: 49)
!9126 = !DILocation(line: 548, column: 2, scope: !9125)
!9127 = !DILocation(line: 549, column: 12, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 549, column: 6)
!9129 = !DILocation(line: 549, column: 17, scope: !9128)
!9130 = !DILocation(line: 549, column: 43, scope: !9128)
!9131 = !DILocation(line: 549, column: 6, scope: !9101)
!9132 = !DILocation(line: 550, column: 3, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !8673, line: 550, column: 3)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !8673, line: 550, column: 3)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !8673, line: 550, column: 3)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !8673, line: 550, column: 3)
!9137 = distinct !DILexicalBlock(scope: !9128, file: !8673, line: 549, column: 49)
!9138 = !DILocation(line: 551, column: 2, scope: !9137)
!9139 = !DILocation(line: 567, column: 12, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 567, column: 6)
!9141 = !DILocation(line: 567, column: 17, scope: !9140)
!9142 = !DILocation(line: 567, column: 38, scope: !9140)
!9143 = !DILocation(line: 567, column: 6, scope: !9101)
!9144 = !DILocation(line: 568, column: 3, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !8673, line: 568, column: 3)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !8673, line: 568, column: 3)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !8673, line: 568, column: 3)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !8673, line: 568, column: 3)
!9149 = distinct !DILexicalBlock(scope: !9140, file: !8673, line: 567, column: 44)
!9150 = !DILocation(line: 569, column: 2, scope: !9149)
!9151 = !DILocation(line: 570, column: 12, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 570, column: 6)
!9153 = !DILocation(line: 570, column: 17, scope: !9152)
!9154 = !DILocation(line: 570, column: 39, scope: !9152)
!9155 = !DILocation(line: 570, column: 6, scope: !9101)
!9156 = !DILocation(line: 571, column: 3, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !8673, line: 571, column: 3)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !8673, line: 571, column: 3)
!9159 = distinct !DILexicalBlock(scope: !9160, file: !8673, line: 571, column: 3)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !8673, line: 571, column: 3)
!9161 = distinct !DILexicalBlock(scope: !9152, file: !8673, line: 570, column: 45)
!9162 = !DILocation(line: 572, column: 2, scope: !9161)
!9163 = !DILocation(line: 573, column: 12, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 573, column: 6)
!9165 = !DILocation(line: 573, column: 17, scope: !9164)
!9166 = !DILocation(line: 573, column: 42, scope: !9164)
!9167 = !DILocation(line: 573, column: 6, scope: !9101)
!9168 = !DILocation(line: 574, column: 3, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !8673, line: 574, column: 3)
!9170 = distinct !DILexicalBlock(scope: !9171, file: !8673, line: 574, column: 3)
!9171 = distinct !DILexicalBlock(scope: !9172, file: !8673, line: 574, column: 3)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !8673, line: 574, column: 3)
!9173 = distinct !DILexicalBlock(scope: !9164, file: !8673, line: 573, column: 48)
!9174 = !DILocation(line: 575, column: 2, scope: !9173)
!9175 = !DILocation(line: 576, column: 12, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9101, file: !8673, line: 576, column: 6)
!9177 = !DILocation(line: 576, column: 17, scope: !9176)
!9178 = !DILocation(line: 576, column: 44, scope: !9176)
!9179 = !DILocation(line: 576, column: 6, scope: !9101)
!9180 = !DILocation(line: 577, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !8673, line: 577, column: 3)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !8673, line: 577, column: 3)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !8673, line: 577, column: 3)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !8673, line: 577, column: 3)
!9185 = distinct !DILexicalBlock(scope: !9176, file: !8673, line: 576, column: 50)
!9186 = !DILocation(line: 578, column: 2, scope: !9185)
!9187 = !DILocation(line: 581, column: 12, scope: !9101)
!9188 = !DILocation(line: 583, column: 2, scope: !9101)
!9189 = distinct !DISubprogram(name: "debug_monitor", scope: !8673, file: !8673, line: 632, type: !9190, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !9192)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{null, !3028, !8740}
!9192 = !{!9193, !9194}
!9193 = !DILocalVariable(name: "esf", arg: 1, scope: !9189, file: !8673, line: 632, type: !3028)
!9194 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9189, file: !8673, line: 632, type: !8740)
!9195 = !DILocation(line: 0, scope: !9189)
!9196 = !DILocation(line: 634, column: 15, scope: !9189)
!9197 = !DILocation(line: 636, column: 2, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !8673, line: 636, column: 2)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !8673, line: 636, column: 2)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !8673, line: 636, column: 2)
!9201 = distinct !DILexicalBlock(scope: !9189, file: !8673, line: 636, column: 2)
!9202 = !DILocation(line: 652, column: 1, scope: !9189)
!9203 = distinct !DISubprogram(name: "reserved_exception", scope: !8673, file: !8673, line: 776, type: !9204, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !9206)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{null, !9104, !125}
!9206 = !{!9207, !9208}
!9207 = !DILocalVariable(name: "esf", arg: 1, scope: !9203, file: !8673, line: 776, type: !9104)
!9208 = !DILocalVariable(name: "fault", arg: 2, scope: !9203, file: !8673, line: 776, type: !125)
!9209 = !DILocation(line: 0, scope: !9203)
!9210 = !DILocation(line: 780, column: 2, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !8673, line: 780, column: 2)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !8673, line: 780, column: 2)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !8673, line: 780, column: 2)
!9214 = distinct !DILexicalBlock(scope: !9203, file: !8673, line: 780, column: 2)
!9215 = !DILocation(line: 783, column: 1, scope: !9203)
!9216 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8673, file: !8673, line: 658, type: !9217, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !9219)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{!153, !3028}
!9219 = !{!9220, !9221, !9222}
!9220 = !DILocalVariable(name: "esf", arg: 1, scope: !9216, file: !8673, line: 658, type: !3028)
!9221 = !DILocalVariable(name: "ret_addr", scope: !9216, file: !8673, line: 660, type: !3071)
!9222 = !DILocalVariable(name: "fault_insn", scope: !9216, file: !8673, line: 686, type: !227)
!9223 = !DILocation(line: 0, scope: !9216)
!9224 = !DILocation(line: 660, column: 46, scope: !9216)
!9225 = !DILocation(line: 660, column: 23, scope: !9216)
!9226 = !DILocation(line: 682, column: 11, scope: !9216)
!9227 = !DILocation(line: 271, column: 3, scope: !9228, inlinedAt: !9229)
!9228 = distinct !DISubprogram(name: "__DSB", scope: !8372, file: !8372, line: 269, type: !3363, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !639)
!9229 = distinct !DILocation(line: 683, column: 2, scope: !9216)
!9230 = !{i64 3736036}
!9231 = !DILocation(line: 260, column: 3, scope: !9232, inlinedAt: !9233)
!9232 = distinct !DISubprogram(name: "__ISB", scope: !8372, file: !8372, line: 258, type: !3363, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !639)
!9233 = distinct !DILocation(line: 684, column: 2, scope: !9216)
!9234 = !{i64 3735753}
!9235 = !DILocation(line: 686, column: 35, scope: !9216)
!9236 = !DILocation(line: 686, column: 24, scope: !9216)
!9237 = !DILocation(line: 688, column: 11, scope: !9216)
!9238 = !DILocation(line: 271, column: 3, scope: !9228, inlinedAt: !9239)
!9239 = distinct !DILocation(line: 689, column: 2, scope: !9216)
!9240 = !DILocation(line: 260, column: 3, scope: !9232, inlinedAt: !9241)
!9241 = distinct !DILocation(line: 690, column: 2, scope: !9216)
!9242 = !DILocation(line: 693, column: 45, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9216, file: !8673, line: 693, column: 6)
!9244 = !DILocation(line: 699, column: 1, scope: !9216)
!9245 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8673, file: !8673, line: 1107, type: !3363, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !639)
!9246 = !DILocation(line: 1111, column: 11, scope: !9245)
!9247 = !DILocation(line: 1136, column: 1, scope: !9245)
!9248 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9249, file: !9249, line: 26, type: !3363, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !9250)
!9249 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9250 = !{!9251}
!9251 = !DILocalVariable(name: "irq", scope: !9248, file: !9249, line: 28, type: !125)
!9252 = !DILocation(line: 0, scope: !9248)
!9253 = !DILocation(line: 30, column: 2, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9248, file: !9249, line: 30, column: 2)
!9255 = !DILocation(line: 31, column: 3, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !9249, line: 30, column: 39)
!9257 = distinct !DILexicalBlock(scope: !9254, file: !9249, line: 30, column: 2)
!9258 = !DILocation(line: 30, column: 35, scope: !9257)
!9259 = !DILocation(line: 30, column: 13, scope: !9257)
!9260 = distinct !{!9260, !9253, !9261}
!9261 = !DILocation(line: 32, column: 2, scope: !9254)
!9262 = !DILocation(line: 33, column: 1, scope: !9248)
!9263 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8406, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !9264)
!9264 = !{!9265, !9266}
!9265 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9263, file: !680, line: 1814, type: !943)
!9266 = !DILocalVariable(name: "priority", arg: 2, scope: !9263, file: !680, line: 1814, type: !208)
!9267 = !DILocation(line: 0, scope: !9263)
!9268 = !DILocation(line: 1816, column: 7, scope: !9263)
!9269 = !DILocation(line: 0, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9263, file: !680, line: 1816, column: 7)
!9271 = !DILocation(line: 1824, column: 1, scope: !9263)
!9272 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9273, file: !9273, line: 27, type: !9274, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !9377)
!9273 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9274 = !DISubroutineType(types: !9275)
!9275 = !{null, !9276}
!9276 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !9277)
!9277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9278, size: 32)
!9278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !9279)
!9279 = !{!9280, !9338, !9350, !9351, !9352, !9353, !9359, !9372}
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9278, file: !531, line: 247, baseType: !9281, size: 384)
!9281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !9282)
!9282 = !{!9283, !9307, !9314, !9315, !9316, !9325, !9326, !9327}
!9283 = !DIDerivedType(tag: DW_TAG_member, scope: !9281, file: !531, line: 60, baseType: !9284, size: 64)
!9284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9281, file: !531, line: 60, size: 64, elements: !9285)
!9285 = !{!9286, !9301}
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9284, file: !531, line: 61, baseType: !9287, size: 64)
!9287 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !9288)
!9288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !9289)
!9289 = !{!9290, !9296}
!9290 = !DIDerivedType(tag: DW_TAG_member, scope: !9288, file: !541, line: 38, baseType: !9291, size: 32)
!9291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9288, file: !541, line: 38, size: 32, elements: !9292)
!9292 = !{!9293, !9295}
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9291, file: !541, line: 39, baseType: !9294, size: 32)
!9294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9288, size: 32)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9291, file: !541, line: 40, baseType: !9294, size: 32)
!9296 = !DIDerivedType(tag: DW_TAG_member, scope: !9288, file: !541, line: 42, baseType: !9297, size: 32, offset: 32)
!9297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9288, file: !541, line: 42, size: 32, elements: !9298)
!9298 = !{!9299, !9300}
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9297, file: !541, line: 43, baseType: !9294, size: 32)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9297, file: !541, line: 44, baseType: !9294, size: 32)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9284, file: !531, line: 62, baseType: !9302, size: 64)
!9302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !9303)
!9303 = !{!9304}
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9302, file: !557, line: 50, baseType: !9305, size: 64)
!9305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9306, size: 64, elements: !562)
!9306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9302, size: 32)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9281, file: !531, line: 68, baseType: !9308, size: 32, offset: 64)
!9308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9309, size: 32)
!9309 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !9310)
!9310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !9311)
!9311 = !{!9312}
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9310, file: !567, line: 232, baseType: !9313, size: 64)
!9313 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !9288)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9281, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9281, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!9316 = !DIDerivedType(tag: DW_TAG_member, scope: !9281, file: !531, line: 90, baseType: !9317, size: 16, offset: 112)
!9317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9281, file: !531, line: 90, size: 16, elements: !9318)
!9318 = !{!9319, !9324}
!9319 = !DIDerivedType(tag: DW_TAG_member, scope: !9317, file: !531, line: 91, baseType: !9320, size: 16)
!9320 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9317, file: !531, line: 91, size: 16, elements: !9321)
!9321 = !{!9322, !9323}
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9320, file: !531, line: 96, baseType: !581, size: 8)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9320, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9317, file: !531, line: 100, baseType: !227, size: 16)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9281, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9281, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9281, file: !531, line: 131, baseType: !9328, size: 192, offset: 192)
!9328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !9329)
!9329 = !{!9330, !9331, !9337}
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9328, file: !567, line: 245, baseType: !9287, size: 64)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9328, file: !567, line: 246, baseType: !9332, size: 32, offset: 64)
!9332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !9333)
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9334, size: 32)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{null, !9336}
!9336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9328, size: 32)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9328, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9278, file: !531, line: 250, baseType: !9339, size: 288, offset: 384)
!9339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !9340)
!9340 = !{!9341, !9342, !9343, !9344, !9345, !9346, !9347, !9348, !9349}
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9339, file: !601, line: 26, baseType: !208, size: 32)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9339, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9339, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9339, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9339, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9339, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9339, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9339, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9339, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9278, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9278, file: !531, line: 256, baseType: !9309, size: 64, offset: 704)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9278, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9278, file: !531, line: 300, baseType: !9354, size: 96, offset: 800)
!9354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !9355)
!9355 = !{!9356, !9357, !9358}
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9354, file: !531, line: 153, baseType: !22, size: 32)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9354, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9354, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9278, file: !531, line: 325, baseType: !9360, size: 32, offset: 896)
!9360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9361, size: 32)
!9361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !9362)
!9362 = !{!9363, !9369, !9370}
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9361, file: !624, line: 5074, baseType: !9364, size: 96)
!9364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !9365)
!9365 = !{!9366, !9367, !9368}
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9364, file: !628, line: 57, baseType: !631, size: 32)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9364, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9364, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9361, file: !624, line: 5075, baseType: !9309, size: 64, offset: 96)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9361, file: !624, line: 5076, baseType: !9371, offset: 160)
!9371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9278, file: !531, line: 343, baseType: !9373, size: 64, offset: 928)
!9373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !9374)
!9374 = !{!9375, !9376}
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9373, file: !601, line: 63, baseType: !208, size: 32)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9373, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!9377 = !{!9378}
!9378 = !DILocalVariable(name: "thread", arg: 1, scope: !9272, file: !9273, line: 27, type: !9276)
!9379 = !DILocation(line: 0, scope: !9272)
!9380 = !DILocation(line: 29, column: 6, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9272, file: !9273, line: 29, column: 6)
!9382 = !DILocation(line: 29, column: 15, scope: !9381)
!9383 = !DILocation(line: 29, column: 6, scope: !9272)
!9384 = !DILocation(line: 1031, column: 3, scope: !9385, inlinedAt: !9388)
!9385 = distinct !DISubprogram(name: "__get_IPSR", scope: !8372, file: !8372, line: 1027, type: !8453, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !9386)
!9386 = !{!9387}
!9387 = !DILocalVariable(name: "result", scope: !9385, file: !8372, line: 1029, type: !208)
!9388 = distinct !DILocation(line: 48, column: 10, scope: !9389, inlinedAt: !9393)
!9389 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9390, file: !9390, line: 46, type: !9391, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3117, retainedNodes: !639)
!9390 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9391 = !DISubroutineType(types: !9392)
!9392 = !{!153}
!9393 = distinct !DILocation(line: 30, column: 7, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9395, file: !9273, line: 30, column: 7)
!9395 = distinct !DILexicalBlock(scope: !9381, file: !9273, line: 29, column: 26)
!9396 = !{i64 3724884}
!9397 = !DILocation(line: 0, scope: !9385, inlinedAt: !9388)
!9398 = !DILocation(line: 48, column: 9, scope: !9389, inlinedAt: !9393)
!9399 = !DILocation(line: 30, column: 7, scope: !9395)
!9400 = !DILocation(line: 42, column: 14, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9394, file: !9273, line: 30, column: 25)
!9402 = !DILocation(line: 48, column: 15, scope: !9401)
!9403 = !DILocation(line: 49, column: 3, scope: !9401)
!9404 = !DILocation(line: 52, column: 2, scope: !9272)
!9405 = !DILocation(line: 53, column: 1, scope: !9272)
!9406 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !526, file: !526, line: 127, type: !3363, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !639)
!9407 = !DILocation(line: 134, column: 2, scope: !9406)
!9408 = !DILocation(line: 156, column: 1, scope: !9406)
!9409 = !DILocation(line: 0, scope: !525)
!9410 = !DILocation(line: 289, column: 36, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !525, file: !526, line: 285, column: 2)
!9412 = !DILocation(line: 289, column: 42, scope: !9411)
!9413 = !DILocation(line: 300, column: 36, scope: !525)
!9414 = !DILocation(line: 301, column: 35, scope: !525)
!9415 = !DILocation(line: 302, column: 37, scope: !525)
!9416 = !DILocation(line: 311, column: 2, scope: !525)
!9417 = !DILocation(line: 316, column: 1, scope: !525)
!9418 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !708, file: !708, line: 180, type: !3363, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9419 = !DILocation(line: 188, column: 12, scope: !9418)
!9420 = !DILocation(line: 271, column: 3, scope: !9421, inlinedAt: !9422)
!9421 = distinct !DISubprogram(name: "__DSB", scope: !8372, file: !8372, line: 269, type: !3363, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9422 = distinct !DILocation(line: 192, column: 2, scope: !9418)
!9423 = !{i64 3912786}
!9424 = !DILocation(line: 260, column: 3, scope: !9425, inlinedAt: !9426)
!9425 = distinct !DISubprogram(name: "__ISB", scope: !8372, file: !8372, line: 258, type: !3363, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9426 = distinct !DILocation(line: 193, column: 2, scope: !9418)
!9427 = !{i64 3912503}
!9428 = !DILocation(line: 194, column: 1, scope: !9418)
!9429 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !708, file: !708, line: 199, type: !3363, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9430 = !DILocation(line: 282, column: 3, scope: !9431, inlinedAt: !9432)
!9431 = distinct !DISubprogram(name: "__DMB", scope: !8372, file: !8372, line: 280, type: !3363, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9432 = distinct !DILocation(line: 202, column: 2, scope: !9429)
!9433 = !{i64 3913062}
!9434 = !DILocation(line: 205, column: 12, scope: !9429)
!9435 = !DILocation(line: 206, column: 1, scope: !9429)
!9436 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !708, file: !708, line: 275, type: !9437, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9450)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{null, !9439, !323, !8640, !8640}
!9439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9440, size: 32)
!9440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9441)
!9441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !9442)
!9442 = !{!9443, !9444, !9445}
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9441, file: !652, line: 53, baseType: !22, size: 32)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9441, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9441, file: !652, line: 55, baseType: !9446, size: 32, offset: 64)
!9446 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !9447)
!9447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !9448)
!9448 = !{!9449}
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9447, file: !658, line: 150, baseType: !208, size: 32)
!9450 = !{!9451, !9452, !9453, !9454}
!9451 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9436, file: !708, line: 276, type: !9439)
!9452 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9436, file: !708, line: 276, type: !323)
!9453 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9436, file: !708, line: 277, type: !8640)
!9454 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9436, file: !708, line: 277, type: !8640)
!9455 = !DILocation(line: 0, scope: !9436)
!9456 = !DILocation(line: 279, column: 6, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9436, file: !708, line: 279, column: 6)
!9458 = !DILocation(line: 285, column: 1, scope: !9436)
!9459 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9460, file: !9460, line: 220, type: !9461, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9463)
!9460 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!125, !9439, !323, !8640, !8640}
!9463 = !{!9464, !9465, !9466, !9467, !9468}
!9464 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9459, file: !9460, line: 221, type: !9439)
!9465 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9459, file: !9460, line: 221, type: !323)
!9466 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9459, file: !9460, line: 222, type: !8640)
!9467 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9459, file: !9460, line: 223, type: !8640)
!9468 = !DILocalVariable(name: "mpu_reg_index", scope: !9459, file: !9460, line: 225, type: !125)
!9469 = !DILocation(line: 0, scope: !9459)
!9470 = !DILocation(line: 225, column: 22, scope: !9459)
!9471 = !DILocation(line: 233, column: 18, scope: !9459)
!9472 = !DILocation(line: 236, column: 23, scope: !9459)
!9473 = !DILocation(line: 236, column: 21, scope: !9459)
!9474 = !DILocation(line: 238, column: 2, scope: !9459)
!9475 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !708, file: !708, line: 105, type: !9476, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!125, !9439, !150, !150, !153}
!9478 = !{!9479, !9480, !9481, !9482, !9483, !9484}
!9479 = !DILocalVariable(name: "regions", arg: 1, scope: !9475, file: !708, line: 106, type: !9439)
!9480 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9475, file: !708, line: 106, type: !150)
!9481 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9475, file: !708, line: 106, type: !150)
!9482 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9475, file: !708, line: 107, type: !153)
!9483 = !DILocalVariable(name: "i", scope: !9475, file: !708, line: 109, type: !125)
!9484 = !DILocalVariable(name: "reg_index", scope: !9475, file: !708, line: 110, type: !125)
!9485 = !DILocation(line: 0, scope: !9475)
!9486 = !DILocation(line: 110, column: 18, scope: !9475)
!9487 = !DILocation(line: 112, column: 16, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !708, line: 112, column: 2)
!9489 = distinct !DILexicalBlock(scope: !9475, file: !708, line: 112, column: 2)
!9490 = !DILocation(line: 112, column: 2, scope: !9489)
!9491 = !DILocation(line: 113, column: 7, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9493, file: !708, line: 113, column: 7)
!9493 = distinct !DILexicalBlock(scope: !9488, file: !708, line: 112, column: 36)
!9494 = !DILocation(line: 113, column: 18, scope: !9492)
!9495 = !DILocation(line: 113, column: 23, scope: !9492)
!9496 = !DILocation(line: 113, column: 7, scope: !9493)
!9497 = !DILocation(line: 118, column: 23, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9493, file: !708, line: 118, column: 7)
!9499 = !DILocation(line: 119, column: 7, scope: !9498)
!9500 = !DILocation(line: 118, column: 7, scope: !9493)
!9501 = !DILocation(line: 120, column: 4, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !708, line: 120, column: 4)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !708, line: 120, column: 4)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !708, line: 120, column: 4)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !708, line: 120, column: 4)
!9506 = distinct !DILexicalBlock(scope: !9498, file: !708, line: 119, column: 45)
!9507 = !DILocation(line: 121, column: 4, scope: !9506)
!9508 = !DILocation(line: 124, column: 36, scope: !9493)
!9509 = !DILocation(line: 124, column: 15, scope: !9493)
!9510 = !DILocation(line: 126, column: 17, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9493, file: !708, line: 126, column: 7)
!9512 = !DILocation(line: 126, column: 7, scope: !9493)
!9513 = !DILocation(line: 131, column: 12, scope: !9493)
!9514 = !DILocation(line: 132, column: 2, scope: !9493)
!9515 = !DILocation(line: 112, column: 32, scope: !9488)
!9516 = distinct !{!9516, !9490, !9517}
!9517 = !DILocation(line: 132, column: 2, scope: !9489)
!9518 = !DILocation(line: 135, column: 1, scope: !9475)
!9519 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9460, file: !9460, line: 63, type: !9520, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9522)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!125, !9439}
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "part", arg: 1, scope: !9519, file: !9460, line: 63, type: !9439)
!9524 = !DILocalVariable(name: "partition_is_valid", scope: !9519, file: !9460, line: 70, type: !125)
!9525 = !DILocation(line: 0, scope: !9519)
!9526 = !DILocation(line: 71, column: 11, scope: !9519)
!9527 = !DILocation(line: 71, column: 37, scope: !9519)
!9528 = !{i32 0, i32 33}
!9529 = !DILocation(line: 72, column: 3, scope: !9519)
!9530 = !DILocation(line: 71, column: 30, scope: !9519)
!9531 = !DILocation(line: 75, column: 11, scope: !9519)
!9532 = !DILocation(line: 75, column: 17, scope: !9519)
!9533 = !DILocation(line: 75, column: 38, scope: !9519)
!9534 = !DILocation(line: 77, column: 2, scope: !9519)
!9535 = distinct !DISubprogram(name: "mpu_configure_region", scope: !708, file: !708, line: 79, type: !9536, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9538)
!9536 = !DISubroutineType(types: !9537)
!9537 = !{!125, !323, !9439}
!9538 = !{!9539, !9540, !9541}
!9539 = !DILocalVariable(name: "index", arg: 1, scope: !9535, file: !708, line: 79, type: !323)
!9540 = !DILocalVariable(name: "new_region", arg: 2, scope: !9535, file: !708, line: 80, type: !9439)
!9541 = !DILocalVariable(name: "region_conf", scope: !9535, file: !708, line: 82, type: !697)
!9542 = !DILocation(line: 0, scope: !9535)
!9543 = !DILocation(line: 82, column: 2, scope: !9535)
!9544 = !DILocation(line: 82, column: 24, scope: !9535)
!9545 = !DILocation(line: 87, column: 33, scope: !9535)
!9546 = !DILocation(line: 87, column: 14, scope: !9535)
!9547 = !DILocation(line: 87, column: 19, scope: !9535)
!9548 = !DILocation(line: 91, column: 55, scope: !9535)
!9549 = !DILocation(line: 92, column: 16, scope: !9535)
!9550 = !DILocation(line: 92, column: 53, scope: !9535)
!9551 = !DILocation(line: 91, column: 2, scope: !9535)
!9552 = !DILocation(line: 95, column: 9, scope: !9535)
!9553 = !DILocation(line: 97, column: 1, scope: !9535)
!9554 = !DILocation(line: 95, column: 2, scope: !9535)
!9555 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9460, file: !9460, line: 113, type: !9556, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9561)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{null, !9558, !9559, !208, !208}
!9558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!9559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9560, size: 32)
!9560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9446)
!9561 = !{!9562, !9563, !9564, !9565}
!9562 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9555, file: !9460, line: 114, type: !9558)
!9563 = !DILocalVariable(name: "attr", arg: 2, scope: !9555, file: !9460, line: 115, type: !9559)
!9564 = !DILocalVariable(name: "base", arg: 3, scope: !9555, file: !9460, line: 115, type: !208)
!9565 = !DILocalVariable(name: "size", arg: 4, scope: !9555, file: !9460, line: 115, type: !208)
!9566 = !DILocation(line: 0, scope: !9555)
!9567 = !DILocation(line: 127, column: 23, scope: !9555)
!9568 = !DILocation(line: 127, column: 35, scope: !9555)
!9569 = !DILocation(line: 127, column: 33, scope: !9555)
!9570 = !DILocation(line: 127, column: 10, scope: !9555)
!9571 = !DILocation(line: 127, column: 15, scope: !9555)
!9572 = !DILocation(line: 129, column: 1, scope: !9555)
!9573 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !708, file: !708, line: 57, type: !9574, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9576)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{!125, !323, !695}
!9576 = !{!9577, !9578}
!9577 = !DILocalVariable(name: "index", arg: 1, scope: !9573, file: !708, line: 57, type: !323)
!9578 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9573, file: !708, line: 58, type: !695)
!9579 = !DILocation(line: 0, scope: !9573)
!9580 = !DILocation(line: 61, column: 6, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9573, file: !708, line: 61, column: 6)
!9582 = !DILocation(line: 61, column: 12, scope: !9581)
!9583 = !DILocation(line: 61, column: 6, scope: !9573)
!9584 = !DILocation(line: 64, column: 3, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !708, line: 64, column: 3)
!9586 = distinct !DILexicalBlock(scope: !9587, file: !708, line: 64, column: 3)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !708, line: 64, column: 3)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !708, line: 64, column: 3)
!9589 = distinct !DILexicalBlock(scope: !9581, file: !708, line: 61, column: 40)
!9590 = !DILocation(line: 65, column: 3, scope: !9589)
!9591 = !DILocation(line: 71, column: 2, scope: !9573)
!9592 = !DILocation(line: 73, column: 2, scope: !9573)
!9593 = !DILocation(line: 74, column: 1, scope: !9573)
!9594 = distinct !DISubprogram(name: "region_init", scope: !9460, file: !9460, line: 29, type: !9595, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9597)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{null, !8640, !695}
!9597 = !{!9598, !9599}
!9598 = !DILocalVariable(name: "index", arg: 1, scope: !9594, file: !9460, line: 29, type: !8640)
!9599 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9594, file: !9460, line: 30, type: !695)
!9600 = !DILocation(line: 0, scope: !9594)
!9601 = !DILocation(line: 33, column: 2, scope: !9594)
!9602 = !DILocation(line: 47, column: 28, scope: !9594)
!9603 = !DILocation(line: 47, column: 33, scope: !9594)
!9604 = !DILocation(line: 48, column: 26, scope: !9594)
!9605 = !DILocation(line: 47, column: 12, scope: !9594)
!9606 = !DILocation(line: 49, column: 32, scope: !9594)
!9607 = !DILocation(line: 49, column: 37, scope: !9594)
!9608 = !DILocation(line: 49, column: 12, scope: !9594)
!9609 = !DILocation(line: 53, column: 1, scope: !9594)
!9610 = distinct !DISubprogram(name: "set_region_number", scope: !9611, file: !9611, line: 32, type: !8463, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9612)
!9611 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9612 = !{!9613}
!9613 = !DILocalVariable(name: "index", arg: 1, scope: !9610, file: !9611, line: 32, type: !208)
!9614 = !DILocation(line: 0, scope: !9610)
!9615 = !DILocation(line: 34, column: 11, scope: !9610)
!9616 = !DILocation(line: 35, column: 1, scope: !9610)
!9617 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9460, file: !9460, line: 88, type: !9618, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9620)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{!208, !208}
!9620 = !{!9621}
!9621 = !DILocalVariable(name: "size", arg: 1, scope: !9617, file: !9460, line: 88, type: !208)
!9622 = !DILocation(line: 0, scope: !9617)
!9623 = !DILocation(line: 91, column: 11, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9617, file: !9460, line: 91, column: 6)
!9625 = !DILocation(line: 91, column: 6, scope: !9617)
!9626 = !DILocation(line: 100, column: 11, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9617, file: !9460, line: 100, column: 6)
!9628 = !DILocation(line: 100, column: 6, scope: !9617)
!9629 = !DILocation(line: 104, column: 35, scope: !9617)
!9630 = !DILocation(line: 104, column: 16, scope: !9617)
!9631 = !DILocation(line: 104, column: 50, scope: !9617)
!9632 = !DILocation(line: 104, column: 72, scope: !9617)
!9633 = !DILocation(line: 104, column: 2, scope: !9617)
!9634 = !DILocation(line: 106, column: 1, scope: !9617)
!9635 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !708, file: !708, line: 307, type: !9636, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{null, !9439, !150}
!9638 = !{!9639, !9640}
!9639 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9635, file: !708, line: 308, type: !9439)
!9640 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9635, file: !708, line: 308, type: !150)
!9641 = !DILocation(line: 0, scope: !9635)
!9642 = !DILocation(line: 310, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9635, file: !708, line: 310, column: 6)
!9644 = !DILocation(line: 316, column: 1, scope: !9635)
!9645 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9460, file: !9460, line: 249, type: !9646, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9648)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{!125, !9439, !150}
!9648 = !{!9649, !9650, !9651, !9652}
!9649 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9645, file: !9460, line: 250, type: !9439)
!9650 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9645, file: !9460, line: 250, type: !150)
!9651 = !DILocalVariable(name: "mpu_reg_index", scope: !9645, file: !9460, line: 252, type: !125)
!9652 = !DILocalVariable(name: "i", scope: !9653, file: !9460, line: 264, type: !125)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !9460, line: 264, column: 3)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !9460, line: 261, column: 32)
!9655 = distinct !DILexicalBlock(scope: !9645, file: !9460, line: 261, column: 6)
!9656 = !DILocation(line: 0, scope: !9645)
!9657 = !DILocation(line: 252, column: 22, scope: !9645)
!9658 = !DILocation(line: 258, column: 18, scope: !9645)
!9659 = !DILocation(line: 261, column: 20, scope: !9655)
!9660 = !DILocation(line: 261, column: 6, scope: !9645)
!9661 = !DILocation(line: 0, scope: !9653)
!9662 = !DILocation(line: 265, column: 4, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !9460, line: 264, column: 59)
!9664 = distinct !DILexicalBlock(scope: !9653, file: !9460, line: 264, column: 3)
!9665 = !DILocation(line: 264, column: 55, scope: !9664)
!9666 = !DILocation(line: 264, column: 33, scope: !9664)
!9667 = !DILocation(line: 264, column: 3, scope: !9653)
!9668 = distinct !{!9668, !9667, !9669}
!9669 = !DILocation(line: 266, column: 3, scope: !9653)
!9670 = !DILocation(line: 269, column: 2, scope: !9645)
!9671 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9672, file: !9672, line: 218, type: !8463, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9673)
!9672 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9673 = !{!9674}
!9674 = !DILocalVariable(name: "rnr", arg: 1, scope: !9671, file: !9672, line: 218, type: !208)
!9675 = !DILocation(line: 0, scope: !9671)
!9676 = !DILocation(line: 220, column: 12, scope: !9671)
!9677 = !DILocation(line: 221, column: 13, scope: !9671)
!9678 = !DILocation(line: 222, column: 1, scope: !9671)
!9679 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !708, file: !708, line: 326, type: !9680, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!125}
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "r_index", scope: !9679, file: !708, line: 328, type: !208)
!9684 = !DILocation(line: 330, column: 17, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9679, file: !708, line: 330, column: 6)
!9686 = !DILocation(line: 330, column: 29, scope: !9685)
!9687 = !DILocation(line: 330, column: 6, scope: !9679)
!9688 = !DILocation(line: 347, column: 2, scope: !9679)
!9689 = !DILocation(line: 0, scope: !9679)
!9690 = !DILocation(line: 364, column: 29, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !708, line: 364, column: 2)
!9692 = distinct !DILexicalBlock(scope: !9679, file: !708, line: 364, column: 2)
!9693 = !DILocation(line: 364, column: 2, scope: !9692)
!9694 = !DILocation(line: 365, column: 25, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9691, file: !708, line: 364, column: 66)
!9696 = !DILocation(line: 365, column: 3, scope: !9695)
!9697 = !DILocation(line: 364, column: 62, scope: !9691)
!9698 = distinct !{!9698, !9693, !9699}
!9699 = !DILocation(line: 366, column: 2, scope: !9692)
!9700 = !DILocation(line: 369, column: 23, scope: !9679)
!9701 = !DILocation(line: 369, column: 21, scope: !9679)
!9702 = !DILocation(line: 372, column: 2, scope: !9679)
!9703 = !DILocation(line: 443, column: 2, scope: !9679)
!9704 = !DILocation(line: 444, column: 1, scope: !9679)
!9705 = distinct !DISubprogram(name: "strcpy", scope: !9706, file: !9706, line: 20, type: !9707, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9711)
!9706 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9707 = !DISubroutineType(types: !9708)
!9708 = !{!393, !9709, !9710}
!9709 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9710 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9711 = !{!9712, !9713, !9714}
!9712 = !DILocalVariable(name: "d", arg: 1, scope: !9705, file: !9706, line: 20, type: !9709)
!9713 = !DILocalVariable(name: "s", arg: 2, scope: !9705, file: !9706, line: 20, type: !9710)
!9714 = !DILocalVariable(name: "dest", scope: !9705, file: !9706, line: 22, type: !393)
!9715 = !DILocation(line: 0, scope: !9705)
!9716 = !DILocation(line: 24, column: 9, scope: !9705)
!9717 = !DILocation(line: 24, column: 12, scope: !9705)
!9718 = !DILocation(line: 24, column: 2, scope: !9705)
!9719 = !DILocation(line: 25, column: 6, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9705, file: !9706, line: 24, column: 21)
!9721 = !DILocation(line: 26, column: 4, scope: !9720)
!9722 = !DILocation(line: 27, column: 4, scope: !9720)
!9723 = distinct !{!9723, !9718, !9724}
!9724 = !DILocation(line: 28, column: 2, scope: !9705)
!9725 = !DILocation(line: 30, column: 5, scope: !9705)
!9726 = !DILocation(line: 32, column: 2, scope: !9705)
!9727 = distinct !DISubprogram(name: "strncpy", scope: !9706, file: !9706, line: 42, type: !9728, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9730)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!393, !9709, !9710, !272}
!9730 = !{!9731, !9732, !9733, !9734}
!9731 = !DILocalVariable(name: "d", arg: 1, scope: !9727, file: !9706, line: 42, type: !9709)
!9732 = !DILocalVariable(name: "s", arg: 2, scope: !9727, file: !9706, line: 42, type: !9710)
!9733 = !DILocalVariable(name: "n", arg: 3, scope: !9727, file: !9706, line: 42, type: !272)
!9734 = !DILocalVariable(name: "dest", scope: !9727, file: !9706, line: 44, type: !393)
!9735 = !DILocation(line: 0, scope: !9727)
!9736 = !DILocation(line: 46, column: 12, scope: !9727)
!9737 = !DILocation(line: 46, column: 17, scope: !9727)
!9738 = !DILocation(line: 46, column: 20, scope: !9727)
!9739 = !DILocation(line: 46, column: 23, scope: !9727)
!9740 = !DILocation(line: 46, column: 2, scope: !9727)
!9741 = !DILocation(line: 47, column: 6, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9727, file: !9706, line: 46, column: 32)
!9743 = !DILocation(line: 48, column: 4, scope: !9742)
!9744 = !DILocation(line: 49, column: 4, scope: !9742)
!9745 = !DILocation(line: 50, column: 4, scope: !9742)
!9746 = distinct !{!9746, !9740, !9747}
!9747 = !DILocation(line: 51, column: 2, scope: !9727)
!9748 = !DILocation(line: 54, column: 6, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9727, file: !9706, line: 53, column: 16)
!9750 = !DILocation(line: 55, column: 4, scope: !9749)
!9751 = !DILocation(line: 56, column: 4, scope: !9749)
!9752 = !DILocation(line: 53, column: 11, scope: !9727)
!9753 = !DILocation(line: 53, column: 2, scope: !9727)
!9754 = distinct !{!9754, !9753, !9755}
!9755 = !DILocation(line: 57, column: 2, scope: !9727)
!9756 = !DILocation(line: 59, column: 2, scope: !9727)
!9757 = distinct !DISubprogram(name: "strchr", scope: !9706, file: !9706, line: 69, type: !9758, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9760)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{!393, !140, !125}
!9760 = !{!9761, !9762, !9763}
!9761 = !DILocalVariable(name: "s", arg: 1, scope: !9757, file: !9706, line: 69, type: !140)
!9762 = !DILocalVariable(name: "c", arg: 2, scope: !9757, file: !9706, line: 69, type: !125)
!9763 = !DILocalVariable(name: "tmp", scope: !9757, file: !9706, line: 71, type: !142)
!9764 = !DILocation(line: 0, scope: !9757)
!9765 = !DILocation(line: 73, column: 2, scope: !9757)
!9766 = !DILocation(line: 73, column: 10, scope: !9757)
!9767 = !DILocation(line: 73, column: 13, scope: !9757)
!9768 = !DILocation(line: 73, column: 21, scope: !9757)
!9769 = !DILocation(line: 74, column: 4, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9757, file: !9706, line: 73, column: 38)
!9771 = distinct !{!9771, !9765, !9772}
!9772 = !DILocation(line: 75, column: 2, scope: !9757)
!9773 = !DILocation(line: 77, column: 9, scope: !9757)
!9774 = !DILocation(line: 77, column: 2, scope: !9757)
!9775 = distinct !DISubprogram(name: "strrchr", scope: !9706, file: !9706, line: 87, type: !9758, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9776)
!9776 = !{!9777, !9778, !9779}
!9777 = !DILocalVariable(name: "s", arg: 1, scope: !9775, file: !9706, line: 87, type: !140)
!9778 = !DILocalVariable(name: "c", arg: 2, scope: !9775, file: !9706, line: 87, type: !125)
!9779 = !DILocalVariable(name: "match", scope: !9775, file: !9706, line: 89, type: !393)
!9780 = !DILocation(line: 0, scope: !9775)
!9781 = !DILocation(line: 91, column: 2, scope: !9775)
!9782 = !DILocation(line: 92, column: 7, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9784, file: !9706, line: 92, column: 7)
!9784 = distinct !DILexicalBlock(scope: !9775, file: !9706, line: 91, column: 5)
!9785 = !DILocation(line: 92, column: 10, scope: !9783)
!9786 = !DILocation(line: 92, column: 7, scope: !9784)
!9787 = !DILocation(line: 95, column: 13, scope: !9775)
!9788 = !DILocation(line: 95, column: 2, scope: !9784)
!9789 = distinct !{!9789, !9781, !9790}
!9790 = !DILocation(line: 95, column: 15, scope: !9775)
!9791 = !DILocation(line: 97, column: 2, scope: !9775)
!9792 = distinct !DISubprogram(name: "strlen", scope: !9706, file: !9706, line: 107, type: !9793, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9795)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!272, !140}
!9795 = !{!9796, !9797}
!9796 = !DILocalVariable(name: "s", arg: 1, scope: !9792, file: !9706, line: 107, type: !140)
!9797 = !DILocalVariable(name: "n", scope: !9792, file: !9706, line: 109, type: !272)
!9798 = !DILocation(line: 0, scope: !9792)
!9799 = !DILocation(line: 111, column: 9, scope: !9792)
!9800 = !DILocation(line: 111, column: 12, scope: !9792)
!9801 = !DILocation(line: 111, column: 2, scope: !9792)
!9802 = !DILocation(line: 112, column: 4, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9792, file: !9706, line: 111, column: 21)
!9804 = !DILocation(line: 113, column: 4, scope: !9803)
!9805 = distinct !{!9805, !9801, !9806}
!9806 = !DILocation(line: 114, column: 2, scope: !9792)
!9807 = !DILocation(line: 116, column: 2, scope: !9792)
!9808 = distinct !DISubprogram(name: "strnlen", scope: !9706, file: !9706, line: 126, type: !9809, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9811)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!272, !140, !272}
!9811 = !{!9812, !9813, !9814}
!9812 = !DILocalVariable(name: "s", arg: 1, scope: !9808, file: !9706, line: 126, type: !140)
!9813 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9808, file: !9706, line: 126, type: !272)
!9814 = !DILocalVariable(name: "n", scope: !9808, file: !9706, line: 128, type: !272)
!9815 = !DILocation(line: 0, scope: !9808)
!9816 = !DILocation(line: 130, column: 9, scope: !9808)
!9817 = !DILocation(line: 130, column: 12, scope: !9808)
!9818 = !DILocation(line: 130, column: 20, scope: !9808)
!9819 = !DILocation(line: 130, column: 2, scope: !9808)
!9820 = !DILocation(line: 131, column: 4, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9808, file: !9706, line: 130, column: 35)
!9822 = !DILocation(line: 132, column: 4, scope: !9821)
!9823 = distinct !{!9823, !9819, !9824}
!9824 = !DILocation(line: 133, column: 2, scope: !9808)
!9825 = !DILocation(line: 135, column: 2, scope: !9808)
!9826 = distinct !DISubprogram(name: "strcmp", scope: !9706, file: !9706, line: 145, type: !9827, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9829)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{!125, !140, !140}
!9829 = !{!9830, !9831}
!9830 = !DILocalVariable(name: "s1", arg: 1, scope: !9826, file: !9706, line: 145, type: !140)
!9831 = !DILocalVariable(name: "s2", arg: 2, scope: !9826, file: !9706, line: 145, type: !140)
!9832 = !DILocation(line: 0, scope: !9826)
!9833 = !DILocation(line: 147, column: 10, scope: !9826)
!9834 = !DILocation(line: 147, column: 17, scope: !9826)
!9835 = !DILocation(line: 147, column: 14, scope: !9826)
!9836 = !DILocation(line: 147, column: 22, scope: !9826)
!9837 = !DILocation(line: 148, column: 5, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9826, file: !9706, line: 147, column: 40)
!9839 = !DILocation(line: 149, column: 5, scope: !9838)
!9840 = distinct !{!9840, !9841, !9842}
!9841 = !DILocation(line: 147, column: 2, scope: !9826)
!9842 = !DILocation(line: 150, column: 2, scope: !9826)
!9843 = !DILocation(line: 152, column: 9, scope: !9826)
!9844 = !DILocation(line: 152, column: 15, scope: !9826)
!9845 = !DILocation(line: 152, column: 13, scope: !9826)
!9846 = !DILocation(line: 152, column: 2, scope: !9826)
!9847 = distinct !DISubprogram(name: "strncmp", scope: !9706, file: !9706, line: 162, type: !9848, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9850)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{!125, !140, !140, !272}
!9850 = !{!9851, !9852, !9853}
!9851 = !DILocalVariable(name: "s1", arg: 1, scope: !9847, file: !9706, line: 162, type: !140)
!9852 = !DILocalVariable(name: "s2", arg: 2, scope: !9847, file: !9706, line: 162, type: !140)
!9853 = !DILocalVariable(name: "n", arg: 3, scope: !9847, file: !9706, line: 162, type: !272)
!9854 = !DILocation(line: 0, scope: !9847)
!9855 = !DILocation(line: 164, column: 17, scope: !9847)
!9856 = !DILocation(line: 164, column: 21, scope: !9847)
!9857 = !DILocation(line: 164, column: 28, scope: !9847)
!9858 = !DILocation(line: 164, column: 25, scope: !9847)
!9859 = !DILocation(line: 164, column: 33, scope: !9847)
!9860 = !DILocation(line: 165, column: 5, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9847, file: !9706, line: 164, column: 51)
!9862 = !DILocation(line: 166, column: 5, scope: !9861)
!9863 = !DILocation(line: 167, column: 4, scope: !9861)
!9864 = distinct !{!9864, !9865, !9866}
!9865 = !DILocation(line: 164, column: 2, scope: !9847)
!9866 = !DILocation(line: 168, column: 2, scope: !9847)
!9867 = !DILocation(line: 170, column: 25, scope: !9847)
!9868 = !DILocation(line: 170, column: 31, scope: !9847)
!9869 = !DILocation(line: 170, column: 29, scope: !9847)
!9870 = !DILocation(line: 170, column: 9, scope: !9847)
!9871 = !DILocation(line: 170, column: 2, scope: !9847)
!9872 = distinct !DISubprogram(name: "strtok_r", scope: !9706, file: !9706, line: 180, type: !9873, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9875)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{!393, !393, !140, !392}
!9875 = !{!9876, !9877, !9878, !9879, !9880}
!9876 = !DILocalVariable(name: "str", arg: 1, scope: !9872, file: !9706, line: 180, type: !393)
!9877 = !DILocalVariable(name: "sep", arg: 2, scope: !9872, file: !9706, line: 180, type: !140)
!9878 = !DILocalVariable(name: "state", arg: 3, scope: !9872, file: !9706, line: 180, type: !392)
!9879 = !DILocalVariable(name: "start", scope: !9872, file: !9706, line: 182, type: !393)
!9880 = !DILocalVariable(name: "end", scope: !9872, file: !9706, line: 182, type: !393)
!9881 = !DILocation(line: 0, scope: !9872)
!9882 = !DILocation(line: 184, column: 10, scope: !9872)
!9883 = !DILocation(line: 184, column: 22, scope: !9872)
!9884 = !DILocation(line: 187, column: 9, scope: !9872)
!9885 = !DILocation(line: 187, column: 16, scope: !9872)
!9886 = !DILocation(line: 187, column: 19, scope: !9872)
!9887 = !DILocation(line: 187, column: 2, scope: !9872)
!9888 = !DILocation(line: 188, column: 8, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9872, file: !9706, line: 187, column: 40)
!9890 = distinct !{!9890, !9887, !9891}
!9891 = !DILocation(line: 189, column: 2, scope: !9872)
!9892 = !DILocation(line: 198, column: 9, scope: !9872)
!9893 = !DILocation(line: 198, column: 18, scope: !9872)
!9894 = !DILocation(line: 198, column: 17, scope: !9872)
!9895 = !DILocation(line: 198, column: 2, scope: !9872)
!9896 = !DILocation(line: 199, column: 6, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9872, file: !9706, line: 198, column: 37)
!9898 = !DILocation(line: 198, column: 14, scope: !9872)
!9899 = distinct !{!9899, !9895, !9900}
!9900 = !DILocation(line: 200, column: 2, scope: !9872)
!9901 = !DILocation(line: 203, column: 8, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !9706, line: 202, column: 20)
!9903 = distinct !DILexicalBlock(scope: !9872, file: !9706, line: 202, column: 6)
!9904 = !DILocation(line: 204, column: 16, scope: !9902)
!9905 = !DILocation(line: 205, column: 2, scope: !9902)
!9906 = !DILocation(line: 210, column: 1, scope: !9872)
!9907 = distinct !DISubprogram(name: "strcat", scope: !9706, file: !9706, line: 212, type: !9707, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9908)
!9908 = !{!9909, !9910}
!9909 = !DILocalVariable(name: "dest", arg: 1, scope: !9907, file: !9706, line: 212, type: !9709)
!9910 = !DILocalVariable(name: "src", arg: 2, scope: !9907, file: !9706, line: 212, type: !9710)
!9911 = !DILocation(line: 0, scope: !9907)
!9912 = !DILocation(line: 214, column: 16, scope: !9907)
!9913 = !DILocation(line: 214, column: 14, scope: !9907)
!9914 = !DILocation(line: 214, column: 2, scope: !9907)
!9915 = !DILocation(line: 215, column: 2, scope: !9907)
!9916 = distinct !DISubprogram(name: "strncat", scope: !9706, file: !9706, line: 218, type: !9728, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9917)
!9917 = !{!9918, !9919, !9920, !9921, !9922}
!9918 = !DILocalVariable(name: "dest", arg: 1, scope: !9916, file: !9706, line: 218, type: !9709)
!9919 = !DILocalVariable(name: "src", arg: 2, scope: !9916, file: !9706, line: 218, type: !9710)
!9920 = !DILocalVariable(name: "n", arg: 3, scope: !9916, file: !9706, line: 219, type: !272)
!9921 = !DILocalVariable(name: "orig_dest", scope: !9916, file: !9706, line: 221, type: !393)
!9922 = !DILocalVariable(name: "len", scope: !9916, file: !9706, line: 222, type: !272)
!9923 = !DILocation(line: 0, scope: !9916)
!9924 = !DILocation(line: 222, column: 15, scope: !9916)
!9925 = !DILocation(line: 224, column: 7, scope: !9916)
!9926 = !DILocation(line: 225, column: 14, scope: !9916)
!9927 = !DILocation(line: 225, column: 19, scope: !9916)
!9928 = !DILocation(line: 225, column: 11, scope: !9916)
!9929 = !DILocation(line: 225, column: 23, scope: !9916)
!9930 = !DILocation(line: 225, column: 28, scope: !9916)
!9931 = !DILocation(line: 225, column: 2, scope: !9916)
!9932 = !DILocation(line: 226, column: 17, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9916, file: !9706, line: 225, column: 38)
!9934 = !DILocation(line: 226, column: 8, scope: !9933)
!9935 = !DILocation(line: 226, column: 11, scope: !9933)
!9936 = distinct !{!9936, !9931, !9937}
!9937 = !DILocation(line: 227, column: 2, scope: !9916)
!9938 = !DILocation(line: 228, column: 8, scope: !9916)
!9939 = !DILocation(line: 230, column: 2, scope: !9916)
!9940 = distinct !DISubprogram(name: "memcmp", scope: !9706, file: !9706, line: 239, type: !9941, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!125, !13, !13, !272}
!9943 = !{!9944, !9945, !9946, !9947, !9948}
!9944 = !DILocalVariable(name: "m1", arg: 1, scope: !9940, file: !9706, line: 239, type: !13)
!9945 = !DILocalVariable(name: "m2", arg: 2, scope: !9940, file: !9706, line: 239, type: !13)
!9946 = !DILocalVariable(name: "n", arg: 3, scope: !9940, file: !9706, line: 239, type: !272)
!9947 = !DILocalVariable(name: "c1", scope: !9940, file: !9706, line: 241, type: !140)
!9948 = !DILocalVariable(name: "c2", scope: !9940, file: !9706, line: 242, type: !140)
!9949 = !DILocation(line: 0, scope: !9940)
!9950 = !DILocation(line: 244, column: 7, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9940, file: !9706, line: 244, column: 6)
!9952 = !DILocation(line: 244, column: 6, scope: !9940)
!9953 = !DILocation(line: 248, column: 10, scope: !9940)
!9954 = !DILocation(line: 248, column: 14, scope: !9940)
!9955 = !DILocation(line: 248, column: 19, scope: !9940)
!9956 = !DILocation(line: 248, column: 2, scope: !9940)
!9957 = !DILocation(line: 248, column: 23, scope: !9940)
!9958 = !DILocation(line: 248, column: 30, scope: !9940)
!9959 = !DILocation(line: 248, column: 27, scope: !9940)
!9960 = !DILocation(line: 249, column: 5, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9940, file: !9706, line: 248, column: 36)
!9962 = !DILocation(line: 250, column: 5, scope: !9961)
!9963 = distinct !{!9963, !9956, !9964}
!9964 = !DILocation(line: 251, column: 2, scope: !9940)
!9965 = !DILocation(line: 253, column: 9, scope: !9940)
!9966 = !DILocation(line: 253, column: 15, scope: !9940)
!9967 = !DILocation(line: 253, column: 13, scope: !9940)
!9968 = !DILocation(line: 253, column: 2, scope: !9940)
!9969 = !DILocation(line: 254, column: 1, scope: !9940)
!9970 = distinct !DISubprogram(name: "memmove", scope: !9706, file: !9706, line: 263, type: !9971, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !9973)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!124, !124, !13, !272}
!9973 = !{!9974, !9975, !9976, !9977, !9978}
!9974 = !DILocalVariable(name: "d", arg: 1, scope: !9970, file: !9706, line: 263, type: !124)
!9975 = !DILocalVariable(name: "s", arg: 2, scope: !9970, file: !9706, line: 263, type: !13)
!9976 = !DILocalVariable(name: "n", arg: 3, scope: !9970, file: !9706, line: 263, type: !272)
!9977 = !DILocalVariable(name: "dest", scope: !9970, file: !9706, line: 265, type: !393)
!9978 = !DILocalVariable(name: "src", scope: !9970, file: !9706, line: 266, type: !140)
!9979 = !DILocation(line: 0, scope: !9970)
!9980 = !DILocation(line: 268, column: 21, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9970, file: !9706, line: 268, column: 6)
!9982 = !DILocation(line: 268, column: 28, scope: !9981)
!9983 = !DILocation(line: 268, column: 6, scope: !9970)
!9984 = !DILocation(line: 280, column: 12, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9981, file: !9706, line: 278, column: 9)
!9986 = !DILocation(line: 280, column: 3, scope: !9985)
!9987 = !DILocation(line: 275, column: 5, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !9706, line: 274, column: 17)
!9989 = distinct !DILexicalBlock(scope: !9981, file: !9706, line: 268, column: 33)
!9990 = !DILocation(line: 276, column: 14, scope: !9988)
!9991 = !DILocation(line: 276, column: 4, scope: !9988)
!9992 = !DILocation(line: 276, column: 12, scope: !9988)
!9993 = !DILocation(line: 274, column: 12, scope: !9989)
!9994 = !DILocation(line: 274, column: 3, scope: !9989)
!9995 = distinct !{!9995, !9994, !9996}
!9996 = !DILocation(line: 277, column: 3, scope: !9989)
!9997 = !DILocation(line: 281, column: 12, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9985, file: !9706, line: 280, column: 17)
!9999 = !DILocation(line: 281, column: 10, scope: !9998)
!10000 = !DILocation(line: 282, column: 8, scope: !9998)
!10001 = !DILocation(line: 283, column: 7, scope: !9998)
!10002 = !DILocation(line: 284, column: 5, scope: !9998)
!10003 = distinct !{!10003, !9986, !10004}
!10004 = !DILocation(line: 285, column: 3, scope: !9985)
!10005 = !DILocation(line: 288, column: 2, scope: !9970)
!10006 = distinct !DISubprogram(name: "memcpy", scope: !9706, file: !9706, line: 298, type: !10007, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !10011)
!10007 = !DISubroutineType(types: !10008)
!10008 = !{!124, !10009, !10010, !272}
!10009 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!10010 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!10011 = !{!10012, !10013, !10014, !10015, !10016}
!10012 = !DILocalVariable(name: "d", arg: 1, scope: !10006, file: !9706, line: 298, type: !10009)
!10013 = !DILocalVariable(name: "s", arg: 2, scope: !10006, file: !9706, line: 298, type: !10010)
!10014 = !DILocalVariable(name: "n", arg: 3, scope: !10006, file: !9706, line: 298, type: !272)
!10015 = !DILocalVariable(name: "d_byte", scope: !10006, file: !9706, line: 302, type: !1152)
!10016 = !DILocalVariable(name: "s_byte", scope: !10006, file: !9706, line: 303, type: !3148)
!10017 = !DILocation(line: 0, scope: !10006)
!10018 = !DILocation(line: 337, column: 11, scope: !10006)
!10019 = !DILocation(line: 337, column: 2, scope: !10006)
!10020 = !DILocation(line: 338, column: 25, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10006, file: !9706, line: 337, column: 16)
!10022 = !DILocation(line: 338, column: 17, scope: !10021)
!10023 = !DILocation(line: 338, column: 11, scope: !10021)
!10024 = !DILocation(line: 338, column: 15, scope: !10021)
!10025 = !DILocation(line: 339, column: 4, scope: !10021)
!10026 = distinct !{!10026, !10019, !10027}
!10027 = !DILocation(line: 340, column: 2, scope: !10006)
!10028 = !DILocation(line: 342, column: 2, scope: !10006)
!10029 = distinct !DISubprogram(name: "memset", scope: !9706, file: !9706, line: 352, type: !10030, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!124, !124, !125, !272}
!10032 = !{!10033, !10034, !10035, !10036, !10037}
!10033 = !DILocalVariable(name: "buf", arg: 1, scope: !10029, file: !9706, line: 352, type: !124)
!10034 = !DILocalVariable(name: "c", arg: 2, scope: !10029, file: !9706, line: 352, type: !125)
!10035 = !DILocalVariable(name: "n", arg: 3, scope: !10029, file: !9706, line: 352, type: !272)
!10036 = !DILocalVariable(name: "d_byte", scope: !10029, file: !9706, line: 356, type: !1152)
!10037 = !DILocalVariable(name: "c_byte", scope: !10029, file: !9706, line: 357, type: !151)
!10038 = !DILocation(line: 0, scope: !10029)
!10039 = !DILocation(line: 357, column: 25, scope: !10029)
!10040 = !DILocation(line: 389, column: 11, scope: !10029)
!10041 = !DILocation(line: 389, column: 2, scope: !10029)
!10042 = !DILocation(line: 390, column: 11, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10029, file: !9706, line: 389, column: 16)
!10044 = !DILocation(line: 390, column: 15, scope: !10043)
!10045 = !DILocation(line: 391, column: 4, scope: !10043)
!10046 = distinct !{!10046, !10041, !10047}
!10047 = !DILocation(line: 392, column: 2, scope: !10029)
!10048 = !DILocation(line: 394, column: 2, scope: !10029)
!10049 = distinct !DISubprogram(name: "memchr", scope: !9706, file: !9706, line: 404, type: !10050, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !10052)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!124, !13, !125, !272}
!10052 = !{!10053, !10054, !10055, !10056}
!10053 = !DILocalVariable(name: "s", arg: 1, scope: !10049, file: !9706, line: 404, type: !13)
!10054 = !DILocalVariable(name: "c", arg: 2, scope: !10049, file: !9706, line: 404, type: !125)
!10055 = !DILocalVariable(name: "n", arg: 3, scope: !10049, file: !9706, line: 404, type: !272)
!10056 = !DILocalVariable(name: "p", scope: !10057, file: !9706, line: 407, type: !3148)
!10057 = distinct !DILexicalBlock(scope: !10058, file: !9706, line: 406, column: 14)
!10058 = distinct !DILexicalBlock(scope: !10049, file: !9706, line: 406, column: 6)
!10059 = !DILocation(line: 0, scope: !10049)
!10060 = !DILocation(line: 406, column: 8, scope: !10058)
!10061 = !DILocation(line: 406, column: 6, scope: !10049)
!10062 = !DILocation(line: 409, column: 3, scope: !10057)
!10063 = !DILocation(line: 0, scope: !10057)
!10064 = !DILocation(line: 410, column: 8, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !9706, line: 410, column: 8)
!10066 = distinct !DILexicalBlock(scope: !10057, file: !9706, line: 409, column: 6)
!10067 = !DILocation(line: 410, column: 13, scope: !10065)
!10068 = !DILocation(line: 410, column: 8, scope: !10066)
!10069 = distinct !{!10069, !10062, !10070}
!10070 = !DILocation(line: 414, column: 20, scope: !10057)
!10071 = !DILocation(line: 417, column: 2, scope: !10049)
!10072 = !DILocation(line: 418, column: 1, scope: !10049)
!10073 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !718, file: !718, line: 23, type: !5135, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10074)
!10074 = !{!10075}
!10075 = !DILocalVariable(name: "hook", arg: 1, scope: !10073, file: !718, line: 23, type: !409)
!10076 = !DILocation(line: 0, scope: !10073)
!10077 = !DILocation(line: 25, column: 15, scope: !10073)
!10078 = !DILocation(line: 26, column: 1, scope: !10073)
!10079 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !718, file: !718, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10080)
!10080 = !{!10081}
!10081 = !DILocalVariable(name: "c", arg: 1, scope: !10079, file: !718, line: 14, type: !125)
!10082 = !DILocation(line: 0, scope: !10079)
!10083 = !DILocation(line: 18, column: 2, scope: !10079)
!10084 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !718, file: !718, line: 28, type: !10085, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10087)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{!125, !125, !714}
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "c", arg: 1, scope: !10084, file: !718, line: 28, type: !125)
!10089 = !DILocalVariable(name: "stream", arg: 2, scope: !10084, file: !718, line: 28, type: !714)
!10090 = !DILocation(line: 0, scope: !10084)
!10091 = !DILocation(line: 30, column: 27, scope: !10084)
!10092 = !DILocation(line: 30, column: 50, scope: !10084)
!10093 = !DILocation(line: 30, column: 9, scope: !10084)
!10094 = !DILocation(line: 30, column: 2, scope: !10084)
!10095 = distinct !DISubprogram(name: "fputc", scope: !718, file: !718, line: 41, type: !10085, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10096)
!10096 = !{!10097, !10098}
!10097 = !DILocalVariable(name: "c", arg: 1, scope: !10095, file: !718, line: 41, type: !125)
!10098 = !DILocalVariable(name: "stream", arg: 2, scope: !10095, file: !718, line: 41, type: !714)
!10099 = !DILocation(line: 0, scope: !10095)
!10100 = !DILocation(line: 43, column: 9, scope: !10095)
!10101 = !DILocation(line: 43, column: 2, scope: !10095)
!10102 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10103, file: !10103, line: 72, type: !10085, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10104)
!10103 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!10104 = !{!10105, !10106}
!10105 = !DILocalVariable(name: "c", arg: 1, scope: !10102, file: !10103, line: 72, type: !125)
!10106 = !DILocalVariable(name: "stream", arg: 2, scope: !10102, file: !10103, line: 72, type: !714)
!10107 = !DILocation(line: 0, scope: !10102)
!10108 = !DILocation(line: 81, column: 2, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10102, file: !10103, line: 81, column: 2)
!10110 = !{i64 2155125009}
!10111 = !DILocation(line: 82, column: 9, scope: !10102)
!10112 = !DILocation(line: 82, column: 2, scope: !10102)
!10113 = distinct !DISubprogram(name: "fputs", scope: !718, file: !718, line: 46, type: !10114, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10117)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!125, !9710, !10116}
!10116 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!10117 = !{!10118, !10119, !10120, !10121}
!10118 = !DILocalVariable(name: "s", arg: 1, scope: !10113, file: !718, line: 46, type: !9710)
!10119 = !DILocalVariable(name: "stream", arg: 2, scope: !10113, file: !718, line: 46, type: !10116)
!10120 = !DILocalVariable(name: "len", scope: !10113, file: !718, line: 48, type: !125)
!10121 = !DILocalVariable(name: "ret", scope: !10113, file: !718, line: 49, type: !125)
!10122 = !DILocation(line: 0, scope: !10113)
!10123 = !DILocation(line: 48, column: 12, scope: !10113)
!10124 = !DILocation(line: 51, column: 8, scope: !10113)
!10125 = !DILocation(line: 53, column: 13, scope: !10113)
!10126 = !DILocation(line: 53, column: 9, scope: !10113)
!10127 = !DILocation(line: 53, column: 2, scope: !10113)
!10128 = distinct !DISubprogram(name: "fwrite", scope: !718, file: !718, line: 99, type: !10129, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10131)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!272, !10010, !272, !272, !10116}
!10131 = !{!10132, !10133, !10134, !10135}
!10132 = !DILocalVariable(name: "ptr", arg: 1, scope: !10128, file: !718, line: 99, type: !10010)
!10133 = !DILocalVariable(name: "size", arg: 2, scope: !10128, file: !718, line: 99, type: !272)
!10134 = !DILocalVariable(name: "nitems", arg: 3, scope: !10128, file: !718, line: 99, type: !272)
!10135 = !DILocalVariable(name: "stream", arg: 4, scope: !10128, file: !718, line: 100, type: !10116)
!10136 = !DILocation(line: 0, scope: !10128)
!10137 = !DILocation(line: 102, column: 9, scope: !10128)
!10138 = !DILocation(line: 102, column: 2, scope: !10128)
!10139 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10103, file: !10103, line: 96, type: !10129, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10140)
!10140 = !{!10141, !10142, !10143, !10144}
!10141 = !DILocalVariable(name: "ptr", arg: 1, scope: !10139, file: !10103, line: 96, type: !10010)
!10142 = !DILocalVariable(name: "size", arg: 2, scope: !10139, file: !10103, line: 96, type: !272)
!10143 = !DILocalVariable(name: "nitems", arg: 3, scope: !10139, file: !10103, line: 96, type: !272)
!10144 = !DILocalVariable(name: "stream", arg: 4, scope: !10139, file: !10103, line: 96, type: !10116)
!10145 = !DILocation(line: 0, scope: !10139)
!10146 = !DILocation(line: 107, column: 2, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10139, file: !10103, line: 107, column: 2)
!10148 = !{i64 2155125113}
!10149 = !DILocation(line: 108, column: 9, scope: !10139)
!10150 = !DILocation(line: 108, column: 2, scope: !10139)
!10151 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !718, file: !718, line: 56, type: !10129, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10152)
!10152 = !{!10153, !10154, !10155, !10156, !10157, !10158, !10159, !10160}
!10153 = !DILocalVariable(name: "ptr", arg: 1, scope: !10151, file: !718, line: 56, type: !10010)
!10154 = !DILocalVariable(name: "size", arg: 2, scope: !10151, file: !718, line: 56, type: !272)
!10155 = !DILocalVariable(name: "nitems", arg: 3, scope: !10151, file: !718, line: 57, type: !272)
!10156 = !DILocalVariable(name: "stream", arg: 4, scope: !10151, file: !718, line: 57, type: !10116)
!10157 = !DILocalVariable(name: "i", scope: !10151, file: !718, line: 59, type: !272)
!10158 = !DILocalVariable(name: "j", scope: !10151, file: !718, line: 60, type: !272)
!10159 = !DILocalVariable(name: "p", scope: !10151, file: !718, line: 61, type: !3148)
!10160 = !DILabel(scope: !10151, name: "done", file: !718, line: 82)
!10161 = !DILocation(line: 0, scope: !10151)
!10162 = !DILocation(line: 63, column: 14, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10151, file: !718, line: 63, column: 6)
!10164 = !DILocation(line: 63, column: 24, scope: !10163)
!10165 = !DILocation(line: 72, column: 3, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10151, file: !718, line: 70, column: 5)
!10167 = !DILocation(line: 0, scope: !10166)
!10168 = !DILocation(line: 73, column: 8, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !718, line: 73, column: 8)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !718, line: 72, column: 6)
!10171 = !DILocation(line: 73, column: 29, scope: !10169)
!10172 = !DILocation(line: 73, column: 27, scope: !10169)
!10173 = !DILocation(line: 73, column: 21, scope: !10169)
!10174 = !DILocation(line: 73, column: 33, scope: !10169)
!10175 = !DILocation(line: 73, column: 8, scope: !10170)
!10176 = !DILocation(line: 76, column: 5, scope: !10170)
!10177 = !DILocation(line: 77, column: 14, scope: !10166)
!10178 = !DILocation(line: 77, column: 3, scope: !10170)
!10179 = distinct !{!10179, !10165, !10180}
!10180 = !DILocation(line: 77, column: 17, scope: !10166)
!10181 = !DILocation(line: 79, column: 4, scope: !10166)
!10182 = !DILocation(line: 80, column: 13, scope: !10151)
!10183 = !DILocation(line: 80, column: 2, scope: !10166)
!10184 = distinct !{!10184, !10185, !10186}
!10185 = !DILocation(line: 70, column: 2, scope: !10151)
!10186 = !DILocation(line: 80, column: 16, scope: !10151)
!10187 = !DILocation(line: 82, column: 1, scope: !10151)
!10188 = !DILocation(line: 83, column: 17, scope: !10151)
!10189 = !DILocation(line: 83, column: 2, scope: !10151)
!10190 = !DILocation(line: 84, column: 1, scope: !10151)
!10191 = distinct !DISubprogram(name: "puts", scope: !718, file: !718, line: 106, type: !10192, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10194)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{!125, !140}
!10194 = !{!10195}
!10195 = !DILocalVariable(name: "s", arg: 1, scope: !10191, file: !718, line: 106, type: !140)
!10196 = !DILocation(line: 0, scope: !10191)
!10197 = !DILocation(line: 108, column: 6, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10191, file: !718, line: 108, column: 6)
!10199 = !DILocation(line: 108, column: 23, scope: !10198)
!10200 = !DILocation(line: 108, column: 6, scope: !10191)
!10201 = !DILocation(line: 112, column: 9, scope: !10191)
!10202 = !DILocation(line: 112, column: 29, scope: !10191)
!10203 = !DILocation(line: 112, column: 2, scope: !10191)
!10204 = !DILocation(line: 113, column: 1, scope: !10191)
!10205 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !859, file: !859, line: 368, type: !910, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10206)
!10206 = !{!10207}
!10207 = !DILocalVariable(name: "dev", arg: 1, scope: !10205, file: !859, line: 368, type: !888)
!10208 = !DILocation(line: 0, scope: !10205)
!10209 = !DILocation(line: 370, column: 2, scope: !10205)
!10210 = !DILocation(line: 371, column: 1, scope: !10205)
!10211 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !859, file: !859, line: 243, type: !10212, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10214)
!10212 = !DISubroutineType(types: !10213)
!10213 = !{null, !125, !125, !888}
!10214 = !{!10215, !10216, !10217, !10218, !10220}
!10215 = !DILocalVariable(name: "min", arg: 1, scope: !10211, file: !859, line: 243, type: !125)
!10216 = !DILocalVariable(name: "max", arg: 2, scope: !10211, file: !859, line: 243, type: !125)
!10217 = !DILocalVariable(name: "dev", arg: 3, scope: !10211, file: !859, line: 243, type: !888)
!10218 = !DILocalVariable(name: "data", scope: !10211, file: !859, line: 245, type: !10219)
!10219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!10220 = !DILocalVariable(name: "line", scope: !10211, file: !859, line: 246, type: !125)
!10221 = !DILocation(line: 0, scope: !10211)
!10222 = !DILocation(line: 245, column: 38, scope: !10211)
!10223 = !DILocation(line: 249, column: 24, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !859, line: 249, column: 2)
!10225 = distinct !DILexicalBlock(scope: !10211, file: !859, line: 249, column: 2)
!10226 = !DILocation(line: 249, column: 2, scope: !10225)
!10227 = !DILocation(line: 251, column: 7, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !859, line: 251, column: 7)
!10229 = distinct !DILexicalBlock(scope: !10224, file: !859, line: 249, column: 39)
!10230 = !DILocation(line: 251, column: 7, scope: !10229)
!10231 = !DILocation(line: 253, column: 4, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10228, file: !859, line: 251, column: 36)
!10233 = !DILocation(line: 256, column: 24, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10232, file: !859, line: 256, column: 8)
!10235 = !DILocation(line: 256, column: 9, scope: !10234)
!10236 = !DILocation(line: 256, column: 8, scope: !10232)
!10237 = !DILocation(line: 260, column: 43, scope: !10232)
!10238 = !DILocation(line: 260, column: 4, scope: !10232)
!10239 = !DILocation(line: 261, column: 3, scope: !10232)
!10240 = !DILocation(line: 249, column: 35, scope: !10224)
!10241 = distinct !{!10241, !10226, !10242}
!10242 = !DILocation(line: 262, column: 2, scope: !10225)
!10243 = !DILocation(line: 263, column: 1, scope: !10211)
!10244 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !859, file: !859, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10245)
!10245 = !{!10246}
!10246 = !DILocalVariable(name: "line", arg: 1, scope: !10244, file: !859, line: 158, type: !125)
!10247 = !DILocation(line: 0, scope: !10244)
!10248 = !DILocation(line: 170, column: 38, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !859, line: 160, column: 17)
!10250 = distinct !DILexicalBlock(scope: !10244, file: !859, line: 160, column: 6)
!10251 = !DILocation(line: 170, column: 10, scope: !10249)
!10252 = !DILocation(line: 176, column: 1, scope: !10244)
!10253 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !859, file: !859, line: 183, type: !10254, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10256)
!10254 = !DISubroutineType(types: !10255)
!10255 = !{null, !125}
!10256 = !{!10257}
!10257 = !DILocalVariable(name: "line", arg: 1, scope: !10253, file: !859, line: 183, type: !125)
!10258 = !DILocation(line: 0, scope: !10253)
!10259 = !DILocation(line: 195, column: 28, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10261, file: !859, line: 185, column: 17)
!10261 = distinct !DILexicalBlock(scope: !10253, file: !859, line: 185, column: 6)
!10262 = !DILocation(line: 195, column: 3, scope: !10260)
!10263 = !DILocation(line: 200, column: 1, scope: !10253)
!10264 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10265, file: !10265, line: 910, type: !8463, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10266)
!10265 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10266 = !{!10267}
!10267 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10264, file: !10265, line: 910, type: !208)
!10268 = !DILocation(line: 0, scope: !10264)
!10269 = !DILocation(line: 912, column: 3, scope: !10264)
!10270 = !DILocation(line: 913, column: 1, scope: !10264)
!10271 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10265, file: !10265, line: 834, type: !9618, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10272)
!10272 = !{!10273}
!10273 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10271, file: !10265, line: 834, type: !208)
!10274 = !DILocation(line: 0, scope: !10271)
!10275 = !DILocation(line: 836, column: 11, scope: !10271)
!10276 = !DILocation(line: 836, column: 40, scope: !10271)
!10277 = !DILocation(line: 836, column: 3, scope: !10271)
!10278 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !859, file: !859, line: 304, type: !910, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10279)
!10279 = !{!10280}
!10280 = !DILocalVariable(name: "dev", arg: 1, scope: !10278, file: !859, line: 304, type: !888)
!10281 = !DILocation(line: 0, scope: !10278)
!10282 = !DILocation(line: 306, column: 2, scope: !10278)
!10283 = !DILocation(line: 307, column: 1, scope: !10278)
!10284 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !859, file: !859, line: 299, type: !910, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10285)
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "dev", arg: 1, scope: !10284, file: !859, line: 299, type: !888)
!10287 = !DILocation(line: 0, scope: !10284)
!10288 = !DILocation(line: 301, column: 2, scope: !10284)
!10289 = !DILocation(line: 302, column: 1, scope: !10284)
!10290 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !859, file: !859, line: 294, type: !910, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10291)
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "dev", arg: 1, scope: !10290, file: !859, line: 294, type: !888)
!10293 = !DILocation(line: 0, scope: !10290)
!10294 = !DILocation(line: 296, column: 2, scope: !10290)
!10295 = !DILocation(line: 297, column: 1, scope: !10290)
!10296 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !859, file: !859, line: 397, type: !910, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10297)
!10297 = !{!10298}
!10298 = !DILocalVariable(name: "dev", arg: 1, scope: !10296, file: !859, line: 397, type: !888)
!10299 = !DILocation(line: 0, scope: !10296)
!10300 = !DILocation(line: 399, column: 2, scope: !10296)
!10301 = !DILocation(line: 400, column: 1, scope: !10296)
!10302 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !859, file: !859, line: 392, type: !910, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10303)
!10303 = !{!10304}
!10304 = !DILocalVariable(name: "dev", arg: 1, scope: !10302, file: !859, line: 392, type: !888)
!10305 = !DILocation(line: 0, scope: !10302)
!10306 = !DILocation(line: 394, column: 2, scope: !10302)
!10307 = !DILocation(line: 395, column: 1, scope: !10302)
!10308 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !859, file: !859, line: 289, type: !910, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10309)
!10309 = !{!10310}
!10310 = !DILocalVariable(name: "dev", arg: 1, scope: !10308, file: !859, line: 289, type: !888)
!10311 = !DILocation(line: 0, scope: !10308)
!10312 = !DILocation(line: 291, column: 2, scope: !10308)
!10313 = !DILocation(line: 292, column: 1, scope: !10308)
!10314 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !859, file: !859, line: 387, type: !910, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10315)
!10315 = !{!10316}
!10316 = !DILocalVariable(name: "dev", arg: 1, scope: !10314, file: !859, line: 387, type: !888)
!10317 = !DILocation(line: 0, scope: !10314)
!10318 = !DILocation(line: 389, column: 2, scope: !10314)
!10319 = !DILocation(line: 390, column: 1, scope: !10314)
!10320 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !859, file: !859, line: 382, type: !910, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10321)
!10321 = !{!10322}
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10320, file: !859, line: 382, type: !888)
!10323 = !DILocation(line: 0, scope: !10320)
!10324 = !DILocation(line: 384, column: 2, scope: !10320)
!10325 = !DILocation(line: 385, column: 1, scope: !10320)
!10326 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !859, file: !859, line: 373, type: !910, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10327)
!10327 = !{!10328}
!10328 = !DILocalVariable(name: "dev", arg: 1, scope: !10326, file: !859, line: 373, type: !888)
!10329 = !DILocation(line: 0, scope: !10326)
!10330 = !DILocation(line: 375, column: 2, scope: !10326)
!10331 = !DILocation(line: 376, column: 1, scope: !10326)
!10332 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !859, file: !859, line: 284, type: !910, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10333)
!10333 = !{!10334}
!10334 = !DILocalVariable(name: "dev", arg: 1, scope: !10332, file: !859, line: 284, type: !888)
!10335 = !DILocation(line: 0, scope: !10332)
!10336 = !DILocation(line: 286, column: 2, scope: !10332)
!10337 = !DILocation(line: 287, column: 1, scope: !10332)
!10338 = distinct !DISubprogram(name: "stm32_exti_init", scope: !859, file: !859, line: 416, type: !886, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10339)
!10339 = !{!10340}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !859, line: 416, type: !888)
!10341 = !DILocation(line: 0, scope: !10338)
!10342 = !DILocation(line: 418, column: 2, scope: !10338)
!10343 = !DILocation(line: 420, column: 2, scope: !10338)
!10344 = !DILocation(line: 0, scope: !909)
!10345 = !DILocation(line: 493, column: 2, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !909, file: !859, line: 493, column: 2)
!10347 = !DILocation(line: 497, column: 2, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !909, file: !859, line: 497, column: 2)
!10349 = !DILocation(line: 507, column: 2, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !909, file: !859, line: 507, column: 2)
!10351 = !DILocation(line: 512, column: 2, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !909, file: !859, line: 512, column: 2)
!10353 = !DILocation(line: 516, column: 2, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !909, file: !859, line: 516, column: 2)
!10355 = !DILocation(line: 523, column: 2, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !909, file: !859, line: 523, column: 2)
!10357 = !DILocation(line: 527, column: 2, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !909, file: !859, line: 527, column: 2)
!10359 = !DILocation(line: 581, column: 2, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !909, file: !859, line: 581, column: 2)
!10361 = !DILocation(line: 586, column: 2, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !909, file: !859, line: 586, column: 2)
!10363 = !DILocation(line: 591, column: 2, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !909, file: !859, line: 591, column: 2)
!10365 = !DILocation(line: 595, column: 2, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !909, file: !859, line: 595, column: 2)
!10367 = !DILocation(line: 607, column: 1, scope: !909)
!10368 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !859, file: !859, line: 112, type: !10254, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10369)
!10369 = !{!10370, !10371}
!10370 = !DILocalVariable(name: "line", arg: 1, scope: !10368, file: !859, line: 112, type: !125)
!10371 = !DILocalVariable(name: "irqnum", scope: !10368, file: !859, line: 114, type: !125)
!10372 = !DILocation(line: 0, scope: !10368)
!10373 = !DILocation(line: 121, column: 11, scope: !10368)
!10374 = !DILocation(line: 130, column: 26, scope: !10368)
!10375 = !DILocation(line: 130, column: 2, scope: !10368)
!10376 = !DILocation(line: 134, column: 2, scope: !10368)
!10377 = !DILocation(line: 135, column: 1, scope: !10368)
!10378 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10265, file: !10265, line: 268, type: !8463, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10379)
!10379 = !{!10380}
!10380 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10378, file: !10265, line: 268, type: !208)
!10381 = !DILocation(line: 0, scope: !10378)
!10382 = !DILocation(line: 270, column: 3, scope: !10378)
!10383 = !DILocation(line: 271, column: 1, scope: !10378)
!10384 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !859, file: !859, line: 137, type: !10254, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10385)
!10385 = !{!10386}
!10386 = !DILocalVariable(name: "line", arg: 1, scope: !10384, file: !859, line: 137, type: !125)
!10387 = !DILocation(line: 0, scope: !10384)
!10388 = !DILocation(line: 141, column: 11, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !859, line: 141, column: 6)
!10390 = !DILocation(line: 141, column: 6, scope: !10384)
!10391 = !DILocation(line: 145, column: 28, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10389, file: !859, line: 141, column: 17)
!10393 = !DILocation(line: 145, column: 3, scope: !10392)
!10394 = !DILocation(line: 147, column: 2, scope: !10392)
!10395 = !DILocation(line: 151, column: 1, scope: !10384)
!10396 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10265, file: !10265, line: 309, type: !8463, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10397)
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10396, file: !10265, line: 309, type: !208)
!10399 = !DILocation(line: 0, scope: !10396)
!10400 = !DILocation(line: 311, column: 3, scope: !10396)
!10401 = !DILocation(line: 312, column: 1, scope: !10396)
!10402 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !859, file: !859, line: 202, type: !10403, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{null, !125, !125}
!10405 = !{!10406, !10407}
!10406 = !DILocalVariable(name: "line", arg: 1, scope: !10402, file: !859, line: 202, type: !125)
!10407 = !DILocalVariable(name: "trigger", arg: 2, scope: !10402, file: !859, line: 202, type: !125)
!10408 = !DILocation(line: 0, scope: !10402)
!10409 = !DILocation(line: 211, column: 2, scope: !10402)
!10410 = !DILocation(line: 213, column: 36, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10402, file: !859, line: 211, column: 19)
!10412 = !DILocation(line: 213, column: 3, scope: !10411)
!10413 = !DILocation(line: 214, column: 3, scope: !10411)
!10414 = !DILocation(line: 215, column: 3, scope: !10411)
!10415 = !DILocation(line: 217, column: 35, scope: !10411)
!10416 = !DILocation(line: 217, column: 3, scope: !10411)
!10417 = !DILocation(line: 218, column: 3, scope: !10411)
!10418 = !DILocation(line: 219, column: 3, scope: !10411)
!10419 = !DILocation(line: 221, column: 36, scope: !10411)
!10420 = !DILocation(line: 221, column: 3, scope: !10411)
!10421 = !DILocation(line: 222, column: 3, scope: !10411)
!10422 = !DILocation(line: 223, column: 3, scope: !10411)
!10423 = !DILocation(line: 225, column: 35, scope: !10411)
!10424 = !DILocation(line: 225, column: 3, scope: !10411)
!10425 = !DILocation(line: 226, column: 3, scope: !10411)
!10426 = !DILocation(line: 227, column: 3, scope: !10411)
!10427 = !DILocation(line: 232, column: 1, scope: !10402)
!10428 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10265, file: !10265, line: 573, type: !8463, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10429)
!10429 = !{!10430}
!10430 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10428, file: !10265, line: 573, type: !208)
!10431 = !DILocation(line: 0, scope: !10428)
!10432 = !DILocation(line: 575, column: 3, scope: !10428)
!10433 = !DILocation(line: 577, column: 1, scope: !10428)
!10434 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10265, file: !10265, line: 703, type: !8463, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10435)
!10435 = !{!10436}
!10436 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10434, file: !10265, line: 703, type: !208)
!10437 = !DILocation(line: 0, scope: !10434)
!10438 = !DILocation(line: 705, column: 3, scope: !10434)
!10439 = !DILocation(line: 706, column: 1, scope: !10434)
!10440 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10265, file: !10265, line: 529, type: !8463, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10441)
!10441 = !{!10442}
!10442 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10440, file: !10265, line: 529, type: !208)
!10443 = !DILocation(line: 0, scope: !10440)
!10444 = !DILocation(line: 531, column: 3, scope: !10440)
!10445 = !DILocation(line: 533, column: 1, scope: !10440)
!10446 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10265, file: !10265, line: 661, type: !8463, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10447)
!10447 = !{!10448}
!10448 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10446, file: !10265, line: 661, type: !208)
!10449 = !DILocation(line: 0, scope: !10446)
!10450 = !DILocation(line: 663, column: 3, scope: !10446)
!10451 = !DILocation(line: 664, column: 1, scope: !10446)
!10452 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !859, file: !859, line: 433, type: !10453, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10455)
!10453 = !DISubroutineType(types: !10454)
!10454 = !{!125, !125, !899, !124}
!10455 = !{!10456, !10457, !10458, !10459, !10461}
!10456 = !DILocalVariable(name: "line", arg: 1, scope: !10452, file: !859, line: 433, type: !125)
!10457 = !DILocalVariable(name: "cb", arg: 2, scope: !10452, file: !859, line: 433, type: !899)
!10458 = !DILocalVariable(name: "arg", arg: 3, scope: !10452, file: !859, line: 433, type: !124)
!10459 = !DILocalVariable(name: "dev", scope: !10452, file: !859, line: 435, type: !10460)
!10460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!10461 = !DILocalVariable(name: "data", scope: !10452, file: !859, line: 436, type: !10219)
!10462 = !DILocation(line: 0, scope: !10452)
!10463 = !DILocation(line: 438, column: 21, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10452, file: !859, line: 438, column: 6)
!10465 = !DILocation(line: 438, column: 6, scope: !10464)
!10466 = !DILocation(line: 438, column: 6, scope: !10452)
!10467 = !DILocation(line: 442, column: 20, scope: !10452)
!10468 = !DILocation(line: 443, column: 17, scope: !10452)
!10469 = !DILocation(line: 443, column: 22, scope: !10452)
!10470 = !DILocation(line: 445, column: 2, scope: !10452)
!10471 = !DILocation(line: 446, column: 1, scope: !10452)
!10472 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !859, file: !859, line: 448, type: !10254, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476}
!10474 = !DILocalVariable(name: "line", arg: 1, scope: !10472, file: !859, line: 448, type: !125)
!10475 = !DILocalVariable(name: "dev", scope: !10472, file: !859, line: 450, type: !10460)
!10476 = !DILocalVariable(name: "data", scope: !10472, file: !859, line: 451, type: !10219)
!10477 = !DILocation(line: 0, scope: !10472)
!10478 = !DILocation(line: 453, column: 17, scope: !10472)
!10479 = !DILocation(line: 453, column: 20, scope: !10472)
!10480 = !DILocation(line: 454, column: 17, scope: !10472)
!10481 = !DILocation(line: 454, column: 22, scope: !10472)
!10482 = !DILocation(line: 455, column: 1, scope: !10472)
!10483 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1051, file: !1051, line: 183, type: !1089, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10484)
!10484 = !{!10485, !10486, !10487, !10488, !10489}
!10485 = !DILocalVariable(name: "dev", arg: 1, scope: !10483, file: !1051, line: 183, type: !1080)
!10486 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10483, file: !1051, line: 184, type: !1091)
!10487 = !DILocalVariable(name: "pclken", scope: !10483, file: !1051, line: 186, type: !1041)
!10488 = !DILocalVariable(name: "reg", scope: !10483, file: !1051, line: 187, type: !1815)
!10489 = !DILocalVariable(name: "reg_val", scope: !10483, file: !1051, line: 188, type: !208)
!10490 = !DILocation(line: 0, scope: !10483)
!10491 = !DILocation(line: 192, column: 6, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10483, file: !1051, line: 192, column: 6)
!10493 = !DILocation(line: 192, column: 6, scope: !10483)
!10494 = !DILocation(line: 197, column: 52, scope: !10483)
!10495 = !DILocation(line: 197, column: 8, scope: !10483)
!10496 = !DILocation(line: 198, column: 12, scope: !10483)
!10497 = !DILocation(line: 199, column: 21, scope: !10483)
!10498 = !DILocation(line: 199, column: 10, scope: !10483)
!10499 = !DILocation(line: 200, column: 7, scope: !10483)
!10500 = !DILocation(line: 202, column: 2, scope: !10483)
!10501 = !DILocation(line: 203, column: 1, scope: !10483)
!10502 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1051, file: !1051, line: 205, type: !1089, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10503)
!10503 = !{!10504, !10505, !10506, !10507, !10508}
!10504 = !DILocalVariable(name: "dev", arg: 1, scope: !10502, file: !1051, line: 205, type: !1080)
!10505 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10502, file: !1051, line: 206, type: !1091)
!10506 = !DILocalVariable(name: "pclken", scope: !10502, file: !1051, line: 208, type: !1041)
!10507 = !DILocalVariable(name: "reg", scope: !10502, file: !1051, line: 209, type: !1815)
!10508 = !DILocalVariable(name: "reg_val", scope: !10502, file: !1051, line: 210, type: !208)
!10509 = !DILocation(line: 0, scope: !10502)
!10510 = !DILocation(line: 214, column: 6, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10502, file: !1051, line: 214, column: 6)
!10512 = !DILocation(line: 214, column: 6, scope: !10502)
!10513 = !DILocation(line: 219, column: 52, scope: !10502)
!10514 = !DILocation(line: 219, column: 8, scope: !10502)
!10515 = !DILocation(line: 220, column: 12, scope: !10502)
!10516 = !DILocation(line: 221, column: 22, scope: !10502)
!10517 = !DILocation(line: 221, column: 13, scope: !10502)
!10518 = !DILocation(line: 221, column: 10, scope: !10502)
!10519 = !DILocation(line: 222, column: 7, scope: !10502)
!10520 = !DILocation(line: 224, column: 2, scope: !10502)
!10521 = !DILocation(line: 225, column: 1, scope: !10502)
!10522 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1051, file: !1051, line: 262, type: !1105, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10523)
!10523 = !{!10524, !10525, !10526, !10527, !10528, !10529, !10530, !10531}
!10524 = !DILocalVariable(name: "clock", arg: 1, scope: !10522, file: !1051, line: 262, type: !1080)
!10525 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10522, file: !1051, line: 263, type: !1091)
!10526 = !DILocalVariable(name: "rate", arg: 3, scope: !10522, file: !1051, line: 264, type: !1047)
!10527 = !DILocalVariable(name: "pclken", scope: !10522, file: !1051, line: 266, type: !1041)
!10528 = !DILocalVariable(name: "ahb_clock", scope: !10522, file: !1051, line: 273, type: !208)
!10529 = !DILocalVariable(name: "apb1_clock", scope: !10522, file: !1051, line: 274, type: !208)
!10530 = !DILocalVariable(name: "apb2_clock", scope: !10522, file: !1051, line: 276, type: !208)
!10531 = !DILocalVariable(name: "ahb3_clock", scope: !10522, file: !1051, line: 286, type: !208)
!10532 = !DILocation(line: 0, scope: !10522)
!10533 = !DILocation(line: 273, column: 23, scope: !10522)
!10534 = !DILocation(line: 299, column: 18, scope: !10522)
!10535 = !DILocation(line: 299, column: 2, scope: !10522)
!10536 = !DILocation(line: 274, column: 24, scope: !10522)
!10537 = !DILocation(line: 319, column: 3, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10522, file: !1051, line: 299, column: 23)
!10539 = !DILocation(line: 276, column: 24, scope: !10522)
!10540 = !DILocation(line: 323, column: 3, scope: !10538)
!10541 = !DILocation(line: 346, column: 33, scope: !10538)
!10542 = !DILocation(line: 346, column: 11, scope: !10538)
!10543 = !DILocation(line: 350, column: 3, scope: !10538)
!10544 = !DILocation(line: 354, column: 33, scope: !10538)
!10545 = !DILocation(line: 354, column: 11, scope: !10538)
!10546 = !DILocation(line: 358, column: 3, scope: !10538)
!10547 = !DILocation(line: 374, column: 3, scope: !10538)
!10548 = !DILocation(line: 379, column: 3, scope: !10538)
!10549 = !DILocation(line: 0, scope: !10538)
!10550 = !DILocation(line: 396, column: 1, scope: !10522)
!10551 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1051, file: !1051, line: 227, type: !1121, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10552)
!10552 = !{!10553, !10554, !10555, !10556, !10557, !10558, !10559, !10560}
!10553 = !DILocalVariable(name: "dev", arg: 1, scope: !10551, file: !1051, line: 227, type: !1080)
!10554 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10551, file: !1051, line: 228, type: !1091)
!10555 = !DILocalVariable(name: "data", arg: 3, scope: !10551, file: !1051, line: 229, type: !124)
!10556 = !DILocalVariable(name: "pclken", scope: !10551, file: !1051, line: 233, type: !1041)
!10557 = !DILocalVariable(name: "reg", scope: !10551, file: !1051, line: 234, type: !1815)
!10558 = !DILocalVariable(name: "reg_val", scope: !10551, file: !1051, line: 235, type: !208)
!10559 = !DILocalVariable(name: "dt_val", scope: !10551, file: !1051, line: 235, type: !208)
!10560 = !DILocalVariable(name: "err", scope: !10551, file: !1051, line: 236, type: !125)
!10561 = !DILocation(line: 0, scope: !10551)
!10562 = !DILocation(line: 241, column: 30, scope: !10551)
!10563 = !DILocation(line: 241, column: 8, scope: !10551)
!10564 = !DILocation(line: 242, column: 10, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10551, file: !1051, line: 242, column: 6)
!10566 = !DILocation(line: 242, column: 6, scope: !10551)
!10567 = !DILocation(line: 247, column: 11, scope: !10551)
!10568 = !DILocation(line: 248, column: 6, scope: !10551)
!10569 = !DILocation(line: 247, column: 44, scope: !10551)
!10570 = !DILocation(line: 250, column: 6, scope: !10551)
!10571 = !DILocation(line: 249, column: 52, scope: !10551)
!10572 = !DILocation(line: 249, column: 8, scope: !10551)
!10573 = !DILocation(line: 251, column: 12, scope: !10551)
!10574 = !DILocation(line: 252, column: 10, scope: !10551)
!10575 = !DILocation(line: 253, column: 7, scope: !10551)
!10576 = !DILocation(line: 255, column: 2, scope: !10551)
!10577 = !DILocation(line: 260, column: 1, scope: !10551)
!10578 = distinct !DISubprogram(name: "enabled_clock", scope: !1051, file: !1051, line: 100, type: !10579, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10581)
!10579 = !DISubroutineType(types: !10580)
!10580 = !{!125, !208}
!10581 = !{!10582, !10583}
!10582 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10578, file: !1051, line: 100, type: !208)
!10583 = !DILocalVariable(name: "r", scope: !10578, file: !1051, line: 102, type: !125)
!10584 = !DILocation(line: 0, scope: !10578)
!10585 = !DILocation(line: 104, column: 2, scope: !10578)
!10586 = !DILocation(line: 180, column: 2, scope: !10578)
!10587 = !DILocation(line: 181, column: 1, scope: !10578)
!10588 = distinct !DISubprogram(name: "get_bus_clock", scope: !1051, file: !1051, line: 79, type: !10589, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10591)
!10589 = !DISubroutineType(types: !10590)
!10590 = !{!208, !208, !208}
!10591 = !{!10592, !10593}
!10592 = !DILocalVariable(name: "clock", arg: 1, scope: !10588, file: !1051, line: 79, type: !208)
!10593 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10588, file: !1051, line: 79, type: !208)
!10594 = !DILocation(line: 0, scope: !10588)
!10595 = !DILocation(line: 81, column: 15, scope: !10588)
!10596 = !DILocation(line: 81, column: 2, scope: !10588)
!10597 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1051, file: !1051, line: 68, type: !10598, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10600)
!10598 = !DISubroutineType(types: !10599)
!10599 = !{!208, !208, !125, !125, !125}
!10600 = !{!10601, !10602, !10603, !10604}
!10601 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10597, file: !1051, line: 68, type: !208)
!10602 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10597, file: !1051, line: 69, type: !125)
!10603 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10597, file: !1051, line: 70, type: !125)
!10604 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10597, file: !1051, line: 71, type: !125)
!10605 = !DILocation(line: 0, scope: !10597)
!10606 = !DILocation(line: 75, column: 22, scope: !10597)
!10607 = !DILocation(line: 76, column: 13, scope: !10597)
!10608 = !DILocation(line: 75, column: 34, scope: !10597)
!10609 = !DILocation(line: 75, column: 2, scope: !10597)
!10610 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1051, file: !1051, line: 641, type: !1078, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10611)
!10611 = !{!10612, !10613, !10614}
!10612 = !DILocalVariable(name: "dev", arg: 1, scope: !10610, file: !1051, line: 641, type: !1080)
!10613 = !DILocalVariable(name: "old_flash_freq", scope: !10610, file: !1051, line: 664, type: !208)
!10614 = !DILocalVariable(name: "new_flash_freq", scope: !10610, file: !1051, line: 665, type: !208)
!10615 = !DILocation(line: 0, scope: !10610)
!10616 = !DILocation(line: 646, column: 2, scope: !10610)
!10617 = !DILocation(line: 667, column: 19, scope: !10610)
!10618 = !DILocation(line: 674, column: 21, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10610, file: !1051, line: 674, column: 6)
!10620 = !DILocation(line: 674, column: 6, scope: !10610)
!10621 = !DILocation(line: 675, column: 3, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10619, file: !1051, line: 674, column: 59)
!10623 = !DILocation(line: 676, column: 2, scope: !10622)
!10624 = !DILocation(line: 680, column: 2, scope: !10610)
!10625 = !DILocation(line: 683, column: 2, scope: !10610)
!10626 = !DILocation(line: 690, column: 3, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10628, file: !1051, line: 689, column: 9)
!10628 = distinct !DILexicalBlock(scope: !10610, file: !1051, line: 685, column: 6)
!10629 = !DILocation(line: 695, column: 2, scope: !10610)
!10630 = !DILocation(line: 696, column: 2, scope: !10610)
!10631 = !DILocation(line: 696, column: 9, scope: !10610)
!10632 = !DILocation(line: 696, column: 34, scope: !10610)
!10633 = distinct !{!10633, !10630, !10634}
!10634 = !DILocation(line: 697, column: 2, scope: !10610)
!10635 = !DILocation(line: 720, column: 21, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10610, file: !1051, line: 720, column: 6)
!10637 = !DILocation(line: 720, column: 6, scope: !10610)
!10638 = !DILocation(line: 721, column: 3, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10636, file: !1051, line: 720, column: 60)
!10640 = !DILocation(line: 722, column: 2, scope: !10639)
!10641 = !DILocation(line: 725, column: 18, scope: !10610)
!10642 = !DILocation(line: 728, column: 2, scope: !10610)
!10643 = !DILocation(line: 730, column: 2, scope: !10610)
!10644 = !DILocation(line: 745, column: 2, scope: !10610)
!10645 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10646, file: !10646, line: 3275, type: !8453, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10646 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10647 = !DILocation(line: 3277, column: 21, scope: !10645)
!10648 = !DILocation(line: 3277, column: 3, scope: !10645)
!10649 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1051, file: !1051, line: 507, type: !3363, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10650 = !DILocation(line: 516, column: 4, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10652, file: !1051, line: 515, column: 10)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !1051, line: 513, column: 7)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1051, line: 510, column: 37)
!10654 = distinct !DILexicalBlock(scope: !10649, file: !1051, line: 510, column: 6)
!10655 = !DILocation(line: 526, column: 3, scope: !10653)
!10656 = !DILocation(line: 527, column: 3, scope: !10653)
!10657 = !DILocation(line: 527, column: 10, scope: !10653)
!10658 = !DILocation(line: 527, column: 31, scope: !10653)
!10659 = distinct !{!10659, !10656, !10660}
!10660 = !DILocation(line: 529, column: 3, scope: !10653)
!10661 = !DILocation(line: 583, column: 3, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10663, file: !1051, line: 577, column: 37)
!10663 = distinct !DILexicalBlock(scope: !10649, file: !1051, line: 577, column: 6)
!10664 = !DILocation(line: 584, column: 3, scope: !10662)
!10665 = !DILocation(line: 584, column: 10, scope: !10662)
!10666 = !DILocation(line: 584, column: 31, scope: !10662)
!10667 = distinct !{!10667, !10664, !10668}
!10668 = !DILocation(line: 585, column: 3, scope: !10662)
!10669 = !DILocation(line: 627, column: 1, scope: !10649)
!10670 = distinct !DISubprogram(name: "set_up_plls", scope: !1051, file: !1051, line: 448, type: !3363, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10671 = !DILocation(line: 460, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10670, file: !1051, line: 460, column: 6)
!10673 = !DILocation(line: 460, column: 31, scope: !10672)
!10674 = !DILocation(line: 460, column: 6, scope: !10670)
!10675 = !DILocation(line: 461, column: 3, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10672, file: !1051, line: 460, column: 67)
!10677 = !DILocation(line: 462, column: 3, scope: !10676)
!10678 = !DILocation(line: 463, column: 2, scope: !10676)
!10679 = !DILocation(line: 464, column: 2, scope: !10670)
!10680 = !DILocation(line: 488, column: 2, scope: !10670)
!10681 = !DILocation(line: 492, column: 2, scope: !10670)
!10682 = !DILocation(line: 496, column: 2, scope: !10670)
!10683 = !DILocation(line: 499, column: 2, scope: !10670)
!10684 = !DILocation(line: 500, column: 2, scope: !10670)
!10685 = !DILocation(line: 500, column: 9, scope: !10670)
!10686 = !DILocation(line: 500, column: 30, scope: !10670)
!10687 = distinct !{!10687, !10684, !10688}
!10688 = !DILocation(line: 502, column: 2, scope: !10670)
!10689 = !DILocation(line: 505, column: 1, scope: !10670)
!10690 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10646, file: !10646, line: 3224, type: !8463, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10691)
!10691 = !{!10692}
!10692 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10690, file: !10646, line: 3224, type: !208)
!10693 = !DILocation(line: 0, scope: !10690)
!10694 = !DILocation(line: 3226, column: 3, scope: !10690)
!10695 = !DILocation(line: 3227, column: 1, scope: !10690)
!10696 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10646, file: !10646, line: 3188, type: !8463, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10697)
!10697 = !{!10698}
!10698 = !DILocalVariable(name: "Source", arg: 1, scope: !10696, file: !10646, line: 3188, type: !208)
!10699 = !DILocation(line: 0, scope: !10696)
!10700 = !DILocation(line: 3190, column: 3, scope: !10696)
!10701 = !DILocation(line: 3191, column: 1, scope: !10696)
!10702 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10646, file: !10646, line: 3204, type: !8453, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10703 = !DILocation(line: 3206, column: 21, scope: !10702)
!10704 = !DILocation(line: 3206, column: 3, scope: !10702)
!10705 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10646, file: !10646, line: 3240, type: !8463, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10706)
!10706 = !{!10707}
!10707 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10705, file: !10646, line: 3240, type: !208)
!10708 = !DILocation(line: 0, scope: !10705)
!10709 = !DILocation(line: 3242, column: 3, scope: !10705)
!10710 = !DILocation(line: 3243, column: 1, scope: !10705)
!10711 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10646, file: !10646, line: 3256, type: !8463, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !10712)
!10712 = !{!10713}
!10713 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10711, file: !10646, line: 3256, type: !208)
!10714 = !DILocation(line: 0, scope: !10711)
!10715 = !DILocation(line: 3258, column: 3, scope: !10711)
!10716 = !DILocation(line: 3259, column: 1, scope: !10711)
!10717 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1051, file: !1051, line: 409, type: !3363, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10718 = !DILocation(line: 412, column: 6, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10717, file: !1051, line: 412, column: 6)
!10720 = !DILocation(line: 412, column: 27, scope: !10719)
!10721 = !DILocation(line: 412, column: 6, scope: !10717)
!10722 = !DILocation(line: 414, column: 3, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10719, file: !1051, line: 412, column: 33)
!10724 = !DILocation(line: 415, column: 3, scope: !10723)
!10725 = !DILocation(line: 415, column: 10, scope: !10723)
!10726 = !DILocation(line: 415, column: 31, scope: !10723)
!10727 = distinct !{!10727, !10724, !10728}
!10728 = !DILocation(line: 417, column: 3, scope: !10723)
!10729 = !DILocation(line: 421, column: 2, scope: !10717)
!10730 = !DILocation(line: 422, column: 2, scope: !10717)
!10731 = !DILocation(line: 422, column: 9, scope: !10717)
!10732 = !DILocation(line: 422, column: 34, scope: !10717)
!10733 = distinct !{!10733, !10730, !10734}
!10734 = !DILocation(line: 423, column: 2, scope: !10717)
!10735 = !DILocation(line: 424, column: 1, scope: !10717)
!10736 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10646, file: !10646, line: 4195, type: !3363, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10737 = !DILocation(line: 4197, column: 3, scope: !10736)
!10738 = !DILocation(line: 4198, column: 1, scope: !10736)
!10739 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10646, file: !10646, line: 4184, type: !3363, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10740 = !DILocation(line: 4186, column: 3, scope: !10739)
!10741 = !DILocation(line: 4187, column: 1, scope: !10739)
!10742 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10646, file: !10646, line: 4205, type: !8453, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10743 = !DILocation(line: 4207, column: 11, scope: !10742)
!10744 = !DILocation(line: 4207, column: 44, scope: !10742)
!10745 = !DILocation(line: 4207, column: 3, scope: !10742)
!10746 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10646, file: !10646, line: 3007, type: !8453, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10747 = !DILocation(line: 3009, column: 11, scope: !10746)
!10748 = !DILocation(line: 3009, column: 44, scope: !10746)
!10749 = !DILocation(line: 3009, column: 3, scope: !10746)
!10750 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10646, file: !10646, line: 2987, type: !3363, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10751 = !DILocation(line: 2989, column: 3, scope: !10750)
!10752 = !DILocation(line: 2990, column: 1, scope: !10750)
!10753 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10646, file: !10646, line: 2939, type: !3363, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10754 = !DILocation(line: 2941, column: 3, scope: !10753)
!10755 = !DILocation(line: 2942, column: 1, scope: !10753)
!10756 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10646, file: !10646, line: 2949, type: !3363, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10757 = !DILocation(line: 2951, column: 3, scope: !10756)
!10758 = !DILocation(line: 2952, column: 1, scope: !10756)
!10759 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10646, file: !10646, line: 2969, type: !8453, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10760 = !DILocation(line: 2971, column: 11, scope: !10759)
!10761 = !DILocation(line: 2971, column: 44, scope: !10759)
!10762 = !DILocation(line: 2971, column: 3, scope: !10759)
!10763 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10646, file: !10646, line: 3143, type: !3363, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10764 = !DILocation(line: 3145, column: 3, scope: !10763)
!10765 = !DILocation(line: 3146, column: 1, scope: !10763)
!10766 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10646, file: !10646, line: 3163, type: !8453, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !639)
!10767 = !DILocation(line: 3165, column: 11, scope: !10766)
!10768 = !DILocation(line: 3165, column: 46, scope: !10766)
!10769 = !DILocation(line: 3165, column: 3, scope: !10766)
!10770 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10771, file: !10771, line: 40, type: !8453, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !639)
!10771 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10772 = !DILocation(line: 45, column: 3, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10774, file: !10771, line: 44, column: 44)
!10774 = distinct !DILexicalBlock(scope: !10775, file: !10771, line: 44, column: 13)
!10775 = distinct !DILexicalBlock(scope: !10770, file: !10771, line: 42, column: 6)
!10776 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10771, file: !10771, line: 56, type: !3363, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !639)
!10777 = !DILocation(line: 58, column: 2, scope: !10776)
!10778 = !DILocation(line: 62, column: 1, scope: !10776)
!10779 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10646, file: !10646, line: 4304, type: !10780, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !10782)
!10780 = !DISubroutineType(types: !10781)
!10781 = !{null, !208, !208, !208, !208}
!10782 = !{!10783, !10784, !10785, !10786}
!10783 = !DILocalVariable(name: "Source", arg: 1, scope: !10779, file: !10646, line: 4304, type: !208)
!10784 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10779, file: !10646, line: 4304, type: !208)
!10785 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10779, file: !10646, line: 4304, type: !208)
!10786 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10779, file: !10646, line: 4304, type: !208)
!10787 = !DILocation(line: 0, scope: !10779)
!10788 = !DILocation(line: 4306, column: 3, scope: !10779)
!10789 = !DILocation(line: 4308, column: 3, scope: !10779)
!10790 = !DILocation(line: 4310, column: 3, scope: !10779)
!10791 = !DILocation(line: 4312, column: 1, scope: !10779)
!10792 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10771, file: !10771, line: 69, type: !3363, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !639)
!10793 = !DILocation(line: 72, column: 2, scope: !10792)
!10794 = !DILocation(line: 73, column: 1, scope: !10792)
!10795 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10796, file: !10796, line: 1185, type: !8463, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !10797)
!10796 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10797 = !{!10798, !10799}
!10798 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10795, file: !10796, line: 1185, type: !208)
!10799 = !DILocalVariable(name: "tmpreg", scope: !10795, file: !10796, line: 1187, type: !423)
!10800 = !DILocation(line: 0, scope: !10795)
!10801 = !DILocation(line: 1187, column: 3, scope: !10795)
!10802 = !DILocation(line: 1187, column: 17, scope: !10795)
!10803 = !DILocation(line: 1188, column: 3, scope: !10795)
!10804 = !DILocation(line: 1190, column: 12, scope: !10795)
!10805 = !DILocation(line: 1190, column: 10, scope: !10795)
!10806 = !DILocation(line: 1191, column: 9, scope: !10795)
!10807 = !DILocation(line: 1192, column: 1, scope: !10795)
!10808 = distinct !DISubprogram(name: "uart_console_init", scope: !1182, file: !1182, line: 588, type: !1159, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10809)
!10809 = !{!10810}
!10810 = !DILocalVariable(name: "arg", arg: 1, scope: !10808, file: !1182, line: 588, type: !1137)
!10811 = !DILocation(line: 0, scope: !10808)
!10812 = !DILocation(line: 593, column: 7, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10808, file: !1182, line: 593, column: 6)
!10814 = !DILocation(line: 593, column: 6, scope: !10808)
!10815 = !DILocation(line: 597, column: 2, scope: !10808)
!10816 = !DILocation(line: 599, column: 2, scope: !10808)
!10817 = !DILocation(line: 600, column: 1, scope: !10808)
!10818 = distinct !DISubprogram(name: "device_is_ready", scope: !4266, file: !4266, line: 47, type: !10819, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10821)
!10819 = !DISubroutineType(types: !10820)
!10820 = !{!153, !1137}
!10821 = !{!10822}
!10822 = !DILocalVariable(name: "dev", arg: 1, scope: !10818, file: !4266, line: 47, type: !1137)
!10823 = !DILocation(line: 0, scope: !10818)
!10824 = !DILocation(line: 55, column: 2, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10818, file: !4266, line: 55, column: 2)
!10826 = !{i64 2155288102}
!10827 = !DILocation(line: 56, column: 9, scope: !10818)
!10828 = !DILocation(line: 56, column: 2, scope: !10818)
!10829 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1182, file: !1182, line: 573, type: !3363, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !639)
!10830 = !DILocation(line: 576, column: 2, scope: !10829)
!10831 = !DILocation(line: 579, column: 2, scope: !10829)
!10832 = !DILocation(line: 581, column: 1, scope: !10829)
!10833 = distinct !DISubprogram(name: "console_out", scope: !1182, file: !1182, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10834)
!10834 = !{!10835}
!10835 = !DILocalVariable(name: "c", arg: 1, scope: !10833, file: !1182, line: 77, type: !125)
!10836 = !DILocation(line: 0, scope: !10833)
!10837 = !DILocation(line: 89, column: 11, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10833, file: !1182, line: 89, column: 6)
!10839 = !DILocation(line: 89, column: 6, scope: !10833)
!10840 = !DILocation(line: 90, column: 3, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10838, file: !1182, line: 89, column: 17)
!10842 = !DILocation(line: 91, column: 2, scope: !10841)
!10843 = !DILocation(line: 92, column: 34, scope: !10833)
!10844 = !DILocation(line: 92, column: 2, scope: !10833)
!10845 = !DILocation(line: 94, column: 2, scope: !10833)
!10846 = distinct !DISubprogram(name: "uart_poll_out", scope: !10847, file: !10847, line: 95, type: !1155, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10848)
!10847 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/crypto")
!10848 = !{!10849, !10850}
!10849 = !DILocalVariable(name: "dev", arg: 1, scope: !10846, file: !10847, line: 95, type: !1137)
!10850 = !DILocalVariable(name: "out_char", arg: 2, scope: !10846, file: !10847, line: 95, type: !151)
!10851 = !DILocation(line: 0, scope: !10846)
!10852 = !DILocation(line: 105, column: 2, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10846, file: !10847, line: 105, column: 2)
!10854 = !{i64 2155371493}
!10855 = !DILocation(line: 106, column: 2, scope: !10846)
!10856 = !DILocation(line: 107, column: 1, scope: !10846)
!10857 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1131, file: !1131, line: 574, type: !1155, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10858)
!10858 = !{!10859, !10860, !10861}
!10859 = !DILocalVariable(name: "dev", arg: 1, scope: !10857, file: !1131, line: 574, type: !1137)
!10860 = !DILocalVariable(name: "out_char", arg: 2, scope: !10857, file: !1131, line: 575, type: !151)
!10861 = !DILocalVariable(name: "api", scope: !10857, file: !1131, line: 577, type: !1128)
!10862 = !DILocation(line: 0, scope: !10857)
!10863 = !DILocation(line: 578, column: 40, scope: !10857)
!10864 = !DILocation(line: 580, column: 7, scope: !10857)
!10865 = !DILocation(line: 580, column: 2, scope: !10857)
!10866 = !DILocation(line: 581, column: 1, scope: !10857)
!10867 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10819, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10868)
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "dev", arg: 1, scope: !10867, file: !137, line: 730, type: !1137)
!10870 = !DILocation(line: 0, scope: !10867)
!10871 = !DILocation(line: 732, column: 9, scope: !10867)
!10872 = !DILocation(line: 732, column: 2, scope: !10867)
!10873 = distinct !DISubprogram(name: "uart_register_input", scope: !1182, file: !1182, line: 560, type: !10874, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1125, retainedNodes: !10919)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{null, !10876, !10876, !10916}
!10876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10877, size: 32)
!10877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !624, line: 2208, size: 128, elements: !10878)
!10878 = !{!10879}
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10877, file: !624, line: 2209, baseType: !10880, size: 128)
!10880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !624, line: 1709, size: 128, elements: !10881)
!10881 = !{!10882, !10895, !10897}
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10880, file: !624, line: 1710, baseType: !10883, size: 64)
!10883 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10884, line: 46, baseType: !10885)
!10884 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10884, line: 41, size: 64, elements: !10886)
!10886 = !{!10887, !10894}
!10887 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10885, file: !10884, line: 42, baseType: !10888, size: 32)
!10888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10889, size: 32)
!10889 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10884, line: 39, baseType: !10890)
!10890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10884, line: 35, size: 32, elements: !10891)
!10891 = !{!10892}
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10890, file: !10884, line: 36, baseType: !10893, size: 32)
!10893 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10884, line: 32, baseType: !208)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10885, file: !10884, line: 43, baseType: !10888, size: 32, offset: 32)
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10880, file: !624, line: 1711, baseType: !10896, offset: 64)
!10896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!10897 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10880, file: !624, line: 1712, baseType: !10898, size: 64, offset: 64)
!10898 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !10899)
!10899 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !10900)
!10900 = !{!10901}
!10901 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10899, file: !567, line: 232, baseType: !10902, size: 64)
!10902 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !10903)
!10903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !10904)
!10904 = !{!10905, !10911}
!10905 = !DIDerivedType(tag: DW_TAG_member, scope: !10903, file: !541, line: 38, baseType: !10906, size: 32)
!10906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10903, file: !541, line: 38, size: 32, elements: !10907)
!10907 = !{!10908, !10910}
!10908 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10906, file: !541, line: 39, baseType: !10909, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10903, size: 32)
!10910 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10906, file: !541, line: 40, baseType: !10909, size: 32)
!10911 = !DIDerivedType(tag: DW_TAG_member, scope: !10903, file: !541, line: 42, baseType: !10912, size: 32, offset: 32)
!10912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10903, file: !541, line: 42, size: 32, elements: !10913)
!10913 = !{!10914, !10915}
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10912, file: !541, line: 43, baseType: !10909, size: 32)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10912, file: !541, line: 44, baseType: !10909, size: 32)
!10916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10917, size: 32)
!10917 = !DISubroutineType(types: !10918)
!10918 = !{!150, !393, !150}
!10919 = !{!10920, !10921, !10922}
!10920 = !DILocalVariable(name: "avail", arg: 1, scope: !10873, file: !1182, line: 560, type: !10876)
!10921 = !DILocalVariable(name: "lines", arg: 2, scope: !10873, file: !1182, line: 560, type: !10876)
!10922 = !DILocalVariable(name: "completion", arg: 3, scope: !10873, file: !1182, line: 561, type: !10916)
!10923 = !DILocation(line: 0, scope: !10873)
!10924 = !DILocation(line: 566, column: 1, scope: !10873)
!10925 = distinct !DISubprogram(name: "tc_shim_init", scope: !1197, file: !1197, line: 305, type: !1221, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10926)
!10926 = !{!10927, !10928}
!10927 = !DILocalVariable(name: "dev", arg: 1, scope: !10925, file: !1197, line: 305, type: !1223)
!10928 = !DILocalVariable(name: "i", scope: !10925, file: !1197, line: 307, type: !125)
!10929 = !DILocation(line: 0, scope: !10925)
!10930 = !DILocation(line: 311, column: 29, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !1197, line: 310, column: 43)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !1197, line: 310, column: 2)
!10933 = distinct !DILexicalBlock(scope: !10925, file: !1197, line: 310, column: 2)
!10934 = !DILocation(line: 314, column: 2, scope: !10925)
!10935 = distinct !DISubprogram(name: "tc_query_caps", scope: !1197, file: !1197, line: 289, type: !1221, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10936)
!10936 = !{!10937}
!10937 = !DILocalVariable(name: "dev", arg: 1, scope: !10935, file: !1197, line: 289, type: !1223)
!10938 = !DILocation(line: 0, scope: !10935)
!10939 = !DILocation(line: 291, column: 2, scope: !10935)
!10940 = distinct !DISubprogram(name: "tc_session_setup", scope: !1197, file: !1197, line: 193, type: !1234, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10941)
!10941 = !{!10942, !10943, !10944, !10945, !10946, !10947, !10949}
!10942 = !DILocalVariable(name: "dev", arg: 1, scope: !10940, file: !1197, line: 193, type: !1223)
!10943 = !DILocalVariable(name: "ctx", arg: 2, scope: !10940, file: !1197, line: 193, type: !1236)
!10944 = !DILocalVariable(name: "algo", arg: 3, scope: !10940, file: !1197, line: 194, type: !39)
!10945 = !DILocalVariable(name: "mode", arg: 4, scope: !10940, file: !1197, line: 194, type: !30)
!10946 = !DILocalVariable(name: "op_type", arg: 5, scope: !10940, file: !1197, line: 195, type: !42)
!10947 = !DILocalVariable(name: "data", scope: !10940, file: !1197, line: 197, type: !10948)
!10948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!10949 = !DILocalVariable(name: "idx", scope: !10940, file: !1197, line: 198, type: !125)
!10950 = !DILocation(line: 0, scope: !10940)
!10951 = !DILocation(line: 203, column: 11, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10940, file: !1197, line: 203, column: 6)
!10953 = !DILocation(line: 203, column: 6, scope: !10940)
!10954 = !DILocation(line: 204, column: 3, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10956, file: !1197, line: 204, column: 3)
!10956 = distinct !DILexicalBlock(scope: !10957, file: !1197, line: 204, column: 3)
!10957 = distinct !DILexicalBlock(scope: !10958, file: !1197, line: 204, column: 3)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !1197, line: 204, column: 3)
!10959 = distinct !DILexicalBlock(scope: !10952, file: !1197, line: 203, column: 38)
!10960 = !DILocation(line: 205, column: 3, scope: !10959)
!10961 = !DILocation(line: 211, column: 13, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10940, file: !1197, line: 211, column: 6)
!10963 = !DILocation(line: 211, column: 19, scope: !10962)
!10964 = !DILocation(line: 211, column: 6, scope: !10940)
!10965 = !DILocation(line: 212, column: 3, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !1197, line: 212, column: 3)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !1197, line: 212, column: 3)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !1197, line: 212, column: 3)
!10969 = distinct !DILexicalBlock(scope: !10970, file: !1197, line: 212, column: 3)
!10970 = distinct !DILexicalBlock(scope: !10962, file: !1197, line: 211, column: 36)
!10971 = !DILocation(line: 213, column: 3, scope: !10970)
!10972 = !DILocation(line: 216, column: 11, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10940, file: !1197, line: 216, column: 6)
!10974 = !DILocation(line: 216, column: 18, scope: !10973)
!10975 = !DILocation(line: 216, column: 6, scope: !10940)
!10976 = !DILocation(line: 218, column: 3, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1197, line: 218, column: 3)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !1197, line: 218, column: 3)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !1197, line: 218, column: 3)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !1197, line: 218, column: 3)
!10981 = distinct !DILexicalBlock(scope: !10973, file: !1197, line: 216, column: 38)
!10982 = !DILocation(line: 219, column: 3, scope: !10981)
!10983 = !DILocation(line: 222, column: 14, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10940, file: !1197, line: 222, column: 6)
!10985 = !DILocation(line: 222, column: 6, scope: !10940)
!10986 = !DILocation(line: 223, column: 3, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10984, file: !1197, line: 222, column: 43)
!10988 = !DILocation(line: 225, column: 13, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10987, file: !1197, line: 223, column: 17)
!10990 = !DILocation(line: 225, column: 29, scope: !10989)
!10991 = !DILocation(line: 226, column: 4, scope: !10989)
!10992 = !DILocation(line: 228, column: 34, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !1197, line: 228, column: 8)
!10994 = !DILocation(line: 228, column: 42, scope: !10993)
!10995 = !DILocation(line: 228, column: 8, scope: !10989)
!10996 = !DILocation(line: 229, column: 5, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !1197, line: 229, column: 5)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !1197, line: 229, column: 5)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !1197, line: 229, column: 5)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !1197, line: 229, column: 5)
!11001 = distinct !DILexicalBlock(scope: !10993, file: !1197, line: 228, column: 50)
!11002 = !DILocation(line: 231, column: 5, scope: !11001)
!11003 = !DILocation(line: 233, column: 13, scope: !10989)
!11004 = !DILocation(line: 233, column: 29, scope: !10989)
!11005 = !DILocation(line: 234, column: 4, scope: !10989)
!11006 = !DILocation(line: 236, column: 13, scope: !10989)
!11007 = !DILocation(line: 236, column: 29, scope: !10989)
!11008 = !DILocation(line: 237, column: 4, scope: !10989)
!11009 = !DILocation(line: 239, column: 4, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11011, file: !1197, line: 239, column: 4)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !1197, line: 239, column: 4)
!11012 = distinct !DILexicalBlock(scope: !11013, file: !1197, line: 239, column: 4)
!11013 = distinct !DILexicalBlock(scope: !10989, file: !1197, line: 239, column: 4)
!11014 = !DILocation(line: 240, column: 4, scope: !10989)
!11015 = !DILocation(line: 243, column: 3, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10984, file: !1197, line: 242, column: 9)
!11017 = !DILocation(line: 245, column: 13, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11016, file: !1197, line: 243, column: 17)
!11019 = !DILocation(line: 245, column: 29, scope: !11018)
!11020 = !DILocation(line: 246, column: 4, scope: !11018)
!11021 = !DILocation(line: 249, column: 34, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !1197, line: 249, column: 8)
!11023 = !DILocation(line: 249, column: 42, scope: !11022)
!11024 = !DILocation(line: 249, column: 8, scope: !11018)
!11025 = !DILocation(line: 250, column: 5, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !1197, line: 250, column: 5)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !1197, line: 250, column: 5)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !1197, line: 250, column: 5)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !1197, line: 250, column: 5)
!11030 = distinct !DILexicalBlock(scope: !11022, file: !1197, line: 249, column: 50)
!11031 = !DILocation(line: 252, column: 5, scope: !11030)
!11032 = !DILocation(line: 254, column: 13, scope: !11018)
!11033 = !DILocation(line: 254, column: 29, scope: !11018)
!11034 = !DILocation(line: 255, column: 4, scope: !11018)
!11035 = !DILocation(line: 257, column: 13, scope: !11018)
!11036 = !DILocation(line: 257, column: 29, scope: !11018)
!11037 = !DILocation(line: 258, column: 4, scope: !11018)
!11038 = !DILocation(line: 260, column: 4, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !1197, line: 260, column: 4)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !1197, line: 260, column: 4)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !1197, line: 260, column: 4)
!11042 = distinct !DILexicalBlock(scope: !11018, file: !1197, line: 260, column: 4)
!11043 = !DILocation(line: 261, column: 4, scope: !11018)
!11044 = !DILocation(line: 266, column: 11, scope: !10940)
!11045 = !DILocation(line: 266, column: 23, scope: !10940)
!11046 = !DILocation(line: 268, column: 8, scope: !10940)
!11047 = !DILocation(line: 269, column: 10, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !10940, file: !1197, line: 269, column: 6)
!11049 = !DILocation(line: 269, column: 6, scope: !10940)
!11050 = !DILocation(line: 270, column: 3, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !1197, line: 270, column: 3)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !1197, line: 270, column: 3)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !1197, line: 270, column: 3)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !1197, line: 270, column: 3)
!11055 = distinct !DILexicalBlock(scope: !11048, file: !1197, line: 269, column: 33)
!11056 = !DILocation(line: 271, column: 3, scope: !11055)
!11057 = !DILocation(line: 274, column: 10, scope: !10940)
!11058 = !DILocation(line: 276, column: 39, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !10940, file: !1197, line: 276, column: 6)
!11060 = !DILocation(line: 276, column: 61, scope: !11059)
!11061 = !DILocation(line: 276, column: 6, scope: !11059)
!11062 = !DILocation(line: 277, column: 5, scope: !11059)
!11063 = !DILocation(line: 276, column: 6, scope: !10940)
!11064 = !DILocation(line: 278, column: 3, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1197, line: 278, column: 3)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !1197, line: 278, column: 3)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !1197, line: 278, column: 3)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !1197, line: 278, column: 3)
!11069 = distinct !DILexicalBlock(scope: !11059, file: !1197, line: 277, column: 24)
!11070 = !DILocation(line: 279, column: 24, scope: !11069)
!11071 = !DILocation(line: 279, column: 31, scope: !11069)
!11072 = !DILocation(line: 281, column: 3, scope: !11069)
!11073 = !DILocation(line: 284, column: 7, scope: !10940)
!11074 = !DILocation(line: 284, column: 23, scope: !10940)
!11075 = !DILocation(line: 286, column: 2, scope: !10940)
!11076 = !DILocation(line: 287, column: 1, scope: !10940)
!11077 = distinct !DISubprogram(name: "tc_session_free", scope: !1197, file: !1197, line: 294, type: !1310, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11078)
!11078 = !{!11079, !11080, !11081}
!11079 = !DILocalVariable(name: "dev", arg: 1, scope: !11077, file: !1197, line: 294, type: !1223)
!11080 = !DILocalVariable(name: "sessn", arg: 2, scope: !11077, file: !1197, line: 294, type: !1236)
!11081 = !DILocalVariable(name: "data", scope: !11077, file: !1197, line: 296, type: !10948)
!11082 = !DILocation(line: 0, scope: !11077)
!11083 = !DILocation(line: 296, column: 43, scope: !11077)
!11084 = !DILocation(line: 299, column: 8, scope: !11077)
!11085 = !DILocation(line: 300, column: 8, scope: !11077)
!11086 = !DILocation(line: 300, column: 15, scope: !11077)
!11087 = !DILocation(line: 302, column: 2, scope: !11077)
!11088 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1197, file: !1197, line: 28, type: !1263, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11089)
!11089 = !{!11090, !11091, !11092, !11093}
!11090 = !DILocalVariable(name: "ctx", arg: 1, scope: !11088, file: !1197, line: 28, type: !1236)
!11091 = !DILocalVariable(name: "op", arg: 2, scope: !11088, file: !1197, line: 28, type: !1251)
!11092 = !DILocalVariable(name: "iv", arg: 3, scope: !11088, file: !1197, line: 29, type: !184)
!11093 = !DILocalVariable(name: "data", scope: !11088, file: !1197, line: 31, type: !10948)
!11094 = !DILocation(line: 0, scope: !11088)
!11095 = !DILocation(line: 31, column: 41, scope: !11088)
!11096 = !DILocation(line: 33, column: 30, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11088, file: !1197, line: 33, column: 6)
!11098 = !DILocation(line: 34, column: 9, scope: !11097)
!11099 = !DILocation(line: 35, column: 9, scope: !11097)
!11100 = !DILocation(line: 35, column: 21, scope: !11097)
!11101 = !DILocation(line: 37, column: 12, scope: !11097)
!11102 = !DILocation(line: 33, column: 6, scope: !11097)
!11103 = !DILocation(line: 37, column: 25, scope: !11097)
!11104 = !DILocation(line: 33, column: 6, scope: !11088)
!11105 = !DILocation(line: 38, column: 3, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !1197, line: 38, column: 3)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !1197, line: 38, column: 3)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !1197, line: 38, column: 3)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !1197, line: 38, column: 3)
!11110 = distinct !DILexicalBlock(scope: !11097, file: !1197, line: 37, column: 44)
!11111 = !DILocation(line: 39, column: 3, scope: !11110)
!11112 = !DILocation(line: 43, column: 20, scope: !11088)
!11113 = !DILocation(line: 43, column: 6, scope: !11088)
!11114 = !DILocation(line: 43, column: 14, scope: !11088)
!11115 = !DILocation(line: 45, column: 2, scope: !11088)
!11116 = !DILocation(line: 46, column: 1, scope: !11088)
!11117 = distinct !DISubprogram(name: "do_ctr_op", scope: !1197, file: !1197, line: 76, type: !1263, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11118)
!11118 = !{!11119, !11120, !11121, !11122, !11123, !11124}
!11119 = !DILocalVariable(name: "ctx", arg: 1, scope: !11117, file: !1197, line: 76, type: !1236)
!11120 = !DILocalVariable(name: "op", arg: 2, scope: !11117, file: !1197, line: 76, type: !1251)
!11121 = !DILocalVariable(name: "iv", arg: 3, scope: !11117, file: !1197, line: 77, type: !184)
!11122 = !DILocalVariable(name: "data", scope: !11117, file: !1197, line: 79, type: !10948)
!11123 = !DILocalVariable(name: "ctr", scope: !11117, file: !1197, line: 80, type: !311)
!11124 = !DILocalVariable(name: "ivlen", scope: !11117, file: !1197, line: 81, type: !125)
!11125 = !DILocation(line: 0, scope: !11117)
!11126 = !DILocation(line: 79, column: 41, scope: !11117)
!11127 = !DILocation(line: 80, column: 2, scope: !11117)
!11128 = !DILocation(line: 80, column: 10, scope: !11117)
!11129 = !DILocation(line: 81, column: 19, scope: !11117)
!11130 = !DILocation(line: 81, column: 14, scope: !11117)
!11131 = !DILocation(line: 81, column: 55, scope: !11117)
!11132 = !DILocation(line: 81, column: 63, scope: !11117)
!11133 = !DILocation(line: 81, column: 26, scope: !11117)
!11134 = !DILocation(line: 86, column: 2, scope: !11117)
!11135 = !DILocation(line: 88, column: 22, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11117, file: !1197, line: 88, column: 6)
!11137 = !DILocation(line: 88, column: 35, scope: !11136)
!11138 = !DILocation(line: 88, column: 52, scope: !11136)
!11139 = !DILocation(line: 89, column: 8, scope: !11136)
!11140 = !DILocation(line: 90, column: 11, scope: !11136)
!11141 = !DILocation(line: 88, column: 6, scope: !11136)
!11142 = !DILocation(line: 90, column: 24, scope: !11136)
!11143 = !DILocation(line: 88, column: 6, scope: !11117)
!11144 = !DILocation(line: 91, column: 3, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !1197, line: 91, column: 3)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !1197, line: 91, column: 3)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !1197, line: 91, column: 3)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !1197, line: 91, column: 3)
!11149 = distinct !DILexicalBlock(scope: !11136, file: !1197, line: 90, column: 43)
!11150 = !DILocation(line: 92, column: 3, scope: !11149)
!11151 = !DILocation(line: 96, column: 20, scope: !11117)
!11152 = !DILocation(line: 96, column: 6, scope: !11117)
!11153 = !DILocation(line: 96, column: 14, scope: !11117)
!11154 = !DILocation(line: 98, column: 2, scope: !11117)
!11155 = !DILocation(line: 99, column: 1, scope: !11117)
!11156 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1197, file: !1197, line: 101, type: !1270, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11157)
!11157 = !{!11158, !11159, !11160, !11161, !11169, !11170, !11172}
!11158 = !DILocalVariable(name: "ctx", arg: 1, scope: !11156, file: !1197, line: 101, type: !1236)
!11159 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11156, file: !1197, line: 102, type: !1272)
!11160 = !DILocalVariable(name: "nonce", arg: 3, scope: !11156, file: !1197, line: 102, type: !184)
!11161 = !DILocalVariable(name: "ccm", scope: !11156, file: !1197, line: 104, type: !11162)
!11162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2830, line: 91, size: 96, elements: !11163)
!11163 = !{!11164, !11167, !11168}
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11162, file: !2830, line: 92, baseType: !11165, size: 32)
!11165 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !11166)
!11166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11162, file: !2830, line: 93, baseType: !184, size: 32, offset: 32)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11162, file: !2830, line: 94, baseType: !32, size: 32, offset: 64)
!11169 = !DILocalVariable(name: "data", scope: !11156, file: !1197, line: 105, type: !10948)
!11170 = !DILocalVariable(name: "ccm_param", scope: !11156, file: !1197, line: 106, type: !11171)
!11171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!11172 = !DILocalVariable(name: "op", scope: !11156, file: !1197, line: 107, type: !1251)
!11173 = !DILocation(line: 0, scope: !11156)
!11174 = !DILocation(line: 104, column: 2, scope: !11156)
!11175 = !DILocation(line: 104, column: 28, scope: !11156)
!11176 = !DILocation(line: 105, column: 41, scope: !11156)
!11177 = !DILocation(line: 106, column: 39, scope: !11156)
!11178 = !DILocation(line: 106, column: 51, scope: !11156)
!11179 = !DILocation(line: 107, column: 35, scope: !11156)
!11180 = !DILocation(line: 109, column: 33, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11156, file: !1197, line: 109, column: 6)
!11182 = !DILocation(line: 110, column: 15, scope: !11181)
!11183 = !DILocation(line: 110, column: 4, scope: !11181)
!11184 = !DILocation(line: 111, column: 15, scope: !11181)
!11185 = !DILocation(line: 111, column: 4, scope: !11181)
!11186 = !DILocation(line: 109, column: 6, scope: !11181)
!11187 = !DILocation(line: 111, column: 24, scope: !11181)
!11188 = !DILocation(line: 109, column: 6, scope: !11156)
!11189 = !DILocation(line: 112, column: 3, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !1197, line: 112, column: 3)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !1197, line: 112, column: 3)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !1197, line: 112, column: 3)
!11193 = distinct !DILexicalBlock(scope: !11194, file: !1197, line: 112, column: 3)
!11194 = distinct !DILexicalBlock(scope: !11181, file: !1197, line: 111, column: 43)
!11195 = !DILocation(line: 113, column: 3, scope: !11194)
!11196 = !DILocation(line: 116, column: 39, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11156, file: !1197, line: 116, column: 6)
!11198 = !DILocation(line: 116, column: 52, scope: !11197)
!11199 = !DILocation(line: 117, column: 16, scope: !11197)
!11200 = !DILocation(line: 117, column: 29, scope: !11197)
!11201 = !DILocation(line: 117, column: 41, scope: !11197)
!11202 = !DILocation(line: 118, column: 11, scope: !11197)
!11203 = !DILocation(line: 116, column: 6, scope: !11197)
!11204 = !DILocation(line: 118, column: 25, scope: !11197)
!11205 = !DILocation(line: 116, column: 6, scope: !11156)
!11206 = !DILocation(line: 119, column: 3, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !1197, line: 119, column: 3)
!11208 = distinct !DILexicalBlock(scope: !11209, file: !1197, line: 119, column: 3)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !1197, line: 119, column: 3)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !1197, line: 119, column: 3)
!11211 = distinct !DILexicalBlock(scope: !11197, file: !1197, line: 118, column: 44)
!11212 = !DILocation(line: 120, column: 3, scope: !11211)
!11213 = !DILocation(line: 128, column: 15, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11156, file: !1197, line: 128, column: 6)
!11215 = !DILocation(line: 128, column: 6, scope: !11214)
!11216 = !DILocation(line: 128, column: 6, scope: !11156)
!11217 = !DILocation(line: 129, column: 28, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11214, file: !1197, line: 128, column: 20)
!11219 = !DILocation(line: 129, column: 42, scope: !11218)
!11220 = !DILocation(line: 129, column: 36, scope: !11218)
!11221 = !DILocation(line: 129, column: 54, scope: !11218)
!11222 = !DILocation(line: 129, column: 3, scope: !11218)
!11223 = !DILocation(line: 130, column: 2, scope: !11218)
!11224 = !DILocation(line: 136, column: 20, scope: !11156)
!11225 = !DILocation(line: 136, column: 33, scope: !11156)
!11226 = !DILocation(line: 136, column: 27, scope: !11156)
!11227 = !DILocation(line: 136, column: 6, scope: !11156)
!11228 = !DILocation(line: 136, column: 14, scope: !11156)
!11229 = !DILocation(line: 138, column: 2, scope: !11156)
!11230 = !DILocation(line: 139, column: 1, scope: !11156)
!11231 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1197, file: !1197, line: 48, type: !1263, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11232)
!11232 = !{!11233, !11234, !11235, !11236}
!11233 = !DILocalVariable(name: "ctx", arg: 1, scope: !11231, file: !1197, line: 48, type: !1236)
!11234 = !DILocalVariable(name: "op", arg: 2, scope: !11231, file: !1197, line: 48, type: !1251)
!11235 = !DILocalVariable(name: "iv", arg: 3, scope: !11231, file: !1197, line: 49, type: !184)
!11236 = !DILocalVariable(name: "data", scope: !11231, file: !1197, line: 51, type: !10948)
!11237 = !DILocation(line: 0, scope: !11231)
!11238 = !DILocation(line: 56, column: 16, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11231, file: !1197, line: 56, column: 6)
!11240 = !DILocation(line: 56, column: 9, scope: !11239)
!11241 = !DILocation(line: 56, column: 6, scope: !11231)
!11242 = !DILocation(line: 57, column: 3, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !1197, line: 57, column: 3)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !1197, line: 57, column: 3)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !1197, line: 57, column: 3)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !1197, line: 57, column: 3)
!11247 = distinct !DILexicalBlock(scope: !11239, file: !1197, line: 56, column: 24)
!11248 = !DILocation(line: 58, column: 3, scope: !11247)
!11249 = !DILocation(line: 51, column: 41, scope: !11231)
!11250 = !DILocation(line: 61, column: 30, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11231, file: !1197, line: 61, column: 6)
!11252 = !DILocation(line: 62, column: 8, scope: !11251)
!11253 = !DILocation(line: 63, column: 15, scope: !11251)
!11254 = !DILocation(line: 64, column: 8, scope: !11251)
!11255 = !DILocation(line: 64, column: 15, scope: !11251)
!11256 = !DILocation(line: 65, column: 23, scope: !11251)
!11257 = !DILocation(line: 61, column: 6, scope: !11251)
!11258 = !DILocation(line: 65, column: 36, scope: !11251)
!11259 = !DILocation(line: 61, column: 6, scope: !11231)
!11260 = !DILocation(line: 66, column: 3, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11262, file: !1197, line: 66, column: 3)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !1197, line: 66, column: 3)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !1197, line: 66, column: 3)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !1197, line: 66, column: 3)
!11265 = distinct !DILexicalBlock(scope: !11251, file: !1197, line: 65, column: 55)
!11266 = !DILocation(line: 67, column: 3, scope: !11265)
!11267 = !DILocation(line: 71, column: 20, scope: !11231)
!11268 = !DILocation(line: 71, column: 6, scope: !11231)
!11269 = !DILocation(line: 71, column: 14, scope: !11231)
!11270 = !DILocation(line: 73, column: 2, scope: !11231)
!11271 = !DILocation(line: 74, column: 1, scope: !11231)
!11272 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1197, file: !1197, line: 141, type: !1270, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11273)
!11273 = !{!11274, !11275, !11276, !11277, !11278, !11279, !11280}
!11274 = !DILocalVariable(name: "ctx", arg: 1, scope: !11272, file: !1197, line: 141, type: !1236)
!11275 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11272, file: !1197, line: 142, type: !1272)
!11276 = !DILocalVariable(name: "nonce", arg: 3, scope: !11272, file: !1197, line: 142, type: !184)
!11277 = !DILocalVariable(name: "ccm", scope: !11272, file: !1197, line: 144, type: !11162)
!11278 = !DILocalVariable(name: "data", scope: !11272, file: !1197, line: 145, type: !10948)
!11279 = !DILocalVariable(name: "ccm_param", scope: !11272, file: !1197, line: 146, type: !11171)
!11280 = !DILocalVariable(name: "op", scope: !11272, file: !1197, line: 147, type: !1251)
!11281 = !DILocation(line: 0, scope: !11272)
!11282 = !DILocation(line: 144, column: 2, scope: !11272)
!11283 = !DILocation(line: 144, column: 28, scope: !11272)
!11284 = !DILocation(line: 145, column: 41, scope: !11272)
!11285 = !DILocation(line: 146, column: 39, scope: !11272)
!11286 = !DILocation(line: 146, column: 51, scope: !11272)
!11287 = !DILocation(line: 147, column: 35, scope: !11272)
!11288 = !DILocation(line: 149, column: 33, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11272, file: !1197, line: 149, column: 6)
!11290 = !DILocation(line: 150, column: 17, scope: !11289)
!11291 = !DILocation(line: 150, column: 6, scope: !11289)
!11292 = !DILocation(line: 151, column: 17, scope: !11289)
!11293 = !DILocation(line: 151, column: 6, scope: !11289)
!11294 = !DILocation(line: 149, column: 6, scope: !11289)
!11295 = !DILocation(line: 151, column: 26, scope: !11289)
!11296 = !DILocation(line: 149, column: 6, scope: !11272)
!11297 = !DILocation(line: 152, column: 3, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !1197, line: 152, column: 3)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !1197, line: 152, column: 3)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !1197, line: 152, column: 3)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !1197, line: 152, column: 3)
!11302 = distinct !DILexicalBlock(scope: !11289, file: !1197, line: 151, column: 45)
!11303 = !DILocation(line: 153, column: 3, scope: !11302)
!11304 = !DILocation(line: 160, column: 15, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11272, file: !1197, line: 160, column: 6)
!11306 = !DILocation(line: 160, column: 26, scope: !11305)
!11307 = !DILocation(line: 160, column: 39, scope: !11305)
!11308 = !DILocation(line: 160, column: 33, scope: !11305)
!11309 = !DILocation(line: 160, column: 19, scope: !11305)
!11310 = !DILocation(line: 160, column: 6, scope: !11272)
!11311 = !DILocation(line: 161, column: 3, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !1197, line: 161, column: 3)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !1197, line: 161, column: 3)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !1197, line: 161, column: 3)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !1197, line: 161, column: 3)
!11316 = distinct !DILexicalBlock(scope: !11305, file: !1197, line: 160, column: 47)
!11317 = !DILocation(line: 162, column: 3, scope: !11316)
!11318 = !DILocation(line: 165, column: 41, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11272, file: !1197, line: 165, column: 6)
!11320 = !DILocation(line: 165, column: 54, scope: !11319)
!11321 = !DILocation(line: 166, column: 18, scope: !11319)
!11322 = !DILocation(line: 166, column: 31, scope: !11319)
!11323 = !DILocation(line: 168, column: 33, scope: !11319)
!11324 = !DILocation(line: 168, column: 22, scope: !11319)
!11325 = !DILocation(line: 168, column: 20, scope: !11319)
!11326 = !DILocation(line: 165, column: 6, scope: !11319)
!11327 = !DILocation(line: 169, column: 15, scope: !11319)
!11328 = !DILocation(line: 165, column: 6, scope: !11272)
!11329 = !DILocation(line: 170, column: 3, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !1197, line: 170, column: 3)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !1197, line: 170, column: 3)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !1197, line: 170, column: 3)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !1197, line: 170, column: 3)
!11334 = distinct !DILexicalBlock(scope: !11319, file: !1197, line: 169, column: 34)
!11335 = !DILocation(line: 171, column: 3, scope: !11334)
!11336 = !DILocation(line: 174, column: 20, scope: !11272)
!11337 = !DILocation(line: 174, column: 40, scope: !11272)
!11338 = !DILocation(line: 174, column: 29, scope: !11272)
!11339 = !DILocation(line: 174, column: 27, scope: !11272)
!11340 = !DILocation(line: 174, column: 6, scope: !11272)
!11341 = !DILocation(line: 174, column: 14, scope: !11272)
!11342 = !DILocation(line: 176, column: 2, scope: !11272)
!11343 = !DILocation(line: 177, column: 1, scope: !11272)
!11344 = distinct !DISubprogram(name: "get_unused_session", scope: !1197, file: !1197, line: 179, type: !9680, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !11345)
!11345 = !{!11346}
!11346 = !DILocalVariable(name: "i", scope: !11344, file: !1197, line: 181, type: !125)
!11347 = !DILocation(line: 0, scope: !11344)
!11348 = !DILocation(line: 183, column: 2, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11344, file: !1197, line: 183, column: 2)
!11350 = !DILocation(line: 184, column: 26, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !1197, line: 184, column: 7)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !1197, line: 183, column: 43)
!11353 = distinct !DILexicalBlock(scope: !11349, file: !1197, line: 183, column: 2)
!11354 = !DILocation(line: 184, column: 33, scope: !11351)
!11355 = !DILocation(line: 184, column: 7, scope: !11352)
!11356 = !DILocation(line: 185, column: 30, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11351, file: !1197, line: 184, column: 39)
!11358 = !DILocation(line: 186, column: 4, scope: !11357)
!11359 = distinct !{!11359, !11348, !11360}
!11360 = !DILocation(line: 188, column: 2, scope: !11349)
!11361 = !DILocation(line: 190, column: 2, scope: !11344)
!11362 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1544, file: !1544, line: 523, type: !1400, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11363)
!11363 = !{!11364, !11365, !11366, !11367, !11368}
!11364 = !DILocalVariable(name: "dev", arg: 1, scope: !11362, file: !1544, line: 523, type: !1402)
!11365 = !DILocalVariable(name: "pin", arg: 2, scope: !11362, file: !1544, line: 524, type: !1417)
!11366 = !DILocalVariable(name: "flags", arg: 3, scope: !11362, file: !1544, line: 524, type: !1418)
!11367 = !DILocalVariable(name: "err", scope: !11362, file: !1544, line: 526, type: !125)
!11368 = !DILocalVariable(name: "pincfg", scope: !11362, file: !1544, line: 527, type: !125)
!11369 = !DILocation(line: 0, scope: !11362)
!11370 = !DILocation(line: 527, column: 2, scope: !11362)
!11371 = !DILocation(line: 532, column: 8, scope: !11362)
!11372 = !DILocation(line: 533, column: 10, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11362, file: !1544, line: 533, column: 6)
!11374 = !DILocation(line: 533, column: 6, scope: !11362)
!11375 = !DILocation(line: 543, column: 13, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11362, file: !1544, line: 543, column: 6)
!11377 = !DILocation(line: 543, column: 28, scope: !11376)
!11378 = !DILocation(line: 543, column: 6, scope: !11362)
!11379 = !DILocation(line: 544, column: 14, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11381, file: !1544, line: 544, column: 7)
!11381 = distinct !DILexicalBlock(scope: !11376, file: !1544, line: 543, column: 34)
!11382 = !DILocation(line: 544, column: 39, scope: !11380)
!11383 = !DILocation(line: 544, column: 7, scope: !11381)
!11384 = !DILocation(line: 545, column: 38, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11380, file: !1544, line: 544, column: 45)
!11386 = !DILocation(line: 545, column: 4, scope: !11385)
!11387 = !DILocation(line: 546, column: 3, scope: !11385)
!11388 = !DILocation(line: 546, column: 21, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11380, file: !1544, line: 546, column: 14)
!11390 = !DILocation(line: 546, column: 45, scope: !11389)
!11391 = !DILocation(line: 546, column: 14, scope: !11380)
!11392 = !DILocation(line: 547, column: 40, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11389, file: !1544, line: 546, column: 51)
!11394 = !DILocation(line: 547, column: 4, scope: !11393)
!11395 = !DILocation(line: 548, column: 3, scope: !11393)
!11396 = !DILocation(line: 551, column: 32, scope: !11362)
!11397 = !DILocation(line: 551, column: 37, scope: !11362)
!11398 = !DILocation(line: 551, column: 2, scope: !11362)
!11399 = !DILocation(line: 554, column: 6, scope: !11362)
!11400 = !DILocation(line: 562, column: 1, scope: !11362)
!11401 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1544, file: !1544, line: 410, type: !11402, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11404)
!11402 = !DISubroutineType(types: !11403)
!11403 = !{!125, !1402, !1047}
!11404 = !{!11405, !11406, !11407, !11409}
!11405 = !DILocalVariable(name: "dev", arg: 1, scope: !11401, file: !1544, line: 410, type: !1402)
!11406 = !DILocalVariable(name: "value", arg: 2, scope: !11401, file: !1544, line: 410, type: !1047)
!11407 = !DILocalVariable(name: "cfg", scope: !11401, file: !1544, line: 412, type: !11408)
!11408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!11409 = !DILocalVariable(name: "gpio", scope: !11401, file: !1544, line: 413, type: !1475)
!11410 = !DILocation(line: 0, scope: !11401)
!11411 = !DILocation(line: 412, column: 45, scope: !11401)
!11412 = !DILocation(line: 413, column: 44, scope: !11401)
!11413 = !DILocation(line: 415, column: 11, scope: !11401)
!11414 = !DILocation(line: 415, column: 9, scope: !11401)
!11415 = !DILocation(line: 417, column: 2, scope: !11401)
!11416 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1544, file: !1544, line: 420, type: !1427, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11417)
!11417 = !{!11418, !11419, !11420, !11421, !11422, !11423}
!11418 = !DILocalVariable(name: "dev", arg: 1, scope: !11416, file: !1544, line: 420, type: !1402)
!11419 = !DILocalVariable(name: "mask", arg: 2, scope: !11416, file: !1544, line: 421, type: !1429)
!11420 = !DILocalVariable(name: "value", arg: 3, scope: !11416, file: !1544, line: 422, type: !1424)
!11421 = !DILocalVariable(name: "cfg", scope: !11416, file: !1544, line: 424, type: !11408)
!11422 = !DILocalVariable(name: "gpio", scope: !11416, file: !1544, line: 425, type: !1475)
!11423 = !DILocalVariable(name: "port_value", scope: !11416, file: !1544, line: 426, type: !208)
!11424 = !DILocation(line: 0, scope: !11416)
!11425 = !DILocation(line: 424, column: 45, scope: !11416)
!11426 = !DILocation(line: 425, column: 44, scope: !11416)
!11427 = !DILocation(line: 430, column: 15, scope: !11416)
!11428 = !DILocation(line: 431, column: 46, scope: !11416)
!11429 = !DILocation(line: 431, column: 44, scope: !11416)
!11430 = !DILocation(line: 431, column: 61, scope: !11416)
!11431 = !DILocation(line: 431, column: 53, scope: !11416)
!11432 = !DILocation(line: 431, column: 2, scope: !11416)
!11433 = !DILocation(line: 435, column: 2, scope: !11416)
!11434 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1544, file: !1544, line: 438, type: !1432, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11435)
!11435 = !{!11436, !11437, !11438, !11439}
!11436 = !DILocalVariable(name: "dev", arg: 1, scope: !11434, file: !1544, line: 438, type: !1402)
!11437 = !DILocalVariable(name: "pins", arg: 2, scope: !11434, file: !1544, line: 439, type: !1429)
!11438 = !DILocalVariable(name: "cfg", scope: !11434, file: !1544, line: 441, type: !11408)
!11439 = !DILocalVariable(name: "gpio", scope: !11434, file: !1544, line: 442, type: !1475)
!11440 = !DILocation(line: 0, scope: !11434)
!11441 = !DILocation(line: 441, column: 45, scope: !11434)
!11442 = !DILocation(line: 442, column: 44, scope: !11434)
!11443 = !DILocation(line: 448, column: 2, scope: !11434)
!11444 = !DILocation(line: 450, column: 2, scope: !11434)
!11445 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1544, file: !1544, line: 453, type: !1432, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11446)
!11446 = !{!11447, !11448, !11449, !11450}
!11447 = !DILocalVariable(name: "dev", arg: 1, scope: !11445, file: !1544, line: 453, type: !1402)
!11448 = !DILocalVariable(name: "pins", arg: 2, scope: !11445, file: !1544, line: 454, type: !1429)
!11449 = !DILocalVariable(name: "cfg", scope: !11445, file: !1544, line: 456, type: !11408)
!11450 = !DILocalVariable(name: "gpio", scope: !11445, file: !1544, line: 457, type: !1475)
!11451 = !DILocation(line: 0, scope: !11445)
!11452 = !DILocation(line: 456, column: 45, scope: !11445)
!11453 = !DILocation(line: 457, column: 44, scope: !11445)
!11454 = !DILocation(line: 467, column: 2, scope: !11445)
!11455 = !DILocation(line: 470, column: 2, scope: !11445)
!11456 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1544, file: !1544, line: 473, type: !1432, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11457)
!11457 = !{!11458, !11459, !11460, !11461}
!11458 = !DILocalVariable(name: "dev", arg: 1, scope: !11456, file: !1544, line: 473, type: !1402)
!11459 = !DILocalVariable(name: "pins", arg: 2, scope: !11456, file: !1544, line: 474, type: !1429)
!11460 = !DILocalVariable(name: "cfg", scope: !11456, file: !1544, line: 476, type: !11408)
!11461 = !DILocalVariable(name: "gpio", scope: !11456, file: !1544, line: 477, type: !1475)
!11462 = !DILocation(line: 0, scope: !11456)
!11463 = !DILocation(line: 476, column: 45, scope: !11456)
!11464 = !DILocation(line: 477, column: 44, scope: !11456)
!11465 = !DILocation(line: 484, column: 2, scope: !11456)
!11466 = !DILocation(line: 487, column: 2, scope: !11456)
!11467 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1544, file: !1544, line: 594, type: !1438, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11468)
!11468 = !{!11469, !11470, !11471, !11472, !11473, !11474, !11476, !11477, !11478}
!11469 = !DILocalVariable(name: "dev", arg: 1, scope: !11467, file: !1544, line: 594, type: !1402)
!11470 = !DILocalVariable(name: "pin", arg: 2, scope: !11467, file: !1544, line: 595, type: !1417)
!11471 = !DILocalVariable(name: "mode", arg: 3, scope: !11467, file: !1544, line: 596, type: !1376)
!11472 = !DILocalVariable(name: "trig", arg: 4, scope: !11467, file: !1544, line: 597, type: !1382)
!11473 = !DILocalVariable(name: "cfg", scope: !11467, file: !1544, line: 599, type: !11408)
!11474 = !DILocalVariable(name: "data", scope: !11467, file: !1544, line: 600, type: !11475)
!11475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 32)
!11476 = !DILocalVariable(name: "edge", scope: !11467, file: !1544, line: 601, type: !125)
!11477 = !DILocalVariable(name: "err", scope: !11467, file: !1544, line: 602, type: !125)
!11478 = !DILabel(scope: !11467, name: "exit", file: !1544, line: 643)
!11479 = !DILocation(line: 0, scope: !11467)
!11480 = !DILocation(line: 599, column: 45, scope: !11467)
!11481 = !DILocation(line: 604, column: 6, scope: !11467)
!11482 = !DILocation(line: 605, column: 34, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !1544, line: 605, column: 7)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !1544, line: 604, column: 38)
!11485 = distinct !DILexicalBlock(scope: !11467, file: !1544, line: 604, column: 6)
!11486 = !DILocation(line: 605, column: 7, scope: !11483)
!11487 = !DILocation(line: 605, column: 47, scope: !11483)
!11488 = !DILocation(line: 605, column: 39, scope: !11483)
!11489 = !DILocation(line: 605, column: 7, scope: !11484)
!11490 = !DILocation(line: 606, column: 4, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11483, file: !1544, line: 605, column: 53)
!11492 = !DILocation(line: 607, column: 4, scope: !11491)
!11493 = !DILocation(line: 608, column: 4, scope: !11491)
!11494 = !DILocation(line: 609, column: 3, scope: !11491)
!11495 = !DILocation(line: 600, column: 38, scope: !11467)
!11496 = !DILocation(line: 620, column: 30, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11467, file: !1544, line: 620, column: 6)
!11498 = !DILocation(line: 620, column: 6, scope: !11497)
!11499 = !DILocation(line: 620, column: 57, scope: !11497)
!11500 = !DILocation(line: 620, column: 6, scope: !11467)
!11501 = !DILocation(line: 625, column: 29, scope: !11467)
!11502 = !DILocation(line: 625, column: 2, scope: !11467)
!11503 = !DILocation(line: 627, column: 2, scope: !11467)
!11504 = !DILocation(line: 630, column: 3, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11467, file: !1544, line: 627, column: 16)
!11506 = !DILocation(line: 633, column: 3, scope: !11505)
!11507 = !DILocation(line: 636, column: 3, scope: !11505)
!11508 = !DILocation(line: 639, column: 2, scope: !11467)
!11509 = !DILocation(line: 641, column: 2, scope: !11467)
!11510 = !DILocation(line: 643, column: 1, scope: !11467)
!11511 = !DILocation(line: 644, column: 2, scope: !11467)
!11512 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1544, file: !1544, line: 647, type: !1442, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11513)
!11513 = !{!11514, !11515, !11516, !11517}
!11514 = !DILocalVariable(name: "dev", arg: 1, scope: !11512, file: !1544, line: 647, type: !1402)
!11515 = !DILocalVariable(name: "callback", arg: 2, scope: !11512, file: !1544, line: 648, type: !1444)
!11516 = !DILocalVariable(name: "set", arg: 3, scope: !11512, file: !1544, line: 649, type: !153)
!11517 = !DILocalVariable(name: "data", scope: !11512, file: !1544, line: 651, type: !11475)
!11518 = !DILocation(line: 0, scope: !11512)
!11519 = !DILocation(line: 651, column: 38, scope: !11512)
!11520 = !DILocation(line: 653, column: 37, scope: !11512)
!11521 = !DILocation(line: 653, column: 9, scope: !11512)
!11522 = !DILocation(line: 653, column: 2, scope: !11512)
!11523 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11524, file: !11524, line: 38, type: !11525, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11528)
!11524 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11525 = !DISubroutineType(types: !11526)
!11526 = !{!125, !11527, !1444, !153}
!11527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!11528 = !{!11529, !11530, !11531}
!11529 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11523, file: !11524, line: 38, type: !11527)
!11530 = !DILocalVariable(name: "callback", arg: 2, scope: !11523, file: !11524, line: 39, type: !1444)
!11531 = !DILocalVariable(name: "set", arg: 3, scope: !11523, file: !11524, line: 40, type: !153)
!11532 = !DILocation(line: 0, scope: !11523)
!11533 = !DILocation(line: 45, column: 7, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11523, file: !11524, line: 45, column: 6)
!11535 = !DILocation(line: 45, column: 6, scope: !11523)
!11536 = !DILocation(line: 46, column: 56, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !11524, line: 46, column: 7)
!11538 = distinct !DILexicalBlock(scope: !11534, file: !11524, line: 45, column: 38)
!11539 = !DILocation(line: 46, column: 8, scope: !11537)
!11540 = !DILocation(line: 46, column: 7, scope: !11538)
!11541 = !DILocation(line: 51, column: 13, scope: !11534)
!11542 = !DILocation(line: 56, column: 43, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !11524, line: 55, column: 11)
!11544 = distinct !DILexicalBlock(scope: !11523, file: !11524, line: 55, column: 6)
!11545 = !DILocation(line: 56, column: 3, scope: !11543)
!11546 = !DILocation(line: 57, column: 2, scope: !11543)
!11547 = !DILocation(line: 60, column: 1, scope: !11523)
!11548 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1449, file: !1449, line: 261, type: !11549, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11551)
!11549 = !DISubroutineType(types: !11550)
!11550 = !{!153, !11527}
!11551 = !{!11552}
!11552 = !DILocalVariable(name: "list", arg: 1, scope: !11548, file: !1449, line: 261, type: !11527)
!11553 = !DILocation(line: 0, scope: !11548)
!11554 = !DILocation(line: 261, column: 1, scope: !11548)
!11555 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1449, file: !1449, line: 417, type: !11556, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11558)
!11556 = !DISubroutineType(types: !11557)
!11557 = !{!153, !11527, !1617}
!11558 = !{!11559, !11560, !11561, !11562}
!11559 = !DILocalVariable(name: "list", arg: 1, scope: !11555, file: !1449, line: 417, type: !11527)
!11560 = !DILocalVariable(name: "node", arg: 2, scope: !11555, file: !1449, line: 417, type: !1617)
!11561 = !DILocalVariable(name: "prev", scope: !11555, file: !1449, line: 417, type: !1617)
!11562 = !DILocalVariable(name: "test", scope: !11555, file: !1449, line: 417, type: !1617)
!11563 = !DILocation(line: 0, scope: !11555)
!11564 = !DILocation(line: 417, column: 1, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11555, file: !1449, line: 417, column: 1)
!11566 = !DILocation(line: 417, column: 1, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11565, file: !1449, line: 417, column: 1)
!11568 = !DILocation(line: 417, column: 1, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !1449, line: 417, column: 1)
!11570 = distinct !DILexicalBlock(scope: !11567, file: !1449, line: 417, column: 1)
!11571 = !DILocation(line: 417, column: 1, scope: !11570)
!11572 = distinct !{!11572, !11564, !11564}
!11573 = !DILocation(line: 417, column: 1, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11569, file: !1449, line: 417, column: 1)
!11575 = !DILocation(line: 417, column: 1, scope: !11555)
!11576 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1449, file: !1449, line: 298, type: !11577, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11579)
!11577 = !DISubroutineType(types: !11578)
!11578 = !{null, !11527, !1617}
!11579 = !{!11580, !11581}
!11580 = !DILocalVariable(name: "list", arg: 1, scope: !11576, file: !1449, line: 298, type: !11527)
!11581 = !DILocalVariable(name: "node", arg: 2, scope: !11576, file: !1449, line: 298, type: !1617)
!11582 = !DILocation(line: 0, scope: !11576)
!11583 = !DILocation(line: 298, column: 1, scope: !11576)
!11584 = !DILocation(line: 298, column: 1, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11576, file: !1449, line: 298, column: 1)
!11586 = !DILocation(line: 298, column: 1, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11585, file: !1449, line: 298, column: 1)
!11588 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1449, file: !1449, line: 231, type: !11589, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11591)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!1617, !11527}
!11591 = !{!11592}
!11592 = !DILocalVariable(name: "list", arg: 1, scope: !11588, file: !1449, line: 231, type: !11527)
!11593 = !DILocation(line: 0, scope: !11588)
!11594 = !DILocation(line: 233, column: 15, scope: !11588)
!11595 = !DILocation(line: 233, column: 2, scope: !11588)
!11596 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1449, file: !1449, line: 209, type: !11597, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11599)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{null, !1617, !1617}
!11599 = !{!11600, !11601}
!11600 = !DILocalVariable(name: "parent", arg: 1, scope: !11596, file: !1449, line: 209, type: !1617)
!11601 = !DILocalVariable(name: "child", arg: 2, scope: !11596, file: !1449, line: 209, type: !1617)
!11602 = !DILocation(line: 0, scope: !11596)
!11603 = !DILocation(line: 211, column: 10, scope: !11596)
!11604 = !DILocation(line: 211, column: 15, scope: !11596)
!11605 = !DILocation(line: 212, column: 1, scope: !11596)
!11606 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1449, file: !1449, line: 214, type: !11577, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11607)
!11607 = !{!11608, !11609}
!11608 = !DILocalVariable(name: "list", arg: 1, scope: !11606, file: !1449, line: 214, type: !11527)
!11609 = !DILocalVariable(name: "node", arg: 2, scope: !11606, file: !1449, line: 214, type: !1617)
!11610 = !DILocation(line: 0, scope: !11606)
!11611 = !DILocation(line: 216, column: 8, scope: !11606)
!11612 = !DILocation(line: 216, column: 13, scope: !11606)
!11613 = !DILocation(line: 217, column: 1, scope: !11606)
!11614 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1449, file: !1449, line: 243, type: !11589, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11615)
!11615 = !{!11616}
!11616 = !DILocalVariable(name: "list", arg: 1, scope: !11614, file: !1449, line: 243, type: !11527)
!11617 = !DILocation(line: 0, scope: !11614)
!11618 = !DILocation(line: 245, column: 15, scope: !11614)
!11619 = !DILocation(line: 245, column: 2, scope: !11614)
!11620 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1449, file: !1449, line: 219, type: !11577, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11621)
!11621 = !{!11622, !11623}
!11622 = !DILocalVariable(name: "list", arg: 1, scope: !11620, file: !1449, line: 219, type: !11527)
!11623 = !DILocalVariable(name: "node", arg: 2, scope: !11620, file: !1449, line: 219, type: !1617)
!11624 = !DILocation(line: 0, scope: !11620)
!11625 = !DILocation(line: 221, column: 8, scope: !11620)
!11626 = !DILocation(line: 221, column: 13, scope: !11620)
!11627 = !DILocation(line: 222, column: 1, scope: !11620)
!11628 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1449, file: !1449, line: 401, type: !11629, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !11527, !1617, !1617}
!11631 = !{!11632, !11633, !11634}
!11632 = !DILocalVariable(name: "list", arg: 1, scope: !11628, file: !1449, line: 401, type: !11527)
!11633 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11628, file: !1449, line: 401, type: !1617)
!11634 = !DILocalVariable(name: "node", arg: 3, scope: !11628, file: !1449, line: 401, type: !1617)
!11635 = !DILocation(line: 0, scope: !11628)
!11636 = !DILocation(line: 401, column: 1, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11628, file: !1449, line: 401, column: 1)
!11638 = !DILocation(line: 0, scope: !11637)
!11639 = !DILocation(line: 401, column: 1, scope: !11628)
!11640 = !DILocation(line: 401, column: 1, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11637, file: !1449, line: 401, column: 1)
!11642 = !DILocation(line: 401, column: 1, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11641, file: !1449, line: 401, column: 1)
!11644 = !DILocation(line: 401, column: 1, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11643, file: !1449, line: 401, column: 1)
!11646 = !DILocation(line: 401, column: 1, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11637, file: !1449, line: 401, column: 1)
!11648 = !DILocation(line: 401, column: 1, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11647, file: !1449, line: 401, column: 1)
!11650 = !DILocation(line: 401, column: 1, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11649, file: !1449, line: 401, column: 1)
!11652 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1449, file: !1449, line: 285, type: !11653, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11655)
!11653 = !DISubroutineType(types: !11654)
!11654 = !{!1617, !1617}
!11655 = !{!11656}
!11656 = !DILocalVariable(name: "node", arg: 1, scope: !11652, file: !1449, line: 285, type: !1617)
!11657 = !DILocation(line: 0, scope: !11652)
!11658 = !DILocation(line: 285, column: 1, scope: !11652)
!11659 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1449, file: !1449, line: 274, type: !11653, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11660)
!11660 = !{!11661}
!11661 = !DILocalVariable(name: "node", arg: 1, scope: !11659, file: !1449, line: 274, type: !1617)
!11662 = !DILocation(line: 0, scope: !11659)
!11663 = !DILocation(line: 274, column: 1, scope: !11659)
!11664 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1449, file: !1449, line: 204, type: !11653, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11665)
!11665 = !{!11666}
!11666 = !DILocalVariable(name: "node", arg: 1, scope: !11664, file: !1449, line: 204, type: !1617)
!11667 = !DILocation(line: 0, scope: !11664)
!11668 = !DILocation(line: 206, column: 15, scope: !11664)
!11669 = !DILocation(line: 206, column: 2, scope: !11664)
!11670 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1544, file: !1544, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11671)
!11671 = !{!11672, !11673, !11674}
!11672 = !DILocalVariable(name: "pin", arg: 1, scope: !11670, file: !1544, line: 342, type: !125)
!11673 = !DILocalVariable(name: "line", scope: !11670, file: !1544, line: 344, type: !208)
!11674 = !DILocalVariable(name: "port", scope: !11670, file: !1544, line: 345, type: !125)
!11675 = !DILocation(line: 0, scope: !11670)
!11676 = !DILocation(line: 344, column: 18, scope: !11670)
!11677 = !{i32 983040, i32 0}
!11678 = !DILocation(line: 356, column: 9, scope: !11670)
!11679 = !DILocation(line: 370, column: 2, scope: !11670)
!11680 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1544, file: !1544, line: 37, type: !902, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11681)
!11681 = !{!11682, !11683, !11684}
!11682 = !DILocalVariable(name: "line", arg: 1, scope: !11680, file: !1544, line: 37, type: !125)
!11683 = !DILocalVariable(name: "arg", arg: 2, scope: !11680, file: !1544, line: 37, type: !124)
!11684 = !DILocalVariable(name: "data", scope: !11680, file: !1544, line: 39, type: !11475)
!11685 = !DILocation(line: 0, scope: !11680)
!11686 = !DILocation(line: 41, column: 29, scope: !11680)
!11687 = !DILocation(line: 41, column: 39, scope: !11680)
!11688 = !DILocation(line: 41, column: 44, scope: !11680)
!11689 = !DILocation(line: 41, column: 2, scope: !11680)
!11690 = !DILocation(line: 42, column: 1, scope: !11680)
!11691 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1544, file: !1544, line: 376, type: !11692, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11694)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{!125, !125, !125}
!11694 = !{!11695, !11696, !11697, !11699, !11700}
!11695 = !DILocalVariable(name: "port", arg: 1, scope: !11691, file: !1544, line: 376, type: !125)
!11696 = !DILocalVariable(name: "pin", arg: 2, scope: !11691, file: !1544, line: 376, type: !125)
!11697 = !DILocalVariable(name: "clk", scope: !11691, file: !1544, line: 386, type: !11698)
!11698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!11699 = !DILocalVariable(name: "pclken", scope: !11691, file: !1544, line: 387, type: !1660)
!11700 = !DILocalVariable(name: "ret", scope: !11691, file: !1544, line: 396, type: !125)
!11701 = !DILocation(line: 0, scope: !11691)
!11702 = !DILocation(line: 387, column: 2, scope: !11691)
!11703 = !DILocation(line: 387, column: 22, scope: !11691)
!11704 = !DILocation(line: 399, column: 8, scope: !11691)
!11705 = !DILocation(line: 400, column: 10, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11691, file: !1544, line: 400, column: 6)
!11707 = !DILocation(line: 400, column: 6, scope: !11691)
!11708 = !DILocation(line: 405, column: 2, scope: !11691)
!11709 = !DILocation(line: 407, column: 2, scope: !11691)
!11710 = !DILocation(line: 408, column: 1, scope: !11691)
!11711 = distinct !DISubprogram(name: "clock_control_on", scope: !995, file: !995, line: 123, type: !1509, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11712)
!11712 = !{!11713, !11714, !11715}
!11713 = !DILocalVariable(name: "dev", arg: 1, scope: !11711, file: !995, line: 123, type: !1402)
!11714 = !DILocalVariable(name: "sys", arg: 2, scope: !11711, file: !995, line: 124, type: !1091)
!11715 = !DILocalVariable(name: "api", scope: !11711, file: !995, line: 126, type: !1502)
!11716 = !DILocation(line: 0, scope: !11711)
!11717 = !DILocation(line: 127, column: 49, scope: !11711)
!11718 = !DILocation(line: 129, column: 14, scope: !11711)
!11719 = !DILocation(line: 129, column: 9, scope: !11711)
!11720 = !DILocation(line: 129, column: 2, scope: !11711)
!11721 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1544, file: !1544, line: 311, type: !10403, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11722)
!11722 = !{!11723, !11724, !11725}
!11723 = !DILocalVariable(name: "port", arg: 1, scope: !11721, file: !1544, line: 311, type: !125)
!11724 = !DILocalVariable(name: "pin", arg: 2, scope: !11721, file: !1544, line: 311, type: !125)
!11725 = !DILocalVariable(name: "line", scope: !11721, file: !1544, line: 313, type: !208)
!11726 = !DILocation(line: 0, scope: !11721)
!11727 = !DILocation(line: 313, column: 18, scope: !11721)
!11728 = !DILocation(line: 337, column: 2, scope: !11721)
!11729 = !DILocation(line: 340, column: 1, scope: !11721)
!11730 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1544, file: !1544, line: 295, type: !11731, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11733)
!11731 = !DISubroutineType(types: !11732)
!11732 = !{!208, !125}
!11733 = !{!11734}
!11734 = !DILocalVariable(name: "pin", arg: 1, scope: !11730, file: !1544, line: 295, type: !125)
!11735 = !DILocation(line: 0, scope: !11730)
!11736 = !DILocation(line: 307, column: 46, scope: !11730)
!11737 = !DILocation(line: 307, column: 27, scope: !11730)
!11738 = !DILocation(line: 307, column: 32, scope: !11730)
!11739 = !DILocation(line: 307, column: 14, scope: !11730)
!11740 = !DILocation(line: 307, column: 39, scope: !11730)
!11741 = !DILocation(line: 307, column: 2, scope: !11730)
!11742 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6926, file: !6926, line: 671, type: !11743, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11745)
!11743 = !DISubroutineType(types: !11744)
!11744 = !{null, !208, !208}
!11745 = !{!11746, !11747}
!11746 = !DILocalVariable(name: "Port", arg: 1, scope: !11742, file: !6926, line: 671, type: !208)
!11747 = !DILocalVariable(name: "Line", arg: 2, scope: !11742, file: !6926, line: 671, type: !208)
!11748 = !DILocation(line: 0, scope: !11742)
!11749 = !DILocation(line: 673, column: 3, scope: !11742)
!11750 = !DILocalVariable(name: "value", arg: 1, scope: !11751, file: !8372, line: 373, type: !208)
!11751 = distinct !DISubprogram(name: "__RBIT", scope: !8372, file: !8372, line: 373, type: !9618, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11752)
!11752 = !{!11750, !11753}
!11753 = !DILocalVariable(name: "result", scope: !11751, file: !8372, line: 375, type: !208)
!11754 = !DILocation(line: 0, scope: !11751, inlinedAt: !11755)
!11755 = distinct !DILocation(line: 673, column: 3, scope: !11742)
!11756 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !11755)
!11757 = !{i64 3732184}
!11758 = !DILocalVariable(name: "value", arg: 1, scope: !11759, file: !8372, line: 403, type: !208)
!11759 = distinct !DISubprogram(name: "__CLZ", scope: !8372, file: !8372, line: 403, type: !11760, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11762)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!150, !208}
!11762 = !{!11758}
!11763 = !DILocation(line: 0, scope: !11759, inlinedAt: !11764)
!11764 = distinct !DILocation(line: 673, column: 3, scope: !11742)
!11765 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !11764)
!11766 = !DILocation(line: 674, column: 1, scope: !11742)
!11767 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11524, file: !11524, line: 69, type: !11768, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11770)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{null, !11527, !1402, !208}
!11770 = !{!11771, !11772, !11773, !11774, !11775}
!11771 = !DILocalVariable(name: "list", arg: 1, scope: !11767, file: !11524, line: 69, type: !11527)
!11772 = !DILocalVariable(name: "port", arg: 2, scope: !11767, file: !11524, line: 70, type: !1402)
!11773 = !DILocalVariable(name: "pins", arg: 3, scope: !11767, file: !11524, line: 71, type: !208)
!11774 = !DILocalVariable(name: "cb", scope: !11767, file: !11524, line: 73, type: !1444)
!11775 = !DILocalVariable(name: "tmp", scope: !11767, file: !11524, line: 73, type: !1444)
!11776 = !DILocation(line: 0, scope: !11767)
!11777 = !DILocation(line: 75, column: 2, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11767, file: !11524, line: 75, column: 2)
!11779 = !DILocation(line: 0, scope: !11778)
!11780 = !DILocation(line: 76, column: 11, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11782, file: !11524, line: 76, column: 7)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !11524, line: 75, column: 57)
!11783 = distinct !DILexicalBlock(scope: !11778, file: !11524, line: 75, column: 2)
!11784 = !DILocation(line: 76, column: 20, scope: !11781)
!11785 = !DILocation(line: 76, column: 7, scope: !11782)
!11786 = !DILocation(line: 78, column: 8, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11781, file: !11524, line: 76, column: 28)
!11788 = !DILocation(line: 78, column: 4, scope: !11787)
!11789 = !DILocation(line: 79, column: 3, scope: !11787)
!11790 = !DILocation(line: 75, column: 2, scope: !11783)
!11791 = !DILocation(line: 81, column: 1, scope: !11767)
!11792 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6926, file: !6926, line: 710, type: !9618, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11793)
!11793 = !{!11794}
!11794 = !DILocalVariable(name: "Line", arg: 1, scope: !11792, file: !6926, line: 710, type: !208)
!11795 = !DILocation(line: 0, scope: !11792)
!11796 = !DILocation(line: 712, column: 21, scope: !11792)
!11797 = !DILocation(line: 0, scope: !11751, inlinedAt: !11798)
!11798 = distinct !DILocation(line: 712, column: 76, scope: !11792)
!11799 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !11798)
!11800 = !DILocation(line: 0, scope: !11759, inlinedAt: !11801)
!11801 = distinct !DILocation(line: 712, column: 76, scope: !11792)
!11802 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !11801)
!11803 = !DILocation(line: 712, column: 73, scope: !11792)
!11804 = !DILocation(line: 712, column: 3, scope: !11792)
!11805 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11806, file: !11806, line: 910, type: !11807, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11809)
!11806 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11807 = !DISubroutineType(types: !11808)
!11808 = !{null, !1475, !208}
!11809 = !{!11810, !11811}
!11810 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11805, file: !11806, line: 910, type: !1475)
!11811 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11805, file: !11806, line: 910, type: !208)
!11812 = !DILocation(line: 0, scope: !11805)
!11813 = !DILocation(line: 912, column: 3, scope: !11805)
!11814 = !DILocation(line: 913, column: 1, scope: !11805)
!11815 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11806, file: !11806, line: 823, type: !11816, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{!208, !1475}
!11818 = !{!11819}
!11819 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11815, file: !11806, line: 823, type: !1475)
!11820 = !DILocation(line: 0, scope: !11815)
!11821 = !DILocation(line: 825, column: 21, scope: !11815)
!11822 = !DILocation(line: 825, column: 3, scope: !11815)
!11823 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11806, file: !11806, line: 812, type: !11807, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11824)
!11824 = !{!11825, !11826}
!11825 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11823, file: !11806, line: 812, type: !1475)
!11826 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11823, file: !11806, line: 812, type: !208)
!11827 = !DILocation(line: 0, scope: !11823)
!11828 = !DILocation(line: 814, column: 3, scope: !11823)
!11829 = !DILocation(line: 815, column: 1, scope: !11823)
!11830 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11806, file: !11806, line: 771, type: !11816, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11831)
!11831 = !{!11832}
!11832 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11830, file: !11806, line: 771, type: !1475)
!11833 = !DILocation(line: 0, scope: !11830)
!11834 = !DILocation(line: 773, column: 21, scope: !11830)
!11835 = !DILocation(line: 773, column: 3, scope: !11830)
!11836 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1544, file: !1544, line: 47, type: !11837, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11839)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!125, !1418, !387}
!11839 = !{!11840, !11841}
!11840 = !DILocalVariable(name: "flags", arg: 1, scope: !11836, file: !1544, line: 47, type: !1418)
!11841 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11836, file: !1544, line: 47, type: !387)
!11842 = !DILocation(line: 0, scope: !11836)
!11843 = !DILocation(line: 50, column: 13, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11836, file: !1544, line: 50, column: 6)
!11845 = !DILocation(line: 50, column: 28, scope: !11844)
!11846 = !DILocation(line: 50, column: 6, scope: !11836)
!11847 = !DILocation(line: 53, column: 11, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11844, file: !1544, line: 50, column: 34)
!11849 = !DILocation(line: 55, column: 14, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11848, file: !1544, line: 55, column: 7)
!11851 = !DILocation(line: 55, column: 35, scope: !11850)
!11852 = !DILocation(line: 55, column: 7, scope: !11848)
!11853 = !DILocation(line: 56, column: 14, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !1544, line: 56, column: 8)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !1544, line: 55, column: 41)
!11856 = !DILocation(line: 56, column: 8, scope: !11855)
!11857 = !DILocation(line: 0, scope: !11850)
!11858 = !DILocation(line: 66, column: 14, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11848, file: !1544, line: 66, column: 7)
!11860 = !DILocation(line: 66, column: 30, scope: !11859)
!11861 = !DILocation(line: 66, column: 7, scope: !11848)
!11862 = !DILocation(line: 67, column: 12, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11859, file: !1544, line: 66, column: 36)
!11864 = !DILocation(line: 68, column: 3, scope: !11863)
!11865 = !DILocation(line: 68, column: 21, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11859, file: !1544, line: 68, column: 14)
!11867 = !DILocation(line: 68, column: 39, scope: !11866)
!11868 = !DILocation(line: 68, column: 14, scope: !11859)
!11869 = !DILocation(line: 69, column: 12, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11866, file: !1544, line: 68, column: 45)
!11871 = !DILocation(line: 70, column: 3, scope: !11870)
!11872 = !DILocation(line: 72, column: 21, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11844, file: !1544, line: 72, column: 14)
!11874 = !DILocation(line: 72, column: 35, scope: !11873)
!11875 = !DILocation(line: 72, column: 14, scope: !11844)
!11876 = !DILocation(line: 77, column: 14, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !1544, line: 77, column: 7)
!11878 = distinct !DILexicalBlock(scope: !11873, file: !1544, line: 72, column: 41)
!11879 = !DILocation(line: 77, column: 30, scope: !11877)
!11880 = !DILocation(line: 77, column: 7, scope: !11878)
!11881 = !DILocation(line: 0, scope: !11844)
!11882 = !DILocation(line: 90, column: 1, scope: !11836)
!11883 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1544, file: !1544, line: 157, type: !11884, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11886)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{null, !1402, !125, !125, !125}
!11886 = !{!11887, !11888, !11889, !11890, !11891, !11892, !11893, !11894, !11895, !11896, !11897}
!11887 = !DILocalVariable(name: "dev", arg: 1, scope: !11883, file: !1544, line: 157, type: !1402)
!11888 = !DILocalVariable(name: "pin", arg: 2, scope: !11883, file: !1544, line: 157, type: !125)
!11889 = !DILocalVariable(name: "conf", arg: 3, scope: !11883, file: !1544, line: 158, type: !125)
!11890 = !DILocalVariable(name: "func", arg: 4, scope: !11883, file: !1544, line: 158, type: !125)
!11891 = !DILocalVariable(name: "cfg", scope: !11883, file: !1544, line: 160, type: !11408)
!11892 = !DILocalVariable(name: "gpio", scope: !11883, file: !1544, line: 161, type: !1475)
!11893 = !DILocalVariable(name: "pin_ll", scope: !11883, file: !1544, line: 163, type: !125)
!11894 = !DILocalVariable(name: "mode", scope: !11883, file: !1544, line: 227, type: !32)
!11895 = !DILocalVariable(name: "otype", scope: !11883, file: !1544, line: 227, type: !32)
!11896 = !DILocalVariable(name: "ospeed", scope: !11883, file: !1544, line: 227, type: !32)
!11897 = !DILocalVariable(name: "pupd", scope: !11883, file: !1544, line: 227, type: !32)
!11898 = !DILocation(line: 0, scope: !11883)
!11899 = !DILocation(line: 160, column: 45, scope: !11883)
!11900 = !DILocation(line: 161, column: 44, scope: !11883)
!11901 = !DILocation(line: 163, column: 15, scope: !11883)
!11902 = !DILocation(line: 229, column: 14, scope: !11883)
!11903 = !DILocation(line: 246, column: 47, scope: !11883)
!11904 = !DILocation(line: 246, column: 2, scope: !11883)
!11905 = !DILocation(line: 248, column: 43, scope: !11883)
!11906 = !DILocation(line: 248, column: 2, scope: !11883)
!11907 = !DILocation(line: 250, column: 40, scope: !11883)
!11908 = !DILocation(line: 250, column: 2, scope: !11883)
!11909 = !DILocation(line: 252, column: 11, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11883, file: !1544, line: 252, column: 6)
!11911 = !DILocation(line: 252, column: 6, scope: !11883)
!11912 = !DILocation(line: 253, column: 11, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !1544, line: 253, column: 7)
!11914 = distinct !DILexicalBlock(scope: !11910, file: !1544, line: 252, column: 36)
!11915 = !DILocation(line: 253, column: 7, scope: !11914)
!11916 = !DILocation(line: 254, column: 4, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11913, file: !1544, line: 253, column: 16)
!11918 = !DILocation(line: 255, column: 3, scope: !11917)
!11919 = !DILocation(line: 256, column: 4, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11913, file: !1544, line: 255, column: 10)
!11921 = !DILocation(line: 260, column: 40, scope: !11883)
!11922 = !DILocation(line: 260, column: 2, scope: !11883)
!11923 = !DILocation(line: 265, column: 1, scope: !11883)
!11924 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1544, file: !1544, line: 137, type: !11731, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11925)
!11925 = !{!11926, !11927}
!11926 = !DILocalVariable(name: "pin", arg: 1, scope: !11924, file: !1544, line: 137, type: !125)
!11927 = !DILocalVariable(name: "pinval", scope: !11924, file: !1544, line: 139, type: !208)
!11928 = !DILocation(line: 0, scope: !11924)
!11929 = !DILocation(line: 149, column: 13, scope: !11924)
!11930 = !DILocation(line: 151, column: 2, scope: !11924)
!11931 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11806, file: !11806, line: 342, type: !11932, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11934)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{null, !1475, !208, !208}
!11934 = !{!11935, !11936, !11937}
!11935 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11931, file: !11806, line: 342, type: !1475)
!11936 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11931, file: !11806, line: 342, type: !208)
!11937 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11931, file: !11806, line: 342, type: !208)
!11938 = !DILocation(line: 0, scope: !11931)
!11939 = !DILocation(line: 344, column: 3, scope: !11931)
!11940 = !DILocation(line: 345, column: 1, scope: !11931)
!11941 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11806, file: !11806, line: 413, type: !11932, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11942)
!11942 = !{!11943, !11944, !11945}
!11943 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11941, file: !11806, line: 413, type: !1475)
!11944 = !DILocalVariable(name: "Pin", arg: 2, scope: !11941, file: !11806, line: 413, type: !208)
!11945 = !DILocalVariable(name: "Speed", arg: 3, scope: !11941, file: !11806, line: 413, type: !208)
!11946 = !DILocation(line: 0, scope: !11941)
!11947 = !DILocation(line: 415, column: 3, scope: !11941)
!11948 = !DILocation(line: 0, scope: !11751, inlinedAt: !11949)
!11949 = distinct !DILocation(line: 415, column: 3, scope: !11941)
!11950 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !11949)
!11951 = !DILocation(line: 0, scope: !11759, inlinedAt: !11952)
!11952 = distinct !DILocation(line: 415, column: 3, scope: !11941)
!11953 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !11952)
!11954 = !DILocation(line: 0, scope: !11751, inlinedAt: !11955)
!11955 = distinct !DILocation(line: 415, column: 3, scope: !11941)
!11956 = !DILocation(line: 0, scope: !11759, inlinedAt: !11957)
!11957 = distinct !DILocation(line: 415, column: 3, scope: !11941)
!11958 = !DILocation(line: 417, column: 1, scope: !11941)
!11959 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11806, file: !11806, line: 484, type: !11932, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11960)
!11960 = !{!11961, !11962, !11963}
!11961 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11959, file: !11806, line: 484, type: !1475)
!11962 = !DILocalVariable(name: "Pin", arg: 2, scope: !11959, file: !11806, line: 484, type: !208)
!11963 = !DILocalVariable(name: "Pull", arg: 3, scope: !11959, file: !11806, line: 484, type: !208)
!11964 = !DILocation(line: 0, scope: !11959)
!11965 = !DILocation(line: 486, column: 3, scope: !11959)
!11966 = !DILocation(line: 0, scope: !11751, inlinedAt: !11967)
!11967 = distinct !DILocation(line: 486, column: 3, scope: !11959)
!11968 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !11967)
!11969 = !DILocation(line: 0, scope: !11759, inlinedAt: !11970)
!11970 = distinct !DILocation(line: 486, column: 3, scope: !11959)
!11971 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !11970)
!11972 = !DILocation(line: 0, scope: !11751, inlinedAt: !11973)
!11973 = distinct !DILocation(line: 486, column: 3, scope: !11959)
!11974 = !DILocation(line: 0, scope: !11759, inlinedAt: !11975)
!11975 = distinct !DILocation(line: 486, column: 3, scope: !11959)
!11976 = !DILocation(line: 487, column: 1, scope: !11959)
!11977 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11806, file: !11806, line: 556, type: !11932, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11978)
!11978 = !{!11979, !11980, !11981}
!11979 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11977, file: !11806, line: 556, type: !1475)
!11980 = !DILocalVariable(name: "Pin", arg: 2, scope: !11977, file: !11806, line: 556, type: !208)
!11981 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11977, file: !11806, line: 556, type: !208)
!11982 = !DILocation(line: 0, scope: !11977)
!11983 = !DILocation(line: 558, column: 3, scope: !11977)
!11984 = !DILocation(line: 0, scope: !11751, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 558, column: 3, scope: !11977)
!11986 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !11985)
!11987 = !DILocation(line: 0, scope: !11759, inlinedAt: !11988)
!11988 = distinct !DILocation(line: 558, column: 3, scope: !11977)
!11989 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !11988)
!11990 = !DILocation(line: 0, scope: !11751, inlinedAt: !11991)
!11991 = distinct !DILocation(line: 558, column: 3, scope: !11977)
!11992 = !DILocation(line: 0, scope: !11759, inlinedAt: !11993)
!11993 = distinct !DILocation(line: 558, column: 3, scope: !11977)
!11994 = !DILocation(line: 560, column: 1, scope: !11977)
!11995 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11806, file: !11806, line: 633, type: !11932, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !11996)
!11996 = !{!11997, !11998, !11999}
!11997 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11995, file: !11806, line: 633, type: !1475)
!11998 = !DILocalVariable(name: "Pin", arg: 2, scope: !11995, file: !11806, line: 633, type: !208)
!11999 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11995, file: !11806, line: 633, type: !208)
!12000 = !DILocation(line: 0, scope: !11995)
!12001 = !DILocation(line: 635, column: 3, scope: !11995)
!12002 = !DILocation(line: 0, scope: !11751, inlinedAt: !12003)
!12003 = distinct !DILocation(line: 635, column: 3, scope: !11995)
!12004 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !12003)
!12005 = !DILocation(line: 0, scope: !11759, inlinedAt: !12006)
!12006 = distinct !DILocation(line: 635, column: 3, scope: !11995)
!12007 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !12006)
!12008 = !DILocation(line: 0, scope: !11751, inlinedAt: !12009)
!12009 = distinct !DILocation(line: 635, column: 3, scope: !11995)
!12010 = !DILocation(line: 0, scope: !11759, inlinedAt: !12011)
!12011 = distinct !DILocation(line: 635, column: 3, scope: !11995)
!12012 = !DILocation(line: 637, column: 1, scope: !11995)
!12013 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11806, file: !11806, line: 273, type: !11932, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !12014)
!12014 = !{!12015, !12016, !12017}
!12015 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12013, file: !11806, line: 273, type: !1475)
!12016 = !DILocalVariable(name: "Pin", arg: 2, scope: !12013, file: !11806, line: 273, type: !208)
!12017 = !DILocalVariable(name: "Mode", arg: 3, scope: !12013, file: !11806, line: 273, type: !208)
!12018 = !DILocation(line: 0, scope: !12013)
!12019 = !DILocation(line: 275, column: 3, scope: !12013)
!12020 = !DILocation(line: 0, scope: !11751, inlinedAt: !12021)
!12021 = distinct !DILocation(line: 275, column: 3, scope: !12013)
!12022 = !DILocation(line: 380, column: 4, scope: !11751, inlinedAt: !12021)
!12023 = !DILocation(line: 0, scope: !11759, inlinedAt: !12024)
!12024 = distinct !DILocation(line: 275, column: 3, scope: !12013)
!12025 = !DILocation(line: 414, column: 7, scope: !11759, inlinedAt: !12024)
!12026 = !DILocation(line: 0, scope: !11751, inlinedAt: !12027)
!12027 = distinct !DILocation(line: 275, column: 3, scope: !12013)
!12028 = !DILocation(line: 0, scope: !11759, inlinedAt: !12029)
!12029 = distinct !DILocation(line: 275, column: 3, scope: !12013)
!12030 = !DILocation(line: 276, column: 1, scope: !12013)
!12031 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1544, file: !1544, line: 698, type: !1557, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !12032)
!12032 = !{!12033, !12034, !12035}
!12033 = !DILocalVariable(name: "dev", arg: 1, scope: !12031, file: !1544, line: 698, type: !1402)
!12034 = !DILocalVariable(name: "data", scope: !12031, file: !1544, line: 700, type: !11475)
!12035 = !DILocalVariable(name: "ret", scope: !12031, file: !1544, line: 701, type: !125)
!12036 = !DILocation(line: 0, scope: !12031)
!12037 = !DILocation(line: 700, column: 38, scope: !12031)
!12038 = !DILocation(line: 703, column: 8, scope: !12031)
!12039 = !DILocation(line: 703, column: 12, scope: !12031)
!12040 = !DILocation(line: 705, column: 7, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12031, file: !1544, line: 705, column: 6)
!12042 = !DILocation(line: 705, column: 6, scope: !12031)
!12043 = !DILocation(line: 722, column: 8, scope: !12031)
!12044 = !DILocation(line: 723, column: 10, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12031, file: !1544, line: 723, column: 6)
!12046 = !DILocation(line: 723, column: 6, scope: !12031)
!12047 = !DILocation(line: 731, column: 1, scope: !12031)
!12048 = distinct !DISubprogram(name: "device_is_ready", scope: !4266, file: !4266, line: 47, type: !12049, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !12051)
!12049 = !DISubroutineType(types: !12050)
!12050 = !{!153, !1402}
!12051 = !{!12052}
!12052 = !DILocalVariable(name: "dev", arg: 1, scope: !12048, file: !4266, line: 47, type: !1402)
!12053 = !DILocation(line: 0, scope: !12048)
!12054 = !DILocation(line: 55, column: 2, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12048, file: !4266, line: 55, column: 2)
!12056 = !{i64 2155279309}
!12057 = !DILocation(line: 56, column: 9, scope: !12048)
!12058 = !DILocation(line: 56, column: 2, scope: !12048)
!12059 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1544, file: !1544, line: 270, type: !12060, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !12062)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{!125, !1402, !153}
!12062 = !{!12063, !12064, !12065, !12066, !12067}
!12063 = !DILocalVariable(name: "dev", arg: 1, scope: !12059, file: !1544, line: 270, type: !1402)
!12064 = !DILocalVariable(name: "on", arg: 2, scope: !12059, file: !1544, line: 270, type: !153)
!12065 = !DILocalVariable(name: "cfg", scope: !12059, file: !1544, line: 272, type: !11408)
!12066 = !DILocalVariable(name: "ret", scope: !12059, file: !1544, line: 273, type: !125)
!12067 = !DILocalVariable(name: "clk", scope: !12059, file: !1544, line: 278, type: !11698)
!12068 = !DILocation(line: 0, scope: !12059)
!12069 = !DILocation(line: 272, column: 45, scope: !12059)
!12070 = !DILocation(line: 282, column: 38, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !1544, line: 280, column: 10)
!12072 = distinct !DILexicalBlock(scope: !12059, file: !1544, line: 280, column: 6)
!12073 = !DILocation(line: 282, column: 6, scope: !12071)
!12074 = !DILocation(line: 281, column: 9, scope: !12071)
!12075 = !DILocation(line: 293, column: 1, scope: !12059)
!12076 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12049, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !12077)
!12077 = !{!12078}
!12078 = !DILocalVariable(name: "dev", arg: 1, scope: !12076, file: !137, line: 730, type: !1402)
!12079 = !DILocation(line: 0, scope: !12076)
!12080 = !DILocation(line: 732, column: 9, scope: !12076)
!12081 = !DILocation(line: 732, column: 2, scope: !12076)
!12082 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1544, file: !1544, line: 496, type: !12083, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1373, retainedNodes: !12085)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{!125, !1402, !125, !125, !125}
!12085 = !{!12086, !12087, !12088, !12089, !12090, !12091}
!12086 = !DILocalVariable(name: "dev", arg: 1, scope: !12082, file: !1544, line: 496, type: !1402)
!12087 = !DILocalVariable(name: "pin", arg: 2, scope: !12082, file: !1544, line: 496, type: !125)
!12088 = !DILocalVariable(name: "conf", arg: 3, scope: !12082, file: !1544, line: 496, type: !125)
!12089 = !DILocalVariable(name: "func", arg: 4, scope: !12082, file: !1544, line: 496, type: !125)
!12090 = !DILocalVariable(name: "ret", scope: !12082, file: !1544, line: 498, type: !125)
!12091 = !DILocalVariable(name: "gpio_out", scope: !12092, file: !1544, line: 508, type: !208)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !1544, line: 507, column: 27)
!12093 = distinct !DILexicalBlock(scope: !12082, file: !1544, line: 507, column: 6)
!12094 = !DILocation(line: 0, scope: !12082)
!12095 = !DILocation(line: 505, column: 2, scope: !12082)
!12096 = !DILocation(line: 507, column: 11, scope: !12093)
!12097 = !DILocation(line: 507, column: 6, scope: !12082)
!12098 = !DILocation(line: 508, column: 28, scope: !12092)
!12099 = !DILocation(line: 0, scope: !12092)
!12100 = !DILocation(line: 510, column: 16, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12092, file: !1544, line: 510, column: 7)
!12102 = !DILocation(line: 0, scope: !12101)
!12103 = !DILocation(line: 510, column: 7, scope: !12092)
!12104 = !DILocation(line: 511, column: 4, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12101, file: !1544, line: 510, column: 32)
!12106 = !DILocation(line: 512, column: 3, scope: !12105)
!12107 = !DILocation(line: 513, column: 4, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12109, file: !1544, line: 512, column: 39)
!12109 = distinct !DILexicalBlock(scope: !12101, file: !1544, line: 512, column: 14)
!12110 = !DILocation(line: 514, column: 3, scope: !12108)
!12111 = !DILocation(line: 518, column: 1, scope: !12082)
!12112 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1819, file: !1819, line: 526, type: !1720, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12113)
!12113 = !{!12114, !12115, !12116}
!12114 = !DILocalVariable(name: "dev", arg: 1, scope: !12112, file: !1819, line: 526, type: !1722)
!12115 = !DILocalVariable(name: "c", arg: 2, scope: !12112, file: !1819, line: 526, type: !1152)
!12116 = !DILocalVariable(name: "config", scope: !12112, file: !1819, line: 528, type: !12117)
!12117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!12118 = !DILocation(line: 0, scope: !12112)
!12119 = !DILocation(line: 528, column: 48, scope: !12112)
!12120 = !DILocation(line: 531, column: 40, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12112, file: !1819, line: 531, column: 6)
!12122 = !DILocation(line: 531, column: 6, scope: !12121)
!12123 = !DILocation(line: 531, column: 6, scope: !12112)
!12124 = !DILocation(line: 532, column: 34, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12121, file: !1819, line: 531, column: 48)
!12126 = !DILocation(line: 532, column: 3, scope: !12125)
!12127 = !DILocation(line: 533, column: 2, scope: !12125)
!12128 = !DILocation(line: 539, column: 42, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12112, file: !1819, line: 539, column: 6)
!12130 = !DILocation(line: 539, column: 7, scope: !12129)
!12131 = !DILocation(line: 539, column: 6, scope: !12112)
!12132 = !DILocation(line: 543, column: 52, scope: !12112)
!12133 = !DILocation(line: 543, column: 22, scope: !12112)
!12134 = !DILocation(line: 543, column: 5, scope: !12112)
!12135 = !DILocation(line: 545, column: 2, scope: !12112)
!12136 = !DILocation(line: 546, column: 1, scope: !12112)
!12137 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1819, file: !1819, line: 548, type: !1739, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12138)
!12138 = !{!12139, !12140, !12141, !12142}
!12139 = !DILocalVariable(name: "dev", arg: 1, scope: !12137, file: !1819, line: 548, type: !1722)
!12140 = !DILocalVariable(name: "c", arg: 2, scope: !12137, file: !1819, line: 549, type: !151)
!12141 = !DILocalVariable(name: "config", scope: !12137, file: !1819, line: 551, type: !12117)
!12142 = !DILocalVariable(name: "key", scope: !12137, file: !1819, line: 555, type: !32)
!12143 = !DILocation(line: 0, scope: !12137)
!12144 = !DILocation(line: 551, column: 48, scope: !12137)
!12145 = !DILocation(line: 562, column: 2, scope: !12137)
!12146 = !DILocation(line: 563, column: 41, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !1819, line: 563, column: 7)
!12148 = distinct !DILexicalBlock(scope: !12137, file: !1819, line: 562, column: 12)
!12149 = !DILocation(line: 563, column: 7, scope: !12147)
!12150 = !DILocation(line: 563, column: 7, scope: !12148)
!12151 = !DILocation(line: 55, column: 2, scope: !12152, inlinedAt: !12156)
!12152 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12153)
!12153 = !{!12154, !12155}
!12154 = !DILocalVariable(name: "key", scope: !12152, file: !6905, line: 44, type: !32)
!12155 = !DILocalVariable(name: "tmp", scope: !12152, file: !6905, line: 53, type: !32)
!12156 = distinct !DILocation(line: 564, column: 10, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12147, file: !1819, line: 563, column: 49)
!12158 = !{i64 2329034}
!12159 = !DILocation(line: 0, scope: !12152, inlinedAt: !12156)
!12160 = !DILocation(line: 565, column: 42, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12157, file: !1819, line: 565, column: 8)
!12162 = !DILocation(line: 565, column: 8, scope: !12161)
!12163 = !DILocation(line: 565, column: 8, scope: !12157)
!12164 = !DILocalVariable(name: "key", arg: 1, scope: !12165, file: !6905, line: 84, type: !32)
!12165 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12166)
!12166 = !{!12164}
!12167 = !DILocation(line: 0, scope: !12165, inlinedAt: !12168)
!12168 = distinct !DILocation(line: 568, column: 4, scope: !12157)
!12169 = !DILocation(line: 95, column: 2, scope: !12165, inlinedAt: !12168)
!12170 = !{i64 2329851}
!12171 = !DILocation(line: 569, column: 3, scope: !12157)
!12172 = distinct !{!12172, !12145, !12173}
!12173 = !DILocation(line: 570, column: 2, scope: !12137)
!12174 = !DILocation(line: 592, column: 33, scope: !12137)
!12175 = !DILocation(line: 592, column: 2, scope: !12137)
!12176 = !DILocation(line: 0, scope: !12165, inlinedAt: !12177)
!12177 = distinct !DILocation(line: 593, column: 2, scope: !12137)
!12178 = !DILocation(line: 95, column: 2, scope: !12165, inlinedAt: !12177)
!12179 = !DILocation(line: 594, column: 1, scope: !12137)
!12180 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1819, file: !1819, line: 596, type: !1743, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12181)
!12181 = !{!12182, !12183, !12184}
!12182 = !DILocalVariable(name: "dev", arg: 1, scope: !12180, file: !1819, line: 596, type: !1722)
!12183 = !DILocalVariable(name: "config", scope: !12180, file: !1819, line: 598, type: !12117)
!12184 = !DILocalVariable(name: "err", scope: !12180, file: !1819, line: 599, type: !208)
!12185 = !DILocation(line: 0, scope: !12180)
!12186 = !DILocation(line: 598, column: 48, scope: !12180)
!12187 = !DILocation(line: 606, column: 40, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 606, column: 6)
!12189 = !DILocation(line: 606, column: 6, scope: !12188)
!12190 = !DILocation(line: 606, column: 6, scope: !12180)
!12191 = !DILocation(line: 610, column: 39, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 610, column: 6)
!12193 = !DILocation(line: 610, column: 6, scope: !12192)
!12194 = !DILocation(line: 610, column: 6, scope: !12180)
!12195 = !DILocation(line: 614, column: 39, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 614, column: 6)
!12197 = !DILocation(line: 614, column: 6, scope: !12196)
!12198 = !DILocation(line: 614, column: 6, scope: !12180)
!12199 = !DILocation(line: 619, column: 40, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 619, column: 6)
!12201 = !DILocation(line: 619, column: 6, scope: !12200)
!12202 = !DILocation(line: 619, column: 6, scope: !12180)
!12203 = !DILocation(line: 623, column: 10, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 623, column: 6)
!12205 = !DILocation(line: 623, column: 6, scope: !12180)
!12206 = !DILocation(line: 624, column: 34, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12204, file: !1819, line: 623, column: 24)
!12208 = !DILocation(line: 624, column: 3, scope: !12207)
!12209 = !DILocation(line: 625, column: 2, scope: !12207)
!12210 = !DILocation(line: 632, column: 10, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 632, column: 6)
!12212 = !DILocation(line: 632, column: 6, scope: !12180)
!12213 = !DILocation(line: 633, column: 34, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12211, file: !1819, line: 632, column: 32)
!12215 = !DILocation(line: 633, column: 3, scope: !12214)
!12216 = !DILocation(line: 634, column: 2, scope: !12214)
!12217 = !DILocation(line: 636, column: 10, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 636, column: 6)
!12219 = !DILocation(line: 636, column: 6, scope: !12180)
!12220 = !DILocation(line: 637, column: 33, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12218, file: !1819, line: 636, column: 31)
!12222 = !DILocation(line: 637, column: 3, scope: !12221)
!12223 = !DILocation(line: 638, column: 2, scope: !12221)
!12224 = !DILocation(line: 640, column: 10, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12180, file: !1819, line: 640, column: 6)
!12226 = !DILocation(line: 640, column: 6, scope: !12180)
!12227 = !DILocation(line: 641, column: 33, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12225, file: !1819, line: 640, column: 32)
!12229 = !DILocation(line: 641, column: 3, scope: !12228)
!12230 = !DILocation(line: 642, column: 2, scope: !12228)
!12231 = !DILocation(line: 646, column: 32, scope: !12180)
!12232 = !DILocation(line: 646, column: 2, scope: !12180)
!12233 = !DILocation(line: 648, column: 2, scope: !12180)
!12234 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1819, file: !1819, line: 419, type: !1747, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12235)
!12235 = !{!12236, !12237, !12238, !12239, !12241, !12242, !12243, !12244}
!12236 = !DILocalVariable(name: "dev", arg: 1, scope: !12234, file: !1819, line: 419, type: !1722)
!12237 = !DILocalVariable(name: "cfg", arg: 2, scope: !12234, file: !1819, line: 420, type: !1749)
!12238 = !DILocalVariable(name: "config", scope: !12234, file: !1819, line: 422, type: !12117)
!12239 = !DILocalVariable(name: "data", scope: !12234, file: !1819, line: 423, type: !12240)
!12240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!12241 = !DILocalVariable(name: "parity", scope: !12234, file: !1819, line: 424, type: !8640)
!12242 = !DILocalVariable(name: "stopbits", scope: !12234, file: !1819, line: 425, type: !8640)
!12243 = !DILocalVariable(name: "databits", scope: !12234, file: !1819, line: 426, type: !8640)
!12244 = !DILocalVariable(name: "flowctrl", scope: !12234, file: !1819, line: 428, type: !8640)
!12245 = !DILocation(line: 0, scope: !12234)
!12246 = !DILocation(line: 422, column: 48, scope: !12234)
!12247 = !DILocation(line: 423, column: 38, scope: !12234)
!12248 = !DILocation(line: 424, column: 56, scope: !12234)
!12249 = !DILocation(line: 424, column: 51, scope: !12234)
!12250 = !DILocation(line: 424, column: 26, scope: !12234)
!12251 = !DILocation(line: 425, column: 60, scope: !12234)
!12252 = !DILocation(line: 425, column: 55, scope: !12234)
!12253 = !DILocation(line: 425, column: 28, scope: !12234)
!12254 = !DILocation(line: 426, column: 60, scope: !12234)
!12255 = !DILocation(line: 426, column: 55, scope: !12234)
!12256 = !DILocation(line: 426, column: 28, scope: !12234)
!12257 = !DILocation(line: 428, column: 58, scope: !12234)
!12258 = !DILocation(line: 428, column: 53, scope: !12234)
!12259 = !DILocation(line: 428, column: 28, scope: !12234)
!12260 = !DILocation(line: 431, column: 44, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 431, column: 6)
!12262 = !DILocation(line: 438, column: 22, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 437, column: 6)
!12264 = !DILocation(line: 437, column: 6, scope: !12234)
!12265 = !DILocation(line: 448, column: 6, scope: !12234)
!12266 = !DILocation(line: 465, column: 47, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 465, column: 6)
!12268 = !DILocation(line: 475, column: 21, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 475, column: 6)
!12270 = !DILocation(line: 475, column: 6, scope: !12234)
!12271 = !DILocation(line: 476, column: 8, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !1819, line: 476, column: 7)
!12273 = distinct !DILexicalBlock(scope: !12269, file: !1819, line: 475, column: 49)
!12274 = !DILocation(line: 477, column: 34, scope: !12272)
!12275 = !DILocation(line: 476, column: 7, scope: !12273)
!12276 = !DILocation(line: 482, column: 27, scope: !12234)
!12277 = !DILocation(line: 482, column: 2, scope: !12234)
!12278 = !DILocation(line: 484, column: 16, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 484, column: 6)
!12280 = !DILocation(line: 484, column: 13, scope: !12279)
!12281 = !DILocation(line: 484, column: 6, scope: !12234)
!12282 = !DILocation(line: 485, column: 3, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12279, file: !1819, line: 484, column: 44)
!12284 = !DILocation(line: 486, column: 2, scope: !12283)
!12285 = !DILocation(line: 488, column: 18, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 488, column: 6)
!12287 = !DILocation(line: 488, column: 15, scope: !12286)
!12288 = !DILocation(line: 488, column: 6, scope: !12234)
!12289 = !DILocation(line: 489, column: 3, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12286, file: !1819, line: 488, column: 48)
!12291 = !DILocation(line: 490, column: 2, scope: !12290)
!12292 = !DILocation(line: 492, column: 18, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 492, column: 6)
!12294 = !DILocation(line: 492, column: 15, scope: !12293)
!12295 = !DILocation(line: 492, column: 6, scope: !12234)
!12296 = !DILocation(line: 493, column: 3, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12293, file: !1819, line: 492, column: 48)
!12298 = !DILocation(line: 494, column: 2, scope: !12297)
!12299 = !DILocation(line: 496, column: 18, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 496, column: 6)
!12301 = !DILocation(line: 496, column: 15, scope: !12300)
!12302 = !DILocation(line: 496, column: 6, scope: !12234)
!12303 = !DILocation(line: 497, column: 3, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12300, file: !1819, line: 496, column: 46)
!12305 = !DILocation(line: 498, column: 2, scope: !12304)
!12306 = !DILocation(line: 500, column: 11, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12234, file: !1819, line: 500, column: 6)
!12308 = !DILocation(line: 500, column: 29, scope: !12307)
!12309 = !DILocation(line: 500, column: 20, scope: !12307)
!12310 = !DILocation(line: 500, column: 6, scope: !12234)
!12311 = !DILocation(line: 501, column: 3, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12307, file: !1819, line: 500, column: 40)
!12313 = !DILocation(line: 502, column: 26, scope: !12312)
!12314 = !DILocation(line: 502, column: 19, scope: !12312)
!12315 = !DILocation(line: 503, column: 2, scope: !12312)
!12316 = !DILocation(line: 505, column: 26, scope: !12234)
!12317 = !DILocation(line: 505, column: 2, scope: !12234)
!12318 = !DILocation(line: 506, column: 2, scope: !12234)
!12319 = !DILocation(line: 507, column: 1, scope: !12234)
!12320 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1819, file: !1819, line: 509, type: !1760, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12321)
!12321 = !{!12322, !12323, !12324}
!12322 = !DILocalVariable(name: "dev", arg: 1, scope: !12320, file: !1819, line: 509, type: !1722)
!12323 = !DILocalVariable(name: "cfg", arg: 2, scope: !12320, file: !1819, line: 510, type: !1762)
!12324 = !DILocalVariable(name: "data", scope: !12320, file: !1819, line: 512, type: !12240)
!12325 = !DILocation(line: 0, scope: !12320)
!12326 = !DILocation(line: 512, column: 38, scope: !12320)
!12327 = !DILocation(line: 514, column: 24, scope: !12320)
!12328 = !DILocation(line: 514, column: 7, scope: !12320)
!12329 = !DILocation(line: 514, column: 16, scope: !12320)
!12330 = !DILocation(line: 515, column: 41, scope: !12320)
!12331 = !{i32 0, i32 1537}
!12332 = !DILocation(line: 515, column: 16, scope: !12320)
!12333 = !DILocation(line: 515, column: 7, scope: !12320)
!12334 = !DILocation(line: 515, column: 14, scope: !12320)
!12335 = !DILocation(line: 517, column: 3, scope: !12320)
!12336 = !{i32 0, i32 12289}
!12337 = !DILocation(line: 516, column: 19, scope: !12320)
!12338 = !DILocation(line: 516, column: 7, scope: !12320)
!12339 = !DILocation(line: 516, column: 17, scope: !12320)
!12340 = !DILocation(line: 519, column: 3, scope: !12320)
!12341 = !DILocation(line: 519, column: 33, scope: !12320)
!12342 = !DILocation(line: 518, column: 19, scope: !12320)
!12343 = !DILocation(line: 518, column: 7, scope: !12320)
!12344 = !DILocation(line: 518, column: 17, scope: !12320)
!12345 = !DILocation(line: 521, column: 3, scope: !12320)
!12346 = !{i32 0, i32 769}
!12347 = !DILocation(line: 520, column: 19, scope: !12320)
!12348 = !DILocation(line: 520, column: 7, scope: !12320)
!12349 = !DILocation(line: 520, column: 17, scope: !12320)
!12350 = !DILocation(line: 522, column: 2, scope: !12320)
!12351 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1819, file: !1819, line: 205, type: !12352, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12354)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!208, !1722}
!12354 = !{!12355, !12356}
!12355 = !DILocalVariable(name: "dev", arg: 1, scope: !12351, file: !1819, line: 205, type: !1722)
!12356 = !DILocalVariable(name: "config", scope: !12351, file: !1819, line: 207, type: !12117)
!12357 = !DILocation(line: 0, scope: !12351)
!12358 = !DILocation(line: 207, column: 48, scope: !12351)
!12359 = !DILocation(line: 209, column: 36, scope: !12351)
!12360 = !DILocation(line: 209, column: 9, scope: !12351)
!12361 = !DILocation(line: 209, column: 2, scope: !12351)
!12362 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1819, file: !1819, line: 270, type: !12363, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12365)
!12363 = !DISubroutineType(types: !12364)
!12364 = !{!1688, !208}
!12365 = !{!12366}
!12366 = !DILocalVariable(name: "parity", arg: 1, scope: !12362, file: !1819, line: 270, type: !208)
!12367 = !DILocation(line: 0, scope: !12362)
!12368 = !DILocation(line: 272, column: 2, scope: !12362)
!12369 = !DILocation(line: 281, column: 1, scope: !12362)
!12370 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1819, file: !1819, line: 220, type: !12352, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12371)
!12371 = !{!12372, !12373}
!12372 = !DILocalVariable(name: "dev", arg: 1, scope: !12370, file: !1819, line: 220, type: !1722)
!12373 = !DILocalVariable(name: "config", scope: !12370, file: !1819, line: 222, type: !12117)
!12374 = !DILocation(line: 0, scope: !12370)
!12375 = !DILocation(line: 222, column: 48, scope: !12370)
!12376 = !DILocation(line: 224, column: 44, scope: !12370)
!12377 = !DILocation(line: 224, column: 9, scope: !12370)
!12378 = !DILocation(line: 224, column: 2, scope: !12370)
!12379 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1819, file: !1819, line: 304, type: !12380, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12382)
!12380 = !DISubroutineType(types: !12381)
!12381 = !{!1702, !208}
!12382 = !{!12383}
!12383 = !DILocalVariable(name: "sb", arg: 1, scope: !12379, file: !1819, line: 304, type: !208)
!12384 = !DILocation(line: 0, scope: !12379)
!12385 = !DILocation(line: 306, column: 2, scope: !12379)
!12386 = !DILocation(line: 0, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12379, file: !1819, line: 306, column: 14)
!12388 = !DILocation(line: 323, column: 1, scope: !12379)
!12389 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1819, file: !1819, line: 235, type: !12352, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12390)
!12390 = !{!12391, !12392}
!12391 = !DILocalVariable(name: "dev", arg: 1, scope: !12389, file: !1819, line: 235, type: !1722)
!12392 = !DILocalVariable(name: "config", scope: !12389, file: !1819, line: 237, type: !12117)
!12393 = !DILocation(line: 0, scope: !12389)
!12394 = !DILocation(line: 237, column: 48, scope: !12389)
!12395 = !DILocation(line: 239, column: 39, scope: !12389)
!12396 = !DILocation(line: 239, column: 9, scope: !12389)
!12397 = !DILocation(line: 239, column: 2, scope: !12389)
!12398 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1819, file: !1819, line: 355, type: !12399, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12401)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{!1695, !208, !208}
!12401 = !{!12402, !12403}
!12402 = !DILocalVariable(name: "db", arg: 1, scope: !12398, file: !1819, line: 355, type: !208)
!12403 = !DILocalVariable(name: "p", arg: 2, scope: !12398, file: !1819, line: 356, type: !208)
!12404 = !DILocation(line: 0, scope: !12398)
!12405 = !DILocation(line: 358, column: 2, scope: !12398)
!12406 = !DILocation(line: 384, column: 1, scope: !12398)
!12407 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1819, file: !1819, line: 250, type: !12352, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12408)
!12408 = !{!12409, !12410}
!12409 = !DILocalVariable(name: "dev", arg: 1, scope: !12407, file: !1819, line: 250, type: !1722)
!12410 = !DILocalVariable(name: "config", scope: !12407, file: !1819, line: 252, type: !12117)
!12411 = !DILocation(line: 0, scope: !12407)
!12412 = !DILocation(line: 252, column: 48, scope: !12407)
!12413 = !DILocation(line: 254, column: 40, scope: !12407)
!12414 = !DILocation(line: 254, column: 9, scope: !12407)
!12415 = !DILocation(line: 254, column: 2, scope: !12407)
!12416 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1819, file: !1819, line: 409, type: !12417, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!1708, !208}
!12419 = !{!12420}
!12420 = !DILocalVariable(name: "fc", arg: 1, scope: !12416, file: !1819, line: 409, type: !208)
!12421 = !DILocation(line: 0, scope: !12416)
!12422 = !DILocation(line: 411, column: 9, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12416, file: !1819, line: 411, column: 6)
!12424 = !DILocation(line: 416, column: 1, scope: !12416)
!12425 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12426, file: !12426, line: 967, type: !12427, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12429)
!12426 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12427 = !DISubroutineType(types: !12428)
!12428 = !{!208, !1763}
!12429 = !{!12430}
!12430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12425, file: !12426, line: 967, type: !1763)
!12431 = !DILocation(line: 0, scope: !12425)
!12432 = !DILocation(line: 969, column: 21, scope: !12425)
!12433 = !DILocation(line: 969, column: 3, scope: !12425)
!12434 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12426, file: !12426, line: 601, type: !12427, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12435)
!12435 = !{!12436}
!12436 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12434, file: !12426, line: 601, type: !1763)
!12437 = !DILocation(line: 0, scope: !12434)
!12438 = !DILocation(line: 603, column: 21, scope: !12434)
!12439 = !DILocation(line: 603, column: 3, scope: !12434)
!12440 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12426, file: !12426, line: 820, type: !12427, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12441)
!12441 = !{!12442}
!12442 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12440, file: !12426, line: 820, type: !1763)
!12443 = !DILocation(line: 0, scope: !12440)
!12444 = !DILocation(line: 822, column: 21, scope: !12440)
!12445 = !DILocation(line: 822, column: 3, scope: !12440)
!12446 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12426, file: !12426, line: 547, type: !12427, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12447)
!12447 = !{!12448}
!12448 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12446, file: !12426, line: 547, type: !1763)
!12449 = !DILocation(line: 0, scope: !12446)
!12450 = !DILocation(line: 549, column: 21, scope: !12446)
!12451 = !DILocation(line: 549, column: 3, scope: !12446)
!12452 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1819, file: !1819, line: 257, type: !12453, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12455)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!208, !1688}
!12455 = !{!12456}
!12456 = !DILocalVariable(name: "parity", arg: 1, scope: !12452, file: !1819, line: 257, type: !1688)
!12457 = !DILocation(line: 0, scope: !12452)
!12458 = !DILocation(line: 259, column: 2, scope: !12452)
!12459 = !DILocation(line: 268, column: 1, scope: !12452)
!12460 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1819, file: !1819, line: 283, type: !12461, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12463)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{!208, !1702}
!12463 = !{!12464}
!12464 = !DILocalVariable(name: "sb", arg: 1, scope: !12460, file: !1819, line: 283, type: !1702)
!12465 = !DILocation(line: 0, scope: !12460)
!12466 = !DILocation(line: 285, column: 2, scope: !12460)
!12467 = !DILocation(line: 0, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12460, file: !1819, line: 285, column: 14)
!12469 = !DILocation(line: 302, column: 1, scope: !12460)
!12470 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1819, file: !1819, line: 325, type: !12471, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12473)
!12471 = !DISubroutineType(types: !12472)
!12472 = !{!208, !1695, !1688}
!12473 = !{!12474, !12475}
!12474 = !DILocalVariable(name: "db", arg: 1, scope: !12470, file: !1819, line: 325, type: !1695)
!12475 = !DILocalVariable(name: "p", arg: 2, scope: !12470, file: !1819, line: 326, type: !1688)
!12476 = !DILocation(line: 0, scope: !12470)
!12477 = !DILocation(line: 328, column: 2, scope: !12470)
!12478 = !DILocation(line: 353, column: 1, scope: !12470)
!12479 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1819, file: !1819, line: 393, type: !12480, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12482)
!12480 = !DISubroutineType(types: !12481)
!12481 = !{!208, !1708}
!12482 = !{!12483}
!12483 = !DILocalVariable(name: "fc", arg: 1, scope: !12479, file: !1819, line: 393, type: !1708)
!12484 = !DILocation(line: 0, scope: !12479)
!12485 = !DILocation(line: 395, column: 9, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12479, file: !1819, line: 395, column: 6)
!12487 = !DILocation(line: 400, column: 1, scope: !12479)
!12488 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12426, file: !12426, line: 424, type: !12489, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12491)
!12489 = !DISubroutineType(types: !12490)
!12490 = !{null, !1763}
!12491 = !{!12492}
!12492 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12488, file: !12426, line: 424, type: !1763)
!12493 = !DILocation(line: 0, scope: !12488)
!12494 = !DILocation(line: 426, column: 3, scope: !12488)
!12495 = !DILocation(line: 427, column: 1, scope: !12488)
!12496 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1819, file: !1819, line: 197, type: !12497, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12499)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{null, !1722, !208}
!12499 = !{!12500, !12501, !12502}
!12500 = !DILocalVariable(name: "dev", arg: 1, scope: !12496, file: !1819, line: 197, type: !1722)
!12501 = !DILocalVariable(name: "parity", arg: 2, scope: !12496, file: !1819, line: 198, type: !208)
!12502 = !DILocalVariable(name: "config", scope: !12496, file: !1819, line: 200, type: !12117)
!12503 = !DILocation(line: 0, scope: !12496)
!12504 = !DILocation(line: 200, column: 48, scope: !12496)
!12505 = !DILocation(line: 202, column: 29, scope: !12496)
!12506 = !DILocation(line: 202, column: 2, scope: !12496)
!12507 = !DILocation(line: 203, column: 1, scope: !12496)
!12508 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1819, file: !1819, line: 212, type: !12497, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12509)
!12509 = !{!12510, !12511, !12512}
!12510 = !DILocalVariable(name: "dev", arg: 1, scope: !12508, file: !1819, line: 212, type: !1722)
!12511 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12508, file: !1819, line: 213, type: !208)
!12512 = !DILocalVariable(name: "config", scope: !12508, file: !1819, line: 215, type: !12117)
!12513 = !DILocation(line: 0, scope: !12508)
!12514 = !DILocation(line: 215, column: 48, scope: !12508)
!12515 = !DILocation(line: 217, column: 37, scope: !12508)
!12516 = !DILocation(line: 217, column: 2, scope: !12508)
!12517 = !DILocation(line: 218, column: 1, scope: !12508)
!12518 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1819, file: !1819, line: 227, type: !12497, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12519)
!12519 = !{!12520, !12521, !12522}
!12520 = !DILocalVariable(name: "dev", arg: 1, scope: !12518, file: !1819, line: 227, type: !1722)
!12521 = !DILocalVariable(name: "databits", arg: 2, scope: !12518, file: !1819, line: 228, type: !208)
!12522 = !DILocalVariable(name: "config", scope: !12518, file: !1819, line: 230, type: !12117)
!12523 = !DILocation(line: 0, scope: !12518)
!12524 = !DILocation(line: 230, column: 48, scope: !12518)
!12525 = !DILocation(line: 232, column: 32, scope: !12518)
!12526 = !DILocation(line: 232, column: 2, scope: !12518)
!12527 = !DILocation(line: 233, column: 1, scope: !12518)
!12528 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1819, file: !1819, line: 242, type: !12497, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12529)
!12529 = !{!12530, !12531, !12532}
!12530 = !DILocalVariable(name: "dev", arg: 1, scope: !12528, file: !1819, line: 242, type: !1722)
!12531 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12528, file: !1819, line: 243, type: !208)
!12532 = !DILocalVariable(name: "config", scope: !12528, file: !1819, line: 245, type: !12117)
!12533 = !DILocation(line: 0, scope: !12528)
!12534 = !DILocation(line: 245, column: 48, scope: !12528)
!12535 = !DILocation(line: 247, column: 33, scope: !12528)
!12536 = !DILocation(line: 247, column: 2, scope: !12528)
!12537 = !DILocation(line: 248, column: 1, scope: !12528)
!12538 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1819, file: !1819, line: 107, type: !12497, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12539)
!12539 = !{!12540, !12541, !12542, !12543, !12544}
!12540 = !DILocalVariable(name: "dev", arg: 1, scope: !12538, file: !1819, line: 107, type: !1722)
!12541 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12538, file: !1819, line: 107, type: !208)
!12542 = !DILocalVariable(name: "config", scope: !12538, file: !1819, line: 109, type: !12117)
!12543 = !DILocalVariable(name: "data", scope: !12538, file: !1819, line: 110, type: !12240)
!12544 = !DILocalVariable(name: "clock_rate", scope: !12538, file: !1819, line: 112, type: !208)
!12545 = !DILocation(line: 0, scope: !12538)
!12546 = !DILocation(line: 109, column: 48, scope: !12538)
!12547 = !DILocation(line: 110, column: 38, scope: !12538)
!12548 = !DILocation(line: 112, column: 2, scope: !12538)
!12549 = !DILocation(line: 123, column: 36, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !1819, line: 123, column: 7)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !1819, line: 122, column: 9)
!12552 = distinct !DILexicalBlock(scope: !12538, file: !1819, line: 115, column: 6)
!12553 = !DILocation(line: 124, column: 42, scope: !12550)
!12554 = !DILocation(line: 123, column: 7, scope: !12550)
!12555 = !DILocation(line: 125, column: 22, scope: !12550)
!12556 = !DILocation(line: 123, column: 7, scope: !12551)
!12557 = !DILocation(line: 126, column: 4, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12559, file: !1819, line: 126, column: 4)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !1819, line: 126, column: 4)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !1819, line: 126, column: 4)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !1819, line: 126, column: 4)
!12562 = distinct !DILexicalBlock(scope: !12550, file: !1819, line: 125, column: 27)
!12563 = !DILocation(line: 127, column: 4, scope: !12562)
!12564 = !DILocation(line: 176, column: 36, scope: !12538)
!12565 = !DILocation(line: 176, column: 3, scope: !12538)
!12566 = !DILocation(line: 179, column: 32, scope: !12538)
!12567 = !DILocation(line: 180, column: 10, scope: !12538)
!12568 = !DILocation(line: 179, column: 3, scope: !12538)
!12569 = !DILocation(line: 195, column: 1, scope: !12538)
!12570 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12426, file: !12426, line: 410, type: !12489, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12571)
!12571 = !{!12572}
!12572 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12570, file: !12426, line: 410, type: !1763)
!12573 = !DILocation(line: 0, scope: !12570)
!12574 = !DILocation(line: 412, column: 3, scope: !12570)
!12575 = !DILocation(line: 413, column: 1, scope: !12570)
!12576 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !995, file: !995, line: 216, type: !1796, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12577)
!12577 = !{!12578, !12579, !12580, !12581}
!12578 = !DILocalVariable(name: "dev", arg: 1, scope: !12576, file: !995, line: 216, type: !1722)
!12579 = !DILocalVariable(name: "sys", arg: 2, scope: !12576, file: !995, line: 217, type: !1091)
!12580 = !DILocalVariable(name: "rate", arg: 3, scope: !12576, file: !995, line: 218, type: !1047)
!12581 = !DILocalVariable(name: "api", scope: !12576, file: !995, line: 220, type: !1774)
!12582 = !DILocation(line: 0, scope: !12576)
!12583 = !DILocation(line: 221, column: 49, scope: !12576)
!12584 = !DILocation(line: 223, column: 11, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12576, file: !995, line: 223, column: 6)
!12586 = !DILocation(line: 223, column: 20, scope: !12585)
!12587 = !DILocation(line: 223, column: 6, scope: !12576)
!12588 = !DILocation(line: 227, column: 9, scope: !12576)
!12589 = !DILocation(line: 227, column: 2, scope: !12576)
!12590 = !DILocation(line: 228, column: 1, scope: !12576)
!12591 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3527, file: !3527, line: 175, type: !3528, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12592)
!12592 = !{!12593}
!12593 = !DILocalVariable(name: "level", arg: 1, scope: !12591, file: !3527, line: 175, type: !125)
!12594 = !DILocation(line: 0, scope: !12591)
!12595 = !DILocation(line: 177, column: 2, scope: !12591)
!12596 = !DILocation(line: 189, column: 1, scope: !12591)
!12597 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12426, file: !12426, line: 615, type: !12598, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{null, !1763, !208}
!12600 = !{!12601, !12602}
!12601 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12597, file: !12426, line: 615, type: !1763)
!12602 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12597, file: !12426, line: 615, type: !208)
!12603 = !DILocation(line: 0, scope: !12597)
!12604 = !DILocation(line: 617, column: 3, scope: !12597)
!12605 = !DILocation(line: 618, column: 1, scope: !12597)
!12606 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12426, file: !12426, line: 1020, type: !12607, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12609)
!12607 = !DISubroutineType(types: !12608)
!12608 = !{null, !1763, !208, !208, !208}
!12609 = !{!12610, !12611, !12612, !12613}
!12610 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12606, file: !12426, line: 1020, type: !1763)
!12611 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12606, file: !12426, line: 1020, type: !208)
!12612 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12606, file: !12426, line: 1020, type: !208)
!12613 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12606, file: !12426, line: 1021, type: !208)
!12614 = !DILocation(line: 0, scope: !12606)
!12615 = !DILocation(line: 1029, column: 30, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12617, file: !12426, line: 1028, column: 3)
!12617 = distinct !DILexicalBlock(scope: !12606, file: !12426, line: 1023, column: 7)
!12618 = !DILocation(line: 1029, column: 19, scope: !12616)
!12619 = !DILocation(line: 1029, column: 13, scope: !12616)
!12620 = !DILocation(line: 1029, column: 17, scope: !12616)
!12621 = !DILocation(line: 1031, column: 1, scope: !12606)
!12622 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12426, file: !12426, line: 949, type: !12598, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12623)
!12623 = !{!12624, !12625}
!12624 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12622, file: !12426, line: 949, type: !1763)
!12625 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12622, file: !12426, line: 949, type: !208)
!12626 = !DILocation(line: 0, scope: !12622)
!12627 = !DILocation(line: 951, column: 3, scope: !12622)
!12628 = !DILocation(line: 952, column: 1, scope: !12622)
!12629 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12426, file: !12426, line: 588, type: !12598, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12630)
!12630 = !{!12631, !12632}
!12631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12629, file: !12426, line: 588, type: !1763)
!12632 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12629, file: !12426, line: 588, type: !208)
!12633 = !DILocation(line: 0, scope: !12629)
!12634 = !DILocation(line: 590, column: 3, scope: !12629)
!12635 = !DILocation(line: 591, column: 1, scope: !12629)
!12636 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12426, file: !12426, line: 805, type: !12598, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12637)
!12637 = !{!12638, !12639}
!12638 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12636, file: !12426, line: 805, type: !1763)
!12639 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12636, file: !12426, line: 805, type: !208)
!12640 = !DILocation(line: 0, scope: !12636)
!12641 = !DILocation(line: 807, column: 3, scope: !12636)
!12642 = !DILocation(line: 808, column: 1, scope: !12636)
!12643 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12426, file: !12426, line: 532, type: !12598, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12644)
!12644 = !{!12645, !12646}
!12645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12643, file: !12426, line: 532, type: !1763)
!12646 = !DILocalVariable(name: "Parity", arg: 2, scope: !12643, file: !12426, line: 532, type: !208)
!12647 = !DILocation(line: 0, scope: !12643)
!12648 = !DILocation(line: 534, column: 3, scope: !12643)
!12649 = !DILocation(line: 535, column: 1, scope: !12643)
!12650 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12426, file: !12426, line: 1770, type: !12427, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12651)
!12651 = !{!12652}
!12652 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12650, file: !12426, line: 1770, type: !1763)
!12653 = !DILocation(line: 0, scope: !12650)
!12654 = !DILocation(line: 1772, column: 11, scope: !12650)
!12655 = !DILocation(line: 1772, column: 46, scope: !12650)
!12656 = !DILocation(line: 1772, column: 3, scope: !12650)
!12657 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12426, file: !12426, line: 1737, type: !12427, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12658)
!12658 = !{!12659}
!12659 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12657, file: !12426, line: 1737, type: !1763)
!12660 = !DILocation(line: 0, scope: !12657)
!12661 = !DILocation(line: 1739, column: 11, scope: !12657)
!12662 = !DILocation(line: 1739, column: 3, scope: !12657)
!12663 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12426, file: !12426, line: 1748, type: !12427, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12664)
!12664 = !{!12665}
!12665 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12663, file: !12426, line: 1748, type: !1763)
!12666 = !DILocation(line: 0, scope: !12663)
!12667 = !DILocation(line: 1750, column: 11, scope: !12663)
!12668 = !DILocation(line: 1750, column: 45, scope: !12663)
!12669 = !DILocation(line: 1750, column: 3, scope: !12663)
!12670 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12426, file: !12426, line: 1827, type: !12427, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12671)
!12671 = !{!12672}
!12672 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12670, file: !12426, line: 1827, type: !1763)
!12673 = !DILocation(line: 0, scope: !12670)
!12674 = !DILocation(line: 1829, column: 11, scope: !12670)
!12675 = !DILocation(line: 1829, column: 46, scope: !12670)
!12676 = !DILocation(line: 1829, column: 3, scope: !12670)
!12677 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12426, file: !12426, line: 1992, type: !12489, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12678)
!12678 = !{!12679}
!12679 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12677, file: !12426, line: 1992, type: !1763)
!12680 = !DILocation(line: 0, scope: !12677)
!12681 = !DILocation(line: 1994, column: 3, scope: !12677)
!12682 = !DILocation(line: 1995, column: 1, scope: !12677)
!12683 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12426, file: !12426, line: 1934, type: !12489, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12684)
!12684 = !{!12685, !12686}
!12685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12683, file: !12426, line: 1934, type: !1763)
!12686 = !DILocalVariable(name: "tmpreg", scope: !12683, file: !12426, line: 1936, type: !423)
!12687 = !DILocation(line: 0, scope: !12683)
!12688 = !DILocation(line: 1936, column: 3, scope: !12683)
!12689 = !DILocation(line: 1936, column: 17, scope: !12683)
!12690 = !DILocation(line: 1937, column: 20, scope: !12683)
!12691 = !DILocation(line: 1937, column: 10, scope: !12683)
!12692 = !DILocation(line: 1938, column: 10, scope: !12683)
!12693 = !DILocation(line: 1939, column: 20, scope: !12683)
!12694 = !DILocation(line: 1939, column: 10, scope: !12683)
!12695 = !DILocation(line: 1940, column: 10, scope: !12683)
!12696 = !DILocation(line: 1941, column: 1, scope: !12683)
!12697 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12426, file: !12426, line: 1877, type: !12489, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12698)
!12698 = !{!12699, !12700}
!12699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12697, file: !12426, line: 1877, type: !1763)
!12700 = !DILocalVariable(name: "tmpreg", scope: !12697, file: !12426, line: 1879, type: !423)
!12701 = !DILocation(line: 0, scope: !12697)
!12702 = !DILocation(line: 1879, column: 3, scope: !12697)
!12703 = !DILocation(line: 1879, column: 17, scope: !12697)
!12704 = !DILocation(line: 1880, column: 20, scope: !12697)
!12705 = !DILocation(line: 1880, column: 10, scope: !12697)
!12706 = !DILocation(line: 1881, column: 10, scope: !12697)
!12707 = !DILocation(line: 1882, column: 20, scope: !12697)
!12708 = !DILocation(line: 1882, column: 10, scope: !12697)
!12709 = !DILocation(line: 1883, column: 10, scope: !12697)
!12710 = !DILocation(line: 1884, column: 1, scope: !12697)
!12711 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12426, file: !12426, line: 1896, type: !12489, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12712)
!12712 = !{!12713, !12714}
!12713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12711, file: !12426, line: 1896, type: !1763)
!12714 = !DILocalVariable(name: "tmpreg", scope: !12711, file: !12426, line: 1898, type: !423)
!12715 = !DILocation(line: 0, scope: !12711)
!12716 = !DILocation(line: 1898, column: 3, scope: !12711)
!12717 = !DILocation(line: 1898, column: 17, scope: !12711)
!12718 = !DILocation(line: 1899, column: 20, scope: !12711)
!12719 = !DILocation(line: 1899, column: 10, scope: !12711)
!12720 = !DILocation(line: 1900, column: 10, scope: !12711)
!12721 = !DILocation(line: 1901, column: 20, scope: !12711)
!12722 = !DILocation(line: 1901, column: 10, scope: !12711)
!12723 = !DILocation(line: 1902, column: 10, scope: !12711)
!12724 = !DILocation(line: 1903, column: 1, scope: !12711)
!12725 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12426, file: !12426, line: 1915, type: !12489, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12726)
!12726 = !{!12727, !12728}
!12727 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12725, file: !12426, line: 1915, type: !1763)
!12728 = !DILocalVariable(name: "tmpreg", scope: !12725, file: !12426, line: 1917, type: !423)
!12729 = !DILocation(line: 0, scope: !12725)
!12730 = !DILocation(line: 1917, column: 3, scope: !12725)
!12731 = !DILocation(line: 1917, column: 17, scope: !12725)
!12732 = !DILocation(line: 1918, column: 20, scope: !12725)
!12733 = !DILocation(line: 1918, column: 10, scope: !12725)
!12734 = !DILocation(line: 1919, column: 10, scope: !12725)
!12735 = !DILocation(line: 1920, column: 20, scope: !12725)
!12736 = !DILocation(line: 1920, column: 10, scope: !12725)
!12737 = !DILocation(line: 1921, column: 10, scope: !12725)
!12738 = !DILocation(line: 1922, column: 1, scope: !12725)
!12739 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12426, file: !12426, line: 1814, type: !12427, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12740)
!12740 = !{!12741}
!12741 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12739, file: !12426, line: 1814, type: !1763)
!12742 = !DILocation(line: 0, scope: !12739)
!12743 = !DILocation(line: 1816, column: 11, scope: !12739)
!12744 = !DILocation(line: 1816, column: 46, scope: !12739)
!12745 = !DILocation(line: 1816, column: 3, scope: !12739)
!12746 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12426, file: !12426, line: 2426, type: !12747, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12749)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !1763, !150}
!12749 = !{!12750, !12751}
!12750 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12746, file: !12426, line: 2426, type: !1763)
!12751 = !DILocalVariable(name: "Value", arg: 2, scope: !12746, file: !12426, line: 2426, type: !150)
!12752 = !DILocation(line: 0, scope: !12746)
!12753 = !DILocation(line: 2428, column: 16, scope: !12746)
!12754 = !DILocation(line: 2428, column: 11, scope: !12746)
!12755 = !DILocation(line: 2428, column: 14, scope: !12746)
!12756 = !DILocation(line: 2429, column: 1, scope: !12746)
!12757 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12426, file: !12426, line: 1792, type: !12427, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12758)
!12758 = !{!12759}
!12759 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12757, file: !12426, line: 1792, type: !1763)
!12760 = !DILocation(line: 0, scope: !12757)
!12761 = !DILocation(line: 1794, column: 11, scope: !12757)
!12762 = !DILocation(line: 1794, column: 47, scope: !12757)
!12763 = !DILocation(line: 1794, column: 3, scope: !12757)
!12764 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12426, file: !12426, line: 2403, type: !12765, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12767)
!12765 = !DISubroutineType(types: !12766)
!12766 = !{!150, !1763}
!12767 = !{!12768}
!12768 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12764, file: !12426, line: 2403, type: !1763)
!12769 = !DILocation(line: 0, scope: !12764)
!12770 = !DILocation(line: 2405, column: 20, scope: !12764)
!12771 = !DILocation(line: 2405, column: 10, scope: !12764)
!12772 = !DILocation(line: 2405, column: 3, scope: !12764)
!12773 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1819, file: !1819, line: 1583, type: !1743, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12774)
!12774 = !{!12775, !12776, !12777, !12778, !12779, !12780}
!12775 = !DILocalVariable(name: "dev", arg: 1, scope: !12773, file: !1819, line: 1583, type: !1722)
!12776 = !DILocalVariable(name: "config", scope: !12773, file: !1819, line: 1585, type: !12117)
!12777 = !DILocalVariable(name: "data", scope: !12773, file: !1819, line: 1586, type: !12240)
!12778 = !DILocalVariable(name: "ll_parity", scope: !12773, file: !1819, line: 1587, type: !208)
!12779 = !DILocalVariable(name: "ll_datawidth", scope: !12773, file: !1819, line: 1588, type: !208)
!12780 = !DILocalVariable(name: "err", scope: !12773, file: !1819, line: 1589, type: !125)
!12781 = !DILocation(line: 0, scope: !12773)
!12782 = !DILocation(line: 1585, column: 48, scope: !12773)
!12783 = !DILocation(line: 1586, column: 38, scope: !12773)
!12784 = !DILocation(line: 1591, column: 2, scope: !12773)
!12785 = !DILocation(line: 1593, column: 29, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12773, file: !1819, line: 1593, column: 6)
!12787 = !DILocation(line: 1593, column: 7, scope: !12786)
!12788 = !DILocation(line: 1593, column: 6, scope: !12773)
!12789 = !DILocation(line: 1594, column: 3, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12791, file: !1819, line: 1594, column: 3)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !1819, line: 1594, column: 3)
!12792 = distinct !DILexicalBlock(scope: !12793, file: !1819, line: 1594, column: 3)
!12793 = distinct !DILexicalBlock(scope: !12794, file: !1819, line: 1594, column: 3)
!12794 = distinct !DILexicalBlock(scope: !12786, file: !1819, line: 1593, column: 37)
!12795 = !DILocation(line: 1595, column: 3, scope: !12794)
!12796 = !DILocation(line: 1599, column: 31, scope: !12773)
!12797 = !DILocation(line: 1599, column: 71, scope: !12773)
!12798 = !DILocation(line: 1599, column: 8, scope: !12773)
!12799 = !DILocation(line: 1600, column: 10, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12773, file: !1819, line: 1600, column: 6)
!12801 = !DILocation(line: 1600, column: 6, scope: !12773)
!12802 = !DILocation(line: 1601, column: 3, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12804, file: !1819, line: 1601, column: 3)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !1819, line: 1601, column: 3)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !1819, line: 1601, column: 3)
!12806 = distinct !DILexicalBlock(scope: !12807, file: !1819, line: 1601, column: 3)
!12807 = distinct !DILexicalBlock(scope: !12800, file: !1819, line: 1600, column: 16)
!12808 = !DILocation(line: 1602, column: 3, scope: !12807)
!12809 = !DILocation(line: 1616, column: 36, scope: !12773)
!12810 = !DILocation(line: 1616, column: 8, scope: !12773)
!12811 = !DILocation(line: 1617, column: 10, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12773, file: !1819, line: 1617, column: 6)
!12813 = !DILocation(line: 1617, column: 6, scope: !12773)
!12814 = !DILocation(line: 1621, column: 27, scope: !12773)
!12815 = !DILocation(line: 1621, column: 2, scope: !12773)
!12816 = !DILocation(line: 1624, column: 40, scope: !12773)
!12817 = !DILocation(line: 1624, column: 2, scope: !12773)
!12818 = !DILocation(line: 1630, column: 14, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12773, file: !1819, line: 1630, column: 6)
!12820 = !DILocation(line: 1630, column: 6, scope: !12773)
!12821 = !DILocation(line: 1640, column: 4, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12823, file: !1819, line: 1640, column: 4)
!12823 = distinct !DILexicalBlock(scope: !12824, file: !1819, line: 1640, column: 4)
!12824 = distinct !DILexicalBlock(scope: !12825, file: !1819, line: 1640, column: 4)
!12825 = distinct !DILexicalBlock(scope: !12826, file: !1819, line: 1640, column: 4)
!12826 = distinct !DILexicalBlock(scope: !12827, file: !1819, line: 1639, column: 28)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !1819, line: 1639, column: 7)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !1819, line: 1638, column: 9)
!12829 = distinct !DILexicalBlock(scope: !12819, file: !1819, line: 1634, column: 13)
!12830 = !DILocation(line: 0, scope: !12819)
!12831 = !DILocation(line: 1649, column: 35, scope: !12773)
!12832 = !DILocation(line: 1649, column: 2, scope: !12773)
!12833 = !DILocation(line: 1654, column: 14, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12773, file: !1819, line: 1654, column: 6)
!12835 = !DILocation(line: 1654, column: 6, scope: !12773)
!12836 = !DILocation(line: 1655, column: 3, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12834, file: !1819, line: 1654, column: 31)
!12838 = !DILocation(line: 1656, column: 2, scope: !12837)
!12839 = !DILocation(line: 1659, column: 37, scope: !12773)
!12840 = !DILocation(line: 1659, column: 2, scope: !12773)
!12841 = !DILocation(line: 1662, column: 14, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12773, file: !1819, line: 1662, column: 6)
!12843 = !DILocation(line: 1662, column: 6, scope: !12773)
!12844 = !DILocation(line: 1663, column: 37, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12842, file: !1819, line: 1662, column: 27)
!12846 = !DILocation(line: 1663, column: 3, scope: !12845)
!12847 = !DILocation(line: 1664, column: 2, scope: !12845)
!12848 = !DILocation(line: 1684, column: 26, scope: !12773)
!12849 = !DILocation(line: 1684, column: 2, scope: !12773)
!12850 = !DILocation(line: 1722, column: 2, scope: !12773)
!12851 = !DILocation(line: 1724, column: 1, scope: !12773)
!12852 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1819, file: !1819, line: 651, type: !12853, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12855)
!12853 = !DISubroutineType(types: !12854)
!12854 = !{null, !1722}
!12855 = !{!12856, !12857, !12858}
!12856 = !DILocalVariable(name: "dev", arg: 1, scope: !12852, file: !1819, line: 651, type: !1722)
!12857 = !DILocalVariable(name: "data", scope: !12852, file: !1819, line: 653, type: !12240)
!12858 = !DILocalVariable(name: "clk", scope: !12852, file: !1819, line: 654, type: !12859)
!12859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!12860 = !DILocation(line: 0, scope: !12852)
!12861 = !DILocation(line: 653, column: 38, scope: !12852)
!12862 = !DILocation(line: 656, column: 8, scope: !12852)
!12863 = !DILocation(line: 656, column: 14, scope: !12852)
!12864 = !DILocation(line: 657, column: 1, scope: !12852)
!12865 = distinct !DISubprogram(name: "device_is_ready", scope: !4266, file: !4266, line: 47, type: !12866, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12868)
!12866 = !DISubroutineType(types: !12867)
!12867 = !{!153, !1722}
!12868 = !{!12869}
!12869 = !DILocalVariable(name: "dev", arg: 1, scope: !12865, file: !4266, line: 47, type: !1722)
!12870 = !DILocation(line: 0, scope: !12865)
!12871 = !DILocation(line: 55, column: 2, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12865, file: !4266, line: 55, column: 2)
!12873 = !{i64 2155370472}
!12874 = !DILocation(line: 56, column: 9, scope: !12865)
!12875 = !DILocation(line: 56, column: 2, scope: !12865)
!12876 = distinct !DISubprogram(name: "clock_control_on", scope: !995, file: !995, line: 123, type: !1781, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12877)
!12877 = !{!12878, !12879, !12880}
!12878 = !DILocalVariable(name: "dev", arg: 1, scope: !12876, file: !995, line: 123, type: !1722)
!12879 = !DILocalVariable(name: "sys", arg: 2, scope: !12876, file: !995, line: 124, type: !1091)
!12880 = !DILocalVariable(name: "api", scope: !12876, file: !995, line: 126, type: !1774)
!12881 = !DILocation(line: 0, scope: !12876)
!12882 = !DILocation(line: 127, column: 49, scope: !12876)
!12883 = !DILocation(line: 129, column: 14, scope: !12876)
!12884 = !DILocation(line: 129, column: 9, scope: !12876)
!12885 = !DILocation(line: 129, column: 2, scope: !12876)
!12886 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1881, file: !1881, line: 342, type: !12887, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12889)
!12887 = !DISubroutineType(types: !12888)
!12888 = !{!125, !1878, !150}
!12889 = !{!12890, !12891, !12892, !12893}
!12890 = !DILocalVariable(name: "config", arg: 1, scope: !12886, file: !1881, line: 342, type: !1878)
!12891 = !DILocalVariable(name: "id", arg: 2, scope: !12886, file: !1881, line: 343, type: !150)
!12892 = !DILocalVariable(name: "ret", scope: !12886, file: !1881, line: 345, type: !125)
!12893 = !DILocalVariable(name: "state", scope: !12886, file: !1881, line: 346, type: !1884)
!12894 = !DILocation(line: 0, scope: !12886)
!12895 = !DILocation(line: 346, column: 2, scope: !12886)
!12896 = !DILocation(line: 348, column: 8, scope: !12886)
!12897 = !DILocation(line: 349, column: 10, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12886, file: !1881, line: 349, column: 6)
!12899 = !DILocation(line: 349, column: 6, scope: !12886)
!12900 = !DILocation(line: 353, column: 44, scope: !12886)
!12901 = !DILocation(line: 353, column: 9, scope: !12886)
!12902 = !DILocation(line: 353, column: 2, scope: !12886)
!12903 = !DILocation(line: 354, column: 1, scope: !12886)
!12904 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12426, file: !12426, line: 497, type: !12598, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12905)
!12905 = !{!12906, !12907, !12908}
!12906 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12904, file: !12426, line: 497, type: !1763)
!12907 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12904, file: !12426, line: 497, type: !208)
!12908 = !DILocalVariable(name: "val", scope: !12909, file: !12426, line: 499, type: !208)
!12909 = distinct !DILexicalBlock(scope: !12904, file: !12426, line: 499, column: 3)
!12910 = !DILocation(line: 0, scope: !12904)
!12911 = !DILocation(line: 499, column: 3, scope: !12909)
!12912 = !DILocalVariable(name: "addr", arg: 1, scope: !12913, file: !8372, line: 476, type: !1815)
!12913 = distinct !DISubprogram(name: "__LDREXW", scope: !8372, file: !8372, line: 476, type: !12914, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12916)
!12914 = !DISubroutineType(types: !12915)
!12915 = !{!208, !1815}
!12916 = !{!12912, !12917}
!12917 = !DILocalVariable(name: "result", scope: !12913, file: !8372, line: 478, type: !208)
!12918 = !DILocation(line: 0, scope: !12913, inlinedAt: !12919)
!12919 = distinct !DILocation(line: 499, column: 3, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12909, file: !12426, line: 499, column: 3)
!12921 = !DILocation(line: 480, column: 4, scope: !12913, inlinedAt: !12919)
!12922 = !{i64 3759791}
!12923 = !DILocation(line: 499, column: 3, scope: !12920)
!12924 = !DILocation(line: 0, scope: !12909)
!12925 = !DILocalVariable(name: "value", arg: 1, scope: !12926, file: !8372, line: 527, type: !208)
!12926 = distinct !DISubprogram(name: "__STREXW", scope: !8372, file: !8372, line: 527, type: !12927, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12929)
!12927 = !DISubroutineType(types: !12928)
!12928 = !{!208, !208, !1815}
!12929 = !{!12925, !12930, !12931}
!12930 = !DILocalVariable(name: "addr", arg: 2, scope: !12926, file: !8372, line: 527, type: !1815)
!12931 = !DILocalVariable(name: "result", scope: !12926, file: !8372, line: 529, type: !208)
!12932 = !DILocation(line: 0, scope: !12926, inlinedAt: !12933)
!12933 = distinct !DILocation(line: 499, column: 3, scope: !12909)
!12934 = !DILocation(line: 531, column: 4, scope: !12926, inlinedAt: !12933)
!12935 = !{i64 3761227}
!12936 = distinct !{!12936, !12911, !12911}
!12937 = !DILocation(line: 500, column: 1, scope: !12904)
!12938 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12426, file: !12426, line: 850, type: !12607, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12939)
!12939 = !{!12940, !12941, !12942, !12943}
!12940 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12938, file: !12426, line: 850, type: !1763)
!12941 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12938, file: !12426, line: 850, type: !208)
!12942 = !DILocalVariable(name: "Parity", arg: 3, scope: !12938, file: !12426, line: 850, type: !208)
!12943 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12938, file: !12426, line: 851, type: !208)
!12944 = !DILocation(line: 0, scope: !12938)
!12945 = !DILocation(line: 853, column: 3, scope: !12938)
!12946 = !DILocation(line: 854, column: 3, scope: !12938)
!12947 = !DILocation(line: 855, column: 1, scope: !12938)
!12948 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12426, file: !12426, line: 1337, type: !12489, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12949)
!12949 = !{!12950}
!12950 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12948, file: !12426, line: 1337, type: !1763)
!12951 = !DILocation(line: 0, scope: !12948)
!12952 = !DILocation(line: 1339, column: 3, scope: !12948)
!12953 = !DILocation(line: 1340, column: 1, scope: !12948)
!12954 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1881, file: !1881, line: 316, type: !12955, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12957)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{!125, !1878, !1884}
!12957 = !{!12958, !12959, !12960}
!12958 = !DILocalVariable(name: "config", arg: 1, scope: !12954, file: !1881, line: 317, type: !1878)
!12959 = !DILocalVariable(name: "state", arg: 2, scope: !12954, file: !1881, line: 318, type: !1884)
!12960 = !DILocalVariable(name: "reg", scope: !12954, file: !1881, line: 320, type: !22)
!12961 = !DILocation(line: 0, scope: !12954)
!12962 = !DILocation(line: 329, column: 39, scope: !12954)
!12963 = !DILocation(line: 329, column: 52, scope: !12954)
!12964 = !DILocation(line: 329, column: 9, scope: !12954)
!12965 = !DILocation(line: 329, column: 2, scope: !12954)
!12966 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12866, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12967)
!12967 = !{!12968}
!12968 = !DILocalVariable(name: "dev", arg: 1, scope: !12966, file: !137, line: 730, type: !1722)
!12969 = !DILocation(line: 0, scope: !12966)
!12970 = !DILocation(line: 732, column: 9, scope: !12966)
!12971 = !DILocation(line: 732, column: 2, scope: !12966)
!12972 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2040, file: !2040, line: 270, type: !2046, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !12973)
!12973 = !{!12974}
!12974 = !DILocalVariable(name: "dev", arg: 1, scope: !12972, file: !2040, line: 270, type: !2048)
!12975 = !DILocation(line: 0, scope: !12972)
!12976 = !DILocation(line: 274, column: 2, scope: !12972)
!12977 = !DILocation(line: 275, column: 12, scope: !12972)
!12978 = !DILocation(line: 276, column: 15, scope: !12972)
!12979 = !DILocation(line: 277, column: 16, scope: !12972)
!12980 = !DILocation(line: 278, column: 15, scope: !12972)
!12981 = !DILocation(line: 279, column: 16, scope: !12972)
!12982 = !DILocation(line: 282, column: 2, scope: !12972)
!12983 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8406, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !12984)
!12984 = !{!12985, !12986}
!12985 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12983, file: !680, line: 1814, type: !943)
!12986 = !DILocalVariable(name: "priority", arg: 2, scope: !12983, file: !680, line: 1814, type: !208)
!12987 = !DILocation(line: 0, scope: !12983)
!12988 = !DILocation(line: 1822, column: 46, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !680, line: 1821, column: 3)
!12990 = distinct !DILexicalBlock(scope: !12983, file: !680, line: 1816, column: 7)
!12991 = !DILocation(line: 1824, column: 1, scope: !12983)
!12992 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2040, file: !2040, line: 118, type: !8309, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !12993)
!12993 = !{!12994, !12995}
!12994 = !DILocalVariable(name: "arg", arg: 1, scope: !12992, file: !2040, line: 118, type: !124)
!12995 = !DILocalVariable(name: "dticks", scope: !12992, file: !2040, line: 121, type: !208)
!12996 = !DILocation(line: 0, scope: !12992)
!12997 = !DILocation(line: 124, column: 2, scope: !12992)
!12998 = !DILocation(line: 129, column: 17, scope: !12992)
!12999 = !DILocation(line: 129, column: 14, scope: !12992)
!13000 = !DILocation(line: 130, column: 15, scope: !12992)
!13001 = !DILocation(line: 145, column: 27, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !2040, line: 132, column: 16)
!13003 = distinct !DILexicalBlock(scope: !12992, file: !2040, line: 132, column: 6)
!13004 = !DILocation(line: 145, column: 25, scope: !13002)
!13005 = !DILocation(line: 145, column: 45, scope: !13002)
!13006 = !DILocation(line: 146, column: 30, scope: !13002)
!13007 = !DILocation(line: 146, column: 20, scope: !13002)
!13008 = !DILocation(line: 147, column: 3, scope: !13002)
!13009 = !DILocation(line: 151, column: 2, scope: !12992)
!13010 = !DILocation(line: 152, column: 1, scope: !12992)
!13011 = distinct !DISubprogram(name: "elapsed", scope: !2040, file: !2040, line: 85, type: !8453, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13012)
!13012 = !{!13013, !13014, !13015}
!13013 = !DILocalVariable(name: "val1", scope: !13011, file: !2040, line: 87, type: !208)
!13014 = !DILocalVariable(name: "ctrl", scope: !13011, file: !2040, line: 88, type: !208)
!13015 = !DILocalVariable(name: "val2", scope: !13011, file: !2040, line: 89, type: !208)
!13016 = !DILocation(line: 87, column: 27, scope: !13011)
!13017 = !DILocation(line: 0, scope: !13011)
!13018 = !DILocation(line: 88, column: 27, scope: !13011)
!13019 = !DILocation(line: 89, column: 27, scope: !13011)
!13020 = !DILocation(line: 105, column: 12, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13011, file: !2040, line: 105, column: 6)
!13022 = !DILocation(line: 106, column: 6, scope: !13021)
!13023 = !DILocation(line: 107, column: 16, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13021, file: !2040, line: 106, column: 24)
!13025 = !DILocation(line: 111, column: 18, scope: !13024)
!13026 = !DILocation(line: 112, column: 2, scope: !13024)
!13027 = !DILocation(line: 114, column: 20, scope: !13011)
!13028 = !DILocation(line: 114, column: 30, scope: !13011)
!13029 = !DILocation(line: 114, column: 28, scope: !13011)
!13030 = !DILocation(line: 114, column: 2, scope: !13011)
!13031 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2040, file: !2040, line: 154, type: !13032, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13034)
!13032 = !DISubroutineType(types: !13033)
!13033 = !{null, !917, !153}
!13034 = !{!13035, !13036, !13037, !13038, !13039, !13040, !13041, !13046, !13047}
!13035 = !DILocalVariable(name: "ticks", arg: 1, scope: !13031, file: !2040, line: 154, type: !917)
!13036 = !DILocalVariable(name: "idle", arg: 2, scope: !13031, file: !2040, line: 154, type: !153)
!13037 = !DILocalVariable(name: "delay", scope: !13031, file: !2040, line: 169, type: !208)
!13038 = !DILocalVariable(name: "val1", scope: !13031, file: !2040, line: 170, type: !208)
!13039 = !DILocalVariable(name: "val2", scope: !13031, file: !2040, line: 170, type: !208)
!13040 = !DILocalVariable(name: "last_load_", scope: !13031, file: !2040, line: 171, type: !208)
!13041 = !DILocalVariable(name: "key", scope: !13031, file: !2040, line: 176, type: !13042)
!13042 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !13043)
!13043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !13044)
!13044 = !{!13045}
!13045 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13043, file: !638, line: 33, baseType: !125, size: 32)
!13046 = !DILocalVariable(name: "pending", scope: !13031, file: !2040, line: 178, type: !208)
!13047 = !DILocalVariable(name: "unannounced", scope: !13031, file: !2040, line: 185, type: !208)
!13048 = !DILocation(line: 0, scope: !13031)
!13049 = !DILocation(line: 162, column: 49, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13031, file: !2040, line: 162, column: 6)
!13051 = !DILocation(line: 163, column: 17, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13050, file: !2040, line: 162, column: 78)
!13053 = !DILocation(line: 164, column: 13, scope: !13052)
!13054 = !DILocation(line: 165, column: 3, scope: !13052)
!13055 = !DILocation(line: 171, column: 24, scope: !13031)
!13056 = !DILocation(line: 173, column: 10, scope: !13031)
!13057 = !DILocation(line: 174, column: 10, scope: !13031)
!13058 = !DILocalVariable(name: "l", arg: 1, scope: !13059, file: !638, line: 136, type: !13062)
!13059 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !13060, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13063)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!13042, !13062}
!13062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!13063 = !{!13058, !13064}
!13064 = !DILocalVariable(name: "k", scope: !13059, file: !638, line: 139, type: !13042)
!13065 = !DILocation(line: 0, scope: !13059, inlinedAt: !13066)
!13066 = distinct !DILocation(line: 176, column: 25, scope: !13031)
!13067 = !DILocation(line: 55, column: 2, scope: !13068, inlinedAt: !13072)
!13068 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13069)
!13069 = !{!13070, !13071}
!13070 = !DILocalVariable(name: "key", scope: !13068, file: !6905, line: 44, type: !32)
!13071 = !DILocalVariable(name: "tmp", scope: !13068, file: !6905, line: 53, type: !32)
!13072 = distinct !DILocation(line: 145, column: 10, scope: !13059, inlinedAt: !13066)
!13073 = !{i64 2280643}
!13074 = !DILocation(line: 0, scope: !13068, inlinedAt: !13072)
!13075 = !DILocation(line: 178, column: 21, scope: !13031)
!13076 = !DILocation(line: 180, column: 18, scope: !13031)
!13077 = !DILocation(line: 182, column: 14, scope: !13031)
!13078 = !DILocation(line: 183, column: 15, scope: !13031)
!13079 = !DILocation(line: 185, column: 39, scope: !13031)
!13080 = !DILocation(line: 185, column: 37, scope: !13031)
!13081 = !DILocation(line: 187, column: 27, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13031, file: !2040, line: 187, column: 6)
!13083 = !DILocation(line: 187, column: 6, scope: !13031)
!13084 = !DILocation(line: 202, column: 27, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13082, file: !2040, line: 195, column: 9)
!13086 = !DILocation(line: 202, column: 48, scope: !13085)
!13087 = !DILocation(line: 203, column: 9, scope: !13085)
!13088 = !DILocation(line: 204, column: 11, scope: !13085)
!13089 = !DILocation(line: 205, column: 13, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13085, file: !2040, line: 205, column: 7)
!13091 = !DILocation(line: 205, column: 7, scope: !13085)
!13092 = !DILocation(line: 0, scope: !13082)
!13093 = !DILocation(line: 212, column: 18, scope: !13031)
!13094 = !DILocation(line: 214, column: 28, scope: !13031)
!13095 = !DILocation(line: 214, column: 16, scope: !13031)
!13096 = !DILocation(line: 215, column: 15, scope: !13031)
!13097 = !DILocation(line: 227, column: 11, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13031, file: !2040, line: 227, column: 6)
!13099 = !DILocation(line: 227, column: 6, scope: !13031)
!13100 = !DILocation(line: 228, column: 15, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13098, file: !2040, line: 227, column: 19)
!13102 = !DILocation(line: 228, column: 38, scope: !13101)
!13103 = !DILocation(line: 228, column: 24, scope: !13101)
!13104 = !DILocation(line: 229, column: 2, scope: !13101)
!13105 = !DILocation(line: 230, column: 24, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13098, file: !2040, line: 229, column: 9)
!13107 = !DILocation(line: 230, column: 15, scope: !13106)
!13108 = !DILocation(line: 0, scope: !13098)
!13109 = !DILocalVariable(name: "key", arg: 2, scope: !13110, file: !638, line: 190, type: !13042)
!13110 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !13111, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13113)
!13111 = !DISubroutineType(types: !13112)
!13112 = !{null, !13062, !13042}
!13113 = !{!13114, !13109}
!13114 = !DILocalVariable(name: "l", arg: 1, scope: !13110, file: !638, line: 189, type: !13062)
!13115 = !DILocation(line: 0, scope: !13110, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 232, column: 2, scope: !13031)
!13117 = !DILocalVariable(name: "key", arg: 1, scope: !13118, file: !6905, line: 84, type: !32)
!13118 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13119)
!13119 = !{!13117}
!13120 = !DILocation(line: 0, scope: !13118, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 215, column: 2, scope: !13110, inlinedAt: !13116)
!13122 = !DILocation(line: 95, column: 2, scope: !13118, inlinedAt: !13121)
!13123 = !{i64 2281460}
!13124 = !DILocation(line: 234, column: 1, scope: !13031)
!13125 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2040, file: !2040, line: 236, type: !8453, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13126)
!13126 = !{!13127, !13128}
!13127 = !DILocalVariable(name: "key", scope: !13125, file: !2040, line: 242, type: !13042)
!13128 = !DILocalVariable(name: "cyc", scope: !13125, file: !2040, line: 243, type: !208)
!13129 = !DILocation(line: 0, scope: !13059, inlinedAt: !13130)
!13130 = distinct !DILocation(line: 242, column: 25, scope: !13125)
!13131 = !DILocation(line: 55, column: 2, scope: !13068, inlinedAt: !13132)
!13132 = distinct !DILocation(line: 145, column: 10, scope: !13059, inlinedAt: !13130)
!13133 = !DILocation(line: 0, scope: !13068, inlinedAt: !13132)
!13134 = !DILocation(line: 0, scope: !13125)
!13135 = !DILocation(line: 243, column: 17, scope: !13125)
!13136 = !DILocation(line: 243, column: 29, scope: !13125)
!13137 = !DILocation(line: 243, column: 27, scope: !13125)
!13138 = !DILocation(line: 243, column: 43, scope: !13125)
!13139 = !DILocation(line: 243, column: 41, scope: !13125)
!13140 = !DILocation(line: 0, scope: !13110, inlinedAt: !13141)
!13141 = distinct !DILocation(line: 245, column: 2, scope: !13125)
!13142 = !DILocation(line: 0, scope: !13118, inlinedAt: !13143)
!13143 = distinct !DILocation(line: 215, column: 2, scope: !13110, inlinedAt: !13141)
!13144 = !DILocation(line: 95, column: 2, scope: !13118, inlinedAt: !13143)
!13145 = !DILocation(line: 246, column: 13, scope: !13125)
!13146 = !DILocation(line: 246, column: 2, scope: !13125)
!13147 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2040, file: !2040, line: 249, type: !8453, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !13148)
!13148 = !{!13149, !13150}
!13149 = !DILocalVariable(name: "key", scope: !13147, file: !2040, line: 251, type: !13042)
!13150 = !DILocalVariable(name: "ret", scope: !13147, file: !2040, line: 252, type: !208)
!13151 = !DILocation(line: 0, scope: !13059, inlinedAt: !13152)
!13152 = distinct !DILocation(line: 251, column: 25, scope: !13147)
!13153 = !DILocation(line: 55, column: 2, scope: !13068, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 145, column: 10, scope: !13059, inlinedAt: !13152)
!13155 = !DILocation(line: 0, scope: !13068, inlinedAt: !13154)
!13156 = !DILocation(line: 0, scope: !13147)
!13157 = !DILocation(line: 252, column: 17, scope: !13147)
!13158 = !DILocation(line: 252, column: 29, scope: !13147)
!13159 = !DILocation(line: 252, column: 27, scope: !13147)
!13160 = !DILocation(line: 0, scope: !13110, inlinedAt: !13161)
!13161 = distinct !DILocation(line: 254, column: 2, scope: !13147)
!13162 = !DILocation(line: 0, scope: !13118, inlinedAt: !13163)
!13163 = distinct !DILocation(line: 215, column: 2, scope: !13110, inlinedAt: !13161)
!13164 = !DILocation(line: 95, column: 2, scope: !13118, inlinedAt: !13163)
!13165 = !DILocation(line: 255, column: 2, scope: !13147)
!13166 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2040, file: !2040, line: 258, type: !3363, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !639)
!13167 = !DILocation(line: 260, column: 6, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13166, file: !2040, line: 260, column: 6)
!13169 = !DILocation(line: 260, column: 16, scope: !13168)
!13170 = !DILocation(line: 260, column: 6, scope: !13166)
!13171 = !DILocation(line: 261, column: 17, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13168, file: !2040, line: 260, column: 34)
!13173 = !DILocation(line: 262, column: 2, scope: !13172)
!13174 = !DILocation(line: 263, column: 1, scope: !13166)
!13175 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2040, file: !2040, line: 265, type: !3363, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1962, retainedNodes: !639)
!13176 = !DILocation(line: 267, column: 16, scope: !13175)
!13177 = !DILocation(line: 268, column: 1, scope: !13175)
!13178 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13179, file: !13179, line: 9, type: !13180, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3191, retainedNodes: !13203)
!13179 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13180 = !DISubroutineType(types: !13181)
!13181 = !{!125, !13182, !150, !13202}
!13182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13183, size: 32)
!13183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13184)
!13184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1881, line: 60, size: 64, elements: !13185)
!13185 = !{!13186, !13201}
!13186 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13184, file: !1881, line: 69, baseType: !13187, size: 32)
!13187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13188, size: 32)
!13188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13189)
!13189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1881, line: 50, size: 64, elements: !13190)
!13190 = !{!13191, !13199, !13200}
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13189, file: !1881, line: 52, baseType: !13192, size: 32)
!13192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13193, size: 32)
!13193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13194)
!13194 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1892, line: 37, baseType: !13195)
!13195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1892, line: 32, size: 64, elements: !13196)
!13196 = !{!13197, !13198}
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13195, file: !1892, line: 34, baseType: !208, size: 32)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13195, file: !1892, line: 36, baseType: !208, size: 32, offset: 32)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13189, file: !1881, line: 54, baseType: !150, size: 8, offset: 32)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13189, file: !1881, line: 56, baseType: !150, size: 8, offset: 40)
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13184, file: !1881, line: 71, baseType: !150, size: 8, offset: 32)
!13202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13187, size: 32)
!13203 = !{!13204, !13205, !13206}
!13204 = !DILocalVariable(name: "config", arg: 1, scope: !13178, file: !13179, line: 9, type: !13182)
!13205 = !DILocalVariable(name: "id", arg: 2, scope: !13178, file: !13179, line: 9, type: !150)
!13206 = !DILocalVariable(name: "state", arg: 3, scope: !13178, file: !13179, line: 10, type: !13202)
!13207 = !DILocation(line: 0, scope: !13178)
!13208 = !DILocation(line: 12, column: 20, scope: !13178)
!13209 = !DILocation(line: 13, column: 27, scope: !13178)
!13210 = !DILocation(line: 13, column: 42, scope: !13178)
!13211 = !DILocation(line: 13, column: 19, scope: !13178)
!13212 = !DILocation(line: 13, column: 16, scope: !13178)
!13213 = !DILocation(line: 13, column: 2, scope: !13178)
!13214 = distinct !{!13214, !13213, !13215}
!13215 = !DILocation(line: 19, column: 2, scope: !13178)
!13216 = !DILocation(line: 14, column: 23, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13218, file: !13179, line: 14, column: 7)
!13218 = distinct !DILexicalBlock(scope: !13178, file: !13179, line: 13, column: 54)
!13219 = !DILocation(line: 14, column: 10, scope: !13217)
!13220 = !DILocation(line: 18, column: 11, scope: !13218)
!13221 = !DILocation(line: 14, column: 7, scope: !13218)
!13222 = !DILocation(line: 22, column: 1, scope: !13178)
!13223 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2157, file: !2157, line: 193, type: !13224, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2075, retainedNodes: !13233)
!13224 = !DISubroutineType(types: !13225)
!13225 = !{!125, !13226, !150, !22}
!13226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13227, size: 32)
!13227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1892, line: 37, baseType: !13229)
!13229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1892, line: 32, size: 64, elements: !13230)
!13230 = !{!13231, !13232}
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13229, file: !1892, line: 34, baseType: !208, size: 32)
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13229, file: !1892, line: 36, baseType: !208, size: 32, offset: 32)
!13233 = !{!13234, !13235, !13236, !13237, !13238, !13239, !13240, !13241, !13243}
!13234 = !DILocalVariable(name: "pins", arg: 1, scope: !13223, file: !2157, line: 193, type: !13226)
!13235 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13223, file: !2157, line: 193, type: !150)
!13236 = !DILocalVariable(name: "reg", arg: 3, scope: !13223, file: !2157, line: 194, type: !22)
!13237 = !DILocalVariable(name: "pin", scope: !13223, file: !2157, line: 196, type: !208)
!13238 = !DILocalVariable(name: "mux", scope: !13223, file: !2157, line: 196, type: !208)
!13239 = !DILocalVariable(name: "pin_cgf", scope: !13223, file: !2157, line: 197, type: !208)
!13240 = !DILocalVariable(name: "ret", scope: !13223, file: !2157, line: 198, type: !125)
!13241 = !DILocalVariable(name: "i", scope: !13242, file: !2157, line: 209, type: !150)
!13242 = distinct !DILexicalBlock(scope: !13223, file: !2157, line: 209, column: 2)
!13243 = !DILocalVariable(name: "gpio_out", scope: !13244, file: !2157, line: 239, type: !208)
!13244 = distinct !DILexicalBlock(scope: !13245, file: !2157, line: 238, column: 55)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !2157, line: 238, column: 14)
!13246 = distinct !DILexicalBlock(scope: !13247, file: !2157, line: 236, column: 14)
!13247 = distinct !DILexicalBlock(scope: !13248, file: !2157, line: 234, column: 7)
!13248 = distinct !DILexicalBlock(scope: !13249, file: !2157, line: 209, column: 41)
!13249 = distinct !DILexicalBlock(scope: !13242, file: !2157, line: 209, column: 2)
!13250 = !DILocation(line: 0, scope: !13223)
!13251 = !DILocation(line: 0, scope: !13242)
!13252 = !DILocation(line: 209, column: 25, scope: !13249)
!13253 = !DILocation(line: 209, column: 2, scope: !13242)
!13254 = distinct !{!13254, !13253, !13255}
!13255 = !DILocation(line: 259, column: 2, scope: !13242)
!13256 = !DILocation(line: 210, column: 17, scope: !13248)
!13257 = !DILocation(line: 234, column: 7, scope: !13247)
!13258 = !DILocation(line: 234, column: 33, scope: !13247)
!13259 = !DILocation(line: 234, column: 7, scope: !13248)
!13260 = !DILocation(line: 235, column: 22, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13247, file: !2157, line: 234, column: 49)
!13262 = !DILocation(line: 235, column: 29, scope: !13261)
!13263 = !DILocation(line: 236, column: 3, scope: !13261)
!13264 = !DILocation(line: 236, column: 14, scope: !13247)
!13265 = !DILocation(line: 239, column: 32, scope: !13244)
!13266 = !DILocation(line: 0, scope: !13244)
!13267 = !DILocation(line: 241, column: 8, scope: !13244)
!13268 = !DILocation(line: 246, column: 3, scope: !13244)
!13269 = !DILocation(line: 252, column: 9, scope: !13248)
!13270 = !DILocation(line: 255, column: 9, scope: !13248)
!13271 = !DILocation(line: 256, column: 11, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13248, file: !2157, line: 256, column: 7)
!13273 = !DILocation(line: 209, column: 37, scope: !13249)
!13274 = !DILocation(line: 256, column: 7, scope: !13248)
!13275 = !DILocation(line: 262, column: 1, scope: !13223)
!13276 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2157, file: !2157, line: 176, type: !13277, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2075, retainedNodes: !13279)
!13277 = !DISubroutineType(types: !13278)
!13278 = !{!125, !208, !208, !208}
!13279 = !{!13280, !13281, !13282, !13283}
!13280 = !DILocalVariable(name: "pin", arg: 1, scope: !13276, file: !2157, line: 176, type: !208)
!13281 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13276, file: !2157, line: 176, type: !208)
!13282 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13276, file: !2157, line: 176, type: !208)
!13283 = !DILocalVariable(name: "port_device", scope: !13276, file: !2157, line: 178, type: !2087)
!13284 = !DILocation(line: 0, scope: !13276)
!13285 = !DILocation(line: 180, column: 22, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13276, file: !2157, line: 180, column: 6)
!13287 = !DILocation(line: 180, column: 6, scope: !13276)
!13288 = !DILocation(line: 180, column: 6, scope: !13286)
!13289 = !DILocation(line: 184, column: 16, scope: !13276)
!13290 = !DILocation(line: 186, column: 19, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13276, file: !2157, line: 186, column: 6)
!13292 = !DILocation(line: 186, column: 28, scope: !13291)
!13293 = !DILocation(line: 186, column: 33, scope: !13291)
!13294 = !DILocation(line: 186, column: 6, scope: !13276)
!13295 = !DILocation(line: 190, column: 43, scope: !13276)
!13296 = !DILocation(line: 190, column: 9, scope: !13276)
!13297 = !DILocation(line: 190, column: 2, scope: !13276)
!13298 = !DILocation(line: 191, column: 1, scope: !13276)
!13299 = distinct !DISubprogram(name: "device_is_ready", scope: !4266, file: !4266, line: 47, type: !13300, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2075, retainedNodes: !13302)
!13300 = !DISubroutineType(types: !13301)
!13301 = !{!153, !2087}
!13302 = !{!13303}
!13303 = !DILocalVariable(name: "dev", arg: 1, scope: !13299, file: !4266, line: 47, type: !2087)
!13304 = !DILocation(line: 0, scope: !13299)
!13305 = !DILocation(line: 55, column: 2, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13299, file: !4266, line: 55, column: 2)
!13307 = !{i64 2149514652}
!13308 = !DILocation(line: 56, column: 9, scope: !13299)
!13309 = !DILocation(line: 56, column: 2, scope: !13299)
!13310 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13300, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2075, retainedNodes: !13311)
!13311 = !{!13312}
!13312 = !DILocalVariable(name: "dev", arg: 1, scope: !13310, file: !137, line: 730, type: !2087)
!13313 = !DILocation(line: 0, scope: !13310)
!13314 = !DILocation(line: 732, column: 9, scope: !13310)
!13315 = !DILocation(line: 732, column: 2, scope: !13310)
!13316 = distinct !DISubprogram(name: "SystemInit", scope: !2209, file: !2209, line: 167, type: !3363, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2165, retainedNodes: !639)
!13317 = !DILocation(line: 182, column: 1, scope: !13316)
!13318 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2209, file: !2209, line: 220, type: !3363, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2165, retainedNodes: !13319)
!13319 = !{!13320, !13321, !13322, !13323, !13324}
!13320 = !DILocalVariable(name: "tmp", scope: !13318, file: !2209, line: 222, type: !208)
!13321 = !DILocalVariable(name: "pllvco", scope: !13318, file: !2209, line: 222, type: !208)
!13322 = !DILocalVariable(name: "pllp", scope: !13318, file: !2209, line: 222, type: !208)
!13323 = !DILocalVariable(name: "pllsource", scope: !13318, file: !2209, line: 222, type: !208)
!13324 = !DILocalVariable(name: "pllm", scope: !13318, file: !2209, line: 222, type: !208)
!13325 = !DILocation(line: 0, scope: !13318)
!13326 = !DILocation(line: 225, column: 14, scope: !13318)
!13327 = !DILocation(line: 225, column: 19, scope: !13318)
!13328 = !DILocation(line: 227, column: 3, scope: !13318)
!13329 = !DILocation(line: 240, column: 25, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13318, file: !2209, line: 228, column: 3)
!13331 = !DILocation(line: 241, column: 19, scope: !13330)
!13332 = !DILocation(line: 241, column: 27, scope: !13330)
!13333 = !DILocation(line: 0, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13330, file: !2209, line: 243, column: 11)
!13335 = !DILocation(line: 254, column: 22, scope: !13330)
!13336 = !DILocation(line: 254, column: 62, scope: !13330)
!13337 = !DILocation(line: 255, column: 31, scope: !13330)
!13338 = !DILocation(line: 256, column: 7, scope: !13330)
!13339 = !DILocation(line: 0, scope: !13330)
!13340 = !DILocation(line: 263, column: 30, scope: !13318)
!13341 = !DILocation(line: 263, column: 52, scope: !13318)
!13342 = !DILocation(line: 263, column: 9, scope: !13318)
!13343 = !DILocation(line: 265, column: 19, scope: !13318)
!13344 = !DILocation(line: 266, column: 1, scope: !13318)
!13345 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !13346, file: !13346, line: 87, type: !13347, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !13386)
!13346 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13347 = !DISubroutineType(types: !13348)
!13348 = !{!13349, !13350}
!13349 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3197, line: 44, baseType: !3196)
!13350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13351, size: 32)
!13351 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !13352, line: 172, baseType: !13353)
!13352 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13352, line: 121, size: 736, elements: !13354)
!13354 = !{!13355, !13356, !13365, !13373, !13374, !13375, !13376, !13377, !13378, !13379, !13380, !13381, !13382, !13383, !13384, !13385}
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !13353, file: !13352, line: 123, baseType: !208, size: 32)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !13353, file: !13352, line: 126, baseType: !13357, size: 160, offset: 32)
!13357 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !13352, line: 97, baseType: !13358)
!13358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13352, line: 79, size: 160, elements: !13359)
!13359 = !{!13360, !13361, !13362, !13363, !13364}
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !13358, file: !13352, line: 81, baseType: !208, size: 32)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !13358, file: !13352, line: 84, baseType: !208, size: 32, offset: 32)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !13358, file: !13352, line: 87, baseType: !208, size: 32, offset: 64)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !13358, file: !13352, line: 90, baseType: !208, size: 32, offset: 96)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !13358, file: !13352, line: 94, baseType: !208, size: 32, offset: 128)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !13353, file: !13352, line: 129, baseType: !13366, size: 128, offset: 192)
!13366 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !13352, line: 116, baseType: !13367)
!13367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13352, line: 102, size: 128, elements: !13368)
!13368 = !{!13369, !13370, !13371, !13372}
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !13367, file: !13352, line: 104, baseType: !208, size: 32)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !13367, file: !13352, line: 107, baseType: !208, size: 32, offset: 32)
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !13367, file: !13352, line: 110, baseType: !208, size: 32, offset: 64)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !13367, file: !13352, line: 113, baseType: !208, size: 32, offset: 96)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !13353, file: !13352, line: 132, baseType: !208, size: 32, offset: 320)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !13353, file: !13352, line: 136, baseType: !208, size: 32, offset: 352)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !13353, file: !13352, line: 140, baseType: !208, size: 32, offset: 384)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !13353, file: !13352, line: 143, baseType: !208, size: 32, offset: 416)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !13353, file: !13352, line: 146, baseType: !208, size: 32, offset: 448)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !13353, file: !13352, line: 149, baseType: !208, size: 32, offset: 480)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !13353, file: !13352, line: 152, baseType: !208, size: 32, offset: 512)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !13353, file: !13352, line: 155, baseType: !208, size: 32, offset: 544)
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !13353, file: !13352, line: 158, baseType: !208, size: 32, offset: 576)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !13353, file: !13352, line: 161, baseType: !208, size: 32, offset: 608)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !13353, file: !13352, line: 164, baseType: !208, size: 32, offset: 640)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !13353, file: !13352, line: 167, baseType: !208, size: 32, offset: 672)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !13353, file: !13352, line: 170, baseType: !150, size: 8, offset: 704)
!13386 = !{!13387, !13388, !13389, !13390, !13391, !13392, !13393, !13394, !13395, !13396, !13397}
!13387 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !13345, file: !13346, line: 87, type: !13350)
!13388 = !DILocalVariable(name: "tickstart", scope: !13345, file: !13346, line: 89, type: !208)
!13389 = !DILocalVariable(name: "tmpreg1", scope: !13345, file: !13346, line: 90, type: !208)
!13390 = !DILocalVariable(name: "plli2sp", scope: !13345, file: !13346, line: 91, type: !208)
!13391 = !DILocalVariable(name: "plli2sq", scope: !13345, file: !13346, line: 92, type: !208)
!13392 = !DILocalVariable(name: "plli2sr", scope: !13345, file: !13346, line: 93, type: !208)
!13393 = !DILocalVariable(name: "pllsaip", scope: !13345, file: !13346, line: 94, type: !208)
!13394 = !DILocalVariable(name: "pllsaiq", scope: !13345, file: !13346, line: 95, type: !208)
!13395 = !DILocalVariable(name: "plli2sused", scope: !13345, file: !13346, line: 96, type: !208)
!13396 = !DILocalVariable(name: "pllsaiused", scope: !13345, file: !13346, line: 97, type: !208)
!13397 = !DILocalVariable(name: "tmpreg", scope: !13398, file: !13346, line: 184, type: !423)
!13398 = distinct !DILexicalBlock(scope: !13399, file: !13346, line: 184, column: 5)
!13399 = distinct !DILexicalBlock(scope: !13400, file: !13346, line: 179, column: 3)
!13400 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 178, column: 6)
!13401 = !DILocation(line: 0, scope: !13345)
!13402 = !DILocation(line: 103, column: 23, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 103, column: 6)
!13404 = !DILocation(line: 103, column: 45, scope: !13403)
!13405 = !DILocation(line: 103, column: 71, scope: !13403)
!13406 = !DILocation(line: 103, column: 6, scope: !13345)
!13407 = !DILocation(line: 109, column: 5, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13403, file: !13346, line: 104, column: 3)
!13409 = !DILocation(line: 111, column: 23, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13408, file: !13346, line: 111, column: 8)
!13411 = !DILocation(line: 111, column: 45, scope: !13410)
!13412 = !DILocation(line: 111, column: 8, scope: !13408)
!13413 = !DILocation(line: 119, column: 23, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 119, column: 6)
!13415 = !DILocation(line: 119, column: 45, scope: !13414)
!13416 = !DILocation(line: 119, column: 71, scope: !13414)
!13417 = !DILocation(line: 119, column: 6, scope: !13345)
!13418 = !DILocation(line: 125, column: 5, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13414, file: !13346, line: 120, column: 3)
!13420 = !DILocation(line: 127, column: 23, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13419, file: !13346, line: 127, column: 8)
!13422 = !DILocation(line: 127, column: 45, scope: !13421)
!13423 = !DILocation(line: 127, column: 8, scope: !13419)
!13424 = !DILocation(line: 135, column: 23, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 135, column: 6)
!13426 = !DILocation(line: 135, column: 45, scope: !13425)
!13427 = !DILocation(line: 135, column: 67, scope: !13425)
!13428 = !DILocation(line: 135, column: 6, scope: !13345)
!13429 = !DILocation(line: 141, column: 5, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13425, file: !13346, line: 136, column: 3)
!13431 = !DILocation(line: 143, column: 23, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13430, file: !13346, line: 143, column: 8)
!13433 = !DILocation(line: 143, column: 42, scope: !13432)
!13434 = !DILocation(line: 143, column: 8, scope: !13430)
!13435 = !DILocation(line: 148, column: 42, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13430, file: !13346, line: 148, column: 8)
!13437 = !DILocation(line: 148, column: 8, scope: !13430)
!13438 = !DILocation(line: 156, column: 23, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 156, column: 6)
!13440 = !DILocation(line: 156, column: 45, scope: !13439)
!13441 = !DILocation(line: 156, column: 67, scope: !13439)
!13442 = !DILocation(line: 156, column: 6, scope: !13345)
!13443 = !DILocation(line: 162, column: 5, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13439, file: !13346, line: 157, column: 3)
!13445 = !DILocation(line: 165, column: 23, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13444, file: !13346, line: 165, column: 8)
!13447 = !DILocation(line: 165, column: 42, scope: !13446)
!13448 = !DILocation(line: 165, column: 8, scope: !13444)
!13449 = !DILocation(line: 170, column: 42, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13444, file: !13346, line: 170, column: 8)
!13451 = !DILocation(line: 170, column: 8, scope: !13444)
!13452 = !DILocation(line: 178, column: 23, scope: !13400)
!13453 = !DILocation(line: 178, column: 45, scope: !13400)
!13454 = !DILocation(line: 178, column: 66, scope: !13400)
!13455 = !DILocation(line: 178, column: 6, scope: !13345)
!13456 = !DILocation(line: 184, column: 5, scope: !13398)
!13457 = !DILocation(line: 184, column: 5, scope: !13399)
!13458 = !DILocation(line: 187, column: 13, scope: !13399)
!13459 = !DILocation(line: 190, column: 17, scope: !13399)
!13460 = !DILocation(line: 192, column: 5, scope: !13399)
!13461 = !DILocation(line: 192, column: 17, scope: !13399)
!13462 = !DILocation(line: 192, column: 20, scope: !13399)
!13463 = !DILocation(line: 192, column: 34, scope: !13399)
!13464 = !DILocation(line: 194, column: 11, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !13346, line: 194, column: 10)
!13466 = distinct !DILexicalBlock(scope: !13399, file: !13346, line: 193, column: 5)
!13467 = !DILocation(line: 194, column: 25, scope: !13465)
!13468 = !DILocation(line: 194, column: 39, scope: !13465)
!13469 = !DILocation(line: 194, column: 10, scope: !13466)
!13470 = distinct !{!13470, !13460, !13471}
!13471 = !DILocation(line: 198, column: 5, scope: !13399)
!13472 = !DILocation(line: 200, column: 21, scope: !13399)
!13473 = !DILocation(line: 200, column: 26, scope: !13399)
!13474 = !DILocation(line: 201, column: 17, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13399, file: !13346, line: 201, column: 8)
!13476 = !DILocation(line: 201, column: 33, scope: !13475)
!13477 = !DILocation(line: 201, column: 66, scope: !13475)
!13478 = !DILocation(line: 201, column: 84, scope: !13475)
!13479 = !DILocation(line: 201, column: 47, scope: !13475)
!13480 = !DILocation(line: 201, column: 8, scope: !13399)
!13481 = !DILocation(line: 204, column: 23, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13475, file: !13346, line: 202, column: 5)
!13483 = !DILocation(line: 204, column: 28, scope: !13482)
!13484 = !DILocation(line: 206, column: 7, scope: !13482)
!13485 = !DILocation(line: 207, column: 7, scope: !13482)
!13486 = !DILocation(line: 209, column: 17, scope: !13482)
!13487 = !DILocation(line: 212, column: 10, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13482, file: !13346, line: 212, column: 10)
!13489 = !DILocation(line: 212, column: 10, scope: !13482)
!13490 = !DILocation(line: 215, column: 21, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13488, file: !13346, line: 213, column: 7)
!13492 = !DILocation(line: 218, column: 9, scope: !13491)
!13493 = !DILocation(line: 218, column: 15, scope: !13491)
!13494 = !DILocation(line: 218, column: 51, scope: !13491)
!13495 = !DILocation(line: 220, column: 15, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !13346, line: 220, column: 14)
!13497 = distinct !DILexicalBlock(scope: !13491, file: !13346, line: 219, column: 9)
!13498 = !DILocation(line: 220, column: 29, scope: !13496)
!13499 = !DILocation(line: 220, column: 43, scope: !13496)
!13500 = !DILocation(line: 220, column: 14, scope: !13497)
!13501 = distinct !{!13501, !13492, !13502}
!13502 = !DILocation(line: 224, column: 9, scope: !13491)
!13503 = !DILocation(line: 227, column: 5, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13399, file: !13346, line: 227, column: 5)
!13505 = !DILocation(line: 232, column: 23, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 232, column: 6)
!13507 = !DILocation(line: 228, column: 3, scope: !13399)
!13508 = !DILocation(line: 232, column: 45, scope: !13506)
!13509 = !DILocation(line: 232, column: 66, scope: !13506)
!13510 = !DILocation(line: 232, column: 6, scope: !13345)
!13511 = !DILocation(line: 235, column: 5, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13506, file: !13346, line: 233, column: 3)
!13513 = !DILocation(line: 240, column: 23, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 240, column: 6)
!13515 = !DILocation(line: 236, column: 3, scope: !13512)
!13516 = !DILocation(line: 240, column: 45, scope: !13514)
!13517 = !DILocation(line: 240, column: 70, scope: !13514)
!13518 = !DILocation(line: 240, column: 6, scope: !13345)
!13519 = !DILocation(line: 246, column: 5, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13514, file: !13346, line: 241, column: 3)
!13521 = !DILocation(line: 251, column: 23, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 251, column: 6)
!13523 = !DILocation(line: 247, column: 3, scope: !13520)
!13524 = !DILocation(line: 251, column: 45, scope: !13522)
!13525 = !DILocation(line: 251, column: 66, scope: !13522)
!13526 = !DILocation(line: 251, column: 6, scope: !13345)
!13527 = !DILocation(line: 257, column: 5, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13522, file: !13346, line: 252, column: 3)
!13529 = !DILocation(line: 262, column: 23, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 262, column: 6)
!13531 = !DILocation(line: 258, column: 3, scope: !13528)
!13532 = !DILocation(line: 262, column: 45, scope: !13530)
!13533 = !DILocation(line: 262, column: 68, scope: !13530)
!13534 = !DILocation(line: 262, column: 6, scope: !13345)
!13535 = !DILocation(line: 268, column: 5, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13530, file: !13346, line: 263, column: 3)
!13537 = !DILocation(line: 271, column: 23, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13536, file: !13346, line: 271, column: 8)
!13539 = !DILocation(line: 271, column: 43, scope: !13538)
!13540 = !DILocation(line: 271, column: 8, scope: !13536)
!13541 = !DILocation(line: 279, column: 23, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 279, column: 6)
!13543 = !DILocation(line: 279, column: 45, scope: !13542)
!13544 = !DILocation(line: 279, column: 67, scope: !13542)
!13545 = !DILocation(line: 279, column: 6, scope: !13345)
!13546 = !DILocation(line: 285, column: 5, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13542, file: !13346, line: 280, column: 3)
!13548 = !DILocation(line: 290, column: 23, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 290, column: 6)
!13550 = !DILocation(line: 286, column: 3, scope: !13547)
!13551 = !DILocation(line: 290, column: 45, scope: !13549)
!13552 = !DILocation(line: 290, column: 70, scope: !13549)
!13553 = !DILocation(line: 290, column: 6, scope: !13345)
!13554 = !DILocation(line: 296, column: 5, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13549, file: !13346, line: 291, column: 3)
!13556 = !DILocation(line: 298, column: 23, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13555, file: !13346, line: 298, column: 8)
!13558 = !DILocation(line: 298, column: 43, scope: !13557)
!13559 = !DILocation(line: 298, column: 8, scope: !13555)
!13560 = !DILocation(line: 308, column: 44, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 308, column: 6)
!13562 = !DILocation(line: 308, column: 18, scope: !13561)
!13563 = !DILocation(line: 308, column: 25, scope: !13561)
!13564 = !DILocation(line: 308, column: 65, scope: !13561)
!13565 = !DILocation(line: 308, column: 6, scope: !13345)
!13566 = !DILocation(line: 311, column: 5, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13561, file: !13346, line: 309, column: 3)
!13568 = !DILocation(line: 313, column: 17, scope: !13567)
!13569 = !DILocation(line: 315, column: 5, scope: !13567)
!13570 = !DILocation(line: 315, column: 11, scope: !13567)
!13571 = !DILocation(line: 317, column: 11, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !13346, line: 317, column: 10)
!13573 = distinct !DILexicalBlock(scope: !13567, file: !13346, line: 316, column: 5)
!13574 = !DILocation(line: 317, column: 25, scope: !13572)
!13575 = !DILocation(line: 317, column: 39, scope: !13572)
!13576 = !DILocation(line: 317, column: 10, scope: !13573)
!13577 = distinct !{!13577, !13569, !13578}
!13578 = !DILocation(line: 322, column: 5, scope: !13567)
!13579 = !DILocation(line: 329, column: 27, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13567, file: !13346, line: 329, column: 8)
!13581 = !DILocation(line: 329, column: 49, scope: !13580)
!13582 = !DILocation(line: 329, column: 75, scope: !13580)
!13583 = !DILocation(line: 329, column: 102, scope: !13580)
!13584 = !DILocation(line: 329, column: 121, scope: !13580)
!13585 = !DILocation(line: 329, column: 143, scope: !13580)
!13586 = !DILocation(line: 329, column: 176, scope: !13580)
!13587 = !DILocation(line: 330, column: 49, scope: !13580)
!13588 = !DILocation(line: 330, column: 75, scope: !13580)
!13589 = !DILocation(line: 330, column: 102, scope: !13580)
!13590 = !DILocation(line: 330, column: 121, scope: !13580)
!13591 = !DILocation(line: 330, column: 143, scope: !13580)
!13592 = !DILocation(line: 329, column: 8, scope: !13567)
!13593 = !DILocation(line: 336, column: 26, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13580, file: !13346, line: 331, column: 5)
!13595 = !DILocation(line: 336, column: 100, scope: !13594)
!13596 = !DILocation(line: 337, column: 24, scope: !13594)
!13597 = !DILocation(line: 337, column: 61, scope: !13594)
!13598 = !DILocation(line: 341, column: 7, scope: !13594)
!13599 = !DILocation(line: 345, column: 27, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13567, file: !13346, line: 345, column: 8)
!13601 = !DILocation(line: 342, column: 5, scope: !13594)
!13602 = !DILocation(line: 345, column: 49, scope: !13600)
!13603 = !DILocation(line: 345, column: 71, scope: !13600)
!13604 = !DILocation(line: 345, column: 94, scope: !13600)
!13605 = !DILocation(line: 345, column: 113, scope: !13600)
!13606 = !DILocation(line: 345, column: 132, scope: !13600)
!13607 = !DILocation(line: 345, column: 162, scope: !13600)
!13608 = !DILocation(line: 346, column: 49, scope: !13600)
!13609 = !DILocation(line: 346, column: 71, scope: !13600)
!13610 = !DILocation(line: 346, column: 94, scope: !13600)
!13611 = !DILocation(line: 346, column: 113, scope: !13600)
!13612 = !DILocation(line: 346, column: 132, scope: !13600)
!13613 = !DILocation(line: 345, column: 8, scope: !13567)
!13614 = !DILocation(line: 354, column: 26, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13600, file: !13346, line: 347, column: 5)
!13616 = !DILocation(line: 354, column: 100, scope: !13615)
!13617 = !DILocation(line: 355, column: 24, scope: !13615)
!13618 = !DILocation(line: 355, column: 61, scope: !13615)
!13619 = !DILocation(line: 360, column: 7, scope: !13615)
!13620 = !DILocation(line: 363, column: 7, scope: !13615)
!13621 = !DILocation(line: 367, column: 26, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13567, file: !13346, line: 367, column: 8)
!13623 = !DILocation(line: 364, column: 5, scope: !13615)
!13624 = !DILocation(line: 367, column: 48, scope: !13622)
!13625 = !DILocation(line: 367, column: 73, scope: !13622)
!13626 = !DILocation(line: 367, column: 99, scope: !13622)
!13627 = !DILocation(line: 367, column: 118, scope: !13622)
!13628 = !DILocation(line: 367, column: 138, scope: !13622)
!13629 = !DILocation(line: 367, column: 8, scope: !13567)
!13630 = !DILocation(line: 372, column: 26, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13622, file: !13346, line: 368, column: 5)
!13632 = !DILocation(line: 373, column: 24, scope: !13631)
!13633 = !DILocation(line: 373, column: 61, scope: !13631)
!13634 = !DILocation(line: 377, column: 7, scope: !13631)
!13635 = !DILocation(line: 381, column: 24, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13567, file: !13346, line: 381, column: 8)
!13637 = !DILocation(line: 378, column: 5, scope: !13631)
!13638 = !DILocation(line: 381, column: 45, scope: !13636)
!13639 = !DILocation(line: 381, column: 69, scope: !13636)
!13640 = !DILocation(line: 381, column: 8, scope: !13567)
!13641 = !DILocation(line: 390, column: 7, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13636, file: !13346, line: 382, column: 5)
!13643 = !DILocation(line: 391, column: 5, scope: !13642)
!13644 = !DILocation(line: 394, column: 5, scope: !13567)
!13645 = !DILocation(line: 396, column: 17, scope: !13567)
!13646 = !DILocation(line: 398, column: 5, scope: !13567)
!13647 = !DILocation(line: 398, column: 11, scope: !13567)
!13648 = !DILocation(line: 398, column: 51, scope: !13567)
!13649 = !DILocation(line: 400, column: 11, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13651, file: !13346, line: 400, column: 10)
!13651 = distinct !DILexicalBlock(scope: !13567, file: !13346, line: 399, column: 5)
!13652 = !DILocation(line: 400, column: 25, scope: !13650)
!13653 = !DILocation(line: 400, column: 39, scope: !13650)
!13654 = !DILocation(line: 400, column: 10, scope: !13651)
!13655 = distinct !{!13655, !13646, !13656}
!13656 = !DILocation(line: 405, column: 5, scope: !13567)
!13657 = !DILocation(line: 411, column: 17, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13345, file: !13346, line: 411, column: 6)
!13659 = !DILocation(line: 411, column: 6, scope: !13345)
!13660 = !DILocation(line: 414, column: 5, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13658, file: !13346, line: 412, column: 3)
!13662 = !DILocation(line: 416, column: 17, scope: !13661)
!13663 = !DILocation(line: 418, column: 5, scope: !13661)
!13664 = !DILocation(line: 418, column: 11, scope: !13661)
!13665 = !DILocation(line: 420, column: 11, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !13346, line: 420, column: 10)
!13667 = distinct !DILexicalBlock(scope: !13661, file: !13346, line: 419, column: 5)
!13668 = !DILocation(line: 420, column: 25, scope: !13666)
!13669 = !DILocation(line: 420, column: 39, scope: !13666)
!13670 = !DILocation(line: 420, column: 10, scope: !13667)
!13671 = distinct !{!13671, !13663, !13672}
!13672 = !DILocation(line: 425, column: 5, scope: !13661)
!13673 = !DILocation(line: 432, column: 27, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13661, file: !13346, line: 432, column: 8)
!13675 = !DILocation(line: 432, column: 49, scope: !13674)
!13676 = !DILocation(line: 432, column: 71, scope: !13674)
!13677 = !DILocation(line: 432, column: 94, scope: !13674)
!13678 = !DILocation(line: 432, column: 113, scope: !13674)
!13679 = !DILocation(line: 432, column: 132, scope: !13674)
!13680 = !DILocation(line: 432, column: 162, scope: !13674)
!13681 = !DILocation(line: 433, column: 49, scope: !13674)
!13682 = !DILocation(line: 433, column: 71, scope: !13674)
!13683 = !DILocation(line: 433, column: 94, scope: !13674)
!13684 = !DILocation(line: 433, column: 113, scope: !13674)
!13685 = !DILocation(line: 433, column: 132, scope: !13674)
!13686 = !DILocation(line: 432, column: 8, scope: !13661)
!13687 = !DILocation(line: 441, column: 26, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13674, file: !13346, line: 434, column: 5)
!13689 = !DILocation(line: 441, column: 100, scope: !13688)
!13690 = !DILocation(line: 445, column: 7, scope: !13688)
!13691 = !DILocation(line: 448, column: 7, scope: !13688)
!13692 = !DILocation(line: 453, column: 26, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13661, file: !13346, line: 453, column: 8)
!13694 = !DILocation(line: 449, column: 5, scope: !13688)
!13695 = !DILocation(line: 453, column: 48, scope: !13693)
!13696 = !DILocation(line: 453, column: 71, scope: !13693)
!13697 = !DILocation(line: 453, column: 95, scope: !13693)
!13698 = !DILocation(line: 453, column: 114, scope: !13693)
!13699 = !DILocation(line: 453, column: 134, scope: !13693)
!13700 = !DILocation(line: 453, column: 8, scope: !13661)
!13701 = !DILocation(line: 458, column: 24, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13693, file: !13346, line: 454, column: 5)
!13703 = !DILocation(line: 458, column: 61, scope: !13702)
!13704 = !DILocation(line: 462, column: 7, scope: !13702)
!13705 = !DILocation(line: 463, column: 5, scope: !13702)
!13706 = !DILocation(line: 466, column: 5, scope: !13661)
!13707 = !DILocation(line: 468, column: 17, scope: !13661)
!13708 = !DILocation(line: 470, column: 5, scope: !13661)
!13709 = !DILocation(line: 470, column: 11, scope: !13661)
!13710 = !DILocation(line: 470, column: 39, scope: !13661)
!13711 = !DILocation(line: 472, column: 11, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13713, file: !13346, line: 472, column: 10)
!13713 = distinct !DILexicalBlock(scope: !13661, file: !13346, line: 471, column: 5)
!13714 = !DILocation(line: 472, column: 25, scope: !13712)
!13715 = !DILocation(line: 472, column: 39, scope: !13712)
!13716 = !DILocation(line: 472, column: 10, scope: !13713)
!13717 = distinct !{!13717, !13708, !13718}
!13718 = !DILocation(line: 477, column: 5, scope: !13661)
!13719 = !DILocation(line: 480, column: 1, scope: !13345)
!13720 = !DISubprogram(name: "HAL_GetTick", scope: !13721, file: !13721, line: 234, type: !8453, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13721 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13722 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !13346, file: !13346, line: 489, type: !13723, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !13725)
!13723 = !DISubroutineType(types: !13724)
!13724 = !{null, !13350}
!13725 = !{!13726, !13727}
!13726 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !13722, file: !13346, line: 489, type: !13350)
!13727 = !DILocalVariable(name: "tempreg", scope: !13722, file: !13346, line: 491, type: !208)
!13728 = !DILocation(line: 0, scope: !13722)
!13729 = !DILocation(line: 494, column: 18, scope: !13722)
!13730 = !DILocation(line: 494, column: 39, scope: !13722)
!13731 = !DILocation(line: 502, column: 52, scope: !13722)
!13732 = !DILocation(line: 502, column: 63, scope: !13722)
!13733 = !DILocation(line: 502, column: 25, scope: !13722)
!13734 = !DILocation(line: 502, column: 33, scope: !13722)
!13735 = !DILocation(line: 503, column: 52, scope: !13722)
!13736 = !DILocation(line: 503, column: 89, scope: !13722)
!13737 = !DILocation(line: 503, column: 25, scope: !13722)
!13738 = !DILocation(line: 503, column: 33, scope: !13722)
!13739 = !DILocation(line: 504, column: 54, scope: !13722)
!13740 = !DILocation(line: 504, column: 128, scope: !13722)
!13741 = !DILocation(line: 504, column: 25, scope: !13722)
!13742 = !DILocation(line: 504, column: 33, scope: !13722)
!13743 = !DILocation(line: 505, column: 52, scope: !13722)
!13744 = !DILocation(line: 505, column: 89, scope: !13722)
!13745 = !DILocation(line: 505, column: 25, scope: !13722)
!13746 = !DILocation(line: 505, column: 33, scope: !13722)
!13747 = !DILocation(line: 506, column: 52, scope: !13722)
!13748 = !DILocation(line: 506, column: 89, scope: !13722)
!13749 = !DILocation(line: 506, column: 25, scope: !13722)
!13750 = !DILocation(line: 506, column: 33, scope: !13722)
!13751 = !DILocation(line: 508, column: 52, scope: !13722)
!13752 = !DILocation(line: 508, column: 63, scope: !13722)
!13753 = !DILocation(line: 508, column: 25, scope: !13722)
!13754 = !DILocation(line: 508, column: 33, scope: !13722)
!13755 = !DILocation(line: 509, column: 52, scope: !13722)
!13756 = !DILocation(line: 509, column: 89, scope: !13722)
!13757 = !DILocation(line: 509, column: 25, scope: !13722)
!13758 = !DILocation(line: 509, column: 33, scope: !13722)
!13759 = !DILocation(line: 510, column: 54, scope: !13722)
!13760 = !DILocation(line: 510, column: 128, scope: !13722)
!13761 = !DILocation(line: 510, column: 25, scope: !13722)
!13762 = !DILocation(line: 510, column: 33, scope: !13722)
!13763 = !DILocation(line: 511, column: 52, scope: !13722)
!13764 = !DILocation(line: 511, column: 89, scope: !13722)
!13765 = !DILocation(line: 511, column: 25, scope: !13722)
!13766 = !DILocation(line: 511, column: 33, scope: !13722)
!13767 = !DILocation(line: 513, column: 48, scope: !13722)
!13768 = !DILocation(line: 513, column: 56, scope: !13722)
!13769 = !DILocation(line: 513, column: 18, scope: !13722)
!13770 = !DILocation(line: 513, column: 29, scope: !13722)
!13771 = !DILocation(line: 514, column: 48, scope: !13722)
!13772 = !DILocation(line: 514, column: 82, scope: !13722)
!13773 = !DILocation(line: 514, column: 18, scope: !13722)
!13774 = !DILocation(line: 514, column: 29, scope: !13722)
!13775 = !DILocation(line: 517, column: 39, scope: !13722)
!13776 = !DILocation(line: 517, column: 18, scope: !13722)
!13777 = !DILocation(line: 517, column: 37, scope: !13722)
!13778 = !DILocation(line: 520, column: 39, scope: !13722)
!13779 = !DILocation(line: 520, column: 18, scope: !13722)
!13780 = !DILocation(line: 520, column: 37, scope: !13722)
!13781 = !DILocation(line: 523, column: 42, scope: !13722)
!13782 = !DILocation(line: 523, column: 18, scope: !13722)
!13783 = !DILocation(line: 523, column: 40, scope: !13722)
!13784 = !DILocation(line: 526, column: 42, scope: !13722)
!13785 = !DILocation(line: 526, column: 18, scope: !13722)
!13786 = !DILocation(line: 526, column: 40, scope: !13722)
!13787 = !DILocation(line: 529, column: 19, scope: !13722)
!13788 = !DILocation(line: 529, column: 24, scope: !13722)
!13789 = !DILocation(line: 530, column: 67, scope: !13722)
!13790 = !DILocation(line: 530, column: 72, scope: !13722)
!13791 = !DILocation(line: 530, column: 59, scope: !13722)
!13792 = !DILocation(line: 530, column: 18, scope: !13722)
!13793 = !DILocation(line: 530, column: 36, scope: !13722)
!13794 = !DILocation(line: 533, column: 38, scope: !13722)
!13795 = !DILocation(line: 533, column: 18, scope: !13722)
!13796 = !DILocation(line: 533, column: 36, scope: !13722)
!13797 = !DILocation(line: 536, column: 42, scope: !13722)
!13798 = !DILocation(line: 536, column: 18, scope: !13722)
!13799 = !DILocation(line: 536, column: 40, scope: !13722)
!13800 = !DILocation(line: 539, column: 40, scope: !13722)
!13801 = !DILocation(line: 539, column: 18, scope: !13722)
!13802 = !DILocation(line: 539, column: 38, scope: !13722)
!13803 = !DILocation(line: 542, column: 39, scope: !13722)
!13804 = !DILocation(line: 542, column: 18, scope: !13722)
!13805 = !DILocation(line: 542, column: 37, scope: !13722)
!13806 = !DILocation(line: 545, column: 40, scope: !13722)
!13807 = !DILocation(line: 545, column: 18, scope: !13722)
!13808 = !DILocation(line: 545, column: 38, scope: !13722)
!13809 = !DILocation(line: 548, column: 13, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13722, file: !13346, line: 548, column: 7)
!13811 = !DILocation(line: 548, column: 7, scope: !13722)
!13812 = !DILocation(line: 550, column: 20, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13810, file: !13346, line: 549, column: 3)
!13814 = !DILocation(line: 550, column: 37, scope: !13813)
!13815 = !DILocation(line: 556, column: 1, scope: !13722)
!13816 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !13346, file: !13346, line: 569, type: !9618, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !13817)
!13817 = !{!13818, !13819, !13820, !13821, !13822, !13823, !13824}
!13818 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !13816, file: !13346, line: 569, type: !208)
!13819 = !DILocalVariable(name: "tmpreg1", scope: !13816, file: !13346, line: 571, type: !208)
!13820 = !DILocalVariable(name: "frequency", scope: !13816, file: !13346, line: 573, type: !208)
!13821 = !DILocalVariable(name: "vcoinput", scope: !13816, file: !13346, line: 575, type: !208)
!13822 = !DILocalVariable(name: "saiclocksource", scope: !13816, file: !13346, line: 577, type: !208)
!13823 = !DILocalVariable(name: "srcclk", scope: !13816, file: !13346, line: 578, type: !208)
!13824 = !DILocalVariable(name: "vcooutput", scope: !13816, file: !13346, line: 580, type: !208)
!13825 = !DILocation(line: 0, scope: !13816)
!13826 = !DILocation(line: 581, column: 3, scope: !13816)
!13827 = !DILocation(line: 586, column: 29, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !13346, line: 585, column: 5)
!13829 = distinct !DILexicalBlock(scope: !13816, file: !13346, line: 582, column: 3)
!13830 = !DILocation(line: 588, column: 7, scope: !13828)
!13831 = !DILocation(line: 594, column: 20, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13833, file: !13346, line: 594, column: 14)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !13346, line: 591, column: 9)
!13834 = distinct !DILexicalBlock(scope: !13828, file: !13346, line: 589, column: 7)
!13835 = !DILocation(line: 0, scope: !13832)
!13836 = !DILocation(line: 606, column: 27, scope: !13833)
!13837 = !DILocation(line: 606, column: 64, scope: !13833)
!13838 = !DILocation(line: 607, column: 42, scope: !13833)
!13839 = !DILocation(line: 607, column: 79, scope: !13833)
!13840 = !DILocation(line: 607, column: 33, scope: !13833)
!13841 = !DILocation(line: 607, column: 86, scope: !13833)
!13842 = !DILocation(line: 610, column: 29, scope: !13833)
!13843 = !DILocation(line: 610, column: 63, scope: !13833)
!13844 = !DILocation(line: 610, column: 70, scope: !13833)
!13845 = !DILocation(line: 611, column: 32, scope: !13833)
!13846 = !DILocation(line: 612, column: 11, scope: !13833)
!13847 = !DILocation(line: 619, column: 20, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13849, file: !13346, line: 619, column: 14)
!13849 = distinct !DILexicalBlock(scope: !13834, file: !13346, line: 616, column: 9)
!13850 = !DILocation(line: 0, scope: !13848)
!13851 = !DILocation(line: 632, column: 27, scope: !13849)
!13852 = !DILocation(line: 632, column: 64, scope: !13849)
!13853 = !DILocation(line: 633, column: 42, scope: !13849)
!13854 = !DILocation(line: 633, column: 79, scope: !13849)
!13855 = !DILocation(line: 633, column: 33, scope: !13849)
!13856 = !DILocation(line: 633, column: 86, scope: !13849)
!13857 = !DILocation(line: 636, column: 28, scope: !13849)
!13858 = !DILocation(line: 636, column: 36, scope: !13849)
!13859 = !DILocation(line: 636, column: 62, scope: !13849)
!13860 = !DILocation(line: 637, column: 32, scope: !13849)
!13861 = !DILocation(line: 638, column: 11, scope: !13849)
!13862 = !DILocation(line: 645, column: 20, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13864, file: !13346, line: 645, column: 14)
!13864 = distinct !DILexicalBlock(scope: !13834, file: !13346, line: 642, column: 9)
!13865 = !DILocation(line: 0, scope: !13863)
!13866 = !DILocation(line: 658, column: 27, scope: !13864)
!13867 = !DILocation(line: 658, column: 55, scope: !13864)
!13868 = !DILocation(line: 659, column: 42, scope: !13864)
!13869 = !DILocation(line: 659, column: 70, scope: !13864)
!13870 = !DILocation(line: 659, column: 33, scope: !13864)
!13871 = !DILocation(line: 659, column: 77, scope: !13864)
!13872 = !DILocation(line: 660, column: 11, scope: !13864)
!13873 = !DILocation(line: 665, column: 11, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13834, file: !13346, line: 663, column: 9)
!13875 = !DILocation(line: 669, column: 20, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13877, file: !13346, line: 669, column: 14)
!13877 = distinct !DILexicalBlock(scope: !13834, file: !13346, line: 668, column: 9)
!13878 = !DILocation(line: 691, column: 16, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13829, file: !13346, line: 689, column: 5)
!13880 = !DILocation(line: 692, column: 7, scope: !13879)
!13881 = !DILocation(line: 706, column: 20, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13883, file: !13346, line: 706, column: 14)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !13346, line: 703, column: 9)
!13884 = distinct !DILexicalBlock(scope: !13879, file: !13346, line: 693, column: 7)
!13885 = !DILocation(line: 0, scope: !13882)
!13886 = !DILocation(line: 718, column: 53, scope: !13883)
!13887 = !DILocation(line: 718, column: 90, scope: !13883)
!13888 = !DILocation(line: 718, column: 43, scope: !13883)
!13889 = !DILocation(line: 720, column: 53, scope: !13883)
!13890 = !DILocation(line: 720, column: 90, scope: !13883)
!13891 = !DILocation(line: 720, column: 44, scope: !13883)
!13892 = !DILocation(line: 721, column: 11, scope: !13883)
!13893 = !DILocation(line: 728, column: 20, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !13346, line: 728, column: 14)
!13895 = distinct !DILexicalBlock(scope: !13884, file: !13346, line: 725, column: 9)
!13896 = !DILocation(line: 0, scope: !13894)
!13897 = !DILocation(line: 740, column: 53, scope: !13895)
!13898 = !DILocation(line: 740, column: 81, scope: !13895)
!13899 = !DILocation(line: 740, column: 43, scope: !13895)
!13900 = !DILocation(line: 742, column: 53, scope: !13895)
!13901 = !DILocation(line: 742, column: 81, scope: !13895)
!13902 = !DILocation(line: 742, column: 44, scope: !13895)
!13903 = !DILocation(line: 743, column: 11, scope: !13895)
!13904 = !DILocation(line: 748, column: 20, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !13346, line: 748, column: 14)
!13906 = distinct !DILexicalBlock(scope: !13884, file: !13346, line: 747, column: 9)
!13907 = !DILocation(line: 770, column: 16, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13829, file: !13346, line: 768, column: 5)
!13909 = !DILocation(line: 771, column: 7, scope: !13908)
!13910 = !DILocation(line: 785, column: 20, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !13346, line: 785, column: 14)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !13346, line: 782, column: 9)
!13913 = distinct !DILexicalBlock(scope: !13908, file: !13346, line: 772, column: 7)
!13914 = !DILocation(line: 0, scope: !13911)
!13915 = !DILocation(line: 797, column: 53, scope: !13912)
!13916 = !DILocation(line: 797, column: 90, scope: !13912)
!13917 = !DILocation(line: 797, column: 43, scope: !13912)
!13918 = !DILocation(line: 799, column: 53, scope: !13912)
!13919 = !DILocation(line: 799, column: 90, scope: !13912)
!13920 = !DILocation(line: 799, column: 44, scope: !13912)
!13921 = !DILocation(line: 800, column: 11, scope: !13912)
!13922 = !DILocation(line: 807, column: 20, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !13346, line: 807, column: 14)
!13924 = distinct !DILexicalBlock(scope: !13913, file: !13346, line: 804, column: 9)
!13925 = !DILocation(line: 0, scope: !13923)
!13926 = !DILocation(line: 819, column: 53, scope: !13924)
!13927 = !DILocation(line: 819, column: 81, scope: !13924)
!13928 = !DILocation(line: 819, column: 43, scope: !13924)
!13929 = !DILocation(line: 821, column: 53, scope: !13924)
!13930 = !DILocation(line: 821, column: 81, scope: !13924)
!13931 = !DILocation(line: 821, column: 44, scope: !13924)
!13932 = !DILocation(line: 822, column: 11, scope: !13924)
!13933 = !DILocation(line: 827, column: 20, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !13346, line: 827, column: 14)
!13935 = distinct !DILexicalBlock(scope: !13913, file: !13346, line: 826, column: 9)
!13936 = !DILocation(line: 847, column: 3, scope: !13816)
!13937 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !13346, file: !13346, line: 2766, type: !13938, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{null, !150}
!13940 = !{!13941}
!13941 = !DILocalVariable(name: "Mode", arg: 1, scope: !13937, file: !13346, line: 2766, type: !150)
!13942 = !DILocation(line: 0, scope: !13937)
!13943 = !DILocation(line: 2770, column: 11, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13937, file: !13346, line: 2770, column: 6)
!13945 = !DILocation(line: 0, scope: !13944)
!13946 = !DILocation(line: 2770, column: 6, scope: !13937)
!13947 = !DILocation(line: 2778, column: 1, scope: !13937)
!13948 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !13346, file: !13346, line: 2803, type: !13949, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !13952)
!13949 = !DISubroutineType(types: !13950)
!13950 = !{!13349, !13951}
!13951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13357, size: 32)
!13952 = !{!13953, !13954}
!13953 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !13948, file: !13346, line: 2803, type: !13951)
!13954 = !DILocalVariable(name: "tickstart", scope: !13948, file: !13346, line: 2805, type: !208)
!13955 = !DILocation(line: 0, scope: !13948)
!13956 = !DILocation(line: 2821, column: 3, scope: !13948)
!13957 = !DILocation(line: 2824, column: 15, scope: !13948)
!13958 = !DILocation(line: 2825, column: 3, scope: !13948)
!13959 = !DILocation(line: 2825, column: 9, scope: !13948)
!13960 = !DILocation(line: 2827, column: 9, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13962, file: !13346, line: 2827, column: 8)
!13962 = distinct !DILexicalBlock(scope: !13948, file: !13346, line: 2826, column: 3)
!13963 = !DILocation(line: 2827, column: 23, scope: !13961)
!13964 = !DILocation(line: 2827, column: 37, scope: !13961)
!13965 = !DILocation(line: 2827, column: 8, scope: !13962)
!13966 = distinct !{!13966, !13958, !13967}
!13967 = !DILocation(line: 2832, column: 3, scope: !13948)
!13968 = !DILocation(line: 2840, column: 3, scope: !13948)
!13969 = !DILocation(line: 2866, column: 3, scope: !13948)
!13970 = !DILocation(line: 2869, column: 15, scope: !13948)
!13971 = !DILocation(line: 2870, column: 3, scope: !13948)
!13972 = !DILocation(line: 2870, column: 9, scope: !13948)
!13973 = !DILocation(line: 2870, column: 48, scope: !13948)
!13974 = !DILocation(line: 2872, column: 9, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13976, file: !13346, line: 2872, column: 8)
!13976 = distinct !DILexicalBlock(scope: !13948, file: !13346, line: 2871, column: 3)
!13977 = !DILocation(line: 2872, column: 23, scope: !13975)
!13978 = !DILocation(line: 2872, column: 37, scope: !13975)
!13979 = !DILocation(line: 2872, column: 8, scope: !13976)
!13980 = distinct !{!13980, !13971, !13981}
!13981 = !DILocation(line: 2877, column: 3, scope: !13948)
!13982 = !DILocation(line: 2880, column: 1, scope: !13948)
!13983 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !13346, file: !13346, line: 2886, type: !13984, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !13986)
!13984 = !DISubroutineType(types: !13985)
!13985 = !{!13349}
!13986 = !{!13987}
!13987 = !DILocalVariable(name: "tickstart", scope: !13983, file: !13346, line: 2888, type: !208)
!13988 = !DILocation(line: 2891, column: 3, scope: !13983)
!13989 = !DILocation(line: 2894, column: 15, scope: !13983)
!13990 = !DILocation(line: 0, scope: !13983)
!13991 = !DILocation(line: 2895, column: 3, scope: !13983)
!13992 = !DILocation(line: 2895, column: 9, scope: !13983)
!13993 = !DILocation(line: 2895, column: 45, scope: !13983)
!13994 = !DILocation(line: 2897, column: 9, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !13346, line: 2897, column: 8)
!13996 = distinct !DILexicalBlock(scope: !13983, file: !13346, line: 2896, column: 3)
!13997 = !DILocation(line: 2897, column: 23, scope: !13995)
!13998 = !DILocation(line: 2897, column: 36, scope: !13995)
!13999 = !DILocation(line: 2897, column: 8, scope: !13996)
!14000 = distinct !{!14000, !13991, !14001}
!14001 = !DILocation(line: 2902, column: 3, scope: !13983)
!14002 = !DILocation(line: 2905, column: 1, scope: !13983)
!14003 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !13346, file: !13346, line: 2916, type: !14004, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14007)
!14004 = !DISubroutineType(types: !14005)
!14005 = !{!13349, !14006}
!14006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13366, size: 32)
!14007 = !{!14008, !14009}
!14008 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !14003, file: !13346, line: 2916, type: !14006)
!14009 = !DILocalVariable(name: "tickstart", scope: !14003, file: !13346, line: 2918, type: !208)
!14010 = !DILocation(line: 0, scope: !14003)
!14011 = !DILocation(line: 2934, column: 3, scope: !14003)
!14012 = !DILocation(line: 2937, column: 15, scope: !14003)
!14013 = !DILocation(line: 2938, column: 3, scope: !14003)
!14014 = !DILocation(line: 2938, column: 9, scope: !14003)
!14015 = !DILocation(line: 2940, column: 9, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !13346, line: 2940, column: 8)
!14017 = distinct !DILexicalBlock(scope: !14003, file: !13346, line: 2939, column: 3)
!14018 = !DILocation(line: 2940, column: 23, scope: !14016)
!14019 = !DILocation(line: 2940, column: 37, scope: !14016)
!14020 = !DILocation(line: 2940, column: 8, scope: !14017)
!14021 = distinct !{!14021, !14013, !14022}
!14022 = !DILocation(line: 2945, column: 3, scope: !14003)
!14023 = !DILocation(line: 2953, column: 3, scope: !14003)
!14024 = !DILocation(line: 2970, column: 3, scope: !14003)
!14025 = !DILocation(line: 2973, column: 15, scope: !14003)
!14026 = !DILocation(line: 2974, column: 3, scope: !14003)
!14027 = !DILocation(line: 2974, column: 9, scope: !14003)
!14028 = !DILocation(line: 2974, column: 37, scope: !14003)
!14029 = !DILocation(line: 2976, column: 9, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14031, file: !13346, line: 2976, column: 8)
!14031 = distinct !DILexicalBlock(scope: !14003, file: !13346, line: 2975, column: 3)
!14032 = !DILocation(line: 2976, column: 23, scope: !14030)
!14033 = !DILocation(line: 2976, column: 37, scope: !14030)
!14034 = !DILocation(line: 2976, column: 8, scope: !14031)
!14035 = distinct !{!14035, !14026, !14036}
!14036 = !DILocation(line: 2981, column: 3, scope: !14003)
!14037 = !DILocation(line: 2984, column: 1, scope: !14003)
!14038 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !13346, file: !13346, line: 2990, type: !13984, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14039)
!14039 = !{!14040}
!14040 = !DILocalVariable(name: "tickstart", scope: !14038, file: !13346, line: 2992, type: !208)
!14041 = !DILocation(line: 2995, column: 3, scope: !14038)
!14042 = !DILocation(line: 2998, column: 15, scope: !14038)
!14043 = !DILocation(line: 0, scope: !14038)
!14044 = !DILocation(line: 2999, column: 3, scope: !14038)
!14045 = !DILocation(line: 2999, column: 9, scope: !14038)
!14046 = !DILocation(line: 3001, column: 9, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14048, file: !13346, line: 3001, column: 8)
!14048 = distinct !DILexicalBlock(scope: !14038, file: !13346, line: 3000, column: 3)
!14049 = !DILocation(line: 3001, column: 23, scope: !14047)
!14050 = !DILocation(line: 3001, column: 36, scope: !14047)
!14051 = !DILocation(line: 3001, column: 8, scope: !14048)
!14052 = distinct !{!14052, !14044, !14053}
!14053 = !DILocation(line: 3006, column: 3, scope: !14038)
!14054 = !DILocation(line: 3009, column: 1, scope: !14038)
!14055 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13346, file: !13346, line: 3051, type: !8453, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14056)
!14056 = !{!14057, !14058, !14059, !14060, !14061}
!14057 = !DILocalVariable(name: "pllm", scope: !14055, file: !13346, line: 3053, type: !208)
!14058 = !DILocalVariable(name: "pllvco", scope: !14055, file: !13346, line: 3054, type: !208)
!14059 = !DILocalVariable(name: "pllp", scope: !14055, file: !13346, line: 3055, type: !208)
!14060 = !DILocalVariable(name: "pllr", scope: !14055, file: !13346, line: 3056, type: !208)
!14061 = !DILocalVariable(name: "sysclockfreq", scope: !14055, file: !13346, line: 3057, type: !208)
!14062 = !DILocation(line: 0, scope: !14055)
!14063 = !DILocation(line: 3060, column: 16, scope: !14055)
!14064 = !DILocation(line: 3060, column: 3, scope: !14055)
!14065 = !DILocation(line: 3076, column: 19, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14067, file: !13346, line: 3073, column: 5)
!14067 = distinct !DILexicalBlock(scope: !14055, file: !13346, line: 3061, column: 3)
!14068 = !DILocation(line: 3076, column: 27, scope: !14066)
!14069 = !DILocation(line: 3077, column: 10, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14066, file: !13346, line: 3077, column: 10)
!14071 = !DILocation(line: 0, scope: !14070)
!14072 = !DILocation(line: 3087, column: 23, scope: !14066)
!14073 = !DILocation(line: 3087, column: 82, scope: !14066)
!14074 = !DILocation(line: 3089, column: 28, scope: !14066)
!14075 = !DILocation(line: 3090, column: 7, scope: !14066)
!14076 = !DILocation(line: 3096, column: 19, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14067, file: !13346, line: 3093, column: 5)
!14078 = !DILocation(line: 3096, column: 27, scope: !14077)
!14079 = !DILocation(line: 3097, column: 10, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14077, file: !13346, line: 3097, column: 10)
!14081 = !DILocation(line: 0, scope: !14080)
!14082 = !DILocation(line: 3107, column: 21, scope: !14077)
!14083 = !DILocation(line: 3107, column: 49, scope: !14077)
!14084 = !DILocation(line: 3109, column: 28, scope: !14077)
!14085 = !DILocation(line: 3110, column: 7, scope: !14077)
!14086 = !DILocation(line: 0, scope: !14067)
!14087 = !DILocation(line: 3118, column: 3, scope: !14055)
!14088 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13346, file: !13346, line: 3143, type: !13984, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14089)
!14089 = !{!14090}
!14090 = !DILocalVariable(name: "tickstart", scope: !14088, file: !13346, line: 3145, type: !208)
!14091 = !DILocation(line: 3148, column: 15, scope: !14088)
!14092 = !DILocation(line: 0, scope: !14088)
!14093 = !DILocation(line: 3151, column: 3, scope: !14088)
!14094 = !DILocation(line: 3154, column: 3, scope: !14088)
!14095 = !DILocation(line: 3154, column: 10, scope: !14088)
!14096 = !DILocation(line: 3154, column: 43, scope: !14088)
!14097 = !DILocation(line: 3156, column: 10, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14099, file: !13346, line: 3156, column: 9)
!14099 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3155, column: 3)
!14100 = !DILocation(line: 3156, column: 24, scope: !14098)
!14101 = !DILocation(line: 3156, column: 37, scope: !14098)
!14102 = !DILocation(line: 3156, column: 9, scope: !14099)
!14103 = distinct !{!14103, !14094, !14104}
!14104 = !DILocation(line: 3160, column: 3, scope: !14088)
!14105 = !DILocation(line: 3163, column: 3, scope: !14088)
!14106 = !DILocation(line: 3166, column: 15, scope: !14088)
!14107 = !DILocation(line: 3169, column: 3, scope: !14088)
!14108 = !DILocation(line: 3172, column: 3, scope: !14088)
!14109 = !DILocation(line: 3172, column: 10, scope: !14088)
!14110 = !DILocation(line: 3172, column: 44, scope: !14088)
!14111 = !DILocation(line: 3174, column: 24, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14113, file: !13346, line: 3174, column: 9)
!14113 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3173, column: 3)
!14114 = !DILocation(line: 3174, column: 37, scope: !14112)
!14115 = !DILocation(line: 3174, column: 9, scope: !14113)
!14116 = distinct !{!14116, !14108, !14117}
!14117 = !DILocation(line: 3178, column: 3, scope: !14088)
!14118 = !DILocation(line: 3184, column: 3, scope: !14088)
!14119 = !DILocation(line: 3187, column: 3, scope: !14088)
!14120 = !DILocation(line: 3187, column: 10, scope: !14088)
!14121 = !DILocation(line: 3187, column: 43, scope: !14088)
!14122 = !DILocation(line: 3189, column: 24, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !13346, line: 3189, column: 9)
!14124 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3188, column: 3)
!14125 = !DILocation(line: 3189, column: 37, scope: !14123)
!14126 = !DILocation(line: 3189, column: 9, scope: !14124)
!14127 = distinct !{!14127, !14119, !14128}
!14128 = !DILocation(line: 3193, column: 3, scope: !14088)
!14129 = !DILocation(line: 3199, column: 3, scope: !14088)
!14130 = !DILocation(line: 3202, column: 3, scope: !14088)
!14131 = !DILocation(line: 3202, column: 10, scope: !14088)
!14132 = !DILocation(line: 3202, column: 43, scope: !14088)
!14133 = !DILocation(line: 3204, column: 24, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14135, file: !13346, line: 3204, column: 9)
!14135 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3203, column: 3)
!14136 = !DILocation(line: 3204, column: 37, scope: !14134)
!14137 = !DILocation(line: 3204, column: 9, scope: !14135)
!14138 = distinct !{!14138, !14130, !14139}
!14139 = !DILocation(line: 3208, column: 3, scope: !14088)
!14140 = !DILocation(line: 3215, column: 3, scope: !14088)
!14141 = !DILocation(line: 3218, column: 3, scope: !14088)
!14142 = !DILocation(line: 3218, column: 10, scope: !14088)
!14143 = !DILocation(line: 3218, column: 46, scope: !14088)
!14144 = !DILocation(line: 3220, column: 24, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !13346, line: 3220, column: 9)
!14146 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3219, column: 3)
!14147 = !DILocation(line: 3220, column: 37, scope: !14145)
!14148 = !DILocation(line: 3220, column: 9, scope: !14146)
!14149 = distinct !{!14149, !14141, !14150}
!14150 = !DILocation(line: 3224, column: 3, scope: !14088)
!14151 = !DILocation(line: 3232, column: 3, scope: !14088)
!14152 = !DILocation(line: 3235, column: 3, scope: !14088)
!14153 = !DILocation(line: 3235, column: 10, scope: !14088)
!14154 = !DILocation(line: 3235, column: 46, scope: !14088)
!14155 = !DILocation(line: 3237, column: 10, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14157, file: !13346, line: 3237, column: 9)
!14157 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3236, column: 3)
!14158 = !DILocation(line: 3237, column: 24, scope: !14156)
!14159 = !DILocation(line: 3237, column: 37, scope: !14156)
!14160 = !DILocation(line: 3237, column: 9, scope: !14157)
!14161 = distinct !{!14161, !14152, !14162}
!14162 = !DILocation(line: 3241, column: 3, scope: !14088)
!14163 = !DILocation(line: 3247, column: 16, scope: !14088)
!14164 = !DILocation(line: 3257, column: 19, scope: !14088)
!14165 = !DILocation(line: 3270, column: 19, scope: !14088)
!14166 = !DILocation(line: 3274, column: 3, scope: !14088)
!14167 = !DILocation(line: 3277, column: 3, scope: !14088)
!14168 = !DILocation(line: 3281, column: 3, scope: !14088)
!14169 = !DILocation(line: 3285, column: 3, scope: !14088)
!14170 = !DILocation(line: 3288, column: 3, scope: !14088)
!14171 = !DILocation(line: 3292, column: 3, scope: !14088)
!14172 = !DILocation(line: 3296, column: 3, scope: !14088)
!14173 = !DILocation(line: 3299, column: 3, scope: !14088)
!14174 = !DILocation(line: 3302, column: 19, scope: !14088)
!14175 = !DILocation(line: 3305, column: 19, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14088, file: !13346, line: 3305, column: 6)
!14177 = !DILocation(line: 3305, column: 6, scope: !14176)
!14178 = !DILocation(line: 3305, column: 31, scope: !14176)
!14179 = !DILocation(line: 0, scope: !14176)
!14180 = !DILocation(line: 3313, column: 1, scope: !14088)
!14181 = !DISubprogram(name: "HAL_InitTick", scope: !13721, file: !13721, line: 223, type: !14182, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{!13349, !208}
!14184 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13346, file: !13346, line: 3333, type: !14185, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14209)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!13349, !14187}
!14187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14188, size: 32)
!14188 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !14189, line: 70, baseType: !14190)
!14189 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14190 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14189, line: 49, size: 416, elements: !14191)
!14191 = !{!14192, !14193, !14194, !14195, !14196, !14197, !14198}
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !14190, file: !14189, line: 51, baseType: !208, size: 32)
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !14190, file: !14189, line: 54, baseType: !208, size: 32, offset: 32)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !14190, file: !14189, line: 57, baseType: !208, size: 32, offset: 64)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !14190, file: !14189, line: 60, baseType: !208, size: 32, offset: 96)
!14196 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !14190, file: !14189, line: 63, baseType: !208, size: 32, offset: 128)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !14190, file: !14189, line: 66, baseType: !208, size: 32, offset: 160)
!14198 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !14190, file: !14189, line: 69, baseType: !14199, size: 224, offset: 192)
!14199 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13352, line: 73, baseType: !14200)
!14200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13352, line: 45, size: 224, elements: !14201)
!14201 = !{!14202, !14203, !14204, !14205, !14206, !14207, !14208}
!14202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !14200, file: !13352, line: 47, baseType: !208, size: 32)
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !14200, file: !13352, line: 50, baseType: !208, size: 32, offset: 32)
!14204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14200, file: !13352, line: 53, baseType: !208, size: 32, offset: 64)
!14205 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14200, file: !13352, line: 56, baseType: !208, size: 32, offset: 96)
!14206 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14200, file: !13352, line: 60, baseType: !208, size: 32, offset: 128)
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !14200, file: !13352, line: 63, baseType: !208, size: 32, offset: 160)
!14208 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !14200, file: !13352, line: 68, baseType: !208, size: 32, offset: 192)
!14209 = !{!14210, !14211, !14212, !14213, !14217}
!14210 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14184, file: !13346, line: 3333, type: !14187)
!14211 = !DILocalVariable(name: "tickstart", scope: !14184, file: !13346, line: 3335, type: !208)
!14212 = !DILocalVariable(name: "pll_config", scope: !14184, file: !13346, line: 3335, type: !208)
!14213 = !DILocalVariable(name: "pwrclkchanged", scope: !14214, file: !13346, line: 3517, type: !14216)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !13346, line: 3516, column: 3)
!14215 = distinct !DILexicalBlock(scope: !14184, file: !13346, line: 3515, column: 6)
!14216 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !990, line: 188, baseType: !3203)
!14217 = !DILocalVariable(name: "tmpreg", scope: !14218, file: !13346, line: 3526, type: !423)
!14218 = distinct !DILexicalBlock(scope: !14219, file: !13346, line: 3526, column: 7)
!14219 = distinct !DILexicalBlock(scope: !14220, file: !13346, line: 3525, column: 5)
!14220 = distinct !DILexicalBlock(scope: !14214, file: !13346, line: 3524, column: 8)
!14221 = !DILocation(line: 0, scope: !14184)
!14222 = !DILocation(line: 3338, column: 24, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14184, file: !13346, line: 3338, column: 6)
!14224 = !DILocation(line: 3338, column: 6, scope: !14184)
!14225 = !DILocation(line: 3346, column: 27, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14184, file: !13346, line: 3346, column: 6)
!14227 = !DILocation(line: 3346, column: 43, scope: !14226)
!14228 = !DILocation(line: 3346, column: 69, scope: !14226)
!14229 = !DILocation(line: 3346, column: 6, scope: !14184)
!14230 = !DILocation(line: 3352, column: 9, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14232, file: !13346, line: 3352, column: 8)
!14232 = distinct !DILexicalBlock(scope: !14226, file: !13346, line: 3347, column: 3)
!14233 = !DILocation(line: 3352, column: 39, scope: !14231)
!14234 = !DILocation(line: 3352, column: 128, scope: !14231)
!14235 = !DILocation(line: 3353, column: 9, scope: !14231)
!14236 = !DILocation(line: 3353, column: 39, scope: !14231)
!14237 = !DILocation(line: 3353, column: 60, scope: !14231)
!14238 = !DILocation(line: 3353, column: 70, scope: !14231)
!14239 = !DILocation(line: 3353, column: 78, scope: !14231)
!14240 = !DILocation(line: 3353, column: 100, scope: !14231)
!14241 = !DILocation(line: 3353, column: 128, scope: !14231)
!14242 = !DILocation(line: 3354, column: 9, scope: !14231)
!14243 = !DILocation(line: 3354, column: 39, scope: !14231)
!14244 = !DILocation(line: 3354, column: 61, scope: !14231)
!14245 = !DILocation(line: 3354, column: 71, scope: !14231)
!14246 = !DILocation(line: 3354, column: 79, scope: !14231)
!14247 = !DILocation(line: 3354, column: 101, scope: !14231)
!14248 = !DILocation(line: 3352, column: 8, scope: !14232)
!14249 = !DILocation(line: 3360, column: 11, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14251, file: !13346, line: 3360, column: 10)
!14251 = distinct !DILexicalBlock(scope: !14231, file: !13346, line: 3359, column: 5)
!14252 = !DILocation(line: 3360, column: 57, scope: !14250)
!14253 = !DILocation(line: 3360, column: 80, scope: !14250)
!14254 = !DILocation(line: 3360, column: 89, scope: !14250)
!14255 = !DILocation(line: 3360, column: 10, scope: !14251)
!14256 = !DILocation(line: 3368, column: 7, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14258, file: !13346, line: 3368, column: 7)
!14258 = distinct !DILexicalBlock(scope: !14259, file: !13346, line: 3368, column: 7)
!14259 = distinct !DILexicalBlock(scope: !14231, file: !13346, line: 3366, column: 5)
!14260 = !DILocation(line: 3368, column: 7, scope: !14258)
!14261 = !DILocation(line: 3368, column: 7, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14257, file: !13346, line: 3368, column: 7)
!14263 = !DILocation(line: 3368, column: 7, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !13346, line: 3368, column: 7)
!14265 = distinct !DILexicalBlock(scope: !14257, file: !13346, line: 3368, column: 7)
!14266 = !DILocation(line: 3368, column: 7, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14265, file: !13346, line: 3368, column: 7)
!14268 = !DILocation(line: 0, scope: !14257)
!14269 = !DILocation(line: 3371, column: 30, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14259, file: !13346, line: 3371, column: 10)
!14271 = !DILocation(line: 3371, column: 40, scope: !14270)
!14272 = !DILocation(line: 0, scope: !14270)
!14273 = !DILocation(line: 3371, column: 10, scope: !14259)
!14274 = !DILocation(line: 3377, column: 15, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14270, file: !13346, line: 3372, column: 7)
!14276 = !DILocation(line: 3377, column: 51, scope: !14275)
!14277 = !DILocation(line: 3377, column: 9, scope: !14275)
!14278 = !DILocation(line: 3379, column: 15, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !13346, line: 3379, column: 14)
!14280 = distinct !DILexicalBlock(scope: !14275, file: !13346, line: 3378, column: 9)
!14281 = !DILocation(line: 3379, column: 29, scope: !14279)
!14282 = !DILocation(line: 3379, column: 43, scope: !14279)
!14283 = !DILocation(line: 3379, column: 14, scope: !14280)
!14284 = distinct !{!14284, !14277, !14285}
!14285 = !DILocation(line: 3383, column: 9, scope: !14275)
!14286 = !DILocation(line: 3391, column: 15, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14270, file: !13346, line: 3386, column: 7)
!14288 = !DILocation(line: 3391, column: 9, scope: !14287)
!14289 = !DILocation(line: 3393, column: 15, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !13346, line: 3393, column: 14)
!14291 = distinct !DILexicalBlock(scope: !14287, file: !13346, line: 3392, column: 9)
!14292 = !DILocation(line: 3393, column: 29, scope: !14290)
!14293 = !DILocation(line: 3393, column: 43, scope: !14290)
!14294 = !DILocation(line: 3393, column: 14, scope: !14291)
!14295 = distinct !{!14295, !14288, !14296}
!14296 = !DILocation(line: 3397, column: 9, scope: !14287)
!14297 = !DILocation(line: 3402, column: 27, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14184, file: !13346, line: 3402, column: 6)
!14299 = !DILocation(line: 3402, column: 43, scope: !14298)
!14300 = !DILocation(line: 3402, column: 69, scope: !14298)
!14301 = !DILocation(line: 3402, column: 6, scope: !14184)
!14302 = !DILocation(line: 3410, column: 9, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14304, file: !13346, line: 3410, column: 8)
!14304 = distinct !DILexicalBlock(scope: !14298, file: !13346, line: 3403, column: 3)
!14305 = !DILocation(line: 3410, column: 39, scope: !14303)
!14306 = !DILocation(line: 3410, column: 128, scope: !14303)
!14307 = !DILocation(line: 3411, column: 9, scope: !14303)
!14308 = !DILocation(line: 3411, column: 39, scope: !14303)
!14309 = !DILocation(line: 3411, column: 60, scope: !14303)
!14310 = !DILocation(line: 3411, column: 70, scope: !14303)
!14311 = !DILocation(line: 3411, column: 78, scope: !14303)
!14312 = !DILocation(line: 3411, column: 100, scope: !14303)
!14313 = !DILocation(line: 3411, column: 128, scope: !14303)
!14314 = !DILocation(line: 3412, column: 9, scope: !14303)
!14315 = !DILocation(line: 3412, column: 39, scope: !14303)
!14316 = !DILocation(line: 3412, column: 61, scope: !14303)
!14317 = !DILocation(line: 3412, column: 71, scope: !14303)
!14318 = !DILocation(line: 3412, column: 79, scope: !14303)
!14319 = !DILocation(line: 3412, column: 101, scope: !14303)
!14320 = !DILocation(line: 3410, column: 8, scope: !14304)
!14321 = !DILocation(line: 3419, column: 11, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14323, file: !13346, line: 3419, column: 10)
!14323 = distinct !DILexicalBlock(scope: !14303, file: !13346, line: 3417, column: 5)
!14324 = !DILocation(line: 3419, column: 57, scope: !14322)
!14325 = !DILocation(line: 3419, column: 80, scope: !14322)
!14326 = !DILocation(line: 3419, column: 89, scope: !14322)
!14327 = !DILocation(line: 3419, column: 10, scope: !14323)
!14328 = !DILocation(line: 3433, column: 30, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !13346, line: 3433, column: 10)
!14330 = distinct !DILexicalBlock(scope: !14303, file: !13346, line: 3431, column: 5)
!14331 = !DILocation(line: 3433, column: 39, scope: !14329)
!14332 = !DILocation(line: 3433, column: 10, scope: !14330)
!14333 = !DILocation(line: 3436, column: 9, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14329, file: !13346, line: 3434, column: 7)
!14335 = !DILocation(line: 3439, column: 21, scope: !14334)
!14336 = !DILocation(line: 3442, column: 9, scope: !14334)
!14337 = !DILocation(line: 3442, column: 15, scope: !14334)
!14338 = !DILocation(line: 3442, column: 51, scope: !14334)
!14339 = !DILocation(line: 3444, column: 15, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !13346, line: 3444, column: 14)
!14341 = distinct !DILexicalBlock(scope: !14334, file: !13346, line: 3443, column: 9)
!14342 = !DILocation(line: 3444, column: 29, scope: !14340)
!14343 = !DILocation(line: 3444, column: 43, scope: !14340)
!14344 = !DILocation(line: 3444, column: 14, scope: !14341)
!14345 = distinct !{!14345, !14336, !14346}
!14346 = !DILocation(line: 3448, column: 9, scope: !14334)
!14347 = !DILocation(line: 3456, column: 9, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14329, file: !13346, line: 3454, column: 7)
!14349 = !DILocation(line: 3459, column: 21, scope: !14348)
!14350 = !DILocation(line: 3462, column: 9, scope: !14348)
!14351 = !DILocation(line: 3462, column: 15, scope: !14348)
!14352 = !DILocation(line: 3464, column: 15, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !13346, line: 3464, column: 14)
!14354 = distinct !DILexicalBlock(scope: !14348, file: !13346, line: 3463, column: 9)
!14355 = !DILocation(line: 3464, column: 29, scope: !14353)
!14356 = !DILocation(line: 3464, column: 43, scope: !14353)
!14357 = !DILocation(line: 3464, column: 14, scope: !14354)
!14358 = distinct !{!14358, !14350, !14359}
!14359 = !DILocation(line: 3468, column: 9, scope: !14348)
!14360 = !DILocation(line: 0, scope: !14303)
!14361 = !DILocation(line: 3473, column: 27, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14184, file: !13346, line: 3473, column: 6)
!14363 = !DILocation(line: 3473, column: 43, scope: !14362)
!14364 = !DILocation(line: 3473, column: 69, scope: !14362)
!14365 = !DILocation(line: 3473, column: 6, scope: !14184)
!14366 = !DILocation(line: 3479, column: 28, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14368, file: !13346, line: 3479, column: 8)
!14368 = distinct !DILexicalBlock(scope: !14362, file: !13346, line: 3474, column: 3)
!14369 = !DILocation(line: 3479, column: 37, scope: !14367)
!14370 = !DILocation(line: 3479, column: 8, scope: !14368)
!14371 = !DILocation(line: 3482, column: 7, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14367, file: !13346, line: 3480, column: 5)
!14373 = !DILocation(line: 3485, column: 19, scope: !14372)
!14374 = !DILocation(line: 3488, column: 7, scope: !14372)
!14375 = !DILocation(line: 3488, column: 13, scope: !14372)
!14376 = !DILocation(line: 3488, column: 49, scope: !14372)
!14377 = !DILocation(line: 3490, column: 13, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14379, file: !13346, line: 3490, column: 12)
!14379 = distinct !DILexicalBlock(scope: !14372, file: !13346, line: 3489, column: 7)
!14380 = !DILocation(line: 3490, column: 27, scope: !14378)
!14381 = !DILocation(line: 3490, column: 41, scope: !14378)
!14382 = !DILocation(line: 3490, column: 12, scope: !14379)
!14383 = distinct !{!14383, !14374, !14384}
!14384 = !DILocation(line: 3494, column: 7, scope: !14372)
!14385 = !DILocation(line: 3499, column: 7, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14367, file: !13346, line: 3497, column: 5)
!14387 = !DILocation(line: 3502, column: 19, scope: !14386)
!14388 = !DILocation(line: 3505, column: 7, scope: !14386)
!14389 = !DILocation(line: 3505, column: 13, scope: !14386)
!14390 = !DILocation(line: 3507, column: 13, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14392, file: !13346, line: 3507, column: 12)
!14392 = distinct !DILexicalBlock(scope: !14386, file: !13346, line: 3506, column: 7)
!14393 = !DILocation(line: 3507, column: 27, scope: !14391)
!14394 = !DILocation(line: 3507, column: 41, scope: !14391)
!14395 = !DILocation(line: 3507, column: 12, scope: !14392)
!14396 = distinct !{!14396, !14388, !14397}
!14397 = !DILocation(line: 3511, column: 7, scope: !14386)
!14398 = !DILocation(line: 3515, column: 27, scope: !14215)
!14399 = !DILocation(line: 3515, column: 43, scope: !14215)
!14400 = !DILocation(line: 3515, column: 69, scope: !14215)
!14401 = !DILocation(line: 3515, column: 6, scope: !14184)
!14402 = !DILocation(line: 0, scope: !14214)
!14403 = !DILocation(line: 3524, column: 8, scope: !14220)
!14404 = !DILocation(line: 3524, column: 8, scope: !14214)
!14405 = !DILocation(line: 3526, column: 7, scope: !14218)
!14406 = !DILocation(line: 3526, column: 7, scope: !14219)
!14407 = !DILocation(line: 3528, column: 5, scope: !14219)
!14408 = !DILocation(line: 3530, column: 8, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14214, file: !13346, line: 3530, column: 8)
!14410 = !DILocation(line: 3530, column: 8, scope: !14214)
!14411 = !DILocation(line: 3533, column: 7, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14409, file: !13346, line: 3531, column: 5)
!14413 = !DILocation(line: 3536, column: 19, scope: !14412)
!14414 = !DILocation(line: 3538, column: 7, scope: !14412)
!14415 = !DILocation(line: 3538, column: 13, scope: !14412)
!14416 = !DILocation(line: 3540, column: 13, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !13346, line: 3540, column: 12)
!14418 = distinct !DILexicalBlock(scope: !14412, file: !13346, line: 3539, column: 7)
!14419 = !DILocation(line: 3540, column: 27, scope: !14417)
!14420 = !DILocation(line: 3540, column: 40, scope: !14417)
!14421 = !DILocation(line: 3540, column: 12, scope: !14418)
!14422 = distinct !{!14422, !14414, !14423}
!14423 = !DILocation(line: 3544, column: 7, scope: !14412)
!14424 = !DILocation(line: 3548, column: 5, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14426, file: !13346, line: 3548, column: 5)
!14426 = distinct !DILexicalBlock(scope: !14214, file: !13346, line: 3548, column: 5)
!14427 = !DILocation(line: 3548, column: 5, scope: !14426)
!14428 = !DILocation(line: 3548, column: 5, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14425, file: !13346, line: 3548, column: 5)
!14430 = !DILocation(line: 3548, column: 5, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14432, file: !13346, line: 3548, column: 5)
!14432 = distinct !DILexicalBlock(scope: !14425, file: !13346, line: 3548, column: 5)
!14433 = !DILocation(line: 3548, column: 5, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14432, file: !13346, line: 3548, column: 5)
!14435 = !DILocation(line: 0, scope: !14425)
!14436 = !DILocation(line: 3550, column: 28, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14214, file: !13346, line: 3550, column: 8)
!14438 = !DILocation(line: 3550, column: 38, scope: !14437)
!14439 = !DILocation(line: 0, scope: !14437)
!14440 = !DILocation(line: 3550, column: 8, scope: !14214)
!14441 = !DILocation(line: 3556, column: 13, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14437, file: !13346, line: 3551, column: 5)
!14443 = !DILocation(line: 3556, column: 49, scope: !14442)
!14444 = !DILocation(line: 3556, column: 7, scope: !14442)
!14445 = !DILocation(line: 3558, column: 13, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14447, file: !13346, line: 3558, column: 12)
!14447 = distinct !DILexicalBlock(scope: !14442, file: !13346, line: 3557, column: 7)
!14448 = !DILocation(line: 3558, column: 27, scope: !14446)
!14449 = !DILocation(line: 3558, column: 41, scope: !14446)
!14450 = !DILocation(line: 3558, column: 12, scope: !14447)
!14451 = distinct !{!14451, !14444, !14452}
!14452 = !DILocation(line: 3562, column: 7, scope: !14442)
!14453 = !DILocation(line: 3570, column: 13, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14437, file: !13346, line: 3565, column: 5)
!14455 = !DILocation(line: 3570, column: 7, scope: !14454)
!14456 = !DILocation(line: 3572, column: 13, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !13346, line: 3572, column: 12)
!14458 = distinct !DILexicalBlock(scope: !14454, file: !13346, line: 3571, column: 7)
!14459 = !DILocation(line: 3572, column: 27, scope: !14457)
!14460 = !DILocation(line: 3572, column: 41, scope: !14457)
!14461 = !DILocation(line: 3572, column: 12, scope: !14458)
!14462 = distinct !{!14462, !14455, !14463}
!14463 = !DILocation(line: 3576, column: 7, scope: !14454)
!14464 = !DILocation(line: 3580, column: 8, scope: !14214)
!14465 = !DILocation(line: 3582, column: 7, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !13346, line: 3581, column: 5)
!14467 = distinct !DILexicalBlock(scope: !14214, file: !13346, line: 3580, column: 8)
!14468 = !DILocation(line: 3583, column: 5, scope: !14466)
!14469 = !DILocation(line: 3588, column: 31, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14184, file: !13346, line: 3588, column: 7)
!14471 = !DILocation(line: 3588, column: 41, scope: !14470)
!14472 = !DILocation(line: 3588, column: 7, scope: !14184)
!14473 = !DILocation(line: 3591, column: 8, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !13346, line: 3591, column: 8)
!14475 = distinct !DILexicalBlock(scope: !14470, file: !13346, line: 3589, column: 3)
!14476 = !DILocation(line: 3591, column: 38, scope: !14474)
!14477 = !DILocation(line: 3591, column: 8, scope: !14475)
!14478 = !DILocation(line: 3593, column: 44, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !13346, line: 3593, column: 10)
!14480 = distinct !DILexicalBlock(scope: !14474, file: !13346, line: 3592, column: 5)
!14481 = !DILocation(line: 0, scope: !14479)
!14482 = !DILocation(line: 3593, column: 10, scope: !14480)
!14483 = !DILocation(line: 3610, column: 15, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14479, file: !13346, line: 3594, column: 7)
!14485 = !DILocation(line: 3610, column: 9, scope: !14484)
!14486 = !DILocation(line: 3612, column: 15, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14488, file: !13346, line: 3612, column: 14)
!14488 = distinct !DILexicalBlock(scope: !14484, file: !13346, line: 3611, column: 9)
!14489 = !DILocation(line: 3612, column: 29, scope: !14487)
!14490 = !DILocation(line: 3612, column: 43, scope: !14487)
!14491 = !DILocation(line: 3612, column: 14, scope: !14488)
!14492 = distinct !{!14492, !14485, !14493}
!14493 = !DILocation(line: 3616, column: 9, scope: !14484)
!14494 = !DILocation(line: 3619, column: 9, scope: !14484)
!14495 = !DILocation(line: 3626, column: 9, scope: !14484)
!14496 = !DILocation(line: 3629, column: 21, scope: !14484)
!14497 = !DILocation(line: 3632, column: 9, scope: !14484)
!14498 = !DILocation(line: 3632, column: 15, scope: !14484)
!14499 = !DILocation(line: 3632, column: 51, scope: !14484)
!14500 = !DILocation(line: 3634, column: 15, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !13346, line: 3634, column: 14)
!14502 = distinct !DILexicalBlock(scope: !14484, file: !13346, line: 3633, column: 9)
!14503 = !DILocation(line: 3634, column: 29, scope: !14501)
!14504 = !DILocation(line: 3634, column: 43, scope: !14501)
!14505 = !DILocation(line: 3634, column: 14, scope: !14502)
!14506 = distinct !{!14506, !14497, !14507}
!14507 = !DILocation(line: 3638, column: 9, scope: !14484)
!14508 = !DILocation(line: 3649, column: 15, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !14479, file: !13346, line: 3641, column: 7)
!14510 = !DILocation(line: 3649, column: 9, scope: !14509)
!14511 = !DILocation(line: 3651, column: 15, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14513, file: !13346, line: 3651, column: 14)
!14513 = distinct !DILexicalBlock(scope: !14509, file: !13346, line: 3650, column: 9)
!14514 = !DILocation(line: 3651, column: 29, scope: !14512)
!14515 = !DILocation(line: 3651, column: 43, scope: !14512)
!14516 = !DILocation(line: 3651, column: 14, scope: !14513)
!14517 = distinct !{!14517, !14510, !14518}
!14518 = !DILocation(line: 3655, column: 9, scope: !14509)
!14519 = !DILocation(line: 3661, column: 44, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !13346, line: 3661, column: 10)
!14521 = distinct !DILexicalBlock(scope: !14474, file: !13346, line: 3659, column: 5)
!14522 = !DILocation(line: 3661, column: 10, scope: !14521)
!14523 = !DILocation(line: 3668, column: 27, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14520, file: !13346, line: 3666, column: 7)
!14525 = !DILocation(line: 3671, column: 14, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14524, file: !13346, line: 3670, column: 13)
!14527 = !DILocation(line: 3671, column: 81, scope: !14526)
!14528 = !DILocation(line: 3671, column: 55, scope: !14526)
!14529 = !DILocation(line: 3671, column: 92, scope: !14526)
!14530 = !DILocation(line: 3672, column: 14, scope: !14526)
!14531 = !DILocation(line: 3672, column: 80, scope: !14526)
!14532 = !DILocation(line: 3672, column: 53, scope: !14526)
!14533 = !DILocation(line: 3672, column: 111, scope: !14526)
!14534 = !DILocation(line: 3673, column: 14, scope: !14526)
!14535 = !DILocation(line: 3673, column: 80, scope: !14526)
!14536 = !DILocation(line: 3673, column: 86, scope: !14526)
!14537 = !DILocation(line: 3673, column: 53, scope: !14526)
!14538 = !DILocation(line: 3673, column: 111, scope: !14526)
!14539 = !DILocation(line: 3674, column: 14, scope: !14526)
!14540 = !DILocation(line: 3674, column: 82, scope: !14526)
!14541 = !DILocation(line: 3674, column: 101, scope: !14526)
!14542 = !DILocation(line: 3674, column: 53, scope: !14526)
!14543 = !DILocation(line: 3674, column: 126, scope: !14526)
!14544 = !DILocation(line: 3675, column: 14, scope: !14526)
!14545 = !DILocation(line: 3675, column: 80, scope: !14526)
!14546 = !DILocation(line: 3675, column: 85, scope: !14526)
!14547 = !DILocation(line: 3675, column: 53, scope: !14526)
!14548 = !DILocation(line: 3675, column: 111, scope: !14526)
!14549 = !DILocation(line: 3676, column: 14, scope: !14526)
!14550 = !DILocation(line: 3676, column: 80, scope: !14526)
!14551 = !DILocation(line: 3676, column: 85, scope: !14526)
!14552 = !DILocation(line: 3676, column: 53, scope: !14526)
!14553 = !DILocation(line: 3670, column: 13, scope: !14524)
!14554 = !DILocation(line: 3691, column: 3, scope: !14184)
!14555 = !DILocation(line: 3692, column: 1, scope: !14184)
!14556 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13346, file: !13346, line: 3703, type: !14557, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14559)
!14557 = !DISubroutineType(types: !14558)
!14558 = !{null, !14187}
!14559 = !{!14560}
!14560 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14556, file: !13346, line: 3703, type: !14187)
!14561 = !DILocation(line: 0, scope: !14556)
!14562 = !DILocation(line: 3706, column: 22, scope: !14556)
!14563 = !DILocation(line: 3706, column: 37, scope: !14556)
!14564 = !DILocation(line: 3709, column: 12, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14556, file: !13346, line: 3709, column: 6)
!14566 = !DILocation(line: 3709, column: 15, scope: !14565)
!14567 = !DILocation(line: 3709, column: 31, scope: !14565)
!14568 = !DILocation(line: 3709, column: 6, scope: !14556)
!14569 = !DILocation(line: 3711, column: 24, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14565, file: !13346, line: 3710, column: 3)
!14571 = !DILocation(line: 3711, column: 33, scope: !14570)
!14572 = !DILocation(line: 3712, column: 3, scope: !14570)
!14573 = !DILocation(line: 3713, column: 17, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14565, file: !13346, line: 3713, column: 11)
!14575 = !DILocation(line: 3713, column: 20, scope: !14574)
!14576 = !DILocation(line: 3713, column: 35, scope: !14574)
!14577 = !DILocation(line: 0, scope: !14574)
!14578 = !DILocation(line: 3713, column: 11, scope: !14565)
!14579 = !DILocation(line: 3715, column: 33, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14574, file: !13346, line: 3714, column: 3)
!14581 = !DILocation(line: 3716, column: 3, scope: !14580)
!14582 = !DILocation(line: 3719, column: 33, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14574, file: !13346, line: 3718, column: 3)
!14584 = !DILocation(line: 3723, column: 12, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14556, file: !13346, line: 3723, column: 6)
!14586 = !DILocation(line: 3723, column: 15, scope: !14585)
!14587 = !DILocation(line: 3729, column: 24, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14585, file: !13346, line: 3728, column: 3)
!14589 = !DILocation(line: 3729, column: 33, scope: !14588)
!14590 = !DILocation(line: 3732, column: 61, scope: !14556)
!14591 = !DILocation(line: 3732, column: 81, scope: !14556)
!14592 = !DILocation(line: 3732, column: 22, scope: !14556)
!14593 = !DILocation(line: 3732, column: 42, scope: !14556)
!14594 = !DILocation(line: 3735, column: 12, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14556, file: !13346, line: 3735, column: 6)
!14596 = !DILocation(line: 3735, column: 17, scope: !14595)
!14597 = !DILocation(line: 3735, column: 35, scope: !14595)
!14598 = !DILocation(line: 3735, column: 6, scope: !14556)
!14599 = !DILocation(line: 3737, column: 24, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14595, file: !13346, line: 3736, column: 3)
!14601 = !DILocation(line: 3737, column: 33, scope: !14600)
!14602 = !DILocation(line: 3738, column: 3, scope: !14600)
!14603 = !DILocation(line: 3739, column: 17, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14595, file: !13346, line: 3739, column: 11)
!14605 = !DILocation(line: 3739, column: 22, scope: !14604)
!14606 = !DILocation(line: 3739, column: 39, scope: !14604)
!14607 = !DILocation(line: 0, scope: !14604)
!14608 = !DILocation(line: 3739, column: 11, scope: !14595)
!14609 = !DILocation(line: 3741, column: 33, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14604, file: !13346, line: 3740, column: 3)
!14611 = !DILocation(line: 3742, column: 3, scope: !14610)
!14612 = !DILocation(line: 3745, column: 33, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14604, file: !13346, line: 3744, column: 3)
!14614 = !DILocation(line: 3749, column: 12, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14556, file: !13346, line: 3749, column: 6)
!14616 = !DILocation(line: 3749, column: 16, scope: !14615)
!14617 = !DILocation(line: 3755, column: 24, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14615, file: !13346, line: 3754, column: 3)
!14619 = !DILocation(line: 3755, column: 33, scope: !14618)
!14620 = !DILocation(line: 3759, column: 12, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14556, file: !13346, line: 3759, column: 6)
!14622 = !DILocation(line: 3759, column: 15, scope: !14621)
!14623 = !DILocation(line: 3759, column: 30, scope: !14621)
!14624 = !DILocation(line: 3759, column: 6, scope: !14556)
!14625 = !DILocation(line: 3765, column: 28, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14621, file: !13346, line: 3764, column: 3)
!14627 = !DILocation(line: 3765, column: 37, scope: !14626)
!14628 = !DILocation(line: 3767, column: 54, scope: !14556)
!14629 = !DILocation(line: 3767, column: 62, scope: !14556)
!14630 = !DILocation(line: 3767, column: 26, scope: !14556)
!14631 = !DILocation(line: 3767, column: 36, scope: !14556)
!14632 = !DILocation(line: 3768, column: 49, scope: !14556)
!14633 = !DILocation(line: 3768, column: 57, scope: !14556)
!14634 = !DILocation(line: 3768, column: 26, scope: !14556)
!14635 = !DILocation(line: 3768, column: 31, scope: !14556)
!14636 = !DILocation(line: 3769, column: 50, scope: !14556)
!14637 = !DILocation(line: 3769, column: 78, scope: !14556)
!14638 = !DILocation(line: 3769, column: 26, scope: !14556)
!14639 = !DILocation(line: 3769, column: 31, scope: !14556)
!14640 = !DILocation(line: 3770, column: 52, scope: !14556)
!14641 = !DILocation(line: 3770, column: 102, scope: !14556)
!14642 = !DILocation(line: 3770, column: 109, scope: !14556)
!14643 = !DILocation(line: 3770, column: 26, scope: !14556)
!14644 = !DILocation(line: 3770, column: 31, scope: !14556)
!14645 = !DILocation(line: 3771, column: 50, scope: !14556)
!14646 = !DILocation(line: 3771, column: 78, scope: !14556)
!14647 = !DILocation(line: 3771, column: 26, scope: !14556)
!14648 = !DILocation(line: 3771, column: 31, scope: !14556)
!14649 = !DILocation(line: 3772, column: 50, scope: !14556)
!14650 = !DILocation(line: 3772, column: 78, scope: !14556)
!14651 = !DILocation(line: 3772, column: 26, scope: !14556)
!14652 = !DILocation(line: 3772, column: 31, scope: !14556)
!14653 = !DILocation(line: 3773, column: 1, scope: !14556)
!14654 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14655, file: !14655, line: 257, type: !8463, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14656)
!14655 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14656 = !{!14657}
!14657 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14654, file: !14655, line: 257, type: !208)
!14658 = !DILocation(line: 0, scope: !14654)
!14659 = !DILocation(line: 260, column: 3, scope: !14654)
!14660 = !DILocation(line: 261, column: 1, scope: !14654)
!14661 = distinct !DISubprogram(name: "LL_InitTick", scope: !14662, file: !14662, line: 260, type: !11743, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14663)
!14662 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14663 = !{!14664, !14665}
!14664 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14661, file: !14662, line: 260, type: !208)
!14665 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14661, file: !14662, line: 260, type: !208)
!14666 = !DILocation(line: 0, scope: !14661)
!14667 = !DILocation(line: 263, column: 46, scope: !14661)
!14668 = !DILocation(line: 263, column: 55, scope: !14661)
!14669 = !DILocation(line: 263, column: 18, scope: !14661)
!14670 = !DILocation(line: 264, column: 18, scope: !14661)
!14671 = !DILocation(line: 265, column: 18, scope: !14661)
!14672 = !DILocation(line: 267, column: 1, scope: !14661)
!14673 = distinct !DISubprogram(name: "LL_mDelay", scope: !14655, file: !14655, line: 273, type: !8463, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14674)
!14674 = !{!14675, !14676}
!14675 = !DILocalVariable(name: "Delay", arg: 1, scope: !14673, file: !14655, line: 273, type: !208)
!14676 = !DILocalVariable(name: "tmp", scope: !14673, file: !14655, line: 275, type: !423)
!14677 = !DILocation(line: 0, scope: !14673)
!14678 = !DILocation(line: 275, column: 3, scope: !14673)
!14679 = !DILocation(line: 275, column: 18, scope: !14673)
!14680 = !DILocation(line: 275, column: 33, scope: !14673)
!14681 = !DILocation(line: 277, column: 10, scope: !14673)
!14682 = !DILocation(line: 280, column: 12, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14673, file: !14655, line: 280, column: 6)
!14684 = !DILocation(line: 285, column: 3, scope: !14673)
!14685 = !DILocation(line: 287, column: 18, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14687, file: !14655, line: 287, column: 8)
!14687 = distinct !DILexicalBlock(scope: !14673, file: !14655, line: 286, column: 3)
!14688 = !DILocation(line: 292, column: 1, scope: !14673)
!14689 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14655, file: !14655, line: 323, type: !8463, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14690)
!14690 = !{!14691}
!14691 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14689, file: !14655, line: 323, type: !208)
!14692 = !DILocation(line: 0, scope: !14689)
!14693 = !DILocation(line: 326, column: 19, scope: !14689)
!14694 = !DILocation(line: 327, column: 1, scope: !14689)
!14695 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14655, file: !14655, line: 338, type: !14696, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14699)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{!14698, !208}
!14698 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !990, line: 201, baseType: !989)
!14699 = !{!14700, !14701, !14702, !14703, !14704}
!14700 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14695, file: !14655, line: 338, type: !208)
!14701 = !DILocalVariable(name: "timeout", scope: !14695, file: !14655, line: 340, type: !208)
!14702 = !DILocalVariable(name: "getlatency", scope: !14695, file: !14655, line: 341, type: !208)
!14703 = !DILocalVariable(name: "latency", scope: !14695, file: !14655, line: 342, type: !208)
!14704 = !DILocalVariable(name: "status", scope: !14695, file: !14655, line: 343, type: !14698)
!14705 = !DILocation(line: 0, scope: !14695)
!14706 = !DILocation(line: 347, column: 21, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14695, file: !14655, line: 347, column: 6)
!14708 = !DILocation(line: 347, column: 6, scope: !14695)
!14709 = !DILocation(line: 353, column: 8, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !14655, line: 353, column: 8)
!14711 = distinct !DILexicalBlock(scope: !14707, file: !14655, line: 352, column: 3)
!14712 = !DILocation(line: 353, column: 40, scope: !14710)
!14713 = !DILocation(line: 353, column: 8, scope: !14711)
!14714 = !DILocation(line: 356, column: 26, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14716, file: !14655, line: 356, column: 10)
!14716 = distinct !DILexicalBlock(scope: !14710, file: !14655, line: 354, column: 5)
!14717 = !DILocation(line: 356, column: 55, scope: !14715)
!14718 = !DILocation(line: 362, column: 55, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14716, file: !14655, line: 362, column: 10)
!14720 = !DILocation(line: 368, column: 55, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14716, file: !14655, line: 368, column: 10)
!14722 = !DILocation(line: 374, column: 26, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14716, file: !14655, line: 374, column: 10)
!14724 = !DILocation(line: 374, column: 55, scope: !14723)
!14725 = !DILocation(line: 380, column: 28, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !14655, line: 380, column: 12)
!14727 = distinct !DILexicalBlock(scope: !14723, file: !14655, line: 379, column: 7)
!14728 = !DILocation(line: 380, column: 57, scope: !14726)
!14729 = !DILocation(line: 387, column: 8, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14711, file: !14655, line: 387, column: 8)
!14731 = !DILocation(line: 387, column: 40, scope: !14730)
!14732 = !DILocation(line: 387, column: 8, scope: !14711)
!14733 = !DILocation(line: 390, column: 26, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14735, file: !14655, line: 390, column: 10)
!14735 = distinct !DILexicalBlock(scope: !14730, file: !14655, line: 388, column: 5)
!14736 = !DILocation(line: 390, column: 55, scope: !14734)
!14737 = !DILocation(line: 396, column: 26, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14735, file: !14655, line: 396, column: 10)
!14739 = !DILocation(line: 396, column: 55, scope: !14738)
!14740 = !DILocation(line: 402, column: 26, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14735, file: !14655, line: 402, column: 10)
!14742 = !DILocation(line: 402, column: 55, scope: !14741)
!14743 = !DILocation(line: 407, column: 26, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14735, file: !14655, line: 407, column: 10)
!14745 = !DILocation(line: 407, column: 55, scope: !14744)
!14746 = !DILocation(line: 413, column: 28, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !14655, line: 413, column: 12)
!14748 = distinct !DILexicalBlock(scope: !14744, file: !14655, line: 412, column: 7)
!14749 = !DILocation(line: 413, column: 57, scope: !14747)
!14750 = !DILocation(line: 0, scope: !14711)
!14751 = !DILocation(line: 420, column: 8, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14711, file: !14655, line: 420, column: 8)
!14753 = !DILocation(line: 420, column: 40, scope: !14752)
!14754 = !DILocation(line: 420, column: 8, scope: !14711)
!14755 = !DILocation(line: 423, column: 26, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14757, file: !14655, line: 423, column: 10)
!14757 = distinct !DILexicalBlock(scope: !14752, file: !14655, line: 421, column: 5)
!14758 = !DILocation(line: 423, column: 55, scope: !14756)
!14759 = !DILocation(line: 429, column: 26, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14757, file: !14655, line: 429, column: 10)
!14761 = !DILocation(line: 429, column: 55, scope: !14760)
!14762 = !DILocation(line: 435, column: 28, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14764, file: !14655, line: 435, column: 12)
!14764 = distinct !DILexicalBlock(scope: !14760, file: !14655, line: 434, column: 7)
!14765 = !DILocation(line: 435, column: 57, scope: !14763)
!14766 = !DILocation(line: 444, column: 5, scope: !14711)
!14767 = !DILocation(line: 448, column: 5, scope: !14711)
!14768 = !DILocation(line: 451, column: 18, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14711, file: !14655, line: 449, column: 5)
!14770 = !DILocation(line: 452, column: 12, scope: !14769)
!14771 = !DILocation(line: 453, column: 26, scope: !14711)
!14772 = !DILocation(line: 453, column: 38, scope: !14711)
!14773 = !DILocation(line: 453, column: 5, scope: !14769)
!14774 = distinct !{!14774, !14767, !14775}
!14775 = !DILocation(line: 453, column: 54, scope: !14711)
!14776 = !DILocation(line: 0, scope: !14707)
!14777 = !DILocation(line: 464, column: 3, scope: !14695)
!14778 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14779, file: !14779, line: 519, type: !8453, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14779 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14780 = !DILocation(line: 521, column: 21, scope: !14778)
!14781 = !DILocation(line: 521, column: 3, scope: !14778)
!14782 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6926, file: !6926, line: 1543, type: !8463, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14783)
!14783 = !{!14784}
!14784 = !DILocalVariable(name: "Latency", arg: 1, scope: !14782, file: !6926, line: 1543, type: !208)
!14785 = !DILocation(line: 0, scope: !14782)
!14786 = !DILocation(line: 1545, column: 3, scope: !14782)
!14787 = !DILocation(line: 1546, column: 1, scope: !14782)
!14788 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6926, file: !6926, line: 1569, type: !8453, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14789 = !DILocation(line: 1571, column: 21, scope: !14788)
!14790 = !DILocation(line: 1571, column: 3, scope: !14788)
!14791 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14655, file: !14655, line: 483, type: !14792, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14808)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{!14698, !14794, !14801}
!14794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14795, size: 32)
!14795 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14662, line: 114, baseType: !14796)
!14796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14662, line: 94, size: 96, elements: !14797)
!14797 = !{!14798, !14799, !14800}
!14798 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14796, file: !14662, line: 96, baseType: !208, size: 32)
!14799 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14796, file: !14662, line: 102, baseType: !208, size: 32, offset: 32)
!14800 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14796, file: !14662, line: 109, baseType: !208, size: 32, offset: 64)
!14801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14802, size: 32)
!14802 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14662, line: 139, baseType: !14803)
!14803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14662, line: 119, size: 96, elements: !14804)
!14804 = !{!14805, !14806, !14807}
!14805 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14803, file: !14662, line: 121, baseType: !208, size: 32)
!14806 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14803, file: !14662, line: 127, baseType: !208, size: 32, offset: 32)
!14807 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14803, file: !14662, line: 133, baseType: !208, size: 32, offset: 64)
!14808 = !{!14809, !14810, !14811, !14812}
!14809 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14791, file: !14655, line: 483, type: !14794)
!14810 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14791, file: !14655, line: 484, type: !14801)
!14811 = !DILocalVariable(name: "status", scope: !14791, file: !14655, line: 486, type: !14698)
!14812 = !DILocalVariable(name: "pllfreq", scope: !14791, file: !14655, line: 487, type: !208)
!14813 = !DILocation(line: 0, scope: !14791)
!14814 = !DILocation(line: 490, column: 6, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14791, file: !14655, line: 490, column: 6)
!14816 = !DILocation(line: 490, column: 25, scope: !14815)
!14817 = !DILocation(line: 490, column: 6, scope: !14791)
!14818 = !DILocation(line: 493, column: 15, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14815, file: !14655, line: 491, column: 3)
!14820 = !DILocation(line: 496, column: 8, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14819, file: !14655, line: 496, column: 8)
!14822 = !DILocation(line: 496, column: 29, scope: !14821)
!14823 = !DILocation(line: 496, column: 8, scope: !14819)
!14824 = !DILocation(line: 498, column: 7, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14821, file: !14655, line: 497, column: 5)
!14826 = !DILocation(line: 499, column: 7, scope: !14825)
!14827 = !DILocation(line: 499, column: 14, scope: !14825)
!14828 = !DILocation(line: 499, column: 35, scope: !14825)
!14829 = distinct !{!14829, !14826, !14830}
!14830 = !DILocation(line: 502, column: 7, scope: !14825)
!14831 = !DILocation(line: 506, column: 76, scope: !14819)
!14832 = !DILocation(line: 506, column: 103, scope: !14819)
!14833 = !DILocation(line: 507, column: 54, scope: !14819)
!14834 = !DILocation(line: 506, column: 5, scope: !14819)
!14835 = !DILocation(line: 510, column: 14, scope: !14819)
!14836 = !DILocation(line: 511, column: 3, scope: !14819)
!14837 = !DILocation(line: 0, scope: !14815)
!14838 = !DILocation(line: 518, column: 3, scope: !14791)
!14839 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14655, file: !14655, line: 642, type: !14840, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14842)
!14840 = !DISubroutineType(types: !14841)
!14841 = !{!14698}
!14842 = !{!14843}
!14843 = !DILocalVariable(name: "status", scope: !14839, file: !14655, line: 644, type: !14698)
!14844 = !DILocation(line: 0, scope: !14839)
!14845 = !DILocation(line: 647, column: 6, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14839, file: !14655, line: 647, column: 6)
!14847 = !DILocation(line: 647, column: 27, scope: !14846)
!14848 = !DILocation(line: 655, column: 6, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14839, file: !14655, line: 655, column: 6)
!14850 = !DILocation(line: 655, column: 30, scope: !14849)
!14851 = !DILocation(line: 663, column: 6, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14839, file: !14655, line: 663, column: 6)
!14853 = !DILocation(line: 663, column: 30, scope: !14852)
!14854 = !DILocation(line: 663, column: 6, scope: !14839)
!14855 = !DILocation(line: 669, column: 3, scope: !14839)
!14856 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14655, file: !14655, line: 611, type: !14857, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14859)
!14857 = !DISubroutineType(types: !14858)
!14858 = !{!208, !208, !14794}
!14859 = !{!14860, !14861, !14862}
!14860 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14856, file: !14655, line: 611, type: !208)
!14861 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14856, file: !14655, line: 611, type: !14794)
!14862 = !DILocalVariable(name: "pllfreq", scope: !14856, file: !14655, line: 613, type: !208)
!14863 = !DILocation(line: 0, scope: !14856)
!14864 = !DILocation(line: 622, column: 56, scope: !14856)
!14865 = !DILocation(line: 622, column: 61, scope: !14856)
!14866 = !DILocation(line: 622, column: 32, scope: !14856)
!14867 = !DILocation(line: 626, column: 45, scope: !14856)
!14868 = !DILocation(line: 626, column: 50, scope: !14856)
!14869 = !DILocation(line: 626, column: 21, scope: !14856)
!14870 = !DILocation(line: 630, column: 47, scope: !14856)
!14871 = !DILocation(line: 630, column: 82, scope: !14856)
!14872 = !DILocation(line: 630, column: 21, scope: !14856)
!14873 = !DILocation(line: 633, column: 3, scope: !14856)
!14874 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10646, file: !10646, line: 3007, type: !8453, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14875 = !DILocation(line: 3009, column: 11, scope: !14874)
!14876 = !DILocation(line: 3009, column: 44, scope: !14874)
!14877 = !DILocation(line: 3009, column: 3, scope: !14874)
!14878 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10646, file: !10646, line: 2987, type: !3363, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14879 = !DILocation(line: 2989, column: 3, scope: !14878)
!14880 = !DILocation(line: 2990, column: 1, scope: !14878)
!14881 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10646, file: !10646, line: 4304, type: !10780, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14882)
!14882 = !{!14883, !14884, !14885, !14886}
!14883 = !DILocalVariable(name: "Source", arg: 1, scope: !14881, file: !10646, line: 4304, type: !208)
!14884 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14881, file: !10646, line: 4304, type: !208)
!14885 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14881, file: !10646, line: 4304, type: !208)
!14886 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14881, file: !10646, line: 4304, type: !208)
!14887 = !DILocation(line: 0, scope: !14881)
!14888 = !DILocation(line: 4306, column: 3, scope: !14881)
!14889 = !DILocation(line: 4308, column: 3, scope: !14881)
!14890 = !DILocation(line: 4310, column: 3, scope: !14881)
!14891 = !DILocation(line: 4312, column: 1, scope: !14881)
!14892 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14655, file: !14655, line: 681, type: !14893, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14895)
!14893 = !DISubroutineType(types: !14894)
!14894 = !{!14698, !208, !14801}
!14895 = !{!14896, !14897, !14898, !14899}
!14896 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14892, file: !14655, line: 681, type: !208)
!14897 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14892, file: !14655, line: 681, type: !14801)
!14898 = !DILocalVariable(name: "status", scope: !14892, file: !14655, line: 683, type: !14698)
!14899 = !DILocalVariable(name: "hclk_frequency", scope: !14892, file: !14655, line: 684, type: !208)
!14900 = !DILocation(line: 0, scope: !14892)
!14901 = !DILocation(line: 691, column: 20, scope: !14892)
!14902 = !DILocation(line: 694, column: 6, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14892, file: !14655, line: 694, column: 6)
!14904 = !DILocation(line: 694, column: 22, scope: !14903)
!14905 = !DILocation(line: 694, column: 6, scope: !14892)
!14906 = !DILocation(line: 697, column: 14, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14903, file: !14655, line: 695, column: 3)
!14908 = !DILocation(line: 701, column: 13, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14892, file: !14655, line: 701, column: 6)
!14910 = !DILocation(line: 701, column: 6, scope: !14892)
!14911 = !DILocation(line: 704, column: 5, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14909, file: !14655, line: 702, column: 3)
!14913 = !DILocation(line: 705, column: 5, scope: !14912)
!14914 = !DILocation(line: 705, column: 12, scope: !14912)
!14915 = !DILocation(line: 705, column: 33, scope: !14912)
!14916 = distinct !{!14916, !14913, !14917}
!14917 = !DILocation(line: 708, column: 5, scope: !14912)
!14918 = !DILocation(line: 711, column: 49, scope: !14912)
!14919 = !DILocation(line: 711, column: 5, scope: !14912)
!14920 = !DILocation(line: 712, column: 5, scope: !14912)
!14921 = !DILocation(line: 713, column: 5, scope: !14912)
!14922 = !DILocation(line: 713, column: 12, scope: !14912)
!14923 = !DILocation(line: 713, column: 37, scope: !14912)
!14924 = distinct !{!14924, !14921, !14925}
!14925 = !DILocation(line: 716, column: 5, scope: !14912)
!14926 = !DILocation(line: 719, column: 50, scope: !14912)
!14927 = !DILocation(line: 719, column: 5, scope: !14912)
!14928 = !DILocation(line: 720, column: 50, scope: !14912)
!14929 = !DILocation(line: 720, column: 5, scope: !14912)
!14930 = !DILocation(line: 721, column: 3, scope: !14912)
!14931 = !DILocation(line: 724, column: 6, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14892, file: !14655, line: 724, column: 6)
!14933 = !DILocation(line: 724, column: 22, scope: !14932)
!14934 = !DILocation(line: 724, column: 6, scope: !14892)
!14935 = !DILocation(line: 727, column: 14, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14932, file: !14655, line: 725, column: 3)
!14937 = !DILocation(line: 728, column: 3, scope: !14936)
!14938 = !DILocation(line: 731, column: 13, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14892, file: !14655, line: 731, column: 6)
!14940 = !DILocation(line: 731, column: 6, scope: !14892)
!14941 = !DILocation(line: 733, column: 5, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14939, file: !14655, line: 732, column: 3)
!14943 = !DILocation(line: 734, column: 3, scope: !14942)
!14944 = !DILocation(line: 736, column: 3, scope: !14892)
!14945 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10646, file: !10646, line: 4184, type: !3363, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14946 = !DILocation(line: 4186, column: 3, scope: !14945)
!14947 = !DILocation(line: 4187, column: 1, scope: !14945)
!14948 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10646, file: !10646, line: 4205, type: !8453, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14949 = !DILocation(line: 4207, column: 11, scope: !14948)
!14950 = !DILocation(line: 4207, column: 44, scope: !14948)
!14951 = !DILocation(line: 4207, column: 3, scope: !14948)
!14952 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10646, file: !10646, line: 3224, type: !8463, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14953)
!14953 = !{!14954}
!14954 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14952, file: !10646, line: 3224, type: !208)
!14955 = !DILocation(line: 0, scope: !14952)
!14956 = !DILocation(line: 3226, column: 3, scope: !14952)
!14957 = !DILocation(line: 3227, column: 1, scope: !14952)
!14958 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10646, file: !10646, line: 3188, type: !8463, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14959)
!14959 = !{!14960}
!14960 = !DILocalVariable(name: "Source", arg: 1, scope: !14958, file: !10646, line: 3188, type: !208)
!14961 = !DILocation(line: 0, scope: !14958)
!14962 = !DILocation(line: 3190, column: 3, scope: !14958)
!14963 = !DILocation(line: 3191, column: 1, scope: !14958)
!14964 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10646, file: !10646, line: 3204, type: !8453, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14965 = !DILocation(line: 3206, column: 21, scope: !14964)
!14966 = !DILocation(line: 3206, column: 3, scope: !14964)
!14967 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10646, file: !10646, line: 3240, type: !8463, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14968)
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14967, file: !10646, line: 3240, type: !208)
!14970 = !DILocation(line: 0, scope: !14967)
!14971 = !DILocation(line: 3242, column: 3, scope: !14967)
!14972 = !DILocation(line: 3243, column: 1, scope: !14967)
!14973 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10646, file: !10646, line: 3256, type: !8463, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14974)
!14974 = !{!14975}
!14975 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14973, file: !10646, line: 3256, type: !208)
!14976 = !DILocation(line: 0, scope: !14973)
!14977 = !DILocation(line: 3258, column: 3, scope: !14973)
!14978 = !DILocation(line: 3259, column: 1, scope: !14973)
!14979 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10646, file: !10646, line: 5969, type: !8453, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14980 = !DILocation(line: 5971, column: 11, scope: !14979)
!14981 = !DILocation(line: 5971, column: 47, scope: !14979)
!14982 = !DILocation(line: 5971, column: 3, scope: !14979)
!14983 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10646, file: !10646, line: 5153, type: !8453, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!14984 = !DILocation(line: 5155, column: 11, scope: !14983)
!14985 = !DILocation(line: 5155, column: 47, scope: !14983)
!14986 = !DILocation(line: 5155, column: 3, scope: !14983)
!14987 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14655, file: !14655, line: 540, type: !14988, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !14990)
!14988 = !DISubroutineType(types: !14989)
!14989 = !{!14698, !208, !208, !14794, !14801}
!14990 = !{!14991, !14992, !14993, !14994, !14995, !14996}
!14991 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14987, file: !14655, line: 540, type: !208)
!14992 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14987, file: !14655, line: 540, type: !208)
!14993 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14987, file: !14655, line: 541, type: !14794)
!14994 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14987, file: !14655, line: 541, type: !14801)
!14995 = !DILocalVariable(name: "status", scope: !14987, file: !14655, line: 543, type: !14698)
!14996 = !DILocalVariable(name: "pllfreq", scope: !14987, file: !14655, line: 544, type: !208)
!14997 = !DILocation(line: 0, scope: !14987)
!14998 = !DILocation(line: 551, column: 6, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14987, file: !14655, line: 551, column: 6)
!15000 = !DILocation(line: 551, column: 25, scope: !14999)
!15001 = !DILocation(line: 551, column: 6, scope: !14987)
!15002 = !DILocation(line: 554, column: 15, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !14999, file: !14655, line: 552, column: 3)
!15004 = !DILocation(line: 557, column: 8, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !15003, file: !14655, line: 557, column: 8)
!15006 = !DILocation(line: 557, column: 29, scope: !15005)
!15007 = !DILocation(line: 557, column: 8, scope: !15003)
!15008 = !DILocation(line: 560, column: 20, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15010, file: !14655, line: 560, column: 10)
!15010 = distinct !DILexicalBlock(scope: !15005, file: !14655, line: 558, column: 5)
!15011 = !DILocation(line: 560, column: 10, scope: !15010)
!15012 = !DILocation(line: 562, column: 9, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15009, file: !14655, line: 561, column: 7)
!15014 = !DILocation(line: 563, column: 7, scope: !15013)
!15015 = !DILocation(line: 566, column: 9, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15009, file: !14655, line: 565, column: 7)
!15017 = !DILocation(line: 570, column: 7, scope: !15010)
!15018 = !DILocation(line: 571, column: 7, scope: !15010)
!15019 = !DILocation(line: 571, column: 14, scope: !15010)
!15020 = !DILocation(line: 571, column: 35, scope: !15010)
!15021 = distinct !{!15021, !15018, !15022}
!15022 = !DILocation(line: 574, column: 7, scope: !15010)
!15023 = !DILocation(line: 578, column: 76, scope: !15003)
!15024 = !DILocation(line: 578, column: 103, scope: !15003)
!15025 = !DILocation(line: 579, column: 54, scope: !15003)
!15026 = !DILocation(line: 578, column: 5, scope: !15003)
!15027 = !DILocation(line: 582, column: 14, scope: !15003)
!15028 = !DILocation(line: 583, column: 3, scope: !15003)
!15029 = !DILocation(line: 0, scope: !14999)
!15030 = !DILocation(line: 590, column: 3, scope: !14987)
!15031 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10646, file: !10646, line: 2969, type: !8453, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!15032 = !DILocation(line: 2971, column: 11, scope: !15031)
!15033 = !DILocation(line: 2971, column: 44, scope: !15031)
!15034 = !DILocation(line: 2971, column: 3, scope: !15031)
!15035 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10646, file: !10646, line: 2929, type: !3363, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!15036 = !DILocation(line: 2931, column: 3, scope: !15035)
!15037 = !DILocation(line: 2932, column: 1, scope: !15035)
!15038 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10646, file: !10646, line: 2939, type: !3363, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!15039 = !DILocation(line: 2941, column: 3, scope: !15038)
!15040 = !DILocation(line: 2942, column: 1, scope: !15038)
!15041 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10646, file: !10646, line: 2949, type: !3363, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3256, retainedNodes: !639)
!15042 = !DILocation(line: 2951, column: 3, scope: !15041)
!15043 = !DILocation(line: 2952, column: 1, scope: !15041)
!15044 = distinct !DISubprogram(name: "z_device_state_init", scope: !15045, file: !15045, line: 23, type: !3363, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15046)
!15045 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15046 = !{!15047}
!15047 = !DILocalVariable(name: "dev", scope: !15044, file: !15045, line: 25, type: !15048)
!15048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15049, size: 32)
!15049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15050)
!15050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !15051)
!15051 = !{!15052, !15053, !15054, !15055, !15061, !15062}
!15052 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15050, file: !137, line: 380, baseType: !140, size: 32)
!15053 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !15050, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!15054 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !15050, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!15055 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15050, file: !137, line: 386, baseType: !15056, size: 32, offset: 96)
!15056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15057, size: 32)
!15057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !15058)
!15058 = !{!15059, !15060}
!15059 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !15057, file: !137, line: 359, baseType: !150, size: 8)
!15060 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !15057, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!15061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15050, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!15062 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !15050, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!15063 = !DILocation(line: 0, scope: !15044)
!15064 = !DILocation(line: 31, column: 1, scope: !15044)
!15065 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !15045, file: !15045, line: 33, type: !15066, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15068)
!15066 = !DISubroutineType(types: !15067)
!15067 = !{!15048, !140}
!15068 = !{!15069, !15070}
!15069 = !DILocalVariable(name: "name", arg: 1, scope: !15065, file: !15045, line: 33, type: !140)
!15070 = !DILocalVariable(name: "dev", scope: !15065, file: !15045, line: 35, type: !15048)
!15071 = !DILocation(line: 0, scope: !15065)
!15072 = !DILocation(line: 40, column: 12, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15065, file: !15045, line: 40, column: 6)
!15074 = !DILocation(line: 40, column: 21, scope: !15073)
!15075 = !DILocation(line: 40, column: 25, scope: !15073)
!15076 = !DILocation(line: 40, column: 33, scope: !15073)
!15077 = !DILocation(line: 40, column: 6, scope: !15065)
!15078 = !DILocation(line: 55, column: 2, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15065, file: !15045, line: 55, column: 2)
!15080 = !DILocation(line: 50, column: 7, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15082, file: !15045, line: 50, column: 7)
!15082 = distinct !DILexicalBlock(scope: !15083, file: !15045, line: 49, column: 57)
!15083 = distinct !DILexicalBlock(scope: !15084, file: !15045, line: 49, column: 2)
!15084 = distinct !DILexicalBlock(scope: !15065, file: !15045, line: 49, column: 2)
!15085 = !DILocation(line: 50, column: 30, scope: !15081)
!15086 = !DILocation(line: 50, column: 39, scope: !15081)
!15087 = !DILocation(line: 50, column: 44, scope: !15081)
!15088 = !DILocation(line: 50, column: 7, scope: !15082)
!15089 = !DILocation(line: 49, column: 53, scope: !15083)
!15090 = !DILocation(line: 49, column: 33, scope: !15083)
!15091 = !DILocation(line: 49, column: 2, scope: !15084)
!15092 = distinct !{!15092, !15091, !15093}
!15093 = !DILocation(line: 53, column: 2, scope: !15084)
!15094 = !DILocation(line: 56, column: 7, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15096, file: !15045, line: 56, column: 7)
!15096 = distinct !DILexicalBlock(scope: !15097, file: !15045, line: 55, column: 57)
!15097 = distinct !DILexicalBlock(scope: !15079, file: !15045, line: 55, column: 2)
!15098 = !DILocation(line: 56, column: 30, scope: !15095)
!15099 = !DILocation(line: 56, column: 52, scope: !15095)
!15100 = !DILocation(line: 56, column: 34, scope: !15095)
!15101 = !DILocation(line: 56, column: 58, scope: !15095)
!15102 = !DILocation(line: 56, column: 7, scope: !15096)
!15103 = !DILocation(line: 55, column: 53, scope: !15097)
!15104 = !DILocation(line: 55, column: 33, scope: !15097)
!15105 = distinct !{!15105, !15078, !15106}
!15106 = !DILocation(line: 59, column: 2, scope: !15079)
!15107 = !DILocation(line: 62, column: 1, scope: !15065)
!15108 = distinct !DISubprogram(name: "z_device_is_ready", scope: !15045, file: !15045, line: 93, type: !15109, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15111)
!15109 = !DISubroutineType(types: !15110)
!15110 = !{!153, !15048}
!15111 = !{!15112}
!15112 = !DILocalVariable(name: "dev", arg: 1, scope: !15108, file: !15045, line: 93, type: !15048)
!15113 = !DILocation(line: 0, scope: !15108)
!15114 = !DILocation(line: 99, column: 10, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15108, file: !15045, line: 99, column: 6)
!15116 = !DILocation(line: 99, column: 6, scope: !15108)
!15117 = !DILocation(line: 103, column: 14, scope: !15108)
!15118 = !DILocation(line: 103, column: 21, scope: !15108)
!15119 = !DILocation(line: 103, column: 33, scope: !15108)
!15120 = !DILocation(line: 103, column: 49, scope: !15108)
!15121 = !DILocation(line: 103, column: 58, scope: !15108)
!15122 = !DILocation(line: 104, column: 1, scope: !15108)
!15123 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !15045, file: !15045, line: 87, type: !15124, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15127)
!15124 = !DISubroutineType(types: !15125)
!15125 = !{!272, !15126}
!15126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15048, size: 32)
!15127 = !{!15128}
!15128 = !DILocalVariable(name: "devices", arg: 1, scope: !15123, file: !15045, line: 87, type: !15126)
!15129 = !DILocation(line: 0, scope: !15123)
!15130 = !DILocation(line: 89, column: 11, scope: !15123)
!15131 = !DILocation(line: 90, column: 2, scope: !15123)
!15132 = distinct !DISubprogram(name: "device_required_foreach", scope: !15045, file: !15045, line: 125, type: !15133, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15139)
!15133 = !DISubroutineType(types: !15134)
!15134 = !{!125, !15048, !15135, !124}
!15135 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !15136)
!15136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15137, size: 32)
!15137 = !DISubroutineType(types: !15138)
!15138 = !{!125, !15048, !124}
!15139 = !{!15140, !15141, !15142, !15143, !15144}
!15140 = !DILocalVariable(name: "dev", arg: 1, scope: !15132, file: !15045, line: 125, type: !15048)
!15141 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !15132, file: !15045, line: 126, type: !15135)
!15142 = !DILocalVariable(name: "context", arg: 3, scope: !15132, file: !15045, line: 127, type: !124)
!15143 = !DILocalVariable(name: "handle_count", scope: !15132, file: !15045, line: 129, type: !272)
!15144 = !DILocalVariable(name: "handles", scope: !15132, file: !15045, line: 130, type: !156)
!15145 = !DILocation(line: 0, scope: !15132)
!15146 = !DILocation(line: 129, column: 2, scope: !15132)
!15147 = !DILocation(line: 129, column: 9, scope: !15132)
!15148 = !DILocation(line: 130, column: 35, scope: !15132)
!15149 = !DILocation(line: 132, column: 33, scope: !15132)
!15150 = !DILocation(line: 132, column: 9, scope: !15132)
!15151 = !DILocation(line: 133, column: 1, scope: !15132)
!15152 = !DILocation(line: 132, column: 2, scope: !15132)
!15153 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !15154, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{!156, !15048, !2800}
!15156 = !{!15157, !15158, !15159, !15160}
!15157 = !DILocalVariable(name: "dev", arg: 1, scope: !15153, file: !137, line: 493, type: !15048)
!15158 = !DILocalVariable(name: "count", arg: 2, scope: !15153, file: !137, line: 493, type: !2800)
!15159 = !DILocalVariable(name: "rv", scope: !15153, file: !137, line: 495, type: !156)
!15160 = !DILocalVariable(name: "i", scope: !15161, file: !137, line: 498, type: !272)
!15161 = distinct !DILexicalBlock(scope: !15162, file: !137, line: 497, column: 18)
!15162 = distinct !DILexicalBlock(scope: !15153, file: !137, line: 497, column: 6)
!15163 = !DILocation(line: 0, scope: !15153)
!15164 = !DILocation(line: 495, column: 35, scope: !15153)
!15165 = !DILocation(line: 497, column: 9, scope: !15162)
!15166 = !DILocation(line: 497, column: 6, scope: !15153)
!15167 = !DILocation(line: 0, scope: !15161)
!15168 = !DILocation(line: 500, column: 11, scope: !15161)
!15169 = !DILocation(line: 500, column: 40, scope: !15161)
!15170 = !DILocation(line: 502, column: 4, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15161, file: !137, line: 501, column: 40)
!15172 = distinct !{!15172, !15173, !15174}
!15173 = !DILocation(line: 500, column: 3, scope: !15161)
!15174 = !DILocation(line: 503, column: 3, scope: !15161)
!15175 = !DILocation(line: 504, column: 10, scope: !15161)
!15176 = !DILocation(line: 505, column: 2, scope: !15161)
!15177 = !DILocation(line: 507, column: 2, scope: !15153)
!15178 = distinct !DISubprogram(name: "device_visitor", scope: !15045, file: !15045, line: 106, type: !15179, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15181)
!15179 = !DISubroutineType(types: !15180)
!15180 = !{!125, !156, !272, !15135, !124}
!15181 = !{!15182, !15183, !15184, !15185, !15186, !15188, !15191, !15192}
!15182 = !DILocalVariable(name: "handles", arg: 1, scope: !15178, file: !15045, line: 106, type: !156)
!15183 = !DILocalVariable(name: "handle_count", arg: 2, scope: !15178, file: !15045, line: 107, type: !272)
!15184 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !15178, file: !15045, line: 108, type: !15135)
!15185 = !DILocalVariable(name: "context", arg: 4, scope: !15178, file: !15045, line: 109, type: !124)
!15186 = !DILocalVariable(name: "i", scope: !15187, file: !15045, line: 112, type: !272)
!15187 = distinct !DILexicalBlock(scope: !15178, file: !15045, line: 112, column: 2)
!15188 = !DILocalVariable(name: "dh", scope: !15189, file: !15045, line: 113, type: !158)
!15189 = distinct !DILexicalBlock(scope: !15190, file: !15045, line: 112, column: 44)
!15190 = distinct !DILexicalBlock(scope: !15187, file: !15045, line: 112, column: 2)
!15191 = !DILocalVariable(name: "rdev", scope: !15189, file: !15045, line: 114, type: !15048)
!15192 = !DILocalVariable(name: "rc", scope: !15189, file: !15045, line: 115, type: !125)
!15193 = !DILocation(line: 0, scope: !15178)
!15194 = !DILocation(line: 0, scope: !15187)
!15195 = !DILocation(line: 112, column: 23, scope: !15190)
!15196 = !DILocation(line: 112, column: 2, scope: !15187)
!15197 = distinct !{!15197, !15196, !15198}
!15198 = !DILocation(line: 120, column: 2, scope: !15187)
!15199 = !DILocation(line: 113, column: 24, scope: !15189)
!15200 = !DILocation(line: 0, scope: !15189)
!15201 = !DILocation(line: 114, column: 31, scope: !15189)
!15202 = !DILocation(line: 115, column: 12, scope: !15189)
!15203 = !DILocation(line: 117, column: 10, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15189, file: !15045, line: 117, column: 7)
!15205 = !DILocation(line: 112, column: 39, scope: !15190)
!15206 = !DILocation(line: 123, column: 1, scope: !15178)
!15207 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !15208, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15210)
!15208 = !DISubroutineType(types: !15209)
!15209 = !{!15048, !158}
!15210 = !{!15211, !15212, !15213}
!15211 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !15207, file: !137, line: 439, type: !158)
!15212 = !DILocalVariable(name: "dev", scope: !15207, file: !137, line: 443, type: !15048)
!15213 = !DILocalVariable(name: "numdev", scope: !15207, file: !137, line: 444, type: !272)
!15214 = !DILocation(line: 0, scope: !15207)
!15215 = !DILocation(line: 446, column: 7, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15207, file: !137, line: 446, column: 6)
!15217 = !DILocation(line: 446, column: 18, scope: !15216)
!15218 = !DILocation(line: 446, column: 23, scope: !15216)
!15219 = !DILocation(line: 450, column: 2, scope: !15207)
!15220 = distinct !DISubprogram(name: "device_supported_foreach", scope: !15045, file: !15045, line: 135, type: !15133, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15221)
!15221 = !{!15222, !15223, !15224, !15225, !15226}
!15222 = !DILocalVariable(name: "dev", arg: 1, scope: !15220, file: !15045, line: 135, type: !15048)
!15223 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !15220, file: !15045, line: 136, type: !15135)
!15224 = !DILocalVariable(name: "context", arg: 3, scope: !15220, file: !15045, line: 137, type: !124)
!15225 = !DILocalVariable(name: "handle_count", scope: !15220, file: !15045, line: 139, type: !272)
!15226 = !DILocalVariable(name: "handles", scope: !15220, file: !15045, line: 140, type: !156)
!15227 = !DILocation(line: 0, scope: !15220)
!15228 = !DILocation(line: 139, column: 2, scope: !15220)
!15229 = !DILocation(line: 139, column: 9, scope: !15220)
!15230 = !DILocation(line: 140, column: 35, scope: !15220)
!15231 = !DILocation(line: 142, column: 33, scope: !15220)
!15232 = !DILocation(line: 142, column: 9, scope: !15220)
!15233 = !DILocation(line: 143, column: 1, scope: !15220)
!15234 = !DILocation(line: 142, column: 2, scope: !15220)
!15235 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !15154, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3323, retainedNodes: !15236)
!15236 = !{!15237, !15238, !15239, !15240, !15241}
!15237 = !DILocalVariable(name: "dev", arg: 1, scope: !15235, file: !137, line: 573, type: !15048)
!15238 = !DILocalVariable(name: "count", arg: 2, scope: !15235, file: !137, line: 573, type: !2800)
!15239 = !DILocalVariable(name: "rv", scope: !15235, file: !137, line: 575, type: !156)
!15240 = !DILocalVariable(name: "region", scope: !15235, file: !137, line: 576, type: !272)
!15241 = !DILocalVariable(name: "i", scope: !15235, file: !137, line: 577, type: !272)
!15242 = !DILocation(line: 0, scope: !15235)
!15243 = !DILocation(line: 575, column: 35, scope: !15235)
!15244 = !DILocation(line: 579, column: 9, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15235, file: !137, line: 579, column: 6)
!15246 = !DILocation(line: 579, column: 6, scope: !15235)
!15247 = !DILocation(line: 582, column: 8, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15249, file: !137, line: 582, column: 8)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !137, line: 581, column: 23)
!15250 = distinct !DILexicalBlock(scope: !15245, file: !137, line: 579, column: 18)
!15251 = !DILocation(line: 582, column: 12, scope: !15248)
!15252 = !DILocation(line: 585, column: 6, scope: !15249)
!15253 = !DILocation(line: 0, scope: !15250)
!15254 = !DILocation(line: 581, column: 17, scope: !15250)
!15255 = !DILocation(line: 581, column: 3, scope: !15250)
!15256 = !DILocation(line: 588, column: 10, scope: !15250)
!15257 = !DILocation(line: 588, column: 16, scope: !15250)
!15258 = !DILocation(line: 589, column: 4, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15250, file: !137, line: 588, column: 39)
!15260 = !DILocation(line: 588, column: 3, scope: !15250)
!15261 = distinct !{!15261, !15260, !15262}
!15262 = !DILocation(line: 590, column: 3, scope: !15250)
!15263 = !DILocation(line: 591, column: 10, scope: !15250)
!15264 = !DILocation(line: 592, column: 2, scope: !15250)
!15265 = !DILocation(line: 575, column: 25, scope: !15235)
!15266 = !DILocation(line: 594, column: 2, scope: !15235)
!15267 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2219, file: !2219, line: 49, type: !15268, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !639)
!15268 = !DISubroutineType(types: !15269)
!15269 = !{!387}
!15270 = !DILocation(line: 51, column: 10, scope: !15267)
!15271 = !DILocation(line: 51, column: 20, scope: !15267)
!15272 = !DILocation(line: 51, column: 2, scope: !15267)
!15273 = distinct !DISubprogram(name: "coredump", scope: !3330, file: !3330, line: 209, type: !15274, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15420)
!15274 = !DISubroutineType(types: !15275)
!15275 = !{null, !32, !15276, !15320}
!15276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15277, size: 32)
!15277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15278)
!15278 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2962, line: 141, baseType: !15279)
!15279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2962, line: 97, size: 256, elements: !15280)
!15280 = !{!15281}
!15281 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !15279, file: !2962, line: 107, baseType: !15282, size: 256)
!15282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2962, line: 98, size: 256, elements: !15283)
!15283 = !{!15284, !15289, !15294, !15299, !15304, !15309, !15314, !15319}
!15284 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 99, baseType: !15285, size: 32)
!15285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 99, size: 32, elements: !15286)
!15286 = !{!15287, !15288}
!15287 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !15285, file: !2962, line: 99, baseType: !208, size: 32)
!15288 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !15285, file: !2962, line: 99, baseType: !208, size: 32)
!15289 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 100, baseType: !15290, size: 32, offset: 32)
!15290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 100, size: 32, elements: !15291)
!15291 = !{!15292, !15293}
!15292 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !15290, file: !2962, line: 100, baseType: !208, size: 32)
!15293 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !15290, file: !2962, line: 100, baseType: !208, size: 32)
!15294 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 101, baseType: !15295, size: 32, offset: 64)
!15295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 101, size: 32, elements: !15296)
!15296 = !{!15297, !15298}
!15297 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !15295, file: !2962, line: 101, baseType: !208, size: 32)
!15298 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !15295, file: !2962, line: 101, baseType: !208, size: 32)
!15299 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 102, baseType: !15300, size: 32, offset: 96)
!15300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 102, size: 32, elements: !15301)
!15301 = !{!15302, !15303}
!15302 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !15300, file: !2962, line: 102, baseType: !208, size: 32)
!15303 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !15300, file: !2962, line: 102, baseType: !208, size: 32)
!15304 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 103, baseType: !15305, size: 32, offset: 128)
!15305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 103, size: 32, elements: !15306)
!15306 = !{!15307, !15308}
!15307 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !15305, file: !2962, line: 103, baseType: !208, size: 32)
!15308 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !15305, file: !2962, line: 103, baseType: !208, size: 32)
!15309 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 104, baseType: !15310, size: 32, offset: 160)
!15310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 104, size: 32, elements: !15311)
!15311 = !{!15312, !15313}
!15312 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !15310, file: !2962, line: 104, baseType: !208, size: 32)
!15313 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !15310, file: !2962, line: 104, baseType: !208, size: 32)
!15314 = !DIDerivedType(tag: DW_TAG_member, scope: !15282, file: !2962, line: 105, baseType: !15315, size: 32, offset: 192)
!15315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15282, file: !2962, line: 105, size: 32, elements: !15316)
!15316 = !{!15317, !15318}
!15317 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !15315, file: !2962, line: 105, baseType: !208, size: 32)
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !15315, file: !2962, line: 105, baseType: !208, size: 32)
!15319 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !15282, file: !2962, line: 106, baseType: !208, size: 32, offset: 224)
!15320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15321, size: 32)
!15321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !15322)
!15322 = !{!15323, !15381, !15393, !15394, !15395, !15396, !15402, !15415}
!15323 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15321, file: !531, line: 247, baseType: !15324, size: 384)
!15324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !15325)
!15325 = !{!15326, !15350, !15357, !15358, !15359, !15368, !15369, !15370}
!15326 = !DIDerivedType(tag: DW_TAG_member, scope: !15324, file: !531, line: 60, baseType: !15327, size: 64)
!15327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15324, file: !531, line: 60, size: 64, elements: !15328)
!15328 = !{!15329, !15344}
!15329 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15327, file: !531, line: 61, baseType: !15330, size: 64)
!15330 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !15331)
!15331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !15332)
!15332 = !{!15333, !15339}
!15333 = !DIDerivedType(tag: DW_TAG_member, scope: !15331, file: !541, line: 38, baseType: !15334, size: 32)
!15334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15331, file: !541, line: 38, size: 32, elements: !15335)
!15335 = !{!15336, !15338}
!15336 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !15334, file: !541, line: 39, baseType: !15337, size: 32)
!15337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15331, size: 32)
!15338 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15334, file: !541, line: 40, baseType: !15337, size: 32)
!15339 = !DIDerivedType(tag: DW_TAG_member, scope: !15331, file: !541, line: 42, baseType: !15340, size: 32, offset: 32)
!15340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15331, file: !541, line: 42, size: 32, elements: !15341)
!15341 = !{!15342, !15343}
!15342 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !15340, file: !541, line: 43, baseType: !15337, size: 32)
!15343 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15340, file: !541, line: 44, baseType: !15337, size: 32)
!15344 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15327, file: !531, line: 62, baseType: !15345, size: 64)
!15345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !15346)
!15346 = !{!15347}
!15347 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15345, file: !557, line: 50, baseType: !15348, size: 64)
!15348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15349, size: 64, elements: !562)
!15349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15345, size: 32)
!15350 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15324, file: !531, line: 68, baseType: !15351, size: 32, offset: 64)
!15351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15352, size: 32)
!15352 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !15353)
!15353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !15354)
!15354 = !{!15355}
!15355 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15353, file: !567, line: 232, baseType: !15356, size: 64)
!15356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !15331)
!15357 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15324, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!15358 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15324, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!15359 = !DIDerivedType(tag: DW_TAG_member, scope: !15324, file: !531, line: 90, baseType: !15360, size: 16, offset: 112)
!15360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15324, file: !531, line: 90, size: 16, elements: !15361)
!15361 = !{!15362, !15367}
!15362 = !DIDerivedType(tag: DW_TAG_member, scope: !15360, file: !531, line: 91, baseType: !15363, size: 16)
!15363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15360, file: !531, line: 91, size: 16, elements: !15364)
!15364 = !{!15365, !15366}
!15365 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15363, file: !531, line: 96, baseType: !581, size: 8)
!15366 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15363, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!15367 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15360, file: !531, line: 100, baseType: !227, size: 16)
!15368 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15324, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!15369 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15324, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!15370 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15324, file: !531, line: 131, baseType: !15371, size: 192, offset: 192)
!15371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !15372)
!15372 = !{!15373, !15374, !15380}
!15373 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15371, file: !567, line: 245, baseType: !15330, size: 64)
!15374 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15371, file: !567, line: 246, baseType: !15375, size: 32, offset: 64)
!15375 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !15376)
!15376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15377, size: 32)
!15377 = !DISubroutineType(types: !15378)
!15378 = !{null, !15379}
!15379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15371, size: 32)
!15380 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15371, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!15381 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15321, file: !531, line: 250, baseType: !15382, size: 288, offset: 384)
!15382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !15383)
!15383 = !{!15384, !15385, !15386, !15387, !15388, !15389, !15390, !15391, !15392}
!15384 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15382, file: !601, line: 26, baseType: !208, size: 32)
!15385 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15382, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15382, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!15387 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15382, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!15388 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15382, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!15389 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15382, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!15390 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15382, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!15391 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15382, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!15392 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15382, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!15393 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15321, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15321, file: !531, line: 256, baseType: !15352, size: 64, offset: 704)
!15395 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15321, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15321, file: !531, line: 300, baseType: !15397, size: 96, offset: 800)
!15397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !15398)
!15398 = !{!15399, !15400, !15401}
!15399 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15397, file: !531, line: 153, baseType: !22, size: 32)
!15400 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15397, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!15401 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15397, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!15402 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15321, file: !531, line: 325, baseType: !15403, size: 32, offset: 896)
!15403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15404, size: 32)
!15404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !15405)
!15405 = !{!15406, !15412, !15413}
!15406 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15404, file: !624, line: 5074, baseType: !15407, size: 96)
!15407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !15408)
!15408 = !{!15409, !15410, !15411}
!15409 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15407, file: !628, line: 57, baseType: !631, size: 32)
!15410 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15407, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!15411 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15407, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!15412 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15404, file: !624, line: 5075, baseType: !15352, size: 64, offset: 96)
!15413 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15404, file: !624, line: 5076, baseType: !15414, offset: 160)
!15414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!15415 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15321, file: !531, line: 343, baseType: !15416, size: 64, offset: 928)
!15416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !15417)
!15417 = !{!15418, !15419}
!15418 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15416, file: !601, line: 63, baseType: !208, size: 32)
!15419 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15416, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!15420 = !{!15421, !15422, !15423}
!15421 = !DILocalVariable(name: "reason", arg: 1, scope: !15273, file: !3330, line: 209, type: !32)
!15422 = !DILocalVariable(name: "esf", arg: 2, scope: !15273, file: !3330, line: 209, type: !15276)
!15423 = !DILocalVariable(name: "thread", arg: 3, scope: !15273, file: !3330, line: 210, type: !15320)
!15424 = !DILocation(line: 0, scope: !15273)
!15425 = !DILocation(line: 212, column: 1, scope: !15273)
!15426 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3330, file: !3330, line: 214, type: !15427, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15429)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{null, !22, !22}
!15429 = !{!15430, !15431}
!15430 = !DILocalVariable(name: "start_addr", arg: 1, scope: !15426, file: !3330, line: 214, type: !22)
!15431 = !DILocalVariable(name: "end_addr", arg: 2, scope: !15426, file: !3330, line: 214, type: !22)
!15432 = !DILocation(line: 0, scope: !15426)
!15433 = !DILocation(line: 216, column: 1, scope: !15426)
!15434 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3330, file: !3330, line: 218, type: !15435, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15437)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{null, !184, !272}
!15437 = !{!15438, !15439}
!15438 = !DILocalVariable(name: "buf", arg: 1, scope: !15434, file: !3330, line: 218, type: !184)
!15439 = !DILocalVariable(name: "buflen", arg: 2, scope: !15434, file: !3330, line: 218, type: !272)
!15440 = !DILocation(line: 0, scope: !15434)
!15441 = !DILocation(line: 220, column: 1, scope: !15434)
!15442 = distinct !DISubprogram(name: "coredump_query", scope: !3330, file: !3330, line: 222, type: !15443, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15445)
!15443 = !DISubroutineType(types: !15444)
!15444 = !{!125, !3329, !124}
!15445 = !{!15446, !15447}
!15446 = !DILocalVariable(name: "query_id", arg: 1, scope: !15442, file: !3330, line: 222, type: !3329)
!15447 = !DILocalVariable(name: "arg", arg: 2, scope: !15442, file: !3330, line: 222, type: !124)
!15448 = !DILocation(line: 0, scope: !15442)
!15449 = !DILocation(line: 224, column: 2, scope: !15442)
!15450 = distinct !DISubprogram(name: "coredump_cmd", scope: !3330, file: !3330, line: 227, type: !15451, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15453)
!15451 = !DISubroutineType(types: !15452)
!15452 = !{!125, !3336, !124}
!15453 = !{!15454, !15455}
!15454 = !DILocalVariable(name: "query_id", arg: 1, scope: !15450, file: !3330, line: 227, type: !3336)
!15455 = !DILocalVariable(name: "arg", arg: 2, scope: !15450, file: !3330, line: 227, type: !124)
!15456 = !DILocation(line: 0, scope: !15450)
!15457 = !DILocation(line: 229, column: 2, scope: !15450)
!15458 = distinct !DISubprogram(name: "arch_system_halt", scope: !15459, file: !15459, line: 23, type: !6916, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15460)
!15459 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15460 = !{!15461}
!15461 = !DILocalVariable(name: "reason", arg: 1, scope: !15458, file: !15459, line: 23, type: !32)
!15462 = !DILocation(line: 0, scope: !15458)
!15463 = !DILocation(line: 55, column: 2, scope: !15464, inlinedAt: !15468)
!15464 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15465)
!15465 = !{!15466, !15467}
!15466 = !DILocalVariable(name: "key", scope: !15464, file: !6905, line: 44, type: !32)
!15467 = !DILocalVariable(name: "tmp", scope: !15464, file: !6905, line: 53, type: !32)
!15468 = distinct !DILocation(line: 31, column: 8, scope: !15458)
!15469 = !{i64 2281594}
!15470 = !DILocation(line: 0, scope: !15464, inlinedAt: !15468)
!15471 = !DILocation(line: 32, column: 2, scope: !15458)
!15472 = !DILocation(line: 32, column: 2, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !15459, line: 32, column: 2)
!15474 = distinct !DILexicalBlock(scope: !15458, file: !15459, line: 32, column: 2)
!15475 = distinct !{!15475, !15476, !15477}
!15476 = !DILocation(line: 32, column: 2, scope: !15474)
!15477 = !DILocation(line: 34, column: 2, scope: !15474)
!15478 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !15459, file: !15459, line: 39, type: !15479, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15481)
!15479 = !DISubroutineType(types: !15480)
!15480 = !{null, !32, !15276}
!15481 = !{!15482, !15483}
!15482 = !DILocalVariable(name: "reason", arg: 1, scope: !15478, file: !15459, line: 39, type: !32)
!15483 = !DILocalVariable(name: "esf", arg: 2, scope: !15478, file: !15459, line: 40, type: !15276)
!15484 = !DILocation(line: 0, scope: !15478)
!15485 = !DILocation(line: 45, column: 2, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15487, file: !15459, line: 45, column: 2)
!15487 = distinct !DILexicalBlock(scope: !15488, file: !15459, line: 45, column: 2)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !15459, line: 45, column: 2)
!15489 = distinct !DILexicalBlock(scope: !15478, file: !15459, line: 45, column: 2)
!15490 = !DILocation(line: 46, column: 2, scope: !15478)
!15491 = distinct !DISubprogram(name: "k_fatal_halt", scope: !15459, file: !15459, line: 81, type: !6916, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15492)
!15492 = !{!15493}
!15493 = !DILocalVariable(name: "reason", arg: 1, scope: !15491, file: !15459, line: 81, type: !32)
!15494 = !DILocation(line: 0, scope: !15491)
!15495 = !DILocation(line: 83, column: 2, scope: !15491)
!15496 = distinct !DISubprogram(name: "z_fatal_error", scope: !15459, file: !15459, line: 96, type: !15479, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15497)
!15497 = !{!15498, !15499, !15500, !15501}
!15498 = !DILocalVariable(name: "reason", arg: 1, scope: !15496, file: !15459, line: 96, type: !32)
!15499 = !DILocalVariable(name: "esf", arg: 2, scope: !15496, file: !15459, line: 96, type: !15276)
!15500 = !DILocalVariable(name: "key", scope: !15496, file: !15459, line: 102, type: !32)
!15501 = !DILocalVariable(name: "thread", scope: !15496, file: !15459, line: 103, type: !15320)
!15502 = !DILocation(line: 0, scope: !15496)
!15503 = !DILocation(line: 55, column: 2, scope: !15464, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 102, column: 21, scope: !15496)
!15505 = !DILocation(line: 0, scope: !15464, inlinedAt: !15504)
!15506 = !DILocation(line: 104, column: 4, scope: !15496)
!15507 = !DILocation(line: 109, column: 2, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15509, file: !15459, line: 109, column: 2)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !15459, line: 109, column: 2)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !15459, line: 109, column: 2)
!15511 = distinct !DILexicalBlock(scope: !15496, file: !15459, line: 109, column: 2)
!15512 = !DILocation(line: 119, column: 11, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15496, file: !15459, line: 119, column: 6)
!15514 = !DILocation(line: 119, column: 20, scope: !15513)
!15515 = !DILocalVariable(name: "esf", arg: 1, scope: !15516, file: !9390, line: 71, type: !15276)
!15516 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9390, file: !9390, line: 71, type: !15517, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15519)
!15517 = !DISubroutineType(types: !15518)
!15518 = !{!153, !15276}
!15519 = !{!15515}
!15520 = !DILocation(line: 0, scope: !15516, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 119, column: 23, scope: !15513)
!15522 = !DILocation(line: 73, column: 21, scope: !15516, inlinedAt: !15521)
!15523 = !DILocation(line: 73, column: 26, scope: !15516, inlinedAt: !15521)
!15524 = !DILocation(line: 73, column: 9, scope: !15516, inlinedAt: !15521)
!15525 = !DILocation(line: 119, column: 6, scope: !15496)
!15526 = !DILocation(line: 120, column: 3, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !15459, line: 120, column: 3)
!15528 = distinct !DILexicalBlock(scope: !15529, file: !15459, line: 120, column: 3)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !15459, line: 120, column: 3)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !15459, line: 120, column: 3)
!15531 = distinct !DILexicalBlock(scope: !15513, file: !15459, line: 119, column: 57)
!15532 = !DILocation(line: 121, column: 2, scope: !15531)
!15533 = !DILocation(line: 124, column: 2, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15535, file: !15459, line: 124, column: 2)
!15535 = distinct !DILexicalBlock(scope: !15536, file: !15459, line: 124, column: 2)
!15536 = distinct !DILexicalBlock(scope: !15537, file: !15459, line: 124, column: 2)
!15537 = distinct !DILexicalBlock(scope: !15496, file: !15459, line: 124, column: 2)
!15538 = !DILocation(line: 131, column: 2, scope: !15496)
!15539 = !DILocation(line: 0, scope: !15516, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 151, column: 24, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15542, file: !15459, line: 151, column: 7)
!15542 = distinct !DILexicalBlock(scope: !15543, file: !15459, line: 146, column: 32)
!15543 = distinct !DILexicalBlock(scope: !15496, file: !15459, line: 146, column: 6)
!15544 = !DILocation(line: 151, column: 7, scope: !15542)
!15545 = !DILocation(line: 151, column: 21, scope: !15541)
!15546 = !DILocalVariable(name: "key", arg: 1, scope: !15547, file: !6905, line: 84, type: !32)
!15547 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15548)
!15548 = !{!15546}
!15549 = !DILocation(line: 0, scope: !15547, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 186, column: 2, scope: !15496)
!15551 = !DILocation(line: 95, column: 2, scope: !15547, inlinedAt: !15550)
!15552 = !{i64 2282411}
!15553 = !DILocation(line: 189, column: 3, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15555, file: !15459, line: 188, column: 41)
!15555 = distinct !DILexicalBlock(scope: !15496, file: !15459, line: 188, column: 6)
!15556 = !DILocation(line: 191, column: 1, scope: !15496)
!15557 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !15558, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !639)
!15558 = !DISubroutineType(types: !15559)
!15559 = !{!15560}
!15560 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !15320)
!15561 = !DILocation(line: 535, column: 9, scope: !15557)
!15562 = !DILocation(line: 535, column: 2, scope: !15557)
!15563 = distinct !DISubprogram(name: "reason_to_str", scope: !15459, file: !15459, line: 62, type: !15564, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15566)
!15564 = !DISubroutineType(types: !15565)
!15565 = !{!140, !32}
!15566 = !{!15567}
!15567 = !DILocalVariable(name: "reason", arg: 1, scope: !15563, file: !15459, line: 62, type: !32)
!15568 = !DILocation(line: 0, scope: !15563)
!15569 = !DILocation(line: 64, column: 2, scope: !15563)
!15570 = !DILocation(line: 0, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15563, file: !15459, line: 64, column: 18)
!15572 = !DILocation(line: 78, column: 1, scope: !15563)
!15573 = distinct !DISubprogram(name: "thread_name_get", scope: !15459, file: !15459, line: 51, type: !15574, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15576)
!15574 = !DISubroutineType(types: !15575)
!15575 = !{!140, !15320}
!15576 = !{!15577, !15578}
!15577 = !DILocalVariable(name: "thread", arg: 1, scope: !15573, file: !15459, line: 51, type: !15320)
!15578 = !DILocalVariable(name: "thread_name", scope: !15573, file: !15459, line: 53, type: !140)
!15579 = !DILocation(line: 0, scope: !15573)
!15580 = !DILocation(line: 53, column: 36, scope: !15573)
!15581 = !DILocation(line: 53, column: 28, scope: !15573)
!15582 = !DILocation(line: 53, column: 47, scope: !15573)
!15583 = !DILocation(line: 55, column: 19, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15573, file: !15459, line: 55, column: 6)
!15585 = !DILocation(line: 55, column: 28, scope: !15584)
!15586 = !DILocation(line: 55, column: 32, scope: !15584)
!15587 = !DILocation(line: 55, column: 47, scope: !15584)
!15588 = !DILocation(line: 55, column: 6, scope: !15573)
!15589 = !DILocation(line: 57, column: 2, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15584, file: !15459, line: 55, column: 57)
!15591 = !DILocation(line: 59, column: 2, scope: !15573)
!15592 = distinct !DISubprogram(name: "k_thread_abort", scope: !5433, file: !5433, line: 188, type: !15593, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !15595)
!15593 = !DISubroutineType(types: !15594)
!15594 = !{null, !15560}
!15595 = !{!15596}
!15596 = !DILocalVariable(name: "thread", arg: 1, scope: !15592, file: !5433, line: 188, type: !15560)
!15597 = !DILocation(line: 0, scope: !15592)
!15598 = !DILocation(line: 197, column: 2, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15592, file: !5433, line: 197, column: 2)
!15600 = !{i64 2155063165}
!15601 = !DILocation(line: 198, column: 2, scope: !15592)
!15602 = !DILocation(line: 199, column: 1, scope: !15592)
!15603 = distinct !DISubprogram(name: "z_current_get", scope: !5433, file: !5433, line: 173, type: !15558, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3326, retainedNodes: !639)
!15604 = !DILocation(line: 180, column: 2, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15603, file: !5433, line: 180, column: 2)
!15606 = !{i64 2155063097}
!15607 = !DILocation(line: 181, column: 9, scope: !15603)
!15608 = !DILocation(line: 181, column: 2, scope: !15603)
!15609 = distinct !DISubprogram(name: "z_early_memset", scope: !2227, file: !2227, line: 108, type: !15610, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15612)
!15610 = !DISubroutineType(types: !15611)
!15611 = !{null, !124, !125, !272}
!15612 = !{!15613, !15614, !15615}
!15613 = !DILocalVariable(name: "dst", arg: 1, scope: !15609, file: !2227, line: 108, type: !124)
!15614 = !DILocalVariable(name: "c", arg: 2, scope: !15609, file: !2227, line: 108, type: !125)
!15615 = !DILocalVariable(name: "n", arg: 3, scope: !15609, file: !2227, line: 108, type: !272)
!15616 = !DILocation(line: 0, scope: !15609)
!15617 = !DILocation(line: 110, column: 9, scope: !15609)
!15618 = !DILocation(line: 111, column: 1, scope: !15609)
!15619 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2227, file: !2227, line: 121, type: !15620, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15622)
!15620 = !DISubroutineType(types: !15621)
!15621 = !{null, !124, !13, !272}
!15622 = !{!15623, !15624, !15625}
!15623 = !DILocalVariable(name: "dst", arg: 1, scope: !15619, file: !2227, line: 121, type: !124)
!15624 = !DILocalVariable(name: "src", arg: 2, scope: !15619, file: !2227, line: 121, type: !13)
!15625 = !DILocalVariable(name: "n", arg: 3, scope: !15619, file: !2227, line: 121, type: !272)
!15626 = !DILocation(line: 0, scope: !15619)
!15627 = !DILocation(line: 123, column: 9, scope: !15619)
!15628 = !DILocation(line: 124, column: 1, scope: !15619)
!15629 = distinct !DISubprogram(name: "z_bss_zero", scope: !2227, file: !2227, line: 132, type: !3363, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !639)
!15630 = !DILocation(line: 143, column: 2, scope: !15629)
!15631 = !DILocation(line: 168, column: 1, scope: !15629)
!15632 = distinct !DISubprogram(name: "z_init_cpu", scope: !2227, file: !2227, line: 372, type: !10254, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15633)
!15633 = !{!15634}
!15634 = !DILocalVariable(name: "id", arg: 1, scope: !15632, file: !2227, line: 372, type: !125)
!15635 = !DILocation(line: 0, scope: !15632)
!15636 = !DILocation(line: 374, column: 2, scope: !15632)
!15637 = !DILocation(line: 375, column: 34, scope: !15632)
!15638 = !DILocation(line: 375, column: 19, scope: !15632)
!15639 = !DILocation(line: 375, column: 31, scope: !15632)
!15640 = !DILocation(line: 376, column: 24, scope: !15632)
!15641 = !DILocation(line: 376, column: 19, scope: !15632)
!15642 = !DILocation(line: 376, column: 22, scope: !15632)
!15643 = !DILocation(line: 378, column: 26, scope: !15632)
!15644 = !DILocation(line: 378, column: 4, scope: !15632)
!15645 = !DILocation(line: 378, column: 50, scope: !15632)
!15646 = !DILocation(line: 377, column: 19, scope: !15632)
!15647 = !DILocation(line: 377, column: 29, scope: !15632)
!15648 = !DILocation(line: 384, column: 1, scope: !15632)
!15649 = distinct !DISubprogram(name: "init_idle_thread", scope: !2227, file: !2227, line: 343, type: !10254, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15650)
!15650 = !{!15651, !15652, !15653, !15656}
!15651 = !DILocalVariable(name: "i", arg: 1, scope: !15649, file: !2227, line: 343, type: !125)
!15652 = !DILocalVariable(name: "thread", scope: !15649, file: !2227, line: 345, type: !2319)
!15653 = !DILocalVariable(name: "stack", scope: !15649, file: !2227, line: 346, type: !15654)
!15654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15655, size: 32)
!15655 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5312, line: 44, baseType: !2433)
!15656 = !DILocalVariable(name: "tname", scope: !15649, file: !2227, line: 358, type: !393)
!15657 = !DILocation(line: 0, scope: !15649)
!15658 = !DILocation(line: 345, column: 29, scope: !15649)
!15659 = !DILocation(line: 346, column: 28, scope: !15649)
!15660 = !DILocation(line: 362, column: 37, scope: !15649)
!15661 = !DILocation(line: 362, column: 36, scope: !15649)
!15662 = !DILocation(line: 361, column: 2, scope: !15649)
!15663 = !DILocation(line: 365, column: 2, scope: !15649)
!15664 = !DILocation(line: 370, column: 1, scope: !15649)
!15665 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2434, file: !2434, line: 331, type: !15666, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15668)
!15666 = !DISubroutineType(types: !15667)
!15667 = !{!393, !15654}
!15668 = !{!15669}
!15669 = !DILocalVariable(name: "sym", arg: 1, scope: !15665, file: !2434, line: 331, type: !15654)
!15670 = !DILocation(line: 0, scope: !15665)
!15671 = !DILocation(line: 333, column: 21, scope: !15665)
!15672 = !DILocation(line: 333, column: 2, scope: !15665)
!15673 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15674, file: !15674, line: 155, type: !15675, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15677)
!15674 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15675 = !DISubroutineType(types: !15676)
!15676 = !{null, !2319}
!15677 = !{!15678}
!15678 = !DILocalVariable(name: "thread", arg: 1, scope: !15673, file: !15674, line: 155, type: !2319)
!15679 = !DILocation(line: 0, scope: !15673)
!15680 = !DILocation(line: 157, column: 15, scope: !15673)
!15681 = !DILocation(line: 157, column: 28, scope: !15673)
!15682 = !DILocation(line: 158, column: 1, scope: !15673)
!15683 = distinct !DISubprogram(name: "z_cstart", scope: !2227, file: !2227, line: 501, type: !3363, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15684)
!15684 = !{!15685}
!15685 = !DILocalVariable(name: "dummy_thread", scope: !15683, file: !2227, line: 518, type: !2320)
!15686 = !DILocation(line: 507, column: 2, scope: !15683)
!15687 = !DILocation(line: 43, column: 14, scope: !15688, inlinedAt: !15692)
!15688 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15689, file: !15689, line: 40, type: !3363, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15690)
!15689 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15690 = !{!15691}
!15691 = !DILocalVariable(name: "msp", scope: !15688, file: !15689, line: 42, type: !208)
!15692 = distinct !DILocation(line: 44, column: 2, scope: !15693, inlinedAt: !15695)
!15693 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15694, file: !15694, line: 42, type: !3363, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !639)
!15694 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15695 = distinct !DILocation(line: 510, column: 2, scope: !15683)
!15696 = !DILocation(line: 43, column: 3, scope: !15688, inlinedAt: !15692)
!15697 = !DILocation(line: 43, column: 60, scope: !15688, inlinedAt: !15692)
!15698 = !DILocation(line: 0, scope: !15688, inlinedAt: !15692)
!15699 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15700, file: !8372, line: 1153, type: !208)
!15700 = distinct !DISubprogram(name: "__set_MSP", scope: !8372, file: !8372, line: 1153, type: !8463, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15701)
!15701 = !{!15699}
!15702 = !DILocation(line: 0, scope: !15700, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 46, column: 2, scope: !15688, inlinedAt: !15692)
!15704 = !DILocation(line: 1155, column: 3, scope: !15700, inlinedAt: !15703)
!15705 = !{i64 3747533}
!15706 = !DILocation(line: 62, column: 11, scope: !15688, inlinedAt: !15692)
!15707 = !DILocation(line: 102, column: 2, scope: !15708, inlinedAt: !15709)
!15708 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9390, file: !9390, line: 97, type: !3363, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !639)
!15709 = distinct !DILocation(line: 45, column: 2, scope: !15693, inlinedAt: !15695)
!15710 = !DILocation(line: 108, column: 2, scope: !15708, inlinedAt: !15709)
!15711 = !DILocation(line: 112, column: 2, scope: !15708, inlinedAt: !15709)
!15712 = !DILocation(line: 113, column: 2, scope: !15708, inlinedAt: !15709)
!15713 = !DILocation(line: 114, column: 2, scope: !15708, inlinedAt: !15709)
!15714 = !DILocation(line: 116, column: 2, scope: !15708, inlinedAt: !15709)
!15715 = !DILocation(line: 123, column: 13, scope: !15708, inlinedAt: !15709)
!15716 = !DILocation(line: 46, column: 2, scope: !15693, inlinedAt: !15695)
!15717 = !DILocation(line: 47, column: 2, scope: !15693, inlinedAt: !15695)
!15718 = !DILocation(line: 174, column: 12, scope: !15719, inlinedAt: !15720)
!15719 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9390, file: !9390, line: 169, type: !3363, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !639)
!15720 = distinct !DILocation(line: 48, column: 2, scope: !15693, inlinedAt: !15695)
!15721 = !DILocation(line: 179, column: 12, scope: !15719, inlinedAt: !15720)
!15722 = !DILocation(line: 50, column: 2, scope: !15693, inlinedAt: !15695)
!15723 = !DILocation(line: 57, column: 2, scope: !15693, inlinedAt: !15695)
!15724 = !DILocation(line: 518, column: 2, scope: !15683)
!15725 = !DILocation(line: 518, column: 18, scope: !15683)
!15726 = !DILocation(line: 520, column: 2, scope: !15683)
!15727 = !DILocation(line: 523, column: 2, scope: !15683)
!15728 = !DILocation(line: 526, column: 2, scope: !15683)
!15729 = !DILocation(line: 527, column: 2, scope: !15683)
!15730 = !DILocation(line: 543, column: 24, scope: !15683)
!15731 = !DILocation(line: 543, column: 2, scope: !15683)
!15732 = !DILocation(line: 0, scope: !2458)
!15733 = !DILocation(line: 246, column: 15, scope: !2476)
!15734 = !DILocation(line: 246, column: 36, scope: !2475)
!15735 = !DILocation(line: 246, column: 2, scope: !2476)
!15736 = !DILocation(line: 247, column: 37, scope: !2474)
!15737 = !DILocation(line: 0, scope: !2474)
!15738 = !DILocation(line: 248, column: 19, scope: !2474)
!15739 = !DILocation(line: 248, column: 12, scope: !2474)
!15740 = !DILocation(line: 250, column: 11, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !2474, file: !2227, line: 250, column: 7)
!15742 = !DILocation(line: 250, column: 7, scope: !2474)
!15743 = !DILocation(line: 254, column: 11, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !2227, line: 254, column: 8)
!15745 = distinct !DILexicalBlock(scope: !15741, file: !2227, line: 250, column: 20)
!15746 = !DILocation(line: 254, column: 8, scope: !15745)
!15747 = !DILocation(line: 255, column: 9, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15744, file: !2227, line: 254, column: 17)
!15749 = !DILocation(line: 258, column: 9, scope: !15748)
!15750 = !DILocation(line: 261, column: 28, scope: !15748)
!15751 = !DILocation(line: 261, column: 10, scope: !15748)
!15752 = !DILocation(line: 261, column: 17, scope: !15748)
!15753 = !DILocation(line: 261, column: 26, scope: !15748)
!15754 = !DILocation(line: 262, column: 4, scope: !15748)
!15755 = !DILocation(line: 263, column: 9, scope: !15745)
!15756 = !DILocation(line: 263, column: 16, scope: !15745)
!15757 = !DILocation(line: 263, column: 28, scope: !15745)
!15758 = !DILocation(line: 264, column: 3, scope: !15745)
!15759 = !DILocation(line: 246, column: 60, scope: !2475)
!15760 = distinct !{!15760, !15735, !15761}
!15761 = !DILocation(line: 265, column: 2, scope: !2476)
!15762 = !DILocation(line: 266, column: 1, scope: !2458)
!15763 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8406, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15764)
!15764 = !{!15765, !15766}
!15765 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15763, file: !680, line: 1814, type: !943)
!15766 = !DILocalVariable(name: "priority", arg: 2, scope: !15763, file: !680, line: 1814, type: !208)
!15767 = !DILocation(line: 0, scope: !15763)
!15768 = !DILocation(line: 1822, column: 48, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15770, file: !680, line: 1821, column: 3)
!15770 = distinct !DILexicalBlock(scope: !15763, file: !680, line: 1816, column: 7)
!15771 = !DILocation(line: 1822, column: 32, scope: !15769)
!15772 = !DILocation(line: 1822, column: 40, scope: !15769)
!15773 = !DILocation(line: 1822, column: 5, scope: !15769)
!15774 = !DILocation(line: 1822, column: 46, scope: !15769)
!15775 = !DILocation(line: 1824, column: 1, scope: !15763)
!15776 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15694, file: !15694, line: 32, type: !3363, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15777 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15778, file: !15778, line: 215, type: !15675, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15779)
!15778 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15779 = !{!15780}
!15780 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15777, file: !15778, line: 215, type: !2319)
!15781 = !DILocation(line: 0, scope: !15777)
!15782 = !DILocation(line: 217, column: 21, scope: !15777)
!15783 = !DILocation(line: 217, column: 34, scope: !15777)
!15784 = !DILocation(line: 221, column: 21, scope: !15777)
!15785 = !DILocation(line: 221, column: 34, scope: !15777)
!15786 = !DILocation(line: 223, column: 27, scope: !15777)
!15787 = !DILocation(line: 223, column: 33, scope: !15777)
!15788 = !DILocation(line: 224, column: 27, scope: !15777)
!15789 = !DILocation(line: 224, column: 32, scope: !15777)
!15790 = !DILocation(line: 232, column: 16, scope: !15777)
!15791 = !DILocation(line: 232, column: 30, scope: !15777)
!15792 = !DILocation(line: 239, column: 24, scope: !15777)
!15793 = !DILocation(line: 240, column: 1, scope: !15777)
!15794 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2227, file: !2227, line: 399, type: !15795, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15797)
!15795 = !DISubroutineType(types: !15796)
!15796 = !{!393}
!15797 = !{!15798}
!15798 = !DILocalVariable(name: "stack_ptr", scope: !15794, file: !2227, line: 401, type: !393)
!15799 = !DILocation(line: 404, column: 2, scope: !15794)
!15800 = !DILocation(line: 416, column: 24, scope: !15794)
!15801 = !DILocation(line: 418, column: 14, scope: !15794)
!15802 = !DILocation(line: 0, scope: !15794)
!15803 = !DILocation(line: 423, column: 2, scope: !15794)
!15804 = !DILocation(line: 424, column: 2, scope: !15794)
!15805 = !DILocation(line: 426, column: 2, scope: !15794)
!15806 = !DILocation(line: 428, column: 2, scope: !15794)
!15807 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2227, file: !2227, line: 432, type: !15808, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15810)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{null, !393}
!15810 = !{!15811}
!15811 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15807, file: !2227, line: 432, type: !393)
!15812 = !DILocation(line: 0, scope: !15807)
!15813 = !DILocation(line: 435, column: 2, scope: !15807)
!15814 = !DILocation(line: 445, column: 2, scope: !15807)
!15815 = distinct !DISubprogram(name: "bg_thread_main", scope: !2227, file: !2227, line: 277, type: !5314, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2223, retainedNodes: !15816)
!15816 = !{!15817, !15818, !15819}
!15817 = !DILocalVariable(name: "unused1", arg: 1, scope: !15815, file: !2227, line: 277, type: !124)
!15818 = !DILocalVariable(name: "unused2", arg: 2, scope: !15815, file: !2227, line: 277, type: !124)
!15819 = !DILocalVariable(name: "unused3", arg: 3, scope: !15815, file: !2227, line: 277, type: !124)
!15820 = !DILocation(line: 0, scope: !15815)
!15821 = !DILocation(line: 291, column: 20, scope: !15815)
!15822 = !DILocation(line: 293, column: 2, scope: !15815)
!15823 = !DILocation(line: 297, column: 2, scope: !15815)
!15824 = !DILocation(line: 305, column: 2, scope: !15815)
!15825 = !DILocation(line: 307, column: 2, scope: !15815)
!15826 = !DILocation(line: 330, column: 8, scope: !15815)
!15827 = !DILocation(line: 333, column: 34, scope: !15815)
!15828 = !DILocation(line: 339, column: 1, scope: !15815)
!15829 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2489, file: !2489, line: 45, type: !15830, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15838)
!15830 = !DISubroutineType(types: !15831)
!15831 = !{null, !15832, !124}
!15832 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !624, line: 103, baseType: !15833)
!15833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15834, size: 32)
!15834 = !DISubroutineType(types: !15835)
!15835 = !{null, !15836, !124}
!15836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15837, size: 32)
!15837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!15838 = !{!15839, !15840}
!15839 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15829, file: !2489, line: 45, type: !15832)
!15840 = !DILocalVariable(name: "user_data", arg: 2, scope: !15829, file: !2489, line: 45, type: !124)
!15841 = !DILocation(line: 0, scope: !15829)
!15842 = !DILocation(line: 71, column: 1, scope: !15829)
!15843 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2489, file: !2489, line: 73, type: !15830, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15844)
!15844 = !{!15845, !15846}
!15845 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15843, file: !2489, line: 73, type: !15832)
!15846 = !DILocalVariable(name: "user_data", arg: 2, scope: !15843, file: !2489, line: 73, type: !124)
!15847 = !DILocation(line: 0, scope: !15843)
!15848 = !DILocation(line: 95, column: 1, scope: !15843)
!15849 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2489, file: !2489, line: 97, type: !9391, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !639)
!15850 = !DILocation(line: 1031, column: 3, scope: !15851, inlinedAt: !15854)
!15851 = distinct !DISubprogram(name: "__get_IPSR", scope: !8372, file: !8372, line: 1027, type: !8453, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15852)
!15852 = !{!15853}
!15853 = !DILocalVariable(name: "result", scope: !15851, file: !8372, line: 1029, type: !208)
!15854 = distinct !DILocation(line: 48, column: 10, scope: !15855, inlinedAt: !15856)
!15855 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9390, file: !9390, line: 46, type: !9391, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !639)
!15856 = distinct !DILocation(line: 99, column: 9, scope: !15849)
!15857 = !{i64 3753184}
!15858 = !DILocation(line: 0, scope: !15851, inlinedAt: !15854)
!15859 = !DILocation(line: 48, column: 9, scope: !15855, inlinedAt: !15856)
!15860 = !DILocation(line: 99, column: 2, scope: !15849)
!15861 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2489, file: !2489, line: 106, type: !3363, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !639)
!15862 = !DILocation(line: 108, column: 2, scope: !15861)
!15863 = !DILocation(line: 108, column: 17, scope: !15861)
!15864 = !DILocation(line: 108, column: 30, scope: !15861)
!15865 = !DILocation(line: 109, column: 1, scope: !15861)
!15866 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2489, file: !2489, line: 116, type: !3363, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !639)
!15867 = !DILocation(line: 118, column: 2, scope: !15866)
!15868 = !DILocation(line: 118, column: 17, scope: !15866)
!15869 = !DILocation(line: 118, column: 30, scope: !15866)
!15870 = !DILocation(line: 119, column: 1, scope: !15866)
!15871 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2489, file: !2489, line: 126, type: !9391, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !639)
!15872 = !DILocation(line: 128, column: 10, scope: !15871)
!15873 = !DILocation(line: 128, column: 25, scope: !15871)
!15874 = !DILocation(line: 128, column: 38, scope: !15871)
!15875 = !DILocation(line: 128, column: 53, scope: !15871)
!15876 = !DILocation(line: 128, column: 2, scope: !15871)
!15877 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2489, file: !2489, line: 187, type: !15878, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15880)
!15878 = !DISubroutineType(types: !15879)
!15879 = !{!125, !2493, !140}
!15880 = !{!15881, !15882}
!15881 = !DILocalVariable(name: "thread", arg: 1, scope: !15877, file: !2489, line: 187, type: !2493)
!15882 = !DILocalVariable(name: "value", arg: 2, scope: !15877, file: !2489, line: 187, type: !140)
!15883 = !DILocation(line: 0, scope: !15877)
!15884 = !DILocation(line: 206, column: 2, scope: !15877)
!15885 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2489, file: !2489, line: 238, type: !15886, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15888)
!15886 = !DISubroutineType(types: !15887)
!15887 = !{!140, !2493}
!15888 = !{!15889}
!15889 = !DILocalVariable(name: "thread", arg: 1, scope: !15885, file: !2489, line: 238, type: !2493)
!15890 = !DILocation(line: 0, scope: !15885)
!15891 = !DILocation(line: 244, column: 2, scope: !15885)
!15892 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2489, file: !2489, line: 248, type: !15893, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15895)
!15893 = !DISubroutineType(types: !15894)
!15894 = !{!125, !2492, !393, !272}
!15895 = !{!15896, !15897, !15898}
!15896 = !DILocalVariable(name: "thread", arg: 1, scope: !15892, file: !2489, line: 248, type: !2492)
!15897 = !DILocalVariable(name: "buf", arg: 2, scope: !15892, file: !2489, line: 248, type: !393)
!15898 = !DILocalVariable(name: "size", arg: 3, scope: !15892, file: !2489, line: 248, type: !272)
!15899 = !DILocation(line: 0, scope: !15892)
!15900 = !DILocation(line: 257, column: 2, scope: !15892)
!15901 = !DILocation(line: 0, scope: !2488)
!15902 = !DILocation(line: 281, column: 11, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !2488, file: !2489, line: 281, column: 6)
!15904 = !DILocation(line: 281, column: 20, scope: !15903)
!15905 = !DILocation(line: 275, column: 45, scope: !2488)
!15906 = !DILocation(line: 285, column: 10, scope: !2488)
!15907 = !DILocation(line: 0, scope: !2609)
!15908 = !DILocation(line: 293, column: 39, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !2609, file: !2489, line: 293, column: 2)
!15910 = !DILocation(line: 293, column: 2, scope: !2609)
!15911 = !DILocation(line: 273, column: 14, scope: !2488)
!15912 = !DILocation(line: 309, column: 2, scope: !2488)
!15913 = !DILocation(line: 309, column: 11, scope: !2488)
!15914 = !DILocation(line: 311, column: 2, scope: !2488)
!15915 = !DILocation(line: 293, column: 26, scope: !15909)
!15916 = !DILocation(line: 294, column: 9, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15909, file: !2489, line: 293, column: 54)
!15918 = !DILocation(line: 295, column: 21, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15917, file: !2489, line: 295, column: 7)
!15920 = !DILocation(line: 295, column: 28, scope: !15919)
!15921 = !DILocation(line: 295, column: 7, scope: !15917)
!15922 = !DILocation(line: 299, column: 25, scope: !15917)
!15923 = !DILocation(line: 299, column: 41, scope: !15917)
!15924 = !DILocation(line: 300, column: 7, scope: !15917)
!15925 = !DILocation(line: 300, column: 26, scope: !15917)
!15926 = !DILocation(line: 299, column: 10, scope: !15917)
!15927 = !DILocation(line: 299, column: 7, scope: !15917)
!15928 = !DILocation(line: 302, column: 16, scope: !15917)
!15929 = !DILocation(line: 304, column: 20, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15917, file: !2489, line: 304, column: 7)
!15931 = !DILocation(line: 304, column: 7, scope: !15917)
!15932 = !DILocation(line: 305, column: 26, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15930, file: !2489, line: 304, column: 26)
!15934 = !DILocation(line: 305, column: 42, scope: !15933)
!15935 = !DILocation(line: 305, column: 11, scope: !15933)
!15936 = !DILocation(line: 305, column: 8, scope: !15933)
!15937 = !DILocation(line: 306, column: 3, scope: !15933)
!15938 = !DILocation(line: 293, column: 50, scope: !15909)
!15939 = !DILocation(line: 312, column: 1, scope: !2488)
!15940 = distinct !DISubprogram(name: "copy_bytes", scope: !2489, file: !2489, line: 261, type: !15941, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15943)
!15941 = !DISubroutineType(types: !15942)
!15942 = !{!272, !393, !272, !140, !272}
!15943 = !{!15944, !15945, !15946, !15947, !15948}
!15944 = !DILocalVariable(name: "dest", arg: 1, scope: !15940, file: !2489, line: 261, type: !393)
!15945 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15940, file: !2489, line: 261, type: !272)
!15946 = !DILocalVariable(name: "src", arg: 3, scope: !15940, file: !2489, line: 261, type: !140)
!15947 = !DILocalVariable(name: "src_size", arg: 4, scope: !15940, file: !2489, line: 261, type: !272)
!15948 = !DILocalVariable(name: "bytes_to_copy", scope: !15940, file: !2489, line: 263, type: !272)
!15949 = !DILocation(line: 0, scope: !15940)
!15950 = !DILocation(line: 265, column: 18, scope: !15940)
!15951 = !DILocation(line: 266, column: 2, scope: !15940)
!15952 = !DILocation(line: 268, column: 2, scope: !15940)
!15953 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2489, file: !2489, line: 383, type: !15954, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15956)
!15954 = !DISubroutineType(types: !15955)
!15955 = !{null, !2493}
!15956 = !{!15957}
!15957 = !DILocalVariable(name: "thread", arg: 1, scope: !15953, file: !2489, line: 383, type: !2493)
!15958 = !DILocation(line: 0, scope: !15953)
!15959 = !DILocation(line: 387, column: 2, scope: !15953)
!15960 = !DILocation(line: 388, column: 1, scope: !15953)
!15961 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2489, file: !2489, line: 528, type: !15962, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !15969)
!15962 = !DISubroutineType(types: !15963)
!15963 = !{!393, !2493, !15964, !272, !5311, !124, !124, !124, !125, !208, !140}
!15964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15965, size: 32)
!15965 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5312, line: 44, baseType: !15966)
!15966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2434, line: 47, size: 8, elements: !15967)
!15967 = !{!15968}
!15968 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15966, file: !2434, line: 48, baseType: !142, size: 8)
!15969 = !{!15970, !15971, !15972, !15973, !15974, !15975, !15976, !15977, !15978, !15979, !15980}
!15970 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15961, file: !2489, line: 528, type: !2493)
!15971 = !DILocalVariable(name: "stack", arg: 2, scope: !15961, file: !2489, line: 529, type: !15964)
!15972 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15961, file: !2489, line: 529, type: !272)
!15973 = !DILocalVariable(name: "entry", arg: 4, scope: !15961, file: !2489, line: 530, type: !5311)
!15974 = !DILocalVariable(name: "p1", arg: 5, scope: !15961, file: !2489, line: 531, type: !124)
!15975 = !DILocalVariable(name: "p2", arg: 6, scope: !15961, file: !2489, line: 531, type: !124)
!15976 = !DILocalVariable(name: "p3", arg: 7, scope: !15961, file: !2489, line: 531, type: !124)
!15977 = !DILocalVariable(name: "prio", arg: 8, scope: !15961, file: !2489, line: 532, type: !125)
!15978 = !DILocalVariable(name: "options", arg: 9, scope: !15961, file: !2489, line: 532, type: !208)
!15979 = !DILocalVariable(name: "name", arg: 10, scope: !15961, file: !2489, line: 532, type: !140)
!15980 = !DILocalVariable(name: "stack_ptr", scope: !15961, file: !2489, line: 534, type: !393)
!15981 = !DILocation(line: 0, scope: !15961)
!15982 = !DILocation(line: 550, column: 28, scope: !15961)
!15983 = !DILocation(line: 550, column: 2, scope: !15961)
!15984 = !DILocation(line: 553, column: 34, scope: !15961)
!15985 = !DILocation(line: 553, column: 2, scope: !15961)
!15986 = !DILocation(line: 554, column: 14, scope: !15961)
!15987 = !DILocation(line: 564, column: 2, scope: !15961)
!15988 = !DILocation(line: 567, column: 14, scope: !15961)
!15989 = !DILocation(line: 567, column: 24, scope: !15961)
!15990 = !DILocation(line: 612, column: 7, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15961, file: !2489, line: 612, column: 6)
!15992 = !DILocation(line: 612, column: 6, scope: !15961)
!15993 = !DILocation(line: 627, column: 40, scope: !15961)
!15994 = !DILocation(line: 637, column: 2, scope: !15961)
!15995 = !DILocation(line: 613, column: 15, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15991, file: !2489, line: 612, column: 17)
!15997 = !DILocation(line: 613, column: 29, scope: !15996)
!15998 = !DILocation(line: 638, column: 1, scope: !15961)
!15999 = distinct !DISubprogram(name: "z_waitq_init", scope: !16000, file: !16000, line: 47, type: !16001, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16003)
!16000 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16001 = !DISubroutineType(types: !16002)
!16002 = !{null, !2524}
!16003 = !{!16004}
!16004 = !DILocalVariable(name: "w", arg: 1, scope: !15999, file: !16000, line: 47, type: !2524)
!16005 = !DILocation(line: 0, scope: !15999)
!16006 = !DILocation(line: 49, column: 21, scope: !15999)
!16007 = !DILocation(line: 49, column: 2, scope: !15999)
!16008 = !DILocation(line: 50, column: 1, scope: !15999)
!16009 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2489, file: !2489, line: 791, type: !16010, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16013)
!16010 = !DISubroutineType(types: !16011)
!16011 = !{null, !16012, !125, !208, !32}
!16012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!16013 = !{!16014, !16015, !16016, !16017}
!16014 = !DILocalVariable(name: "thread_base", arg: 1, scope: !16009, file: !2489, line: 791, type: !16012)
!16015 = !DILocalVariable(name: "priority", arg: 2, scope: !16009, file: !2489, line: 791, type: !125)
!16016 = !DILocalVariable(name: "initial_state", arg: 3, scope: !16009, file: !2489, line: 792, type: !208)
!16017 = !DILocalVariable(name: "options", arg: 4, scope: !16009, file: !2489, line: 792, type: !32)
!16018 = !DILocation(line: 0, scope: !16009)
!16019 = !DILocation(line: 795, column: 15, scope: !16009)
!16020 = !DILocation(line: 795, column: 25, scope: !16009)
!16021 = !DILocation(line: 796, column: 30, scope: !16009)
!16022 = !DILocation(line: 796, column: 15, scope: !16009)
!16023 = !DILocation(line: 796, column: 28, scope: !16009)
!16024 = !DILocation(line: 797, column: 30, scope: !16009)
!16025 = !DILocation(line: 797, column: 15, scope: !16009)
!16026 = !DILocation(line: 797, column: 28, scope: !16009)
!16027 = !DILocation(line: 799, column: 22, scope: !16009)
!16028 = !DILocation(line: 799, column: 15, scope: !16009)
!16029 = !DILocation(line: 799, column: 20, scope: !16009)
!16030 = !DILocation(line: 801, column: 15, scope: !16009)
!16031 = !DILocation(line: 801, column: 28, scope: !16009)
!16032 = !DILocation(line: 814, column: 2, scope: !16009)
!16033 = !DILocation(line: 815, column: 1, scope: !16009)
!16034 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2489, file: !2489, line: 449, type: !16035, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16037)
!16035 = !DISubroutineType(types: !16036)
!16036 = !{!393, !2493, !15964, !272}
!16037 = !{!16038, !16039, !16040, !16041, !16042, !16043, !16044, !16045}
!16038 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16034, file: !2489, line: 449, type: !2493)
!16039 = !DILocalVariable(name: "stack", arg: 2, scope: !16034, file: !2489, line: 450, type: !15964)
!16040 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16034, file: !2489, line: 450, type: !272)
!16041 = !DILocalVariable(name: "stack_obj_size", scope: !16034, file: !2489, line: 452, type: !272)
!16042 = !DILocalVariable(name: "stack_buf_size", scope: !16034, file: !2489, line: 452, type: !272)
!16043 = !DILocalVariable(name: "stack_ptr", scope: !16034, file: !2489, line: 453, type: !393)
!16044 = !DILocalVariable(name: "stack_buf_start", scope: !16034, file: !2489, line: 453, type: !393)
!16045 = !DILocalVariable(name: "delta", scope: !16034, file: !2489, line: 454, type: !272)
!16046 = !DILocation(line: 0, scope: !16034)
!16047 = !DILocation(line: 465, column: 20, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16034, file: !2489, line: 463, column: 2)
!16049 = !DILocation(line: 466, column: 21, scope: !16048)
!16050 = !DILocation(line: 473, column: 28, scope: !16034)
!16051 = !DILocation(line: 514, column: 33, scope: !16034)
!16052 = !DILocation(line: 514, column: 25, scope: !16034)
!16053 = !DILocation(line: 514, column: 31, scope: !16034)
!16054 = !DILocation(line: 515, column: 25, scope: !16034)
!16055 = !DILocation(line: 515, column: 30, scope: !16034)
!16056 = !DILocation(line: 516, column: 25, scope: !16034)
!16057 = !DILocation(line: 516, column: 31, scope: !16034)
!16058 = !DILocation(line: 520, column: 2, scope: !16034)
!16059 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2434, file: !2434, line: 331, type: !16060, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16062)
!16060 = !DISubroutineType(types: !16061)
!16061 = !{!393, !15964}
!16062 = !{!16063}
!16063 = !DILocalVariable(name: "sym", arg: 1, scope: !16059, file: !2434, line: 331, type: !15964)
!16064 = !DILocation(line: 0, scope: !16059)
!16065 = !DILocation(line: 333, column: 21, scope: !16059)
!16066 = !DILocation(line: 333, column: 2, scope: !16059)
!16067 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !16068, file: !16068, line: 40, type: !16069, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16071)
!16068 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16069 = !DISubroutineType(types: !16070)
!16070 = !{null, !16012}
!16071 = !{!16072}
!16072 = !DILocalVariable(name: "thread_base", arg: 1, scope: !16067, file: !16068, line: 40, type: !16012)
!16073 = !DILocation(line: 0, scope: !16067)
!16074 = !DILocation(line: 42, column: 31, scope: !16067)
!16075 = !DILocation(line: 42, column: 2, scope: !16067)
!16076 = !DILocation(line: 43, column: 1, scope: !16067)
!16077 = distinct !DISubprogram(name: "z_init_timeout", scope: !16068, file: !16068, line: 25, type: !2550, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16078)
!16078 = !{!16079}
!16079 = !DILocalVariable(name: "to", arg: 1, scope: !16077, file: !16068, line: 25, type: !2552)
!16080 = !DILocation(line: 0, scope: !16077)
!16081 = !DILocation(line: 27, column: 22, scope: !16077)
!16082 = !DILocation(line: 27, column: 2, scope: !16077)
!16083 = !DILocation(line: 28, column: 1, scope: !16077)
!16084 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16085, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16087)
!16085 = !DISubroutineType(types: !16086)
!16086 = !{null, !2596}
!16087 = !{!16088}
!16088 = !DILocalVariable(name: "node", arg: 1, scope: !16084, file: !541, line: 211, type: !2596)
!16089 = !DILocation(line: 0, scope: !16084)
!16090 = !DILocation(line: 213, column: 8, scope: !16084)
!16091 = !DILocation(line: 213, column: 13, scope: !16084)
!16092 = !DILocation(line: 214, column: 8, scope: !16084)
!16093 = !DILocation(line: 214, column: 13, scope: !16084)
!16094 = !DILocation(line: 215, column: 1, scope: !16084)
!16095 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !16096, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16099)
!16096 = !DISubroutineType(types: !16097)
!16097 = !{null, !16098}
!16098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!16099 = !{!16100}
!16100 = !DILocalVariable(name: "list", arg: 1, scope: !16095, file: !541, line: 197, type: !16098)
!16101 = !DILocation(line: 0, scope: !16095)
!16102 = !DILocation(line: 199, column: 8, scope: !16095)
!16103 = !DILocation(line: 199, column: 13, scope: !16095)
!16104 = !DILocation(line: 200, column: 8, scope: !16095)
!16105 = !DILocation(line: 200, column: 13, scope: !16095)
!16106 = !DILocation(line: 201, column: 1, scope: !16095)
!16107 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2489, file: !2489, line: 641, type: !16108, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16114)
!16108 = !DISubroutineType(types: !16109)
!16109 = !{!2492, !2493, !15964, !272, !5311, !124, !124, !124, !125, !208, !16110}
!16110 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1967, line: 67, baseType: !16111)
!16111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1967, line: 65, size: 64, elements: !16112)
!16112 = !{!16113}
!16113 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16111, file: !1967, line: 66, baseType: !1966, size: 64)
!16114 = !{!16115, !16116, !16117, !16118, !16119, !16120, !16121, !16122, !16123, !16124}
!16115 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16107, file: !2489, line: 641, type: !2493)
!16116 = !DILocalVariable(name: "stack", arg: 2, scope: !16107, file: !2489, line: 642, type: !15964)
!16117 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16107, file: !2489, line: 643, type: !272)
!16118 = !DILocalVariable(name: "entry", arg: 4, scope: !16107, file: !2489, line: 643, type: !5311)
!16119 = !DILocalVariable(name: "p1", arg: 5, scope: !16107, file: !2489, line: 644, type: !124)
!16120 = !DILocalVariable(name: "p2", arg: 6, scope: !16107, file: !2489, line: 644, type: !124)
!16121 = !DILocalVariable(name: "p3", arg: 7, scope: !16107, file: !2489, line: 644, type: !124)
!16122 = !DILocalVariable(name: "prio", arg: 8, scope: !16107, file: !2489, line: 645, type: !125)
!16123 = !DILocalVariable(name: "options", arg: 9, scope: !16107, file: !2489, line: 645, type: !208)
!16124 = !DILocalVariable(name: "delay", arg: 10, scope: !16107, file: !2489, line: 645, type: !16110)
!16125 = !DILocation(line: 0, scope: !16107)
!16126 = !DILocation(line: 649, column: 2, scope: !16107)
!16127 = !DILocation(line: 652, column: 7, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16107, file: !2489, line: 652, column: 6)
!16129 = !DILocation(line: 652, column: 6, scope: !16107)
!16130 = !DILocation(line: 653, column: 3, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16128, file: !2489, line: 652, column: 39)
!16132 = !DILocation(line: 654, column: 2, scope: !16131)
!16133 = !DILocation(line: 656, column: 2, scope: !16107)
!16134 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2489, file: !2489, line: 401, type: !16135, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16137)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{null, !2493, !16110}
!16137 = !{!16138, !16139}
!16138 = !DILocalVariable(name: "thread", arg: 1, scope: !16134, file: !2489, line: 401, type: !2493)
!16139 = !DILocalVariable(name: "delay", arg: 2, scope: !16134, file: !2489, line: 401, type: !16110)
!16140 = !DILocation(line: 0, scope: !16134)
!16141 = !DILocation(line: 404, column: 6, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16134, file: !2489, line: 404, column: 6)
!16143 = !DILocation(line: 404, column: 6, scope: !16134)
!16144 = !DILocation(line: 405, column: 3, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16142, file: !2489, line: 404, column: 38)
!16146 = !DILocation(line: 406, column: 2, scope: !16145)
!16147 = !DILocation(line: 407, column: 3, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16142, file: !2489, line: 406, column: 9)
!16149 = !DILocation(line: 413, column: 1, scope: !16134)
!16150 = distinct !DISubprogram(name: "k_thread_start", scope: !5433, file: !5433, line: 205, type: !16151, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16153)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{null, !2492}
!16153 = !{!16154}
!16154 = !DILocalVariable(name: "thread", arg: 1, scope: !16150, file: !5433, line: 205, type: !2492)
!16155 = !DILocation(line: 0, scope: !16150)
!16156 = !DILocation(line: 214, column: 2, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16150, file: !5433, line: 214, column: 2)
!16158 = !{i64 2155088389}
!16159 = !DILocation(line: 215, column: 2, scope: !16150)
!16160 = !DILocation(line: 216, column: 1, scope: !16150)
!16161 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !16068, file: !16068, line: 47, type: !16135, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16162)
!16162 = !{!16163, !16164}
!16163 = !DILocalVariable(name: "thread", arg: 1, scope: !16161, file: !16068, line: 47, type: !2493)
!16164 = !DILocalVariable(name: "ticks", arg: 2, scope: !16161, file: !16068, line: 47, type: !16110)
!16165 = !DILocation(line: 0, scope: !16161)
!16166 = !DILocation(line: 49, column: 30, scope: !16161)
!16167 = !DILocation(line: 49, column: 2, scope: !16161)
!16168 = !DILocation(line: 50, column: 1, scope: !16161)
!16169 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2489, file: !2489, line: 748, type: !3363, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16170)
!16170 = !{!16171, !16189}
!16171 = !DILocalVariable(name: "thread_data", scope: !16172, file: !2489, line: 750, type: !16173)
!16172 = distinct !DILexicalBlock(scope: !16169, file: !2489, line: 750, column: 2)
!16173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16174, size: 32)
!16174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !624, line: 620, size: 384, elements: !16175)
!16175 = !{!16176, !16177, !16178, !16179, !16180, !16181, !16182, !16183, !16184, !16185, !16186, !16188}
!16176 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !16174, file: !624, line: 621, baseType: !2493, size: 32)
!16177 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !16174, file: !624, line: 622, baseType: !15964, size: 32, offset: 32)
!16178 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !16174, file: !624, line: 623, baseType: !32, size: 32, offset: 64)
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !16174, file: !624, line: 624, baseType: !5311, size: 32, offset: 96)
!16180 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !16174, file: !624, line: 625, baseType: !124, size: 32, offset: 128)
!16181 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !16174, file: !624, line: 626, baseType: !124, size: 32, offset: 160)
!16182 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !16174, file: !624, line: 627, baseType: !124, size: 32, offset: 192)
!16183 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !16174, file: !624, line: 628, baseType: !125, size: 32, offset: 224)
!16184 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !16174, file: !624, line: 629, baseType: !208, size: 32, offset: 256)
!16185 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !16174, file: !624, line: 630, baseType: !917, size: 32, offset: 288)
!16186 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !16174, file: !624, line: 631, baseType: !16187, size: 32, offset: 320)
!16187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 32)
!16188 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !16174, file: !624, line: 632, baseType: !140, size: 32, offset: 352)
!16189 = !DILocalVariable(name: "thread_data", scope: !16190, file: !2489, line: 781, type: !16173)
!16190 = distinct !DILexicalBlock(scope: !16169, file: !2489, line: 781, column: 2)
!16191 = !DILocation(line: 0, scope: !16172)
!16192 = !DILocation(line: 750, column: 2, scope: !16172)
!16193 = !DILocation(line: 780, column: 2, scope: !16169)
!16194 = !DILocation(line: 0, scope: !16190)
!16195 = !DILocation(line: 781, column: 2, scope: !16190)
!16196 = !DILocation(line: 752, column: 17, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16198, file: !2489, line: 750, column: 38)
!16198 = distinct !DILexicalBlock(scope: !16172, file: !2489, line: 750, column: 2)
!16199 = !DILocation(line: 753, column: 17, scope: !16197)
!16200 = !DILocation(line: 754, column: 17, scope: !16197)
!16201 = !DILocation(line: 755, column: 17, scope: !16197)
!16202 = !DILocation(line: 756, column: 17, scope: !16197)
!16203 = !DILocation(line: 757, column: 17, scope: !16197)
!16204 = !DILocation(line: 758, column: 17, scope: !16197)
!16205 = !DILocation(line: 759, column: 17, scope: !16197)
!16206 = !DILocation(line: 760, column: 17, scope: !16197)
!16207 = !DILocation(line: 751, column: 3, scope: !16197)
!16208 = !DILocation(line: 763, column: 16, scope: !16197)
!16209 = !DILocation(line: 763, column: 29, scope: !16197)
!16210 = !DILocation(line: 763, column: 39, scope: !16197)
!16211 = !DILocation(line: 750, column: 2, scope: !16198)
!16212 = !DILocation(line: 750, column: 2, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16198, file: !2489, line: 750, column: 2)
!16214 = distinct !{!16214, !16192, !16215}
!16215 = !DILocation(line: 764, column: 2, scope: !16172)
!16216 = !DILocation(line: 787, column: 2, scope: !16169)
!16217 = !DILocation(line: 788, column: 1, scope: !16169)
!16218 = !DILocation(line: 782, column: 20, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16220, file: !2489, line: 782, column: 7)
!16220 = distinct !DILexicalBlock(scope: !16221, file: !2489, line: 781, column: 38)
!16221 = distinct !DILexicalBlock(scope: !16190, file: !2489, line: 781, column: 2)
!16222 = !DILocation(line: 782, column: 31, scope: !16219)
!16223 = !DILocation(line: 782, column: 7, scope: !16220)
!16224 = !DILocation(line: 783, column: 37, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16219, file: !2489, line: 782, column: 51)
!16226 = !DILocation(line: 784, column: 10, scope: !16225)
!16227 = !DILocation(line: 783, column: 4, scope: !16225)
!16228 = !DILocation(line: 785, column: 3, scope: !16225)
!16229 = !DILocation(line: 781, column: 2, scope: !16221)
!16230 = !DILocation(line: 781, column: 2, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16221, file: !2489, line: 781, column: 2)
!16232 = distinct !{!16232, !16195, !16233}
!16233 = !DILocation(line: 786, column: 2, scope: !16190)
!16234 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !16235, file: !16235, line: 403, type: !16236, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16238)
!16235 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16236 = !DISubroutineType(types: !16237)
!16237 = !{!1813, !1813}
!16238 = !{!16239}
!16239 = !DILocalVariable(name: "t", arg: 1, scope: !16234, file: !16235, line: 403, type: !1813)
!16240 = !DILocation(line: 0, scope: !16234)
!16241 = !DILocalVariable(name: "t", arg: 1, scope: !16242, file: !16235, line: 102, type: !1813)
!16242 = distinct !DISubprogram(name: "z_tmcvt", scope: !16235, file: !16235, line: 102, type: !16243, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16245)
!16243 = !DISubroutineType(types: !16244)
!16244 = !{!1813, !1813, !208, !208, !153, !153, !153, !153}
!16245 = !{!16241, !16246, !16247, !16248, !16249, !16250, !16251, !16252, !16253, !16254, !16255}
!16246 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16242, file: !16235, line: 102, type: !208)
!16247 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16242, file: !16235, line: 103, type: !208)
!16248 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16242, file: !16235, line: 103, type: !153)
!16249 = !DILocalVariable(name: "result32", arg: 5, scope: !16242, file: !16235, line: 104, type: !153)
!16250 = !DILocalVariable(name: "round_up", arg: 6, scope: !16242, file: !16235, line: 104, type: !153)
!16251 = !DILocalVariable(name: "round_off", arg: 7, scope: !16242, file: !16235, line: 105, type: !153)
!16252 = !DILocalVariable(name: "mul_ratio", scope: !16242, file: !16235, line: 107, type: !153)
!16253 = !DILocalVariable(name: "div_ratio", scope: !16242, file: !16235, line: 109, type: !153)
!16254 = !DILocalVariable(name: "off", scope: !16242, file: !16235, line: 116, type: !1813)
!16255 = !DILocalVariable(name: "rdivisor", scope: !16256, file: !16235, line: 119, type: !208)
!16256 = distinct !DILexicalBlock(scope: !16257, file: !16235, line: 118, column: 18)
!16257 = distinct !DILexicalBlock(scope: !16242, file: !16235, line: 118, column: 6)
!16258 = !DILocation(line: 0, scope: !16242, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 406, column: 9, scope: !16234)
!16260 = !DILocation(line: 145, column: 13, scope: !16261, inlinedAt: !16259)
!16261 = distinct !DILexicalBlock(scope: !16262, file: !16235, line: 144, column: 10)
!16262 = distinct !DILexicalBlock(scope: !16263, file: !16235, line: 142, column: 7)
!16263 = distinct !DILexicalBlock(scope: !16264, file: !16235, line: 141, column: 24)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !16235, line: 141, column: 13)
!16265 = distinct !DILexicalBlock(scope: !16242, file: !16235, line: 134, column: 6)
!16266 = !DILocation(line: 406, column: 2, scope: !16234)
!16267 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2489, file: !2489, line: 817, type: !5309, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16268)
!16268 = !{!16269, !16270, !16271, !16272}
!16269 = !DILocalVariable(name: "entry", arg: 1, scope: !16267, file: !2489, line: 817, type: !5311)
!16270 = !DILocalVariable(name: "p1", arg: 2, scope: !16267, file: !2489, line: 818, type: !124)
!16271 = !DILocalVariable(name: "p2", arg: 3, scope: !16267, file: !2489, line: 818, type: !124)
!16272 = !DILocalVariable(name: "p3", arg: 4, scope: !16267, file: !2489, line: 818, type: !124)
!16273 = !DILocation(line: 0, scope: !16267)
!16274 = !DILocation(line: 822, column: 2, scope: !16267)
!16275 = !DILocation(line: 822, column: 17, scope: !16267)
!16276 = !DILocation(line: 822, column: 30, scope: !16267)
!16277 = !DILocation(line: 823, column: 2, scope: !16267)
!16278 = !DILocation(line: 845, column: 2, scope: !16267)
!16279 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2489, file: !2489, line: 888, type: !16280, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16282)
!16280 = !DISubroutineType(types: !16281)
!16281 = !{!125, !2493}
!16282 = !{!16283}
!16283 = !DILocalVariable(name: "thread", arg: 1, scope: !16279, file: !2489, line: 888, type: !2493)
!16284 = !DILocation(line: 0, scope: !16279)
!16285 = !DILocation(line: 893, column: 2, scope: !16279)
!16286 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2489, file: !2489, line: 897, type: !16287, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16289)
!16287 = !DISubroutineType(types: !16288)
!16288 = !{!125, !2493, !32}
!16289 = !{!16290, !16291}
!16290 = !DILocalVariable(name: "thread", arg: 1, scope: !16286, file: !2489, line: 897, type: !2493)
!16291 = !DILocalVariable(name: "options", arg: 2, scope: !16286, file: !2489, line: 897, type: !32)
!16292 = !DILocation(line: 0, scope: !16286)
!16293 = !DILocation(line: 902, column: 2, scope: !16286)
!16294 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2489, file: !2489, line: 1072, type: !16295, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16300)
!16295 = !DISubroutineType(types: !16296)
!16296 = !{!125, !2492, !16297}
!16297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16298, size: 32)
!16298 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !531, line: 234, baseType: !16299)
!16299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !531, line: 192, elements: !639)
!16300 = !{!16301, !16302}
!16301 = !DILocalVariable(name: "thread", arg: 1, scope: !16294, file: !2489, line: 1072, type: !2492)
!16302 = !DILocalVariable(name: "stats", arg: 2, scope: !16294, file: !2489, line: 1073, type: !16297)
!16303 = !DILocation(line: 0, scope: !16294)
!16304 = !DILocation(line: 1075, column: 14, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16294, file: !2489, line: 1075, column: 6)
!16306 = !DILocation(line: 1075, column: 23, scope: !16305)
!16307 = !DILocation(line: 1086, column: 1, scope: !16294)
!16308 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2489, file: !2489, line: 1088, type: !16309, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !16311)
!16309 = !DISubroutineType(types: !16310)
!16310 = !{!125, !16297}
!16311 = !{!16312}
!16312 = !DILocalVariable(name: "stats", arg: 1, scope: !16308, file: !2489, line: 1088, type: !16297)
!16313 = !DILocation(line: 0, scope: !16308)
!16314 = !DILocation(line: 1094, column: 12, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16308, file: !2489, line: 1094, column: 6)
!16316 = !DILocation(line: 1120, column: 1, scope: !16308)
!16317 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !16318, file: !16318, line: 20, type: !3363, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !639)
!16318 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16319 = !DILocation(line: 30, column: 2, scope: !16317)
!16320 = !DILocation(line: 31, column: 1, scope: !16317)
!16321 = distinct !DISubprogram(name: "idle", scope: !16318, file: !16318, line: 33, type: !5314, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !16322)
!16322 = !{!16323, !16324, !16325}
!16323 = !DILocalVariable(name: "unused1", arg: 1, scope: !16321, file: !16318, line: 33, type: !124)
!16324 = !DILocalVariable(name: "unused2", arg: 2, scope: !16321, file: !16318, line: 33, type: !124)
!16325 = !DILocalVariable(name: "unused3", arg: 3, scope: !16321, file: !16318, line: 33, type: !124)
!16326 = !DILocation(line: 0, scope: !16321)
!16327 = !DILocation(line: 41, column: 2, scope: !16321)
!16328 = !DILocation(line: 55, column: 2, scope: !16329, inlinedAt: !16333)
!16329 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !16330)
!16330 = !{!16331, !16332}
!16331 = !DILocalVariable(name: "key", scope: !16329, file: !6905, line: 44, type: !32)
!16332 = !DILocalVariable(name: "tmp", scope: !16329, file: !6905, line: 53, type: !32)
!16333 = distinct !DILocation(line: 62, column: 10, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16321, file: !16318, line: 41, column: 15)
!16335 = !{i64 2279936}
!16336 = !DILocation(line: 0, scope: !16329, inlinedAt: !16333)
!16337 = !DILocation(line: 86, column: 3, scope: !16334)
!16338 = distinct !{!16338, !16327, !16339}
!16339 = !DILocation(line: 105, column: 2, scope: !16321)
!16340 = distinct !DISubprogram(name: "k_cpu_idle", scope: !624, file: !624, line: 5627, type: !3363, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3344, retainedNodes: !639)
!16341 = !DILocation(line: 5629, column: 2, scope: !16340)
!16342 = !DILocation(line: 5630, column: 1, scope: !16340)
!16343 = !DISubprogram(name: "arch_cpu_idle", scope: !5312, file: !5312, line: 167, type: !3363, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!16344 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2721, file: !2721, line: 93, type: !16345, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16347)
!16345 = !DISubroutineType(types: !16346)
!16346 = !{!917, !2616, !2616}
!16347 = !{!16348, !16349, !16350, !16351}
!16348 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16344, file: !2721, line: 93, type: !2616)
!16349 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16344, file: !2721, line: 94, type: !2616)
!16350 = !DILocalVariable(name: "b1", scope: !16344, file: !2721, line: 97, type: !917)
!16351 = !DILocalVariable(name: "b2", scope: !16344, file: !2721, line: 98, type: !917)
!16352 = !DILocation(line: 0, scope: !16344)
!16353 = !DILocation(line: 97, column: 30, scope: !16344)
!16354 = !DILocation(line: 98, column: 30, scope: !16344)
!16355 = !DILocation(line: 100, column: 9, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16344, file: !2721, line: 100, column: 6)
!16357 = !DILocation(line: 100, column: 6, scope: !16344)
!16358 = !DILocation(line: 125, column: 1, scope: !16344)
!16359 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2721, file: !2721, line: 428, type: !16360, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16362)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{null, !2616}
!16362 = !{!16363}
!16363 = !DILocalVariable(name: "curr", arg: 1, scope: !16359, file: !2721, line: 428, type: !2616)
!16364 = !DILocation(line: 0, scope: !16359)
!16365 = !DILocation(line: 434, column: 6, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16359, file: !2721, line: 434, column: 6)
!16367 = !DILocation(line: 434, column: 23, scope: !16366)
!16368 = !DILocation(line: 434, column: 6, scope: !16359)
!16369 = !DILocation(line: 435, column: 50, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16366, file: !2721, line: 434, column: 29)
!16371 = !DILocation(line: 435, column: 48, scope: !16370)
!16372 = !DILocation(line: 435, column: 29, scope: !16370)
!16373 = !DILocation(line: 436, column: 24, scope: !16370)
!16374 = !DILocation(line: 436, column: 3, scope: !16370)
!16375 = !DILocation(line: 437, column: 2, scope: !16370)
!16376 = !DILocation(line: 438, column: 1, scope: !16359)
!16377 = distinct !DISubprogram(name: "slice_time", scope: !2721, file: !2721, line: 407, type: !16378, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16380)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{!125, !2616}
!16380 = !{!16381, !16382}
!16381 = !DILocalVariable(name: "curr", arg: 1, scope: !16377, file: !2721, line: 407, type: !2616)
!16382 = !DILocalVariable(name: "ret", scope: !16377, file: !2721, line: 409, type: !125)
!16383 = !DILocation(line: 0, scope: !16377)
!16384 = !DILocation(line: 409, column: 12, scope: !16377)
!16385 = !DILocation(line: 416, column: 2, scope: !16377)
!16386 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2721, file: !2721, line: 440, type: !16387, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16389)
!16387 = !DISubroutineType(types: !16388)
!16388 = !{null, !917, !125}
!16389 = !{!16390, !16391, !16392, !16398}
!16390 = !DILocalVariable(name: "slice", arg: 1, scope: !16386, file: !2721, line: 440, type: !917)
!16391 = !DILocalVariable(name: "prio", arg: 2, scope: !16386, file: !2721, line: 440, type: !125)
!16392 = !DILocalVariable(name: "__i", scope: !16393, file: !2721, line: 442, type: !16394)
!16393 = distinct !DILexicalBlock(scope: !16386, file: !2721, line: 442, column: 2)
!16394 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !16395)
!16395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !16396)
!16396 = !{!16397}
!16397 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16395, file: !638, line: 33, baseType: !125, size: 32)
!16398 = !DILocalVariable(name: "__key", scope: !16393, file: !2721, line: 442, type: !16394)
!16399 = !DILocation(line: 0, scope: !16386)
!16400 = !DILocation(line: 0, scope: !16393)
!16401 = !DILocalVariable(name: "l", arg: 1, scope: !16402, file: !638, line: 136, type: !16405)
!16402 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !16403, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16406)
!16403 = !DISubroutineType(types: !16404)
!16404 = !{!16394, !16405}
!16405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!16406 = !{!16401, !16407}
!16407 = !DILocalVariable(name: "k", scope: !16402, file: !638, line: 139, type: !16394)
!16408 = !DILocation(line: 0, scope: !16402, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 442, column: 2, scope: !16393)
!16410 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16415)
!16411 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16412)
!16412 = !{!16413, !16414}
!16413 = !DILocalVariable(name: "key", scope: !16411, file: !6905, line: 44, type: !32)
!16414 = !DILocalVariable(name: "tmp", scope: !16411, file: !6905, line: 53, type: !32)
!16415 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16409)
!16416 = !{i64 2323907}
!16417 = !DILocation(line: 0, scope: !16411, inlinedAt: !16415)
!16418 = !DILocation(line: 443, column: 29, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16420, file: !2721, line: 442, column: 26)
!16420 = distinct !DILexicalBlock(scope: !16393, file: !2721, line: 442, column: 2)
!16421 = !DILocation(line: 444, column: 17, scope: !16419)
!16422 = !DILocation(line: 445, column: 51, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16419, file: !2721, line: 445, column: 7)
!16424 = !DILocation(line: 445, column: 7, scope: !16419)
!16425 = !DILocation(line: 0, scope: !16419)
!16426 = !DILocation(line: 451, column: 18, scope: !16419)
!16427 = !DILocation(line: 452, column: 3, scope: !16419)
!16428 = !DILocalVariable(name: "key", arg: 2, scope: !16429, file: !638, line: 190, type: !16394)
!16429 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !16430, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16432)
!16430 = !DISubroutineType(types: !16431)
!16431 = !{null, !16405, !16394}
!16432 = !{!16433, !16428}
!16433 = !DILocalVariable(name: "l", arg: 1, scope: !16429, file: !638, line: 189, type: !16405)
!16434 = !DILocation(line: 0, scope: !16429, inlinedAt: !16435)
!16435 = distinct !DILocation(line: 442, column: 2, scope: !16420)
!16436 = !DILocalVariable(name: "key", arg: 1, scope: !16437, file: !6905, line: 84, type: !32)
!16437 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16438)
!16438 = !{!16436}
!16439 = !DILocation(line: 0, scope: !16437, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !16435)
!16441 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !16440)
!16442 = !{i64 2324724}
!16443 = !DILocation(line: 454, column: 1, scope: !16386)
!16444 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !16235, file: !16235, line: 389, type: !9618, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16445)
!16445 = !{!16446}
!16446 = !DILocalVariable(name: "t", arg: 1, scope: !16444, file: !16235, line: 389, type: !208)
!16447 = !DILocation(line: 0, scope: !16444)
!16448 = !DILocalVariable(name: "t", arg: 1, scope: !16449, file: !16235, line: 102, type: !1813)
!16449 = distinct !DISubprogram(name: "z_tmcvt", scope: !16235, file: !16235, line: 102, type: !16243, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16450)
!16450 = !{!16448, !16451, !16452, !16453, !16454, !16455, !16456, !16457, !16458, !16459, !16460}
!16451 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16449, file: !16235, line: 102, type: !208)
!16452 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16449, file: !16235, line: 103, type: !208)
!16453 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16449, file: !16235, line: 103, type: !153)
!16454 = !DILocalVariable(name: "result32", arg: 5, scope: !16449, file: !16235, line: 104, type: !153)
!16455 = !DILocalVariable(name: "round_up", arg: 6, scope: !16449, file: !16235, line: 104, type: !153)
!16456 = !DILocalVariable(name: "round_off", arg: 7, scope: !16449, file: !16235, line: 105, type: !153)
!16457 = !DILocalVariable(name: "mul_ratio", scope: !16449, file: !16235, line: 107, type: !153)
!16458 = !DILocalVariable(name: "div_ratio", scope: !16449, file: !16235, line: 109, type: !153)
!16459 = !DILocalVariable(name: "off", scope: !16449, file: !16235, line: 116, type: !1813)
!16460 = !DILocalVariable(name: "rdivisor", scope: !16461, file: !16235, line: 119, type: !208)
!16461 = distinct !DILexicalBlock(scope: !16462, file: !16235, line: 118, column: 18)
!16462 = distinct !DILexicalBlock(scope: !16449, file: !16235, line: 118, column: 6)
!16463 = !DILocation(line: 0, scope: !16449, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 392, column: 9, scope: !16444)
!16465 = !DILocation(line: 143, column: 25, scope: !16466, inlinedAt: !16464)
!16466 = distinct !DILexicalBlock(scope: !16467, file: !16235, line: 142, column: 17)
!16467 = distinct !DILexicalBlock(scope: !16468, file: !16235, line: 142, column: 7)
!16468 = distinct !DILexicalBlock(scope: !16469, file: !16235, line: 141, column: 24)
!16469 = distinct !DILexicalBlock(scope: !16470, file: !16235, line: 141, column: 13)
!16470 = distinct !DILexicalBlock(scope: !16449, file: !16235, line: 134, column: 6)
!16471 = !DILocation(line: 392, column: 2, scope: !16444)
!16472 = distinct !DISubprogram(name: "z_time_slice", scope: !2721, file: !2721, line: 502, type: !10254, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16473)
!16473 = !{!16474, !16475}
!16474 = !DILocalVariable(name: "ticks", arg: 1, scope: !16472, file: !2721, line: 502, type: !125)
!16475 = !DILocalVariable(name: "key", scope: !16472, file: !2721, line: 511, type: !16394)
!16476 = !DILocation(line: 0, scope: !16472)
!16477 = !DILocation(line: 0, scope: !16402, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 511, column: 25, scope: !16472)
!16479 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16478)
!16481 = !DILocation(line: 0, scope: !16411, inlinedAt: !16480)
!16482 = !DILocation(line: 514, column: 6, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16472, file: !2721, line: 514, column: 6)
!16484 = !DILocation(line: 514, column: 25, scope: !16483)
!16485 = !DILocation(line: 514, column: 22, scope: !16483)
!16486 = !DILocation(line: 514, column: 6, scope: !16472)
!16487 = !DILocation(line: 515, column: 3, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16483, file: !2721, line: 514, column: 35)
!16489 = !DILocation(line: 0, scope: !16429, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 516, column: 3, scope: !16488)
!16491 = !DILocation(line: 0, scope: !16437, inlinedAt: !16492)
!16492 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !16490)
!16493 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !16492)
!16494 = !DILocation(line: 517, column: 3, scope: !16488)
!16495 = !DILocation(line: 519, column: 18, scope: !16472)
!16496 = !DILocation(line: 522, column: 6, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16472, file: !2721, line: 522, column: 6)
!16498 = !DILocation(line: 522, column: 27, scope: !16497)
!16499 = !DILocation(line: 522, column: 30, scope: !16497)
!16500 = !DILocation(line: 522, column: 6, scope: !16472)
!16501 = !DILocation(line: 523, column: 30, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16503, file: !2721, line: 523, column: 7)
!16503 = distinct !DILexicalBlock(scope: !16497, file: !2721, line: 522, column: 51)
!16504 = !DILocation(line: 523, column: 13, scope: !16502)
!16505 = !DILocation(line: 523, column: 7, scope: !16503)
!16506 = !DILocation(line: 530, column: 10, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16502, file: !2721, line: 523, column: 43)
!16508 = !DILocation(line: 531, column: 3, scope: !16507)
!16509 = !DILocation(line: 532, column: 30, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16502, file: !2721, line: 531, column: 10)
!16511 = !DILocation(line: 535, column: 29, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16497, file: !2721, line: 534, column: 9)
!16513 = !DILocation(line: 0, scope: !16429, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 537, column: 2, scope: !16472)
!16515 = !DILocation(line: 0, scope: !16437, inlinedAt: !16516)
!16516 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !16514)
!16517 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !16516)
!16518 = !DILocation(line: 538, column: 1, scope: !16472)
!16519 = distinct !DISubprogram(name: "sliceable", scope: !2721, file: !2721, line: 468, type: !16520, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16522)
!16520 = !DISubroutineType(types: !16521)
!16521 = !{!153, !2616}
!16522 = !{!16523, !16524}
!16523 = !DILocalVariable(name: "thread", arg: 1, scope: !16519, file: !2721, line: 468, type: !2616)
!16524 = !DILocalVariable(name: "ret", scope: !16519, file: !2721, line: 470, type: !153)
!16525 = !DILocation(line: 0, scope: !16519)
!16526 = !DILocation(line: 470, column: 13, scope: !16519)
!16527 = !DILocation(line: 471, column: 3, scope: !16519)
!16528 = !DILocation(line: 471, column: 7, scope: !16519)
!16529 = !DILocation(line: 472, column: 3, scope: !16519)
!16530 = !DILocation(line: 472, column: 37, scope: !16519)
!16531 = !DILocation(line: 472, column: 24, scope: !16519)
!16532 = !DILocation(line: 472, column: 43, scope: !16519)
!16533 = !DILocation(line: 472, column: 7, scope: !16519)
!16534 = !DILocation(line: 473, column: 3, scope: !16519)
!16535 = !DILocation(line: 473, column: 7, scope: !16519)
!16536 = !DILocation(line: 473, column: 6, scope: !16519)
!16537 = !DILocation(line: 479, column: 2, scope: !16519)
!16538 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2721, file: !2721, line: 482, type: !16539, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16541)
!16539 = !DISubroutineType(types: !16540)
!16540 = !{!16394, !16394}
!16541 = !{!16542, !16543}
!16542 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16538, file: !2721, line: 482, type: !16394)
!16543 = !DILocalVariable(name: "curr", scope: !16538, file: !2721, line: 484, type: !2616)
!16544 = !DILocation(line: 0, scope: !16538)
!16545 = !DILocation(line: 484, column: 26, scope: !16538)
!16546 = !DILocation(line: 493, column: 7, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16538, file: !2721, line: 493, column: 6)
!16548 = !DILocation(line: 493, column: 6, scope: !16538)
!16549 = !DILocation(line: 494, column: 3, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16547, file: !2721, line: 493, column: 49)
!16551 = !DILocation(line: 495, column: 2, scope: !16550)
!16552 = !DILocation(line: 496, column: 2, scope: !16538)
!16553 = !DILocation(line: 499, column: 1, scope: !16538)
!16554 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15674, file: !15674, line: 106, type: !16520, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16555)
!16555 = !{!16556, !16557}
!16556 = !DILocalVariable(name: "thread", arg: 1, scope: !16554, file: !15674, line: 106, type: !2616)
!16557 = !DILocalVariable(name: "state", scope: !16554, file: !15674, line: 108, type: !150)
!16558 = !DILocation(line: 0, scope: !16554)
!16559 = !DILocation(line: 108, column: 31, scope: !16554)
!16560 = !DILocation(line: 110, column: 16, scope: !16554)
!16561 = !DILocation(line: 111, column: 41, scope: !16554)
!16562 = !DILocation(line: 110, column: 2, scope: !16554)
!16563 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2721, file: !2721, line: 393, type: !16360, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16564)
!16564 = !{!16565}
!16565 = !DILocalVariable(name: "thread", arg: 1, scope: !16563, file: !2721, line: 393, type: !2616)
!16566 = !DILocation(line: 0, scope: !16563)
!16567 = !DILocation(line: 395, column: 6, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16563, file: !2721, line: 395, column: 6)
!16569 = !DILocation(line: 395, column: 6, scope: !16563)
!16570 = !DILocalVariable(name: "thread", arg: 1, scope: !16571, file: !2721, line: 264, type: !2616)
!16571 = distinct !DISubprogram(name: "dequeue_thread", scope: !2721, file: !2721, line: 264, type: !16360, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16572)
!16572 = !{!16570}
!16573 = !DILocation(line: 0, scope: !16571, inlinedAt: !16574)
!16574 = distinct !DILocation(line: 396, column: 3, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16568, file: !2721, line: 395, column: 34)
!16576 = !DILocation(line: 266, column: 15, scope: !16571, inlinedAt: !16574)
!16577 = !DILocation(line: 266, column: 28, scope: !16571, inlinedAt: !16574)
!16578 = !DILocalVariable(name: "thread", arg: 1, scope: !16579, file: !2721, line: 232, type: !2616)
!16579 = distinct !DISubprogram(name: "runq_remove", scope: !2721, file: !2721, line: 232, type: !16360, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16580)
!16580 = !{!16578}
!16581 = !DILocation(line: 0, scope: !16579, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 268, column: 3, scope: !16583, inlinedAt: !16574)
!16583 = distinct !DILexicalBlock(scope: !16584, file: !2721, line: 267, column: 35)
!16584 = distinct !DILexicalBlock(scope: !16571, file: !2721, line: 267, column: 6)
!16585 = !DILocation(line: 234, column: 2, scope: !16579, inlinedAt: !16582)
!16586 = !DILocation(line: 397, column: 2, scope: !16575)
!16587 = !DILocalVariable(name: "thread", arg: 1, scope: !16588, file: !2721, line: 250, type: !2616)
!16588 = distinct !DISubprogram(name: "queue_thread", scope: !2721, file: !2721, line: 250, type: !16360, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16589)
!16589 = !{!16587}
!16590 = !DILocation(line: 0, scope: !16588, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 398, column: 2, scope: !16563)
!16592 = !DILocation(line: 252, column: 15, scope: !16588, inlinedAt: !16591)
!16593 = !DILocation(line: 252, column: 28, scope: !16588, inlinedAt: !16591)
!16594 = !DILocalVariable(name: "thread", arg: 1, scope: !16595, file: !2721, line: 227, type: !2616)
!16595 = distinct !DISubprogram(name: "runq_add", scope: !2721, file: !2721, line: 227, type: !16360, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16596)
!16596 = !{!16594}
!16597 = !DILocation(line: 0, scope: !16595, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 254, column: 3, scope: !16599, inlinedAt: !16591)
!16599 = distinct !DILexicalBlock(scope: !16600, file: !2721, line: 253, column: 35)
!16600 = distinct !DILexicalBlock(scope: !16588, file: !2721, line: 253, column: 6)
!16601 = !DILocalVariable(name: "pq", arg: 1, scope: !16602, file: !2721, line: 181, type: !16605)
!16602 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2721, file: !2721, line: 181, type: !16603, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16606)
!16603 = !DISubroutineType(types: !16604)
!16604 = !{null, !16605, !2616}
!16605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!16606 = !{!16601, !16607, !16608}
!16607 = !DILocalVariable(name: "thread", arg: 2, scope: !16602, file: !2721, line: 182, type: !2616)
!16608 = !DILocalVariable(name: "t", scope: !16602, file: !2721, line: 184, type: !2616)
!16609 = !DILocation(line: 0, scope: !16602, inlinedAt: !16610)
!16610 = distinct !DILocation(line: 229, column: 2, scope: !16595, inlinedAt: !16598)
!16611 = !DILocation(line: 188, column: 2, scope: !16612, inlinedAt: !16610)
!16612 = distinct !DILexicalBlock(scope: !16602, file: !2721, line: 188, column: 2)
!16613 = !DILocation(line: 188, column: 2, scope: !16614, inlinedAt: !16610)
!16614 = distinct !DILexicalBlock(scope: !16612, file: !2721, line: 188, column: 2)
!16615 = !DILocation(line: 0, scope: !16612, inlinedAt: !16610)
!16616 = !DILocation(line: 189, column: 7, scope: !16617, inlinedAt: !16610)
!16617 = distinct !DILexicalBlock(scope: !16618, file: !2721, line: 189, column: 7)
!16618 = distinct !DILexicalBlock(scope: !16614, file: !2721, line: 188, column: 56)
!16619 = !DILocation(line: 189, column: 35, scope: !16617, inlinedAt: !16610)
!16620 = !DILocation(line: 189, column: 7, scope: !16618, inlinedAt: !16610)
!16621 = !DILocation(line: 191, column: 21, scope: !16622, inlinedAt: !16610)
!16622 = distinct !DILexicalBlock(scope: !16617, file: !2721, line: 189, column: 40)
!16623 = !DILocation(line: 190, column: 4, scope: !16622, inlinedAt: !16610)
!16624 = !DILocation(line: 192, column: 4, scope: !16622, inlinedAt: !16610)
!16625 = distinct !{!16625, !16611, !16626}
!16626 = !DILocation(line: 194, column: 2, scope: !16612, inlinedAt: !16610)
!16627 = !DILocation(line: 196, column: 37, scope: !16602, inlinedAt: !16610)
!16628 = !DILocation(line: 196, column: 2, scope: !16602, inlinedAt: !16610)
!16629 = !DILocation(line: 197, column: 1, scope: !16602, inlinedAt: !16610)
!16630 = !DILocation(line: 399, column: 25, scope: !16563)
!16631 = !DILocation(line: 399, column: 22, scope: !16563)
!16632 = !DILocation(line: 399, column: 2, scope: !16563)
!16633 = !DILocation(line: 400, column: 1, scope: !16563)
!16634 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15674, file: !15674, line: 136, type: !16520, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16635)
!16635 = !{!16636}
!16636 = !DILocalVariable(name: "thread", arg: 1, scope: !16634, file: !15674, line: 136, type: !2616)
!16637 = !DILocation(line: 0, scope: !16634)
!16638 = !DILocation(line: 138, column: 9, scope: !16634)
!16639 = !DILocation(line: 138, column: 2, scope: !16634)
!16640 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2721, file: !2721, line: 1137, type: !16603, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16641)
!16641 = !{!16642, !16643}
!16642 = !DILocalVariable(name: "pq", arg: 1, scope: !16640, file: !2721, line: 1137, type: !16605)
!16643 = !DILocalVariable(name: "thread", arg: 2, scope: !16640, file: !2721, line: 1137, type: !2616)
!16644 = !DILocation(line: 0, scope: !16640)
!16645 = !DILocation(line: 1141, column: 33, scope: !16640)
!16646 = !DILocation(line: 1141, column: 2, scope: !16640)
!16647 = !DILocation(line: 1142, column: 1, scope: !16640)
!16648 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !16649, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16651)
!16649 = !DISubroutineType(types: !16650)
!16650 = !{!2717, !16605}
!16651 = !{!16652}
!16652 = !DILocalVariable(name: "list", arg: 1, scope: !16648, file: !541, line: 294, type: !16605)
!16653 = !DILocation(line: 0, scope: !16648)
!16654 = !DILocation(line: 296, column: 9, scope: !16648)
!16655 = !DILocation(line: 296, column: 49, scope: !16648)
!16656 = !DILocation(line: 296, column: 2, scope: !16648)
!16657 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !16658, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16660)
!16658 = !DISubroutineType(types: !16659)
!16659 = !{null, !2717, !2717}
!16660 = !{!16661, !16662, !16663}
!16661 = !DILocalVariable(name: "successor", arg: 1, scope: !16657, file: !541, line: 443, type: !2717)
!16662 = !DILocalVariable(name: "node", arg: 2, scope: !16657, file: !541, line: 443, type: !2717)
!16663 = !DILocalVariable(name: "prev", scope: !16657, file: !541, line: 445, type: !16664)
!16664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2717)
!16665 = !DILocation(line: 0, scope: !16657)
!16666 = !DILocation(line: 445, column: 39, scope: !16657)
!16667 = !DILocation(line: 447, column: 8, scope: !16657)
!16668 = !DILocation(line: 447, column: 13, scope: !16657)
!16669 = !DILocation(line: 448, column: 8, scope: !16657)
!16670 = !DILocation(line: 448, column: 13, scope: !16657)
!16671 = !DILocation(line: 449, column: 8, scope: !16657)
!16672 = !DILocation(line: 449, column: 13, scope: !16657)
!16673 = !DILocation(line: 450, column: 18, scope: !16657)
!16674 = !DILocation(line: 451, column: 1, scope: !16657)
!16675 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !16676, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16678)
!16676 = !DISubroutineType(types: !16677)
!16677 = !{!2717, !16605, !2717}
!16678 = !{!16679, !16680}
!16679 = !DILocalVariable(name: "list", arg: 1, scope: !16675, file: !541, line: 341, type: !16605)
!16680 = !DILocalVariable(name: "node", arg: 2, scope: !16675, file: !541, line: 342, type: !2717)
!16681 = !DILocation(line: 0, scope: !16675)
!16682 = !DILocation(line: 344, column: 15, scope: !16675)
!16683 = !DILocation(line: 344, column: 9, scope: !16675)
!16684 = !DILocation(line: 344, column: 26, scope: !16675)
!16685 = !DILocation(line: 344, column: 2, scope: !16675)
!16686 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !16687, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16689)
!16687 = !DISubroutineType(types: !16688)
!16688 = !{null, !16605, !2717}
!16689 = !{!16690, !16691, !16692}
!16690 = !DILocalVariable(name: "list", arg: 1, scope: !16686, file: !541, line: 404, type: !16605)
!16691 = !DILocalVariable(name: "node", arg: 2, scope: !16686, file: !541, line: 404, type: !2717)
!16692 = !DILocalVariable(name: "tail", scope: !16686, file: !541, line: 406, type: !16664)
!16693 = !DILocation(line: 0, scope: !16686)
!16694 = !DILocation(line: 406, column: 34, scope: !16686)
!16695 = !DILocation(line: 408, column: 8, scope: !16686)
!16696 = !DILocation(line: 408, column: 13, scope: !16686)
!16697 = !DILocation(line: 409, column: 8, scope: !16686)
!16698 = !DILocation(line: 409, column: 13, scope: !16686)
!16699 = !DILocation(line: 411, column: 8, scope: !16686)
!16700 = !DILocation(line: 411, column: 13, scope: !16686)
!16701 = !DILocation(line: 412, column: 13, scope: !16686)
!16702 = !DILocation(line: 413, column: 1, scope: !16686)
!16703 = distinct !DISubprogram(name: "update_cache", scope: !2721, file: !2721, line: 559, type: !10254, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16704)
!16704 = !{!16705, !16706}
!16705 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16703, file: !2721, line: 559, type: !125)
!16706 = !DILocalVariable(name: "thread", scope: !16703, file: !2721, line: 562, type: !2616)
!16707 = !DILocation(line: 0, scope: !16703)
!16708 = !DILocation(line: 239, column: 9, scope: !16709, inlinedAt: !16712)
!16709 = distinct !DISubprogram(name: "runq_best", scope: !2721, file: !2721, line: 237, type: !16710, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!16710 = !DISubroutineType(types: !16711)
!16711 = !{!2616}
!16712 = distinct !DILocation(line: 314, column: 28, scope: !16713, inlinedAt: !16716)
!16713 = distinct !DISubprogram(name: "next_up", scope: !2721, file: !2721, line: 312, type: !16710, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16714)
!16714 = !{!16715}
!16715 = !DILocalVariable(name: "thread", scope: !16713, file: !2721, line: 314, type: !2616)
!16716 = distinct !DILocation(line: 562, column: 28, scope: !16703)
!16717 = !DILocation(line: 0, scope: !16713, inlinedAt: !16716)
!16718 = !DILocation(line: 340, column: 17, scope: !16713, inlinedAt: !16716)
!16719 = !DILocation(line: 340, column: 9, scope: !16713, inlinedAt: !16716)
!16720 = !DILocalVariable(name: "thread", arg: 1, scope: !16721, file: !2721, line: 127, type: !2616)
!16721 = distinct !DISubprogram(name: "should_preempt", scope: !2721, file: !2721, line: 127, type: !16722, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16724)
!16722 = !DISubroutineType(types: !16723)
!16723 = !{!153, !2616, !125}
!16724 = !{!16720, !16725}
!16725 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16721, file: !2721, line: 128, type: !125)
!16726 = !DILocation(line: 0, scope: !16721, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 564, column: 6, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16703, file: !2721, line: 564, column: 6)
!16729 = !DILocation(line: 133, column: 17, scope: !16730, inlinedAt: !16727)
!16730 = distinct !DILexicalBlock(scope: !16721, file: !2721, line: 133, column: 6)
!16731 = !DILocation(line: 0, scope: !16728)
!16732 = !DILocation(line: 133, column: 6, scope: !16721, inlinedAt: !16727)
!16733 = !DILocation(line: 140, column: 6, scope: !16734, inlinedAt: !16727)
!16734 = distinct !DILexicalBlock(scope: !16721, file: !2721, line: 140, column: 6)
!16735 = !DILocation(line: 140, column: 6, scope: !16721, inlinedAt: !16727)
!16736 = !DILocation(line: 150, column: 9, scope: !16737, inlinedAt: !16727)
!16737 = distinct !DILexicalBlock(scope: !16721, file: !2721, line: 149, column: 6)
!16738 = !DILocation(line: 149, column: 6, scope: !16721, inlinedAt: !16727)
!16739 = !DILocation(line: 157, column: 6, scope: !16740, inlinedAt: !16727)
!16740 = distinct !DILexicalBlock(scope: !16721, file: !2721, line: 157, column: 6)
!16741 = !DILocation(line: 564, column: 6, scope: !16703)
!16742 = !DILocation(line: 566, column: 14, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16744, file: !2721, line: 566, column: 7)
!16744 = distinct !DILexicalBlock(scope: !16728, file: !2721, line: 564, column: 42)
!16745 = !DILocation(line: 566, column: 7, scope: !16744)
!16746 = !DILocation(line: 567, column: 4, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16743, file: !2721, line: 566, column: 27)
!16748 = !DILocation(line: 568, column: 3, scope: !16747)
!16749 = !DILocation(line: 585, column: 1, scope: !16703)
!16750 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2721, file: !2721, line: 1144, type: !16751, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16753)
!16751 = !DISubroutineType(types: !16752)
!16752 = !{!2616, !16605}
!16753 = !{!16754, !16755, !16756}
!16754 = !DILocalVariable(name: "pq", arg: 1, scope: !16750, file: !2721, line: 1144, type: !16605)
!16755 = !DILocalVariable(name: "thread", scope: !16750, file: !2721, line: 1146, type: !2616)
!16756 = !DILocalVariable(name: "n", scope: !16750, file: !2721, line: 1147, type: !2717)
!16757 = !DILocation(line: 0, scope: !16750)
!16758 = !DILocation(line: 1147, column: 19, scope: !16750)
!16759 = !DILocation(line: 1152, column: 2, scope: !16750)
!16760 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15674, file: !15674, line: 115, type: !16520, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16761)
!16761 = !{!16762}
!16762 = !DILocalVariable(name: "thread", arg: 1, scope: !16760, file: !15674, line: 115, type: !2616)
!16763 = !DILocation(line: 0, scope: !16760)
!16764 = !DILocation(line: 117, column: 46, scope: !16760)
!16765 = !DILocation(line: 117, column: 10, scope: !16760)
!16766 = !DILocation(line: 117, column: 9, scope: !16760)
!16767 = !DILocation(line: 117, column: 2, scope: !16760)
!16768 = distinct !DISubprogram(name: "is_preempt", scope: !2721, file: !2721, line: 62, type: !16378, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16769)
!16769 = !{!16770}
!16770 = !DILocalVariable(name: "thread", arg: 1, scope: !16768, file: !2721, line: 62, type: !2616)
!16771 = !DILocation(line: 0, scope: !16768)
!16772 = !DILocation(line: 65, column: 22, scope: !16768)
!16773 = !DILocation(line: 65, column: 30, scope: !16768)
!16774 = !DILocation(line: 65, column: 2, scope: !16768)
!16775 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !16068, file: !16068, line: 35, type: !16776, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16780)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{!153, !16778}
!16778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16779, size: 32)
!16779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2667)
!16780 = !{!16781}
!16781 = !DILocalVariable(name: "to", arg: 1, scope: !16775, file: !16068, line: 35, type: !16778)
!16782 = !DILocation(line: 0, scope: !16775)
!16783 = !DILocation(line: 37, column: 35, scope: !16775)
!16784 = !DILocation(line: 37, column: 10, scope: !16775)
!16785 = !DILocation(line: 37, column: 9, scope: !16775)
!16786 = !DILocation(line: 37, column: 2, scope: !16775)
!16787 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !16788, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16792)
!16788 = !DISubroutineType(types: !16789)
!16789 = !{!153, !16790}
!16790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16791, size: 32)
!16791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2626)
!16792 = !{!16793}
!16793 = !DILocalVariable(name: "node", arg: 1, scope: !16787, file: !541, line: 225, type: !16790)
!16794 = !DILocation(line: 0, scope: !16787)
!16795 = !DILocation(line: 227, column: 15, scope: !16787)
!16796 = !DILocation(line: 227, column: 20, scope: !16787)
!16797 = !DILocation(line: 227, column: 2, scope: !16787)
!16798 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !16676, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16799)
!16799 = !{!16800, !16801}
!16800 = !DILocalVariable(name: "list", arg: 1, scope: !16798, file: !541, line: 325, type: !16605)
!16801 = !DILocalVariable(name: "node", arg: 2, scope: !16798, file: !541, line: 326, type: !2717)
!16802 = !DILocation(line: 0, scope: !16798)
!16803 = !DILocation(line: 328, column: 24, scope: !16798)
!16804 = !DILocation(line: 328, column: 15, scope: !16798)
!16805 = !DILocation(line: 328, column: 9, scope: !16798)
!16806 = !DILocation(line: 328, column: 45, scope: !16798)
!16807 = !DILocation(line: 328, column: 2, scope: !16798)
!16808 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !16809, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16811)
!16809 = !DISubroutineType(types: !16810)
!16810 = !{!153, !16605}
!16811 = !{!16812}
!16812 = !DILocalVariable(name: "list", arg: 1, scope: !16808, file: !541, line: 266, type: !16605)
!16813 = !DILocation(line: 0, scope: !16808)
!16814 = !DILocation(line: 268, column: 15, scope: !16808)
!16815 = !DILocation(line: 268, column: 20, scope: !16808)
!16816 = !DILocation(line: 268, column: 2, scope: !16808)
!16817 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !16818, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16820)
!16818 = !DISubroutineType(types: !16819)
!16819 = !{null, !2717}
!16820 = !{!16821, !16822, !16823}
!16821 = !DILocalVariable(name: "node", arg: 1, scope: !16817, file: !541, line: 496, type: !2717)
!16822 = !DILocalVariable(name: "prev", scope: !16817, file: !541, line: 498, type: !16664)
!16823 = !DILocalVariable(name: "next", scope: !16817, file: !541, line: 499, type: !16664)
!16824 = !DILocation(line: 0, scope: !16817)
!16825 = !DILocation(line: 498, column: 34, scope: !16817)
!16826 = !DILocation(line: 499, column: 34, scope: !16817)
!16827 = !DILocation(line: 501, column: 8, scope: !16817)
!16828 = !DILocation(line: 501, column: 13, scope: !16817)
!16829 = !DILocation(line: 502, column: 8, scope: !16817)
!16830 = !DILocation(line: 502, column: 13, scope: !16817)
!16831 = !DILocation(line: 503, column: 2, scope: !16817)
!16832 = !DILocation(line: 504, column: 1, scope: !16817)
!16833 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16818, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16834)
!16834 = !{!16835}
!16835 = !DILocalVariable(name: "node", arg: 1, scope: !16833, file: !541, line: 211, type: !2717)
!16836 = !DILocation(line: 0, scope: !16833)
!16837 = !DILocation(line: 213, column: 8, scope: !16833)
!16838 = !DILocation(line: 213, column: 13, scope: !16833)
!16839 = !DILocation(line: 214, column: 8, scope: !16833)
!16840 = !DILocation(line: 214, column: 13, scope: !16833)
!16841 = !DILocation(line: 215, column: 1, scope: !16833)
!16842 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15674, file: !15674, line: 131, type: !16843, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16845)
!16843 = !DISubroutineType(types: !16844)
!16844 = !{!153, !2616, !208}
!16845 = !{!16846, !16847}
!16846 = !DILocalVariable(name: "thread", arg: 1, scope: !16842, file: !15674, line: 131, type: !2616)
!16847 = !DILocalVariable(name: "state", arg: 2, scope: !16842, file: !15674, line: 131, type: !208)
!16848 = !DILocation(line: 0, scope: !16842)
!16849 = !DILocation(line: 133, column: 23, scope: !16842)
!16850 = !DILocation(line: 133, column: 45, scope: !16842)
!16851 = !DILocation(line: 133, column: 2, scope: !16842)
!16852 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15674, file: !15674, line: 211, type: !16853, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16855)
!16853 = !DISubroutineType(types: !16854)
!16854 = !{!153, !125, !125}
!16855 = !{!16856, !16857}
!16856 = !DILocalVariable(name: "prio", arg: 1, scope: !16852, file: !15674, line: 211, type: !125)
!16857 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16852, file: !15674, line: 211, type: !125)
!16858 = !DILocation(line: 0, scope: !16852)
!16859 = !DILocation(line: 213, column: 9, scope: !16852)
!16860 = !DILocation(line: 213, column: 2, scope: !16852)
!16861 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15674, file: !15674, line: 83, type: !16520, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16862)
!16862 = !{!16863}
!16863 = !DILocalVariable(name: "thread", arg: 1, scope: !16861, file: !15674, line: 83, type: !2616)
!16864 = !DILocation(line: 0, scope: !16861)
!16865 = !DILocation(line: 89, column: 16, scope: !16861)
!16866 = !DILocation(line: 89, column: 2, scope: !16861)
!16867 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15674, file: !15674, line: 206, type: !16853, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16868)
!16868 = !{!16869, !16870}
!16869 = !DILocalVariable(name: "prio1", arg: 1, scope: !16867, file: !15674, line: 206, type: !125)
!16870 = !DILocalVariable(name: "prio2", arg: 2, scope: !16867, file: !15674, line: 206, type: !125)
!16871 = !DILocation(line: 0, scope: !16867)
!16872 = !DILocation(line: 208, column: 15, scope: !16867)
!16873 = !DILocation(line: 208, column: 2, scope: !16867)
!16874 = distinct !DISubprogram(name: "z_ready_thread", scope: !2721, file: !2721, line: 635, type: !16360, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16875)
!16875 = !{!16876, !16877, !16879}
!16876 = !DILocalVariable(name: "thread", arg: 1, scope: !16874, file: !2721, line: 635, type: !2616)
!16877 = !DILocalVariable(name: "__i", scope: !16878, file: !2721, line: 637, type: !16394)
!16878 = distinct !DILexicalBlock(scope: !16874, file: !2721, line: 637, column: 2)
!16879 = !DILocalVariable(name: "__key", scope: !16878, file: !2721, line: 637, type: !16394)
!16880 = !DILocation(line: 0, scope: !16874)
!16881 = !DILocation(line: 0, scope: !16878)
!16882 = !DILocation(line: 0, scope: !16402, inlinedAt: !16883)
!16883 = distinct !DILocation(line: 637, column: 2, scope: !16878)
!16884 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16885)
!16885 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16883)
!16886 = !DILocation(line: 0, scope: !16411, inlinedAt: !16885)
!16887 = !DILocation(line: 639, column: 4, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16889, file: !2721, line: 638, column: 41)
!16889 = distinct !DILexicalBlock(scope: !16890, file: !2721, line: 638, column: 7)
!16890 = distinct !DILexicalBlock(scope: !16891, file: !2721, line: 637, column: 26)
!16891 = distinct !DILexicalBlock(scope: !16878, file: !2721, line: 637, column: 2)
!16892 = !DILocation(line: 0, scope: !16429, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 637, column: 2, scope: !16891)
!16894 = !DILocation(line: 0, scope: !16437, inlinedAt: !16895)
!16895 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !16893)
!16896 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !16895)
!16897 = !DILocation(line: 642, column: 1, scope: !16874)
!16898 = distinct !DISubprogram(name: "ready_thread", scope: !2721, file: !2721, line: 617, type: !16360, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16899)
!16899 = !{!16900}
!16900 = !DILocalVariable(name: "thread", arg: 1, scope: !16898, file: !2721, line: 617, type: !2616)
!16901 = !DILocation(line: 0, scope: !16898)
!16902 = !DILocation(line: 626, column: 7, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16898, file: !2721, line: 626, column: 6)
!16904 = !DILocation(line: 626, column: 34, scope: !16903)
!16905 = !DILocation(line: 626, column: 37, scope: !16903)
!16906 = !DILocation(line: 626, column: 6, scope: !16898)
!16907 = !DILocation(line: 0, scope: !16588, inlinedAt: !16908)
!16908 = distinct !DILocation(line: 629, column: 3, scope: !16909)
!16909 = distinct !DILexicalBlock(scope: !16903, file: !2721, line: 626, column: 64)
!16910 = !DILocation(line: 252, column: 15, scope: !16588, inlinedAt: !16908)
!16911 = !DILocation(line: 252, column: 28, scope: !16588, inlinedAt: !16908)
!16912 = !DILocation(line: 0, scope: !16595, inlinedAt: !16913)
!16913 = distinct !DILocation(line: 254, column: 3, scope: !16599, inlinedAt: !16908)
!16914 = !DILocation(line: 0, scope: !16602, inlinedAt: !16915)
!16915 = distinct !DILocation(line: 229, column: 2, scope: !16595, inlinedAt: !16913)
!16916 = !DILocation(line: 188, column: 2, scope: !16612, inlinedAt: !16915)
!16917 = !DILocation(line: 188, column: 2, scope: !16614, inlinedAt: !16915)
!16918 = !DILocation(line: 0, scope: !16612, inlinedAt: !16915)
!16919 = !DILocation(line: 189, column: 7, scope: !16617, inlinedAt: !16915)
!16920 = !DILocation(line: 189, column: 35, scope: !16617, inlinedAt: !16915)
!16921 = !DILocation(line: 189, column: 7, scope: !16618, inlinedAt: !16915)
!16922 = !DILocation(line: 191, column: 21, scope: !16622, inlinedAt: !16915)
!16923 = !DILocation(line: 190, column: 4, scope: !16622, inlinedAt: !16915)
!16924 = !DILocation(line: 192, column: 4, scope: !16622, inlinedAt: !16915)
!16925 = distinct !{!16925, !16916, !16926}
!16926 = !DILocation(line: 194, column: 2, scope: !16612, inlinedAt: !16915)
!16927 = !DILocation(line: 196, column: 37, scope: !16602, inlinedAt: !16915)
!16928 = !DILocation(line: 196, column: 2, scope: !16602, inlinedAt: !16915)
!16929 = !DILocation(line: 197, column: 1, scope: !16602, inlinedAt: !16915)
!16930 = !DILocation(line: 630, column: 3, scope: !16909)
!16931 = !DILocation(line: 632, column: 2, scope: !16909)
!16932 = !DILocation(line: 633, column: 1, scope: !16898)
!16933 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15674, file: !15674, line: 120, type: !16520, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16934)
!16934 = !{!16935}
!16935 = !DILocalVariable(name: "thread", arg: 1, scope: !16933, file: !15674, line: 120, type: !2616)
!16936 = !DILocation(line: 0, scope: !16933)
!16937 = !DILocation(line: 122, column: 12, scope: !16933)
!16938 = !DILocation(line: 122, column: 62, scope: !16933)
!16939 = !DILocation(line: 123, column: 4, scope: !16933)
!16940 = !DILocation(line: 122, column: 2, scope: !16933)
!16941 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2721, file: !2721, line: 644, type: !16360, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16942)
!16942 = !{!16943, !16944, !16946}
!16943 = !DILocalVariable(name: "thread", arg: 1, scope: !16941, file: !2721, line: 644, type: !2616)
!16944 = !DILocalVariable(name: "__i", scope: !16945, file: !2721, line: 646, type: !16394)
!16945 = distinct !DILexicalBlock(scope: !16941, file: !2721, line: 646, column: 2)
!16946 = !DILocalVariable(name: "__key", scope: !16945, file: !2721, line: 646, type: !16394)
!16947 = !DILocation(line: 0, scope: !16941)
!16948 = !DILocation(line: 0, scope: !16945)
!16949 = !DILocation(line: 0, scope: !16402, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 646, column: 2, scope: !16945)
!16951 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16950)
!16953 = !DILocation(line: 0, scope: !16411, inlinedAt: !16952)
!16954 = !DILocation(line: 647, column: 3, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2721, line: 646, column: 26)
!16956 = distinct !DILexicalBlock(scope: !16945, file: !2721, line: 646, column: 2)
!16957 = !DILocation(line: 0, scope: !16429, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 646, column: 2, scope: !16956)
!16959 = !DILocation(line: 0, scope: !16437, inlinedAt: !16960)
!16960 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !16958)
!16961 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !16960)
!16962 = !DILocation(line: 649, column: 1, scope: !16941)
!16963 = distinct !DISubprogram(name: "z_sched_start", scope: !2721, file: !2721, line: 651, type: !16360, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16964)
!16964 = !{!16965, !16966}
!16965 = !DILocalVariable(name: "thread", arg: 1, scope: !16963, file: !2721, line: 651, type: !2616)
!16966 = !DILocalVariable(name: "key", scope: !16963, file: !2721, line: 653, type: !16394)
!16967 = !DILocation(line: 0, scope: !16963)
!16968 = !DILocation(line: 0, scope: !16402, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 653, column: 25, scope: !16963)
!16970 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !16971)
!16971 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !16969)
!16972 = !DILocation(line: 0, scope: !16411, inlinedAt: !16971)
!16973 = !DILocation(line: 655, column: 6, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16963, file: !2721, line: 655, column: 6)
!16975 = !DILocation(line: 655, column: 6, scope: !16963)
!16976 = !DILocation(line: 0, scope: !16429, inlinedAt: !16977)
!16977 = distinct !DILocation(line: 656, column: 3, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16974, file: !2721, line: 655, column: 36)
!16979 = !DILocation(line: 0, scope: !16437, inlinedAt: !16980)
!16980 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !16977)
!16981 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !16980)
!16982 = !DILocation(line: 657, column: 3, scope: !16978)
!16983 = !DILocation(line: 660, column: 2, scope: !16963)
!16984 = !DILocation(line: 661, column: 2, scope: !16963)
!16985 = !DILocation(line: 662, column: 2, scope: !16963)
!16986 = !DILocation(line: 663, column: 1, scope: !16963)
!16987 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15674, file: !15674, line: 126, type: !16520, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16988)
!16988 = !{!16989}
!16989 = !DILocalVariable(name: "thread", arg: 1, scope: !16987, file: !15674, line: 126, type: !2616)
!16990 = !DILocation(line: 0, scope: !16987)
!16991 = !DILocation(line: 128, column: 23, scope: !16987)
!16992 = !DILocation(line: 128, column: 36, scope: !16987)
!16993 = !DILocation(line: 128, column: 56, scope: !16987)
!16994 = !DILocation(line: 128, column: 2, scope: !16987)
!16995 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15674, file: !15674, line: 155, type: !16360, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !16996)
!16996 = !{!16997}
!16997 = !DILocalVariable(name: "thread", arg: 1, scope: !16995, file: !15674, line: 155, type: !2616)
!16998 = !DILocation(line: 0, scope: !16995)
!16999 = !DILocation(line: 157, column: 15, scope: !16995)
!17000 = !DILocation(line: 157, column: 28, scope: !16995)
!17001 = !DILocation(line: 158, column: 1, scope: !16995)
!17002 = distinct !DISubprogram(name: "z_reschedule", scope: !2721, file: !2721, line: 967, type: !16430, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17003)
!17003 = !{!17004, !17005}
!17004 = !DILocalVariable(name: "lock", arg: 1, scope: !17002, file: !2721, line: 967, type: !16405)
!17005 = !DILocalVariable(name: "key", arg: 2, scope: !17002, file: !2721, line: 967, type: !16394)
!17006 = !DILocation(line: 0, scope: !17002)
!17007 = !DILocation(line: 969, column: 6, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !17002, file: !2721, line: 969, column: 6)
!17009 = !DILocation(line: 969, column: 23, scope: !17008)
!17010 = !DILocation(line: 969, column: 26, scope: !17008)
!17011 = !DILocation(line: 969, column: 6, scope: !17002)
!17012 = !DILocalVariable(name: "key", arg: 2, scope: !17013, file: !15778, line: 193, type: !16394)
!17013 = distinct !DISubprogram(name: "z_swap", scope: !15778, file: !15778, line: 193, type: !17014, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17016)
!17014 = !DISubroutineType(types: !17015)
!17015 = !{!125, !16405, !16394}
!17016 = !{!17017, !17012}
!17017 = !DILocalVariable(name: "lock", arg: 1, scope: !17013, file: !15778, line: 193, type: !16405)
!17018 = !DILocation(line: 0, scope: !17013, inlinedAt: !17019)
!17019 = distinct !DILocation(line: 970, column: 3, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17008, file: !2721, line: 969, column: 39)
!17021 = !DILocation(line: 196, column: 9, scope: !17013, inlinedAt: !17019)
!17022 = !DILocation(line: 971, column: 2, scope: !17020)
!17023 = !DILocation(line: 0, scope: !16429, inlinedAt: !17024)
!17024 = distinct !DILocation(line: 972, column: 3, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17008, file: !2721, line: 971, column: 9)
!17026 = !DILocation(line: 0, scope: !16437, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17024)
!17028 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17027)
!17029 = !DILocation(line: 975, column: 1, scope: !17002)
!17030 = distinct !DISubprogram(name: "resched", scope: !2721, file: !2721, line: 940, type: !17031, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17033)
!17031 = !DISubroutineType(types: !17032)
!17032 = !{!153, !208}
!17033 = !{!17034}
!17034 = !DILocalVariable(name: "key", arg: 1, scope: !17030, file: !2721, line: 940, type: !208)
!17035 = !DILocation(line: 0, scope: !17030)
!17036 = !DILocalVariable(name: "key", arg: 1, scope: !17037, file: !6905, line: 112, type: !32)
!17037 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6905, file: !6905, line: 112, type: !17038, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17040)
!17038 = !DISubroutineType(types: !17039)
!17039 = !{!153, !32}
!17040 = !{!17036}
!17041 = !DILocation(line: 0, scope: !17037, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 946, column: 9, scope: !17030)
!17043 = !DILocation(line: 115, column: 13, scope: !17037, inlinedAt: !17042)
!17044 = !DILocation(line: 946, column: 32, scope: !17030)
!17045 = !DILocation(line: 1031, column: 3, scope: !17046, inlinedAt: !17049)
!17046 = distinct !DISubprogram(name: "__get_IPSR", scope: !8372, file: !8372, line: 1027, type: !8453, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17047)
!17047 = !{!17048}
!17048 = !DILocalVariable(name: "result", scope: !17046, file: !8372, line: 1029, type: !208)
!17049 = distinct !DILocation(line: 48, column: 10, scope: !17050, inlinedAt: !17051)
!17050 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9390, file: !9390, line: 46, type: !9391, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17051 = distinct !DILocation(line: 946, column: 36, scope: !17030)
!17052 = !{i64 3770341}
!17053 = !DILocation(line: 0, scope: !17046, inlinedAt: !17049)
!17054 = !DILocation(line: 48, column: 9, scope: !17050, inlinedAt: !17051)
!17055 = !DILocation(line: 946, column: 2, scope: !17030)
!17056 = distinct !DISubprogram(name: "need_swap", scope: !2721, file: !2721, line: 953, type: !9391, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17057)
!17057 = !{!17058}
!17058 = !DILocalVariable(name: "new_thread", scope: !17056, file: !2721, line: 959, type: !2616)
!17059 = !DILocation(line: 962, column: 31, scope: !17056)
!17060 = !DILocation(line: 0, scope: !17056)
!17061 = !DILocation(line: 963, column: 23, scope: !17056)
!17062 = !DILocation(line: 963, column: 20, scope: !17056)
!17063 = !DILocation(line: 963, column: 2, scope: !17056)
!17064 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15778, file: !15778, line: 181, type: !8382, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17065)
!17065 = !{!17066, !17067}
!17066 = !DILocalVariable(name: "key", arg: 1, scope: !17064, file: !15778, line: 181, type: !32)
!17067 = !DILocalVariable(name: "ret", scope: !17064, file: !15778, line: 183, type: !125)
!17068 = !DILocation(line: 0, scope: !17064)
!17069 = !DILocation(line: 185, column: 8, scope: !17064)
!17070 = !DILocation(line: 186, column: 2, scope: !17064)
!17071 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2721, file: !2721, line: 665, type: !16360, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17072)
!17072 = !{!17073, !17074, !17076}
!17073 = !DILocalVariable(name: "thread", arg: 1, scope: !17071, file: !2721, line: 665, type: !2616)
!17074 = !DILocalVariable(name: "__i", scope: !17075, file: !2721, line: 671, type: !16394)
!17075 = distinct !DILexicalBlock(scope: !17071, file: !2721, line: 671, column: 2)
!17076 = !DILocalVariable(name: "__key", scope: !17075, file: !2721, line: 671, type: !16394)
!17077 = !DILocation(line: 0, scope: !17071)
!17078 = !DILocation(line: 669, column: 8, scope: !17071)
!17079 = !DILocation(line: 0, scope: !17075)
!17080 = !DILocation(line: 0, scope: !16402, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 671, column: 2, scope: !17075)
!17082 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17081)
!17084 = !DILocation(line: 0, scope: !16411, inlinedAt: !17083)
!17085 = !DILocation(line: 672, column: 7, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17087, file: !2721, line: 672, column: 7)
!17087 = distinct !DILexicalBlock(scope: !17088, file: !2721, line: 671, column: 26)
!17088 = distinct !DILexicalBlock(scope: !17075, file: !2721, line: 671, column: 2)
!17089 = !DILocation(line: 672, column: 7, scope: !17087)
!17090 = !DILocation(line: 0, scope: !16571, inlinedAt: !17091)
!17091 = distinct !DILocation(line: 673, column: 4, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17086, file: !2721, line: 672, column: 35)
!17093 = !DILocation(line: 266, column: 15, scope: !16571, inlinedAt: !17091)
!17094 = !DILocation(line: 266, column: 28, scope: !16571, inlinedAt: !17091)
!17095 = !DILocation(line: 0, scope: !16579, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 268, column: 3, scope: !16583, inlinedAt: !17091)
!17097 = !DILocation(line: 234, column: 2, scope: !16579, inlinedAt: !17096)
!17098 = !DILocation(line: 674, column: 3, scope: !17092)
!17099 = !DILocation(line: 675, column: 3, scope: !17087)
!17100 = !DILocation(line: 676, column: 26, scope: !17087)
!17101 = !DILocation(line: 676, column: 23, scope: !17087)
!17102 = !DILocation(line: 676, column: 3, scope: !17087)
!17103 = !DILocation(line: 0, scope: !16429, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 671, column: 2, scope: !17088)
!17105 = !DILocation(line: 0, scope: !16437, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17104)
!17107 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17106)
!17108 = !DILocation(line: 679, column: 16, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17071, file: !2721, line: 679, column: 6)
!17110 = !DILocation(line: 679, column: 13, scope: !17109)
!17111 = !DILocation(line: 679, column: 6, scope: !17071)
!17112 = !DILocation(line: 680, column: 3, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17109, file: !2721, line: 679, column: 26)
!17114 = !DILocation(line: 681, column: 2, scope: !17113)
!17115 = !DILocation(line: 684, column: 1, scope: !17071)
!17116 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !16068, file: !16068, line: 52, type: !16378, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17117)
!17117 = !{!17118}
!17118 = !DILocalVariable(name: "thread", arg: 1, scope: !17116, file: !16068, line: 52, type: !2616)
!17119 = !DILocation(line: 0, scope: !17116)
!17120 = !DILocation(line: 54, column: 39, scope: !17116)
!17121 = !DILocation(line: 54, column: 9, scope: !17116)
!17122 = !DILocation(line: 54, column: 2, scope: !17116)
!17123 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15674, file: !15674, line: 141, type: !16360, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17124)
!17124 = !{!17125}
!17125 = !DILocalVariable(name: "thread", arg: 1, scope: !17123, file: !15674, line: 141, type: !2616)
!17126 = !DILocation(line: 0, scope: !17123)
!17127 = !DILocation(line: 143, column: 15, scope: !17123)
!17128 = !DILocation(line: 143, column: 28, scope: !17123)
!17129 = !DILocation(line: 146, column: 1, scope: !17123)
!17130 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15674, file: !15674, line: 73, type: !3363, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17131 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17132)
!17132 = distinct !DILocation(line: 75, column: 30, scope: !17130)
!17133 = !DILocation(line: 0, scope: !16411, inlinedAt: !17132)
!17134 = !DILocation(line: 75, column: 9, scope: !17130)
!17135 = !DILocation(line: 76, column: 1, scope: !17130)
!17136 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2721, file: !2721, line: 977, type: !8463, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17137)
!17137 = !{!17138}
!17138 = !DILocalVariable(name: "key", arg: 1, scope: !17136, file: !2721, line: 977, type: !208)
!17139 = !DILocation(line: 0, scope: !17136)
!17140 = !DILocation(line: 979, column: 6, scope: !17141)
!17141 = distinct !DILexicalBlock(scope: !17136, file: !2721, line: 979, column: 6)
!17142 = !DILocation(line: 979, column: 6, scope: !17136)
!17143 = !DILocation(line: 980, column: 3, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17141, file: !2721, line: 979, column: 20)
!17145 = !DILocation(line: 981, column: 2, scope: !17144)
!17146 = !DILocation(line: 0, scope: !16437, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 982, column: 3, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17141, file: !2721, line: 981, column: 9)
!17149 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17147)
!17150 = !DILocation(line: 985, column: 1, scope: !17136)
!17151 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2721, file: !2721, line: 695, type: !16360, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17152)
!17152 = !{!17153, !17154}
!17153 = !DILocalVariable(name: "thread", arg: 1, scope: !17151, file: !2721, line: 695, type: !2616)
!17154 = !DILocalVariable(name: "key", scope: !17151, file: !2721, line: 699, type: !16394)
!17155 = !DILocation(line: 0, scope: !17151)
!17156 = !DILocation(line: 0, scope: !16402, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 699, column: 25, scope: !17151)
!17158 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17157)
!17160 = !DILocation(line: 0, scope: !16411, inlinedAt: !17159)
!17161 = !DILocation(line: 702, column: 7, scope: !17162)
!17162 = distinct !DILexicalBlock(scope: !17151, file: !2721, line: 702, column: 6)
!17163 = !DILocation(line: 702, column: 6, scope: !17151)
!17164 = !DILocation(line: 0, scope: !16429, inlinedAt: !17165)
!17165 = distinct !DILocation(line: 703, column: 3, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17162, file: !2721, line: 702, column: 38)
!17167 = !DILocation(line: 0, scope: !16437, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17165)
!17169 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17168)
!17170 = !DILocation(line: 704, column: 3, scope: !17166)
!17171 = !DILocation(line: 707, column: 2, scope: !17151)
!17172 = !DILocation(line: 708, column: 2, scope: !17151)
!17173 = !DILocation(line: 710, column: 2, scope: !17151)
!17174 = !DILocation(line: 713, column: 1, scope: !17151)
!17175 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15674, file: !15674, line: 96, type: !16520, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17176)
!17176 = !{!17177}
!17177 = !DILocalVariable(name: "thread", arg: 1, scope: !17175, file: !15674, line: 96, type: !2616)
!17178 = !DILocation(line: 0, scope: !17175)
!17179 = !DILocation(line: 98, column: 23, scope: !17175)
!17180 = !DILocation(line: 98, column: 36, scope: !17175)
!17181 = !DILocation(line: 98, column: 57, scope: !17175)
!17182 = !DILocation(line: 98, column: 2, scope: !17175)
!17183 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15674, file: !15674, line: 148, type: !16360, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17184)
!17184 = !{!17185}
!17185 = !DILocalVariable(name: "thread", arg: 1, scope: !17183, file: !15674, line: 148, type: !2616)
!17186 = !DILocation(line: 0, scope: !17183)
!17187 = !DILocation(line: 150, column: 15, scope: !17183)
!17188 = !DILocation(line: 150, column: 28, scope: !17183)
!17189 = !DILocation(line: 153, column: 1, scope: !17183)
!17190 = distinct !DISubprogram(name: "z_pend_thread", scope: !2721, file: !2721, line: 770, type: !17191, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17197)
!17191 = !DISubroutineType(types: !17192)
!17192 = !{null, !2616, !2647, !17193}
!17193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1967, line: 67, baseType: !17194)
!17194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1967, line: 65, size: 64, elements: !17195)
!17195 = !{!17196}
!17196 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17194, file: !1967, line: 66, baseType: !1966, size: 64)
!17197 = !{!17198, !17199, !17200, !17201, !17203}
!17198 = !DILocalVariable(name: "thread", arg: 1, scope: !17190, file: !2721, line: 770, type: !2616)
!17199 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17190, file: !2721, line: 770, type: !2647)
!17200 = !DILocalVariable(name: "timeout", arg: 3, scope: !17190, file: !2721, line: 771, type: !17193)
!17201 = !DILocalVariable(name: "__i", scope: !17202, file: !2721, line: 774, type: !16394)
!17202 = distinct !DILexicalBlock(scope: !17190, file: !2721, line: 774, column: 2)
!17203 = !DILocalVariable(name: "__key", scope: !17202, file: !2721, line: 774, type: !16394)
!17204 = !DILocation(line: 0, scope: !17190)
!17205 = !DILocation(line: 0, scope: !17202)
!17206 = !DILocation(line: 0, scope: !16402, inlinedAt: !17207)
!17207 = distinct !DILocation(line: 774, column: 2, scope: !17202)
!17208 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17207)
!17210 = !DILocation(line: 0, scope: !16411, inlinedAt: !17209)
!17211 = !DILocation(line: 775, column: 3, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17213, file: !2721, line: 774, column: 26)
!17213 = distinct !DILexicalBlock(scope: !17202, file: !2721, line: 774, column: 2)
!17214 = !DILocation(line: 0, scope: !16429, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 774, column: 2, scope: !17213)
!17216 = !DILocation(line: 0, scope: !16437, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17215)
!17218 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17217)
!17219 = !DILocation(line: 777, column: 1, scope: !17190)
!17220 = distinct !DISubprogram(name: "pend_locked", scope: !2721, file: !2721, line: 760, type: !17191, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17221)
!17221 = !{!17222, !17223, !17224}
!17222 = !DILocalVariable(name: "thread", arg: 1, scope: !17220, file: !2721, line: 760, type: !2616)
!17223 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17220, file: !2721, line: 760, type: !2647)
!17224 = !DILocalVariable(name: "timeout", arg: 3, scope: !17220, file: !2721, line: 761, type: !17193)
!17225 = !DILocation(line: 0, scope: !17220)
!17226 = !DILocation(line: 766, column: 2, scope: !17220)
!17227 = !DILocation(line: 767, column: 2, scope: !17220)
!17228 = !DILocation(line: 768, column: 1, scope: !17220)
!17229 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2721, file: !2721, line: 740, type: !17230, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17232)
!17230 = !DISubroutineType(types: !17231)
!17231 = !{null, !2616, !2647}
!17232 = !{!17233, !17234}
!17233 = !DILocalVariable(name: "thread", arg: 1, scope: !17229, file: !2721, line: 740, type: !2616)
!17234 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17229, file: !2721, line: 740, type: !2647)
!17235 = !DILocation(line: 0, scope: !17229)
!17236 = !DILocation(line: 742, column: 2, scope: !17229)
!17237 = !DILocation(line: 743, column: 2, scope: !17229)
!17238 = !DILocation(line: 747, column: 13, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17229, file: !2721, line: 747, column: 6)
!17240 = !DILocation(line: 747, column: 6, scope: !17229)
!17241 = !DILocation(line: 748, column: 16, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17239, file: !2721, line: 747, column: 22)
!17243 = !DILocation(line: 748, column: 26, scope: !17242)
!17244 = !DILocation(line: 749, column: 28, scope: !17242)
!17245 = !DILocation(line: 0, scope: !16602, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 749, column: 3, scope: !17242)
!17247 = !DILocation(line: 188, column: 2, scope: !16612, inlinedAt: !17246)
!17248 = !DILocation(line: 188, column: 2, scope: !16614, inlinedAt: !17246)
!17249 = !DILocation(line: 0, scope: !16612, inlinedAt: !17246)
!17250 = !DILocation(line: 189, column: 7, scope: !16617, inlinedAt: !17246)
!17251 = !DILocation(line: 189, column: 35, scope: !16617, inlinedAt: !17246)
!17252 = !DILocation(line: 189, column: 7, scope: !16618, inlinedAt: !17246)
!17253 = !DILocation(line: 191, column: 21, scope: !16622, inlinedAt: !17246)
!17254 = !DILocation(line: 190, column: 4, scope: !16622, inlinedAt: !17246)
!17255 = !DILocation(line: 192, column: 4, scope: !16622, inlinedAt: !17246)
!17256 = distinct !{!17256, !17247, !17257}
!17257 = !DILocation(line: 194, column: 2, scope: !16612, inlinedAt: !17246)
!17258 = !DILocation(line: 196, column: 37, scope: !16602, inlinedAt: !17246)
!17259 = !DILocation(line: 196, column: 2, scope: !16602, inlinedAt: !17246)
!17260 = !DILocation(line: 197, column: 1, scope: !16602, inlinedAt: !17246)
!17261 = !DILocation(line: 751, column: 1, scope: !17229)
!17262 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2721, file: !2721, line: 753, type: !17263, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17265)
!17263 = !DISubroutineType(types: !17264)
!17264 = !{null, !2616, !17193}
!17265 = !{!17266, !17267}
!17266 = !DILocalVariable(name: "thread", arg: 1, scope: !17262, file: !2721, line: 753, type: !2616)
!17267 = !DILocalVariable(name: "timeout", arg: 2, scope: !17262, file: !2721, line: 753, type: !17193)
!17268 = !DILocation(line: 0, scope: !17262)
!17269 = !DILocation(line: 755, column: 7, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17262, file: !2721, line: 755, column: 6)
!17271 = !DILocation(line: 755, column: 6, scope: !17262)
!17272 = !DILocation(line: 756, column: 3, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17270, file: !2721, line: 755, column: 41)
!17274 = !DILocation(line: 757, column: 2, scope: !17273)
!17275 = !DILocation(line: 758, column: 1, scope: !17262)
!17276 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !16068, file: !16068, line: 47, type: !17263, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17277)
!17277 = !{!17278, !17279}
!17278 = !DILocalVariable(name: "thread", arg: 1, scope: !17276, file: !16068, line: 47, type: !2616)
!17279 = !DILocalVariable(name: "ticks", arg: 2, scope: !17276, file: !16068, line: 47, type: !17193)
!17280 = !DILocation(line: 0, scope: !17276)
!17281 = !DILocation(line: 49, column: 30, scope: !17276)
!17282 = !DILocation(line: 49, column: 2, scope: !17276)
!17283 = !DILocation(line: 50, column: 1, scope: !17276)
!17284 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2721, file: !2721, line: 795, type: !2673, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17285)
!17285 = !{!17286, !17287, !17288, !17290, !17291}
!17286 = !DILocalVariable(name: "timeout", arg: 1, scope: !17284, file: !2721, line: 795, type: !2675)
!17287 = !DILocalVariable(name: "thread", scope: !17284, file: !2721, line: 797, type: !2616)
!17288 = !DILocalVariable(name: "__i", scope: !17289, file: !2721, line: 800, type: !16394)
!17289 = distinct !DILexicalBlock(scope: !17284, file: !2721, line: 800, column: 2)
!17290 = !DILocalVariable(name: "__key", scope: !17289, file: !2721, line: 800, type: !16394)
!17291 = !DILocalVariable(name: "killed", scope: !17292, file: !2721, line: 801, type: !153)
!17292 = distinct !DILexicalBlock(scope: !17293, file: !2721, line: 800, column: 26)
!17293 = distinct !DILexicalBlock(scope: !17289, file: !2721, line: 800, column: 2)
!17294 = !DILocation(line: 0, scope: !17284)
!17295 = !DILocation(line: 797, column: 28, scope: !17284)
!17296 = !DILocation(line: 0, scope: !17289)
!17297 = !DILocation(line: 0, scope: !16402, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 800, column: 2, scope: !17289)
!17299 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17300)
!17300 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17298)
!17301 = !DILocation(line: 0, scope: !16411, inlinedAt: !17300)
!17302 = !DILocation(line: 801, column: 27, scope: !17292)
!17303 = !DILocation(line: 801, column: 32, scope: !17292)
!17304 = !DILocation(line: 801, column: 61, scope: !17292)
!17305 = !DILocation(line: 0, scope: !17292)
!17306 = !DILocation(line: 804, column: 7, scope: !17292)
!17307 = !DILocation(line: 805, column: 21, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !2721, line: 805, column: 8)
!17309 = distinct !DILexicalBlock(scope: !17310, file: !2721, line: 804, column: 16)
!17310 = distinct !DILexicalBlock(scope: !17292, file: !2721, line: 804, column: 7)
!17311 = !DILocation(line: 805, column: 31, scope: !17308)
!17312 = !DILocation(line: 805, column: 8, scope: !17309)
!17313 = !DILocation(line: 806, column: 5, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17308, file: !2721, line: 805, column: 40)
!17315 = !DILocation(line: 807, column: 4, scope: !17314)
!17316 = !DILocation(line: 808, column: 4, scope: !17309)
!17317 = !DILocation(line: 809, column: 4, scope: !17309)
!17318 = !DILocation(line: 810, column: 4, scope: !17309)
!17319 = !DILocation(line: 811, column: 3, scope: !17309)
!17320 = !DILocation(line: 0, scope: !16429, inlinedAt: !17321)
!17321 = distinct !DILocation(line: 800, column: 2, scope: !17293)
!17322 = !DILocation(line: 0, scope: !16437, inlinedAt: !17323)
!17323 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17321)
!17324 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17323)
!17325 = !DILocation(line: 813, column: 1, scope: !17284)
!17326 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2721, file: !2721, line: 779, type: !16360, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17327)
!17327 = !{!17328}
!17328 = !DILocalVariable(name: "thread", arg: 1, scope: !17326, file: !2721, line: 779, type: !2616)
!17329 = !DILocation(line: 0, scope: !17326)
!17330 = !DILocation(line: 781, column: 2, scope: !17326)
!17331 = !DILocation(line: 782, column: 2, scope: !17326)
!17332 = !DILocation(line: 783, column: 15, scope: !17326)
!17333 = !DILocation(line: 783, column: 25, scope: !17326)
!17334 = !DILocation(line: 784, column: 1, scope: !17326)
!17335 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15674, file: !15674, line: 165, type: !16360, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17336)
!17336 = !{!17337}
!17337 = !DILocalVariable(name: "thread", arg: 1, scope: !17335, file: !15674, line: 165, type: !2616)
!17338 = !DILocation(line: 0, scope: !17335)
!17339 = !DILocation(line: 167, column: 15, scope: !17335)
!17340 = !DILocation(line: 167, column: 28, scope: !17335)
!17341 = !DILocation(line: 168, column: 1, scope: !17335)
!17342 = distinct !DISubprogram(name: "unready_thread", scope: !2721, file: !2721, line: 731, type: !16360, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17343)
!17343 = !{!17344}
!17344 = !DILocalVariable(name: "thread", arg: 1, scope: !17342, file: !2721, line: 731, type: !2616)
!17345 = !DILocation(line: 0, scope: !17342)
!17346 = !DILocation(line: 733, column: 6, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17342, file: !2721, line: 733, column: 6)
!17348 = !DILocation(line: 733, column: 6, scope: !17342)
!17349 = !DILocation(line: 0, scope: !16571, inlinedAt: !17350)
!17350 = distinct !DILocation(line: 734, column: 3, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17347, file: !2721, line: 733, column: 34)
!17352 = !DILocation(line: 266, column: 15, scope: !16571, inlinedAt: !17350)
!17353 = !DILocation(line: 266, column: 28, scope: !16571, inlinedAt: !17350)
!17354 = !DILocation(line: 0, scope: !16579, inlinedAt: !17355)
!17355 = distinct !DILocation(line: 268, column: 3, scope: !16583, inlinedAt: !17350)
!17356 = !DILocation(line: 234, column: 2, scope: !16579, inlinedAt: !17355)
!17357 = !DILocation(line: 735, column: 2, scope: !17351)
!17358 = !DILocation(line: 736, column: 25, scope: !17342)
!17359 = !DILocation(line: 736, column: 22, scope: !17342)
!17360 = !DILocation(line: 736, column: 2, scope: !17342)
!17361 = !DILocation(line: 737, column: 1, scope: !17342)
!17362 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15674, file: !15674, line: 160, type: !16360, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17363)
!17363 = !{!17364}
!17364 = !DILocalVariable(name: "thread", arg: 1, scope: !17362, file: !15674, line: 160, type: !2616)
!17365 = !DILocation(line: 0, scope: !17362)
!17366 = !DILocation(line: 162, column: 15, scope: !17362)
!17367 = !DILocation(line: 162, column: 28, scope: !17362)
!17368 = !DILocation(line: 163, column: 1, scope: !17362)
!17369 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2721, file: !2721, line: 786, type: !16360, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17370)
!17370 = !{!17371, !17372, !17374}
!17371 = !DILocalVariable(name: "thread", arg: 1, scope: !17369, file: !2721, line: 786, type: !2616)
!17372 = !DILocalVariable(name: "__i", scope: !17373, file: !2721, line: 788, type: !16394)
!17373 = distinct !DILexicalBlock(scope: !17369, file: !2721, line: 788, column: 2)
!17374 = !DILocalVariable(name: "__key", scope: !17373, file: !2721, line: 788, type: !16394)
!17375 = !DILocation(line: 0, scope: !17369)
!17376 = !DILocation(line: 0, scope: !17373)
!17377 = !DILocation(line: 0, scope: !16402, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 788, column: 2, scope: !17373)
!17379 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17380)
!17380 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17378)
!17381 = !DILocation(line: 0, scope: !16411, inlinedAt: !17380)
!17382 = !DILocation(line: 789, column: 3, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17384, file: !2721, line: 788, column: 26)
!17384 = distinct !DILexicalBlock(scope: !17373, file: !2721, line: 788, column: 2)
!17385 = !DILocation(line: 0, scope: !16429, inlinedAt: !17386)
!17386 = distinct !DILocation(line: 788, column: 2, scope: !17384)
!17387 = !DILocation(line: 0, scope: !16437, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17386)
!17389 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17388)
!17390 = !DILocation(line: 791, column: 1, scope: !17369)
!17391 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2721, file: !2721, line: 816, type: !17392, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17394)
!17392 = !DISubroutineType(types: !17393)
!17393 = !{!125, !208, !2647, !17193}
!17394 = !{!17395, !17396, !17397, !17398, !17399, !17401}
!17395 = !DILocalVariable(name: "key", arg: 1, scope: !17391, file: !2721, line: 816, type: !208)
!17396 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17391, file: !2721, line: 816, type: !2647)
!17397 = !DILocalVariable(name: "timeout", arg: 3, scope: !17391, file: !2721, line: 816, type: !17193)
!17398 = !DILocalVariable(name: "ret", scope: !17391, file: !2721, line: 828, type: !125)
!17399 = !DILocalVariable(name: "__i", scope: !17400, file: !2721, line: 829, type: !16394)
!17400 = distinct !DILexicalBlock(scope: !17391, file: !2721, line: 829, column: 2)
!17401 = !DILocalVariable(name: "__key", scope: !17400, file: !2721, line: 829, type: !16394)
!17402 = !DILocation(line: 0, scope: !17391)
!17403 = !DILocation(line: 823, column: 14, scope: !17391)
!17404 = !DILocation(line: 823, column: 2, scope: !17391)
!17405 = !DILocation(line: 826, column: 20, scope: !17391)
!17406 = !DILocation(line: 826, column: 18, scope: !17391)
!17407 = !DILocation(line: 828, column: 12, scope: !17391)
!17408 = !DILocation(line: 0, scope: !17400)
!17409 = !DILocation(line: 0, scope: !16402, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 829, column: 2, scope: !17400)
!17411 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17412)
!17412 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17410)
!17413 = !DILocation(line: 0, scope: !16411, inlinedAt: !17412)
!17414 = !DILocation(line: 830, column: 7, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17416, file: !2721, line: 830, column: 7)
!17416 = distinct !DILexicalBlock(scope: !17417, file: !2721, line: 829, column: 26)
!17417 = distinct !DILexicalBlock(scope: !17400, file: !2721, line: 829, column: 2)
!17418 = !DILocation(line: 830, column: 26, scope: !17415)
!17419 = !DILocation(line: 830, column: 23, scope: !17415)
!17420 = !DILocation(line: 830, column: 7, scope: !17416)
!17421 = !DILocation(line: 831, column: 20, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17415, file: !2721, line: 830, column: 36)
!17423 = !DILocation(line: 832, column: 3, scope: !17422)
!17424 = !DILocation(line: 0, scope: !16429, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 829, column: 2, scope: !17417)
!17426 = !DILocation(line: 0, scope: !16437, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17425)
!17428 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17427)
!17429 = !DILocation(line: 834, column: 2, scope: !17391)
!17430 = distinct !DISubprogram(name: "z_pend_curr", scope: !2721, file: !2721, line: 840, type: !17431, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17433)
!17431 = !DISubroutineType(types: !17432)
!17432 = !{!125, !16405, !16394, !2647, !17193}
!17433 = !{!17434, !17435, !17436, !17437}
!17434 = !DILocalVariable(name: "lock", arg: 1, scope: !17430, file: !2721, line: 840, type: !16405)
!17435 = !DILocalVariable(name: "key", arg: 2, scope: !17430, file: !2721, line: 840, type: !16394)
!17436 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17430, file: !2721, line: 841, type: !2647)
!17437 = !DILocalVariable(name: "timeout", arg: 4, scope: !17430, file: !2721, line: 841, type: !17193)
!17438 = !DILocation(line: 0, scope: !17430)
!17439 = !DILocation(line: 844, column: 20, scope: !17430)
!17440 = !DILocation(line: 844, column: 18, scope: !17430)
!17441 = !DILocation(line: 0, scope: !16402, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 856, column: 9, scope: !17430)
!17443 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17444)
!17444 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17442)
!17445 = !DILocation(line: 0, scope: !16411, inlinedAt: !17444)
!17446 = !DILocation(line: 857, column: 14, scope: !17430)
!17447 = !DILocation(line: 857, column: 2, scope: !17430)
!17448 = !DILocation(line: 0, scope: !17013, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 859, column: 9, scope: !17430)
!17450 = !DILocation(line: 196, column: 9, scope: !17013, inlinedAt: !17449)
!17451 = !DILocation(line: 859, column: 2, scope: !17430)
!17452 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2721, file: !2721, line: 862, type: !17453, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17455)
!17453 = !DISubroutineType(types: !17454)
!17454 = !{!2616, !2647}
!17455 = !{!17456, !17457, !17458, !17460}
!17456 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17452, file: !2721, line: 862, type: !2647)
!17457 = !DILocalVariable(name: "thread", scope: !17452, file: !2721, line: 864, type: !2616)
!17458 = !DILocalVariable(name: "__i", scope: !17459, file: !2721, line: 866, type: !16394)
!17459 = distinct !DILexicalBlock(scope: !17452, file: !2721, line: 866, column: 2)
!17460 = !DILocalVariable(name: "__key", scope: !17459, file: !2721, line: 866, type: !16394)
!17461 = !DILocation(line: 0, scope: !17452)
!17462 = !DILocation(line: 0, scope: !17459)
!17463 = !DILocation(line: 0, scope: !16402, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 866, column: 2, scope: !17459)
!17465 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17466)
!17466 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17464)
!17467 = !DILocation(line: 0, scope: !16411, inlinedAt: !17466)
!17468 = !DILocation(line: 867, column: 12, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17470, file: !2721, line: 866, column: 26)
!17470 = distinct !DILexicalBlock(scope: !17459, file: !2721, line: 866, column: 2)
!17471 = !DILocation(line: 869, column: 14, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17469, file: !2721, line: 869, column: 7)
!17473 = !DILocation(line: 869, column: 7, scope: !17469)
!17474 = !DILocation(line: 870, column: 4, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17472, file: !2721, line: 869, column: 23)
!17476 = !DILocation(line: 871, column: 3, scope: !17475)
!17477 = !DILocation(line: 0, scope: !16429, inlinedAt: !17478)
!17478 = distinct !DILocation(line: 866, column: 2, scope: !17470)
!17479 = !DILocation(line: 0, scope: !16437, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17478)
!17481 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17480)
!17482 = !DILocation(line: 874, column: 2, scope: !17452)
!17483 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2721, file: !2721, line: 877, type: !17453, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17484)
!17484 = !{!17485, !17486, !17487, !17489}
!17485 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17483, file: !2721, line: 877, type: !2647)
!17486 = !DILocalVariable(name: "thread", scope: !17483, file: !2721, line: 879, type: !2616)
!17487 = !DILocalVariable(name: "__i", scope: !17488, file: !2721, line: 881, type: !16394)
!17488 = distinct !DILexicalBlock(scope: !17483, file: !2721, line: 881, column: 2)
!17489 = !DILocalVariable(name: "__key", scope: !17488, file: !2721, line: 881, type: !16394)
!17490 = !DILocation(line: 0, scope: !17483)
!17491 = !DILocation(line: 0, scope: !17488)
!17492 = !DILocation(line: 0, scope: !16402, inlinedAt: !17493)
!17493 = distinct !DILocation(line: 881, column: 2, scope: !17488)
!17494 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17495)
!17495 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17493)
!17496 = !DILocation(line: 0, scope: !16411, inlinedAt: !17495)
!17497 = !DILocation(line: 882, column: 12, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17499, file: !2721, line: 881, column: 26)
!17499 = distinct !DILexicalBlock(scope: !17488, file: !2721, line: 881, column: 2)
!17500 = !DILocation(line: 884, column: 14, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17498, file: !2721, line: 884, column: 7)
!17502 = !DILocation(line: 884, column: 7, scope: !17498)
!17503 = !DILocation(line: 885, column: 4, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17501, file: !2721, line: 884, column: 23)
!17505 = !DILocation(line: 886, column: 10, scope: !17504)
!17506 = !DILocation(line: 887, column: 3, scope: !17504)
!17507 = !DILocation(line: 0, scope: !16429, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 881, column: 2, scope: !17499)
!17509 = !DILocation(line: 0, scope: !16437, inlinedAt: !17510)
!17510 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17508)
!17511 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17510)
!17512 = !DILocation(line: 890, column: 2, scope: !17483)
!17513 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2721, file: !2721, line: 893, type: !16360, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17514)
!17514 = !{!17515}
!17515 = !DILocalVariable(name: "thread", arg: 1, scope: !17513, file: !2721, line: 893, type: !2616)
!17516 = !DILocation(line: 0, scope: !17513)
!17517 = !DILocation(line: 0, scope: !17369, inlinedAt: !17518)
!17518 = distinct !DILocation(line: 895, column: 2, scope: !17513)
!17519 = !DILocation(line: 0, scope: !17373, inlinedAt: !17518)
!17520 = !DILocation(line: 0, scope: !16402, inlinedAt: !17521)
!17521 = distinct !DILocation(line: 788, column: 2, scope: !17373, inlinedAt: !17518)
!17522 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17521)
!17524 = !DILocation(line: 0, scope: !16411, inlinedAt: !17523)
!17525 = !DILocation(line: 789, column: 3, scope: !17383, inlinedAt: !17518)
!17526 = !DILocation(line: 0, scope: !16429, inlinedAt: !17527)
!17527 = distinct !DILocation(line: 788, column: 2, scope: !17384, inlinedAt: !17518)
!17528 = !DILocation(line: 0, scope: !16437, inlinedAt: !17529)
!17529 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17527)
!17530 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17529)
!17531 = !DILocation(line: 896, column: 8, scope: !17513)
!17532 = !DILocation(line: 897, column: 1, scope: !17513)
!17533 = distinct !DISubprogram(name: "z_set_prio", scope: !2721, file: !2721, line: 902, type: !16722, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17534)
!17534 = !{!17535, !17536, !17537, !17538, !17540}
!17535 = !DILocalVariable(name: "thread", arg: 1, scope: !17533, file: !2721, line: 902, type: !2616)
!17536 = !DILocalVariable(name: "prio", arg: 2, scope: !17533, file: !2721, line: 902, type: !125)
!17537 = !DILocalVariable(name: "need_sched", scope: !17533, file: !2721, line: 904, type: !153)
!17538 = !DILocalVariable(name: "__i", scope: !17539, file: !2721, line: 906, type: !16394)
!17539 = distinct !DILexicalBlock(scope: !17533, file: !2721, line: 906, column: 2)
!17540 = !DILocalVariable(name: "__key", scope: !17539, file: !2721, line: 906, type: !16394)
!17541 = !DILocation(line: 0, scope: !17533)
!17542 = !DILocation(line: 0, scope: !17539)
!17543 = !DILocation(line: 0, scope: !16402, inlinedAt: !17544)
!17544 = distinct !DILocation(line: 906, column: 2, scope: !17539)
!17545 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17546)
!17546 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17544)
!17547 = !DILocation(line: 0, scope: !16411, inlinedAt: !17546)
!17548 = !DILocation(line: 907, column: 16, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17550, file: !2721, line: 906, column: 26)
!17550 = distinct !DILexicalBlock(scope: !17539, file: !2721, line: 906, column: 2)
!17551 = !DILocation(line: 909, column: 7, scope: !17549)
!17552 = !DILocation(line: 0, scope: !16571, inlinedAt: !17553)
!17553 = distinct !DILocation(line: 912, column: 5, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17555, file: !2721, line: 911, column: 63)
!17555 = distinct !DILexicalBlock(scope: !17556, file: !2721, line: 911, column: 8)
!17556 = distinct !DILexicalBlock(scope: !17557, file: !2721, line: 909, column: 19)
!17557 = distinct !DILexicalBlock(scope: !17549, file: !2721, line: 909, column: 7)
!17558 = !DILocation(line: 266, column: 28, scope: !16571, inlinedAt: !17553)
!17559 = !DILocation(line: 0, scope: !16579, inlinedAt: !17560)
!17560 = distinct !DILocation(line: 268, column: 3, scope: !16583, inlinedAt: !17553)
!17561 = !DILocation(line: 234, column: 2, scope: !16579, inlinedAt: !17560)
!17562 = !DILocation(line: 913, column: 23, scope: !17554)
!17563 = !DILocation(line: 0, scope: !16588, inlinedAt: !17564)
!17564 = distinct !DILocation(line: 914, column: 5, scope: !17554)
!17565 = !DILocation(line: 252, column: 28, scope: !16588, inlinedAt: !17564)
!17566 = !DILocation(line: 0, scope: !16595, inlinedAt: !17567)
!17567 = distinct !DILocation(line: 254, column: 3, scope: !16599, inlinedAt: !17564)
!17568 = !DILocation(line: 0, scope: !16602, inlinedAt: !17569)
!17569 = distinct !DILocation(line: 229, column: 2, scope: !16595, inlinedAt: !17567)
!17570 = !DILocation(line: 188, column: 2, scope: !16612, inlinedAt: !17569)
!17571 = !DILocation(line: 188, column: 2, scope: !16614, inlinedAt: !17569)
!17572 = !DILocation(line: 0, scope: !16612, inlinedAt: !17569)
!17573 = !DILocation(line: 189, column: 7, scope: !16617, inlinedAt: !17569)
!17574 = !DILocation(line: 189, column: 35, scope: !16617, inlinedAt: !17569)
!17575 = !DILocation(line: 189, column: 7, scope: !16618, inlinedAt: !17569)
!17576 = !DILocation(line: 190, column: 4, scope: !16622, inlinedAt: !17569)
!17577 = !DILocation(line: 192, column: 4, scope: !16622, inlinedAt: !17569)
!17578 = distinct !{!17578, !17570, !17579}
!17579 = !DILocation(line: 194, column: 2, scope: !16612, inlinedAt: !17569)
!17580 = !DILocation(line: 196, column: 2, scope: !16602, inlinedAt: !17569)
!17581 = !DILocation(line: 197, column: 1, scope: !16602, inlinedAt: !17569)
!17582 = !DILocation(line: 918, column: 4, scope: !17556)
!17583 = !DILocation(line: 919, column: 3, scope: !17556)
!17584 = !DILocation(line: 920, column: 22, scope: !17585)
!17585 = distinct !DILexicalBlock(scope: !17557, file: !2721, line: 919, column: 10)
!17586 = !DILocation(line: 0, scope: !16429, inlinedAt: !17587)
!17587 = distinct !DILocation(line: 906, column: 2, scope: !17550)
!17588 = !DILocation(line: 0, scope: !16437, inlinedAt: !17589)
!17589 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17587)
!17590 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17589)
!17591 = !DILocation(line: 926, column: 2, scope: !17533)
!17592 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2721, file: !2721, line: 929, type: !17593, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17595)
!17593 = !DISubroutineType(types: !17594)
!17594 = !{null, !2616, !125}
!17595 = !{!17596, !17597, !17598}
!17596 = !DILocalVariable(name: "thread", arg: 1, scope: !17592, file: !2721, line: 929, type: !2616)
!17597 = !DILocalVariable(name: "prio", arg: 2, scope: !17592, file: !2721, line: 929, type: !125)
!17598 = !DILocalVariable(name: "need_sched", scope: !17592, file: !2721, line: 931, type: !153)
!17599 = !DILocation(line: 0, scope: !17592)
!17600 = !DILocation(line: 931, column: 20, scope: !17592)
!17601 = !DILocation(line: 935, column: 17, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17592, file: !2721, line: 935, column: 6)
!17603 = !DILocation(line: 935, column: 20, scope: !17602)
!17604 = !DILocation(line: 935, column: 35, scope: !17602)
!17605 = !DILocation(line: 935, column: 48, scope: !17602)
!17606 = !DILocation(line: 935, column: 6, scope: !17592)
!17607 = !DILocation(line: 936, column: 3, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17602, file: !2721, line: 935, column: 55)
!17609 = !DILocation(line: 937, column: 2, scope: !17608)
!17610 = !DILocation(line: 938, column: 1, scope: !17592)
!17611 = distinct !DISubprogram(name: "k_sched_lock", scope: !2721, file: !2721, line: 987, type: !3363, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17612)
!17612 = !{!17613, !17615}
!17613 = !DILocalVariable(name: "__i", scope: !17614, file: !2721, line: 989, type: !16394)
!17614 = distinct !DILexicalBlock(scope: !17611, file: !2721, line: 989, column: 2)
!17615 = !DILocalVariable(name: "__key", scope: !17614, file: !2721, line: 989, type: !16394)
!17616 = !DILocation(line: 0, scope: !17614)
!17617 = !DILocation(line: 0, scope: !16402, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 989, column: 2, scope: !17614)
!17619 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17620)
!17620 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17618)
!17621 = !DILocation(line: 0, scope: !16411, inlinedAt: !17620)
!17622 = !DILocation(line: 992, column: 3, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17624, file: !2721, line: 989, column: 26)
!17624 = distinct !DILexicalBlock(scope: !17614, file: !2721, line: 989, column: 2)
!17625 = !DILocation(line: 0, scope: !16429, inlinedAt: !17626)
!17626 = distinct !DILocation(line: 989, column: 2, scope: !17624)
!17627 = !DILocation(line: 0, scope: !16437, inlinedAt: !17628)
!17628 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17626)
!17629 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17628)
!17630 = !DILocation(line: 994, column: 1, scope: !17611)
!17631 = distinct !DISubprogram(name: "z_sched_lock", scope: !15674, file: !15674, line: 251, type: !3363, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17632 = !DILocation(line: 256, column: 4, scope: !17631)
!17633 = !DILocation(line: 256, column: 19, scope: !17631)
!17634 = !DILocation(line: 256, column: 2, scope: !17631)
!17635 = !DILocation(line: 258, column: 2, scope: !17636)
!17636 = distinct !DILexicalBlock(scope: !17631, file: !15674, line: 258, column: 2)
!17637 = !{i64 2155187565}
!17638 = !DILocation(line: 259, column: 1, scope: !17631)
!17639 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2721, file: !2721, line: 996, type: !3363, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17640)
!17640 = !{!17641, !17643}
!17641 = !DILocalVariable(name: "__i", scope: !17642, file: !2721, line: 998, type: !16394)
!17642 = distinct !DILexicalBlock(scope: !17639, file: !2721, line: 998, column: 2)
!17643 = !DILocalVariable(name: "__key", scope: !17642, file: !2721, line: 998, type: !16394)
!17644 = !DILocation(line: 0, scope: !17642)
!17645 = !DILocation(line: 0, scope: !16402, inlinedAt: !17646)
!17646 = distinct !DILocation(line: 998, column: 2, scope: !17642)
!17647 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17648)
!17648 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17646)
!17649 = !DILocation(line: 0, scope: !16411, inlinedAt: !17648)
!17650 = !DILocation(line: 1002, column: 5, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17652, file: !2721, line: 998, column: 26)
!17652 = distinct !DILexicalBlock(scope: !17642, file: !2721, line: 998, column: 2)
!17653 = !DILocation(line: 1002, column: 20, scope: !17651)
!17654 = !DILocation(line: 1002, column: 3, scope: !17651)
!17655 = !DILocation(line: 1003, column: 3, scope: !17651)
!17656 = !DILocation(line: 0, scope: !16429, inlinedAt: !17657)
!17657 = distinct !DILocation(line: 998, column: 2, scope: !17652)
!17658 = !DILocation(line: 0, scope: !16437, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !17657)
!17660 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !17659)
!17661 = !DILocation(line: 1011, column: 2, scope: !17639)
!17662 = !DILocation(line: 1012, column: 1, scope: !17639)
!17663 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2721, file: !2721, line: 1014, type: !16710, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17664 = !DILocation(line: 1028, column: 25, scope: !17663)
!17665 = !DILocation(line: 1028, column: 2, scope: !17663)
!17666 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2721, file: !2721, line: 1155, type: !17667, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17669)
!17667 = !DISubroutineType(types: !17668)
!17668 = !{!153, !2645, !2645}
!17669 = !{!17670, !17671, !17672, !17673, !17674}
!17670 = !DILocalVariable(name: "a", arg: 1, scope: !17666, file: !2721, line: 1155, type: !2645)
!17671 = !DILocalVariable(name: "b", arg: 2, scope: !17666, file: !2721, line: 1155, type: !2645)
!17672 = !DILocalVariable(name: "thread_a", scope: !17666, file: !2721, line: 1157, type: !2616)
!17673 = !DILocalVariable(name: "thread_b", scope: !17666, file: !2721, line: 1157, type: !2616)
!17674 = !DILocalVariable(name: "cmp", scope: !17666, file: !2721, line: 1158, type: !917)
!17675 = !DILocation(line: 0, scope: !17666)
!17676 = !DILocation(line: 1160, column: 13, scope: !17666)
!17677 = !DILocation(line: 1161, column: 13, scope: !17666)
!17678 = !DILocation(line: 1163, column: 8, scope: !17666)
!17679 = !DILocation(line: 1165, column: 10, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17666, file: !2721, line: 1165, column: 6)
!17681 = !DILocation(line: 1165, column: 6, scope: !17666)
!17682 = !DILocation(line: 1167, column: 17, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17680, file: !2721, line: 1167, column: 13)
!17684 = !DILocation(line: 1167, column: 13, scope: !17680)
!17685 = !DILocation(line: 1170, column: 25, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17683, file: !2721, line: 1169, column: 9)
!17687 = !DILocation(line: 1170, column: 52, scope: !17686)
!17688 = !DILocation(line: 1170, column: 35, scope: !17686)
!17689 = !DILocation(line: 1170, column: 3, scope: !17686)
!17690 = !DILocation(line: 0, scope: !17680)
!17691 = !DILocation(line: 1173, column: 1, scope: !17666)
!17692 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2721, file: !2721, line: 1175, type: !17693, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17708)
!17693 = !DISubroutineType(types: !17694)
!17694 = !{null, !17695, !2616}
!17695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17696, size: 32)
!17696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17697, line: 37, size: 128, elements: !17698)
!17697 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17698 = !{!17699, !17707}
!17699 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17696, file: !17697, line: 38, baseType: !17700, size: 96)
!17700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !557, line: 83, size: 96, elements: !17701)
!17701 = !{!17702, !17703, !17706}
!17702 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17700, file: !557, line: 84, baseType: !2645, size: 32)
!17703 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17700, file: !557, line: 85, baseType: !17704, size: 32, offset: 32)
!17704 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !557, line: 81, baseType: !17705)
!17705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17667, size: 32)
!17706 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17700, file: !557, line: 86, baseType: !125, size: 32, offset: 64)
!17707 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17696, file: !17697, line: 39, baseType: !125, size: 32, offset: 96)
!17708 = !{!17709, !17710, !17711, !17712, !17721}
!17709 = !DILocalVariable(name: "pq", arg: 1, scope: !17692, file: !2721, line: 1175, type: !17695)
!17710 = !DILocalVariable(name: "thread", arg: 2, scope: !17692, file: !2721, line: 1175, type: !2616)
!17711 = !DILocalVariable(name: "t", scope: !17692, file: !2721, line: 1177, type: !2616)
!17712 = !DILocalVariable(name: "__f", scope: !17713, file: !2721, line: 1190, type: !17716)
!17713 = distinct !DILexicalBlock(scope: !17714, file: !2721, line: 1190, column: 3)
!17714 = distinct !DILexicalBlock(scope: !17715, file: !2721, line: 1189, column: 27)
!17715 = distinct !DILexicalBlock(scope: !17692, file: !2721, line: 1189, column: 6)
!17716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !557, line: 155, size: 96, elements: !17717)
!17717 = !{!17718, !17719, !17720}
!17718 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17716, file: !557, line: 156, baseType: !2716, size: 32)
!17719 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17716, file: !557, line: 157, baseType: !184, size: 32, offset: 32)
!17720 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17716, file: !557, line: 158, baseType: !917, size: 32, offset: 64)
!17721 = !DILocalVariable(name: "n", scope: !17722, file: !2721, line: 1190, type: !2645)
!17722 = distinct !DILexicalBlock(scope: !17723, file: !2721, line: 1190, column: 3)
!17723 = distinct !DILexicalBlock(scope: !17713, file: !2721, line: 1190, column: 3)
!17724 = !DILocation(line: 0, scope: !17692)
!17725 = !DILocation(line: 1181, column: 31, scope: !17692)
!17726 = !DILocation(line: 1181, column: 45, scope: !17692)
!17727 = !DILocation(line: 1181, column: 15, scope: !17692)
!17728 = !DILocation(line: 1181, column: 25, scope: !17692)
!17729 = !DILocation(line: 1189, column: 11, scope: !17715)
!17730 = !DILocation(line: 1189, column: 7, scope: !17715)
!17731 = !DILocation(line: 1189, column: 6, scope: !17692)
!17732 = !DILocation(line: 1190, column: 3, scope: !17713)
!17733 = !DILocation(line: 1190, column: 3, scope: !17722)
!17734 = !DILocation(line: 0, scope: !17722)
!17735 = !DILocation(line: 1190, column: 3, scope: !17723)
!17736 = !DILocation(line: 1193, column: 2, scope: !17714)
!17737 = !DILocation(line: 1191, column: 42, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17723, file: !2721, line: 1190, column: 54)
!17739 = !DILocation(line: 1191, column: 12, scope: !17738)
!17740 = !DILocation(line: 1191, column: 22, scope: !17738)
!17741 = distinct !{!17741, !17732, !17742}
!17742 = !DILocation(line: 1192, column: 3, scope: !17713)
!17743 = !DILocation(line: 1195, column: 17, scope: !17692)
!17744 = !DILocation(line: 1195, column: 37, scope: !17692)
!17745 = !DILocation(line: 1195, column: 2, scope: !17692)
!17746 = !DILocation(line: 1196, column: 1, scope: !17692)
!17747 = !DISubprogram(name: "z_rb_foreach_next", scope: !557, file: !557, line: 176, type: !17748, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17748 = !DISubroutineType(types: !17749)
!17749 = !{!2645, !17750, !17751}
!17750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17700, size: 32)
!17751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17716, size: 32)
!17752 = !DISubprogram(name: "rb_insert", scope: !557, file: !557, line: 105, type: !17753, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17753 = !DISubroutineType(types: !17754)
!17754 = !{null, !17750, !2645}
!17755 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2721, file: !2721, line: 1198, type: !17693, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17756)
!17756 = !{!17757, !17758}
!17757 = !DILocalVariable(name: "pq", arg: 1, scope: !17755, file: !2721, line: 1198, type: !17695)
!17758 = !DILocalVariable(name: "thread", arg: 2, scope: !17755, file: !2721, line: 1198, type: !2616)
!17759 = !DILocation(line: 0, scope: !17755)
!17760 = !DILocation(line: 1202, column: 17, scope: !17755)
!17761 = !DILocation(line: 1202, column: 37, scope: !17755)
!17762 = !DILocation(line: 1202, column: 2, scope: !17755)
!17763 = !DILocation(line: 1204, column: 16, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17755, file: !2721, line: 1204, column: 6)
!17765 = !DILocation(line: 1204, column: 7, scope: !17764)
!17766 = !DILocation(line: 1204, column: 6, scope: !17755)
!17767 = !DILocation(line: 1205, column: 7, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17764, file: !2721, line: 1204, column: 22)
!17769 = !DILocation(line: 1205, column: 22, scope: !17768)
!17770 = !DILocation(line: 1206, column: 2, scope: !17768)
!17771 = !DILocation(line: 1207, column: 1, scope: !17755)
!17772 = !DISubprogram(name: "rb_remove", scope: !557, file: !557, line: 110, type: !17753, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17773 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2721, file: !2721, line: 1209, type: !17774, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17776)
!17774 = !DISubroutineType(types: !17775)
!17775 = !{!2616, !17695}
!17776 = !{!17777, !17778, !17779}
!17777 = !DILocalVariable(name: "pq", arg: 1, scope: !17773, file: !2721, line: 1209, type: !17695)
!17778 = !DILocalVariable(name: "thread", scope: !17773, file: !2721, line: 1211, type: !2616)
!17779 = !DILocalVariable(name: "n", scope: !17773, file: !2721, line: 1212, type: !2645)
!17780 = !DILocation(line: 0, scope: !17773)
!17781 = !DILocation(line: 1212, column: 37, scope: !17773)
!17782 = !DILocation(line: 1212, column: 21, scope: !17773)
!17783 = !DILocation(line: 1217, column: 2, scope: !17773)
!17784 = distinct !DISubprogram(name: "rb_get_min", scope: !557, file: !557, line: 115, type: !17785, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17787)
!17785 = !DISubroutineType(types: !17786)
!17786 = !{!2645, !17750}
!17787 = !{!17788}
!17788 = !DILocalVariable(name: "tree", arg: 1, scope: !17784, file: !557, line: 115, type: !17750)
!17789 = !DILocation(line: 0, scope: !17784)
!17790 = !DILocation(line: 117, column: 9, scope: !17784)
!17791 = !DILocation(line: 117, column: 2, scope: !17784)
!17792 = !DISubprogram(name: "z_rb_get_minmax", scope: !557, file: !557, line: 100, type: !17793, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17793 = !DISubroutineType(types: !17794)
!17794 = !{!2645, !17750, !150}
!17795 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2721, file: !2721, line: 1246, type: !17796, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17806)
!17796 = !DISubroutineType(types: !17797)
!17797 = !{!2616, !17798}
!17798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17799, size: 32)
!17799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17697, line: 53, size: 2080, elements: !17800)
!17800 = !{!17801, !17805}
!17801 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17799, file: !17697, line: 54, baseType: !17802, size: 2048)
!17802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2652, size: 2048, elements: !17803)
!17803 = !{!17804}
!17804 = !DISubrange(count: 32)
!17805 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17799, file: !17697, line: 55, baseType: !32, size: 32, offset: 2048)
!17806 = !{!17807, !17808, !17809, !17810}
!17807 = !DILocalVariable(name: "pq", arg: 1, scope: !17795, file: !2721, line: 1246, type: !17798)
!17808 = !DILocalVariable(name: "thread", scope: !17795, file: !2721, line: 1252, type: !2616)
!17809 = !DILocalVariable(name: "l", scope: !17795, file: !2721, line: 1253, type: !16605)
!17810 = !DILocalVariable(name: "n", scope: !17795, file: !2721, line: 1254, type: !2717)
!17811 = !DILocation(line: 0, scope: !17795)
!17812 = !DILocation(line: 1248, column: 11, scope: !17813)
!17813 = distinct !DILexicalBlock(scope: !17795, file: !2721, line: 1248, column: 6)
!17814 = !DILocation(line: 1248, column: 7, scope: !17813)
!17815 = !DILocation(line: 1248, column: 6, scope: !17795)
!17816 = !DILocation(line: 1253, column: 31, scope: !17795)
!17817 = !DILocation(line: 1253, column: 20, scope: !17795)
!17818 = !DILocation(line: 1254, column: 19, scope: !17795)
!17819 = !DILocation(line: 1260, column: 1, scope: !17795)
!17820 = distinct !DISubprogram(name: "z_unpend_all", scope: !2721, file: !2721, line: 1262, type: !17821, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17823)
!17821 = !DISubroutineType(types: !17822)
!17822 = !{!125, !2647}
!17823 = !{!17824, !17825, !17826}
!17824 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17820, file: !2721, line: 1262, type: !2647)
!17825 = !DILocalVariable(name: "need_sched", scope: !17820, file: !2721, line: 1264, type: !125)
!17826 = !DILocalVariable(name: "thread", scope: !17820, file: !2721, line: 1265, type: !2616)
!17827 = !DILocation(line: 0, scope: !17820)
!17828 = !DILocation(line: 1267, column: 19, scope: !17820)
!17829 = !DILocation(line: 1267, column: 41, scope: !17820)
!17830 = !DILocation(line: 1267, column: 2, scope: !17820)
!17831 = !DILocation(line: 1268, column: 3, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17820, file: !2721, line: 1267, column: 50)
!17833 = !DILocation(line: 1269, column: 3, scope: !17832)
!17834 = distinct !{!17834, !17830, !17835}
!17835 = !DILocation(line: 1271, column: 2, scope: !17820)
!17836 = !DILocation(line: 1273, column: 2, scope: !17820)
!17837 = distinct !DISubprogram(name: "z_waitq_head", scope: !16000, file: !16000, line: 52, type: !17453, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17838)
!17838 = !{!17839}
!17839 = !DILocalVariable(name: "w", arg: 1, scope: !17837, file: !16000, line: 52, type: !2647)
!17840 = !DILocation(line: 0, scope: !17837)
!17841 = !DILocation(line: 54, column: 52, scope: !17837)
!17842 = !DILocation(line: 54, column: 28, scope: !17837)
!17843 = !DILocation(line: 54, column: 9, scope: !17837)
!17844 = !DILocation(line: 54, column: 2, scope: !17837)
!17845 = distinct !DISubprogram(name: "init_ready_q", scope: !2721, file: !2721, line: 1276, type: !17846, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17853)
!17846 = !DISubroutineType(types: !17847)
!17847 = !{null, !17848}
!17848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17849, size: 32)
!17849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !17850)
!17850 = !{!17851, !17852}
!17851 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17849, file: !567, line: 86, baseType: !2616, size: 32)
!17852 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17849, file: !567, line: 90, baseType: !2652, size: 64, offset: 32)
!17853 = !{!17854}
!17854 = !DILocalVariable(name: "rq", arg: 1, scope: !17845, file: !2721, line: 1276, type: !17848)
!17855 = !DILocation(line: 0, scope: !17845)
!17856 = !DILocation(line: 1289, column: 22, scope: !17845)
!17857 = !DILocation(line: 1289, column: 2, scope: !17845)
!17858 = !DILocation(line: 1291, column: 1, scope: !17845)
!17859 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !17860, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17862)
!17860 = !DISubroutineType(types: !17861)
!17861 = !{null, !16605}
!17862 = !{!17863}
!17863 = !DILocalVariable(name: "list", arg: 1, scope: !17859, file: !541, line: 197, type: !16605)
!17864 = !DILocation(line: 0, scope: !17859)
!17865 = !DILocation(line: 199, column: 8, scope: !17859)
!17866 = !DILocation(line: 199, column: 13, scope: !17859)
!17867 = !DILocation(line: 200, column: 8, scope: !17859)
!17868 = !DILocation(line: 200, column: 13, scope: !17859)
!17869 = !DILocation(line: 201, column: 1, scope: !17859)
!17870 = distinct !DISubprogram(name: "z_sched_init", scope: !2721, file: !2721, line: 1293, type: !3363, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17871 = !DILocation(line: 1302, column: 2, scope: !17870)
!17872 = !DILocation(line: 1306, column: 2, scope: !17870)
!17873 = !DILocation(line: 1309, column: 1, scope: !17870)
!17874 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2721, file: !2721, line: 1311, type: !17875, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17878)
!17875 = !DISubroutineType(types: !17876)
!17876 = !{!125, !17877}
!17877 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2616)
!17878 = !{!17879}
!17879 = !DILocalVariable(name: "thread", arg: 1, scope: !17874, file: !2721, line: 1311, type: !17877)
!17880 = !DILocation(line: 0, scope: !17874)
!17881 = !DILocation(line: 1313, column: 22, scope: !17874)
!17882 = !DILocation(line: 1313, column: 9, scope: !17874)
!17883 = !DILocation(line: 1313, column: 2, scope: !17874)
!17884 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2721, file: !2721, line: 1325, type: !17885, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17887)
!17885 = !DISubroutineType(types: !17886)
!17886 = !{null, !17877, !125}
!17887 = !{!17888, !17889, !17890}
!17888 = !DILocalVariable(name: "thread", arg: 1, scope: !17884, file: !2721, line: 1325, type: !17877)
!17889 = !DILocalVariable(name: "prio", arg: 2, scope: !17884, file: !2721, line: 1325, type: !125)
!17890 = !DILocalVariable(name: "th", scope: !17884, file: !2721, line: 1334, type: !2616)
!17891 = !DILocation(line: 0, scope: !17884)
!17892 = !DILocation(line: 1336, column: 2, scope: !17884)
!17893 = !DILocation(line: 1337, column: 1, scope: !17884)
!17894 = distinct !DISubprogram(name: "k_can_yield", scope: !2721, file: !2721, line: 1384, type: !9391, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17895 = !DILocation(line: 1386, column: 11, scope: !17894)
!17896 = !DILocation(line: 1386, column: 29, scope: !17894)
!17897 = !DILocation(line: 1386, column: 32, scope: !17894)
!17898 = !DILocation(line: 1386, column: 46, scope: !17894)
!17899 = !DILocation(line: 1387, column: 28, scope: !17894)
!17900 = !DILocation(line: 1387, column: 4, scope: !17894)
!17901 = !DILocation(line: 1386, column: 2, scope: !17894)
!17902 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !624, file: !624, line: 989, type: !9391, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!17903 = !DILocation(line: 993, column: 10, scope: !17902)
!17904 = !DILocation(line: 993, column: 2, scope: !17902)
!17905 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2721, file: !2721, line: 1390, type: !3363, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17906)
!17906 = !{!17907}
!17907 = !DILocalVariable(name: "key", scope: !17905, file: !2721, line: 1396, type: !16394)
!17908 = !DILocation(line: 0, scope: !16402, inlinedAt: !17909)
!17909 = distinct !DILocation(line: 1396, column: 25, scope: !17905)
!17910 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !17911)
!17911 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !17909)
!17912 = !DILocation(line: 0, scope: !16411, inlinedAt: !17911)
!17913 = !DILocation(line: 0, scope: !17905)
!17914 = !DILocation(line: 1400, column: 18, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17916, file: !2721, line: 1399, column: 36)
!17916 = distinct !DILexicalBlock(scope: !17905, file: !2721, line: 1398, column: 6)
!17917 = !DILocation(line: 0, scope: !16571, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 1400, column: 3, scope: !17915)
!17919 = !DILocation(line: 266, column: 15, scope: !16571, inlinedAt: !17918)
!17920 = !DILocation(line: 266, column: 28, scope: !16571, inlinedAt: !17918)
!17921 = !DILocation(line: 0, scope: !16579, inlinedAt: !17922)
!17922 = distinct !DILocation(line: 268, column: 3, scope: !16583, inlinedAt: !17918)
!17923 = !DILocation(line: 234, column: 2, scope: !16579, inlinedAt: !17922)
!17924 = !DILocation(line: 1402, column: 15, scope: !17905)
!17925 = !DILocation(line: 0, scope: !16588, inlinedAt: !17926)
!17926 = distinct !DILocation(line: 1402, column: 2, scope: !17905)
!17927 = !DILocation(line: 252, column: 15, scope: !16588, inlinedAt: !17926)
!17928 = !DILocation(line: 252, column: 28, scope: !16588, inlinedAt: !17926)
!17929 = !DILocation(line: 0, scope: !16595, inlinedAt: !17930)
!17930 = distinct !DILocation(line: 254, column: 3, scope: !16599, inlinedAt: !17926)
!17931 = !DILocation(line: 0, scope: !16602, inlinedAt: !17932)
!17932 = distinct !DILocation(line: 229, column: 2, scope: !16595, inlinedAt: !17930)
!17933 = !DILocation(line: 188, column: 2, scope: !16612, inlinedAt: !17932)
!17934 = !DILocation(line: 188, column: 2, scope: !16614, inlinedAt: !17932)
!17935 = !DILocation(line: 0, scope: !16612, inlinedAt: !17932)
!17936 = !DILocation(line: 189, column: 7, scope: !16617, inlinedAt: !17932)
!17937 = !DILocation(line: 189, column: 35, scope: !16617, inlinedAt: !17932)
!17938 = !DILocation(line: 189, column: 7, scope: !16618, inlinedAt: !17932)
!17939 = !DILocation(line: 191, column: 21, scope: !16622, inlinedAt: !17932)
!17940 = !DILocation(line: 190, column: 4, scope: !16622, inlinedAt: !17932)
!17941 = !DILocation(line: 192, column: 4, scope: !16622, inlinedAt: !17932)
!17942 = distinct !{!17942, !17933, !17943}
!17943 = !DILocation(line: 194, column: 2, scope: !16612, inlinedAt: !17932)
!17944 = !DILocation(line: 196, column: 37, scope: !16602, inlinedAt: !17932)
!17945 = !DILocation(line: 196, column: 2, scope: !16602, inlinedAt: !17932)
!17946 = !DILocation(line: 197, column: 1, scope: !16602, inlinedAt: !17932)
!17947 = !DILocation(line: 1403, column: 2, scope: !17905)
!17948 = !DILocation(line: 0, scope: !17013, inlinedAt: !17949)
!17949 = distinct !DILocation(line: 1404, column: 2, scope: !17905)
!17950 = !DILocation(line: 196, column: 9, scope: !17013, inlinedAt: !17949)
!17951 = !DILocation(line: 1405, column: 1, scope: !17905)
!17952 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2721, file: !2721, line: 1459, type: !17953, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17955)
!17953 = !DISubroutineType(types: !17954)
!17954 = !{!917, !17193}
!17955 = !{!17956, !17957, !17958}
!17956 = !DILocalVariable(name: "timeout", arg: 1, scope: !17952, file: !2721, line: 1459, type: !17193)
!17957 = !DILocalVariable(name: "ticks", scope: !17952, file: !2721, line: 1461, type: !1966)
!17958 = !DILocalVariable(name: "ret", scope: !17952, file: !2721, line: 1480, type: !917)
!17959 = !DILocation(line: 0, scope: !17952)
!17960 = !DILocation(line: 1468, column: 6, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17952, file: !2721, line: 1468, column: 6)
!17962 = !DILocation(line: 1468, column: 6, scope: !17952)
!17963 = !DILocation(line: 1469, column: 20, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17961, file: !2721, line: 1468, column: 40)
!17965 = !DILocation(line: 1469, column: 3, scope: !17964)
!17966 = !DILocation(line: 1473, column: 3, scope: !17964)
!17967 = !DILocation(line: 1478, column: 10, scope: !17952)
!17968 = !DILocation(line: 1480, column: 16, scope: !17952)
!17969 = !DILocation(line: 1485, column: 1, scope: !17952)
!17970 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5433, file: !5433, line: 310, type: !17971, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17973)
!17971 = !DISubroutineType(types: !17972)
!17972 = !{null, !17877}
!17973 = !{!17974}
!17974 = !DILocalVariable(name: "thread", arg: 1, scope: !17970, file: !5433, line: 310, type: !17877)
!17975 = !DILocation(line: 0, scope: !17970)
!17976 = !DILocation(line: 319, column: 2, scope: !17977)
!17977 = distinct !DILexicalBlock(scope: !17970, file: !5433, line: 319, column: 2)
!17978 = !{i64 2155105954}
!17979 = !DILocation(line: 320, column: 2, scope: !17970)
!17980 = !DILocation(line: 321, column: 1, scope: !17970)
!17981 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2721, file: !2721, line: 1415, type: !17982, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !17984)
!17982 = !DISubroutineType(types: !17983)
!17983 = !{!917, !1966}
!17984 = !{!17985, !17986, !17987, !17988}
!17985 = !DILocalVariable(name: "ticks", arg: 1, scope: !17981, file: !2721, line: 1415, type: !1966)
!17986 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17981, file: !2721, line: 1418, type: !208)
!17987 = !DILocalVariable(name: "timeout", scope: !17981, file: !2721, line: 1430, type: !17193)
!17988 = !DILocalVariable(name: "key", scope: !17981, file: !2721, line: 1437, type: !16394)
!17989 = !DILocation(line: 0, scope: !17981)
!17990 = !DILocation(line: 1425, column: 12, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !17981, file: !2721, line: 1425, column: 6)
!17992 = !DILocation(line: 1425, column: 6, scope: !17981)
!17993 = !DILocation(line: 1426, column: 3, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17991, file: !2721, line: 1425, column: 18)
!17995 = !DILocation(line: 1427, column: 3, scope: !17994)
!17996 = !DILocation(line: 1431, column: 24, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17981, file: !2721, line: 1431, column: 6)
!17998 = !DILocation(line: 1431, column: 6, scope: !17981)
!17999 = !DILocation(line: 1432, column: 35, scope: !18000)
!18000 = distinct !DILexicalBlock(scope: !17997, file: !2721, line: 1431, column: 30)
!18001 = !DILocation(line: 1432, column: 27, scope: !18000)
!18002 = !DILocation(line: 1433, column: 2, scope: !18000)
!18003 = !DILocation(line: 1434, column: 27, scope: !18004)
!18004 = distinct !DILexicalBlock(scope: !17997, file: !2721, line: 1433, column: 9)
!18005 = !DILocation(line: 0, scope: !17997)
!18006 = !DILocation(line: 0, scope: !16402, inlinedAt: !18007)
!18007 = distinct !DILocation(line: 1437, column: 25, scope: !17981)
!18008 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18009)
!18009 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18007)
!18010 = !DILocation(line: 0, scope: !16411, inlinedAt: !18009)
!18011 = !DILocation(line: 1440, column: 20, scope: !17981)
!18012 = !DILocation(line: 1440, column: 18, scope: !17981)
!18013 = !DILocation(line: 1442, column: 2, scope: !17981)
!18014 = !DILocation(line: 1443, column: 23, scope: !17981)
!18015 = !DILocation(line: 1443, column: 2, scope: !17981)
!18016 = !DILocation(line: 1444, column: 29, scope: !17981)
!18017 = !DILocation(line: 1444, column: 2, scope: !17981)
!18018 = !DILocation(line: 0, scope: !17013, inlinedAt: !18019)
!18019 = distinct !DILocation(line: 1446, column: 8, scope: !17981)
!18020 = !DILocation(line: 196, column: 9, scope: !17013, inlinedAt: !18019)
!18021 = !DILocation(line: 1450, column: 10, scope: !17981)
!18022 = !DILocation(line: 1450, column: 45, scope: !17981)
!18023 = !DILocation(line: 1450, column: 43, scope: !17981)
!18024 = !DILocation(line: 1451, column: 6, scope: !17981)
!18025 = !DILocation(line: 1457, column: 1, scope: !17981)
!18026 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !16235, file: !16235, line: 1103, type: !16236, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18027)
!18027 = !{!18028}
!18028 = !DILocalVariable(name: "t", arg: 1, scope: !18026, file: !16235, line: 1103, type: !1813)
!18029 = !DILocation(line: 0, scope: !18026)
!18030 = !DILocation(line: 0, scope: !16449, inlinedAt: !18031)
!18031 = distinct !DILocation(line: 1106, column: 9, scope: !18026)
!18032 = !DILocation(line: 139, column: 13, scope: !18033, inlinedAt: !18031)
!18033 = distinct !DILexicalBlock(scope: !18034, file: !16235, line: 138, column: 10)
!18034 = distinct !DILexicalBlock(scope: !18035, file: !16235, line: 136, column: 7)
!18035 = distinct !DILexicalBlock(scope: !16470, file: !16235, line: 134, column: 17)
!18036 = !DILocation(line: 1106, column: 2, scope: !18026)
!18037 = distinct !DISubprogram(name: "k_yield", scope: !5433, file: !5433, line: 140, type: !3363, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!18038 = !DILocation(line: 148, column: 2, scope: !18039)
!18039 = distinct !DILexicalBlock(scope: !18037, file: !5433, line: 148, column: 2)
!18040 = !{i64 2155105274}
!18041 = !DILocation(line: 149, column: 2, scope: !18037)
!18042 = !DILocation(line: 150, column: 1, scope: !18037)
!18043 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2721, file: !2721, line: 1495, type: !18044, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18046)
!18044 = !DISubroutineType(types: !18045)
!18045 = !{!917, !125}
!18046 = !{!18047, !18048}
!18047 = !DILocalVariable(name: "us", arg: 1, scope: !18043, file: !2721, line: 1495, type: !125)
!18048 = !DILocalVariable(name: "ticks", scope: !18043, file: !2721, line: 1497, type: !917)
!18049 = !DILocation(line: 0, scope: !18043)
!18050 = !DILocation(line: 1501, column: 31, scope: !18043)
!18051 = !DILocation(line: 1501, column: 10, scope: !18043)
!18052 = !DILocation(line: 1502, column: 23, scope: !18043)
!18053 = !DILocation(line: 1502, column: 10, scope: !18043)
!18054 = !DILocation(line: 1506, column: 31, scope: !18043)
!18055 = !DILocation(line: 1506, column: 9, scope: !18043)
!18056 = !DILocation(line: 1506, column: 2, scope: !18043)
!18057 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !16235, file: !16235, line: 571, type: !16236, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18058)
!18058 = !{!18059}
!18059 = !DILocalVariable(name: "t", arg: 1, scope: !18057, file: !16235, line: 571, type: !1813)
!18060 = !DILocation(line: 0, scope: !18057)
!18061 = !DILocation(line: 0, scope: !16449, inlinedAt: !18062)
!18062 = distinct !DILocation(line: 574, column: 9, scope: !18057)
!18063 = !DILocation(line: 135, column: 5, scope: !18035, inlinedAt: !18062)
!18064 = !DILocation(line: 139, column: 13, scope: !18033, inlinedAt: !18062)
!18065 = !DILocation(line: 574, column: 2, scope: !18057)
!18066 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !16235, file: !16235, line: 1187, type: !16236, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18067)
!18067 = !{!18068}
!18068 = !DILocalVariable(name: "t", arg: 1, scope: !18066, file: !16235, line: 1187, type: !1813)
!18069 = !DILocation(line: 0, scope: !18066)
!18070 = !DILocation(line: 0, scope: !16449, inlinedAt: !18071)
!18071 = distinct !DILocation(line: 1190, column: 9, scope: !18066)
!18072 = !DILocation(line: 145, column: 13, scope: !18073, inlinedAt: !18071)
!18073 = distinct !DILexicalBlock(scope: !16467, file: !16235, line: 144, column: 10)
!18074 = !DILocation(line: 1190, column: 2, scope: !18066)
!18075 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2721, file: !2721, line: 1517, type: !17971, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18076)
!18076 = !{!18077}
!18077 = !DILocalVariable(name: "thread", arg: 1, scope: !18075, file: !2721, line: 1517, type: !17877)
!18078 = !DILocation(line: 0, scope: !18075)
!18079 = !DILocation(line: 1521, column: 6, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !18075, file: !2721, line: 1521, column: 6)
!18081 = !DILocation(line: 1521, column: 6, scope: !18075)
!18082 = !DILocation(line: 1525, column: 6, scope: !18083)
!18083 = distinct !DILexicalBlock(scope: !18075, file: !2721, line: 1525, column: 6)
!18084 = !DILocation(line: 1525, column: 37, scope: !18083)
!18085 = !DILocation(line: 1525, column: 6, scope: !18075)
!18086 = !DILocation(line: 1527, column: 20, scope: !18087)
!18087 = distinct !DILexicalBlock(scope: !18088, file: !2721, line: 1527, column: 7)
!18088 = distinct !DILexicalBlock(scope: !18083, file: !2721, line: 1525, column: 42)
!18089 = !DILocation(line: 1527, column: 33, scope: !18087)
!18090 = !DILocation(line: 1527, column: 7, scope: !18088)
!18091 = !DILocation(line: 1532, column: 2, scope: !18075)
!18092 = !DILocation(line: 1533, column: 2, scope: !18075)
!18093 = !DILocation(line: 1031, column: 3, scope: !17046, inlinedAt: !18094)
!18094 = distinct !DILocation(line: 48, column: 10, scope: !17050, inlinedAt: !18095)
!18095 = distinct !DILocation(line: 1537, column: 7, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18075, file: !2721, line: 1537, column: 6)
!18097 = !DILocation(line: 0, scope: !17046, inlinedAt: !18094)
!18098 = !DILocation(line: 48, column: 9, scope: !17050, inlinedAt: !18095)
!18099 = !DILocation(line: 1537, column: 6, scope: !18075)
!18100 = !DILocation(line: 1538, column: 3, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18096, file: !2721, line: 1537, column: 25)
!18102 = !DILocation(line: 1539, column: 2, scope: !18101)
!18103 = !DILocation(line: 1540, column: 1, scope: !18075)
!18104 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15674, file: !15674, line: 101, type: !16520, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18105)
!18105 = !{!18106}
!18106 = !DILocalVariable(name: "thread", arg: 1, scope: !18104, file: !15674, line: 101, type: !2616)
!18107 = !DILocation(line: 0, scope: !18104)
!18108 = !DILocation(line: 103, column: 23, scope: !18104)
!18109 = !DILocation(line: 103, column: 36, scope: !18104)
!18110 = !DILocation(line: 103, column: 55, scope: !18104)
!18111 = !DILocation(line: 103, column: 2, scope: !18104)
!18112 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2721, file: !2721, line: 1567, type: !18113, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18115)
!18113 = !DISubroutineType(types: !18114)
!18114 = !{!17877}
!18115 = !{!18116}
!18116 = !DILocalVariable(name: "ret", scope: !18112, file: !2721, line: 1577, type: !17877)
!18117 = !DILocation(line: 1577, column: 30, scope: !18112)
!18118 = !DILocation(line: 0, scope: !18112)
!18119 = !DILocation(line: 1582, column: 2, scope: !18112)
!18120 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2721, file: !2721, line: 1593, type: !9680, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !639)
!18121 = !DILocation(line: 1031, column: 3, scope: !17046, inlinedAt: !18122)
!18122 = distinct !DILocation(line: 48, column: 10, scope: !17050, inlinedAt: !18123)
!18123 = distinct !DILocation(line: 1595, column: 10, scope: !18120)
!18124 = !DILocation(line: 0, scope: !17046, inlinedAt: !18122)
!18125 = !DILocation(line: 48, column: 9, scope: !17050, inlinedAt: !18123)
!18126 = !DILocation(line: 1595, column: 27, scope: !18120)
!18127 = !DILocation(line: 1595, column: 41, scope: !18120)
!18128 = !DILocation(line: 1595, column: 30, scope: !18120)
!18129 = !DILocation(line: 1595, column: 2, scope: !18120)
!18130 = distinct !DISubprogram(name: "z_thread_abort", scope: !2721, file: !2721, line: 1725, type: !16360, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18131)
!18131 = !{!18132, !18133}
!18132 = !DILocalVariable(name: "thread", arg: 1, scope: !18130, file: !2721, line: 1725, type: !2616)
!18133 = !DILocalVariable(name: "key", scope: !18130, file: !2721, line: 1727, type: !16394)
!18134 = !DILocation(line: 0, scope: !18130)
!18135 = !DILocation(line: 0, scope: !16402, inlinedAt: !18136)
!18136 = distinct !DILocation(line: 1727, column: 25, scope: !18130)
!18137 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18138)
!18138 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18136)
!18139 = !DILocation(line: 0, scope: !16411, inlinedAt: !18138)
!18140 = !DILocation(line: 1729, column: 20, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !18130, file: !2721, line: 1729, column: 6)
!18142 = !DILocation(line: 1729, column: 33, scope: !18141)
!18143 = !DILocation(line: 1729, column: 48, scope: !18141)
!18144 = !DILocation(line: 1729, column: 6, scope: !18130)
!18145 = !DILocation(line: 0, scope: !16429, inlinedAt: !18146)
!18146 = distinct !DILocation(line: 1730, column: 3, scope: !18147)
!18147 = distinct !DILexicalBlock(scope: !18141, file: !2721, line: 1729, column: 54)
!18148 = !DILocation(line: 0, scope: !16437, inlinedAt: !18149)
!18149 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !18146)
!18150 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !18149)
!18151 = !DILocation(line: 1732, column: 3, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18147, file: !2721, line: 1732, column: 3)
!18153 = !{i64 2155841279, i64 2155841295, i64 2155841321, i64 2155841349, i64 2155841369}
!18154 = !DILocation(line: 1733, column: 3, scope: !18147)
!18155 = !DILocation(line: 1736, column: 20, scope: !18156)
!18156 = distinct !DILexicalBlock(scope: !18130, file: !2721, line: 1736, column: 6)
!18157 = !DILocation(line: 1736, column: 33, scope: !18156)
!18158 = !DILocation(line: 1736, column: 49, scope: !18156)
!18159 = !DILocation(line: 1736, column: 6, scope: !18130)
!18160 = !DILocation(line: 0, scope: !16429, inlinedAt: !18161)
!18161 = distinct !DILocation(line: 1737, column: 3, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18156, file: !2721, line: 1736, column: 56)
!18163 = !DILocation(line: 0, scope: !16437, inlinedAt: !18164)
!18164 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !18161)
!18165 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !18164)
!18166 = !DILocation(line: 1738, column: 3, scope: !18162)
!18167 = !DILocation(line: 1775, column: 2, scope: !18130)
!18168 = !DILocation(line: 1776, column: 16, scope: !18169)
!18169 = distinct !DILexicalBlock(scope: !18130, file: !2721, line: 1776, column: 6)
!18170 = !DILocation(line: 1776, column: 13, scope: !18169)
!18171 = !DILocation(line: 1776, column: 25, scope: !18169)
!18172 = !DILocation(line: 1031, column: 3, scope: !17046, inlinedAt: !18173)
!18173 = distinct !DILocation(line: 48, column: 10, scope: !17050, inlinedAt: !18174)
!18174 = distinct !DILocation(line: 1776, column: 29, scope: !18169)
!18175 = !DILocation(line: 0, scope: !17046, inlinedAt: !18173)
!18176 = !DILocation(line: 48, column: 9, scope: !17050, inlinedAt: !18174)
!18177 = !DILocation(line: 1776, column: 6, scope: !18130)
!18178 = !DILocation(line: 0, scope: !17013, inlinedAt: !18179)
!18179 = distinct !DILocation(line: 1777, column: 3, scope: !18180)
!18180 = distinct !DILexicalBlock(scope: !18169, file: !2721, line: 1776, column: 47)
!18181 = !DILocation(line: 196, column: 9, scope: !17013, inlinedAt: !18179)
!18182 = !DILocation(line: 1779, column: 2, scope: !18180)
!18183 = !DILocation(line: 0, scope: !16429, inlinedAt: !18184)
!18184 = distinct !DILocation(line: 1780, column: 2, scope: !18130)
!18185 = !DILocation(line: 0, scope: !16437, inlinedAt: !18186)
!18186 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !18184)
!18187 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !18186)
!18188 = !DILocation(line: 1781, column: 1, scope: !18130)
!18189 = distinct !DISubprogram(name: "end_thread", scope: !2721, file: !2721, line: 1690, type: !16360, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18190)
!18190 = !{!18191}
!18191 = !DILocalVariable(name: "thread", arg: 1, scope: !18189, file: !2721, line: 1690, type: !2616)
!18192 = !DILocation(line: 0, scope: !18189)
!18193 = !DILocation(line: 1695, column: 20, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18189, file: !2721, line: 1695, column: 6)
!18195 = !DILocation(line: 1695, column: 33, scope: !18194)
!18196 = !DILocation(line: 1695, column: 49, scope: !18194)
!18197 = !DILocation(line: 1695, column: 6, scope: !18189)
!18198 = !DILocation(line: 1697, column: 29, scope: !18199)
!18199 = distinct !DILexicalBlock(scope: !18194, file: !2721, line: 1695, column: 56)
!18200 = !DILocation(line: 1698, column: 7, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18199, file: !2721, line: 1698, column: 7)
!18202 = !DILocation(line: 1698, column: 7, scope: !18199)
!18203 = !DILocation(line: 0, scope: !16571, inlinedAt: !18204)
!18204 = distinct !DILocation(line: 1699, column: 4, scope: !18205)
!18205 = distinct !DILexicalBlock(scope: !18201, file: !2721, line: 1698, column: 35)
!18206 = !DILocation(line: 266, column: 28, scope: !16571, inlinedAt: !18204)
!18207 = !DILocation(line: 0, scope: !16579, inlinedAt: !18208)
!18208 = distinct !DILocation(line: 268, column: 3, scope: !16583, inlinedAt: !18204)
!18209 = !DILocation(line: 234, column: 2, scope: !16579, inlinedAt: !18208)
!18210 = !DILocation(line: 1700, column: 3, scope: !18205)
!18211 = !DILocation(line: 1701, column: 20, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18199, file: !2721, line: 1701, column: 7)
!18213 = !DILocation(line: 1701, column: 30, scope: !18212)
!18214 = !DILocation(line: 1701, column: 7, scope: !18199)
!18215 = !DILocation(line: 1702, column: 4, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18212, file: !2721, line: 1701, column: 39)
!18217 = !DILocation(line: 1703, column: 3, scope: !18216)
!18218 = !DILocation(line: 1704, column: 9, scope: !18199)
!18219 = !DILocation(line: 1705, column: 23, scope: !18199)
!18220 = !DILocation(line: 1705, column: 3, scope: !18199)
!18221 = !DILocation(line: 1706, column: 3, scope: !18199)
!18222 = !DILocation(line: 1722, column: 2, scope: !18199)
!18223 = !DILocation(line: 1723, column: 1, scope: !18189)
!18224 = distinct !DISubprogram(name: "unpend_all", scope: !2721, file: !2721, line: 1674, type: !18225, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18227)
!18225 = !DISubroutineType(types: !18226)
!18226 = !{null, !2647}
!18227 = !{!18228, !18229}
!18228 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18224, file: !2721, line: 1674, type: !2647)
!18229 = !DILocalVariable(name: "thread", scope: !18224, file: !2721, line: 1676, type: !2616)
!18230 = !DILocation(line: 0, scope: !18224)
!18231 = !DILocation(line: 1678, column: 19, scope: !18224)
!18232 = !DILocation(line: 1678, column: 41, scope: !18224)
!18233 = !DILocation(line: 1678, column: 2, scope: !18224)
!18234 = !DILocation(line: 1679, column: 3, scope: !18235)
!18235 = distinct !DILexicalBlock(scope: !18224, file: !2721, line: 1678, column: 50)
!18236 = !DILocation(line: 1680, column: 9, scope: !18235)
!18237 = !DILocalVariable(name: "thread", arg: 1, scope: !18238, file: !15694, line: 65, type: !2616)
!18238 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15694, file: !15694, line: 65, type: !18239, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18241)
!18239 = !DISubroutineType(types: !18240)
!18240 = !{null, !2616, !32}
!18241 = !{!18237, !18242}
!18242 = !DILocalVariable(name: "value", arg: 2, scope: !18238, file: !15694, line: 65, type: !32)
!18243 = !DILocation(line: 0, scope: !18238, inlinedAt: !18244)
!18244 = distinct !DILocation(line: 1681, column: 3, scope: !18235)
!18245 = !DILocation(line: 67, column: 15, scope: !18238, inlinedAt: !18244)
!18246 = !DILocation(line: 67, column: 33, scope: !18238, inlinedAt: !18244)
!18247 = !DILocation(line: 1682, column: 3, scope: !18235)
!18248 = distinct !{!18248, !18233, !18249}
!18249 = !DILocation(line: 1683, column: 2, scope: !18224)
!18250 = !DILocation(line: 1684, column: 1, scope: !18224)
!18251 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2721, file: !2721, line: 1794, type: !18252, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18254)
!18252 = !DISubroutineType(types: !18253)
!18253 = !{!125, !2616, !17193}
!18254 = !{!18255, !18256, !18257, !18258}
!18255 = !DILocalVariable(name: "thread", arg: 1, scope: !18251, file: !2721, line: 1794, type: !2616)
!18256 = !DILocalVariable(name: "timeout", arg: 2, scope: !18251, file: !2721, line: 1794, type: !17193)
!18257 = !DILocalVariable(name: "key", scope: !18251, file: !2721, line: 1796, type: !16394)
!18258 = !DILocalVariable(name: "ret", scope: !18251, file: !2721, line: 1797, type: !125)
!18259 = !DILocation(line: 0, scope: !18251)
!18260 = !DILocation(line: 0, scope: !16402, inlinedAt: !18261)
!18261 = distinct !DILocation(line: 1796, column: 25, scope: !18251)
!18262 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18263)
!18263 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18261)
!18264 = !DILocation(line: 0, scope: !16411, inlinedAt: !18263)
!18265 = !DILocation(line: 1801, column: 20, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18251, file: !2721, line: 1801, column: 6)
!18267 = !DILocation(line: 1801, column: 33, scope: !18266)
!18268 = !DILocation(line: 1801, column: 49, scope: !18266)
!18269 = !DILocation(line: 1801, column: 6, scope: !18251)
!18270 = !DILocation(line: 1803, column: 13, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !18266, file: !2721, line: 1803, column: 13)
!18272 = !DILocation(line: 1803, column: 13, scope: !18266)
!18273 = !DILocation(line: 1805, column: 24, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !18271, file: !2721, line: 1805, column: 13)
!18275 = !DILocation(line: 1805, column: 21, scope: !18274)
!18276 = !DILocation(line: 1805, column: 34, scope: !18274)
!18277 = !DILocation(line: 1806, column: 20, scope: !18274)
!18278 = !DILocation(line: 1806, column: 44, scope: !18274)
!18279 = !DILocation(line: 1806, column: 30, scope: !18274)
!18280 = !DILocation(line: 1805, column: 13, scope: !18271)
!18281 = !DILocation(line: 1810, column: 42, scope: !18282)
!18282 = distinct !DILexicalBlock(scope: !18274, file: !2721, line: 1808, column: 9)
!18283 = !DILocation(line: 1810, column: 3, scope: !18282)
!18284 = !DILocation(line: 1811, column: 22, scope: !18282)
!18285 = !DILocation(line: 1811, column: 3, scope: !18282)
!18286 = !DILocation(line: 0, scope: !17013, inlinedAt: !18287)
!18287 = distinct !DILocation(line: 1814, column: 9, scope: !18282)
!18288 = !DILocation(line: 196, column: 9, scope: !17013, inlinedAt: !18287)
!18289 = !DILocation(line: 1817, column: 3, scope: !18282)
!18290 = !DILocation(line: 0, scope: !18266)
!18291 = !DILocation(line: 0, scope: !16429, inlinedAt: !18292)
!18292 = distinct !DILocation(line: 1822, column: 2, scope: !18251)
!18293 = !DILocation(line: 0, scope: !16437, inlinedAt: !18294)
!18294 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !18292)
!18295 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !18294)
!18296 = !DILocation(line: 1823, column: 2, scope: !18251)
!18297 = !DILocation(line: 1824, column: 1, scope: !18251)
!18298 = distinct !DISubprogram(name: "z_sched_wake", scope: !2721, file: !2721, line: 1882, type: !18299, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18301)
!18299 = !DISubroutineType(types: !18300)
!18300 = !{!153, !2647, !125, !124}
!18301 = !{!18302, !18303, !18304, !18305, !18306, !18307, !18309}
!18302 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18298, file: !2721, line: 1882, type: !2647)
!18303 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18298, file: !2721, line: 1882, type: !125)
!18304 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18298, file: !2721, line: 1882, type: !124)
!18305 = !DILocalVariable(name: "thread", scope: !18298, file: !2721, line: 1884, type: !2616)
!18306 = !DILocalVariable(name: "ret", scope: !18298, file: !2721, line: 1885, type: !153)
!18307 = !DILocalVariable(name: "__i", scope: !18308, file: !2721, line: 1887, type: !16394)
!18308 = distinct !DILexicalBlock(scope: !18298, file: !2721, line: 1887, column: 2)
!18309 = !DILocalVariable(name: "__key", scope: !18308, file: !2721, line: 1887, type: !16394)
!18310 = !DILocation(line: 0, scope: !18298)
!18311 = !DILocation(line: 0, scope: !18308)
!18312 = !DILocation(line: 0, scope: !16402, inlinedAt: !18313)
!18313 = distinct !DILocation(line: 1887, column: 2, scope: !18308)
!18314 = !DILocation(line: 55, column: 2, scope: !16411, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 145, column: 10, scope: !16402, inlinedAt: !18313)
!18316 = !DILocation(line: 0, scope: !16411, inlinedAt: !18315)
!18317 = !DILocation(line: 1888, column: 12, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !18319, file: !2721, line: 1887, column: 26)
!18319 = distinct !DILexicalBlock(scope: !18308, file: !2721, line: 1887, column: 2)
!18320 = !DILocation(line: 1890, column: 14, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18318, file: !2721, line: 1890, column: 7)
!18322 = !DILocation(line: 1890, column: 7, scope: !18318)
!18323 = !DILocalVariable(name: "thread", arg: 1, scope: !18324, file: !18325, line: 134, type: !2616)
!18324 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !18325, file: !18325, line: 134, type: !18326, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18328)
!18325 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18326 = !DISubroutineType(types: !18327)
!18327 = !{null, !2616, !32, !124}
!18328 = !{!18323, !18329, !18330}
!18329 = !DILocalVariable(name: "value", arg: 2, scope: !18324, file: !18325, line: 135, type: !32)
!18330 = !DILocalVariable(name: "data", arg: 3, scope: !18324, file: !18325, line: 136, type: !124)
!18331 = !DILocation(line: 0, scope: !18324, inlinedAt: !18332)
!18332 = distinct !DILocation(line: 1891, column: 4, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18321, file: !2721, line: 1890, column: 23)
!18334 = !DILocation(line: 0, scope: !18238, inlinedAt: !18335)
!18335 = distinct !DILocation(line: 138, column: 2, scope: !18324, inlinedAt: !18332)
!18336 = !DILocation(line: 67, column: 15, scope: !18238, inlinedAt: !18335)
!18337 = !DILocation(line: 67, column: 33, scope: !18238, inlinedAt: !18335)
!18338 = !DILocation(line: 139, column: 15, scope: !18324, inlinedAt: !18332)
!18339 = !DILocation(line: 139, column: 25, scope: !18324, inlinedAt: !18332)
!18340 = !DILocation(line: 1894, column: 4, scope: !18333)
!18341 = !DILocation(line: 1895, column: 10, scope: !18333)
!18342 = !DILocation(line: 1896, column: 4, scope: !18333)
!18343 = !DILocation(line: 1898, column: 3, scope: !18333)
!18344 = !DILocation(line: 0, scope: !16429, inlinedAt: !18345)
!18345 = distinct !DILocation(line: 1887, column: 2, scope: !18319)
!18346 = !DILocation(line: 0, scope: !16437, inlinedAt: !18347)
!18347 = distinct !DILocation(line: 215, column: 2, scope: !16429, inlinedAt: !18345)
!18348 = !DILocation(line: 95, column: 2, scope: !16437, inlinedAt: !18347)
!18349 = !DILocation(line: 1901, column: 2, scope: !18298)
!18350 = distinct !DISubprogram(name: "z_sched_wait", scope: !2721, file: !2721, line: 1904, type: !18351, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2613, retainedNodes: !18354)
!18351 = !DISubroutineType(types: !18352)
!18352 = !{!125, !16405, !16394, !2647, !17193, !18353}
!18353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!18354 = !{!18355, !18356, !18357, !18358, !18359, !18360}
!18355 = !DILocalVariable(name: "lock", arg: 1, scope: !18350, file: !2721, line: 1904, type: !16405)
!18356 = !DILocalVariable(name: "key", arg: 2, scope: !18350, file: !2721, line: 1904, type: !16394)
!18357 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18350, file: !2721, line: 1905, type: !2647)
!18358 = !DILocalVariable(name: "timeout", arg: 4, scope: !18350, file: !2721, line: 1905, type: !17193)
!18359 = !DILocalVariable(name: "data", arg: 5, scope: !18350, file: !2721, line: 1905, type: !18353)
!18360 = !DILocalVariable(name: "ret", scope: !18350, file: !2721, line: 1907, type: !125)
!18361 = !DILocation(line: 0, scope: !18350)
!18362 = !DILocation(line: 1907, column: 12, scope: !18350)
!18363 = !DILocation(line: 1909, column: 11, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18350, file: !2721, line: 1909, column: 6)
!18365 = !DILocation(line: 1909, column: 6, scope: !18350)
!18366 = !DILocation(line: 1910, column: 11, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18364, file: !2721, line: 1909, column: 20)
!18368 = !DILocation(line: 1910, column: 26, scope: !18367)
!18369 = !DILocation(line: 1910, column: 9, scope: !18367)
!18370 = !DILocation(line: 1911, column: 2, scope: !18367)
!18371 = !DILocation(line: 1912, column: 2, scope: !18350)
!18372 = distinct !DISubprogram(name: "z_data_copy", scope: !18373, file: !18373, line: 22, type: !3363, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3346, retainedNodes: !639)
!18373 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18374 = !DILocation(line: 24, column: 2, scope: !18372)
!18375 = !DILocation(line: 27, column: 2, scope: !18372)
!18376 = !DILocation(line: 71, column: 1, scope: !18372)
!18377 = distinct !DISubprogram(name: "z_add_timeout", scope: !2758, file: !2758, line: 88, type: !18378, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18384)
!18378 = !DISubroutineType(types: !18379)
!18379 = !{null, !2731, !2750, !18380}
!18380 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1967, line: 67, baseType: !18381)
!18381 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1967, line: 65, size: 64, elements: !18382)
!18382 = !{!18383}
!18383 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18381, file: !1967, line: 66, baseType: !1966, size: 64)
!18384 = !{!18385, !18386, !18387, !18388, !18394, !18395, !18398, !18401}
!18385 = !DILocalVariable(name: "to", arg: 1, scope: !18377, file: !2758, line: 88, type: !2731)
!18386 = !DILocalVariable(name: "fn", arg: 2, scope: !18377, file: !2758, line: 88, type: !2750)
!18387 = !DILocalVariable(name: "timeout", arg: 3, scope: !18377, file: !2758, line: 89, type: !18380)
!18388 = !DILocalVariable(name: "__i", scope: !18389, file: !2758, line: 102, type: !18390)
!18389 = distinct !DILexicalBlock(scope: !18377, file: !2758, line: 102, column: 2)
!18390 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !18391)
!18391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !18392)
!18392 = !{!18393}
!18393 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18391, file: !638, line: 33, baseType: !125, size: 32)
!18394 = !DILocalVariable(name: "__key", scope: !18389, file: !2758, line: 102, type: !18390)
!18395 = !DILocalVariable(name: "t", scope: !18396, file: !2758, line: 103, type: !2731)
!18396 = distinct !DILexicalBlock(scope: !18397, file: !2758, line: 102, column: 24)
!18397 = distinct !DILexicalBlock(scope: !18389, file: !2758, line: 102, column: 2)
!18398 = !DILocalVariable(name: "ticks", scope: !18399, file: !2758, line: 107, type: !1966)
!18399 = distinct !DILexicalBlock(scope: !18400, file: !2758, line: 106, column: 39)
!18400 = distinct !DILexicalBlock(scope: !18396, file: !2758, line: 105, column: 7)
!18401 = !DILocalVariable(name: "next_time", scope: !18402, file: !2758, line: 137, type: !917)
!18402 = distinct !DILexicalBlock(scope: !18403, file: !2758, line: 127, column: 22)
!18403 = distinct !DILexicalBlock(scope: !18396, file: !2758, line: 127, column: 7)
!18404 = !DILocation(line: 0, scope: !18377)
!18405 = !DILocation(line: 91, column: 6, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !18377, file: !2758, line: 91, column: 6)
!18407 = !DILocation(line: 91, column: 6, scope: !18377)
!18408 = !DILocation(line: 100, column: 6, scope: !18377)
!18409 = !DILocation(line: 100, column: 9, scope: !18377)
!18410 = !DILocation(line: 0, scope: !18389)
!18411 = !DILocalVariable(name: "l", arg: 1, scope: !18412, file: !638, line: 136, type: !18415)
!18412 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !18413, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18416)
!18413 = !DISubroutineType(types: !18414)
!18414 = !{!18390, !18415}
!18415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!18416 = !{!18411, !18417}
!18417 = !DILocalVariable(name: "k", scope: !18412, file: !638, line: 139, type: !18390)
!18418 = !DILocation(line: 0, scope: !18412, inlinedAt: !18419)
!18419 = distinct !DILocation(line: 102, column: 2, scope: !18389)
!18420 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18425)
!18421 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6905, file: !6905, line: 42, type: !6906, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18422)
!18422 = !{!18423, !18424}
!18423 = !DILocalVariable(name: "key", scope: !18421, file: !6905, line: 44, type: !32)
!18424 = !DILocalVariable(name: "tmp", scope: !18421, file: !6905, line: 53, type: !32)
!18425 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18419)
!18426 = !{i64 2285449}
!18427 = !DILocation(line: 0, scope: !18421, inlinedAt: !18425)
!18428 = !DILocation(line: 106, column: 33, scope: !18400)
!18429 = !DILocation(line: 105, column: 7, scope: !18396)
!18430 = !DILocation(line: 107, column: 50, scope: !18399)
!18431 = !DILocation(line: 107, column: 48, scope: !18399)
!18432 = !DILocation(line: 0, scope: !18399)
!18433 = !DILocation(line: 109, column: 17, scope: !18399)
!18434 = !DILocation(line: 110, column: 3, scope: !18399)
!18435 = !DILocation(line: 111, column: 31, scope: !18436)
!18436 = distinct !DILexicalBlock(scope: !18400, file: !2758, line: 110, column: 10)
!18437 = !DILocation(line: 111, column: 37, scope: !18436)
!18438 = !DILocation(line: 111, column: 35, scope: !18436)
!18439 = !DILocation(line: 0, scope: !18400)
!18440 = !DILocation(line: 109, column: 8, scope: !18399)
!18441 = !DILocation(line: 109, column: 15, scope: !18399)
!18442 = !DILocation(line: 114, column: 12, scope: !18443)
!18443 = distinct !DILexicalBlock(scope: !18396, file: !2758, line: 114, column: 3)
!18444 = !DILocation(line: 0, scope: !18396)
!18445 = !DILocation(line: 114, column: 3, scope: !18443)
!18446 = !DILocation(line: 115, column: 24, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18448, file: !2758, line: 115, column: 8)
!18448 = distinct !DILexicalBlock(scope: !18449, file: !2758, line: 114, column: 45)
!18449 = distinct !DILexicalBlock(scope: !18443, file: !2758, line: 114, column: 3)
!18450 = !DILocation(line: 115, column: 11, scope: !18447)
!18451 = !DILocation(line: 115, column: 18, scope: !18447)
!18452 = !DILocation(line: 115, column: 8, scope: !18448)
!18453 = !DILocation(line: 116, column: 15, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18447, file: !2758, line: 115, column: 32)
!18455 = !DILocation(line: 117, column: 26, scope: !18454)
!18456 = !DILocation(line: 117, column: 37, scope: !18454)
!18457 = !DILocation(line: 117, column: 5, scope: !18454)
!18458 = !DILocation(line: 123, column: 7, scope: !18396)
!18459 = !DILocation(line: 120, column: 15, scope: !18448)
!18460 = !DILocation(line: 114, column: 36, scope: !18449)
!18461 = distinct !{!18461, !18445, !18462}
!18462 = !DILocation(line: 121, column: 3, scope: !18443)
!18463 = !DILocation(line: 124, column: 41, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18465, file: !2758, line: 123, column: 18)
!18465 = distinct !DILexicalBlock(scope: !18396, file: !2758, line: 123, column: 7)
!18466 = !DILocation(line: 124, column: 4, scope: !18464)
!18467 = !DILocation(line: 125, column: 3, scope: !18464)
!18468 = !DILocation(line: 127, column: 13, scope: !18403)
!18469 = !DILocation(line: 127, column: 10, scope: !18403)
!18470 = !DILocation(line: 127, column: 7, scope: !18396)
!18471 = !DILocation(line: 137, column: 24, scope: !18402)
!18472 = !DILocation(line: 0, scope: !18402)
!18473 = !DILocation(line: 139, column: 18, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18402, file: !2758, line: 139, column: 8)
!18475 = !DILocation(line: 139, column: 23, scope: !18474)
!18476 = !DILocation(line: 141, column: 5, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18474, file: !2758, line: 140, column: 48)
!18478 = !DILocation(line: 142, column: 4, scope: !18477)
!18479 = !DILocalVariable(name: "key", arg: 2, scope: !18480, file: !638, line: 190, type: !18390)
!18480 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !18481, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18483)
!18481 = !DISubroutineType(types: !18482)
!18482 = !{null, !18415, !18390}
!18483 = !{!18484, !18479}
!18484 = !DILocalVariable(name: "l", arg: 1, scope: !18480, file: !638, line: 189, type: !18415)
!18485 = !DILocation(line: 0, scope: !18480, inlinedAt: !18486)
!18486 = distinct !DILocation(line: 102, column: 2, scope: !18397)
!18487 = !DILocalVariable(name: "key", arg: 1, scope: !18488, file: !6905, line: 84, type: !32)
!18488 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6905, file: !6905, line: 84, type: !6916, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18489)
!18489 = !{!18487}
!18490 = !DILocation(line: 0, scope: !18488, inlinedAt: !18491)
!18491 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18486)
!18492 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18491)
!18493 = !{i64 2286266}
!18494 = !DILocation(line: 148, column: 1, scope: !18377)
!18495 = distinct !DISubprogram(name: "elapsed", scope: !2758, file: !2758, line: 62, type: !18496, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !639)
!18496 = !DISubroutineType(types: !18497)
!18497 = !{!917}
!18498 = !DILocation(line: 64, column: 9, scope: !18495)
!18499 = !DILocation(line: 64, column: 28, scope: !18495)
!18500 = !DILocation(line: 64, column: 35, scope: !18495)
!18501 = !DILocation(line: 64, column: 2, scope: !18495)
!18502 = distinct !DISubprogram(name: "first", scope: !2758, file: !2758, line: 39, type: !18503, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18505)
!18503 = !DISubroutineType(types: !18504)
!18504 = !{!2731}
!18505 = !{!18506}
!18506 = !DILocalVariable(name: "t", scope: !18502, file: !2758, line: 41, type: !18507)
!18507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 32)
!18508 = !DILocation(line: 41, column: 19, scope: !18502)
!18509 = !DILocation(line: 0, scope: !18502)
!18510 = !DILocation(line: 43, column: 9, scope: !18502)
!18511 = !DILocation(line: 43, column: 2, scope: !18502)
!18512 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !18513, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18515)
!18513 = !DISubroutineType(types: !18514)
!18514 = !{null, !18507, !18507}
!18515 = !{!18516, !18517, !18518}
!18516 = !DILocalVariable(name: "successor", arg: 1, scope: !18512, file: !541, line: 443, type: !18507)
!18517 = !DILocalVariable(name: "node", arg: 2, scope: !18512, file: !541, line: 443, type: !18507)
!18518 = !DILocalVariable(name: "prev", scope: !18512, file: !541, line: 445, type: !18519)
!18519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18507)
!18520 = !DILocation(line: 0, scope: !18512)
!18521 = !DILocation(line: 445, column: 39, scope: !18512)
!18522 = !DILocation(line: 447, column: 8, scope: !18512)
!18523 = !DILocation(line: 447, column: 13, scope: !18512)
!18524 = !DILocation(line: 448, column: 8, scope: !18512)
!18525 = !DILocation(line: 448, column: 13, scope: !18512)
!18526 = !DILocation(line: 449, column: 8, scope: !18512)
!18527 = !DILocation(line: 449, column: 13, scope: !18512)
!18528 = !DILocation(line: 450, column: 18, scope: !18512)
!18529 = !DILocation(line: 451, column: 1, scope: !18512)
!18530 = distinct !DISubprogram(name: "next", scope: !2758, file: !2758, line: 46, type: !18531, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18533)
!18531 = !DISubroutineType(types: !18532)
!18532 = !{!2731, !2731}
!18533 = !{!18534, !18535}
!18534 = !DILocalVariable(name: "t", arg: 1, scope: !18530, file: !2758, line: 46, type: !2731)
!18535 = !DILocalVariable(name: "n", scope: !18530, file: !2758, line: 48, type: !18507)
!18536 = !DILocation(line: 0, scope: !18530)
!18537 = !DILocation(line: 48, column: 58, scope: !18530)
!18538 = !DILocation(line: 48, column: 19, scope: !18530)
!18539 = !DILocation(line: 50, column: 9, scope: !18530)
!18540 = !DILocation(line: 50, column: 2, scope: !18530)
!18541 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !18542, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18545)
!18542 = !DISubroutineType(types: !18543)
!18543 = !{null, !18544, !18507}
!18544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!18545 = !{!18546, !18547, !18548}
!18546 = !DILocalVariable(name: "list", arg: 1, scope: !18541, file: !541, line: 404, type: !18544)
!18547 = !DILocalVariable(name: "node", arg: 2, scope: !18541, file: !541, line: 404, type: !18507)
!18548 = !DILocalVariable(name: "tail", scope: !18541, file: !541, line: 406, type: !18519)
!18549 = !DILocation(line: 0, scope: !18541)
!18550 = !DILocation(line: 406, column: 34, scope: !18541)
!18551 = !DILocation(line: 408, column: 8, scope: !18541)
!18552 = !DILocation(line: 408, column: 13, scope: !18541)
!18553 = !DILocation(line: 409, column: 8, scope: !18541)
!18554 = !DILocation(line: 409, column: 13, scope: !18541)
!18555 = !DILocation(line: 411, column: 8, scope: !18541)
!18556 = !DILocation(line: 411, column: 13, scope: !18541)
!18557 = !DILocation(line: 412, column: 13, scope: !18541)
!18558 = !DILocation(line: 413, column: 1, scope: !18541)
!18559 = distinct !DISubprogram(name: "next_timeout", scope: !2758, file: !2758, line: 67, type: !18496, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18560)
!18560 = !{!18561, !18562, !18563}
!18561 = !DILocalVariable(name: "to", scope: !18559, file: !2758, line: 69, type: !2731)
!18562 = !DILocalVariable(name: "ticks_elapsed", scope: !18559, file: !2758, line: 70, type: !917)
!18563 = !DILocalVariable(name: "ret", scope: !18559, file: !2758, line: 71, type: !917)
!18564 = !DILocation(line: 69, column: 24, scope: !18559)
!18565 = !DILocation(line: 0, scope: !18559)
!18566 = !DILocation(line: 70, column: 26, scope: !18559)
!18567 = !DILocation(line: 73, column: 10, scope: !18568)
!18568 = distinct !DILexicalBlock(scope: !18559, file: !2758, line: 73, column: 6)
!18569 = !DILocation(line: 73, column: 19, scope: !18568)
!18570 = !DILocation(line: 74, column: 21, scope: !18568)
!18571 = !DILocation(line: 74, column: 30, scope: !18568)
!18572 = !DILocation(line: 74, column: 28, scope: !18568)
!18573 = !DILocation(line: 74, column: 45, scope: !18568)
!18574 = !DILocation(line: 73, column: 6, scope: !18559)
!18575 = !DILocation(line: 77, column: 9, scope: !18576)
!18576 = distinct !DILexicalBlock(scope: !18568, file: !2758, line: 76, column: 9)
!18577 = !DILocation(line: 0, scope: !18568)
!18578 = !DILocation(line: 81, column: 20, scope: !18579)
!18579 = distinct !DILexicalBlock(scope: !18559, file: !2758, line: 81, column: 6)
!18580 = !DILocation(line: 81, column: 6, scope: !18579)
!18581 = !DILocation(line: 81, column: 32, scope: !18579)
!18582 = !DILocation(line: 85, column: 2, scope: !18559)
!18583 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !18584, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18586)
!18584 = !DISubroutineType(types: !18585)
!18585 = !{!18507, !18544, !18507}
!18586 = !{!18587, !18588}
!18587 = !DILocalVariable(name: "list", arg: 1, scope: !18583, file: !541, line: 341, type: !18544)
!18588 = !DILocalVariable(name: "node", arg: 2, scope: !18583, file: !541, line: 342, type: !18507)
!18589 = !DILocation(line: 0, scope: !18583)
!18590 = !DILocation(line: 344, column: 15, scope: !18583)
!18591 = !DILocation(line: 344, column: 9, scope: !18583)
!18592 = !DILocation(line: 344, column: 26, scope: !18583)
!18593 = !DILocation(line: 344, column: 2, scope: !18583)
!18594 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !18584, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18595)
!18595 = !{!18596, !18597}
!18596 = !DILocalVariable(name: "list", arg: 1, scope: !18594, file: !541, line: 325, type: !18544)
!18597 = !DILocalVariable(name: "node", arg: 2, scope: !18594, file: !541, line: 326, type: !18507)
!18598 = !DILocation(line: 0, scope: !18594)
!18599 = !DILocation(line: 328, column: 24, scope: !18594)
!18600 = !DILocation(line: 328, column: 15, scope: !18594)
!18601 = !DILocation(line: 328, column: 9, scope: !18594)
!18602 = !DILocation(line: 328, column: 45, scope: !18594)
!18603 = !DILocation(line: 328, column: 2, scope: !18594)
!18604 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !18605, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18607)
!18605 = !DISubroutineType(types: !18606)
!18606 = !{!18507, !18544}
!18607 = !{!18608}
!18608 = !DILocalVariable(name: "list", arg: 1, scope: !18604, file: !541, line: 294, type: !18544)
!18609 = !DILocation(line: 0, scope: !18604)
!18610 = !DILocation(line: 296, column: 9, scope: !18604)
!18611 = !DILocation(line: 296, column: 2, scope: !18604)
!18612 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !18613, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18615)
!18613 = !DISubroutineType(types: !18614)
!18614 = !{!153, !18544}
!18615 = !{!18616}
!18616 = !DILocalVariable(name: "list", arg: 1, scope: !18612, file: !541, line: 266, type: !18544)
!18617 = !DILocation(line: 0, scope: !18612)
!18618 = !DILocation(line: 268, column: 15, scope: !18612)
!18619 = !DILocation(line: 268, column: 20, scope: !18612)
!18620 = !DILocation(line: 268, column: 2, scope: !18612)
!18621 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2758, file: !2758, line: 150, type: !18622, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18624)
!18622 = !DISubroutineType(types: !18623)
!18623 = !{!125, !2731}
!18624 = !{!18625, !18626, !18627, !18629}
!18625 = !DILocalVariable(name: "to", arg: 1, scope: !18621, file: !2758, line: 150, type: !2731)
!18626 = !DILocalVariable(name: "ret", scope: !18621, file: !2758, line: 152, type: !125)
!18627 = !DILocalVariable(name: "__i", scope: !18628, file: !2758, line: 154, type: !18390)
!18628 = distinct !DILexicalBlock(scope: !18621, file: !2758, line: 154, column: 2)
!18629 = !DILocalVariable(name: "__key", scope: !18628, file: !2758, line: 154, type: !18390)
!18630 = !DILocation(line: 0, scope: !18621)
!18631 = !DILocation(line: 0, scope: !18628)
!18632 = !DILocation(line: 0, scope: !18412, inlinedAt: !18633)
!18633 = distinct !DILocation(line: 154, column: 2, scope: !18628)
!18634 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18635)
!18635 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18633)
!18636 = !DILocation(line: 0, scope: !18421, inlinedAt: !18635)
!18637 = !DILocation(line: 155, column: 7, scope: !18638)
!18638 = distinct !DILexicalBlock(scope: !18639, file: !2758, line: 155, column: 7)
!18639 = distinct !DILexicalBlock(scope: !18640, file: !2758, line: 154, column: 24)
!18640 = distinct !DILexicalBlock(scope: !18628, file: !2758, line: 154, column: 2)
!18641 = !DILocation(line: 155, column: 7, scope: !18639)
!18642 = !DILocation(line: 156, column: 4, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18638, file: !2758, line: 155, column: 39)
!18644 = !DILocation(line: 158, column: 3, scope: !18643)
!18645 = !DILocation(line: 0, scope: !18480, inlinedAt: !18646)
!18646 = distinct !DILocation(line: 154, column: 2, scope: !18640)
!18647 = !DILocation(line: 0, scope: !18488, inlinedAt: !18648)
!18648 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18646)
!18649 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18648)
!18650 = !DILocation(line: 161, column: 2, scope: !18621)
!18651 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !18652, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18656)
!18652 = !DISubroutineType(types: !18653)
!18653 = !{!153, !18654}
!18654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18655, size: 32)
!18655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2735)
!18656 = !{!18657}
!18657 = !DILocalVariable(name: "node", arg: 1, scope: !18651, file: !541, line: 225, type: !18654)
!18658 = !DILocation(line: 0, scope: !18651)
!18659 = !DILocation(line: 227, column: 15, scope: !18651)
!18660 = !DILocation(line: 227, column: 20, scope: !18651)
!18661 = !DILocation(line: 227, column: 2, scope: !18651)
!18662 = distinct !DISubprogram(name: "remove_timeout", scope: !2758, file: !2758, line: 53, type: !2752, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18663)
!18663 = !{!18664}
!18664 = !DILocalVariable(name: "t", arg: 1, scope: !18662, file: !2758, line: 53, type: !2731)
!18665 = !DILocation(line: 0, scope: !18662)
!18666 = !DILocation(line: 55, column: 6, scope: !18667)
!18667 = distinct !DILexicalBlock(scope: !18662, file: !2758, line: 55, column: 6)
!18668 = !DILocation(line: 55, column: 14, scope: !18667)
!18669 = !DILocation(line: 55, column: 6, scope: !18662)
!18670 = !DILocation(line: 56, column: 25, scope: !18671)
!18671 = distinct !DILexicalBlock(scope: !18667, file: !2758, line: 55, column: 23)
!18672 = !DILocation(line: 56, column: 12, scope: !18671)
!18673 = !DILocation(line: 56, column: 19, scope: !18671)
!18674 = !DILocation(line: 57, column: 2, scope: !18671)
!18675 = !DILocation(line: 59, column: 23, scope: !18662)
!18676 = !DILocation(line: 59, column: 2, scope: !18662)
!18677 = !DILocation(line: 60, column: 1, scope: !18662)
!18678 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !18679, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18681)
!18679 = !DISubroutineType(types: !18680)
!18680 = !{null, !18507}
!18681 = !{!18682, !18683, !18684}
!18682 = !DILocalVariable(name: "node", arg: 1, scope: !18678, file: !541, line: 496, type: !18507)
!18683 = !DILocalVariable(name: "prev", scope: !18678, file: !541, line: 498, type: !18519)
!18684 = !DILocalVariable(name: "next", scope: !18678, file: !541, line: 499, type: !18519)
!18685 = !DILocation(line: 0, scope: !18678)
!18686 = !DILocation(line: 498, column: 34, scope: !18678)
!18687 = !DILocation(line: 499, column: 34, scope: !18678)
!18688 = !DILocation(line: 501, column: 8, scope: !18678)
!18689 = !DILocation(line: 501, column: 13, scope: !18678)
!18690 = !DILocation(line: 502, column: 8, scope: !18678)
!18691 = !DILocation(line: 502, column: 13, scope: !18678)
!18692 = !DILocation(line: 503, column: 2, scope: !18678)
!18693 = !DILocation(line: 504, column: 1, scope: !18678)
!18694 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !18679, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18695)
!18695 = !{!18696}
!18696 = !DILocalVariable(name: "node", arg: 1, scope: !18694, file: !541, line: 211, type: !18507)
!18697 = !DILocation(line: 0, scope: !18694)
!18698 = !DILocation(line: 213, column: 8, scope: !18694)
!18699 = !DILocation(line: 213, column: 13, scope: !18694)
!18700 = !DILocation(line: 214, column: 8, scope: !18694)
!18701 = !DILocation(line: 214, column: 13, scope: !18694)
!18702 = !DILocation(line: 215, column: 1, scope: !18694)
!18703 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2758, file: !2758, line: 183, type: !18704, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18708)
!18704 = !DISubroutineType(types: !18705)
!18705 = !{!1966, !18706}
!18706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18707, size: 32)
!18707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2732)
!18708 = !{!18709, !18710, !18711, !18713}
!18709 = !DILocalVariable(name: "timeout", arg: 1, scope: !18703, file: !2758, line: 183, type: !18706)
!18710 = !DILocalVariable(name: "ticks", scope: !18703, file: !2758, line: 185, type: !1966)
!18711 = !DILocalVariable(name: "__i", scope: !18712, file: !2758, line: 187, type: !18390)
!18712 = distinct !DILexicalBlock(scope: !18703, file: !2758, line: 187, column: 2)
!18713 = !DILocalVariable(name: "__key", scope: !18712, file: !2758, line: 187, type: !18390)
!18714 = !DILocation(line: 0, scope: !18703)
!18715 = !DILocation(line: 0, scope: !18712)
!18716 = !DILocation(line: 0, scope: !18412, inlinedAt: !18717)
!18717 = distinct !DILocation(line: 187, column: 2, scope: !18712)
!18718 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18719)
!18719 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18717)
!18720 = !DILocation(line: 0, scope: !18421, inlinedAt: !18719)
!18721 = !DILocation(line: 188, column: 11, scope: !18722)
!18722 = distinct !DILexicalBlock(scope: !18723, file: !2758, line: 187, column: 24)
!18723 = distinct !DILexicalBlock(scope: !18712, file: !2758, line: 187, column: 2)
!18724 = !DILocation(line: 0, scope: !18480, inlinedAt: !18725)
!18725 = distinct !DILocation(line: 187, column: 2, scope: !18723)
!18726 = !DILocation(line: 0, scope: !18488, inlinedAt: !18727)
!18727 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18725)
!18728 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18727)
!18729 = !DILocation(line: 191, column: 2, scope: !18703)
!18730 = distinct !DISubprogram(name: "timeout_rem", scope: !2758, file: !2758, line: 165, type: !18704, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18731)
!18731 = !{!18732, !18733, !18734}
!18732 = !DILocalVariable(name: "timeout", arg: 1, scope: !18730, file: !2758, line: 165, type: !18706)
!18733 = !DILocalVariable(name: "ticks", scope: !18730, file: !2758, line: 167, type: !1966)
!18734 = !DILocalVariable(name: "t", scope: !18735, file: !2758, line: 173, type: !2731)
!18735 = distinct !DILexicalBlock(scope: !18730, file: !2758, line: 173, column: 2)
!18736 = !DILocation(line: 0, scope: !18730)
!18737 = !DILocation(line: 169, column: 6, scope: !18738)
!18738 = distinct !DILexicalBlock(scope: !18730, file: !2758, line: 169, column: 6)
!18739 = !DILocation(line: 169, column: 6, scope: !18730)
!18740 = !DILocation(line: 173, column: 28, scope: !18735)
!18741 = !DILocation(line: 0, scope: !18735)
!18742 = !DILocation(line: 173, column: 39, scope: !18743)
!18743 = distinct !DILexicalBlock(scope: !18735, file: !2758, line: 173, column: 2)
!18744 = !DILocation(line: 173, column: 2, scope: !18735)
!18745 = !DILocation(line: 174, column: 15, scope: !18746)
!18746 = distinct !DILexicalBlock(scope: !18743, file: !2758, line: 173, column: 61)
!18747 = !DILocation(line: 174, column: 9, scope: !18746)
!18748 = !DILocation(line: 175, column: 15, scope: !18749)
!18749 = distinct !DILexicalBlock(scope: !18746, file: !2758, line: 175, column: 7)
!18750 = !DILocation(line: 175, column: 7, scope: !18746)
!18751 = !DILocation(line: 173, column: 52, scope: !18743)
!18752 = distinct !{!18752, !18744, !18753}
!18753 = !DILocation(line: 178, column: 2, scope: !18735)
!18754 = !DILocation(line: 180, column: 17, scope: !18730)
!18755 = !DILocation(line: 180, column: 15, scope: !18730)
!18756 = !DILocation(line: 180, column: 2, scope: !18730)
!18757 = !DILocation(line: 181, column: 1, scope: !18730)
!18758 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !16068, file: !16068, line: 35, type: !18759, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18761)
!18759 = !DISubroutineType(types: !18760)
!18760 = !{!153, !18706}
!18761 = !{!18762}
!18762 = !DILocalVariable(name: "to", arg: 1, scope: !18758, file: !16068, line: 35, type: !18706)
!18763 = !DILocation(line: 0, scope: !18758)
!18764 = !DILocation(line: 37, column: 35, scope: !18758)
!18765 = !DILocation(line: 37, column: 10, scope: !18758)
!18766 = !DILocation(line: 37, column: 9, scope: !18758)
!18767 = !DILocation(line: 37, column: 2, scope: !18758)
!18768 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2758, file: !2758, line: 194, type: !18704, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18769)
!18769 = !{!18770, !18771, !18772, !18774}
!18770 = !DILocalVariable(name: "timeout", arg: 1, scope: !18768, file: !2758, line: 194, type: !18706)
!18771 = !DILocalVariable(name: "ticks", scope: !18768, file: !2758, line: 196, type: !1966)
!18772 = !DILocalVariable(name: "__i", scope: !18773, file: !2758, line: 198, type: !18390)
!18773 = distinct !DILexicalBlock(scope: !18768, file: !2758, line: 198, column: 2)
!18774 = !DILocalVariable(name: "__key", scope: !18773, file: !2758, line: 198, type: !18390)
!18775 = !DILocation(line: 0, scope: !18768)
!18776 = !DILocation(line: 0, scope: !18773)
!18777 = !DILocation(line: 0, scope: !18412, inlinedAt: !18778)
!18778 = distinct !DILocation(line: 198, column: 2, scope: !18773)
!18779 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18780)
!18780 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18778)
!18781 = !DILocation(line: 0, scope: !18421, inlinedAt: !18780)
!18782 = !DILocation(line: 199, column: 11, scope: !18783)
!18783 = distinct !DILexicalBlock(scope: !18784, file: !2758, line: 198, column: 24)
!18784 = distinct !DILexicalBlock(scope: !18773, file: !2758, line: 198, column: 2)
!18785 = !DILocation(line: 199, column: 23, scope: !18783)
!18786 = !DILocation(line: 0, scope: !18480, inlinedAt: !18787)
!18787 = distinct !DILocation(line: 198, column: 2, scope: !18784)
!18788 = !DILocation(line: 0, scope: !18488, inlinedAt: !18789)
!18789 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18787)
!18790 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18789)
!18791 = !DILocation(line: 199, column: 21, scope: !18783)
!18792 = !DILocation(line: 202, column: 2, scope: !18768)
!18793 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2758, file: !2758, line: 205, type: !18496, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18794)
!18794 = !{!18795, !18796, !18798}
!18795 = !DILocalVariable(name: "ret", scope: !18793, file: !2758, line: 207, type: !917)
!18796 = !DILocalVariable(name: "__i", scope: !18797, file: !2758, line: 209, type: !18390)
!18797 = distinct !DILexicalBlock(scope: !18793, file: !2758, line: 209, column: 2)
!18798 = !DILocalVariable(name: "__key", scope: !18797, file: !2758, line: 209, type: !18390)
!18799 = !DILocation(line: 0, scope: !18793)
!18800 = !DILocation(line: 0, scope: !18797)
!18801 = !DILocation(line: 0, scope: !18412, inlinedAt: !18802)
!18802 = distinct !DILocation(line: 209, column: 2, scope: !18797)
!18803 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18804)
!18804 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18802)
!18805 = !DILocation(line: 0, scope: !18421, inlinedAt: !18804)
!18806 = !DILocation(line: 210, column: 9, scope: !18807)
!18807 = distinct !DILexicalBlock(scope: !18808, file: !2758, line: 209, column: 24)
!18808 = distinct !DILexicalBlock(scope: !18797, file: !2758, line: 209, column: 2)
!18809 = !DILocation(line: 0, scope: !18480, inlinedAt: !18810)
!18810 = distinct !DILocation(line: 209, column: 2, scope: !18808)
!18811 = !DILocation(line: 0, scope: !18488, inlinedAt: !18812)
!18812 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18810)
!18813 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18812)
!18814 = !DILocation(line: 212, column: 2, scope: !18793)
!18815 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2758, file: !2758, line: 215, type: !13032, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18816)
!18816 = !{!18817, !18818, !18819, !18821, !18822, !18825, !18826}
!18817 = !DILocalVariable(name: "ticks", arg: 1, scope: !18815, file: !2758, line: 215, type: !917)
!18818 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18815, file: !2758, line: 215, type: !153)
!18819 = !DILocalVariable(name: "__i", scope: !18820, file: !2758, line: 217, type: !18390)
!18820 = distinct !DILexicalBlock(scope: !18815, file: !2758, line: 217, column: 2)
!18821 = !DILocalVariable(name: "__key", scope: !18820, file: !2758, line: 217, type: !18390)
!18822 = !DILocalVariable(name: "next_to", scope: !18823, file: !2758, line: 218, type: !125)
!18823 = distinct !DILexicalBlock(scope: !18824, file: !2758, line: 217, column: 24)
!18824 = distinct !DILexicalBlock(scope: !18820, file: !2758, line: 217, column: 2)
!18825 = !DILocalVariable(name: "sooner", scope: !18823, file: !2758, line: 219, type: !153)
!18826 = !DILocalVariable(name: "imminent", scope: !18823, file: !2758, line: 221, type: !153)
!18827 = !DILocation(line: 0, scope: !18815)
!18828 = !DILocation(line: 0, scope: !18820)
!18829 = !DILocation(line: 0, scope: !18412, inlinedAt: !18830)
!18830 = distinct !DILocation(line: 217, column: 2, scope: !18820)
!18831 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18832)
!18832 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18830)
!18833 = !DILocation(line: 0, scope: !18421, inlinedAt: !18832)
!18834 = !DILocation(line: 218, column: 17, scope: !18823)
!18835 = !DILocation(line: 0, scope: !18823)
!18836 = !DILocation(line: 221, column: 27, scope: !18823)
!18837 = !DILocation(line: 233, column: 17, scope: !18838)
!18838 = distinct !DILexicalBlock(scope: !18823, file: !2758, line: 233, column: 7)
!18839 = !DILocation(line: 234, column: 26, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18838, file: !2758, line: 233, column: 56)
!18841 = !DILocation(line: 234, column: 4, scope: !18840)
!18842 = !DILocation(line: 235, column: 3, scope: !18840)
!18843 = !DILocation(line: 0, scope: !18480, inlinedAt: !18844)
!18844 = distinct !DILocation(line: 217, column: 2, scope: !18824)
!18845 = !DILocation(line: 0, scope: !18488, inlinedAt: !18846)
!18846 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18844)
!18847 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18846)
!18848 = !DILocation(line: 237, column: 1, scope: !18815)
!18849 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2758, file: !2758, line: 239, type: !18850, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18852)
!18850 = !DISubroutineType(types: !18851)
!18851 = !{null, !917}
!18852 = !{!18853, !18854, !18855, !18857}
!18853 = !DILocalVariable(name: "ticks", arg: 1, scope: !18849, file: !2758, line: 239, type: !917)
!18854 = !DILocalVariable(name: "key", scope: !18849, file: !2758, line: 245, type: !18390)
!18855 = !DILocalVariable(name: "t", scope: !18856, file: !2758, line: 262, type: !2731)
!18856 = distinct !DILexicalBlock(scope: !18849, file: !2758, line: 261, column: 67)
!18857 = !DILocalVariable(name: "dt", scope: !18856, file: !2758, line: 263, type: !125)
!18858 = !DILocation(line: 0, scope: !18849)
!18859 = !DILocation(line: 242, column: 2, scope: !18849)
!18860 = !DILocation(line: 0, scope: !18412, inlinedAt: !18861)
!18861 = distinct !DILocation(line: 245, column: 25, scope: !18849)
!18862 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18863)
!18863 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18861)
!18864 = !DILocation(line: 0, scope: !18421, inlinedAt: !18863)
!18865 = !DILocation(line: 261, column: 9, scope: !18849)
!18866 = !DILocation(line: 261, column: 17, scope: !18849)
!18867 = !DILocation(line: 261, column: 25, scope: !18849)
!18868 = !DILocation(line: 261, column: 37, scope: !18849)
!18869 = !DILocation(line: 261, column: 47, scope: !18849)
!18870 = !DILocation(line: 261, column: 44, scope: !18849)
!18871 = !DILocation(line: 261, column: 2, scope: !18849)
!18872 = !DILocation(line: 0, scope: !18856)
!18873 = !DILocation(line: 263, column: 12, scope: !18856)
!18874 = !DILocation(line: 265, column: 16, scope: !18856)
!18875 = !DILocation(line: 265, column: 13, scope: !18856)
!18876 = !DILocation(line: 266, column: 13, scope: !18856)
!18877 = !DILocation(line: 267, column: 3, scope: !18856)
!18878 = !DILocation(line: 0, scope: !18480, inlinedAt: !18879)
!18879 = distinct !DILocation(line: 269, column: 3, scope: !18856)
!18880 = !DILocation(line: 0, scope: !18488, inlinedAt: !18881)
!18881 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18879)
!18882 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18881)
!18883 = !DILocation(line: 270, column: 6, scope: !18856)
!18884 = !DILocation(line: 270, column: 3, scope: !18856)
!18885 = !DILocation(line: 0, scope: !18412, inlinedAt: !18886)
!18886 = distinct !DILocation(line: 271, column: 9, scope: !18856)
!18887 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18888)
!18888 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18886)
!18889 = !DILocation(line: 0, scope: !18421, inlinedAt: !18888)
!18890 = !DILocation(line: 272, column: 22, scope: !18856)
!18891 = distinct !{!18891, !18871, !18892}
!18892 = !DILocation(line: 273, column: 2, scope: !18849)
!18893 = !DILocation(line: 276, column: 19, scope: !18894)
!18894 = distinct !DILexicalBlock(scope: !18895, file: !2758, line: 275, column: 23)
!18895 = distinct !DILexicalBlock(scope: !18849, file: !2758, line: 275, column: 6)
!18896 = !DILocation(line: 277, column: 2, scope: !18894)
!18897 = !DILocation(line: 279, column: 15, scope: !18849)
!18898 = !DILocation(line: 279, column: 12, scope: !18849)
!18899 = !DILocation(line: 280, column: 21, scope: !18849)
!18900 = !DILocation(line: 282, column: 24, scope: !18849)
!18901 = !DILocation(line: 282, column: 2, scope: !18849)
!18902 = !DILocation(line: 0, scope: !18480, inlinedAt: !18903)
!18903 = distinct !DILocation(line: 284, column: 2, scope: !18849)
!18904 = !DILocation(line: 0, scope: !18488, inlinedAt: !18905)
!18905 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18903)
!18906 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18905)
!18907 = !DILocation(line: 285, column: 1, scope: !18849)
!18908 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2758, file: !2758, line: 287, type: !18909, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18911)
!18909 = !DISubroutineType(types: !18910)
!18910 = !{!598}
!18911 = !{!18912, !18913, !18915}
!18912 = !DILocalVariable(name: "t", scope: !18908, file: !2758, line: 289, type: !1813)
!18913 = !DILocalVariable(name: "__i", scope: !18914, file: !2758, line: 291, type: !18390)
!18914 = distinct !DILexicalBlock(scope: !18908, file: !2758, line: 291, column: 2)
!18915 = !DILocalVariable(name: "__key", scope: !18914, file: !2758, line: 291, type: !18390)
!18916 = !DILocation(line: 0, scope: !18908)
!18917 = !DILocation(line: 0, scope: !18914)
!18918 = !DILocation(line: 0, scope: !18412, inlinedAt: !18919)
!18919 = distinct !DILocation(line: 291, column: 2, scope: !18914)
!18920 = !DILocation(line: 55, column: 2, scope: !18421, inlinedAt: !18921)
!18921 = distinct !DILocation(line: 145, column: 10, scope: !18412, inlinedAt: !18919)
!18922 = !DILocation(line: 0, scope: !18421, inlinedAt: !18921)
!18923 = !DILocation(line: 292, column: 7, scope: !18924)
!18924 = distinct !DILexicalBlock(scope: !18925, file: !2758, line: 291, column: 24)
!18925 = distinct !DILexicalBlock(scope: !18914, file: !2758, line: 291, column: 2)
!18926 = !DILocation(line: 292, column: 19, scope: !18924)
!18927 = !DILocation(line: 0, scope: !18480, inlinedAt: !18928)
!18928 = distinct !DILocation(line: 291, column: 2, scope: !18925)
!18929 = !DILocation(line: 0, scope: !18488, inlinedAt: !18930)
!18930 = distinct !DILocation(line: 215, column: 2, scope: !18480, inlinedAt: !18928)
!18931 = !DILocation(line: 95, column: 2, scope: !18488, inlinedAt: !18930)
!18932 = !DILocation(line: 292, column: 17, scope: !18924)
!18933 = !DILocation(line: 294, column: 2, scope: !18908)
!18934 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2758, file: !2758, line: 297, type: !8453, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !639)
!18935 = !DILocation(line: 300, column: 19, scope: !18934)
!18936 = !DILocation(line: 300, column: 9, scope: !18934)
!18937 = !DILocation(line: 300, column: 2, scope: !18934)
!18938 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2758, file: !2758, line: 306, type: !18909, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !639)
!18939 = !DILocation(line: 308, column: 9, scope: !18938)
!18940 = !DILocation(line: 308, column: 2, scope: !18938)
!18941 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2758, file: !2758, line: 319, type: !8463, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18942)
!18942 = !{!18943, !18944, !18945, !18946}
!18943 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18941, file: !2758, line: 319, type: !208)
!18944 = !DILocalVariable(name: "start_cycles", scope: !18941, file: !2758, line: 328, type: !208)
!18945 = !DILocalVariable(name: "cycles_to_wait", scope: !18941, file: !2758, line: 331, type: !208)
!18946 = !DILocalVariable(name: "current_cycles", scope: !18947, file: !2758, line: 338, type: !208)
!18947 = distinct !DILexicalBlock(scope: !18948, file: !2758, line: 337, column: 11)
!18948 = distinct !DILexicalBlock(scope: !18949, file: !2758, line: 337, column: 2)
!18949 = distinct !DILexicalBlock(scope: !18941, file: !2758, line: 337, column: 2)
!18950 = !DILocation(line: 0, scope: !18941)
!18951 = !DILocation(line: 322, column: 19, scope: !18952)
!18952 = distinct !DILexicalBlock(scope: !18941, file: !2758, line: 322, column: 6)
!18953 = !DILocation(line: 322, column: 6, scope: !18941)
!18954 = !DILocation(line: 328, column: 26, scope: !18941)
!18955 = !DILocation(line: 333, column: 43, scope: !18941)
!18956 = !DILocation(line: 337, column: 2, scope: !18941)
!18957 = !DILocation(line: 338, column: 29, scope: !18947)
!18958 = !DILocation(line: 0, scope: !18947)
!18959 = !DILocation(line: 341, column: 23, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18947, file: !2758, line: 341, column: 7)
!18961 = !DILocation(line: 341, column: 39, scope: !18960)
!18962 = !DILocation(line: 349, column: 1, scope: !18941)
!18963 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !624, file: !624, line: 1675, type: !8453, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !639)
!18964 = !DILocation(line: 1677, column: 9, scope: !18963)
!18965 = !DILocation(line: 1677, column: 2, scope: !18963)
!18966 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18967, file: !18967, line: 24, type: !8453, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !639)
!18967 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18968 = !DILocation(line: 26, column: 9, scope: !18966)
!18969 = !DILocation(line: 26, column: 2, scope: !18966)
!18970 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2758, file: !2758, line: 364, type: !18971, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !18973)
!18971 = !DISubroutineType(types: !18972)
!18972 = !{!1813, !18380}
!18973 = !{!18974, !18975}
!18974 = !DILocalVariable(name: "timeout", arg: 1, scope: !18970, file: !2758, line: 364, type: !18380)
!18975 = !DILocalVariable(name: "dt", scope: !18970, file: !2758, line: 366, type: !1966)
!18976 = !DILocation(line: 0, scope: !18970)
!18977 = !DILocation(line: 368, column: 6, scope: !18970)
!18978 = !DILocation(line: 371, column: 10, scope: !18979)
!18979 = distinct !DILexicalBlock(scope: !18980, file: !2758, line: 370, column: 47)
!18980 = distinct !DILexicalBlock(scope: !18981, file: !2758, line: 370, column: 13)
!18981 = distinct !DILexicalBlock(scope: !18970, file: !2758, line: 368, column: 6)
!18982 = !DILocation(line: 371, column: 3, scope: !18979)
!18983 = !DILocation(line: 376, column: 58, scope: !18984)
!18984 = distinct !DILexicalBlock(scope: !18985, file: !2758, line: 376, column: 7)
!18985 = distinct !DILexicalBlock(scope: !18980, file: !2758, line: 372, column: 9)
!18986 = !DILocation(line: 376, column: 7, scope: !18985)
!18987 = !DILocation(line: 376, column: 43, scope: !18984)
!18988 = !DILocation(line: 377, column: 4, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18984, file: !2758, line: 376, column: 64)
!18990 = !DILocation(line: 379, column: 10, scope: !18985)
!18991 = !DILocation(line: 379, column: 33, scope: !18985)
!18992 = !DILocation(line: 379, column: 31, scope: !18985)
!18993 = !DILocation(line: 379, column: 3, scope: !18985)
!18994 = !DILocation(line: 0, scope: !18981)
!18995 = !DILocation(line: 381, column: 1, scope: !18970)
!18996 = distinct !DISubprogram(name: "boot_banner", scope: !18997, file: !18997, line: 26, type: !3363, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3349, retainedNodes: !639)
!18997 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18998 = !DILocation(line: 34, column: 2, scope: !18996)
!18999 = !DILocation(line: 36, column: 1, scope: !18996)
