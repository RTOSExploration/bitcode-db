; ModuleID = 'build/96b_stm32_sensor_mez/backup_sram/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.stm32_backup_sram_config = type { %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228383 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228363 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228353 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228453 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228443 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228433 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228423 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228413 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228403 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228393 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230264 to i8*), void (i8*)* inttoptr (i32 134228373 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [34 x i8] c"Current value in backup SRAM: %d\0A\00", align 1
@backup_value = dso_local local_unnamed_addr global i32 0, section ".stm32_backup_sram", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [35 x i8] c"Next reported value should be: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"Keep VBAT power source and reset the board now!\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !107
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !116
@__devicehdl_dts_ord_37 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !172
@.str.6 = private unnamed_addr constant [16 x i8] c"memory@40024000\00", align 1
@config = internal constant %struct.stm32_backup_sram_config { %struct._thread_arch { i32 48, i32 262144 } }, align 4, !dbg !215
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !311
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.stm32_backup_sram_config* @config to i8*), i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* null, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !299
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_backup_sram_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_POST_KERNEL90_", align 4, !dbg !301
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !322
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !351
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !359
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !505
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !541
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.31, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !551
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !556
@.str.30 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.31 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !576
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !183
@.str.32 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !736
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !719
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !692
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !708
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !738
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !758
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !766
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !768
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !770
@__devicehdl_dts_ord_8 = dso_local constant [16 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 32767], section ".__device_handles_pass2", align 2, !dbg !177
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !775
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !864
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !853
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !903
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !205
@.str.47 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !969
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1244
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1214
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1200
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1145
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !203
@.str.1.49 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1246
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1218
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1216
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1159
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !201
@.str.2.50 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1259
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1222
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1220
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1165
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !199
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1261
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1226
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1224
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1174
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !197
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1263
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1230
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1228
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1180
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !195
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1265
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1234
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1232
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1186
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !193
@.str.6.52 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1267
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1238
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1236
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1192
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !188
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1269
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1242
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1240
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1198
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !213
@.str.56 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1271
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1490
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1445
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1492
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1418
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1420
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !211
@.str.1.57 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1499
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1447
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1524
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1429
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1431
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !209
@.str.2.58 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1526
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1449
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1536
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.58, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1435
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1437
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !207
@.str.3.61 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1538
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1451
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1548
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.61, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1441
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1443
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1453
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1461
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1484
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1487
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !837
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1516
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1518
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1520
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1522
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1528
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1530
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1532
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1534
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1540
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1542
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1544
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1546
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1550
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1661
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1663
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1659
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1630
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1665
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1143
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1157
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1163
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1172
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1178
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1184
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.52, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1190
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1196
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1755
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1799
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1802
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1807
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1814
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2024
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2033
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2040
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2045
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.111 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.115, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.116, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.118, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.112, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.119, i32 0, i32 0)], align 4, !dbg !2073
@.str.113 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.114 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.115 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.116 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.117 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.118 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.112 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.119 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2185
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2198
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2306
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2309
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2311
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2038
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2035
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2313
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2349
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1902
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2347
@.str.172 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2915 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2941, !srcloc !2942
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2943, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2949, !srcloc !2950
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2951, !srcloc !2952
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2953, !srcloc !2954
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2959, !srcloc !2960
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2961, !srcloc !2962
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2965, !srcloc !2966
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2967, !srcloc !2968
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2969, !srcloc !2970
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2971, !srcloc !2972
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2973, !srcloc !2976
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2991, !srcloc !2992
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2993, !srcloc !2994
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2995, !srcloc !2996
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2997, !srcloc !2998
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2999, !srcloc !3000
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3001, !srcloc !3002
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3003, !srcloc !3004
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3005, !srcloc !3006
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3007, !srcloc !3008
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3009, !srcloc !3010
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3011, !srcloc !3012
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3013, !srcloc !3014
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3015, !srcloc !3016
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3017, !srcloc !3018
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3019, !srcloc !3020
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3021, !srcloc !3022
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3023, !srcloc !3024
  ret void, !dbg !3025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3028 {
  %1 = load i32, i32* @backup_value, align 4, !dbg !3029
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i32 0, i32 0), i32 noundef %1) #24, !dbg !3030
  %2 = load i32, i32* @backup_value, align 4, !dbg !3031
  %3 = add i32 %2, 1, !dbg !3031
  store i32 %3, i32* @backup_value, align 4, !dbg !3031
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3) #24, !dbg !3032
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !3033
  ret void, !dbg !3034
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3035 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3037, metadata !DIExpression()), !dbg !3038
  ret i32 0, !dbg !3039
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !3040 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3044, metadata !DIExpression()), !dbg !3045
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3046
  ret void, !dbg !3047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !3048 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3051
  ret i8* %1, !dbg !3052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3053 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3065, metadata !DIExpression()), !dbg !3076
  call void @llvm.dbg.value(metadata i8* %0, metadata !3064, metadata !DIExpression()), !dbg !3076
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3077
  ret void, !dbg !3079
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3084, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i8* %1, metadata !3085, metadata !DIExpression()), !dbg !3086
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3087
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3087
  ret i32 %4, !dbg !3088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3089 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3101, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3098, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i8* %1, metadata !3099, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i8* %2, metadata !3100, metadata !DIExpression()), !dbg !3102
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3103
  ret void, !dbg !3104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3105 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3109, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 %1, metadata !3110, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32 0, metadata !3111, metadata !DIExpression()), !dbg !3112
  %3 = icmp eq i32 %1, 0, !dbg !3113
  br i1 %3, label %13, label %4, !dbg !3116

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3111, metadata !DIExpression()), !dbg !3112
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3117
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3119
  %8 = load i8, i8* %7, align 1, !dbg !3119
  %9 = zext i8 %8 to i32, !dbg !3119
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3117
  %11 = add nuw i32 %5, 1, !dbg !3120
  call void @llvm.dbg.value(metadata i32 %11, metadata !3111, metadata !DIExpression()), !dbg !3112
  %12 = icmp eq i32 %11, %1, !dbg !3113
  br i1 %12, label %13, label %4, !dbg !3116, !llvm.loop !3121

13:                                               ; preds = %4, %2
  ret void, !dbg !3123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3124 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3128, metadata !DIExpression()), !dbg !3130
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3131
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3131
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3129, metadata !DIExpression()), !dbg !3132
  call void @llvm.va_start(i8* nonnull %3), !dbg !3133
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3134
  %5 = load i32, i32* %4, align 4, !dbg !3134
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3134
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3134
  call void @llvm.va_end(i8* nonnull %3), !dbg !3135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3136
  ret void, !dbg !3136
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3137 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3141, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i32 %1, metadata !3142, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i8* %2, metadata !3143, metadata !DIExpression()), !dbg !3146
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3147
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3147
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3144, metadata !DIExpression()), !dbg !3148
  call void @llvm.va_start(i8* nonnull %5), !dbg !3149
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3150
  %7 = load i32, i32* %6, align 4, !dbg !3150
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3150
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3150
  call void @llvm.dbg.value(metadata i32 %9, metadata !3145, metadata !DIExpression()), !dbg !3146
  call void @llvm.va_end(i8* nonnull %5), !dbg !3151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3152
  ret i32 %9, !dbg !3153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3154 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3161, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.value(metadata i8* %0, metadata !3158, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.value(metadata i32 %1, metadata !3159, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.value(metadata i8* %2, metadata !3160, metadata !DIExpression()), !dbg !3168
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3169
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3169
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3162, metadata !DIExpression()), !dbg !3170
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3171
  store i8* %0, i8** %7, align 4, !dbg !3171
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3171
  store i32 %1, i32* %8, align 4, !dbg !3171
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3171
  store i32 0, i32* %9, align 4, !dbg !3171
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3172
  %10 = load i32, i32* %9, align 4, !dbg !3173
  %11 = load i32, i32* %8, align 4, !dbg !3175
  %12 = icmp slt i32 %10, %11, !dbg !3176
  br i1 %12, label %13, label %15, !dbg !3177

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3178
  store i8 0, i8* %14, align 1, !dbg !3180
  br label %15, !dbg !3181

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3182
  ret i32 %10, !dbg !3183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3189, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3190, metadata !DIExpression()), !dbg !3191
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3192
  %4 = load i8*, i8** %3, align 4, !dbg !3192
  %5 = icmp eq i8* %4, null, !dbg !3194
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3195
  br i1 %5, label %12, label %8, !dbg !3196

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3197
  %10 = load i32, i32* %9, align 4, !dbg !3197
  %11 = icmp slt i32 %7, %10, !dbg !3198
  br i1 %11, label %15, label %12, !dbg !3199

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3200
  %14 = add nsw i32 %7, 1, !dbg !3202
  store i32 %14, i32* %13, align 4, !dbg !3202
  br label %25, !dbg !3203

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3204
  %17 = icmp eq i32 %7, %16, !dbg !3206
  br i1 %17, label %18, label %21, !dbg !3207

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3208
  store i32 %19, i32* %6, align 4, !dbg !3208
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3210
  store i8 0, i8* %20, align 1, !dbg !3211
  br label %25, !dbg !3212

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3213
  %23 = add nsw i32 %7, 1, !dbg !3215
  store i32 %23, i32* %6, align 4, !dbg !3215
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3216
  store i8 %22, i8* %24, align 1, !dbg !3217
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3218
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3219 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3229, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i8* %1, metadata !3230, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i8* %2, metadata !3231, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.value(metadata i8* %3, metadata !3232, metadata !DIExpression()), !dbg !3233
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3234
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3235
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3236
  unreachable, !dbg !3237
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3238 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3342
  ret %struct.k_thread* %1, !dbg !3343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3344 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3349, metadata !DIExpression()), !dbg !3350
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3351, !srcloc !3353
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3354
  ret void, !dbg !3355
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3356 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3357, !srcloc !3359
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3360
  ret %struct.k_thread* %1, !dbg !3361
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3362 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3375, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3372, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %1, metadata !3373, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %2, metadata !3374, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %4, metadata !3376, metadata !DIExpression()), !dbg !3503
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3504
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3504
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3377, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 0, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i1 undef, metadata !3383, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3503
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3506

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3506

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3507
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3375, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %30, metadata !3374, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %29, metadata !3381, metadata !DIExpression()), !dbg !3503
  %31 = load i8, i8* %30, align 1, !dbg !3508
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3506

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3508
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3509
  call void @llvm.dbg.value(metadata i8* %34, metadata !3374, metadata !DIExpression()), !dbg !3503
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !3509
  call void @llvm.dbg.value(metadata i32 %35, metadata !3385, metadata !DIExpression()), !dbg !3510
  %36 = icmp slt i32 %35, 0, !dbg !3511
  %37 = add i32 %29, 1, !dbg !3509
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %36, label %365, label %28, !llvm.loop !3513

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3515
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3390, metadata !DIExpression()), !dbg !3516
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3516
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3435, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3438, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8* %30, metadata !3441, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i32 -1, metadata !3442, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i32 -1, metadata !3443, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8* null, metadata !3444, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8* %14, metadata !3445, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8 0, metadata !3446, metadata !DIExpression()), !dbg !3517
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !3518
  call void @llvm.dbg.value(metadata i8* %39, metadata !3374, metadata !DIExpression()), !dbg !3503
  %40 = load i24, i24* %15, align 8, !dbg !3519
  %41 = and i24 %40, 256, !dbg !3519
  %42 = icmp eq i24 %41, 0, !dbg !3519
  br i1 %42, label %51, label %43, !dbg !3521

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3522
  call void @llvm.dbg.value(metadata i8* %44, metadata !3375, metadata !DIExpression()), !dbg !3503
  %45 = bitcast i8* %27 to i32*, !dbg !3522
  %46 = load i32, i32* %45, align 4, !dbg !3522
  call void @llvm.dbg.value(metadata i32 %46, metadata !3442, metadata !DIExpression()), !dbg !3517
  %47 = icmp slt i32 %46, 0, !dbg !3524
  br i1 %47, label %48, label %56, !dbg !3526

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3527
  store i24 %49, i24* %15, align 8, !dbg !3527
  %50 = sub nsw i32 0, %46, !dbg !3529
  call void @llvm.dbg.value(metadata i32 %50, metadata !3442, metadata !DIExpression()), !dbg !3517
  br label %56, !dbg !3530

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3531
  %53 = icmp eq i24 %52, 0, !dbg !3531
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3533
  br label %56, !dbg !3533

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3534
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3517
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3375, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %58, metadata !3442, metadata !DIExpression()), !dbg !3517
  %60 = and i24 %57, 1024, !dbg !3534
  %61 = icmp eq i24 %60, 0, !dbg !3534
  br i1 %61, label %69, label %62, !dbg !3535

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3536
  call void @llvm.dbg.value(metadata i8* %63, metadata !3375, metadata !DIExpression()), !dbg !3503
  %64 = bitcast i8* %59 to i32*, !dbg !3536
  %65 = load i32, i32* %64, align 4, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %65, metadata !3447, metadata !DIExpression()), !dbg !3537
  %66 = icmp slt i32 %65, 0, !dbg !3538
  br i1 %66, label %67, label %74, !dbg !3540

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3541
  store i24 %68, i24* %15, align 8, !dbg !3541
  br label %74, !dbg !3543

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3544
  %71 = icmp eq i24 %70, 0, !dbg !3544
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3546
  br label %74, !dbg !3546

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3547
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3517
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3517
  call void @llvm.dbg.value(metadata i8* %77, metadata !3375, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %76, metadata !3443, metadata !DIExpression()), !dbg !3517
  store i32 0, i32* %16, align 4, !dbg !3548
  store i32 0, i32* %17, align 8, !dbg !3549
  %78 = lshr i24 %75, 16, !dbg !3547
  call void @llvm.dbg.value(metadata i24 %78, metadata !3450, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3517
  %79 = lshr i24 %75, 11, !dbg !3550
  %80 = and i24 %79, 15, !dbg !3550
  %81 = zext i24 %80 to i32, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %81, metadata !3451, metadata !DIExpression()), !dbg !3517
  %82 = trunc i24 %78 to i3, !dbg !3551
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3551

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3552

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3555
  call void @llvm.dbg.value(metadata i8* %85, metadata !3375, metadata !DIExpression()), !dbg !3503
  %86 = bitcast i8* %77 to i32*, !dbg !3555
  %87 = load i32, i32* %86, align 4, !dbg !3555
  %88 = sext i32 %87 to i64, !dbg !3555
  store i64 %88, i64* %20, align 8, !dbg !3557
  br label %115, !dbg !3558

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3559
  call void @llvm.dbg.value(metadata i8* %90, metadata !3375, metadata !DIExpression()), !dbg !3503
  %91 = bitcast i8* %77 to i32*, !dbg !3559
  %92 = load i32, i32* %91, align 4, !dbg !3559
  %93 = sext i32 %92 to i64, !dbg !3559
  store i64 %93, i64* %20, align 8, !dbg !3562
  br label %115, !dbg !3563

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3564
  %96 = add i32 %95, 7, !dbg !3564
  %97 = and i32 %96, -8, !dbg !3564
  %98 = inttoptr i32 %97 to i8*, !dbg !3564
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3564
  call void @llvm.dbg.value(metadata i8* %99, metadata !3375, metadata !DIExpression()), !dbg !3503
  %100 = inttoptr i32 %97 to i64*, !dbg !3564
  %101 = load i64, i64* %100, align 8, !dbg !3564
  store i64 %101, i64* %20, align 8, !dbg !3565
  br label %115, !dbg !3566

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3567
  %104 = add i32 %103, 7, !dbg !3567
  %105 = and i32 %104, -8, !dbg !3567
  %106 = inttoptr i32 %105 to i8*, !dbg !3567
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3567
  call void @llvm.dbg.value(metadata i8* %107, metadata !3375, metadata !DIExpression()), !dbg !3503
  %108 = inttoptr i32 %105 to i64*, !dbg !3567
  %109 = load i64, i64* %108, align 8, !dbg !3567
  store i64 %109, i64* %20, align 8, !dbg !3568
  br label %115, !dbg !3569

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3570
  call void @llvm.dbg.value(metadata i8* %111, metadata !3375, metadata !DIExpression()), !dbg !3503
  %112 = bitcast i8* %77 to i32*, !dbg !3570
  %113 = load i32, i32* %112, align 4, !dbg !3570
  %114 = sext i32 %113 to i64, !dbg !3571
  store i64 %114, i64* %20, align 8, !dbg !3572
  br label %115, !dbg !3573

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3574
  call void @llvm.dbg.value(metadata i8* %117, metadata !3375, metadata !DIExpression()), !dbg !3503
  %118 = trunc i24 %79 to i4, !dbg !3575
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3575

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3576
  %121 = ashr exact i64 %120, 56, !dbg !3576
  store i64 %121, i64* %20, align 8, !dbg !3579
  br label %177, !dbg !3580

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3581
  %124 = ashr exact i64 %123, 48, !dbg !3581
  store i64 %124, i64* %20, align 8, !dbg !3584
  br label %177, !dbg !3585

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3586

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3589
  call void @llvm.dbg.value(metadata i8* %127, metadata !3375, metadata !DIExpression()), !dbg !3503
  %128 = bitcast i8* %77 to i32*, !dbg !3589
  %129 = load i32, i32* %128, align 4, !dbg !3589
  %130 = zext i32 %129 to i64, !dbg !3589
  store i64 %130, i64* %20, align 8, !dbg !3591
  br label %157, !dbg !3592

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3593
  call void @llvm.dbg.value(metadata i8* %132, metadata !3375, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %132, metadata !3375, metadata !DIExpression()), !dbg !3503
  %133 = bitcast i8* %77 to i32*, !dbg !3593
  %134 = load i32, i32* %133, align 4, !dbg !3593
  %135 = zext i32 %134 to i64, !dbg !3593
  store i64 %135, i64* %20, align 8, !dbg !3593
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3595
  %138 = add i32 %137, 7, !dbg !3595
  %139 = and i32 %138, -8, !dbg !3595
  %140 = inttoptr i32 %139 to i8*, !dbg !3595
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3595
  call void @llvm.dbg.value(metadata i8* %141, metadata !3375, metadata !DIExpression()), !dbg !3503
  %142 = inttoptr i32 %139 to i64*, !dbg !3595
  %143 = load i64, i64* %142, align 8, !dbg !3595
  store i64 %143, i64* %20, align 8, !dbg !3596
  br label %157, !dbg !3597

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3598
  %146 = add i32 %145, 7, !dbg !3598
  %147 = and i32 %146, -8, !dbg !3598
  %148 = inttoptr i32 %147 to i8*, !dbg !3598
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3598
  call void @llvm.dbg.value(metadata i8* %149, metadata !3375, metadata !DIExpression()), !dbg !3503
  %150 = inttoptr i32 %147 to i64*, !dbg !3598
  %151 = load i64, i64* %150, align 8, !dbg !3598
  store i64 %151, i64* %20, align 8, !dbg !3599
  br label %157, !dbg !3600

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3601
  call void @llvm.dbg.value(metadata i8* %153, metadata !3375, metadata !DIExpression()), !dbg !3503
  %154 = bitcast i8* %77 to i32*, !dbg !3601
  %155 = load i32, i32* %154, align 4, !dbg !3601
  %156 = zext i32 %155 to i64, !dbg !3602
  store i64 %156, i64* %20, align 8, !dbg !3603
  br label %157, !dbg !3604

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3605
  call void @llvm.dbg.value(metadata i8* %159, metadata !3375, metadata !DIExpression()), !dbg !3503
  %160 = trunc i24 %79 to i4, !dbg !3606
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3606

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3607
  store i64 %162, i64* %20, align 8, !dbg !3610
  br label %177, !dbg !3611

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3612
  store i64 %164, i64* %20, align 8, !dbg !3615
  br label %177, !dbg !3616

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3617
  %167 = add i32 %166, 7, !dbg !3617
  %168 = and i32 %167, -8, !dbg !3617
  %169 = inttoptr i32 %168 to i8*, !dbg !3617
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3617
  call void @llvm.dbg.value(metadata i8* %170, metadata !3375, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %170, metadata !3375, metadata !DIExpression()), !dbg !3503
  %171 = inttoptr i32 %168 to double*, !dbg !3617
  %172 = load double, double* %171, align 8, !dbg !3617
  store double %172, double* %19, align 8, !dbg !3617
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3621
  call void @llvm.dbg.value(metadata i8* %174, metadata !3375, metadata !DIExpression()), !dbg !3503
  %175 = bitcast i8* %77 to i8**, !dbg !3621
  %176 = load i8*, i8** %175, align 4, !dbg !3621
  store i8* %176, i8** %18, align 8, !dbg !3624
  br label %177, !dbg !3625

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3517
  call void @llvm.dbg.value(metadata i8* %178, metadata !3375, metadata !DIExpression()), !dbg !3503
  %179 = and i24 %75, 3, !dbg !3626
  %180 = icmp eq i24 %179, 0, !dbg !3626
  br i1 %180, label %185, label %181, !dbg !3626

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !3627
  call void @llvm.dbg.value(metadata i32 %182, metadata !3452, metadata !DIExpression()), !dbg !3628
  %183 = icmp slt i32 %182, 0, !dbg !3629
  %184 = add i32 %182, %29, !dbg !3627
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3631
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3632

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %188, metadata !3456, metadata !DIExpression()), !dbg !3634
  %189 = icmp slt i32 %188, 0, !dbg !3635
  %190 = add i32 %29, 1, !dbg !3633
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3637
  call void @llvm.dbg.value(metadata i8* %192, metadata !3444, metadata !DIExpression()), !dbg !3517
  %193 = icmp sgt i32 %76, -1, !dbg !3638
  br i1 %193, label %194, label %196, !dbg !3640

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %195, metadata !3459, metadata !DIExpression()), !dbg !3643
  br label %241, !dbg !3644

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %197, metadata !3459, metadata !DIExpression()), !dbg !3643
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3444, metadata !DIExpression()), !dbg !3517
  %199 = load i64, i64* %20, align 8, !dbg !3647
  %200 = trunc i64 %199 to i8, !dbg !3648
  store i8 %200, i8* %10, align 1, !dbg !3649
  call void @llvm.dbg.value(metadata i8* %23, metadata !3445, metadata !DIExpression()), !dbg !3517
  br label %245, !dbg !3650

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3651
  %203 = icmp eq i24 %202, 0, !dbg !3651
  %204 = trunc i24 %75 to i8, !dbg !3653
  %205 = shl i8 %204, 1, !dbg !3653
  %206 = and i8 %205, 32, !dbg !3653
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3653
  call void @llvm.dbg.value(metadata i8 %207, metadata !3446, metadata !DIExpression()), !dbg !3517
  %208 = load i64, i64* %20, align 8, !dbg !3654
  call void @llvm.dbg.value(metadata i64 %208, metadata !3382, metadata !DIExpression()), !dbg !3503
  %209 = icmp slt i64 %208, 0, !dbg !3655
  br i1 %209, label %210, label %212, !dbg !3657

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3446, metadata !DIExpression()), !dbg !3517
  %211 = sub nsw i64 0, %208, !dbg !3658
  store i64 %211, i64* %20, align 8, !dbg !3660
  br label %212, !dbg !3661

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3517
  call void @llvm.dbg.value(metadata i8 %213, metadata !3446, metadata !DIExpression()), !dbg !3517
  %214 = load i64, i64* %20, align 8, !dbg !3662
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3663
  call void @llvm.dbg.value(metadata i8* %215, metadata !3444, metadata !DIExpression()), !dbg !3517
  br label %216, !dbg !3664

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3665
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3666
  call void @llvm.dbg.value(metadata i8* %218, metadata !3444, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8 %217, metadata !3446, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.label(metadata !3502), !dbg !3667
  %219 = icmp sgt i32 %76, -1, !dbg !3668
  br i1 %219, label %222, label %220, !dbg !3669

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3670
  br label %245, !dbg !3669

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3672
  %224 = sub i32 %22, %223, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %224, metadata !3461, metadata !DIExpression()), !dbg !3673
  %225 = load i24, i24* %15, align 8, !dbg !3674
  %226 = and i24 %225, -65, !dbg !3674
  store i24 %226, i24* %15, align 8, !dbg !3674
  %227 = icmp ugt i32 %76, %224, !dbg !3675
  br i1 %227, label %228, label %245, !dbg !3677

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3678
  store i32 %229, i32* %16, align 4, !dbg !3680
  br label %245, !dbg !3681

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3682
  %232 = icmp eq i8* %231, null, !dbg !3684
  br i1 %232, label %245, label %233, !dbg !3685

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3686
  %235 = zext i32 %234 to i64, !dbg !3686
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3688
  call void @llvm.dbg.value(metadata i8* %236, metadata !3444, metadata !DIExpression()), !dbg !3517
  %237 = load i24, i24* %15, align 8, !dbg !3689
  %238 = or i24 %237, 1048576, !dbg !3689
  store i24 %238, i24* %15, align 8, !dbg !3689
  store i8 120, i8* %21, align 1, !dbg !3690
  br label %216, !dbg !3691

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3692
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !3695
  br label %363, !dbg !3696

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3697
  call void @llvm.dbg.value(metadata i32 %242, metadata !3459, metadata !DIExpression()), !dbg !3643
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3698
  call void @llvm.dbg.value(metadata i32 -1, metadata !3443, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i32 %29, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8* %192, metadata !3444, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8* %243, metadata !3445, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8 0, metadata !3446, metadata !DIExpression()), !dbg !3517
  %244 = icmp eq i8* %192, null, !dbg !3699
  br i1 %244, label %363, label %245, !dbg !3701, !llvm.loop !3513

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3670
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3517
  call void @llvm.dbg.value(metadata i32 0, metadata !3465, metadata !DIExpression()), !dbg !3517
  %250 = zext i8 %249 to i32, !dbg !3702
  %251 = icmp eq i8 %249, 0, !dbg !3704
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  call void @llvm.dbg.value(metadata i32 undef, metadata !3464, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  call void @llvm.dbg.value(metadata i32 undef, metadata !3464, metadata !DIExpression()), !dbg !3517
  %252 = icmp sgt i32 %58, 0, !dbg !3705
  br i1 %252, label %253, label %302, !dbg !3706

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3670
  %255 = icmp eq i24 %254, 0, !dbg !3670
  %256 = ptrtoint i8* %248 to i32, !dbg !3707
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  %257 = ptrtoint i8* %247 to i32, !dbg !3707
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  %258 = xor i1 %251, true, !dbg !3708
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  %259 = sext i1 %258 to i32, !dbg !3708
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  %260 = lshr i24 %246, 19, !dbg !3709
  %261 = and i24 %260, 1, !dbg !3709
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3709
  %263 = zext i24 %262 to i32, !dbg !3709
  %264 = add i32 %257, %259, !dbg !3709
  %265 = add i32 %256, %263, !dbg !3709
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  %266 = and i24 %246, 4194304, !dbg !3710
  %267 = icmp eq i24 %266, 0, !dbg !3710
  %268 = load i32, i32* %16, align 4, !dbg !3712
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3517
  call void @llvm.dbg.value(metadata i32 undef, metadata !3464, metadata !DIExpression()), !dbg !3517
  %269 = load i32, i32* %17, align 8, !dbg !3713
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3713
  call void @llvm.dbg.value(metadata i32 undef, metadata !3464, metadata !DIExpression()), !dbg !3517
  %271 = add i32 %264, %58, !dbg !3713
  %272 = add i32 %265, %268, !dbg !3713
  %273 = add i32 %272, %270, !dbg !3714
  %274 = sub i32 %271, %273, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %274, metadata !3442, metadata !DIExpression()), !dbg !3517
  %275 = and i24 %246, 4, !dbg !3715
  %276 = icmp eq i24 %275, 0, !dbg !3715
  br i1 %276, label %277, label %302, !dbg !3716

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3466, metadata !DIExpression()), !dbg !3717
  %278 = and i24 %246, 64, !dbg !3718
  %279 = icmp eq i24 %278, 0, !dbg !3718
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3719
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3719
  %282 = select i1 %279, i32 32, i32 48, !dbg !3719
  br i1 %280, label %287, label %283, !dbg !3719

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !3720
  call void @llvm.dbg.value(metadata i32 %284, metadata !3471, metadata !DIExpression()), !dbg !3721
  %285 = icmp slt i32 %284, 0, !dbg !3722
  %286 = add i32 %29, 1, !dbg !3720
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3517
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %290, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i8 undef, metadata !3466, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.value(metadata i8 %288, metadata !3446, metadata !DIExpression()), !dbg !3517
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3724
  %292 = add i32 %291, -1, !dbg !3724
  br label %293, !dbg !3724

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3725
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %295, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %294, metadata !3442, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i32 %294, metadata !3442, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3517
  %296 = icmp sgt i32 %294, 0, !dbg !3726
  br i1 %296, label %297, label %302, !dbg !3724

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %298, metadata !3442, metadata !DIExpression()), !dbg !3517
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !3728
  call void @llvm.dbg.value(metadata i32 %299, metadata !3477, metadata !DIExpression()), !dbg !3729
  %300 = icmp slt i32 %299, 0, !dbg !3730
  %301 = add i32 %295, 1, !dbg !3728
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %300, label %361, label %293, !llvm.loop !3732

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3517
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3517
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %305, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %304, metadata !3442, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.value(metadata i8 %303, metadata !3446, metadata !DIExpression()), !dbg !3517
  %306 = icmp eq i8 %303, 0, !dbg !3734
  br i1 %306, label %312, label %307, !dbg !3735

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3736
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %309, metadata !3480, metadata !DIExpression()), !dbg !3738
  %310 = icmp slt i32 %309, 0, !dbg !3739
  %311 = add i32 %305, 1, !dbg !3737
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %313, metadata !3381, metadata !DIExpression()), !dbg !3503
  %314 = lshr i24 %246, 20, !dbg !3741
  %315 = lshr i24 %246, 19, !dbg !3742
  %316 = or i24 %314, %315, !dbg !3743
  %317 = and i24 %316, 1, !dbg !3743
  %318 = icmp eq i24 %317, 0, !dbg !3743
  br i1 %318, label %323, label %319, !dbg !3744

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3745
  call void @llvm.dbg.value(metadata i32 %320, metadata !3484, metadata !DIExpression()), !dbg !3746
  %321 = icmp slt i32 %320, 0, !dbg !3747
  %322 = add i32 %313, 1, !dbg !3745
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %324, metadata !3381, metadata !DIExpression()), !dbg !3503
  %325 = and i24 %246, 1048576, !dbg !3749
  %326 = icmp eq i24 %325, 0, !dbg !3749
  br i1 %326, label %333, label %327, !dbg !3750

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3751
  %329 = zext i8 %328 to i32, !dbg !3751
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %330, metadata !3490, metadata !DIExpression()), !dbg !3752
  %331 = icmp slt i32 %330, 0, !dbg !3753
  %332 = add i32 %324, 1, !dbg !3751
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %334, metadata !3381, metadata !DIExpression()), !dbg !3503
  %335 = load i32, i32* %16, align 4, !dbg !3755
  call void @llvm.dbg.value(metadata i32 %335, metadata !3465, metadata !DIExpression()), !dbg !3517
  br label %336, !dbg !3756

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3757
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %338, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %337, metadata !3465, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3517
  %339 = icmp sgt i32 %337, 0, !dbg !3758
  br i1 %339, label %340, label %345, !dbg !3756

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %341, metadata !3465, metadata !DIExpression()), !dbg !3517
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %342, metadata !3494, metadata !DIExpression()), !dbg !3761
  %343 = icmp slt i32 %342, 0, !dbg !3762
  %344 = add i32 %338, 1, !dbg !3760
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %343, label %361, label %336, !llvm.loop !3764

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %346, metadata !3497, metadata !DIExpression()), !dbg !3767
  %347 = icmp slt i32 %346, 0, !dbg !3768
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %349, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %304, metadata !3442, metadata !DIExpression()), !dbg !3517
  %350 = icmp sgt i32 %304, 0, !dbg !3770
  br i1 %350, label %351, label %363, !dbg !3771

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3771
  %353 = add i32 %352, %338, !dbg !3771
  br label %354, !dbg !3771

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %355, metadata !3442, metadata !DIExpression()), !dbg !3517
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !3772
  call void @llvm.dbg.value(metadata i32 %356, metadata !3499, metadata !DIExpression()), !dbg !3773
  %357 = icmp slt i32 %356, 0, !dbg !3774
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3776
  call void @llvm.dbg.value(metadata i32 undef, metadata !3381, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3503
  call void @llvm.dbg.value(metadata i32 %359, metadata !3442, metadata !DIExpression()), !dbg !3517
  %360 = icmp sgt i32 %355, 1, !dbg !3770
  br i1 %360, label %354, label %363, !dbg !3771, !llvm.loop !3777

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3514
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %364, metadata !3381, metadata !DIExpression()), !dbg !3503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3514
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3503
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3779
  ret i32 %366, !dbg !3779
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3780 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3784, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8* %1, metadata !3785, metadata !DIExpression()), !dbg !3786
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3787
  store i24 0, i24* %3, align 4, !dbg !3787
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3787
  store i8 0, i8* %4, align 1, !dbg !3787
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3787
  store i32 0, i32* %5, align 4, !dbg !3787
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3787
  store i32 0, i32* %6, align 4, !dbg !3787
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3788
  call void @llvm.dbg.value(metadata i8* %7, metadata !3785, metadata !DIExpression()), !dbg !3786
  %8 = load i8, i8* %7, align 1, !dbg !3789
  %9 = icmp eq i8 %8, 37, !dbg !3791
  br i1 %9, label %10, label %12, !dbg !3792

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3793
  call void @llvm.dbg.value(metadata i8* %11, metadata !3785, metadata !DIExpression()), !dbg !3786
  store i8 37, i8* %4, align 1, !dbg !3795
  br label %18, !dbg !3796

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !3797
  call void @llvm.dbg.value(metadata i8* %13, metadata !3785, metadata !DIExpression()), !dbg !3786
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !3798
  call void @llvm.dbg.value(metadata i8* %14, metadata !3785, metadata !DIExpression()), !dbg !3786
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !3799
  call void @llvm.dbg.value(metadata i8* %15, metadata !3785, metadata !DIExpression()), !dbg !3786
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !3800
  call void @llvm.dbg.value(metadata i8* %16, metadata !3785, metadata !DIExpression()), !dbg !3786
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !3801
  call void @llvm.dbg.value(metadata i8* %17, metadata !3785, metadata !DIExpression()), !dbg !3786
  br label %18, !dbg !3802

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3786
  ret i8* %19, !dbg !3803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3804 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3808, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %1, metadata !3809, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %2, metadata !3810, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %3, metadata !3811, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 0, metadata !3812, metadata !DIExpression()), !dbg !3815
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3816

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3817
  call void @llvm.dbg.value(metadata i32 %9, metadata !3812, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %8, metadata !3810, metadata !DIExpression()), !dbg !3815
  %10 = icmp ult i8* %8, %3, !dbg !3818
  br i1 %10, label %11, label %13, !dbg !3819

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3820
  br label %17, !dbg !3819

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3821

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3822
  %16 = icmp eq i8 %15, 0, !dbg !3821
  br i1 %16, label %24, label %17, !dbg !3816

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3820
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3823
  call void @llvm.dbg.value(metadata i8* %19, metadata !3810, metadata !DIExpression()), !dbg !3815
  %20 = zext i8 %18 to i32, !dbg !3824
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %21, metadata !3813, metadata !DIExpression()), !dbg !3826
  %22 = icmp slt i32 %21, 0, !dbg !3827
  %23 = add i32 %9, 1, !dbg !3829
  call void @llvm.dbg.value(metadata i32 undef, metadata !3812, metadata !DIExpression()), !dbg !3815
  br i1 %22, label %24, label %7, !llvm.loop !3830

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3815
  ret i32 %25, !dbg !3832
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3833 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3837, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3838, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8* %2, metadata !3839, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8* %3, metadata !3840, metadata !DIExpression()), !dbg !3847
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3848
  %6 = load i8, i8* %5, align 1, !dbg !3848
  %7 = zext i8 %6 to i32, !dbg !3849
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !3850
  %9 = icmp eq i32 %8, 0, !dbg !3850
  call void @llvm.dbg.value(metadata i1 %9, metadata !3841, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3847
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %10, metadata !3842, metadata !DIExpression()), !dbg !3847
  %11 = ptrtoint i8* %3 to i32, !dbg !3852
  %12 = ptrtoint i8* %2 to i32, !dbg !3852
  %13 = sub i32 %11, %12, !dbg !3852
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3853
  call void @llvm.dbg.value(metadata i8* %14, metadata !3844, metadata !DIExpression()), !dbg !3847
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3854

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3847
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3837, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8* %18, metadata !3844, metadata !DIExpression()), !dbg !3847
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3855
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %25, metadata !3845, metadata !DIExpression()), !dbg !3857
  %26 = icmp ult i32 %25, 10, !dbg !3858
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3859
  %28 = add i32 %27, %25, !dbg !3857
  %29 = trunc i32 %28 to i8, !dbg !3859
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3860
  call void @llvm.dbg.value(metadata i8* %30, metadata !3844, metadata !DIExpression()), !dbg !3847
  store i8 %29, i8* %30, align 1, !dbg !3861
  call void @llvm.dbg.value(metadata i64 %22, metadata !3837, metadata !DIExpression()), !dbg !3847
  %31 = icmp uge i64 %19, %15, !dbg !3862
  %32 = icmp ugt i8* %30, %2, !dbg !3863
  %33 = and i1 %31, %32, !dbg !3863
  br i1 %33, label %17, label %34, !dbg !3864, !llvm.loop !3865

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3867
  %36 = load i24, i24* %35, align 4, !dbg !3867
  %37 = and i24 %36, 32, !dbg !3867
  %38 = icmp eq i24 %37, 0, !dbg !3867
  br i1 %38, label %44, label %39, !dbg !3869

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3870

40:                                               ; preds = %39
  br label %41, !dbg !3872

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3876
  store i24 %43, i24* %35, align 4, !dbg !3876
  br label %44, !dbg !3877

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3877
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !3878 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3884, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i8* %1, metadata !3885, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i32 %2, metadata !3886, metadata !DIExpression()), !dbg !3887
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3888
  %5 = load i24, i24* %4, align 4, !dbg !3888
  %6 = lshr i24 %5, 11, !dbg !3888
  %7 = and i24 %6, 15, !dbg !3888
  %8 = zext i24 %7 to i32, !dbg !3888
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3889

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3890
  store i32 %2, i32* %10, align 4, !dbg !3892
  br label %28, !dbg !3893

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3894
  store i8 %12, i8* %1, align 1, !dbg !3895
  br label %28, !dbg !3896

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3897
  %15 = bitcast i8* %1 to i16*, !dbg !3898
  store i16 %14, i16* %15, align 2, !dbg !3899
  br label %28, !dbg !3900

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3901
  store i32 %2, i32* %17, align 4, !dbg !3902
  br label %28, !dbg !3903

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3904
  %20 = bitcast i8* %1 to i64*, !dbg !3905
  store i64 %19, i64* %20, align 8, !dbg !3906
  br label %28, !dbg !3907

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3908
  %23 = bitcast i8* %1 to i64*, !dbg !3909
  store i64 %22, i64* %23, align 8, !dbg !3910
  br label %28, !dbg !3911

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3912
  store i32 %2, i32* %25, align 4, !dbg !3913
  br label %28, !dbg !3914

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3915
  store i32 %2, i32* %27, align 4, !dbg !3916
  br label %28, !dbg !3917

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3918
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3922, metadata !DIExpression()), !dbg !3923
  %2 = add i32 %0, -65, !dbg !3924
  %3 = icmp ult i32 %2, 26, !dbg !3925
  %4 = zext i1 %3 to i32, !dbg !3925
  ret i32 %4, !dbg !3926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3927 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3931, metadata !DIExpression()), !dbg !3932
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3933

2:                                                ; preds = %1
  br label %4, !dbg !3934

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3936

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3937
  ret i32 %5, !dbg !3938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3939 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3941, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8* %1, metadata !3942, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8 1, metadata !3943, metadata !DIExpression()), !dbg !3944
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3945

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3943, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8* %5, metadata !3942, metadata !DIExpression()), !dbg !3944
  %6 = load i8, i8* %5, align 1, !dbg !3946
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3948

7:                                                ; preds = %4
  br label %11, !dbg !3949

8:                                                ; preds = %4
  br label %11, !dbg !3951

9:                                                ; preds = %4
  br label %11, !dbg !3952

10:                                               ; preds = %4
  br label %11, !dbg !3953

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3954
  %14 = or i24 %13, %12, !dbg !3954
  store i24 %14, i24* %3, align 4, !dbg !3954
  call void @llvm.dbg.value(metadata i8 poison, metadata !3943, metadata !DIExpression()), !dbg !3944
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3942, metadata !DIExpression()), !dbg !3944
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3943, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i8* %15, metadata !3942, metadata !DIExpression()), !dbg !3944
  %17 = load i24, i24* %3, align 4, !dbg !3955
  %18 = and i24 %17, 68, !dbg !3957
  %19 = icmp eq i24 %18, 68, !dbg !3957
  br i1 %19, label %20, label %22, !dbg !3957

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3958
  store i24 %21, i24* %3, align 4, !dbg !3958
  br label %22, !dbg !3960

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3962 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3964, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8* %1, metadata !3965, metadata !DIExpression()), !dbg !3968
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3969
  %5 = load i24, i24* %4, align 4, !dbg !3970
  %6 = or i24 %5, 128, !dbg !3970
  store i24 %6, i24* %4, align 4, !dbg !3970
  call void @llvm.dbg.value(metadata i8* %1, metadata !3965, metadata !DIExpression()), !dbg !3968
  %7 = load i8, i8* %1, align 1, !dbg !3971
  %8 = icmp eq i8 %7, 42, !dbg !3973
  br i1 %8, label %9, label %12, !dbg !3974

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3975
  store i24 %10, i24* %4, align 4, !dbg !3975
  call void @llvm.dbg.value(metadata i8* %1, metadata !3965, metadata !DIExpression()), !dbg !3968
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3977
  call void @llvm.dbg.value(metadata i8* %11, metadata !3965, metadata !DIExpression()), !dbg !3968
  store i8* %11, i8** %3, align 4, !dbg !3977
  br label %29, !dbg !3978

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3966, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata i8** %3, metadata !3965, metadata !DIExpression(DW_OP_deref)), !dbg !3968
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %13, metadata !3967, metadata !DIExpression()), !dbg !3968
  %14 = load i8*, i8** %3, align 4, !dbg !3980
  call void @llvm.dbg.value(metadata i8* %14, metadata !3965, metadata !DIExpression()), !dbg !3968
  %15 = icmp eq i8* %14, %1, !dbg !3982
  br i1 %15, label %29, label %16, !dbg !3983

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3984
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3986
  store i32 %13, i32* %18, align 4, !dbg !3987
  %19 = lshr i32 %13, 31, !dbg !3988
  %20 = lshr i24 %17, 1, !dbg !3989
  %21 = and i24 %20, 1, !dbg !3989
  %22 = zext i24 %21 to i32, !dbg !3989
  %23 = or i32 %19, %22, !dbg !3989
  %24 = trunc i32 %23 to i24, !dbg !3989
  %25 = shl nuw nsw i24 %24, 1, !dbg !3989
  %26 = and i24 %17, -131, !dbg !3989
  %27 = or i24 %26, 128, !dbg !3989
  %28 = or i24 %25, %27, !dbg !3989
  store i24 %28, i24* %4, align 4, !dbg !3989
  br label %29, !dbg !3990

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3968
  ret i8* %30, !dbg !3991
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3992 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3994, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i8* %1, metadata !3995, metadata !DIExpression()), !dbg !3997
  %4 = load i8, i8* %1, align 1, !dbg !3998
  %5 = icmp eq i8 %4, 46, !dbg !3999
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4000
  %7 = load i24, i24* %6, align 4, !dbg !4001
  %8 = select i1 %5, i24 512, i24 0, !dbg !4001
  %9 = and i24 %7, -513, !dbg !4001
  %10 = or i24 %9, %8, !dbg !4001
  store i24 %10, i24* %6, align 4, !dbg !4001
  br i1 %5, label %11, label %32, !dbg !4002

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3995, metadata !DIExpression()), !dbg !3997
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4003
  call void @llvm.dbg.value(metadata i8* %12, metadata !3995, metadata !DIExpression()), !dbg !3997
  store i8* %12, i8** %3, align 4, !dbg !4003
  %13 = load i8, i8* %12, align 1, !dbg !4004
  %14 = icmp eq i8 %13, 42, !dbg !4006
  br i1 %14, label %15, label %18, !dbg !4007

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4008
  store i24 %16, i24* %6, align 4, !dbg !4008
  call void @llvm.dbg.value(metadata i8* %12, metadata !3995, metadata !DIExpression()), !dbg !3997
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4010
  call void @llvm.dbg.value(metadata i8* %17, metadata !3995, metadata !DIExpression()), !dbg !3997
  store i8* %17, i8** %3, align 4, !dbg !4010
  br label %32, !dbg !4011

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !3995, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %19, metadata !3996, metadata !DIExpression()), !dbg !3997
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4013
  store i32 %19, i32* %20, align 4, !dbg !4014
  %21 = lshr i32 %19, 31, !dbg !4015
  %22 = load i24, i24* %6, align 4, !dbg !4016
  %23 = lshr i24 %22, 1, !dbg !4016
  %24 = and i24 %23, 1, !dbg !4016
  %25 = zext i24 %24 to i32, !dbg !4016
  %26 = or i32 %21, %25, !dbg !4016
  %27 = trunc i32 %26 to i24, !dbg !4016
  %28 = shl nuw nsw i24 %27, 1, !dbg !4016
  %29 = and i24 %22, -3, !dbg !4016
  %30 = or i24 %28, %29, !dbg !4016
  store i24 %30, i24* %6, align 4, !dbg !4016
  %31 = load i8*, i8** %3, align 4, !dbg !4017
  call void @llvm.dbg.value(metadata i8* %31, metadata !3995, metadata !DIExpression()), !dbg !3997
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !3997
  ret i8* %33, !dbg !4018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4019 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4021, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata i8* %1, metadata !4022, metadata !DIExpression()), !dbg !4023
  %3 = load i8, i8* %1, align 1, !dbg !4024
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4025

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4026
  call void @llvm.dbg.value(metadata i8* %5, metadata !4022, metadata !DIExpression()), !dbg !4023
  %6 = load i8, i8* %5, align 1, !dbg !4029
  %7 = icmp eq i8 %6, 104, !dbg !4030
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4031
  %9 = load i24, i24* %8, align 4, !dbg !4031
  %10 = and i24 %9, -30721, !dbg !4031
  br i1 %7, label %11, label %14, !dbg !4032

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4033
  store i24 %12, i24* %8, align 4, !dbg !4033
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4035
  call void @llvm.dbg.value(metadata i8* %13, metadata !4022, metadata !DIExpression()), !dbg !4023
  br label %56, !dbg !4036

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4037
  store i24 %15, i24* %8, align 4, !dbg !4037
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4039
  call void @llvm.dbg.value(metadata i8* %17, metadata !4022, metadata !DIExpression()), !dbg !4023
  %18 = load i8, i8* %17, align 1, !dbg !4041
  %19 = icmp eq i8 %18, 108, !dbg !4042
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4043
  %21 = load i24, i24* %20, align 4, !dbg !4043
  %22 = and i24 %21, -30721, !dbg !4043
  br i1 %19, label %23, label %26, !dbg !4044

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4045
  store i24 %24, i24* %20, align 4, !dbg !4045
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4047
  call void @llvm.dbg.value(metadata i8* %25, metadata !4022, metadata !DIExpression()), !dbg !4023
  br label %56, !dbg !4048

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4049
  store i24 %27, i24* %20, align 4, !dbg !4049
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4051
  %30 = load i24, i24* %29, align 4, !dbg !4052
  %31 = and i24 %30, -30721, !dbg !4052
  %32 = or i24 %31, 10240, !dbg !4052
  store i24 %32, i24* %29, align 4, !dbg !4052
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4053
  call void @llvm.dbg.value(metadata i8* %33, metadata !4022, metadata !DIExpression()), !dbg !4023
  br label %56, !dbg !4054

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4055
  %36 = load i24, i24* %35, align 4, !dbg !4056
  %37 = and i24 %36, -30721, !dbg !4056
  %38 = or i24 %37, 12288, !dbg !4056
  store i24 %38, i24* %35, align 4, !dbg !4056
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %39, metadata !4022, metadata !DIExpression()), !dbg !4023
  br label %56, !dbg !4058

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4059
  %42 = load i24, i24* %41, align 4, !dbg !4060
  %43 = and i24 %42, -30721, !dbg !4060
  %44 = or i24 %43, 14336, !dbg !4060
  store i24 %44, i24* %41, align 4, !dbg !4060
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4061
  call void @llvm.dbg.value(metadata i8* %45, metadata !4022, metadata !DIExpression()), !dbg !4023
  br label %56, !dbg !4062

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4063
  %48 = load i24, i24* %47, align 4, !dbg !4064
  %49 = and i24 %48, -30723, !dbg !4064
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4065
  call void @llvm.dbg.value(metadata i8* %50, metadata !4022, metadata !DIExpression()), !dbg !4023
  %51 = or i24 %49, 16386, !dbg !4066
  store i24 %51, i24* %47, align 4, !dbg !4066
  br label %56, !dbg !4067

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4068
  %54 = load i24, i24* %53, align 4, !dbg !4069
  %55 = and i24 %54, -30721, !dbg !4069
  store i24 %55, i24* %53, align 4, !dbg !4069
  br label %56, !dbg !4070

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4022, metadata !DIExpression()), !dbg !4023
  ret i8* %57, !dbg !4071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4072 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4074, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i8* %1, metadata !4075, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i8 0, metadata !4076, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i8* %1, metadata !4075, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4079
  %3 = load i8, i8* %1, align 1, !dbg !4080
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4081
  store i8 %3, i8* %4, align 1, !dbg !4082
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4083

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4084

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4085
  %9 = load i24, i24* %8, align 4, !dbg !4085
  %10 = and i24 %9, -458753, !dbg !4085
  %11 = or i24 %10, %7, !dbg !4085
  call void @llvm.dbg.label(metadata !4077), !dbg !4086
  %12 = and i24 %9, 30720, !dbg !4087
  %13 = icmp eq i24 %12, 16384, !dbg !4087
  %14 = zext i1 %13 to i24, !dbg !4089
  %15 = or i24 %11, %14, !dbg !4089
  %16 = icmp eq i8 %3, 99, !dbg !4090
  br i1 %16, label %17, label %43, !dbg !4092

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4093
  %19 = icmp ne i24 %18, 0, !dbg !4093
  call void @llvm.dbg.value(metadata i1 %19, metadata !4076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4079
  br label %43, !dbg !4095

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4096
  %22 = load i24, i24* %21, align 4, !dbg !4097
  %23 = and i24 %22, -458753, !dbg !4097
  %24 = or i24 %23, 262144, !dbg !4097
  call void @llvm.dbg.value(metadata i8 1, metadata !4076, metadata !DIExpression()), !dbg !4079
  br label %43, !dbg !4098

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4101
  %27 = load i24, i24* %26, align 4, !dbg !4102
  %28 = and i24 %27, -458753, !dbg !4102
  %29 = or i24 %28, 196608, !dbg !4102
  %30 = and i24 %27, 30720, !dbg !4103
  %31 = icmp eq i24 %30, 16384, !dbg !4103
  br label %43, !dbg !4105

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4106
  %34 = load i24, i24* %33, align 4, !dbg !4107
  %35 = and i24 %34, -458753, !dbg !4107
  %36 = or i24 %35, 196608, !dbg !4107
  %37 = and i24 %34, 30720, !dbg !4108
  %38 = icmp ne i24 %37, 0, !dbg !4108
  br label %43, !dbg !4110

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4111
  %41 = load i24, i24* %40, align 4, !dbg !4112
  %42 = or i24 %41, 1, !dbg !4112
  br label %43, !dbg !4113

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4114
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4115
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4116
  call void @llvm.dbg.value(metadata i8* %48, metadata !4075, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.value(metadata i8 poison, metadata !4076, metadata !DIExpression()), !dbg !4079
  %49 = lshr i24 %44, 1, !dbg !4114
  %50 = and i24 %49, 1, !dbg !4114
  %51 = zext i24 %50 to i32, !dbg !4114
  %52 = or i32 %51, %47, !dbg !4114
  %53 = trunc i32 %52 to i24, !dbg !4114
  %54 = shl nuw nsw i24 %53, 1, !dbg !4114
  %55 = and i24 %44, -3, !dbg !4114
  %56 = or i24 %54, %55, !dbg !4114
  store i24 %56, i24* %46, align 4, !dbg !4114
  ret i8* %48, !dbg !4117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4118 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4123, metadata !DIExpression()), !dbg !4126
  %2 = load i8*, i8** %0, align 4, !dbg !4127
  call void @llvm.dbg.value(metadata i8* %2, metadata !4124, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i32 0, metadata !4125, metadata !DIExpression()), !dbg !4126
  %3 = load i8, i8* %2, align 1, !dbg !4128
  %4 = zext i8 %3 to i32, !dbg !4129
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4130
  %6 = icmp eq i32 %5, 0, !dbg !4131
  br i1 %6, label %19, label %7, !dbg !4131

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4125, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i8* %10, metadata !4124, metadata !DIExpression()), !dbg !4126
  %11 = mul i32 %9, 10, !dbg !4132
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4134
  call void @llvm.dbg.value(metadata i8* %12, metadata !4124, metadata !DIExpression()), !dbg !4126
  %13 = add i32 %11, -48, !dbg !4135
  %14 = add i32 %13, %8, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %14, metadata !4125, metadata !DIExpression()), !dbg !4126
  %15 = load i8, i8* %12, align 1, !dbg !4128
  %16 = zext i8 %15 to i32, !dbg !4129
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4130
  %18 = icmp eq i32 %17, 0, !dbg !4131
  br i1 %18, label %19, label %7, !dbg !4131, !llvm.loop !4137

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4126
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4126
  store i8* %20, i8** %0, align 4, !dbg !4139
  ret i32 %21, !dbg !4140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4143, metadata !DIExpression()), !dbg !4144
  %2 = add i32 %0, -48, !dbg !4145
  %3 = icmp ult i32 %2, 10, !dbg !4146
  %4 = zext i1 %3 to i32, !dbg !4146
  ret i32 %4, !dbg !4147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4148 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4150, !srcloc !4151
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4152, !srcloc !4153
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4154, !srcloc !4155
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4156, !srcloc !4157
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4158, !srcloc !4159
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4160, !srcloc !4161
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4162, !srcloc !4163
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4164, !srcloc !4165
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4166, !srcloc !4167
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4168, !srcloc !4169
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4170, !srcloc !4171
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4172, !srcloc !4173
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4174, !srcloc !4175
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4176, !srcloc !4177
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4178, !srcloc !4179
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4180, !srcloc !4181
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4182, !srcloc !4183
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4184, !srcloc !4185
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4186, !srcloc !4187
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4188, !srcloc !4189
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4190, !srcloc !4191
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4192, !srcloc !4193
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4194, !srcloc !4195
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4196, !srcloc !4197
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4198, !srcloc !4199
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4200, !srcloc !4201
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4202, !srcloc !4203
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4204, !srcloc !4205
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4206, !srcloc !4207
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4208, !srcloc !4209
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4210, !srcloc !4211
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4212, !srcloc !4213
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4214, !srcloc !4215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !4216, !srcloc !4217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4218, !srcloc !4219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4220, !srcloc !4221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4222, !srcloc !4223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4224, !srcloc !4225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4226, !srcloc !4227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4228, !srcloc !4229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4230, !srcloc !4231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4232, !srcloc !4233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4234, !srcloc !4235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4236, !srcloc !4237
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4238, !srcloc !4239
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !4240, !srcloc !4241
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4242, !srcloc !4243
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4244, !srcloc !4245
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4246, !srcloc !4247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !4248, !srcloc !4249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4250, !srcloc !4251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4252, !srcloc !4253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4254, !srcloc !4255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4256, !srcloc !4257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4258, !srcloc !4259
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4260, !srcloc !4261
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4262, !srcloc !4263
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4264, !srcloc !4265
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4266, !srcloc !4267
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4268, !srcloc !4269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4270, !srcloc !4271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4272, !srcloc !4273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4274, !srcloc !4275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4276, !srcloc !4277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4278, !srcloc !4279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4280, !srcloc !4281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4282, !srcloc !4283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4284, !srcloc !4285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4286, !srcloc !4287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4288, !srcloc !4289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4290, !srcloc !4291
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4292, !srcloc !4293
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4294, !srcloc !4295
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4296, !srcloc !4297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4298, !srcloc !4299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4300, !srcloc !4301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4302, !srcloc !4303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4304, !srcloc !4305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4306, !srcloc !4307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4308, !srcloc !4309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4310, !srcloc !4311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4312, !srcloc !4313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4314, !srcloc !4315
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4316, !srcloc !4317
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4318, !srcloc !4319
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4320, !srcloc !4321
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4322, !srcloc !4323
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4324, !srcloc !4325
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !4326, !srcloc !4327
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4328, !srcloc !4329
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4330, !srcloc !4331
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4332, !srcloc !4333
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4334, !srcloc !4335
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4336, !srcloc !4337
  tail call void asm sideeffect ".globl\09CONFIG_STM32_BACKUP_SRAM\0A\09.equ\09CONFIG_STM32_BACKUP_SRAM,1\0A\09.type\09CONFIG_STM32_BACKUP_SRAM,%object", ""() #23, !dbg !4338, !srcloc !4339
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !4340, !srcloc !4341
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4342, !srcloc !4343
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4344, !srcloc !4345
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4346, !srcloc !4347
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4348, !srcloc !4349
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4350, !srcloc !4351
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4352, !srcloc !4353
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4354, !srcloc !4355
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4356, !srcloc !4357
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4358, !srcloc !4359
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4360, !srcloc !4361
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4362, !srcloc !4363
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4364, !srcloc !4365
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4366, !srcloc !4367
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4368, !srcloc !4369
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4370, !srcloc !4371
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4372, !srcloc !4373
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4374, !srcloc !4375
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4376, !srcloc !4377
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4378, !srcloc !4379
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4380, !srcloc !4381
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4382, !srcloc !4383
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4384, !srcloc !4385
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4386, !srcloc !4387
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4388, !srcloc !4389
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4390, !srcloc !4391
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4392, !srcloc !4393
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4394, !srcloc !4395
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4396, !srcloc !4397
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4398, !srcloc !4399
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4400, !srcloc !4401
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4402, !srcloc !4403
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4404, !srcloc !4405
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4406, !srcloc !4407
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4408, !srcloc !4409
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4410, !srcloc !4411
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4412, !srcloc !4413
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4414, !srcloc !4415
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4416, !srcloc !4417
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4418, !srcloc !4419
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4420, !srcloc !4421
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4422, !srcloc !4423
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4424, !srcloc !4425
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4426, !srcloc !4427
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4428, !srcloc !4429
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4430, !srcloc !4431
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4432, !srcloc !4433
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4434, !srcloc !4435
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4436, !srcloc !4437
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4438, !srcloc !4439
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4440, !srcloc !4441
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4442, !srcloc !4443
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4444, !srcloc !4445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4446, !srcloc !4447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4448, !srcloc !4449
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4450, !srcloc !4451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4452, !srcloc !4453
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4454, !srcloc !4455
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4456, !srcloc !4457
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4458, !srcloc !4459
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4460, !srcloc !4461
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4462, !srcloc !4463
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4464, !srcloc !4465
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4466, !srcloc !4467
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4468, !srcloc !4469
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4470, !srcloc !4471
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4472, !srcloc !4473
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4474, !srcloc !4475
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4476, !srcloc !4477
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4478, !srcloc !4479
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4480, !srcloc !4481
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4482, !srcloc !4483
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4484, !srcloc !4485
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4486, !srcloc !4487
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4488, !srcloc !4489
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4490, !srcloc !4491
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4492, !srcloc !4493
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4494, !srcloc !4495
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4496, !srcloc !4497
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4498, !srcloc !4499
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4500, !srcloc !4501
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4502, !srcloc !4503
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4504, !srcloc !4505
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4506, !srcloc !4507
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4508, !srcloc !4509
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4510, !srcloc !4511
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4512, !srcloc !4513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4514, !srcloc !4515
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4516, !srcloc !4517
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4518, !srcloc !4519
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4520, !srcloc !4521
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4522, !srcloc !4523
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4524, !srcloc !4525
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4526, !srcloc !4527
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4528, !srcloc !4529
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4530, !srcloc !4531
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4532, !srcloc !4533
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4534, !srcloc !4535
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4536, !srcloc !4537
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4538, !srcloc !4539
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4540, !srcloc !4541
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4542, !srcloc !4543
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4544, !srcloc !4545
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4546, !srcloc !4547
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4548, !srcloc !4549
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4550, !srcloc !4551
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4552, !srcloc !4553
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4554, !srcloc !4555
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4556, !srcloc !4557
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4558, !srcloc !4559
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4560, !srcloc !4561
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4562, !srcloc !4563
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4564, !srcloc !4565
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4566, !srcloc !4567
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4568, !srcloc !4569
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4570, !srcloc !4571
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4572, !srcloc !4573
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4574, !srcloc !4575
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4576, !srcloc !4577
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4578, !srcloc !4579
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4580, !srcloc !4581
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4582, !srcloc !4583
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4584, !srcloc !4585
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4586, !srcloc !4587
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4588, !srcloc !4589
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4590, !srcloc !4591
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4592, !srcloc !4593
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4594, !srcloc !4595
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4596, !srcloc !4597
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4598, !srcloc !4599
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4600, !srcloc !4601
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4602, !srcloc !4603
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4604, !srcloc !4605
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4606, !srcloc !4607
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4608, !srcloc !4609
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4610, !srcloc !4611
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4612, !srcloc !4613
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4614, !srcloc !4615
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4616, !srcloc !4617
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4618, !srcloc !4619
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4620, !srcloc !4621
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4622, !srcloc !4623
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4624, !srcloc !4625
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4626, !srcloc !4627
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4628, !srcloc !4629
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4630, !srcloc !4631
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4632, !srcloc !4633
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4634, !srcloc !4635
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4636, !srcloc !4637
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4638, !srcloc !4639
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4640, !srcloc !4641
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4642, !srcloc !4643
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4644, !srcloc !4645
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4646, !srcloc !4647
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4648, !srcloc !4649
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4650, !srcloc !4651
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4652, !srcloc !4653
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4654, !srcloc !4655
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4656, !srcloc !4657
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4658, !srcloc !4659
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4660, !srcloc !4661
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4662, !srcloc !4663
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4664, !srcloc !4665
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4666, !srcloc !4667
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4668, !srcloc !4669
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4670, !srcloc !4671
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4672, !srcloc !4673
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4674, !srcloc !4675
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4676, !srcloc !4677
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4678, !srcloc !4679
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4680, !srcloc !4681
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4682, !srcloc !4683
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4684, !srcloc !4685
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4686, !srcloc !4687
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4688, !srcloc !4689
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4690, !srcloc !4691
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4692, !srcloc !4693
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4694, !srcloc !4695
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4696, !srcloc !4697
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4698, !srcloc !4699
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4700, !srcloc !4701
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4702, !srcloc !4703
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4704, !srcloc !4705
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4706, !srcloc !4707
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4708, !srcloc !4709
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4710, !srcloc !4711
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4712, !srcloc !4713
  ret void, !dbg !4714
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4717, metadata !DIExpression()), !dbg !4719
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !4720
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !4721
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4722, !srcloc !4731
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %3, metadata !4728, metadata !DIExpression()) #23, !dbg !4732
  call void @llvm.dbg.value(metadata i32 undef, metadata !4729, metadata !DIExpression()) #23, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %3, metadata !4718, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %3, metadata !4733, metadata !DIExpression()) #23, !dbg !4738
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4740, !srcloc !4741
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4742
  ret i32 0, !dbg !4743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4744 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4746
  %2 = or i32 %1, 512, !dbg !4746
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4746
  ret void, !dbg !4747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4748 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4749
  %2 = or i32 %1, 1024, !dbg !4749
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4749
  ret void, !dbg !4750
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_backup_sram_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !4751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4753, metadata !DIExpression()), !dbg !4759
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !4760
  %3 = load i8*, i8** %2, align 4, !dbg !4760
  call void @llvm.dbg.value(metadata %struct.stm32_backup_sram_config* undef, metadata !4754, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !4757, metadata !DIExpression()), !dbg !4759
  %4 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !4761
  br i1 %4, label %5, label %16, !dbg !4763

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @clock_control_on(i8* noundef %3) #25, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %6, metadata !4756, metadata !DIExpression()), !dbg !4759
  %7 = icmp slt i32 %6, 0, !dbg !4765
  br i1 %7, label %16, label %8, !dbg !4767

8:                                                ; preds = %5
  tail call fastcc void @LL_PWR_EnableBkUpAccess() #25, !dbg !4768
  br label %9, !dbg !4769

9:                                                ; preds = %9, %8
  %10 = tail call fastcc i32 @LL_PWR_IsEnabledBkUpAccess() #25, !dbg !4770
  %11 = icmp eq i32 %10, 0, !dbg !4771
  br i1 %11, label %9, label %12, !dbg !4769, !llvm.loop !4772

12:                                               ; preds = %9
  tail call fastcc void @LL_PWR_EnableBkUpRegulator() #25, !dbg !4774
  br label %13, !dbg !4775

13:                                               ; preds = %13, %12
  %14 = tail call fastcc i32 @LL_PWR_IsEnabledBkUpRegulator() #25, !dbg !4776
  %15 = icmp eq i32 %14, 0, !dbg !4777
  br i1 %15, label %13, label %16, !dbg !4775, !llvm.loop !4778

16:                                               ; preds = %13, %5, %1
  %17 = phi i32 [ -19, %1 ], [ %6, %5 ], [ 0, %13 ], !dbg !4759
  ret i32 %17, !dbg !4780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !4781 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !4786, metadata !DIExpression()), !dbg !4787
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4788, !srcloc !4790
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !4791
  ret i1 %1, !dbg !4792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !4793 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !4795, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %0, metadata !4796, metadata !DIExpression()), !dbg !4798
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !4799
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !4797, metadata !DIExpression()), !dbg !4798
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !4800
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !4800
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !4801
  ret i32 %5, !dbg !4802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_EnableBkUpAccess() unnamed_addr #13 !dbg !4803 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4805
  %2 = or i32 %1, 256, !dbg !4805
  store volatile i32 %2, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4805
  ret void, !dbg !4806
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_IsEnabledBkUpAccess() unnamed_addr #14 !dbg !4807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4810
  %2 = lshr i32 %1, 8, !dbg !4811
  %3 = and i32 %2, 1, !dbg !4811
  ret i32 %3, !dbg !4812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_EnableBkUpRegulator() unnamed_addr #13 !dbg !4813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !4814
  %2 = or i32 %1, 512, !dbg !4814
  store volatile i32 %2, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !4814
  ret void, !dbg !4815
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_IsEnabledBkUpRegulator() unnamed_addr #14 !dbg !4816 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770500 to i32*), align 4, !dbg !4817
  %2 = lshr i32 %1, 9, !dbg !4818
  %3 = and i32 %2, 1, !dbg !4818
  ret i32 %3, !dbg !4819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !4820 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !4822, metadata !DIExpression()), !dbg !4823
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !4824
  ret i1 %1, !dbg !4825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4828, metadata !DIExpression()), !dbg !4829
  ret i32 0, !dbg !4830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4880, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4881, metadata !DIExpression()), !dbg !4882
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !4883
  ret void, !dbg !4884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4885 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4902, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4903, metadata !DIExpression()), !dbg !4905
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4906
  %4 = load i32, i32* %3, align 4, !dbg !4906
  call void @llvm.dbg.value(metadata i32 %4, metadata !4904, metadata !DIExpression()), !dbg !4905
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !4907
  ret void, !dbg !4908
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4909 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4913, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %0, metadata !4914, metadata !DIExpression()), !dbg !4916
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4917
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4917
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4915, metadata !DIExpression()), !dbg !4918
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4918
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4919
  %5 = bitcast i8* %4 to i32*, !dbg !4919
  %6 = load i32, i32* %5, align 4, !dbg !4919
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4920
  store i32 %6, i32* %7, align 4, !dbg !4921
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !4922
  unreachable, !dbg !4923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4927, metadata !DIExpression()), !dbg !4928
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !4929
  ret void, !dbg !4930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4935, metadata !DIExpression()), !dbg !4936
  %2 = icmp sgt i32 %0, -1, !dbg !4937
  br i1 %2, label %3, label %8, !dbg !4939

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4940, !srcloc !4942
  %4 = and i32 %0, 31, !dbg !4943
  %5 = shl nuw i32 1, %4, !dbg !4944
  %6 = lshr i32 %0, 5, !dbg !4945
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4946
  store volatile i32 %5, i32* %7, align 4, !dbg !4947
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4948, !srcloc !4949
  br label %8, !dbg !4950

8:                                                ; preds = %3, %1
  ret void, !dbg !4951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4954, metadata !DIExpression()), !dbg !4955
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !4956
  ret void, !dbg !4957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4960, metadata !DIExpression()), !dbg !4961
  %2 = icmp sgt i32 %0, -1, !dbg !4962
  br i1 %2, label %3, label %8, !dbg !4964

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4965
  %5 = shl nuw i32 1, %4, !dbg !4967
  %6 = lshr i32 %0, 5, !dbg !4968
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4969
  store volatile i32 %5, i32* %7, align 4, !dbg !4970
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4971, !srcloc !4975
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4976, !srcloc !4979
  br label %8, !dbg !4980

8:                                                ; preds = %3, %1
  ret void, !dbg !4981
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4986, metadata !DIExpression()), !dbg !4987
  %2 = lshr i32 %0, 5, !dbg !4988
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4989
  %4 = load volatile i32, i32* %3, align 4, !dbg !4989
  %5 = and i32 %0, 31, !dbg !4990
  %6 = shl nuw i32 1, %5, !dbg !4990
  %7 = and i32 %4, %6, !dbg !4991
  ret i32 %7, !dbg !4992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4997, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %1, metadata !4998, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata i32 %2, metadata !4999, metadata !DIExpression()), !dbg !5000
  %4 = add i32 %1, 1, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %4, metadata !4998, metadata !DIExpression()), !dbg !5000
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !5004
  ret void, !dbg !5005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5010, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i32 %1, metadata !5011, metadata !DIExpression()), !dbg !5012
  %3 = trunc i32 %1 to i8, !dbg !5013
  %4 = shl i8 %3, 4, !dbg !5013
  %5 = and i32 %0, 15, !dbg !5015
  %6 = add nsw i32 %5, -4, !dbg !5015
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5015
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5015
  %9 = icmp slt i32 %0, 0, !dbg !5015
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5015
  store volatile i8 %4, i8* %10, align 1, !dbg !5013
  ret void, !dbg !5016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5017 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5019, metadata !DIExpression()), !dbg !5020
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !5021
  ret void, !dbg !5022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5023 {
  tail call void @z_SysNmiOnReset() #24, !dbg !5025
  tail call void @z_arm_int_exit() #24, !dbg !5026
  ret void, !dbg !5027
}

; Function Attrs: optsize
declare !dbg !5028 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5029 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5031 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !5033
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !5034
  tail call void @z_bss_zero() #24, !dbg !5035
  tail call void @z_data_copy() #24, !dbg !5036
  tail call void @z_arm_interrupt_init() #24, !dbg !5037
  tail call void @z_cstart() #27, !dbg !5038
  unreachable, !dbg !5038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5039 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5040
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5041, !srcloc !5044
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5045, !srcloc !5048
  ret void, !dbg !5049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5050 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5051
  %2 = and i32 %1, -15728641, !dbg !5051
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5051
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5052, !srcloc !5057
  call void @llvm.dbg.value(metadata i32 %3, metadata !5055, metadata !DIExpression()) #23, !dbg !5058
  %4 = and i32 %3, -5, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %4, metadata !5060, metadata !DIExpression()) #23, !dbg !5065
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5067, !srcloc !5068
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5069, !srcloc !5048
  ret void, !dbg !5071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5075, metadata !DIExpression()), !dbg !5076
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5077
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5078
  store i32 %0, i32* %3, align 4, !dbg !5079
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5080
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5081
  store i32 %4, i32* %5, align 4, !dbg !5082
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5083
  %7 = or i32 %6, 268435456, !dbg !5083
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5083
  call void @llvm.dbg.value(metadata i32 0, metadata !5084, metadata !DIExpression()) #23, !dbg !5087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5089, !srcloc !5090
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5091
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5092
  %10 = load i32, i32* %9, align 4, !dbg !5092
  ret i32 %10, !dbg !5093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #3 !dbg !5094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5204, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5205, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %2, metadata !5206, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5207, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %4, metadata !5208, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %5, metadata !5209, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i8* %6, metadata !5210, metadata !DIExpression()), !dbg !5212
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5213
  call void @llvm.dbg.value(metadata i8* %8, metadata !5211, metadata !DIExpression()), !dbg !5212
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5214
  %10 = bitcast i8* %9 to i32*, !dbg !5214
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5215
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5216
  %12 = bitcast i8* %8 to i32*, !dbg !5217
  store i32 %11, i32* %12, align 4, !dbg !5218
  %13 = ptrtoint i8* %4 to i32, !dbg !5219
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5220
  %15 = bitcast i8* %14 to i32*, !dbg !5220
  store i32 %13, i32* %15, align 4, !dbg !5221
  %16 = ptrtoint i8* %5 to i32, !dbg !5222
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5223
  %18 = bitcast i8* %17 to i32*, !dbg !5223
  store i32 %16, i32* %18, align 4, !dbg !5224
  %19 = ptrtoint i8* %6 to i32, !dbg !5225
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5226
  %21 = bitcast i8* %20 to i32*, !dbg !5226
  store i32 %19, i32* %21, align 4, !dbg !5227
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5228
  %23 = bitcast i8* %22 to i32*, !dbg !5228
  store i32 16777216, i32* %23, align 4, !dbg !5229
  %24 = ptrtoint i8* %8 to i32, !dbg !5230
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5231
  store i32 %24, i32* %25, align 8, !dbg !5232
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5233
  store i32 0, i32* %26, align 4, !dbg !5234
  ret void, !dbg !5235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5241, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.value(metadata i32 %1, metadata !5242, metadata !DIExpression()), !dbg !5247
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5248
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5243, metadata !DIExpression()), !dbg !5247
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5249
  br i1 %4, label %19, label %5, !dbg !5251

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5246, metadata !DIExpression()), !dbg !5247
  %6 = icmp eq i32 %0, -22, !dbg !5252
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5252
  %8 = load i32, i32* %7, align 4, !dbg !5252
  br i1 %6, label %16, label %9, !dbg !5254

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5252
  %11 = icmp ule i32 %10, %0, !dbg !5252
  %12 = icmp ugt i32 %8, %0, !dbg !5252
  %13 = and i1 %12, %11, !dbg !5252
  %14 = icmp ugt i32 %8, %1, !dbg !5252
  %15 = and i1 %14, %13, !dbg !5252
  br i1 %15, label %18, label %19, !dbg !5252

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5252
  br i1 %17, label %18, label %19, !dbg !5254

18:                                               ; preds = %9, %16
  br label %19, !dbg !5255

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5247
  ret i32 %20, !dbg !5257
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8* %1, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5264, metadata !DIExpression()), !dbg !5265
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5266
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5267
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5268, !srcloc !5269
  unreachable, !dbg !5270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5271 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5289, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 %1, metadata !5290, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 %2, metadata !5291, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5292, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i32 0, metadata !5293, metadata !DIExpression()), !dbg !5299
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5300
  %9 = and i32 %8, 511, !dbg !5301
  call void @llvm.dbg.value(metadata i32 %9, metadata !5294, metadata !DIExpression()), !dbg !5299
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5302
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5302
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5303
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5298, metadata !DIExpression()), !dbg !5304
  call void @llvm.dbg.value(metadata i32 0, metadata !5305, metadata !DIExpression()) #23, !dbg !5308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5310, !srcloc !5311
  call void @llvm.dbg.value(metadata i8* %6, metadata !5296, metadata !DIExpression(DW_OP_deref)), !dbg !5299
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5312
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5297, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.value(metadata i8* %5, metadata !5295, metadata !DIExpression(DW_OP_deref)), !dbg !5299
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %12, metadata !5293, metadata !DIExpression()), !dbg !5299
  %13 = load i8, i8* %5, align 1, !dbg !5314, !range !5316
  call void @llvm.dbg.value(metadata i8 %13, metadata !5295, metadata !DIExpression()), !dbg !5299
  %14 = icmp eq i8 %13, 0, !dbg !5314
  br i1 %14, label %15, label %32, !dbg !5317

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5318
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5319
  %18 = load i8, i8* %6, align 1, !dbg !5320, !range !5316
  call void @llvm.dbg.value(metadata i8 %18, metadata !5296, metadata !DIExpression()), !dbg !5299
  %19 = icmp eq i8 %18, 0, !dbg !5320
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5322
  %21 = load i32, i32* %20, align 4, !dbg !5322
  br i1 %19, label %27, label %22, !dbg !5323

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5324
  %24 = icmp eq i32 %23, 0, !dbg !5327
  br i1 %24, label %25, label %31, !dbg !5328

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5329
  br label %29, !dbg !5331

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5332
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5322
  br label %31, !dbg !5334

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5334
  br label %32, !dbg !5335

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5335
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5335
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5335
  ret void, !dbg !5335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #3 !dbg !5336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5341, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i32 %1, metadata !5342, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i32 %2, metadata !5343, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8* %3, metadata !5344, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8 0, metadata !5345, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5346, metadata !DIExpression()), !dbg !5347
  store i8 0, i8* %3, align 1, !dbg !5348
  %5 = icmp ult i32 %2, -16777216, !dbg !5349
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5351
  br i1 %8, label %16, label %9, !dbg !5351

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5352
  %11 = icmp eq i32 %10, 0, !dbg !5352
  br i1 %11, label %12, label %13, !dbg !5354

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5346, metadata !DIExpression()), !dbg !5347
  store i8 1, i8* %3, align 1, !dbg !5357
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5347
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5346, metadata !DIExpression()), !dbg !5347
  br label %16, !dbg !5360

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5347
  ret %struct.__esf* %17, !dbg !5361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5362 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5366, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i32 %1, metadata !5367, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i8* %2, metadata !5368, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i32 0, metadata !5369, metadata !DIExpression()), !dbg !5370
  store i8 0, i8* %2, align 1, !dbg !5371
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5372

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %5, metadata !5369, metadata !DIExpression()), !dbg !5370
  br label %11, !dbg !5375

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5376
  call void @llvm.dbg.value(metadata i32 %7, metadata !5369, metadata !DIExpression()), !dbg !5370
  br label %11, !dbg !5377

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5378
  call void @llvm.dbg.value(metadata i32 0, metadata !5369, metadata !DIExpression()), !dbg !5370
  br label %11, !dbg !5379

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5380
  call void @llvm.dbg.value(metadata i32 0, metadata !5369, metadata !DIExpression()), !dbg !5370
  br label %11, !dbg !5381

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5382
  br label %11, !dbg !5383

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5385 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5389, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8* %1, metadata !5390, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 0, metadata !5391, metadata !DIExpression()), !dbg !5392
  store i8 0, i8* %1, align 1, !dbg !5393
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5394
  %4 = and i32 %3, 2, !dbg !5396
  %5 = icmp eq i32 %4, 0, !dbg !5397
  br i1 %5, label %6, label %33, !dbg !5398

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5399
  %8 = icmp sgt i32 %7, -1, !dbg !5401
  br i1 %8, label %9, label %33, !dbg !5402

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5403
  %11 = and i32 %10, 1073741824, !dbg !5405
  %12 = icmp eq i32 %11, 0, !dbg !5406
  br i1 %12, label %33, label %13, !dbg !5407

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5408
  br i1 %14, label %15, label %18, !dbg !5411

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5412
  %17 = load i32, i32* %16, align 4, !dbg !5412
  call void @llvm.dbg.value(metadata i32 %17, metadata !5391, metadata !DIExpression()), !dbg !5392
  br label %33, !dbg !5414

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5415
  %20 = and i32 %19, 255, !dbg !5417
  %21 = icmp eq i32 %20, 0, !dbg !5418
  br i1 %21, label %24, label %22, !dbg !5419

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5420
  call void @llvm.dbg.value(metadata i32 %23, metadata !5391, metadata !DIExpression()), !dbg !5392
  br label %33, !dbg !5422

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5423
  %26 = and i32 %25, 65280, !dbg !5425
  %27 = icmp eq i32 %26, 0, !dbg !5426
  br i1 %27, label %29, label %28, !dbg !5427

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5428
  call void @llvm.dbg.value(metadata i32 0, metadata !5391, metadata !DIExpression()), !dbg !5392
  br label %33, !dbg !5430

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5431
  %31 = icmp ult i32 %30, 65536, !dbg !5433
  br i1 %31, label %33, label %32, !dbg !5434

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5435
  call void @llvm.dbg.value(metadata i32 0, metadata !5391, metadata !DIExpression()), !dbg !5392
  br label %33, !dbg !5437

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5392
  call void @llvm.dbg.value(metadata i32 %34, metadata !5391, metadata !DIExpression()), !dbg !5392
  ret i32 %34, !dbg !5438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5439 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5441, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.value(metadata i32 %1, metadata !5442, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.value(metadata i8* %2, metadata !5443, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.value(metadata i32 0, metadata !5444, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.value(metadata i32 -22, metadata !5445, metadata !DIExpression()), !dbg !5454
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5455
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5457
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5459
  %7 = and i32 %6, 2, !dbg !5460
  %8 = icmp eq i32 %7, 0, !dbg !5461
  br i1 %8, label %19, label %9, !dbg !5462

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5463
  call void @llvm.dbg.value(metadata i32 %10, metadata !5446, metadata !DIExpression()), !dbg !5464
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5465
  %12 = and i32 %11, 128, !dbg !5467
  %13 = icmp eq i32 %12, 0, !dbg !5468
  br i1 %13, label %19, label %14, !dbg !5469

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5445, metadata !DIExpression()), !dbg !5454
  %15 = icmp eq i32 %1, 0, !dbg !5470
  br i1 %15, label %19, label %16, !dbg !5473

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5474
  %18 = and i32 %17, -129, !dbg !5474
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5474
  br label %19, !dbg !5476

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5454
  call void @llvm.dbg.value(metadata i32 %20, metadata !5445, metadata !DIExpression()), !dbg !5454
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5477
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5479
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5481
  %24 = and i32 %23, 16, !dbg !5482
  %25 = icmp eq i32 %24, 0, !dbg !5482
  br i1 %25, label %26, label %30, !dbg !5483

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5484
  %28 = and i32 %27, 2, !dbg !5485
  %29 = icmp eq i32 %28, 0, !dbg !5485
  br i1 %29, label %39, label %30, !dbg !5486

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5487
  %32 = and i32 %31, 2048, !dbg !5488
  %33 = icmp eq i32 %32, 0, !dbg !5488
  br i1 %33, label %39, label %34, !dbg !5489

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5490
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %36, metadata !5449, metadata !DIExpression()), !dbg !5492
  %37 = icmp eq i32 %36, 0, !dbg !5493
  br i1 %37, label %39, label %38, !dbg !5495

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5496, metadata !DIExpression()) #23, !dbg !5499
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5502, !srcloc !5503
  call void @llvm.dbg.value(metadata i32 2, metadata !5444, metadata !DIExpression()), !dbg !5454
  br label %39, !dbg !5504

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5454
  call void @llvm.dbg.value(metadata i32 %40, metadata !5444, metadata !DIExpression()), !dbg !5454
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5505
  %42 = and i32 %41, 32, !dbg !5507
  %43 = icmp eq i32 %42, 0, !dbg !5508
  br i1 %43, label %47, label %44, !dbg !5509

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5510
  %46 = and i32 %45, -8193, !dbg !5510
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5510
  br label %47, !dbg !5512

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5513
  %49 = or i32 %48, 255, !dbg !5513
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5513
  store i8 0, i8* %2, align 1, !dbg !5514
  ret i32 %40, !dbg !5515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5516 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5520, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata i32 %0, metadata !5521, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata i8* %1, metadata !5522, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata i32 0, metadata !5523, metadata !DIExpression()), !dbg !5527
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5528
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5530
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5532
  %6 = and i32 %5, 512, !dbg !5533
  %7 = icmp eq i32 %6, 0, !dbg !5533
  br i1 %7, label %18, label %8, !dbg !5534

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5535
  call void @llvm.dbg.value(metadata i32 %9, metadata !5524, metadata !DIExpression()), !dbg !5536
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5537
  %11 = and i32 %10, 32768, !dbg !5539
  %12 = icmp ne i32 %11, 0, !dbg !5540
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5541
  br i1 %14, label %15, label %18, !dbg !5541

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5542
  %17 = and i32 %16, -32769, !dbg !5542
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5542
  br label %18, !dbg !5546

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5547
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5549
  %21 = and i32 %20, 256, !dbg !5551
  %22 = icmp eq i32 %21, 0, !dbg !5552
  br i1 %22, label %23, label %25, !dbg !5553

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5554
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5556
  %27 = or i32 %26, 65280, !dbg !5556
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5556
  store i8 0, i8* %1, align 1, !dbg !5557
  ret void, !dbg !5558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5559 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5565, metadata !DIExpression()), !dbg !5567
  call void @llvm.dbg.value(metadata i32 0, metadata !5566, metadata !DIExpression()), !dbg !5567
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5568
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5570
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5572
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5574
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5576
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5578
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5580
  %8 = or i32 %7, -65536, !dbg !5580
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5580
  ret void, !dbg !5581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !5582 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5586, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.value(metadata i8* %0, metadata !5587, metadata !DIExpression()), !dbg !5588
  store i8 0, i8* %0, align 1, !dbg !5589
  ret void, !dbg !5590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5591 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5595, metadata !DIExpression()), !dbg !5598
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5599
  %3 = load i32, i32* %2, align 4, !dbg !5599
  %4 = inttoptr i32 %3 to i16*, !dbg !5600
  call void @llvm.dbg.value(metadata i16* %4, metadata !5596, metadata !DIExpression()), !dbg !5598
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5601
  %6 = or i32 %5, 256, !dbg !5601
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5601
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5602, !srcloc !5605
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5606, !srcloc !5609
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5610
  %8 = load i16, i16* %7, align 2, !dbg !5611
  call void @llvm.dbg.value(metadata i16 %8, metadata !5597, metadata !DIExpression()), !dbg !5598
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5612
  %10 = and i32 %9, -257, !dbg !5612
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5612
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5613, !srcloc !5605
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5615, !srcloc !5609
  %11 = icmp eq i16 %8, -8446, !dbg !5617
  ret i1 %11, !dbg !5619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5620 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5621
  %2 = or i32 %1, 16, !dbg !5621
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5621
  ret void, !dbg !5622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5623 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5626, metadata !DIExpression()), !dbg !5627
  br label %1, !dbg !5628

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5626, metadata !DIExpression()), !dbg !5627
  tail call fastcc void @__NVIC_SetPriority.13(i32 noundef %2) #25, !dbg !5630
  %3 = add nuw nsw i32 %2, 1, !dbg !5633
  call void @llvm.dbg.value(metadata i32 %3, metadata !5626, metadata !DIExpression()), !dbg !5627
  %4 = icmp eq i32 %3, 97, !dbg !5634
  br i1 %4, label %5, label %1, !dbg !5628, !llvm.loop !5635

5:                                                ; preds = %1
  ret void, !dbg !5637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.13(i32 noundef %0) unnamed_addr #13 !dbg !5638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5640, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.value(metadata i32 1, metadata !5641, metadata !DIExpression()), !dbg !5642
  %2 = and i32 %0, 15, !dbg !5643
  %3 = add nsw i32 %2, -4, !dbg !5643
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5643
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5643
  %6 = icmp slt i32 %0, 0, !dbg !5643
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5643
  store volatile i8 16, i8* %7, align 1, !dbg !5644
  ret void, !dbg !5646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5647 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5753, metadata !DIExpression()), !dbg !5754
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5755
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5757
  br i1 %3, label %4, label %12, !dbg !5758

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5759, !srcloc !5771
  call void @llvm.dbg.value(metadata i32 %5, metadata !5762, metadata !DIExpression()) #23, !dbg !5772
  %6 = icmp eq i32 %5, 0, !dbg !5773
  br i1 %6, label %12, label %7, !dbg !5774

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5775
  %9 = or i32 %8, 268435456, !dbg !5775
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5775
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5777
  %11 = and i32 %10, -32769, !dbg !5777
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5777
  br label %12, !dbg !5778

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5779
  ret void, !dbg !5780
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5781 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !5782
  ret void, !dbg !5783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !485, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i8 0, metadata !486, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32 64, metadata !488, metadata !DIExpression()), !dbg !5784
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5785
  %3 = load i32, i32* %2, align 4, !dbg !5785
  %4 = add i32 %3, -64, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %4, metadata !487, metadata !DIExpression()), !dbg !5784
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5788
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5789
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5790
  call void @llvm.dbg.value(metadata i8 1, metadata !486, metadata !DIExpression()), !dbg !5784
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5793 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5794
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5795, !srcloc !5798
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5799, !srcloc !5802
  ret void, !dbg !5803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5804 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5805, !srcloc !5808
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5809
  ret void, !dbg !5810
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5811 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5826, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i8 %1, metadata !5827, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 %2, metadata !5828, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 %3, metadata !5829, metadata !DIExpression()), !dbg !5830
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5831
  ret void, !dbg !5833
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5834 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5839, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i8 %1, metadata !5840, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 undef, metadata !5841, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 undef, metadata !5842, metadata !DIExpression()), !dbg !5844
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5845
  call void @llvm.dbg.value(metadata i8 %3, metadata !5843, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5844
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %4, metadata !5843, metadata !DIExpression()), !dbg !5844
  %5 = trunc i32 %4 to i8, !dbg !5847
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5848
  ret void, !dbg !5849
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5850 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5854, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i8 %1, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i8 %2, metadata !5856, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i1 %3, metadata !5857, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5860
  %5 = zext i8 %2 to i32, !dbg !5861
  call void @llvm.dbg.value(metadata i32 %5, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i32 0, metadata !5858, metadata !DIExpression()), !dbg !5860
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i32 0, metadata !5858, metadata !DIExpression()), !dbg !5860
  %7 = icmp eq i8 %1, 0, !dbg !5862
  br i1 %7, label %29, label %8, !dbg !5865

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5859, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i32 %10, metadata !5858, metadata !DIExpression()), !dbg !5860
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5866
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5869
  %13 = load i32, i32* %12, align 4, !dbg !5869
  %14 = icmp eq i32 %13, 0, !dbg !5870
  br i1 %14, label %25, label %15, !dbg !5871

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5872

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5874
  %18 = icmp eq i32 %17, 0, !dbg !5874
  br i1 %18, label %29, label %19, !dbg !5875

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5876
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %21, metadata !5859, metadata !DIExpression()), !dbg !5860
  %22 = icmp eq i32 %21, -22, !dbg !5878
  br i1 %22, label %29, label %23, !dbg !5880

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %24, metadata !5859, metadata !DIExpression()), !dbg !5860
  br label %25, !dbg !5882

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5860
  call void @llvm.dbg.value(metadata i32 %26, metadata !5859, metadata !DIExpression()), !dbg !5860
  %27 = add nuw nsw i32 %10, 1, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %27, metadata !5858, metadata !DIExpression()), !dbg !5860
  %28 = icmp eq i32 %27, %6, !dbg !5862
  br i1 %28, label %29, label %8, !dbg !5865, !llvm.loop !5884

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5860
  ret i32 %30, !dbg !5886
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5887 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5891, metadata !DIExpression()), !dbg !5893
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5894
  %3 = load i32, i32* %2, align 4, !dbg !5894
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5895, !range !5896
  %5 = icmp ult i32 %4, 2, !dbg !5895
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5897
  br i1 %7, label %8, label %15, !dbg !5897

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5898
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5899
  %11 = load i32, i32* %10, align 4, !dbg !5899
  %12 = and i32 %11, %9, !dbg !5900
  %13 = icmp eq i32 %12, 0, !dbg !5901
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5892, metadata !DIExpression()), !dbg !5893
  ret i32 %16, !dbg !5902
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5903 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5907, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5908, metadata !DIExpression()), !dbg !5910
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5911
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5911
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5909, metadata !DIExpression()), !dbg !5912
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5913
  %6 = load i32, i32* %5, align 4, !dbg !5913
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5914
  store i32 %6, i32* %7, align 4, !dbg !5915
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5916
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5917
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5918
  %11 = load i32, i32* %10, align 4, !dbg !5918
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !5919
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !5920
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5921
  ret i32 %12, !dbg !5922
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5923 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5930, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5931, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i32 undef, metadata !5932, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i32 %2, metadata !5933, metadata !DIExpression()), !dbg !5934
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5935
  %5 = load i32, i32* %4, align 4, !dbg !5935
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !5936
  %7 = or i32 %6, %5, !dbg !5937
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5938
  store i32 %7, i32* %8, align 4, !dbg !5939
  ret void, !dbg !5940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5941 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5945, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5946, metadata !DIExpression()), !dbg !5947
  %3 = zext i8 %0 to i32, !dbg !5948
  %4 = icmp ugt i8 %0, 7, !dbg !5950
  br i1 %4, label %6, label %5, !dbg !5951

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !5952
  br label %6, !dbg !5953

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5947
  ret i32 %7, !dbg !5954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5959, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5960, metadata !DIExpression()), !dbg !5961
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !5962
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5963
  %4 = load i32, i32* %3, align 4, !dbg !5963
  %5 = and i32 %4, -32, !dbg !5964
  %6 = or i32 %5, %0, !dbg !5965
  %7 = or i32 %6, 16, !dbg !5965
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5966
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5967
  %9 = load i32, i32* %8, align 4, !dbg !5967
  %10 = or i32 %9, 1, !dbg !5968
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5969
  ret void, !dbg !5970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5974, metadata !DIExpression()), !dbg !5975
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5976
  ret void, !dbg !5977
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5982, metadata !DIExpression()), !dbg !5983
  %2 = icmp ult i32 %0, 33, !dbg !5984
  br i1 %2, label %11, label %3, !dbg !5986

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5987
  br i1 %4, label %11, label %5, !dbg !5989

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5990
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5991, !range !5896
  %8 = mul nsw i32 %7, -2, !dbg !5992
  %9 = add nsw i32 %8, 62, !dbg !5992
  %10 = and i32 %9, 62, !dbg !5993
  br label %11, !dbg !5994

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5983
  ret i32 %12, !dbg !5995
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5996 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6000, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i8 %1, metadata !6001, metadata !DIExpression()), !dbg !6002
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6003
  ret void, !dbg !6005
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6006 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6010, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.value(metadata i8 %1, metadata !6011, metadata !DIExpression()), !dbg !6017
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6018
  call void @llvm.dbg.value(metadata i8 %3, metadata !6012, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6017
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %4, metadata !6012, metadata !DIExpression()), !dbg !6017
  %5 = icmp ne i32 %4, -22, !dbg !6020
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %4, metadata !6013, metadata !DIExpression()), !dbg !6022
  br i1 %7, label %8, label %12, !dbg !6021

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6013, metadata !DIExpression()), !dbg !6022
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !6023
  %10 = add i32 %9, 1, !dbg !6026
  call void @llvm.dbg.value(metadata i32 %10, metadata !6013, metadata !DIExpression()), !dbg !6022
  %11 = icmp eq i32 %10, 8, !dbg !6027
  br i1 %11, label %12, label %8, !dbg !6028, !llvm.loop !6029

12:                                               ; preds = %8, %2
  ret void, !dbg !6031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6035, metadata !DIExpression()), !dbg !6036
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6037
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6038
  ret void, !dbg !6039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6040 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6045
  %2 = icmp ugt i32 %1, 8, !dbg !6047
  br i1 %2, label %14, label %3, !dbg !6048

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !6049
  call void @llvm.dbg.value(metadata i32 0, metadata !6044, metadata !DIExpression()), !dbg !6050
  %4 = icmp eq i32 %1, 0, !dbg !6051
  br i1 %4, label %12, label %5, !dbg !6054

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6054

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6044, metadata !DIExpression()), !dbg !6050
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6055
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !6057
  %10 = add nuw i32 %8, 1, !dbg !6058
  call void @llvm.dbg.value(metadata i32 %10, metadata !6044, metadata !DIExpression()), !dbg !6050
  %11 = icmp eq i32 %10, %1, !dbg !6051
  br i1 %11, label %12, label %7, !dbg !6054, !llvm.loop !6059

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6061
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6062
  tail call void @arm_core_mpu_enable() #25, !dbg !6063
  br label %14, !dbg !6064

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6050
  ret i32 %15, !dbg !6065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6073, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i8* %1, metadata !6074, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i8* %0, metadata !6075, metadata !DIExpression()), !dbg !6076
  %3 = load i8, i8* %1, align 1, !dbg !6077
  %4 = icmp eq i8 %3, 0, !dbg !6078
  br i1 %4, label %13, label %5, !dbg !6079

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6073, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i8* %8, metadata !6074, metadata !DIExpression()), !dbg !6076
  store i8 %6, i8* %7, align 1, !dbg !6080
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6082
  call void @llvm.dbg.value(metadata i8* %9, metadata !6073, metadata !DIExpression()), !dbg !6076
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6083
  call void @llvm.dbg.value(metadata i8* %10, metadata !6074, metadata !DIExpression()), !dbg !6076
  %11 = load i8, i8* %10, align 1, !dbg !6077
  %12 = icmp eq i8 %11, 0, !dbg !6078
  br i1 %12, label %13, label %5, !dbg !6079, !llvm.loop !6084

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6086
  ret i8* %0, !dbg !6087
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %1, metadata !6093, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %2, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %0, metadata !6095, metadata !DIExpression()), !dbg !6096
  %4 = icmp eq i32 %2, 0, !dbg !6097
  br i1 %4, label %22, label %5, !dbg !6098

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %7, metadata !6094, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i8* %8, metadata !6093, metadata !DIExpression()), !dbg !6096
  %9 = load i8, i8* %8, align 1, !dbg !6099
  %10 = icmp eq i8 %9, 0, !dbg !6100
  br i1 %10, label %16, label %11, !dbg !6101

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6102
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6104
  call void @llvm.dbg.value(metadata i8* %12, metadata !6093, metadata !DIExpression()), !dbg !6096
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6105
  call void @llvm.dbg.value(metadata i8* %13, metadata !6092, metadata !DIExpression()), !dbg !6096
  %14 = add i32 %7, -1, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %14, metadata !6094, metadata !DIExpression()), !dbg !6096
  %15 = icmp eq i32 %14, 0, !dbg !6097
  br i1 %15, label %22, label %5, !dbg !6098, !llvm.loop !6107

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6092, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %18, metadata !6094, metadata !DIExpression()), !dbg !6096
  store i8 0, i8* %17, align 1, !dbg !6109
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6111
  call void @llvm.dbg.value(metadata i8* %19, metadata !6092, metadata !DIExpression()), !dbg !6096
  %20 = add i32 %18, -1, !dbg !6112
  call void @llvm.dbg.value(metadata i32 %20, metadata !6094, metadata !DIExpression()), !dbg !6096
  %21 = icmp eq i32 %20, 0, !dbg !6113
  br i1 %21, label %22, label %16, !dbg !6114, !llvm.loop !6115

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6122, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i32 %1, metadata !6123, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i32 %1, metadata !6124, metadata !DIExpression()), !dbg !6125
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6126

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6122, metadata !DIExpression()), !dbg !6125
  %6 = load i8, i8* %5, align 1, !dbg !6127
  %7 = icmp eq i8 %6, %3, !dbg !6128
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6129
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6130
  call void @llvm.dbg.value(metadata i8* %10, metadata !6122, metadata !DIExpression()), !dbg !6125
  br i1 %9, label %11, label %4, !dbg !6129, !llvm.loop !6132

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6134
  ret i8* %12, !dbg !6135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6138, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i32 %1, metadata !6139, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* null, metadata !6140, metadata !DIExpression()), !dbg !6141
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6142

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6141
  call void @llvm.dbg.value(metadata i8* %6, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* %5, metadata !6138, metadata !DIExpression()), !dbg !6141
  %7 = load i8, i8* %5, align 1, !dbg !6143
  %8 = icmp eq i8 %7, %3, !dbg !6146
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6147
  call void @llvm.dbg.value(metadata i8* %9, metadata !6140, metadata !DIExpression()), !dbg !6141
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6148
  call void @llvm.dbg.value(metadata i8* %10, metadata !6138, metadata !DIExpression()), !dbg !6141
  %11 = icmp eq i8 %7, 0, !dbg !6149
  br i1 %11, label %12, label %4, !dbg !6149, !llvm.loop !6150

12:                                               ; preds = %4
  ret i8* %9, !dbg !6152
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6157, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i32 0, metadata !6158, metadata !DIExpression()), !dbg !6159
  %2 = load i8, i8* %0, align 1, !dbg !6160
  %3 = icmp eq i8 %2, 0, !dbg !6161
  br i1 %3, label %11, label %4, !dbg !6162

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i8* %6, metadata !6157, metadata !DIExpression()), !dbg !6159
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6163
  call void @llvm.dbg.value(metadata i8* %7, metadata !6157, metadata !DIExpression()), !dbg !6159
  %8 = add i32 %5, 1, !dbg !6165
  call void @llvm.dbg.value(metadata i32 %8, metadata !6158, metadata !DIExpression()), !dbg !6159
  %9 = load i8, i8* %7, align 1, !dbg !6160
  %10 = icmp eq i8 %9, 0, !dbg !6161
  br i1 %10, label %11, label %4, !dbg !6162, !llvm.loop !6166

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6159
  ret i32 %12, !dbg !6168
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6173, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %1, metadata !6174, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 0, metadata !6175, metadata !DIExpression()), !dbg !6176
  %3 = load i8, i8* %0, align 1, !dbg !6177
  %4 = icmp ne i8 %3, 0, !dbg !6178
  %5 = icmp ne i32 %1, 0, !dbg !6179
  %6 = and i1 %4, %5, !dbg !6179
  br i1 %6, label %7, label %16, !dbg !6180

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8* %9, metadata !6173, metadata !DIExpression()), !dbg !6176
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6181
  call void @llvm.dbg.value(metadata i8* %10, metadata !6173, metadata !DIExpression()), !dbg !6176
  %11 = add nuw i32 %8, 1, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %11, metadata !6175, metadata !DIExpression()), !dbg !6176
  %12 = load i8, i8* %10, align 1, !dbg !6177
  %13 = icmp ne i8 %12, 0, !dbg !6178
  %14 = icmp ult i32 %11, %1, !dbg !6179
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6179
  br i1 %15, label %7, label %16, !dbg !6180, !llvm.loop !6184

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6176
  ret i32 %17, !dbg !6186
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6187 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6191, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i8* %1, metadata !6192, metadata !DIExpression()), !dbg !6193
  %3 = load i8, i8* %0, align 1, !dbg !6194
  %4 = load i8, i8* %1, align 1, !dbg !6195
  %5 = icmp ne i8 %3, %4, !dbg !6196
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6197
  br i1 %7, label %18, label %8, !dbg !6197

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6192, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i8* %10, metadata !6191, metadata !DIExpression()), !dbg !6193
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6198
  call void @llvm.dbg.value(metadata i8* %11, metadata !6191, metadata !DIExpression()), !dbg !6193
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6200
  call void @llvm.dbg.value(metadata i8* %12, metadata !6192, metadata !DIExpression()), !dbg !6193
  %13 = load i8, i8* %11, align 1, !dbg !6194
  %14 = load i8, i8* %12, align 1, !dbg !6195
  %15 = icmp ne i8 %13, %14, !dbg !6196
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6197
  br i1 %17, label %18, label %8, !dbg !6197, !llvm.loop !6201

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6194
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6195
  %21 = zext i8 %19 to i32, !dbg !6204
  %22 = zext i8 %20 to i32, !dbg !6205
  %23 = sub nsw i32 %21, %22, !dbg !6206
  ret i32 %23, !dbg !6207
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6208 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6212, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i8* %1, metadata !6213, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %2, metadata !6214, metadata !DIExpression()), !dbg !6215
  %4 = icmp eq i32 %2, 0, !dbg !6216
  br i1 %4, label %23, label %5, !dbg !6216

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6214, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i8* %7, metadata !6213, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i8* %8, metadata !6212, metadata !DIExpression()), !dbg !6215
  %9 = load i8, i8* %8, align 1, !dbg !6217
  %10 = load i8, i8* %7, align 1, !dbg !6218
  %11 = icmp ne i8 %9, %10, !dbg !6219
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6220
  br i1 %13, label %19, label %14, !dbg !6220

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6221
  call void @llvm.dbg.value(metadata i8* %15, metadata !6212, metadata !DIExpression()), !dbg !6215
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6223
  call void @llvm.dbg.value(metadata i8* %16, metadata !6213, metadata !DIExpression()), !dbg !6215
  %17 = add i32 %6, -1, !dbg !6224
  call void @llvm.dbg.value(metadata i32 %17, metadata !6214, metadata !DIExpression()), !dbg !6215
  %18 = icmp eq i32 %17, 0, !dbg !6216
  br i1 %18, label %23, label %5, !dbg !6216, !llvm.loop !6225

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6228
  %21 = zext i8 %10 to i32, !dbg !6229
  %22 = sub nsw i32 %20, %21, !dbg !6230
  br label %23, !dbg !6231

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6231
  ret i32 %24, !dbg !6232
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6238, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata i8* %1, metadata !6239, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata i8** %2, metadata !6240, metadata !DIExpression()), !dbg !6243
  %4 = icmp eq i8* %0, null, !dbg !6244
  br i1 %4, label %5, label %7, !dbg !6244

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6245
  br label %7, !dbg !6244

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6244
  call void @llvm.dbg.value(metadata i8* %8, metadata !6241, metadata !DIExpression()), !dbg !6243
  %9 = load i8, i8* %8, align 1, !dbg !6246
  %10 = icmp eq i8 %9, 0, !dbg !6246
  br i1 %10, label %33, label %11, !dbg !6247

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6241, metadata !DIExpression()), !dbg !6243
  %14 = zext i8 %12 to i32, !dbg !6246
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6248
  %16 = icmp eq i8* %15, null, !dbg !6247
  br i1 %16, label %21, label %17, !dbg !6249

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6250
  call void @llvm.dbg.value(metadata i8* %18, metadata !6241, metadata !DIExpression()), !dbg !6243
  %19 = load i8, i8* %18, align 1, !dbg !6246
  %20 = icmp eq i8 %19, 0, !dbg !6246
  br i1 %20, label %33, label %11, !dbg !6247, !llvm.loop !6252

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6242, metadata !DIExpression()), !dbg !6243
  %24 = zext i8 %22 to i32, !dbg !6254
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6255
  %26 = icmp eq i8* %25, null, !dbg !6256
  br i1 %26, label %27, label %31, !dbg !6257

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6258
  call void @llvm.dbg.value(metadata i8* %28, metadata !6242, metadata !DIExpression()), !dbg !6243
  %29 = load i8, i8* %28, align 1, !dbg !6254
  %30 = icmp eq i8 %29, 0, !dbg !6254
  br i1 %30, label %33, label %21, !dbg !6260, !llvm.loop !6261

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6263
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6266
  br label %33, !dbg !6267

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6243
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6243
  store i8* %34, i8** %2, align 4, !dbg !6243
  ret i8* %35, !dbg !6268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6271, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.value(metadata i8* %1, metadata !6272, metadata !DIExpression()), !dbg !6273
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6274
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6275
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6276
  ret i8* %0, !dbg !6277
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6280, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8* %1, metadata !6281, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 %2, metadata !6282, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8* %0, metadata !6283, metadata !DIExpression()), !dbg !6285
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6286
  call void @llvm.dbg.value(metadata i32 %4, metadata !6284, metadata !DIExpression()), !dbg !6285
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6287
  call void @llvm.dbg.value(metadata i8* %5, metadata !6280, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8* %1, metadata !6281, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 %2, metadata !6282, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 %2, metadata !6282, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6285
  %6 = icmp eq i32 %2, 0, !dbg !6288
  br i1 %6, label %18, label %7, !dbg !6289

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %9, metadata !6280, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8* %10, metadata !6281, metadata !DIExpression()), !dbg !6285
  %12 = load i8, i8* %10, align 1, !dbg !6291
  %13 = icmp eq i8 %12, 0, !dbg !6292
  br i1 %13, label %18, label %14, !dbg !6293

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6294
  call void @llvm.dbg.value(metadata i8* %15, metadata !6281, metadata !DIExpression()), !dbg !6285
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6296
  call void @llvm.dbg.value(metadata i8* %16, metadata !6280, metadata !DIExpression()), !dbg !6285
  store i8 %12, i8* %9, align 1, !dbg !6297
  call void @llvm.dbg.value(metadata i32 %11, metadata !6282, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 %11, metadata !6282, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6285
  %17 = icmp eq i32 %11, 0, !dbg !6288
  br i1 %17, label %18, label %7, !dbg !6289, !llvm.loop !6298

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6285
  store i8 0, i8* %19, align 1, !dbg !6300
  ret i8* %0, !dbg !6301
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6302 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6306, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %1, metadata !6307, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %2, metadata !6308, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %0, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %1, metadata !6310, metadata !DIExpression()), !dbg !6311
  %4 = icmp eq i32 %2, 0, !dbg !6312
  br i1 %4, label %31, label %5, !dbg !6314

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6310, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %0, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %2, metadata !6308, metadata !DIExpression()), !dbg !6311
  %6 = add i32 %2, -1, !dbg !6315
  call void @llvm.dbg.value(metadata i32 %6, metadata !6308, metadata !DIExpression()), !dbg !6311
  %7 = icmp eq i32 %6, 0, !dbg !6316
  br i1 %7, label %23, label %8, !dbg !6317

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6318
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6318
  br label %11, !dbg !6318

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6310, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8* %14, metadata !6309, metadata !DIExpression()), !dbg !6311
  %15 = load i8, i8* %14, align 1, !dbg !6319
  %16 = load i8, i8* %13, align 1, !dbg !6320
  %17 = icmp eq i8 %15, %16, !dbg !6321
  br i1 %17, label %18, label %23, !dbg !6318

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6322
  call void @llvm.dbg.value(metadata i8* %19, metadata !6309, metadata !DIExpression()), !dbg !6311
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6324
  call void @llvm.dbg.value(metadata i8* %20, metadata !6310, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %12, metadata !6308, metadata !DIExpression()), !dbg !6311
  %21 = add i32 %12, -1, !dbg !6315
  call void @llvm.dbg.value(metadata i32 %21, metadata !6308, metadata !DIExpression()), !dbg !6311
  %22 = icmp eq i32 %21, 0, !dbg !6316
  br i1 %22, label %23, label %11, !dbg !6317, !llvm.loop !6325

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6311
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6311
  %26 = load i8, i8* %24, align 1, !dbg !6327
  %27 = zext i8 %26 to i32, !dbg !6327
  %28 = load i8, i8* %25, align 1, !dbg !6328
  %29 = zext i8 %28 to i32, !dbg !6328
  %30 = sub nsw i32 %27, %29, !dbg !6329
  br label %31, !dbg !6330

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6311
  ret i32 %32, !dbg !6331
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6332 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6336, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i8* %1, metadata !6337, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i32 %2, metadata !6338, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i8* %0, metadata !6339, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i8* %1, metadata !6340, metadata !DIExpression()), !dbg !6341
  %4 = ptrtoint i8* %0 to i32, !dbg !6342
  %5 = ptrtoint i8* %1 to i32, !dbg !6342
  %6 = sub i32 %4, %5, !dbg !6342
  %7 = icmp ult i32 %6, %2, !dbg !6344
  br i1 %7, label %10, label %8, !dbg !6345

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6340, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i8* %0, metadata !6339, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i32 %2, metadata !6338, metadata !DIExpression()), !dbg !6341
  %9 = icmp eq i32 %2, 0, !dbg !6346
  br i1 %9, label %26, label %17, !dbg !6348

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6338, metadata !DIExpression()), !dbg !6341
  %12 = add i32 %11, -1, !dbg !6349
  call void @llvm.dbg.value(metadata i32 %12, metadata !6338, metadata !DIExpression()), !dbg !6341
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6352
  %14 = load i8, i8* %13, align 1, !dbg !6352
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6353
  store i8 %14, i8* %15, align 1, !dbg !6354
  %16 = icmp eq i32 %12, 0, !dbg !6355
  br i1 %16, label %26, label %10, !dbg !6356, !llvm.loop !6357

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6340, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i8* %19, metadata !6339, metadata !DIExpression()), !dbg !6341
  call void @llvm.dbg.value(metadata i32 %20, metadata !6338, metadata !DIExpression()), !dbg !6341
  %21 = load i8, i8* %18, align 1, !dbg !6359
  store i8 %21, i8* %19, align 1, !dbg !6361
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6362
  call void @llvm.dbg.value(metadata i8* %22, metadata !6339, metadata !DIExpression()), !dbg !6341
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6363
  call void @llvm.dbg.value(metadata i8* %23, metadata !6340, metadata !DIExpression()), !dbg !6341
  %24 = add i32 %20, -1, !dbg !6364
  call void @llvm.dbg.value(metadata i32 %24, metadata !6338, metadata !DIExpression()), !dbg !6341
  %25 = icmp eq i32 %24, 0, !dbg !6346
  br i1 %25, label %26, label %17, !dbg !6348, !llvm.loop !6365

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6367
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6374, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i8* %1, metadata !6375, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i32 %2, metadata !6376, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i8* %0, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i8* %1, metadata !6378, metadata !DIExpression()), !dbg !6379
  %4 = icmp eq i32 %2, 0, !dbg !6380
  br i1 %4, label %14, label %5, !dbg !6381

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6378, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i8* %7, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i32 %8, metadata !6376, metadata !DIExpression()), !dbg !6379
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6382
  call void @llvm.dbg.value(metadata i8* %9, metadata !6378, metadata !DIExpression()), !dbg !6379
  %10 = load i8, i8* %6, align 1, !dbg !6384
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6385
  call void @llvm.dbg.value(metadata i8* %11, metadata !6377, metadata !DIExpression()), !dbg !6379
  store i8 %10, i8* %7, align 1, !dbg !6386
  %12 = add i32 %8, -1, !dbg !6387
  call void @llvm.dbg.value(metadata i32 %12, metadata !6376, metadata !DIExpression()), !dbg !6379
  %13 = icmp eq i32 %12, 0, !dbg !6380
  br i1 %13, label %14, label %5, !dbg !6381, !llvm.loop !6388

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6390
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6395, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i32 %1, metadata !6396, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i32 %2, metadata !6397, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %0, metadata !6398, metadata !DIExpression()), !dbg !6400
  %4 = trunc i32 %1 to i8, !dbg !6401
  call void @llvm.dbg.value(metadata i8 %4, metadata !6399, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i32 %2, metadata !6397, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %0, metadata !6398, metadata !DIExpression()), !dbg !6400
  %5 = icmp eq i32 %2, 0, !dbg !6402
  br i1 %5, label %12, label %6, !dbg !6403

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6397, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata i8* %8, metadata !6398, metadata !DIExpression()), !dbg !6400
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6404
  call void @llvm.dbg.value(metadata i8* %9, metadata !6398, metadata !DIExpression()), !dbg !6400
  store i8 %4, i8* %8, align 1, !dbg !6406
  %10 = add i32 %7, -1, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %10, metadata !6397, metadata !DIExpression()), !dbg !6400
  %11 = icmp eq i32 %10, 0, !dbg !6402
  br i1 %11, label %12, label %6, !dbg !6403, !llvm.loop !6408

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6410
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6415, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 %1, metadata !6416, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 %2, metadata !6417, metadata !DIExpression()), !dbg !6421
  %4 = icmp eq i32 %2, 0, !dbg !6422
  br i1 %4, label %17, label %5, !dbg !6423

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6424

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6425
  call void @llvm.dbg.value(metadata i8* %9, metadata !6418, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata i32 %8, metadata !6417, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8* %9, metadata !6418, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6425
  %10 = load i8, i8* %9, align 1, !dbg !6426
  %11 = icmp eq i8 %10, %6, !dbg !6429
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6430
  call void @llvm.dbg.value(metadata i8* %12, metadata !6418, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata i32 %13, metadata !6417, metadata !DIExpression()), !dbg !6421
  br i1 %15, label %16, label %7, !dbg !6430, !llvm.loop !6431

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6433

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6421
  ret i8* %19, !dbg !6434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !6435 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6437, metadata !DIExpression()), !dbg !6438
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6439
  ret void, !dbg !6440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6443, metadata !DIExpression()), !dbg !6444
  ret i32 -1, !dbg !6445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6450, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i32* %1, metadata !6451, metadata !DIExpression()), !dbg !6452
  %3 = ptrtoint i32* %1 to i32, !dbg !6453
  %4 = and i32 %3, -2, !dbg !6453
  %5 = icmp eq i32 %4, 2, !dbg !6453
  br i1 %5, label %6, label %9, !dbg !6453

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6454
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6454
  br label %9, !dbg !6455

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6455
  ret i32 %10, !dbg !6456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6459, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i32* %1, metadata !6460, metadata !DIExpression()), !dbg !6461
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6462
  ret i32 %3, !dbg !6463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6467, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32* %1, metadata !6468, metadata !DIExpression()), !dbg !6469
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6470, !srcloc !6472
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6473
  ret i32 %3, !dbg !6474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6475 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6480, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32* %1, metadata !6481, metadata !DIExpression()), !dbg !6484
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6485
  call void @llvm.dbg.value(metadata i32 %3, metadata !6482, metadata !DIExpression()), !dbg !6484
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6486
  call void @llvm.dbg.value(metadata i32 %4, metadata !6483, metadata !DIExpression()), !dbg !6484
  %5 = icmp ne i32 %3, %4, !dbg !6487
  %6 = sext i1 %5 to i32, !dbg !6488
  ret i32 %6, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6494, metadata !DIExpression()), !dbg !6498
  call void @llvm.dbg.value(metadata i32 %1, metadata !6495, metadata !DIExpression()), !dbg !6498
  call void @llvm.dbg.value(metadata i32 %2, metadata !6496, metadata !DIExpression()), !dbg !6498
  call void @llvm.dbg.value(metadata i32* %3, metadata !6497, metadata !DIExpression()), !dbg !6498
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6499
  ret i32 %5, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6503, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i32 %1, metadata !6504, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i32 %2, metadata !6505, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i32* %3, metadata !6506, metadata !DIExpression()), !dbg !6507
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6508, !srcloc !6510
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6511
  ret i32 %5, !dbg !6512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6515, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 %1, metadata !6516, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 %2, metadata !6517, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32* %3, metadata !6518, metadata !DIExpression()), !dbg !6523
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6524
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6526
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6526
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6526
  br i1 %11, label %33, label %12, !dbg !6526

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6523
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6523
  call void @llvm.dbg.value(metadata i8* %14, metadata !6521, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 %13, metadata !6519, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 %1, metadata !6520, metadata !DIExpression()), !dbg !6523
  br label %15, !dbg !6527

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6529
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6523
  call void @llvm.dbg.value(metadata i8* %17, metadata !6521, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i32 %16, metadata !6520, metadata !DIExpression()), !dbg !6523
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6530
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6533
  call void @llvm.dbg.value(metadata i8* %19, metadata !6521, metadata !DIExpression()), !dbg !6523
  %20 = load i8, i8* %17, align 1, !dbg !6534
  %21 = zext i8 %20 to i32, !dbg !6535
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6530
  %23 = icmp eq i32 %22, -1, !dbg !6536
  br i1 %23, label %30, label %24, !dbg !6537

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6538
  call void @llvm.dbg.value(metadata i32 %25, metadata !6520, metadata !DIExpression()), !dbg !6523
  %26 = icmp eq i32 %25, 0, !dbg !6539
  br i1 %26, label %27, label %15, !dbg !6540, !llvm.loop !6541

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6543
  call void @llvm.dbg.value(metadata i32 %28, metadata !6519, metadata !DIExpression()), !dbg !6523
  %29 = icmp eq i32 %28, 0, !dbg !6544
  br i1 %29, label %30, label %12, !dbg !6545, !llvm.loop !6546

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6523
  call void @llvm.dbg.value(metadata i32 %31, metadata !6519, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.label(metadata !6522), !dbg !6549
  %32 = sub i32 %2, %31, !dbg !6550
  br label %33, !dbg !6551

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6523
  ret i32 %34, !dbg !6552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6553 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6557, metadata !DIExpression()), !dbg !6558
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6559
  %3 = icmp eq i32 %2, -1, !dbg !6561
  br i1 %3, label %8, label %4, !dbg !6562

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6563
  %6 = icmp eq i32 %5, -1, !dbg !6564
  %7 = sext i1 %6 to i32, !dbg !6563
  br label %8, !dbg !6565

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6558
  ret i32 %9, !dbg !6566
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6569, metadata !DIExpression()), !dbg !6570
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !6571
  ret void, !dbg !6572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6577, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i32 %1, metadata !6578, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6579, metadata !DIExpression()), !dbg !6583
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6584
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6584
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6584
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6580, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.value(metadata i32 %0, metadata !6582, metadata !DIExpression()), !dbg !6583
  %7 = icmp slt i32 %0, %1, !dbg !6585
  br i1 %7, label %8, label %22, !dbg !6588

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6582, metadata !DIExpression()), !dbg !6583
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !6589
  %11 = icmp eq i32 %10, 0, !dbg !6589
  br i1 %11, label %19, label %12, !dbg !6592

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !6593
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6595
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6595
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6597
  br i1 %15, label %19, label %16, !dbg !6598

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6599
  %18 = load i8*, i8** %17, align 4, !dbg !6599
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !6600
  br label %19, !dbg !6601

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6602
  call void @llvm.dbg.value(metadata i32 %20, metadata !6582, metadata !DIExpression()), !dbg !6583
  %21 = icmp eq i32 %20, %1, !dbg !6585
  br i1 %21, label %22, label %8, !dbg !6588, !llvm.loop !6603

22:                                               ; preds = %19, %3
  ret void, !dbg !6605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6608, metadata !DIExpression()), !dbg !6609
  %2 = shl nuw i32 1, %0, !dbg !6610
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !6613
  ret i32 %3, !dbg !6614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6619, metadata !DIExpression()), !dbg !6620
  %2 = shl nuw i32 1, %0, !dbg !6621
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !6624
  ret void, !dbg !6625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6629, metadata !DIExpression()), !dbg !6630
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6631
  ret void, !dbg !6632
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6635, metadata !DIExpression()), !dbg !6636
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6637
  %3 = and i32 %2, %0, !dbg !6637
  %4 = icmp eq i32 %3, %0, !dbg !6638
  %5 = zext i1 %4 to i32, !dbg !6638
  ret i32 %5, !dbg !6639
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6642, metadata !DIExpression()), !dbg !6643
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !6644
  ret void, !dbg !6645
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6648, metadata !DIExpression()), !dbg !6649
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !6650
  ret void, !dbg !6651
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6652 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6654, metadata !DIExpression()), !dbg !6655
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !6656
  ret void, !dbg !6657
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6660, metadata !DIExpression()), !dbg !6661
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !6662
  ret void, !dbg !6663
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6666, metadata !DIExpression()), !dbg !6667
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !6668
  ret void, !dbg !6669
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6672, metadata !DIExpression()), !dbg !6673
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !6674
  ret void, !dbg !6675
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6676 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6678, metadata !DIExpression()), !dbg !6679
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !6680
  ret void, !dbg !6681
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6684, metadata !DIExpression()), !dbg !6685
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !6686
  ret void, !dbg !6687
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6690, metadata !DIExpression()), !dbg !6691
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !6692
  ret void, !dbg !6693
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6694 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6696, metadata !DIExpression()), !dbg !6697
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !6698
  ret void, !dbg !6699
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6700 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6702, metadata !DIExpression()), !dbg !6703
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !6704
  ret i32 0, !dbg !6705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !740 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !744, metadata !DIExpression()), !dbg !6706
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !6707
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !6709
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !6711
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !6713
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !6715
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !6717
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !6719
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !6721
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !6723
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !6725
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !6727
  ret void, !dbg !6729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6732, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.value(metadata i32 0, metadata !6733, metadata !DIExpression()), !dbg !6734
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6735
  %3 = load i32, i32* %2, align 4, !dbg !6735
  call void @llvm.dbg.value(metadata i32 %3, metadata !6733, metadata !DIExpression()), !dbg !6734
  %4 = shl nuw i32 1, %0, !dbg !6736
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !6737
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !6738
  ret void, !dbg !6739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6742, metadata !DIExpression()), !dbg !6743
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6744
  %3 = or i32 %2, %0, !dbg !6744
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6744
  ret void, !dbg !6745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6748, metadata !DIExpression()), !dbg !6749
  %2 = icmp slt i32 %0, 32, !dbg !6750
  br i1 %2, label %3, label %5, !dbg !6752

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6753
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !6755
  br label %5, !dbg !6756

5:                                                ; preds = %1, %3
  ret void, !dbg !6757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6760, metadata !DIExpression()), !dbg !6761
  %2 = xor i32 %0, -1, !dbg !6762
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6762
  %4 = and i32 %3, %2, !dbg !6762
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6762
  ret void, !dbg !6763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6768, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.value(metadata i32 %1, metadata !6769, metadata !DIExpression()), !dbg !6770
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6771

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6772
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !6774
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !6775
  br label %11, !dbg !6776

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6777
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !6778
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !6779
  br label %11, !dbg !6780

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6781
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !6782
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !6783
  br label %11, !dbg !6784

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6785
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !6786
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !6787
  br label %11, !dbg !6788

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6792, metadata !DIExpression()), !dbg !6793
  %2 = xor i32 %0, -1, !dbg !6794
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6794
  %4 = and i32 %3, %2, !dbg !6794
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6794
  ret void, !dbg !6795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6798, metadata !DIExpression()), !dbg !6799
  %2 = xor i32 %0, -1, !dbg !6800
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6800
  %4 = and i32 %3, %2, !dbg !6800
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6800
  ret void, !dbg !6801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6804, metadata !DIExpression()), !dbg !6805
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6806
  %3 = or i32 %2, %0, !dbg !6806
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6806
  ret void, !dbg !6807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6810, metadata !DIExpression()), !dbg !6811
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6812
  %3 = or i32 %2, %0, !dbg !6812
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6812
  ret void, !dbg !6813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6818, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6819, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata i8* %2, metadata !6820, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6821, metadata !DIExpression()), !dbg !6824
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6823, metadata !DIExpression()), !dbg !6824
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6825
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6825
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6827
  br i1 %6, label %7, label %9, !dbg !6828

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6829
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6830
  store i8* %2, i8** %8, align 4, !dbg !6831
  br label %9, !dbg !6832

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6824
  ret i32 %10, !dbg !6833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #3 !dbg !6834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6836, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6837, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6838, metadata !DIExpression()), !dbg !6839
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6840
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6841
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6842
  store i8* null, i8** %3, align 4, !dbg !6843
  ret void, !dbg !6844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6847, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i8* %1, metadata !6848, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.value(metadata i8* %1, metadata !6849, metadata !DIExpression()), !dbg !6852
  %3 = bitcast i8* %1 to i32*, !dbg !6853
  %4 = load i32, i32* %3, align 4, !dbg !6853
  %5 = add i32 %4, -169, !dbg !6853
  %6 = icmp ult i32 %5, -121, !dbg !6853
  br i1 %6, label %15, label %7, !dbg !6855

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6856
  %9 = inttoptr i32 %8 to i32*, !dbg !6857
  call void @llvm.dbg.value(metadata i32* %9, metadata !6850, metadata !DIExpression()), !dbg !6852
  %10 = load volatile i32, i32* %9, align 4, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %10, metadata !6851, metadata !DIExpression()), !dbg !6852
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6859
  %12 = bitcast i8* %11 to i32*, !dbg !6859
  %13 = load i32, i32* %12, align 4, !dbg !6859
  %14 = or i32 %13, %10, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %14, metadata !6851, metadata !DIExpression()), !dbg !6852
  store volatile i32 %14, i32* %9, align 4, !dbg !6861
  br label %15, !dbg !6862

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6852
  ret i32 %16, !dbg !6863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6866, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i8* %1, metadata !6867, metadata !DIExpression()), !dbg !6871
  call void @llvm.dbg.value(metadata i8* %1, metadata !6868, metadata !DIExpression()), !dbg !6871
  %3 = bitcast i8* %1 to i32*, !dbg !6872
  %4 = load i32, i32* %3, align 4, !dbg !6872
  %5 = add i32 %4, -169, !dbg !6872
  %6 = icmp ult i32 %5, -121, !dbg !6872
  br i1 %6, label %16, label %7, !dbg !6874

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6875
  %9 = inttoptr i32 %8 to i32*, !dbg !6876
  call void @llvm.dbg.value(metadata i32* %9, metadata !6869, metadata !DIExpression()), !dbg !6871
  %10 = load volatile i32, i32* %9, align 4, !dbg !6877
  call void @llvm.dbg.value(metadata i32 %10, metadata !6870, metadata !DIExpression()), !dbg !6871
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6878
  %12 = bitcast i8* %11 to i32*, !dbg !6878
  %13 = load i32, i32* %12, align 4, !dbg !6878
  %14 = xor i32 %13, -1, !dbg !6879
  %15 = and i32 %10, %14, !dbg !6880
  call void @llvm.dbg.value(metadata i32 %15, metadata !6870, metadata !DIExpression()), !dbg !6871
  store volatile i32 %15, i32* %9, align 4, !dbg !6881
  br label %16, !dbg !6882

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6871
  ret i32 %17, !dbg !6883
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6886, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i8* %1, metadata !6887, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i32* %2, metadata !6888, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i8* %1, metadata !6889, metadata !DIExpression()), !dbg !6894
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %4, metadata !6890, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i32 undef, metadata !6891, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i32 undef, metadata !6892, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.value(metadata i32 %4, metadata !6893, metadata !DIExpression()), !dbg !6894
  %5 = bitcast i8* %1 to i32*, !dbg !6896
  %6 = load i32, i32* %5, align 4, !dbg !6896
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !6897

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !6898
  call void @llvm.dbg.value(metadata i32 %8, metadata !6891, metadata !DIExpression()), !dbg !6894
  br label %19, !dbg !6899

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !6901
  call void @llvm.dbg.value(metadata i32 %10, metadata !6892, metadata !DIExpression()), !dbg !6894
  br label %19, !dbg !6902

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6903
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !6904
  br label %19, !dbg !6905

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6906
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #25, !dbg !6907
  br label %19, !dbg !6908

17:                                               ; preds = %3
  br label %19, !dbg !6909

18:                                               ; preds = %3
  br label %19, !dbg !6910

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !6911
  br label %21, !dbg !6912

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !6894
  ret i32 %22, !dbg !6912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6915, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %1, metadata !6916, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %2, metadata !6917, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6923
  %4 = bitcast i8* %1 to i32*, !dbg !6924
  %5 = load i32, i32* %4, align 4, !dbg !6924
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !6925
  call void @llvm.dbg.value(metadata i32 %6, metadata !6922, metadata !DIExpression()), !dbg !6923
  %7 = icmp slt i32 %6, 0, !dbg !6926
  br i1 %7, label %22, label %8, !dbg !6928

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6923
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6929
  %10 = bitcast i8* %9 to i32*, !dbg !6929
  %11 = load i32, i32* %10, align 4, !dbg !6929
  %12 = lshr i32 %11, 16, !dbg !6929
  %13 = and i32 %12, 7, !dbg !6929
  %14 = lshr i32 %11, 8, !dbg !6930
  %15 = and i32 %14, 31, !dbg !6930
  %16 = shl i32 %13, %15, !dbg !6931
  call void @llvm.dbg.value(metadata i32 %16, metadata !6921, metadata !DIExpression()), !dbg !6923
  %17 = and i32 %11, 255, !dbg !6932
  %18 = or i32 %17, 1073887232, !dbg !6933
  %19 = inttoptr i32 %18 to i32*, !dbg !6934
  call void @llvm.dbg.value(metadata i32* %19, metadata !6919, metadata !DIExpression()), !dbg !6923
  %20 = load volatile i32, i32* %19, align 4, !dbg !6935
  call void @llvm.dbg.value(metadata i32 %20, metadata !6920, metadata !DIExpression()), !dbg !6923
  %21 = or i32 %16, %20, !dbg !6936
  call void @llvm.dbg.value(metadata i32 %21, metadata !6920, metadata !DIExpression()), !dbg !6923
  store volatile i32 %21, i32* %19, align 4, !dbg !6937
  br label %22, !dbg !6938

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6923
  ret i32 %23, !dbg !6939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6944, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 0, metadata !6945, metadata !DIExpression()), !dbg !6946
  %2 = add i32 %0, -1, !dbg !6947
  %3 = icmp ult i32 %2, 6, !dbg !6947
  br i1 %3, label %4, label %7, !dbg !6947

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6947
  %6 = load i32, i32* %5, align 4, !dbg !6947
  call void @llvm.dbg.value(metadata i32 %6, metadata !6945, metadata !DIExpression()), !dbg !6946
  br label %7, !dbg !6948

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6946
  ret i32 %8, !dbg !6949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6954, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.value(metadata i32 %1, metadata !6955, metadata !DIExpression()), !dbg !6956
  %3 = udiv i32 %0, %1, !dbg !6957
  ret i32 %3, !dbg !6958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6963, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 8, metadata !6964, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 84, metadata !6965, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %1, metadata !6966, metadata !DIExpression()), !dbg !6967
  %3 = mul i32 %0, 84, !dbg !6968
  %4 = shl nsw i32 %1, 3, !dbg !6969
  %5 = udiv i32 %3, %4, !dbg !6970
  ret i32 %5, !dbg !6971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6972 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6974, metadata !DIExpression()), !dbg !6977
  tail call void @config_enable_default_clocks() #24, !dbg !6978
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !6979
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !6979
  %4 = lshr i32 %3, 4, !dbg !6979
  %5 = and i32 %4, 15, !dbg !6979
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6979
  %7 = load i8, i8* %6, align 1, !dbg !6979
  %8 = zext i8 %7 to i32, !dbg !6979
  %9 = lshr i32 %2, %8, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %9, metadata !6975, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6976, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6977
  %10 = icmp ult i32 %9, 84000000, !dbg !6980
  br i1 %10, label %11, label %13, !dbg !6982

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6983
  br label %13, !dbg !6985

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !6986
  tail call fastcc void @set_up_plls() #25, !dbg !6987
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6988
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !6991
  br label %14, !dbg !6992

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6993
  %16 = icmp eq i32 %15, 8, !dbg !6994
  br i1 %16, label %17, label %14, !dbg !6992, !llvm.loop !6995

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6997
  br i1 %18, label %19, label %21, !dbg !6999

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !7000
  br label %21, !dbg !7002

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7003
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !7004
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !7005
  ret i32 0, !dbg !7006
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !7007 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7009
  %2 = and i32 %1, 240, !dbg !7009
  ret i32 %2, !dbg !7010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !7011 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !7012
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !7017
  br label %1, !dbg !7018

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !7019
  %3 = icmp eq i32 %2, 1, !dbg !7020
  br i1 %3, label %4, label %1, !dbg !7018, !llvm.loop !7021

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !7023
  br label %5, !dbg !7026

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !7027
  %7 = icmp eq i32 %6, 1, !dbg !7028
  br i1 %7, label %8, label %5, !dbg !7026, !llvm.loop !7029

8:                                                ; preds = %5
  ret void, !dbg !7031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7032 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7033
  %2 = icmp eq i32 %1, 8, !dbg !7035
  br i1 %2, label %3, label %4, !dbg !7036

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !7037
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !7039
  br label %4, !dbg !7040

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !7041
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7042
  %6 = and i32 %5, -196609, !dbg !7042
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7042
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7043
  %8 = and i32 %7, -251658241, !dbg !7043
  %9 = or i32 %8, 134217728, !dbg !7043
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7043
  tail call void @config_pll_sysclock() #24, !dbg !7044
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !7045
  br label %10, !dbg !7046

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !7047
  %12 = icmp eq i32 %11, 1, !dbg !7048
  br i1 %12, label %13, label %10, !dbg !7046, !llvm.loop !7049

13:                                               ; preds = %10
  ret void, !dbg !7051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7052 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7055
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7056
  %2 = and i32 %1, -241, !dbg !7056
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7060, metadata !DIExpression()), !dbg !7061
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7062
  %3 = and i32 %2, -4, !dbg !7062
  %4 = or i32 %3, %0, !dbg !7062
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7062
  ret void, !dbg !7063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7064 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7065
  %2 = and i32 %1, 12, !dbg !7065
  ret i32 %2, !dbg !7066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7067 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7069, metadata !DIExpression()), !dbg !7070
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7071
  %2 = and i32 %1, -7169, !dbg !7071
  %3 = or i32 %2, 4096, !dbg !7071
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7071
  ret void, !dbg !7072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7073 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7075, metadata !DIExpression()), !dbg !7076
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7077
  %2 = and i32 %1, -57345, !dbg !7077
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7077
  ret void, !dbg !7078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7079 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7080
  %2 = icmp eq i32 %1, 1, !dbg !7082
  br i1 %2, label %7, label %3, !dbg !7083

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7084
  br label %4, !dbg !7086

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7087
  %6 = icmp eq i32 %5, 1, !dbg !7088
  br i1 %6, label %7, label %4, !dbg !7086, !llvm.loop !7089

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !7091
  br label %8, !dbg !7092

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7093
  %10 = icmp eq i32 %9, 0, !dbg !7094
  br i1 %10, label %11, label %8, !dbg !7092, !llvm.loop !7095

11:                                               ; preds = %8
  ret void, !dbg !7097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7098 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7099
  %2 = and i32 %1, -16777217, !dbg !7099
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7099
  ret void, !dbg !7100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7101 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7102
  %2 = or i32 %1, 16777216, !dbg !7102
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7102
  ret void, !dbg !7103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7104 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7105
  %2 = lshr i32 %1, 25, !dbg !7106
  %3 = and i32 %2, 1, !dbg !7106
  ret i32 %3, !dbg !7107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7108 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7109
  %2 = lshr i32 %1, 1, !dbg !7110
  %3 = and i32 %2, 1, !dbg !7110
  ret i32 %3, !dbg !7111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7112 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7113
  %2 = or i32 %1, 1, !dbg !7113
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7113
  ret void, !dbg !7114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7115 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7116
  %2 = and i32 %1, -262145, !dbg !7116
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7116
  ret void, !dbg !7117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7119
  %2 = or i32 %1, 65536, !dbg !7119
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7119
  ret void, !dbg !7120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7121 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7122
  %2 = lshr i32 %1, 17, !dbg !7123
  %3 = and i32 %2, 1, !dbg !7123
  ret i32 %3, !dbg !7124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7126
  %2 = or i32 %1, 1, !dbg !7126
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7126
  ret void, !dbg !7127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7128 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7129
  %2 = lshr i32 %1, 1, !dbg !7130
  %3 = and i32 %2, 1, !dbg !7130
  ret i32 %3, !dbg !7131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7132 {
  ret i32 16000000, !dbg !7134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7138 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !7139
  ret void, !dbg !7140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7141 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7145, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 8, metadata !7146, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 84, metadata !7147, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 0, metadata !7148, metadata !DIExpression()), !dbg !7149
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7150
  %2 = and i32 %1, -4227072, !dbg !7150
  %3 = or i32 %2, 4199688, !dbg !7150
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7150
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7151
  %5 = and i32 %4, -196609, !dbg !7151
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7151
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7152
  %7 = and i32 %6, -1879048193, !dbg !7152
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7152
  ret void, !dbg !7153
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7154 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !7155
  ret void, !dbg !7156
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7157 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7160, metadata !DIExpression()), !dbg !7162
  %2 = bitcast i32* %1 to i8*, !dbg !7163
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7163
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7161, metadata !DIExpression()), !dbg !7164
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7165
  %4 = or i32 %3, 268435456, !dbg !7165
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7165
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7166
  %6 = and i32 %5, 268435456, !dbg !7166
  store volatile i32 %6, i32* %1, align 4, !dbg !7167
  %7 = load volatile i32, i32* %1, align 4, !dbg !7168
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7169
  ret void, !dbg !7169
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7172, metadata !DIExpression()), !dbg !7173
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #25, !dbg !7174
  br i1 %2, label %3, label %4, !dbg !7176

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7177
  br label %4, !dbg !7178

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7173
  ret i32 %5, !dbg !7179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !7180 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7184, metadata !DIExpression()), !dbg !7185
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7186, !srcloc !7188
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.46() #25, !dbg !7189
  ret i1 %1, !dbg !7190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7191 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7192
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7193
  ret void, !dbg !7194
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7197, metadata !DIExpression()), !dbg !7198
  %2 = icmp eq i32 %0, 10, !dbg !7199
  br i1 %2, label %3, label %4, !dbg !7201

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7202
  br label %4, !dbg !7204

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7205
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7206
  ret i32 %0, !dbg !7207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7208 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7211, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i8 %0, metadata !7212, metadata !DIExpression()), !dbg !7213
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7214, !srcloc !7216
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7217
  ret void, !dbg !7218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7219 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7221, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8 %0, metadata !7222, metadata !DIExpression()), !dbg !7224
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7225
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7223, metadata !DIExpression()), !dbg !7224
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7226
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7226
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #24, !dbg !7227
  ret void, !dbg !7228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.46() unnamed_addr #1 !dbg !7229 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7231, metadata !DIExpression()), !dbg !7232
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #24, !dbg !7233
  ret i1 %1, !dbg !7234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7235 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7282, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7283, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7284, metadata !DIExpression()), !dbg !7285
  ret void, !dbg !7286
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7287 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7289, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata i8 %1, metadata !7290, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata i32 %2, metadata !7291, metadata !DIExpression()), !dbg !7294
  %5 = bitcast i32* %4 to i8*, !dbg !7295
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7295
  call void @llvm.dbg.value(metadata i32* %4, metadata !7293, metadata !DIExpression(DW_OP_deref)), !dbg !7294
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %6, metadata !7292, metadata !DIExpression()), !dbg !7294
  %7 = icmp eq i32 %6, 0, !dbg !7297
  br i1 %7, label %8, label %31, !dbg !7299

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7292, metadata !DIExpression()), !dbg !7294
  %9 = and i32 %2, 131072, !dbg !7300
  %10 = icmp eq i32 %9, 0, !dbg !7302
  br i1 %10, label %28, label %11, !dbg !7303

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7304
  %13 = icmp eq i32 %12, 0, !dbg !7307
  br i1 %13, label %18, label %14, !dbg !7308

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7309
  %16 = shl nuw i32 1, %15, !dbg !7309
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7311
  br label %25, !dbg !7312

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7313
  %20 = icmp eq i32 %19, 0, !dbg !7315
  %21 = zext i8 %1 to i32, !dbg !7294
  br i1 %20, label %25, label %22, !dbg !7316

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7317
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7319
  br label %25, !dbg !7320

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7321
  %27 = load i32, i32* %4, align 4, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %30, metadata !7293, metadata !DIExpression()), !dbg !7294
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7323
  br label %31, !dbg !7324

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7321
  %30 = load i32, i32* %4, align 4, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %30, metadata !7293, metadata !DIExpression()), !dbg !7294
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7323
  call void @llvm.dbg.value(metadata i32 0, metadata !7292, metadata !DIExpression()), !dbg !7294
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7325
  ret i32 %6, !dbg !7325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7330, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32* %1, metadata !7331, metadata !DIExpression()), !dbg !7335
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7336
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7336
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7336
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7332, metadata !DIExpression()), !dbg !7335
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7337
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7337
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7337
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7334, metadata !DIExpression()), !dbg !7335
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7338
  store i32 %9, i32* %1, align 4, !dbg !7339
  ret i32 0, !dbg !7340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7343, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %1, metadata !7344, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %2, metadata !7345, metadata !DIExpression()), !dbg !7349
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7350
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7350
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7350
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7346, metadata !DIExpression()), !dbg !7349
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7351
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7351
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7351
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7347, metadata !DIExpression()), !dbg !7349
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %10, metadata !7348, metadata !DIExpression()), !dbg !7349
  %11 = xor i32 %1, -1, !dbg !7353
  %12 = and i32 %10, %11, !dbg !7354
  %13 = and i32 %2, %1, !dbg !7355
  %14 = or i32 %12, %13, !dbg !7356
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7357
  ret i32 0, !dbg !7358
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7359 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7361, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 %1, metadata !7362, metadata !DIExpression()), !dbg !7365
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7366
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7366
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7366
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7363, metadata !DIExpression()), !dbg !7365
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7367
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7367
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7367
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7364, metadata !DIExpression()), !dbg !7365
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7368
  store volatile i32 %1, i32* %9, align 4, !dbg !7368
  ret i32 0, !dbg !7369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7372, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 %1, metadata !7373, metadata !DIExpression()), !dbg !7376
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7377
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7377
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7377
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7374, metadata !DIExpression()), !dbg !7376
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7378
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7378
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7378
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7375, metadata !DIExpression()), !dbg !7376
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7379
  ret i32 0, !dbg !7380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7383, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 %1, metadata !7384, metadata !DIExpression()), !dbg !7387
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7388
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7388
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7388
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7385, metadata !DIExpression()), !dbg !7387
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7389
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7389
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7389
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7386, metadata !DIExpression()), !dbg !7387
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7390
  %10 = load volatile i32, i32* %9, align 4, !dbg !7390
  %11 = xor i32 %10, %1, !dbg !7390
  store volatile i32 %11, i32* %9, align 4, !dbg !7390
  ret i32 0, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7394, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8 %1, metadata !7395, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %2, metadata !7396, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %3, metadata !7397, metadata !DIExpression()), !dbg !7404
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7405
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7405
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7405
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7398, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* undef, metadata !7399, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 0, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 0, metadata !7402, metadata !DIExpression()), !dbg !7404
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7406

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7407
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7411
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7412
  %12 = load i32, i32* %11, align 4, !dbg !7412
  %13 = icmp eq i32 %10, %12, !dbg !7413
  br i1 %13, label %14, label %29, !dbg !7414

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7415
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7417
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7418
  br label %29, !dbg !7419

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7420
  %17 = load i8*, i8** %16, align 4, !dbg !7420
  call void @llvm.dbg.value(metadata i8* %17, metadata !7399, metadata !DIExpression()), !dbg !7404
  %18 = zext i8 %1 to i32, !dbg !7421
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7423
  %20 = icmp eq i32 %19, 0, !dbg !7424
  br i1 %20, label %21, label %29, !dbg !7425

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7426
  %23 = load i32, i32* %22, align 4, !dbg !7426
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7427
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7428

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7401, metadata !DIExpression()), !dbg !7404
  br label %27, !dbg !7429

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7401, metadata !DIExpression()), !dbg !7404
  br label %27, !dbg !7431

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7401, metadata !DIExpression()), !dbg !7404
  br label %27, !dbg !7432

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7404
  call void @llvm.dbg.value(metadata i32 %28, metadata !7401, metadata !DIExpression()), !dbg !7404
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7433
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7434
  br label %29, !dbg !7434

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7404
  call void @llvm.dbg.value(metadata i32 %30, metadata !7402, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.label(metadata !7403), !dbg !7435
  ret i32 %30, !dbg !7436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7439, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7440, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i1 %2, metadata !7441, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7443
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7444
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7444
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7444
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7442, metadata !DIExpression()), !dbg !7443
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7445
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7446
  ret i32 %8, !dbg !7447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7448 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7454, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i1 %2, metadata !7456, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7457
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7458
  br i1 %4, label %10, label %5, !dbg !7460

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7461
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7464
  %8 = or i1 %7, %2, !dbg !7465
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7465
  br i1 %2, label %11, label %13, !dbg !7465

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7466

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7467
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7470
  br label %13, !dbg !7471

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7457
  ret i32 %14, !dbg !7472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7473 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7477, metadata !DIExpression()), !dbg !7478
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7479
  %3 = icmp eq %struct._snode* %2, null, !dbg !7479
  ret i1 %3, !dbg !7479
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7480 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7484, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7485, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7486, metadata !DIExpression()), !dbg !7488
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7489
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7486, metadata !DIExpression()), !dbg !7488
  %4 = icmp eq %struct._snode* %3, null, !dbg !7491
  br i1 %4, label %15, label %5, !dbg !7489

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7486, metadata !DIExpression()), !dbg !7488
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7493
  br i1 %6, label %9, label %11, !dbg !7496

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7486, metadata !DIExpression()), !dbg !7488
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7493
  br i1 %8, label %9, label %11, !dbg !7496, !llvm.loop !7497

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7498
  br label %15, !dbg !7498

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7486, metadata !DIExpression()), !dbg !7488
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7491
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7487, metadata !DIExpression()), !dbg !7488
  %14 = icmp eq %struct._snode* %13, null, !dbg !7491
  br i1 %14, label %15, label %7, !dbg !7489, !llvm.loop !7497

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7501 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7505, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7506, metadata !DIExpression()), !dbg !7507
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7508
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7508
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7508
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7509
  %5 = icmp eq %struct._snode* %4, null, !dbg !7509
  br i1 %5, label %6, label %8, !dbg !7508

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7511
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7511
  br label %8, !dbg !7511

8:                                                ; preds = %6, %2
  ret void, !dbg !7508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7513 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7517, metadata !DIExpression()), !dbg !7518
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7519
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7519
  ret %struct._snode* %3, !dbg !7520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7521 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7525, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7526, metadata !DIExpression()), !dbg !7527
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7528
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7529
  ret void, !dbg !7530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7531 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7534, metadata !DIExpression()), !dbg !7535
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7536
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7537
  ret void, !dbg !7538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7539 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7541, metadata !DIExpression()), !dbg !7542
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7543
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7543
  ret %struct._snode* %3, !dbg !7544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7545 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7547, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7548, metadata !DIExpression()), !dbg !7549
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7550
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7553 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7557, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7558, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7559, metadata !DIExpression()), !dbg !7560
  %4 = icmp eq %struct._snode* %1, null, !dbg !7561
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7563
  br i1 %4, label %6, label %11, !dbg !7564

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7565
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7567
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7567
  br i1 %8, label %9, label %15, !dbg !7565

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7569
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7569
  br label %15, !dbg !7569

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7571
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7573
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7573
  br i1 %13, label %14, label %15, !dbg !7571

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7575
  br label %15, !dbg !7575

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7564
  ret void, !dbg !7564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !7577 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7581, metadata !DIExpression()), !dbg !7582
  %2 = icmp eq %struct._snode* %0, null, !dbg !7583
  br i1 %2, label %5, label %3, !dbg !7583

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7583
  br label %5, !dbg !7583

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7583
  ret %struct._snode* %6, !dbg !7583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7584 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7586, metadata !DIExpression()), !dbg !7587
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7588
  ret %struct._snode* %2, !dbg !7588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7589 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7591, metadata !DIExpression()), !dbg !7592
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7593
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7593
  ret %struct._snode* %3, !dbg !7594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7597, metadata !DIExpression()), !dbg !7600
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !7601, !range !7602
  call void @llvm.dbg.value(metadata i32 %2, metadata !7598, metadata !DIExpression()), !dbg !7600
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !7603
  call void @llvm.dbg.value(metadata i32 %3, metadata !7599, metadata !DIExpression()), !dbg !7600
  ret i32 %3, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7607, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %1, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %1, metadata !7609, metadata !DIExpression()), !dbg !7610
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7611
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7611
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7612
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7612
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7612
  %8 = shl nuw i32 1, %0, !dbg !7613
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !7614
  ret void, !dbg !7615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7616 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7620, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.value(metadata i32 %1, metadata !7621, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7622, metadata !DIExpression()), !dbg !7626
  %4 = bitcast i64* %3 to i8*, !dbg !7627
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7627
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7624, metadata !DIExpression()), !dbg !7626
  store i64 70368744177732, i64* %3, align 8, !dbg !7628
  call void @llvm.dbg.value(metadata i64* %3, metadata !7624, metadata !DIExpression(DW_OP_deref)), !dbg !7626
  %5 = call fastcc i32 @clock_control_on.48(i8* noundef nonnull %4) #25, !dbg !7629
  call void @llvm.dbg.value(metadata i32 %5, metadata !7625, metadata !DIExpression()), !dbg !7626
  %6 = icmp eq i32 %5, 0, !dbg !7630
  br i1 %6, label %7, label %8, !dbg !7632

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !7633
  br label %8, !dbg !7634

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7635
  ret void, !dbg !7635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.48(i8* noundef %0) unnamed_addr #1 !dbg !7636 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7638, metadata !DIExpression()), !dbg !7641
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7641
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7642
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7640, metadata !DIExpression()), !dbg !7641
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7643
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7643
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !7644
  ret i32 %5, !dbg !7645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7648, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %1, metadata !7649, metadata !DIExpression()), !dbg !7651
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %3, metadata !7650, metadata !DIExpression()), !dbg !7651
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !7653
  ret void, !dbg !7654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7659, metadata !DIExpression()), !dbg !7660
  %2 = sdiv i32 %0, 4, !dbg !7661
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7662
  %6 = add nsw i32 %5, 16, !dbg !7663
  %7 = shl i32 15, %6, !dbg !7664
  %8 = or i32 %7, %2, !dbg !7665
  ret i32 %8, !dbg !7666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7671, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.value(metadata i32 %1, metadata !7672, metadata !DIExpression()), !dbg !7673
  %3 = and i32 %1, 255, !dbg !7674
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7674
  %5 = load volatile i32, i32* %4, align 4, !dbg !7674
  %6 = lshr i32 %1, 16, !dbg !7674
  %7 = xor i32 %6, -1, !dbg !7674
  %8 = and i32 %5, %7, !dbg !7674
  call void @llvm.dbg.value(metadata i32 %6, metadata !7675, metadata !DIExpression()) #23, !dbg !7679
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7681, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %9, metadata !7678, metadata !DIExpression()) #23, !dbg !7679
  call void @llvm.dbg.value(metadata i32 %9, metadata !7683, metadata !DIExpression()) #23, !dbg !7688
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7690, !range !5896
  %11 = shl i32 %0, %10, !dbg !7674
  %12 = or i32 %11, %8, !dbg !7674
  store volatile i32 %12, i32* %4, align 4, !dbg !7674
  ret void, !dbg !7691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7692 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7696, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7697, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i32 %2, metadata !7698, metadata !DIExpression()), !dbg !7701
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7702
  %5 = icmp eq %struct._snode* %4, null, !dbg !7702
  br i1 %5, label %21, label %6, !dbg !7702

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7704
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7699, metadata !DIExpression()), !dbg !7701
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7705
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7705
  %11 = load i32, i32* %10, align 4, !dbg !7705
  %12 = and i32 %11, %2, !dbg !7709
  %13 = icmp eq i32 %12, 0, !dbg !7709
  br i1 %13, label %19, label %14, !dbg !7710

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7699, metadata !DIExpression()), !dbg !7701
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7711
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7711
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7711
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !7713
  br label %19, !dbg !7714

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7699, metadata !DIExpression()), !dbg !7701
  %20 = icmp eq %struct._snode* %8, null, !dbg !7715
  br i1 %20, label %21, label %6, !dbg !7715

21:                                               ; preds = %19, %3
  ret void, !dbg !7716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7719, metadata !DIExpression()), !dbg !7720
  %2 = and i32 %0, 255, !dbg !7721
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7721
  %4 = load volatile i32, i32* %3, align 4, !dbg !7721
  %5 = lshr i32 %0, 16, !dbg !7721
  %6 = and i32 %4, %5, !dbg !7721
  call void @llvm.dbg.value(metadata i32 %5, metadata !7675, metadata !DIExpression()) #23, !dbg !7722
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7724, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %7, metadata !7678, metadata !DIExpression()) #23, !dbg !7722
  call void @llvm.dbg.value(metadata i32 %7, metadata !7683, metadata !DIExpression()) #23, !dbg !7725
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7727, !range !5896
  %9 = lshr i32 %6, %8, !dbg !7728
  ret i32 %9, !dbg !7729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7730 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7735, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %1, metadata !7736, metadata !DIExpression()), !dbg !7737
  %3 = shl i32 %1, 16, !dbg !7738
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7738
  store volatile i32 %3, i32* %4, align 4, !dbg !7738
  ret void, !dbg !7739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7740 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7744, metadata !DIExpression()), !dbg !7745
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7746
  %3 = load volatile i32, i32* %2, align 4, !dbg !7746
  ret i32 %3, !dbg !7747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7748 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7750, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %1, metadata !7751, metadata !DIExpression()), !dbg !7752
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7753
  store volatile i32 %1, i32* %3, align 4, !dbg !7753
  ret void, !dbg !7754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7755 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7757, metadata !DIExpression()), !dbg !7758
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7759
  %3 = load volatile i32, i32* %2, align 4, !dbg !7759
  ret i32 %3, !dbg !7760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !7761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7765, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i32* %1, metadata !7766, metadata !DIExpression()), !dbg !7767
  %3 = and i32 %0, 131072, !dbg !7768
  %4 = icmp eq i32 %3, 0, !dbg !7770
  br i1 %4, label %22, label %5, !dbg !7771

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7772
  %6 = and i32 %0, 2, !dbg !7774
  %7 = icmp eq i32 %6, 0, !dbg !7776
  br i1 %7, label %11, label %8, !dbg !7777

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7778
  %10 = icmp eq i32 %9, 0, !dbg !7778
  br i1 %10, label %33, label %11, !dbg !7781

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7782
  store i32 %12, i32* %1, align 4, !dbg !7782
  %13 = and i32 %0, 16, !dbg !7783
  %14 = icmp eq i32 %13, 0, !dbg !7785
  br i1 %14, label %17, label %15, !dbg !7786

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7787
  br label %31, !dbg !7789

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7790
  %19 = icmp eq i32 %18, 0, !dbg !7792
  br i1 %19, label %33, label %20, !dbg !7793

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7794
  br label %31, !dbg !7796

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7797
  %24 = icmp eq i32 %23, 0, !dbg !7799
  br i1 %24, label %31, label %25, !dbg !7800

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7801
  %27 = icmp eq i32 %26, 0, !dbg !7804
  br i1 %27, label %28, label %31, !dbg !7805

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7806
  br label %33, !dbg !7807

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7767
  ret i32 %34, !dbg !7807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7808 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7812, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i32 %1, metadata !7813, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i32 %2, metadata !7814, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i32 %3, metadata !7815, metadata !DIExpression()), !dbg !7823
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7824
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7824
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7824
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7816, metadata !DIExpression()), !dbg !7823
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7825
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7825
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7825
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7817, metadata !DIExpression()), !dbg !7823
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %11, metadata !7818, metadata !DIExpression()), !dbg !7823
  %12 = and i32 %2, 48, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %12, metadata !7819, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i32 %2, metadata !7820, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7823
  call void @llvm.dbg.value(metadata i32 %2, metadata !7821, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7823
  call void @llvm.dbg.value(metadata i32 %2, metadata !7822, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7823
  %13 = lshr i32 %2, 6, !dbg !7828
  %14 = and i32 %13, 1, !dbg !7828
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !7829
  %15 = lshr i32 %2, 7, !dbg !7830
  %16 = and i32 %15, 3, !dbg !7830
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !7831
  %17 = lshr i32 %2, 9, !dbg !7832
  %18 = and i32 %17, 3, !dbg !7832
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !7833
  %19 = icmp eq i32 %12, 32, !dbg !7834
  br i1 %19, label %20, label %24, !dbg !7836

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7837
  br i1 %21, label %22, label %23, !dbg !7840

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7841
  br label %24, !dbg !7843

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7844
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7846
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !7847
  ret void, !dbg !7848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7851, metadata !DIExpression()), !dbg !7853
  %2 = shl nuw i32 1, %0, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %2, metadata !7852, metadata !DIExpression()), !dbg !7853
  ret i32 %2, !dbg !7855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7856 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7860, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %1, metadata !7861, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %2, metadata !7862, metadata !DIExpression()), !dbg !7863
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7864
  %5 = load volatile i32, i32* %4, align 4, !dbg !7864
  %6 = xor i32 %1, -1, !dbg !7864
  %7 = and i32 %5, %6, !dbg !7864
  %8 = mul i32 %2, %1, !dbg !7864
  %9 = or i32 %7, %8, !dbg !7864
  store volatile i32 %9, i32* %4, align 4, !dbg !7864
  ret void, !dbg !7865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7866 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7868, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %1, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %2, metadata !7870, metadata !DIExpression()), !dbg !7871
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7872
  %5 = load volatile i32, i32* %4, align 4, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7873
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7875, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7876
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7878, !range !5896
  %8 = shl nuw nsw i32 %7, 1, !dbg !7872
  %9 = shl i32 3, %8, !dbg !7872
  %10 = xor i32 %9, -1, !dbg !7872
  %11 = and i32 %5, %10, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7881
  %12 = shl i32 %2, %8, !dbg !7872
  %13 = or i32 %11, %12, !dbg !7872
  store volatile i32 %13, i32* %4, align 4, !dbg !7872
  ret void, !dbg !7883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7884 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7886, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i32 %1, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata i32 %2, metadata !7888, metadata !DIExpression()), !dbg !7889
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7890
  %5 = load volatile i32, i32* %4, align 4, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7891
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7893, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7894
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7896, !range !5896
  %8 = shl nuw nsw i32 %7, 1, !dbg !7890
  %9 = shl i32 3, %8, !dbg !7890
  %10 = xor i32 %9, -1, !dbg !7890
  %11 = and i32 %5, %10, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7899
  %12 = shl i32 %2, %8, !dbg !7890
  %13 = or i32 %11, %12, !dbg !7890
  store volatile i32 %13, i32* %4, align 4, !dbg !7890
  ret void, !dbg !7901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7902 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7904, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %1, metadata !7905, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %2, metadata !7906, metadata !DIExpression()), !dbg !7907
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7908
  %5 = load volatile i32, i32* %4, align 4, !dbg !7908
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7909
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7911, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7909
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7912
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7914, !range !5896
  %8 = shl nuw nsw i32 %7, 2, !dbg !7908
  %9 = shl i32 15, %8, !dbg !7908
  %10 = xor i32 %9, -1, !dbg !7908
  %11 = and i32 %5, %10, !dbg !7908
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7917
  %12 = shl i32 %2, %8, !dbg !7908
  %13 = or i32 %11, %12, !dbg !7908
  store volatile i32 %13, i32* %4, align 4, !dbg !7908
  ret void, !dbg !7919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7920 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7922, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i32 %1, metadata !7923, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i32 %2, metadata !7924, metadata !DIExpression()), !dbg !7925
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7926
  %5 = load volatile i32, i32* %4, align 4, !dbg !7926
  %6 = lshr i32 %1, 8, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %6, metadata !7675, metadata !DIExpression()) #23, !dbg !7927
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7929, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %7, metadata !7678, metadata !DIExpression()) #23, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %7, metadata !7683, metadata !DIExpression()) #23, !dbg !7930
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7932, !range !5896
  %9 = shl nuw nsw i32 %8, 2, !dbg !7926
  %10 = shl i32 15, %9, !dbg !7926
  %11 = xor i32 %10, -1, !dbg !7926
  %12 = and i32 %5, %11, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %6, metadata !7675, metadata !DIExpression()) #23, !dbg !7933
  call void @llvm.dbg.value(metadata i32 %7, metadata !7678, metadata !DIExpression()) #23, !dbg !7933
  call void @llvm.dbg.value(metadata i32 %7, metadata !7683, metadata !DIExpression()) #23, !dbg !7935
  %13 = shl i32 %2, %9, !dbg !7926
  %14 = or i32 %12, %13, !dbg !7926
  store volatile i32 %14, i32* %4, align 4, !dbg !7926
  ret void, !dbg !7937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7938 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7940, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %1, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %2, metadata !7942, metadata !DIExpression()), !dbg !7943
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7944
  %5 = load volatile i32, i32* %4, align 4, !dbg !7944
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7945
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7947, !srcloc !7682
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7945
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7948
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7950, !range !5896
  %8 = shl nuw nsw i32 %7, 1, !dbg !7944
  %9 = shl i32 3, %8, !dbg !7944
  %10 = xor i32 %9, -1, !dbg !7944
  %11 = and i32 %5, %10, !dbg !7944
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()) #23, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %6, metadata !7678, metadata !DIExpression()) #23, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %6, metadata !7683, metadata !DIExpression()) #23, !dbg !7953
  %12 = shl i32 %2, %8, !dbg !7944
  %13 = or i32 %11, %12, !dbg !7944
  store volatile i32 %13, i32* %4, align 4, !dbg !7944
  ret void, !dbg !7955
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7958, metadata !DIExpression()), !dbg !7961
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7962
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7962
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7962
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7959, metadata !DIExpression()), !dbg !7961
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7963
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7964
  %6 = tail call fastcc zeroext i1 @device_is_ready.54() #25, !dbg !7965
  br i1 %6, label %7, label %11, !dbg !7967

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %8, metadata !7960, metadata !DIExpression()), !dbg !7961
  %9 = icmp slt i32 %8, 0, !dbg !7969
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7971
  br label %11, !dbg !7971

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7961
  ret i32 %12, !dbg !7972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.54() unnamed_addr #1 !dbg !7973 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7977, metadata !DIExpression()), !dbg !7978
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7979, !srcloc !7981
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.55() #25, !dbg !7982
  ret i1 %1, !dbg !7983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7988, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i8 1, metadata !7989, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7990, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i32 0, metadata !7991, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7992, metadata !DIExpression()), !dbg !7993
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7994
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7994
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7994
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7990, metadata !DIExpression()), !dbg !7993
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7995
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7998
  %7 = tail call fastcc i32 @clock_control_on.48(i8* noundef nonnull %6) #25, !dbg !7999
  call void @llvm.dbg.value(metadata i32 %7, metadata !7991, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i32 %7, metadata !7991, metadata !DIExpression()), !dbg !7993
  ret i32 %7, !dbg !8000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.55() unnamed_addr #1 !dbg !8001 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8003, metadata !DIExpression()), !dbg !8004
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !8005
  ret i1 %1, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8011, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata i32 %1, metadata !8012, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata i32 %2, metadata !8013, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata i32 %3, metadata !8014, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata i32 0, metadata !8015, metadata !DIExpression()), !dbg !8019
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !8020
  %5 = icmp eq i32 %3, 17, !dbg !8021
  br i1 %5, label %6, label %14, !dbg !8022

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %7, metadata !8016, metadata !DIExpression()), !dbg !8024
  %8 = icmp eq i32 %7, 0, !dbg !8025
  %9 = shl nuw i32 1, %1, !dbg !8027
  br i1 %8, label %12, label %10, !dbg !8028

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !8029
  br label %14, !dbg !8031

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !8032
  br label %14, !dbg !8035

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8036
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8039, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8* %1, metadata !8040, metadata !DIExpression()), !dbg !8043
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8044
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8044
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8044
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8041, metadata !DIExpression()), !dbg !8043
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8045
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8045
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !8047
  %9 = icmp eq i32 %8, 0, !dbg !8047
  br i1 %9, label %12, label %10, !dbg !8048

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8049
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !8051
  br label %12, !dbg !8052

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8053
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8055
  %15 = icmp eq i32 %14, 0, !dbg !8055
  br i1 %15, label %19, label %16, !dbg !8056

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8057
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !8058
  store i8 %18, i8* %1, align 1, !dbg !8059
  br label %19, !dbg !8060

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8043
  ret i32 %20, !dbg !8061
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8064, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i8 %1, metadata !8065, metadata !DIExpression()), !dbg !8068
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8069
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8069
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8069
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8066, metadata !DIExpression()), !dbg !8068
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8070

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8071
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !8074
  %10 = icmp eq i32 %9, 0, !dbg !8074
  br i1 %10, label %18, label %11, !dbg !8075

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8076, !srcloc !8083
  call void @llvm.dbg.value(metadata i32 undef, metadata !8079, metadata !DIExpression()) #23, !dbg !8084
  call void @llvm.dbg.value(metadata i32 undef, metadata !8080, metadata !DIExpression()) #23, !dbg !8084
  call void @llvm.dbg.value(metadata i32 undef, metadata !8067, metadata !DIExpression()), !dbg !8068
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8085
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8087
  %15 = icmp eq i32 %14, 0, !dbg !8087
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8076
  br i1 %15, label %17, label %19, !dbg !8088

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8079, metadata !DIExpression()) #23, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %16, metadata !8067, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.value(metadata i32 undef, metadata !8089, metadata !DIExpression()) #23, !dbg !8092
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8094, !srcloc !8095
  br label %18, !dbg !8096

18:                                               ; preds = %17, %7
  br label %7, !dbg !8071, !llvm.loop !8097

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8076
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8099
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !8100
  call void @llvm.dbg.value(metadata i32 %20, metadata !8089, metadata !DIExpression()) #23, !dbg !8101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8103, !srcloc !8095
  ret void, !dbg !8104
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8107, metadata !DIExpression()), !dbg !8110
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8111
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8111
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8111
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8108, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.value(metadata i32 0, metadata !8109, metadata !DIExpression()), !dbg !8110
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8112
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8112
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !8114
  %8 = icmp ne i32 %7, 0, !dbg !8114
  %9 = zext i1 %8 to i32, !dbg !8115
  call void @llvm.dbg.value(metadata i32 %9, metadata !8109, metadata !DIExpression()), !dbg !8110
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8116
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !8118
  %12 = icmp eq i32 %11, 0, !dbg !8118
  %13 = or i32 %9, 2, !dbg !8119
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8119
  call void @llvm.dbg.value(metadata i32 %14, metadata !8109, metadata !DIExpression()), !dbg !8110
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8120
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !8122
  %17 = icmp eq i32 %16, 0, !dbg !8122
  %18 = or i32 %14, 4, !dbg !8123
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8123
  call void @llvm.dbg.value(metadata i32 %19, metadata !8109, metadata !DIExpression()), !dbg !8110
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8124
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !8126
  %22 = icmp eq i32 %21, 0, !dbg !8126
  %23 = or i32 %19, 8, !dbg !8127
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8127
  call void @llvm.dbg.value(metadata i32 %24, metadata !8109, metadata !DIExpression()), !dbg !8110
  %25 = and i32 %24, 8, !dbg !8128
  %26 = icmp eq i32 %25, 0, !dbg !8128
  br i1 %26, label %29, label %27, !dbg !8130

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8131
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !8133
  br label %29, !dbg !8134

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8135
  %31 = icmp eq i32 %30, 0, !dbg !8135
  br i1 %31, label %34, label %32, !dbg !8137

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8138
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !8140
  br label %34, !dbg !8141

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8142
  %36 = icmp eq i32 %35, 0, !dbg !8142
  br i1 %36, label %39, label %37, !dbg !8144

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8145
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !8147
  br label %39, !dbg !8148

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8149
  %41 = icmp eq i32 %40, 0, !dbg !8149
  br i1 %41, label %44, label %42, !dbg !8151

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8152
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !8154
  br label %44, !dbg !8155

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8156
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !8157
  ret i32 %24, !dbg !8158
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8161, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8162, metadata !DIExpression()), !dbg !8170
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8171
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8171
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8171
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8163, metadata !DIExpression()), !dbg !8170
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8172
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8172
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8172
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8164, metadata !DIExpression()), !dbg !8170
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8173
  %10 = load i8, i8* %9, align 4, !dbg !8173
  %11 = zext i8 %10 to i32, !dbg !8174
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8175
  call void @llvm.dbg.value(metadata i32 %12, metadata !8166, metadata !DIExpression()), !dbg !8170
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8176
  %14 = load i8, i8* %13, align 1, !dbg !8176
  %15 = zext i8 %14 to i32, !dbg !8177
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %16, metadata !8167, metadata !DIExpression()), !dbg !8170
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8179
  %18 = load i8, i8* %17, align 2, !dbg !8179
  %19 = zext i8 %18 to i32, !dbg !8180
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8181
  call void @llvm.dbg.value(metadata i32 %20, metadata !8168, metadata !DIExpression()), !dbg !8170
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8182
  %22 = load i8, i8* %21, align 1, !dbg !8182
  %23 = zext i8 %22 to i32, !dbg !8183
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %24, metadata !8169, metadata !DIExpression()), !dbg !8170
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8185

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8187
  br i1 %26, label %69, label %27, !dbg !8189

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8190

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8191
  br i1 %29, label %65, label %30, !dbg !8191

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8193
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8170
  br i1 %31, label %38, label %34, !dbg !8195

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8196
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !8196

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8199
  br i1 %37, label %38, label %69, !dbg !8200

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8201
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8202
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8203
  %41 = icmp eq i32 %12, %40, !dbg !8205
  br i1 %41, label %43, label %42, !dbg !8206

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8207
  br label %43, !dbg !8209

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8210
  %45 = icmp eq i32 %16, %44, !dbg !8212
  br i1 %45, label %47, label %46, !dbg !8213

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8214
  br label %47, !dbg !8216

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8217
  %49 = icmp eq i32 %20, %48, !dbg !8219
  br i1 %49, label %51, label %50, !dbg !8220

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8221
  br label %51, !dbg !8223

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8224
  %53 = icmp eq i32 %24, %52, !dbg !8226
  br i1 %53, label %55, label %54, !dbg !8227

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8228
  br label %55, !dbg !8230

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8231
  %57 = load i32, i32* %56, align 4, !dbg !8231
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8233
  %59 = load i32, i32* %58, align 4, !dbg !8233
  %60 = icmp eq i32 %57, %59, !dbg !8234
  br i1 %60, label %63, label %61, !dbg !8235

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8236
  %62 = load i32, i32* %56, align 4, !dbg !8238
  store i32 %62, i32* %58, align 4, !dbg !8239
  br label %63, !dbg !8240

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8241
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8242
  br label %69, !dbg !8243

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8191
  %67 = and i8 %66, 1, !dbg !8191
  %68 = icmp eq i8 %67, 0, !dbg !8191
  br i1 %68, label %30, label %69, !dbg !8191

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8170
  ret i32 %70, !dbg !8244
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8247, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8248, metadata !DIExpression()), !dbg !8250
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8251
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8251
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8251
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8249, metadata !DIExpression()), !dbg !8250
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8252
  %7 = load i32, i32* %6, align 4, !dbg !8252
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8253
  store i32 %7, i32* %8, align 4, !dbg !8254
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8255, !range !8256
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8257
  %11 = trunc i32 %10 to i8, !dbg !8257
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8258
  store i8 %11, i8* %12, align 4, !dbg !8259
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8260, !range !8261
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8262
  %15 = trunc i32 %14 to i8, !dbg !8262
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8263
  store i8 %15, i8* %16, align 1, !dbg !8264
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8265
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8266, !range !8256
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8267
  %20 = trunc i32 %19 to i8, !dbg !8267
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8268
  store i8 %20, i8* %21, align 2, !dbg !8269
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8270, !range !8271
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8272
  %24 = trunc i32 %23 to i8, !dbg !8272
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8273
  store i8 %24, i8* %25, align 1, !dbg !8274
  ret i32 0, !dbg !8275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8276 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8280, metadata !DIExpression()), !dbg !8282
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8283
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8283
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8283
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8281, metadata !DIExpression()), !dbg !8282
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8284
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8284
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8285
  ret i32 %7, !dbg !8286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8291, metadata !DIExpression()), !dbg !8292
  %2 = icmp eq i32 %0, 1024, !dbg !8293
  %3 = select i1 %2, i32 2, i32 0, !dbg !8293
  %4 = icmp eq i32 %0, 1536, !dbg !8293
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8293
  ret i32 %5, !dbg !8294
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8297, metadata !DIExpression()), !dbg !8299
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8300
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8300
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8300
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8298, metadata !DIExpression()), !dbg !8299
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8301
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8301
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8302
  ret i32 %7, !dbg !8303
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8308, metadata !DIExpression()), !dbg !8309
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8310
  %3 = icmp ult i32 %2, 4, !dbg !8310
  br i1 %3, label %4, label %7, !dbg !8310

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8310
  %6 = load i32, i32* %5, align 4, !dbg !8310
  br label %7, !dbg !8310

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8311
  ret i32 %8, !dbg !8313
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8314 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8316, metadata !DIExpression()), !dbg !8318
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8319
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8319
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8319
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8317, metadata !DIExpression()), !dbg !8318
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8320
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8320
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8321
  ret i32 %7, !dbg !8322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8327, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %1, metadata !8328, metadata !DIExpression()), !dbg !8329
  %3 = icmp eq i32 %0, 4096, !dbg !8330
  %4 = icmp eq i32 %1, 0, !dbg !8330
  %5 = select i1 %4, i32 4, i32 3, !dbg !8330
  %6 = select i1 %4, i32 3, i32 2, !dbg !8330
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8330
  ret i32 %7, !dbg !8331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8334, metadata !DIExpression()), !dbg !8336
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8337
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8337
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8337
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8335, metadata !DIExpression()), !dbg !8336
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8338
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8338
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8339
  ret i32 %7, !dbg !8340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8345, metadata !DIExpression()), !dbg !8346
  %2 = icmp eq i32 %0, 768, !dbg !8347
  %3 = zext i1 %2 to i32, !dbg !8346
  ret i32 %3, !dbg !8349
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8350 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8355, metadata !DIExpression()), !dbg !8356
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8357
  %3 = load volatile i32, i32* %2, align 4, !dbg !8357
  %4 = and i32 %3, 768, !dbg !8357
  ret i32 %4, !dbg !8358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8359 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8361, metadata !DIExpression()), !dbg !8362
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8363
  %3 = load volatile i32, i32* %2, align 4, !dbg !8363
  %4 = and i32 %3, 4096, !dbg !8363
  ret i32 %4, !dbg !8364
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8365 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8367, metadata !DIExpression()), !dbg !8368
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8369
  %3 = load volatile i32, i32* %2, align 4, !dbg !8369
  %4 = and i32 %3, 12288, !dbg !8369
  ret i32 %4, !dbg !8370
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8373, metadata !DIExpression()), !dbg !8374
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8375
  %3 = load volatile i32, i32* %2, align 4, !dbg !8375
  %4 = and i32 %3, 1536, !dbg !8375
  ret i32 %4, !dbg !8376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8381, metadata !DIExpression()), !dbg !8382
  %2 = icmp eq i32 %0, 2, !dbg !8383
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8383
  %4 = icmp eq i32 %0, 1, !dbg !8383
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8383
  ret i32 %5, !dbg !8384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8389, metadata !DIExpression()), !dbg !8390
  %2 = icmp ult i32 %0, 3, !dbg !8391
  br i1 %2, label %3, label %6, !dbg !8391

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8391
  %5 = load i32, i32* %4, align 4, !dbg !8391
  br label %6, !dbg !8391

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8392
  ret i32 %7, !dbg !8394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8399, metadata !DIExpression()), !dbg !8401
  call void @llvm.dbg.value(metadata i32 %1, metadata !8400, metadata !DIExpression()), !dbg !8401
  %3 = icmp eq i32 %0, 4, !dbg !8402
  %4 = icmp eq i32 %1, 0, !dbg !8402
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8402
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8402
  ret i32 %6, !dbg !8403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8408, metadata !DIExpression()), !dbg !8409
  %2 = icmp eq i32 %0, 1, !dbg !8410
  %3 = select i1 %2, i32 768, i32 0, !dbg !8409
  ret i32 %3, !dbg !8412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8413 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8417, metadata !DIExpression()), !dbg !8418
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8419
  %3 = load volatile i32, i32* %2, align 4, !dbg !8419
  %4 = and i32 %3, -8193, !dbg !8419
  store volatile i32 %4, i32* %2, align 4, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8421 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8425, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 %1, metadata !8426, metadata !DIExpression()), !dbg !8428
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8429
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8429
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8429
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8427, metadata !DIExpression()), !dbg !8428
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8430
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8430
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8431
  ret void, !dbg !8432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8435, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.value(metadata i32 %1, metadata !8436, metadata !DIExpression()), !dbg !8438
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8439
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8439
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8439
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8437, metadata !DIExpression()), !dbg !8438
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8440
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8440
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8445, metadata !DIExpression()), !dbg !8448
  call void @llvm.dbg.value(metadata i32 %1, metadata !8446, metadata !DIExpression()), !dbg !8448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8449
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8449
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8449
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8447, metadata !DIExpression()), !dbg !8448
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8450
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8450
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8451
  ret void, !dbg !8452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8455, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 %1, metadata !8456, metadata !DIExpression()), !dbg !8458
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8459
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8459
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8459
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8457, metadata !DIExpression()), !dbg !8458
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8460
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8460
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8461
  ret void, !dbg !8462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8463 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8465, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.value(metadata i32 %1, metadata !8466, metadata !DIExpression()), !dbg !8470
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8471
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8471
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8471
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8467, metadata !DIExpression()), !dbg !8470
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8472
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8472
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8472
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8468, metadata !DIExpression()), !dbg !8470
  %10 = bitcast i32* %3 to i8*, !dbg !8473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8473
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8474
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8474
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8478
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8478
  %15 = load i8*, i8** %14, align 4, !dbg !8478
  call void @llvm.dbg.value(metadata i32* %3, metadata !8469, metadata !DIExpression(DW_OP_deref)), !dbg !8470
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !8479
  %17 = icmp slt i32 %16, 0, !dbg !8480
  br i1 %17, label %23, label %18, !dbg !8481

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8482
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8482
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !8483
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8484
  %22 = load i32, i32* %3, align 4, !dbg !8485
  call void @llvm.dbg.value(metadata i32 %22, metadata !8469, metadata !DIExpression()), !dbg !8470
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !8486
  br label %23, !dbg !8487

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8487
  ret void, !dbg !8487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8488 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8490, metadata !DIExpression()), !dbg !8491
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8492
  %3 = load volatile i32, i32* %2, align 4, !dbg !8492
  %4 = or i32 %3, 8192, !dbg !8492
  store volatile i32 %4, i32* %2, align 4, !dbg !8492
  ret void, !dbg !8493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8496, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata i8* %1, metadata !8497, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata i32* %2, metadata !8498, metadata !DIExpression()), !dbg !8500
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8501
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8501
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8501
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8499, metadata !DIExpression()), !dbg !8500
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8502
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8502
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8504
  br i1 %9, label %12, label %10, !dbg !8505

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !8506
  br label %12, !dbg !8507

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8500
  ret i32 %13, !dbg !8508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8509 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8513, metadata !DIExpression()), !dbg !8515
  call void @llvm.dbg.value(metadata i32 0, metadata !8514, metadata !DIExpression()), !dbg !8515
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8516
  %3 = load volatile i32, i32* %2, align 4, !dbg !8516
  %4 = and i32 %3, -32769, !dbg !8516
  store volatile i32 %4, i32* %2, align 4, !dbg !8516
  ret void, !dbg !8517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8518 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8522, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 %1, metadata !8523, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 0, metadata !8524, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 %2, metadata !8525, metadata !DIExpression()), !dbg !8526
  %4 = zext i32 %1 to i64, !dbg !8527
  %5 = mul nuw nsw i64 %4, 25, !dbg !8527
  %6 = zext i32 %2 to i64, !dbg !8527
  %7 = shl nuw nsw i64 %6, 2, !dbg !8527
  %8 = udiv i64 %5, %7, !dbg !8527
  %9 = trunc i64 %8 to i32, !dbg !8527
  %10 = udiv i32 %9, 100, !dbg !8527
  %11 = shl nuw nsw i32 %10, 4, !dbg !8527
  %12 = mul i32 %10, -100, !dbg !8527
  %13 = add i32 %12, %9, !dbg !8527
  %14 = shl i32 %13, 4, !dbg !8527
  %15 = add i32 %14, 50, !dbg !8527
  %16 = udiv i32 %15, 100, !dbg !8527
  %17 = and i32 %16, 240, !dbg !8527
  %18 = add nuw nsw i32 %17, %11, !dbg !8527
  %19 = and i32 %16, 15, !dbg !8527
  %20 = and i32 %18, 65520, !dbg !8530
  %21 = or i32 %20, %19, !dbg !8530
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8531
  store volatile i32 %21, i32* %22, align 4, !dbg !8532
  ret void, !dbg !8533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8536, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i32 %1, metadata !8537, metadata !DIExpression()), !dbg !8538
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8539
  %4 = load volatile i32, i32* %3, align 4, !dbg !8539
  %5 = and i32 %4, -769, !dbg !8539
  %6 = or i32 %5, %1, !dbg !8539
  store volatile i32 %6, i32* %3, align 4, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8541 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8543, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 %1, metadata !8544, metadata !DIExpression()), !dbg !8545
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8546
  %4 = load volatile i32, i32* %3, align 4, !dbg !8546
  %5 = and i32 %4, -4097, !dbg !8546
  %6 = or i32 %5, %1, !dbg !8546
  store volatile i32 %6, i32* %3, align 4, !dbg !8546
  ret void, !dbg !8547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8548 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8550, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 %1, metadata !8551, metadata !DIExpression()), !dbg !8552
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8553
  %4 = load volatile i32, i32* %3, align 4, !dbg !8553
  %5 = and i32 %4, -12289, !dbg !8553
  %6 = or i32 %5, %1, !dbg !8553
  store volatile i32 %6, i32* %3, align 4, !dbg !8553
  ret void, !dbg !8554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8555 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8557, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.value(metadata i32 %1, metadata !8558, metadata !DIExpression()), !dbg !8559
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8560
  %4 = load volatile i32, i32* %3, align 4, !dbg !8560
  %5 = and i32 %4, -1537, !dbg !8560
  %6 = or i32 %5, %1, !dbg !8560
  store volatile i32 %6, i32* %3, align 4, !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8562 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8564, metadata !DIExpression()), !dbg !8565
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8566
  %3 = load volatile i32, i32* %2, align 4, !dbg !8566
  %4 = lshr i32 %3, 3, !dbg !8567
  %5 = and i32 %4, 1, !dbg !8567
  ret i32 %5, !dbg !8568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8569 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8571, metadata !DIExpression()), !dbg !8572
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8573
  %3 = load volatile i32, i32* %2, align 4, !dbg !8573
  %4 = and i32 %3, 1, !dbg !8573
  ret i32 %4, !dbg !8574
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8575 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8577, metadata !DIExpression()), !dbg !8578
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8579
  %3 = load volatile i32, i32* %2, align 4, !dbg !8579
  %4 = lshr i32 %3, 1, !dbg !8580
  %5 = and i32 %4, 1, !dbg !8580
  ret i32 %5, !dbg !8581
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8582 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8584, metadata !DIExpression()), !dbg !8585
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8586
  %3 = load volatile i32, i32* %2, align 4, !dbg !8586
  %4 = lshr i32 %3, 8, !dbg !8587
  %5 = and i32 %4, 1, !dbg !8587
  ret i32 %5, !dbg !8588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8591, metadata !DIExpression()), !dbg !8592
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8593
  store volatile i32 -257, i32* %2, align 4, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8595 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8597, metadata !DIExpression()), !dbg !8599
  %3 = bitcast i32* %2 to i8*, !dbg !8600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8600
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8598, metadata !DIExpression()), !dbg !8601
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8602
  %5 = load volatile i32, i32* %4, align 4, !dbg !8602
  store volatile i32 %5, i32* %2, align 4, !dbg !8603
  %6 = load volatile i32, i32* %2, align 4, !dbg !8604
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8605
  %8 = load volatile i32, i32* %7, align 4, !dbg !8605
  store volatile i32 %8, i32* %2, align 4, !dbg !8606
  %9 = load volatile i32, i32* %2, align 4, !dbg !8607
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8608
  ret void, !dbg !8608
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8609 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8611, metadata !DIExpression()), !dbg !8613
  %3 = bitcast i32* %2 to i8*, !dbg !8614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8614
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8612, metadata !DIExpression()), !dbg !8615
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8616
  %5 = load volatile i32, i32* %4, align 4, !dbg !8616
  store volatile i32 %5, i32* %2, align 4, !dbg !8617
  %6 = load volatile i32, i32* %2, align 4, !dbg !8618
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8619
  %8 = load volatile i32, i32* %7, align 4, !dbg !8619
  store volatile i32 %8, i32* %2, align 4, !dbg !8620
  %9 = load volatile i32, i32* %2, align 4, !dbg !8621
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8622
  ret void, !dbg !8622
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8623 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8625, metadata !DIExpression()), !dbg !8627
  %3 = bitcast i32* %2 to i8*, !dbg !8628
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8628
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8626, metadata !DIExpression()), !dbg !8629
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8630
  %5 = load volatile i32, i32* %4, align 4, !dbg !8630
  store volatile i32 %5, i32* %2, align 4, !dbg !8631
  %6 = load volatile i32, i32* %2, align 4, !dbg !8632
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8633
  %8 = load volatile i32, i32* %7, align 4, !dbg !8633
  store volatile i32 %8, i32* %2, align 4, !dbg !8634
  %9 = load volatile i32, i32* %2, align 4, !dbg !8635
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8636
  ret void, !dbg !8636
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8637 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8639, metadata !DIExpression()), !dbg !8641
  %3 = bitcast i32* %2 to i8*, !dbg !8642
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8642
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8640, metadata !DIExpression()), !dbg !8643
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8644
  %5 = load volatile i32, i32* %4, align 4, !dbg !8644
  store volatile i32 %5, i32* %2, align 4, !dbg !8645
  %6 = load volatile i32, i32* %2, align 4, !dbg !8646
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8647
  %8 = load volatile i32, i32* %7, align 4, !dbg !8647
  store volatile i32 %8, i32* %2, align 4, !dbg !8648
  %9 = load volatile i32, i32* %2, align 4, !dbg !8649
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8650
  ret void, !dbg !8650
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8653, metadata !DIExpression()), !dbg !8654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8655
  %3 = load volatile i32, i32* %2, align 4, !dbg !8655
  %4 = lshr i32 %3, 7, !dbg !8656
  %5 = and i32 %4, 1, !dbg !8656
  ret i32 %5, !dbg !8657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8658 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8662, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.value(metadata i8 %1, metadata !8663, metadata !DIExpression()), !dbg !8664
  %3 = zext i8 %1 to i32, !dbg !8665
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8666
  store volatile i32 %3, i32* %4, align 4, !dbg !8667
  ret void, !dbg !8668
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8669 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8671, metadata !DIExpression()), !dbg !8672
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8673
  %3 = load volatile i32, i32* %2, align 4, !dbg !8673
  %4 = lshr i32 %3, 5, !dbg !8674
  %5 = and i32 %4, 1, !dbg !8674
  ret i32 %5, !dbg !8675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8676 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8682
  %3 = load volatile i32, i32* %2, align 4, !dbg !8682
  %4 = trunc i32 %3 to i8, !dbg !8683
  ret i8 %4, !dbg !8684
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8687, metadata !DIExpression()), !dbg !8693
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8694
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8694
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8694
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8688, metadata !DIExpression()), !dbg !8693
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8695
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8695
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8695
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8689, metadata !DIExpression()), !dbg !8693
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !8696
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8697
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8697
  %10 = tail call fastcc zeroext i1 @device_is_ready.63(%struct.device* noundef %9) #25, !dbg !8699
  br i1 %10, label %11, label %49, !dbg !8700

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8701
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8702
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8702
  %15 = load i8*, i8** %14, align 4, !dbg !8702
  %16 = tail call fastcc i32 @clock_control_on.64(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !8703
  call void @llvm.dbg.value(metadata i32 %16, metadata !8692, metadata !DIExpression()), !dbg !8693
  %17 = icmp eq i32 %16, 0, !dbg !8704
  br i1 %17, label %18, label %49, !dbg !8706

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8707
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8707
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %21, metadata !8692, metadata !DIExpression()), !dbg !8693
  %22 = icmp slt i32 %21, 0, !dbg !8709
  br i1 %22, label %49, label %23, !dbg !8711

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8712
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8712
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !8713
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8714
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !8715
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8716
  %28 = load i32, i32* %27, align 4, !dbg !8716
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8718

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8690, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 4096, metadata !8691, metadata !DIExpression()), !dbg !8693
  br label %31, !dbg !8719

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8690, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 0, metadata !8691, metadata !DIExpression()), !dbg !8693
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8722
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8722
  call void @llvm.dbg.value(metadata i32 %33, metadata !8691, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 %32, metadata !8690, metadata !DIExpression()), !dbg !8693
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8723
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !8724
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8725
  %36 = load i8, i8* %35, align 4, !dbg !8725, !range !5316
  %37 = icmp eq i8 %36, 0, !dbg !8725
  br i1 %37, label %39, label %38, !dbg !8727

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !8728
  br label %39, !dbg !8730

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8731
  %41 = load i32, i32* %40, align 4, !dbg !8731
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !8732
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8733
  %43 = load i8, i8* %42, align 4, !dbg !8733, !range !5316
  %44 = icmp eq i8 %43, 0, !dbg !8733
  br i1 %44, label %47, label %45, !dbg !8735

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8736
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !8738
  br label %47, !dbg !8739

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8740
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !8741
  br label %49, !dbg !8742

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8693
  ret i32 %50, !dbg !8743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8748, metadata !DIExpression()), !dbg !8752
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8753
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8753
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8753
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8749, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8750, metadata !DIExpression()), !dbg !8752
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8754
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8755
  ret void, !dbg !8756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.63(%struct.device* noundef %0) unnamed_addr #1 !dbg !8757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8761, metadata !DIExpression()), !dbg !8762
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8763, !srcloc !8765
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.65(%struct.device* noundef %0) #25, !dbg !8766
  ret i1 %2, !dbg !8767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.64(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8770, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8* %1, metadata !8771, metadata !DIExpression()), !dbg !8773
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8774
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8774
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8774
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8772, metadata !DIExpression()), !dbg !8773
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8775
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8775
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !8776
  ret i32 %8, !dbg !8777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8778 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8782, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i8 0, metadata !8783, metadata !DIExpression()), !dbg !8786
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8787
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8785, metadata !DIExpression(DW_OP_deref)), !dbg !8786
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8788
  call void @llvm.dbg.value(metadata i32 %4, metadata !8784, metadata !DIExpression()), !dbg !8786
  %5 = icmp slt i32 %4, 0, !dbg !8789
  br i1 %5, label %9, label %6, !dbg !8791

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8792
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8785, metadata !DIExpression()), !dbg !8786
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8793
  br label %9, !dbg !8794

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8786
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8795
  ret i32 %10, !dbg !8795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8798, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 12, metadata !8799, metadata !DIExpression()), !dbg !8802
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8803

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8804, metadata !DIExpression()) #23, !dbg !8810
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8813, !srcloc !8814
  call void @llvm.dbg.value(metadata i32 %4, metadata !8809, metadata !DIExpression()) #23, !dbg !8810
  %5 = or i32 %4, 12, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %5, metadata !8800, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 %5, metadata !8817, metadata !DIExpression()) #23, !dbg !8824
  call void @llvm.dbg.value(metadata i32* %2, metadata !8822, metadata !DIExpression()) #23, !dbg !8824
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8826, !srcloc !8827
  call void @llvm.dbg.value(metadata i32 %6, metadata !8823, metadata !DIExpression()) #23, !dbg !8824
  %7 = icmp eq i32 %6, 0, !dbg !8803
  br i1 %7, label %8, label %3, !dbg !8815, !llvm.loop !8828

8:                                                ; preds = %3
  ret void, !dbg !8829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %1, metadata !8833, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 %2, metadata !8834, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i32 0, metadata !8835, metadata !DIExpression()), !dbg !8836
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8837
  %5 = load volatile i32, i32* %4, align 4, !dbg !8837
  %6 = and i32 %5, -5633, !dbg !8837
  %7 = or i32 %2, %1, !dbg !8837
  %8 = or i32 %7, %6, !dbg !8837
  store volatile i32 %8, i32* %4, align 4, !dbg !8837
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8838
  %10 = load volatile i32, i32* %9, align 4, !dbg !8838
  %11 = and i32 %10, -12289, !dbg !8838
  store volatile i32 %11, i32* %9, align 4, !dbg !8838
  ret void, !dbg !8839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8840 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8842, metadata !DIExpression()), !dbg !8843
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8844
  %3 = load volatile i32, i32* %2, align 4, !dbg !8844
  %4 = or i32 %3, 8, !dbg !8844
  store volatile i32 %4, i32* %2, align 4, !dbg !8844
  ret void, !dbg !8845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8846 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8850, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8851, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 0, metadata !8852, metadata !DIExpression()), !dbg !8853
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8854
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8854
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8855
  %5 = load i8, i8* %4, align 4, !dbg !8855
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8856
  ret i32 %6, !dbg !8857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !8858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8860, metadata !DIExpression()), !dbg !8861
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8862
  ret i1 %2, !dbg !8863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8866, metadata !DIExpression()), !dbg !8867
  tail call fastcc void @__NVIC_SetPriority.67() #25, !dbg !8868
  store i32 8399, i32* @last_load, align 4, !dbg !8869
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8870
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8871
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8872
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8873
  %3 = or i32 %2, 7, !dbg !8873
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8873
  ret i32 0, !dbg !8874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.67() unnamed_addr #13 !dbg !8875 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8877, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 1, metadata !8878, metadata !DIExpression()), !dbg !8879
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8880
  ret void, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8884 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8886, metadata !DIExpression()), !dbg !8888
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8889
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8890
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8891
  %5 = add i32 %4, %3, !dbg !8891
  store i32 %5, i32* @cycle_count, align 4, !dbg !8891
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8892
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8893
  %7 = sub i32 %5, %6, !dbg !8896
  %8 = udiv i32 %7, 8400, !dbg !8897
  call void @llvm.dbg.value(metadata i32 %8, metadata !8887, metadata !DIExpression()), !dbg !8888
  %9 = mul nuw i32 %8, 8400, !dbg !8898
  %10 = add i32 %9, %6, !dbg !8899
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8899
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8900
  tail call void @z_arm_int_exit() #24, !dbg !8901
  ret void, !dbg !8902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8903 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8908
  call void @llvm.dbg.value(metadata i32 %1, metadata !8905, metadata !DIExpression()), !dbg !8909
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %2, metadata !8906, metadata !DIExpression()), !dbg !8909
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8911
  call void @llvm.dbg.value(metadata i32 %3, metadata !8907, metadata !DIExpression()), !dbg !8909
  %4 = and i32 %2, 65536, !dbg !8912
  %5 = icmp ne i32 %4, 0, !dbg !8912
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8914
  %8 = load i32, i32* @last_load, align 4, !dbg !8909
  br i1 %7, label %9, label %13, !dbg !8914

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8915
  %11 = add i32 %10, %8, !dbg !8915
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8915
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8917
  br label %13, !dbg !8918

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8919
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8920
  %16 = add i32 %14, %15, !dbg !8921
  ret i32 %16, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8927, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata i1 %1, metadata !8928, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8940
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8941
  br i1 %4, label %5, label %8, !dbg !8941

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8943
  %7 = and i32 %6, -2, !dbg !8943
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8943
  store i32 -16777216, i32* @last_load, align 4, !dbg !8945
  br label %54, !dbg !8946

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %9, metadata !8932, metadata !DIExpression()), !dbg !8940
  br i1 %3, label %18, label %10, !dbg !8948

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8948
  call void @llvm.dbg.value(metadata i32 undef, metadata !8927, metadata !DIExpression()), !dbg !8940
  %12 = icmp slt i32 %11, 1, !dbg !8949
  br i1 %12, label %18, label %13, !dbg !8949

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8949
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8949
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8949
  %17 = add nuw nsw i32 %16, 8399, !dbg !8949
  br label %18, !dbg !8949

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8927, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8950, metadata !DIExpression()) #23, !dbg !8957
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8959, !srcloc !8965
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %21, metadata !8962, metadata !DIExpression()) #23, !dbg !8966
  call void @llvm.dbg.value(metadata i32 undef, metadata !8963, metadata !DIExpression()) #23, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %21, metadata !8956, metadata !DIExpression()) #23, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %21, metadata !8933, metadata !DIExpression()), !dbg !8940
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %22, metadata !8938, metadata !DIExpression()), !dbg !8940
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8968
  call void @llvm.dbg.value(metadata i32 %23, metadata !8930, metadata !DIExpression()), !dbg !8940
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8969
  %25 = add i32 %24, %22, !dbg !8969
  store i32 %25, i32* @cycle_count, align 4, !dbg !8969
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8970
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8971
  %27 = sub i32 %25, %26, !dbg !8972
  call void @llvm.dbg.value(metadata i32 %27, metadata !8939, metadata !DIExpression()), !dbg !8940
  %28 = icmp slt i32 %27, 0, !dbg !8973
  br i1 %28, label %38, label %29, !dbg !8975

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8929, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata i32 undef, metadata !8929, metadata !DIExpression()), !dbg !8940
  %30 = add nuw i32 %19, %27, !dbg !8976
  %31 = urem i32 %30, 8400, !dbg !8978
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8940
  %32 = sub nuw nsw i32 %19, %31, !dbg !8979
  call void @llvm.dbg.value(metadata i32 %32, metadata !8929, metadata !DIExpression()), !dbg !8940
  %33 = icmp ugt i32 %32, 1024, !dbg !8980
  br i1 %33, label %34, label %36, !dbg !8980

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8929, metadata !DIExpression()), !dbg !8940
  %35 = icmp ugt i32 %32, 16766400, !dbg !8981
  br i1 %35, label %38, label %36, !dbg !8983

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8984
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %40, metadata !8931, metadata !DIExpression()), !dbg !8940
  %41 = add nsw i32 %39, -1, !dbg !8986
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8987
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8988
  %42 = icmp ult i32 %23, %40, !dbg !8989
  br i1 %42, label %43, label %48, !dbg !8991

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8992
  %45 = add i32 %23, %9, !dbg !8994
  %46 = sub i32 %45, %40, !dbg !8995
  %47 = add i32 %46, %44, !dbg !8992
  br label %52, !dbg !8996

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8997
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8999
  %51 = add i32 %49, %50, !dbg !8999
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9000
  store i32 %53, i32* @cycle_count, align 4, !dbg !9000
  call void @llvm.dbg.value(metadata i32 %21, metadata !9001, metadata !DIExpression()) #23, !dbg !9007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9006, metadata !DIExpression()) #23, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %21, metadata !9009, metadata !DIExpression()) #23, !dbg !9012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9014, !srcloc !9015
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9017 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8950, metadata !DIExpression()) #23, !dbg !9021
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9023, !srcloc !8965
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %2, metadata !8962, metadata !DIExpression()) #23, !dbg !9025
  call void @llvm.dbg.value(metadata i32 undef, metadata !8963, metadata !DIExpression()) #23, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %2, metadata !8956, metadata !DIExpression()) #23, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %2, metadata !9019, metadata !DIExpression()), !dbg !9026
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !9027
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9028
  %5 = add i32 %4, %3, !dbg !9029
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9030
  %7 = sub i32 %5, %6, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %7, metadata !9020, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %2, metadata !9001, metadata !DIExpression()) #23, !dbg !9032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9006, metadata !DIExpression()) #23, !dbg !9032
  call void @llvm.dbg.value(metadata i32 %2, metadata !9009, metadata !DIExpression()) #23, !dbg !9034
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9036, !srcloc !9015
  %8 = udiv i32 %7, 8400, !dbg !9037
  ret i32 %8, !dbg !9038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9039 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8950, metadata !DIExpression()) #23, !dbg !9043
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9045, !srcloc !8965
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !8962, metadata !DIExpression()) #23, !dbg !9047
  call void @llvm.dbg.value(metadata i32 undef, metadata !8963, metadata !DIExpression()) #23, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %2, metadata !8956, metadata !DIExpression()) #23, !dbg !9043
  call void @llvm.dbg.value(metadata i32 %2, metadata !9041, metadata !DIExpression()), !dbg !9048
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !9049
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9050
  %5 = add i32 %4, %3, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %5, metadata !9042, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata i32 %2, metadata !9001, metadata !DIExpression()) #23, !dbg !9052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9006, metadata !DIExpression()) #23, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %2, metadata !9009, metadata !DIExpression()) #23, !dbg !9054
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9056, !srcloc !9015
  ret i32 %5, !dbg !9057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9058 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9059
  %2 = icmp eq i32 %1, -16777216, !dbg !9061
  br i1 %2, label %3, label %6, !dbg !9062

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9063
  %5 = or i32 %4, 1, !dbg !9063
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9063
  br label %6, !dbg !9065

6:                                                ; preds = %3, %0
  ret void, !dbg !9066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9067 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9068
  %2 = and i32 %1, -2, !dbg !9068
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9068
  ret void, !dbg !9069
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9070 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i8 %1, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9098, metadata !DIExpression()), !dbg !9099
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9100
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9100
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9099
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9101
  %8 = load i8, i8* %6, align 4, !dbg !9102
  %9 = zext i8 %8 to i32, !dbg !9103
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9103
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9104
  br i1 %11, label %18, label %24, !dbg !9105

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9099
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9101
  %14 = load i8, i8* %6, align 4, !dbg !9102
  %15 = zext i8 %14 to i32, !dbg !9103
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9103
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9104
  br i1 %17, label %18, label %24, !dbg !9105, !llvm.loop !9106

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9108
  %21 = load i8, i8* %20, align 1, !dbg !9108
  %22 = icmp eq i8 %21, %1, !dbg !9111
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9112
  br i1 %22, label %24, label %12, !dbg !9113

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9099
  ret i32 %25, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9126, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i8 %1, metadata !9127, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 %2, metadata !9128, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 0, metadata !9131, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 0, metadata !9132, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i8 0, metadata !9133, metadata !DIExpression()), !dbg !9143
  %4 = icmp eq i8 %1, 0, !dbg !9144
  br i1 %4, label %35, label %5, !dbg !9145

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9144
  br label %9, !dbg !9145

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9133, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %29, metadata !9131, metadata !DIExpression()), !dbg !9142
  %8 = icmp eq i32 %34, %6, !dbg !9144
  br i1 %8, label %35, label %9, !dbg !9145, !llvm.loop !9146

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9133, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %11, metadata !9131, metadata !DIExpression()), !dbg !9142
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9148
  %13 = load i32, i32* %12, align 4, !dbg !9148
  call void @llvm.dbg.value(metadata i32 %13, metadata !9130, metadata !DIExpression()), !dbg !9142
  %14 = and i32 %13, 31, !dbg !9149
  %15 = icmp ult i32 %14, 16, !dbg !9150
  br i1 %15, label %16, label %20, !dbg !9151

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9152
  %18 = load i32, i32* %17, align 4, !dbg !9152
  %19 = or i32 %18, 32, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %19, metadata !9131, metadata !DIExpression()), !dbg !9142
  br label %28, !dbg !9155

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9156

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9157
  %23 = load i32, i32* %22, align 4, !dbg !9157
  call void @llvm.dbg.value(metadata i32 %23, metadata !9135, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9158
  %24 = lshr i32 %23, 7, !dbg !9159
  %25 = and i32 %24, 16, !dbg !9159
  %26 = or i32 %25, %23, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %26, metadata !9131, metadata !DIExpression()), !dbg !9142
  br label %28, !dbg !9160

27:                                               ; preds = %20
  br label %28, !dbg !9161

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9142
  call void @llvm.dbg.value(metadata i32 %29, metadata !9131, metadata !DIExpression()), !dbg !9142
  %30 = lshr i32 %13, 5, !dbg !9161
  %31 = and i32 %30, 255, !dbg !9161
  call void @llvm.dbg.value(metadata i32 %31, metadata !9129, metadata !DIExpression()), !dbg !9142
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %32, metadata !9132, metadata !DIExpression()), !dbg !9142
  %33 = icmp slt i32 %32, 0, !dbg !9163
  %34 = add nuw nsw i32 %10, 1, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %34, metadata !9133, metadata !DIExpression()), !dbg !9143
  br i1 %33, label %35, label %7, !dbg !9166

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9172, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i32 %1, metadata !9173, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i32 %2, metadata !9174, metadata !DIExpression()), !dbg !9176
  %4 = icmp ugt i32 %0, 175, !dbg !9177
  br i1 %4, label %16, label %5, !dbg !9179

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9180
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9181
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9181
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9175, metadata !DIExpression()), !dbg !9176
  %9 = add nsw i32 %6, -8, !dbg !9182
  %10 = icmp ult i32 %9, 3, !dbg !9182
  br i1 %10, label %16, label %11, !dbg !9184

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.72(%struct.device* noundef %8) #25, !dbg !9185
  br i1 %12, label %13, label %16, !dbg !9186

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9187
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9188
  br label %16, !dbg !9189

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9176
  ret i32 %17, !dbg !9190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.72(%struct.device* noundef %0) unnamed_addr #1 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9195, metadata !DIExpression()), !dbg !9196
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9197, !srcloc !9199
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.73(%struct.device* noundef %0) #25, !dbg !9200
  ret i1 %2, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.73(%struct.device* noundef %0) unnamed_addr #1 !dbg !9202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9204, metadata !DIExpression()), !dbg !9205
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9206
  ret i1 %2, !dbg !9207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9208 {
  ret void, !dbg !9209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9210 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9212, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 0, metadata !9213, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 2, metadata !9214, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 0, metadata !9215, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 2, metadata !9216, metadata !DIExpression()), !dbg !9217
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9218
  %2 = and i32 %1, 12, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %2, metadata !9212, metadata !DIExpression()), !dbg !9217
  %3 = icmp eq i32 %2, 8, !dbg !9220
  br i1 %3, label %4, label %18, !dbg !9220

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %5, metadata !9215, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9217
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9223
  %7 = and i32 %6, 63, !dbg !9224
  call void @llvm.dbg.value(metadata i32 %7, metadata !9216, metadata !DIExpression()), !dbg !9217
  %8 = udiv i32 16000000, %7, !dbg !9225
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9225
  %10 = lshr i32 %9, 6, !dbg !9225
  %11 = and i32 %10, 511, !dbg !9225
  %12 = mul i32 %11, %8, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %12, metadata !9213, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %12, metadata !9213, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %12, metadata !9213, metadata !DIExpression()), !dbg !9217
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9227
  %14 = lshr i32 %13, 15, !dbg !9228
  %15 = and i32 %14, 6, !dbg !9228
  %16 = add nuw nsw i32 %15, 2, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %16, metadata !9214, metadata !DIExpression()), !dbg !9217
  %17 = udiv i32 %12, %16, !dbg !9229
  br label %18, !dbg !9230

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9231
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9232
  %21 = lshr i32 %20, 4, !dbg !9233
  %22 = and i32 %21, 15, !dbg !9233
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9234
  %24 = load i8, i8* %23, align 1, !dbg !9234
  %25 = zext i8 %24 to i32, !dbg !9234
  call void @llvm.dbg.value(metadata i32 %25, metadata !9212, metadata !DIExpression()), !dbg !9217
  %26 = lshr i32 %19, %25, !dbg !9235
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9235
  ret void, !dbg !9236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9237 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9279, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9280, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9281, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9282, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9283, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9284, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9285, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9286, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9287, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 0, metadata !9288, metadata !DIExpression()), !dbg !9293
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9294
  %4 = load i32, i32* %3, align 4, !dbg !9294
  %5 = and i32 %4, 1, !dbg !9296
  %6 = icmp eq i32 %5, 0, !dbg !9297
  br i1 %6, label %17, label %7, !dbg !9298

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9299
  %9 = and i32 %8, -100663297, !dbg !9299
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9299
  %11 = load i32, i32* %10, align 4, !dbg !9299
  %12 = or i32 %9, %11, !dbg !9299
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9299
  %13 = load i32, i32* %10, align 4, !dbg !9301
  %14 = icmp eq i32 %13, 0, !dbg !9303
  %15 = zext i1 %14 to i32, !dbg !9304
  %16 = load i32, i32* %3, align 4, !dbg !9305
  br label %17, !dbg !9304

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !9305
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !9293
  call void @llvm.dbg.value(metadata i32 %19, metadata !9287, metadata !DIExpression()), !dbg !9293
  %20 = and i32 %18, 2, !dbg !9307
  %21 = icmp eq i32 %20, 0, !dbg !9308
  br i1 %21, label %32, label %22, !dbg !9309

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9310
  %24 = and i32 %23, -402653185, !dbg !9310
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9310
  %26 = load i32, i32* %25, align 4, !dbg !9310
  %27 = or i32 %24, %26, !dbg !9310
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9310
  %28 = load i32, i32* %25, align 4, !dbg !9312
  %29 = icmp eq i32 %28, 0, !dbg !9314
  %30 = select i1 %29, i32 1, i32 %19, !dbg !9315
  %31 = load i32, i32* %3, align 4, !dbg !9316
  br label %32, !dbg !9315

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !9316
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !9293
  call void @llvm.dbg.value(metadata i32 %34, metadata !9287, metadata !DIExpression()), !dbg !9293
  %35 = and i32 %33, 4, !dbg !9318
  %36 = icmp eq i32 %35, 0, !dbg !9319
  br i1 %36, label %49, label %37, !dbg !9320

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9321
  %39 = and i32 %38, -3145729, !dbg !9321
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9321
  %41 = load i32, i32* %40, align 4, !dbg !9321
  %42 = or i32 %39, %41, !dbg !9321
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9321
  %43 = load i32, i32* %40, align 4, !dbg !9323
  %44 = icmp eq i32 %43, 1048576, !dbg !9325
  %45 = select i1 %44, i32 1, i32 %34, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %45, metadata !9287, metadata !DIExpression()), !dbg !9293
  %46 = icmp eq i32 %43, 0, !dbg !9327
  %47 = zext i1 %46 to i32, !dbg !9329
  %48 = load i32, i32* %3, align 4, !dbg !9330
  br label %49, !dbg !9329

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !9330
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !9293
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !9293
  call void @llvm.dbg.value(metadata i32 %52, metadata !9288, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 %51, metadata !9287, metadata !DIExpression()), !dbg !9293
  %53 = and i32 %50, 8, !dbg !9332
  %54 = icmp eq i32 %53, 0, !dbg !9333
  br i1 %54, label %67, label %55, !dbg !9334

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9335
  %57 = and i32 %56, -12582913, !dbg !9335
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9335
  %59 = load i32, i32* %58, align 4, !dbg !9335
  %60 = or i32 %57, %59, !dbg !9335
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9335
  %61 = load i32, i32* %58, align 4, !dbg !9337
  %62 = icmp eq i32 %61, 4194304, !dbg !9339
  %63 = select i1 %62, i32 1, i32 %51, !dbg !9340
  call void @llvm.dbg.value(metadata i32 %63, metadata !9287, metadata !DIExpression()), !dbg !9293
  %64 = icmp eq i32 %61, 0, !dbg !9341
  %65 = select i1 %64, i32 1, i32 %52, !dbg !9343
  %66 = load i32, i32* %3, align 4, !dbg !9344
  br label %67, !dbg !9343

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !9344
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !9293
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !9293
  call void @llvm.dbg.value(metadata i32 %70, metadata !9288, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 %69, metadata !9287, metadata !DIExpression()), !dbg !9293
  %71 = and i32 %68, 32, !dbg !9345
  %72 = icmp eq i32 %71, 0, !dbg !9346
  br i1 %72, label %131, label %73, !dbg !9347

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !9348
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !9348
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9289, metadata !DIExpression()), !dbg !9348
  store volatile i32 0, i32* %2, align 4, !dbg !9348
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9348
  %76 = or i32 %75, 268435456, !dbg !9348
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9348
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9348
  %78 = and i32 %77, 268435456, !dbg !9348
  store volatile i32 %78, i32* %2, align 4, !dbg !9348
  %79 = load volatile i32, i32* %2, align 4, !dbg !9348
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !9349
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9350
  %81 = or i32 %80, 256, !dbg !9350
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9350
  %82 = tail call i32 @HAL_GetTick() #24, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %82, metadata !9280, metadata !DIExpression()), !dbg !9293
  br label %83, !dbg !9352

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9353
  %85 = and i32 %84, 256, !dbg !9354
  %86 = icmp eq i32 %85, 0, !dbg !9355
  br i1 %86, label %87, label %91, !dbg !9352

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #24, !dbg !9356
  %89 = sub i32 %88, %82, !dbg !9359
  %90 = icmp ugt i32 %89, 2, !dbg !9360
  br i1 %90, label %439, label %83, !dbg !9361, !llvm.loop !9362

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9364
  %93 = and i32 %92, 768, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %93, metadata !9281, metadata !DIExpression()), !dbg !9293
  %94 = icmp eq i32 %93, 0, !dbg !9366
  br i1 %94, label %116, label %95, !dbg !9368

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9369
  %97 = load i32, i32* %96, align 4, !dbg !9369
  %98 = and i32 %97, 768, !dbg !9370
  %99 = icmp eq i32 %93, %98, !dbg !9371
  br i1 %99, label %116, label %100, !dbg !9372

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9373
  %102 = and i32 %101, -769, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %102, metadata !9281, metadata !DIExpression()), !dbg !9293
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9376
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9377
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9378
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9379
  %104 = and i32 %103, 1, !dbg !9379
  %105 = icmp eq i32 %104, 0, !dbg !9379
  br i1 %105, label %116, label %106, !dbg !9381

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #24, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %107, metadata !9280, metadata !DIExpression()), !dbg !9293
  br label %108, !dbg !9384

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9385
  %110 = and i32 %109, 2, !dbg !9386
  %111 = icmp eq i32 %110, 0, !dbg !9386
  br i1 %111, label %112, label %116, !dbg !9384

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #24, !dbg !9387
  %114 = sub i32 %113, %107, !dbg !9390
  %115 = icmp ugt i32 %114, 5000, !dbg !9391
  br i1 %115, label %439, label %108, !dbg !9392, !llvm.loop !9393

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9395
  %118 = load i32, i32* %117, align 4, !dbg !9395
  %119 = and i32 %118, 768, !dbg !9395
  %120 = icmp eq i32 %119, 768, !dbg !9395
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9395
  %122 = and i32 %121, -2031617, !dbg !9395
  %123 = and i32 %118, 268434687, !dbg !9395
  %124 = select i1 %120, i32 %123, i32 0, !dbg !9395
  %125 = or i32 %122, %124, !dbg !9395
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9395
  %126 = load i32, i32* %117, align 4, !dbg !9395
  %127 = and i32 %126, 4095, !dbg !9395
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9395
  %129 = or i32 %128, %127, !dbg !9395
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9395
  %130 = load i32, i32* %3, align 4, !dbg !9397
  br label %131, !dbg !9399

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !9397
  %133 = and i32 %132, 16, !dbg !9400
  %134 = icmp eq i32 %133, 0, !dbg !9401
  br i1 %134, label %140, label %135, !dbg !9402

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9403
  %137 = load i8, i8* %136, align 4, !dbg !9403
  %138 = zext i8 %137 to i32, !dbg !9403
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !9403
  %139 = load i32, i32* %3, align 4, !dbg !9405
  br label %140, !dbg !9407

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !9405
  %142 = and i32 %141, 128, !dbg !9408
  %143 = icmp eq i32 %142, 0, !dbg !9409
  br i1 %143, label %151, label %144, !dbg !9410

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9411
  %146 = and i32 %145, -12582913, !dbg !9411
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9411
  %148 = load i32, i32* %147, align 4, !dbg !9411
  %149 = or i32 %146, %148, !dbg !9411
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9411
  %150 = load i32, i32* %3, align 4, !dbg !9413
  br label %151, !dbg !9415

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !9413
  %153 = and i32 %152, 64, !dbg !9416
  %154 = icmp eq i32 %153, 0, !dbg !9417
  br i1 %154, label %162, label %155, !dbg !9418

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9419
  %157 = and i32 %156, -67108865, !dbg !9419
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9419
  %159 = load i32, i32* %158, align 4, !dbg !9419
  %160 = or i32 %157, %159, !dbg !9419
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9419
  %161 = load i32, i32* %3, align 4, !dbg !9421
  br label %162, !dbg !9423

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !9421
  %164 = and i32 %163, 256, !dbg !9424
  %165 = icmp eq i32 %164, 0, !dbg !9425
  br i1 %165, label %176, label %166, !dbg !9426

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9427
  %168 = and i32 %167, -134217729, !dbg !9427
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9427
  %170 = load i32, i32* %169, align 4, !dbg !9427
  %171 = or i32 %168, %170, !dbg !9427
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9427
  %172 = load i32, i32* %169, align 4, !dbg !9429
  %173 = icmp eq i32 %172, 134217728, !dbg !9431
  %174 = select i1 %173, i32 1, i32 %70, !dbg !9432
  %175 = load i32, i32* %3, align 4, !dbg !9433
  br label %176, !dbg !9432

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !9433
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !9293
  call void @llvm.dbg.value(metadata i32 %178, metadata !9288, metadata !DIExpression()), !dbg !9293
  %179 = and i32 %177, 512, !dbg !9435
  %180 = icmp eq i32 %179, 0, !dbg !9436
  br i1 %180, label %188, label %181, !dbg !9437

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9438
  %183 = and i32 %182, -268435457, !dbg !9438
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9438
  %185 = load i32, i32* %184, align 4, !dbg !9438
  %186 = or i32 %183, %185, !dbg !9438
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9438
  %187 = load i32, i32* %3, align 4, !dbg !9440
  br label %188, !dbg !9442

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !9440
  %190 = and i32 %189, 1024, !dbg !9443
  %191 = icmp eq i32 %190, 0, !dbg !9444
  br i1 %191, label %204, label %192, !dbg !9445

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9446
  %194 = and i32 %193, -536870913, !dbg !9446
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9446
  %196 = load i32, i32* %195, align 4, !dbg !9446
  %197 = or i32 %194, %196, !dbg !9446
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9446
  %198 = load i32, i32* %195, align 4, !dbg !9448
  %199 = icmp eq i32 %198, 536870912, !dbg !9450
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %69, metadata !9287, metadata !DIExpression()), !dbg !9293
  br i1 %201, label %209, label %202, !dbg !9451

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !9452
  br label %206, !dbg !9451

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !9287, metadata !DIExpression()), !dbg !9293
  %205 = icmp eq i32 %69, 1, !dbg !9454
  br i1 %205, label %209, label %206, !dbg !9455

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !9452
  %208 = icmp eq i32 %207, 2048, !dbg !9456
  br i1 %208, label %209, label %356, !dbg !9457

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9458
  %210 = tail call i32 @HAL_GetTick() #24, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %210, metadata !9280, metadata !DIExpression()), !dbg !9293
  br label %211, !dbg !9461

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9462
  %213 = and i32 %212, 134217728, !dbg !9462
  %214 = icmp eq i32 %213, 0, !dbg !9462
  br i1 %214, label %219, label %215, !dbg !9461

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !9463
  %217 = sub i32 %216, %210, !dbg !9466
  %218 = icmp ugt i32 %217, 2, !dbg !9467
  br i1 %218, label %439, label %211, !dbg !9468, !llvm.loop !9469

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !9471
  %221 = and i32 %220, 1, !dbg !9473
  %222 = icmp eq i32 %221, 0, !dbg !9474
  br i1 %222, label %227, label %223, !dbg !9475

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9476
  %225 = load i32, i32* %224, align 4, !dbg !9476
  %226 = icmp eq i32 %225, 0, !dbg !9477
  br i1 %226, label %234, label %227, !dbg !9478

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !9479
  %229 = icmp eq i32 %228, 0, !dbg !9480
  br i1 %229, label %252, label %230, !dbg !9481

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9482
  %232 = load i32, i32* %231, align 4, !dbg !9482
  %233 = icmp eq i32 %232, 0, !dbg !9483
  br i1 %233, label %234, label %252, !dbg !9484

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9485
  %236 = and i32 %235, 196608, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %236, metadata !9282, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9293
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9488
  %238 = and i32 %237, 251658240, !dbg !9489
  call void @llvm.dbg.value(metadata i32 %238, metadata !9283, metadata !DIExpression()), !dbg !9293
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9490
  %240 = load i32, i32* %239, align 4, !dbg !9490
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9490
  %242 = load i32, i32* %241, align 4, !dbg !9490
  %243 = shl i32 %242, 6, !dbg !9490
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9490
  %245 = load i32, i32* %244, align 4, !dbg !9490
  %246 = shl i32 %245, 28, !dbg !9490
  %247 = or i32 %240, %236, !dbg !9490
  %248 = or i32 %247, %238, !dbg !9490
  %249 = or i32 %248, %243, !dbg !9490
  %250 = or i32 %249, %246, !dbg !9490
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9490
  %251 = load i32, i32* %3, align 4, !dbg !9491
  br label %252, !dbg !9493

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !9491
  %254 = and i32 %253, 4, !dbg !9494
  %255 = icmp eq i32 %254, 0, !dbg !9495
  br i1 %255, label %260, label %256, !dbg !9496

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9497
  %258 = load i32, i32* %257, align 4, !dbg !9497
  %259 = icmp eq i32 %258, 1048576, !dbg !9498
  br i1 %259, label %267, label %260, !dbg !9499

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !9500
  %262 = icmp eq i32 %261, 0, !dbg !9501
  br i1 %262, label %291, label %263, !dbg !9502

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9503
  %265 = load i32, i32* %264, align 4, !dbg !9503
  %266 = icmp eq i32 %265, 4194304, !dbg !9504
  br i1 %266, label %267, label %291, !dbg !9505

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9506
  %269 = and i32 %268, 196608, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %269, metadata !9282, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9293
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9509
  %271 = and i32 %270, 1879048192, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %271, metadata !9284, metadata !DIExpression()), !dbg !9293
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9511
  %273 = load i32, i32* %272, align 4, !dbg !9511
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9511
  %275 = load i32, i32* %274, align 4, !dbg !9511
  %276 = shl i32 %275, 6, !dbg !9511
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9511
  %278 = load i32, i32* %277, align 4, !dbg !9511
  %279 = shl i32 %278, 24, !dbg !9511
  %280 = or i32 %273, %269, !dbg !9511
  %281 = or i32 %280, %271, !dbg !9511
  %282 = or i32 %281, %276, !dbg !9511
  %283 = or i32 %282, %279, !dbg !9511
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9511
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9512
  %285 = and i32 %284, -32, !dbg !9512
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9512
  %287 = load i32, i32* %286, align 4, !dbg !9512
  %288 = add i32 %287, -1, !dbg !9512
  %289 = or i32 %288, %285, !dbg !9512
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9512
  %290 = load i32, i32* %3, align 4, !dbg !9513
  br label %291, !dbg !9515

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !9513
  %293 = and i32 %292, 1024, !dbg !9516
  %294 = icmp eq i32 %293, 0, !dbg !9517
  br i1 %294, label %321, label %295, !dbg !9518

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9519
  %297 = load i32, i32* %296, align 4, !dbg !9519
  %298 = icmp eq i32 %297, 536870912, !dbg !9520
  br i1 %298, label %299, label %321, !dbg !9521

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %300, metadata !9283, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9293
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9524
  %302 = and i32 %301, 1879048192, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %302, metadata !9284, metadata !DIExpression()), !dbg !9293
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9526
  %304 = load i32, i32* %303, align 4, !dbg !9526
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9526
  %306 = load i32, i32* %305, align 4, !dbg !9526
  %307 = shl i32 %306, 6, !dbg !9526
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9526
  %309 = load i32, i32* %308, align 4, !dbg !9526
  %310 = shl i32 %309, 15, !dbg !9526
  %311 = add i32 %310, -65536, !dbg !9526
  %312 = and i32 %311, -65536, !dbg !9526
  %313 = shl i32 %300, 9, !dbg !9526
  %314 = and i32 %313, 100663296, !dbg !9526
  %315 = add nuw nsw i32 %314, 33554432, !dbg !9526
  %316 = or i32 %302, %304, !dbg !9526
  %317 = or i32 %316, %315, !dbg !9526
  %318 = or i32 %317, %307, !dbg !9526
  %319 = or i32 %318, %312, !dbg !9526
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9526
  %320 = load i32, i32* %3, align 4, !dbg !9527
  br label %321, !dbg !9529

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !9527
  %323 = and i32 %322, 2048, !dbg !9530
  %324 = icmp eq i32 %323, 0, !dbg !9531
  br i1 %324, label %346, label %325, !dbg !9532

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9533
  %327 = load i32, i32* %326, align 4, !dbg !9533
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9533
  %329 = load i32, i32* %328, align 4, !dbg !9533
  %330 = shl i32 %329, 6, !dbg !9533
  %331 = or i32 %330, %327, !dbg !9533
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9533
  %333 = load i32, i32* %332, align 4, !dbg !9533
  %334 = shl i32 %333, 15, !dbg !9533
  %335 = add i32 %334, -65536, !dbg !9533
  %336 = and i32 %335, -65536, !dbg !9533
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9533
  %338 = load i32, i32* %337, align 4, !dbg !9533
  %339 = shl i32 %338, 24, !dbg !9533
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9533
  %341 = load i32, i32* %340, align 4, !dbg !9533
  %342 = shl i32 %341, 28, !dbg !9533
  %343 = or i32 %331, %339, !dbg !9533
  %344 = or i32 %343, %336, !dbg !9533
  %345 = or i32 %344, %342, !dbg !9533
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9533
  br label %346, !dbg !9535

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9536
  %347 = tail call i32 @HAL_GetTick() #24, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %347, metadata !9280, metadata !DIExpression()), !dbg !9293
  br label %348, !dbg !9538

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9539
  %350 = and i32 %349, 134217728, !dbg !9540
  %351 = icmp eq i32 %350, 0, !dbg !9540
  br i1 %351, label %352, label %356, !dbg !9538

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #24, !dbg !9541
  %354 = sub i32 %353, %347, !dbg !9544
  %355 = icmp ugt i32 %354, 2, !dbg !9545
  br i1 %355, label %439, label %348, !dbg !9546, !llvm.loop !9547

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !9549
  br i1 %357, label %358, label %439, !dbg !9551

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9552
  %359 = tail call i32 @HAL_GetTick() #24, !dbg !9554
  call void @llvm.dbg.value(metadata i32 %359, metadata !9280, metadata !DIExpression()), !dbg !9293
  br label %360, !dbg !9555

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9556
  %362 = and i32 %361, 536870912, !dbg !9556
  %363 = icmp eq i32 %362, 0, !dbg !9556
  br i1 %363, label %368, label %364, !dbg !9555

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #24, !dbg !9557
  %366 = sub i32 %365, %359, !dbg !9560
  %367 = icmp ugt i32 %366, 2, !dbg !9561
  br i1 %367, label %439, label %360, !dbg !9562, !llvm.loop !9563

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !9565
  %370 = and i32 %369, 4, !dbg !9567
  %371 = icmp eq i32 %370, 0, !dbg !9568
  br i1 %371, label %376, label %372, !dbg !9569

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9570
  %374 = load i32, i32* %373, align 4, !dbg !9570
  %375 = icmp eq i32 %374, 0, !dbg !9571
  br i1 %375, label %383, label %376, !dbg !9572

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !9573
  %378 = icmp eq i32 %377, 0, !dbg !9574
  br i1 %378, label %405, label %379, !dbg !9575

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9576
  %381 = load i32, i32* %380, align 4, !dbg !9576
  %382 = icmp eq i32 %381, 0, !dbg !9577
  br i1 %382, label %383, label %405, !dbg !9578

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9579
  %385 = and i32 %384, 196608, !dbg !9581
  call void @llvm.dbg.value(metadata i32 %385, metadata !9285, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9293
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9582
  %387 = load i32, i32* %386, align 4, !dbg !9582
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9582
  %389 = load i32, i32* %388, align 4, !dbg !9582
  %390 = shl i32 %389, 6, !dbg !9582
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9582
  %392 = load i32, i32* %391, align 4, !dbg !9582
  %393 = shl i32 %392, 24, !dbg !9582
  %394 = or i32 %385, %387, !dbg !9582
  %395 = or i32 %394, %390, !dbg !9582
  %396 = or i32 %395, %393, !dbg !9582
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9582
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9583
  %398 = and i32 %397, -7937, !dbg !9583
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9583
  %400 = load i32, i32* %399, align 4, !dbg !9583
  %401 = shl i32 %400, 8, !dbg !9583
  %402 = add i32 %401, -256, !dbg !9583
  %403 = or i32 %402, %398, !dbg !9583
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9583
  %404 = load i32, i32* %3, align 4, !dbg !9584
  br label %405, !dbg !9586

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !9584
  %407 = and i32 %406, 256, !dbg !9587
  %408 = icmp eq i32 %407, 0, !dbg !9588
  br i1 %408, label %429, label %409, !dbg !9589

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9590
  %411 = load i32, i32* %410, align 4, !dbg !9590
  %412 = icmp eq i32 %411, 134217728, !dbg !9591
  br i1 %412, label %413, label %429, !dbg !9592

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9593
  %415 = and i32 %414, 251658240, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %415, metadata !9286, metadata !DIExpression()), !dbg !9293
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9596
  %417 = load i32, i32* %416, align 4, !dbg !9596
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9596
  %419 = load i32, i32* %418, align 4, !dbg !9596
  %420 = shl i32 %419, 6, !dbg !9596
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9596
  %422 = load i32, i32* %421, align 4, !dbg !9596
  %423 = shl i32 %422, 15, !dbg !9596
  %424 = add i32 %423, -65536, !dbg !9596
  %425 = and i32 %424, -65536, !dbg !9596
  %426 = or i32 %415, %417, !dbg !9596
  %427 = or i32 %426, %420, !dbg !9596
  %428 = or i32 %427, %425, !dbg !9596
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9596
  br label %429, !dbg !9597

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9598
  %430 = tail call i32 @HAL_GetTick() #24, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %430, metadata !9280, metadata !DIExpression()), !dbg !9293
  br label %431, !dbg !9600

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9601
  %433 = and i32 %432, 536870912, !dbg !9602
  %434 = icmp eq i32 %433, 0, !dbg !9602
  br i1 %434, label %435, label %439, !dbg !9600

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #24, !dbg !9603
  %437 = sub i32 %436, %430, !dbg !9606
  %438 = icmp ugt i32 %437, 2, !dbg !9607
  br i1 %438, label %439, label %431, !dbg !9608, !llvm.loop !9609

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !9293
  ret i32 %440, !dbg !9611
}

; Function Attrs: optsize
declare !dbg !9612 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #14 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9618, metadata !DIExpression()), !dbg !9620
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9621
  store i32 2047, i32* %2, align 4, !dbg !9622
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9623
  %4 = and i32 %3, 63, !dbg !9624
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9625
  store i32 %4, i32* %5, align 4, !dbg !9626
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9627
  %7 = lshr i32 %6, 6, !dbg !9628
  %8 = and i32 %7, 511, !dbg !9628
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9629
  store i32 %8, i32* %9, align 4, !dbg !9630
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9631
  %11 = lshr i32 %10, 15, !dbg !9632
  %12 = and i32 %11, 6, !dbg !9632
  %13 = add nuw nsw i32 %12, 2, !dbg !9632
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9633
  store i32 %13, i32* %14, align 4, !dbg !9634
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9635
  %16 = lshr i32 %15, 24, !dbg !9636
  %17 = and i32 %16, 15, !dbg !9636
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9637
  store i32 %17, i32* %18, align 4, !dbg !9638
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9639
  %20 = lshr i32 %19, 28, !dbg !9640
  %21 = and i32 %20, 7, !dbg !9640
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9641
  store i32 %21, i32* %22, align 4, !dbg !9642
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9643
  %24 = and i32 %23, 63, !dbg !9644
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9645
  store i32 %24, i32* %25, align 4, !dbg !9646
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9647
  %27 = lshr i32 %26, 6, !dbg !9648
  %28 = and i32 %27, 511, !dbg !9648
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9649
  store i32 %28, i32* %29, align 4, !dbg !9650
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9651
  %31 = lshr i32 %30, 15, !dbg !9652
  %32 = and i32 %31, 6, !dbg !9652
  %33 = add nuw nsw i32 %32, 2, !dbg !9652
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9653
  store i32 %33, i32* %34, align 4, !dbg !9654
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9655
  %36 = lshr i32 %35, 24, !dbg !9656
  %37 = and i32 %36, 15, !dbg !9656
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9657
  store i32 %37, i32* %38, align 4, !dbg !9658
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9659
  %40 = and i32 %39, 31, !dbg !9660
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9661
  store i32 %40, i32* %41, align 4, !dbg !9662
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9663
  %43 = lshr i32 %42, 8, !dbg !9664
  %44 = and i32 %43, 31, !dbg !9664
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9665
  store i32 %44, i32* %45, align 4, !dbg !9666
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9667
  %47 = and i32 %46, 3145728, !dbg !9667
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9668
  store i32 %47, i32* %48, align 4, !dbg !9669
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9670
  %50 = and i32 %49, 12582912, !dbg !9670
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9671
  store i32 %50, i32* %51, align 4, !dbg !9672
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9673
  %53 = and i32 %52, 100663296, !dbg !9673
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9674
  store i32 %53, i32* %54, align 4, !dbg !9675
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9676
  %56 = and i32 %55, 402653184, !dbg !9676
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9677
  store i32 %56, i32* %57, align 4, !dbg !9678
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9679
  %59 = and i32 %58, 2031616, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %59, metadata !9619, metadata !DIExpression()), !dbg !9620
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9681
  %61 = and i32 %60, 768, !dbg !9682
  %62 = or i32 %61, %59, !dbg !9683
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9684
  store i32 %62, i32* %63, align 4, !dbg !9685
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9686
  %65 = and i32 %64, 67108864, !dbg !9686
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9687
  store i32 %65, i32* %66, align 4, !dbg !9688
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9689
  %68 = and i32 %67, 12582912, !dbg !9689
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9690
  store i32 %68, i32* %69, align 4, !dbg !9691
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9692
  %71 = and i32 %70, 134217728, !dbg !9692
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9693
  store i32 %71, i32* %72, align 4, !dbg !9694
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9695
  %74 = and i32 %73, 268435456, !dbg !9695
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9696
  store i32 %74, i32* %75, align 4, !dbg !9697
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9698
  %77 = and i32 %76, 536870912, !dbg !9698
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9699
  store i32 %77, i32* %78, align 4, !dbg !9700
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9701
  %80 = lshr i32 %79, 24, !dbg !9703
  %81 = trunc i32 %80 to i8, !dbg !9703
  %82 = and i8 %81, 1, !dbg !9703
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9704
  store i8 %82, i8* %83, align 4, !dbg !9706
  ret void, !dbg !9707
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #14 !dbg !9708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9710, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9711, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9712, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9714, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9715, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9716, metadata !DIExpression()), !dbg !9717
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !9718

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %3, metadata !9714, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 %3, metadata !9714, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !9717
  %4 = lshr i32 %3, 20, !dbg !9722
  %5 = and i32 %4, 15, !dbg !9722
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !9722

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9723
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9727
  %9 = and i32 %8, 63, !dbg !9727
  %10 = udiv i32 16000000, %9, !dbg !9727
  call void @llvm.dbg.value(metadata i32 %10, metadata !9713, metadata !DIExpression()), !dbg !9717
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9728
  %12 = lshr i32 %11, 24, !dbg !9729
  %13 = and i32 %12, 15, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %13, metadata !9711, metadata !DIExpression()), !dbg !9717
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9730
  %15 = lshr i32 %14, 6, !dbg !9731
  %16 = and i32 %15, 511, !dbg !9731
  %17 = mul i32 %16, %10, !dbg !9732
  %18 = udiv i32 %17, %13, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %18, metadata !9712, metadata !DIExpression()), !dbg !9717
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9734
  %20 = lshr i32 %19, 8, !dbg !9735
  %21 = and i32 %20, 31, !dbg !9735
  %22 = add nuw nsw i32 %21, 1, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %22, metadata !9711, metadata !DIExpression()), !dbg !9717
  %23 = udiv i32 %18, %22, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %23, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9738

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9739
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9742
  %27 = and i32 %26, 63, !dbg !9742
  %28 = udiv i32 16000000, %27, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %28, metadata !9713, metadata !DIExpression()), !dbg !9717
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9743
  %30 = lshr i32 %29, 24, !dbg !9744
  %31 = and i32 %30, 15, !dbg !9744
  call void @llvm.dbg.value(metadata i32 %31, metadata !9711, metadata !DIExpression()), !dbg !9717
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9745
  %33 = lshr i32 %32, 6, !dbg !9746
  %34 = and i32 %33, 511, !dbg !9746
  %35 = mul i32 %34, %28, !dbg !9747
  %36 = udiv i32 %35, %31, !dbg !9748
  call void @llvm.dbg.value(metadata i32 %36, metadata !9712, metadata !DIExpression()), !dbg !9717
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9749
  %38 = and i32 %37, 31, !dbg !9750
  %39 = add nuw nsw i32 %38, 1, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %39, metadata !9711, metadata !DIExpression()), !dbg !9717
  %40 = udiv i32 %36, %39, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %40, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9753

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9754
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9757
  %44 = and i32 %43, 63, !dbg !9757
  %45 = udiv i32 16000000, %44, !dbg !9757
  call void @llvm.dbg.value(metadata i32 %45, metadata !9713, metadata !DIExpression()), !dbg !9717
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9758
  %47 = lshr i32 %46, 28, !dbg !9759
  %48 = and i32 %47, 7, !dbg !9759
  call void @llvm.dbg.value(metadata i32 %48, metadata !9711, metadata !DIExpression()), !dbg !9717
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9760
  %50 = lshr i32 %49, 6, !dbg !9761
  %51 = and i32 %50, 511, !dbg !9761
  %52 = mul i32 %51, %45, !dbg !9762
  %53 = udiv i32 %52, %48, !dbg !9763
  call void @llvm.dbg.value(metadata i32 %53, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9764

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9765

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9767
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9712, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9770
  call void @llvm.dbg.value(metadata i32 %58, metadata !9715, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !9717
  %59 = lshr i32 %58, 25, !dbg !9772
  %60 = and i32 %59, 3, !dbg !9772
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !9772

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9773
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9777
  %64 = and i32 %63, 63, !dbg !9777
  %65 = udiv i32 16000000, %64, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %65, metadata !9713, metadata !DIExpression()), !dbg !9717
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9778
  %67 = lshr i32 %66, 6, !dbg !9779
  %68 = and i32 %67, 511, !dbg !9779
  %69 = mul i32 %68, %65, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %69, metadata !9716, metadata !DIExpression()), !dbg !9717
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9781
  %71 = lshr i32 %70, 28, !dbg !9782
  %72 = and i32 %71, 7, !dbg !9782
  %73 = udiv i32 %69, %72, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %73, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9784

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9785
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9788
  %77 = and i32 %76, 63, !dbg !9788
  %78 = udiv i32 16000000, %77, !dbg !9788
  call void @llvm.dbg.value(metadata i32 %78, metadata !9713, metadata !DIExpression()), !dbg !9717
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9789
  %80 = lshr i32 %79, 6, !dbg !9790
  %81 = and i32 %80, 511, !dbg !9790
  %82 = mul i32 %81, %78, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %82, metadata !9716, metadata !DIExpression()), !dbg !9717
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9792
  %84 = lshr i32 %83, 28, !dbg !9793
  %85 = and i32 %84, 7, !dbg !9793
  %86 = udiv i32 %82, %85, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %86, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9795

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9796
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9712, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %91, metadata !9715, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !9717
  %92 = lshr i32 %91, 27, !dbg !9801
  %93 = and i32 %92, 3, !dbg !9801
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !9801

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9802
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9806
  %97 = and i32 %96, 63, !dbg !9806
  %98 = udiv i32 16000000, %97, !dbg !9806
  call void @llvm.dbg.value(metadata i32 %98, metadata !9713, metadata !DIExpression()), !dbg !9717
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9807
  %100 = lshr i32 %99, 6, !dbg !9808
  %101 = and i32 %100, 511, !dbg !9808
  %102 = mul i32 %101, %98, !dbg !9809
  call void @llvm.dbg.value(metadata i32 %102, metadata !9716, metadata !DIExpression()), !dbg !9717
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9810
  %104 = lshr i32 %103, 28, !dbg !9811
  %105 = and i32 %104, 7, !dbg !9811
  %106 = udiv i32 %102, %105, !dbg !9812
  call void @llvm.dbg.value(metadata i32 %106, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9813

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9814
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9717
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9817
  %110 = and i32 %109, 63, !dbg !9817
  %111 = udiv i32 16000000, %110, !dbg !9817
  call void @llvm.dbg.value(metadata i32 %111, metadata !9713, metadata !DIExpression()), !dbg !9717
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9818
  %113 = lshr i32 %112, 6, !dbg !9819
  %114 = and i32 %113, 511, !dbg !9819
  %115 = mul i32 %114, %111, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %115, metadata !9716, metadata !DIExpression()), !dbg !9717
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9821
  %117 = lshr i32 %116, 28, !dbg !9822
  %118 = and i32 %117, 7, !dbg !9822
  %119 = udiv i32 %115, %118, !dbg !9823
  call void @llvm.dbg.value(metadata i32 %119, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123, !dbg !9824

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9825
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9712, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9712, metadata !DIExpression()), !dbg !9717
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !9717
  call void @llvm.dbg.value(metadata i32 %124, metadata !9712, metadata !DIExpression()), !dbg !9717
  ret i32 %124, !dbg !9828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !9829 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9833, metadata !DIExpression()), !dbg !9834
  %2 = icmp eq i8 %0, 1, !dbg !9835
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9837
  %4 = and i32 %3, -9, !dbg !9838
  %5 = select i1 %2, i32 8, i32 0, !dbg !9838
  %6 = or i32 %4, %5, !dbg !9838
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9837
  ret void, !dbg !9839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9840 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !9845, metadata !DIExpression()), !dbg !9847
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9848
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !9849
  call void @llvm.dbg.value(metadata i32 %2, metadata !9846, metadata !DIExpression()), !dbg !9847
  br label %3, !dbg !9850

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9851
  %5 = and i32 %4, 134217728, !dbg !9851
  %6 = icmp eq i32 %5, 0, !dbg !9851
  br i1 %6, label %11, label %7, !dbg !9850

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !9852
  %9 = sub i32 %8, %2, !dbg !9855
  %10 = icmp ugt i32 %9, 2, !dbg !9856
  br i1 %10, label %41, label %3, !dbg !9857, !llvm.loop !9858

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !9860
  %13 = load i32, i32* %12, align 4, !dbg !9860
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !9860
  %15 = load i32, i32* %14, align 4, !dbg !9860
  %16 = shl i32 %15, 6, !dbg !9860
  %17 = or i32 %16, %13, !dbg !9860
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !9860
  %19 = load i32, i32* %18, align 4, !dbg !9860
  %20 = shl i32 %19, 15, !dbg !9860
  %21 = add i32 %20, -65536, !dbg !9860
  %22 = and i32 %21, -65536, !dbg !9860
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !9860
  %24 = load i32, i32* %23, align 4, !dbg !9860
  %25 = shl i32 %24, 24, !dbg !9860
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !9860
  %27 = load i32, i32* %26, align 4, !dbg !9860
  %28 = shl i32 %27, 28, !dbg !9860
  %29 = or i32 %17, %25, !dbg !9860
  %30 = or i32 %29, %22, !dbg !9860
  %31 = or i32 %30, %28, !dbg !9860
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9860
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9861
  %32 = tail call i32 @HAL_GetTick() #24, !dbg !9862
  call void @llvm.dbg.value(metadata i32 %32, metadata !9846, metadata !DIExpression()), !dbg !9847
  br label %33, !dbg !9863

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9864
  %35 = and i32 %34, 134217728, !dbg !9865
  %36 = icmp eq i32 %35, 0, !dbg !9865
  br i1 %36, label %37, label %41, !dbg !9863

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #24, !dbg !9866
  %39 = sub i32 %38, %32, !dbg !9869
  %40 = icmp ugt i32 %39, 2, !dbg !9870
  br i1 %40, label %41, label %33, !dbg !9871, !llvm.loop !9872

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !9847
  ret i32 %42, !dbg !9874
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !9875 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9880
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %1, metadata !9879, metadata !DIExpression()), !dbg !9882
  br label %2, !dbg !9883

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9884
  %4 = and i32 %3, 134217728, !dbg !9884
  %5 = icmp eq i32 %4, 0, !dbg !9885
  br i1 %5, label %10, label %6, !dbg !9883

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !9886
  %8 = sub i32 %7, %1, !dbg !9889
  %9 = icmp ugt i32 %8, 2, !dbg !9890
  br i1 %9, label %10, label %2, !dbg !9891, !llvm.loop !9892

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9882
  ret i32 %11, !dbg !9894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9895 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9903
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %2, metadata !9901, metadata !DIExpression()), !dbg !9902
  br label %3, !dbg !9905

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9906
  %5 = and i32 %4, 536870912, !dbg !9906
  %6 = icmp eq i32 %5, 0, !dbg !9906
  br i1 %6, label %11, label %7, !dbg !9905

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !9907
  %9 = sub i32 %8, %2, !dbg !9910
  %10 = icmp ugt i32 %9, 2, !dbg !9911
  br i1 %10, label %37, label %3, !dbg !9912, !llvm.loop !9913

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !9915
  %13 = load i32, i32* %12, align 4, !dbg !9915
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !9915
  %15 = load i32, i32* %14, align 4, !dbg !9915
  %16 = shl i32 %15, 6, !dbg !9915
  %17 = or i32 %16, %13, !dbg !9915
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !9915
  %19 = load i32, i32* %18, align 4, !dbg !9915
  %20 = shl i32 %19, 15, !dbg !9915
  %21 = add i32 %20, -65536, !dbg !9915
  %22 = and i32 %21, -65536, !dbg !9915
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !9915
  %24 = load i32, i32* %23, align 4, !dbg !9915
  %25 = shl i32 %24, 24, !dbg !9915
  %26 = or i32 %17, %25, !dbg !9915
  %27 = or i32 %26, %22, !dbg !9915
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9915
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9916
  %28 = tail call i32 @HAL_GetTick() #24, !dbg !9917
  call void @llvm.dbg.value(metadata i32 %28, metadata !9901, metadata !DIExpression()), !dbg !9902
  br label %29, !dbg !9918

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9919
  %31 = and i32 %30, 536870912, !dbg !9920
  %32 = icmp eq i32 %31, 0, !dbg !9920
  br i1 %32, label %33, label %37, !dbg !9918

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #24, !dbg !9921
  %35 = sub i32 %34, %28, !dbg !9924
  %36 = icmp ugt i32 %35, 2, !dbg !9925
  br i1 %36, label %37, label %29, !dbg !9926, !llvm.loop !9927

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !9902
  ret i32 %38, !dbg !9929
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !9930 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9933
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9934
  call void @llvm.dbg.value(metadata i32 %1, metadata !9932, metadata !DIExpression()), !dbg !9935
  br label %2, !dbg !9936

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9937
  %4 = and i32 %3, 536870912, !dbg !9937
  %5 = icmp eq i32 %4, 0, !dbg !9937
  br i1 %5, label %10, label %6, !dbg !9936

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !9938
  %8 = sub i32 %7, %1, !dbg !9941
  %9 = icmp ugt i32 %8, 2, !dbg !9942
  br i1 %9, label %10, label %2, !dbg !9943, !llvm.loop !9944

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9935
  ret i32 %11, !dbg !9946
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !9947 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9949, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 0, metadata !9950, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 0, metadata !9951, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 0, metadata !9952, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 0, metadata !9953, metadata !DIExpression()), !dbg !9954
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9955
  %2 = lshr i32 %1, 2, !dbg !9956
  %3 = and i32 %2, 3, !dbg !9956
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !9956

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9957
  %6 = and i32 %5, 63, !dbg !9960
  call void @llvm.dbg.value(metadata i32 %6, metadata !9949, metadata !DIExpression()), !dbg !9954
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9961
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  %9 = lshr i32 %8, 6, !dbg !9963
  %10 = and i32 %9, 511, !dbg !9963
  %11 = zext i32 %10 to i64, !dbg !9963
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !9963
  %13 = zext i32 %6 to i64, !dbg !9963
  %14 = udiv i64 %12, %13, !dbg !9963
  %15 = trunc i64 %14 to i32, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %15, metadata !9950, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 %15, metadata !9950, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 %15, metadata !9950, metadata !DIExpression()), !dbg !9954
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9964
  %17 = lshr i32 %16, 15, !dbg !9965
  %18 = and i32 %17, 6, !dbg !9965
  %19 = add nuw nsw i32 %18, 2, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %19, metadata !9951, metadata !DIExpression()), !dbg !9954
  %20 = udiv i32 %15, %19, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %20, metadata !9953, metadata !DIExpression()), !dbg !9954
  br label %38, !dbg !9967

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9968
  %23 = and i32 %22, 63, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %23, metadata !9949, metadata !DIExpression()), !dbg !9954
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9971
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9973
  %26 = lshr i32 %25, 6, !dbg !9973
  %27 = and i32 %26, 511, !dbg !9973
  %28 = zext i32 %27 to i64, !dbg !9973
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !9973
  %30 = zext i32 %23 to i64, !dbg !9973
  %31 = udiv i64 %29, %30, !dbg !9973
  %32 = trunc i64 %31 to i32, !dbg !9973
  call void @llvm.dbg.value(metadata i32 %32, metadata !9950, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 %32, metadata !9950, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.value(metadata i32 %32, metadata !9950, metadata !DIExpression()), !dbg !9954
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9974
  %34 = lshr i32 %33, 28, !dbg !9975
  %35 = and i32 %34, 7, !dbg !9975
  call void @llvm.dbg.value(metadata i32 %35, metadata !9952, metadata !DIExpression()), !dbg !9954
  %36 = udiv i32 %32, %35, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %36, metadata !9953, metadata !DIExpression()), !dbg !9954
  br label %38, !dbg !9977

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !9978
  call void @llvm.dbg.value(metadata i32 %39, metadata !9953, metadata !DIExpression()), !dbg !9954
  ret i32 %39, !dbg !9979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9980 {
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %1, metadata !9982, metadata !DIExpression()), !dbg !9984
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9985
  %3 = or i32 %2, 1, !dbg !9985
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9985
  br label %4, !dbg !9986

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9987
  %6 = and i32 %5, 2, !dbg !9987
  %7 = icmp eq i32 %6, 0, !dbg !9988
  br i1 %7, label %8, label %12, !dbg !9986

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #24, !dbg !9989
  %10 = sub i32 %9, %1, !dbg !9992
  %11 = icmp ugt i32 %10, 2, !dbg !9993
  br i1 %11, label %89, label %4, !dbg !9994, !llvm.loop !9995

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9997
  %14 = or i32 %13, 128, !dbg !9997
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9997
  %15 = tail call i32 @HAL_GetTick() #24, !dbg !9998
  call void @llvm.dbg.value(metadata i32 %15, metadata !9982, metadata !DIExpression()), !dbg !9984
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9999
  br label %16, !dbg !10000

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10001
  %18 = and i32 %17, 12, !dbg !10001
  %19 = icmp eq i32 %18, 0, !dbg !10002
  %20 = tail call i32 @HAL_GetTick() #24, !dbg !9984
  br i1 %19, label %24, label %21, !dbg !10000

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !10003
  %23 = icmp ugt i32 %22, 5000, !dbg !10006
  br i1 %23, label %89, label %16, !dbg !10007, !llvm.loop !10008

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !9982, metadata !DIExpression()), !dbg !9984
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10010
  %26 = and i32 %25, -851969, !dbg !10010
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10010
  br label %27, !dbg !10011

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10012
  %29 = and i32 %28, 131072, !dbg !10012
  %30 = icmp eq i32 %29, 0, !dbg !10013
  %31 = tail call i32 @HAL_GetTick() #24, !dbg !9984
  br i1 %30, label %35, label %32, !dbg !10011

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !10014
  %34 = icmp ugt i32 %33, 100, !dbg !10017
  br i1 %34, label %89, label %27, !dbg !10018, !llvm.loop !10019

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !9982, metadata !DIExpression()), !dbg !9984
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10021
  %37 = and i32 %36, -16777217, !dbg !10021
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10021
  br label %38, !dbg !10022

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10023
  %40 = and i32 %39, 33554432, !dbg !10023
  %41 = icmp eq i32 %40, 0, !dbg !10024
  %42 = tail call i32 @HAL_GetTick() #24, !dbg !9984
  br i1 %41, label %46, label %43, !dbg !10022

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !10025
  %45 = icmp ugt i32 %44, 2, !dbg !10028
  br i1 %45, label %89, label %38, !dbg !10029, !llvm.loop !10030

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !9982, metadata !DIExpression()), !dbg !9984
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10032
  %48 = and i32 %47, -67108865, !dbg !10032
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10032
  br label %49, !dbg !10033

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10034
  %51 = and i32 %50, 134217728, !dbg !10034
  %52 = icmp eq i32 %51, 0, !dbg !10035
  %53 = tail call i32 @HAL_GetTick() #24, !dbg !9984
  br i1 %52, label %57, label %54, !dbg !10033

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !10036
  %56 = icmp ugt i32 %55, 2, !dbg !10039
  br i1 %56, label %89, label %49, !dbg !10040, !llvm.loop !10041

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !9982, metadata !DIExpression()), !dbg !9984
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10043
  %59 = and i32 %58, -268435457, !dbg !10043
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10043
  br label %60, !dbg !10044

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10045
  %62 = and i32 %61, 536870912, !dbg !10045
  %63 = icmp eq i32 %62, 0, !dbg !10046
  br i1 %63, label %68, label %64, !dbg !10044

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #24, !dbg !10047
  %66 = sub i32 %65, %53, !dbg !10050
  %67 = icmp ugt i32 %66, 2, !dbg !10051
  br i1 %67, label %89, label %60, !dbg !10052, !llvm.loop !10053

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10055
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10056
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10057
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10058
  %70 = and i32 %69, -7937, !dbg !10058
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10058
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10059
  %72 = and i32 %71, -8193, !dbg !10059
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10059
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10060
  %74 = and i32 %73, -16385, !dbg !10060
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10060
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10061
  %76 = or i32 %75, 10420224, !dbg !10061
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10061
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10062
  %78 = or i32 %77, 2097152, !dbg !10062
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10062
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10063
  %80 = or i32 %79, 4194304, !dbg !10063
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10063
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10064
  %82 = and i32 %81, -2, !dbg !10064
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10064
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10065
  %84 = or i32 %83, 16777216, !dbg !10065
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10065
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !10066
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !10067
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #24, !dbg !10069
  %87 = icmp ne i32 %86, 0, !dbg !10070
  %88 = zext i1 %87 to i32, !dbg !10071
  br label %89, !dbg !10071

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !9984
  ret i32 %90, !dbg !10072
}

; Function Attrs: optsize
declare !dbg !10073 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10076 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10102, metadata !DIExpression()), !dbg !10113
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10114
  br i1 %3, label %337, label %4, !dbg !10116

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10117
  %6 = load i32, i32* %5, align 4, !dbg !10117
  %7 = and i32 %6, 1, !dbg !10119
  %8 = icmp eq i32 %7, 0, !dbg !10120
  br i1 %8, label %74, label %9, !dbg !10121

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10122
  %11 = and i32 %10, 12, !dbg !10122
  %12 = icmp eq i32 %11, 4, !dbg !10125
  br i1 %12, label %29, label %13, !dbg !10126

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10127
  %15 = and i32 %14, 12, !dbg !10127
  %16 = icmp eq i32 %15, 8, !dbg !10128
  br i1 %16, label %17, label %21, !dbg !10129

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10130
  %19 = and i32 %18, 4194304, !dbg !10131
  %20 = icmp eq i32 %19, 0, !dbg !10132
  br i1 %20, label %21, label %29, !dbg !10133

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10134
  %23 = and i32 %22, 12, !dbg !10134
  %24 = icmp eq i32 %23, 12, !dbg !10135
  br i1 %24, label %25, label %37, !dbg !10136

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10137
  %27 = and i32 %26, 4194304, !dbg !10138
  %28 = icmp eq i32 %27, 0, !dbg !10139
  br i1 %28, label %37, label %29, !dbg !10140

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10141
  %31 = and i32 %30, 131072, !dbg !10141
  %32 = icmp eq i32 %31, 0, !dbg !10141
  br i1 %32, label %74, label %33, !dbg !10144

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10145
  %35 = load i32, i32* %34, align 4, !dbg !10145
  %36 = icmp eq i32 %35, 0, !dbg !10146
  br i1 %36, label %337, label %74, !dbg !10147

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10148
  %39 = load i32, i32* %38, align 4, !dbg !10148
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !10152

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10153
  %42 = or i32 %41, 65536, !dbg !10153
  br label %53, !dbg !10153

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10155
  %45 = or i32 %44, 262144, !dbg !10155
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10155
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10155
  %47 = or i32 %46, 65536, !dbg !10155
  br label %53, !dbg !10155

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10158
  %50 = and i32 %49, -65537, !dbg !10158
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10158
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10158
  %52 = and i32 %51, -262145, !dbg !10158
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10160
  %55 = load i32, i32* %38, align 4, !dbg !10161
  %56 = icmp eq i32 %55, 0, !dbg !10163
  %57 = tail call i32 @HAL_GetTick() #24, !dbg !10164
  call void @llvm.dbg.value(metadata i32 %57, metadata !10103, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %57, metadata !10103, metadata !DIExpression()), !dbg !10113
  br i1 %56, label %66, label %58, !dbg !10165

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10166
  %60 = and i32 %59, 131072, !dbg !10168
  %61 = icmp eq i32 %60, 0, !dbg !10168
  br i1 %61, label %62, label %74, !dbg !10169

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !10170
  %64 = sub i32 %63, %57, !dbg !10173
  %65 = icmp ugt i32 %64, 100, !dbg !10174
  br i1 %65, label %337, label %58, !dbg !10175, !llvm.loop !10176

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10178
  %68 = and i32 %67, 131072, !dbg !10178
  %69 = icmp eq i32 %68, 0, !dbg !10178
  br i1 %69, label %74, label %70, !dbg !10180

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #24, !dbg !10181
  %72 = sub i32 %71, %57, !dbg !10184
  %73 = icmp ugt i32 %72, 100, !dbg !10185
  br i1 %73, label %337, label %66, !dbg !10186, !llvm.loop !10187

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !10189
  %76 = and i32 %75, 2, !dbg !10191
  %77 = icmp eq i32 %76, 0, !dbg !10192
  br i1 %77, label %137, label %78, !dbg !10193

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10194
  %80 = and i32 %79, 12, !dbg !10194
  %81 = icmp eq i32 %80, 0, !dbg !10197
  br i1 %81, label %98, label %82, !dbg !10198

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10199
  %84 = and i32 %83, 12, !dbg !10199
  %85 = icmp eq i32 %84, 8, !dbg !10200
  br i1 %85, label %86, label %90, !dbg !10201

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10202
  %88 = and i32 %87, 4194304, !dbg !10203
  %89 = icmp eq i32 %88, 0, !dbg !10204
  br i1 %89, label %98, label %90, !dbg !10205

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10206
  %92 = and i32 %91, 12, !dbg !10206
  %93 = icmp eq i32 %92, 12, !dbg !10207
  br i1 %93, label %94, label %106, !dbg !10208

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10209
  %96 = and i32 %95, 4194304, !dbg !10210
  %97 = icmp eq i32 %96, 0, !dbg !10211
  br i1 %97, label %98, label %106, !dbg !10212

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10213
  %100 = and i32 %99, 2, !dbg !10213
  %101 = icmp eq i32 %100, 0, !dbg !10213
  br i1 %101, label %130, label %102, !dbg !10216

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10217
  %104 = load i32, i32* %103, align 4, !dbg !10217
  %105 = icmp eq i32 %104, 1, !dbg !10218
  br i1 %105, label %130, label %337, !dbg !10219

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10220
  %108 = load i32, i32* %107, align 4, !dbg !10220
  %109 = icmp eq i32 %108, 0, !dbg !10223
  br i1 %109, label %120, label %110, !dbg !10224

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10225
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !10227
  call void @llvm.dbg.value(metadata i32 %111, metadata !10103, metadata !DIExpression()), !dbg !10113
  br label %112, !dbg !10228

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10229
  %114 = and i32 %113, 2, !dbg !10230
  %115 = icmp eq i32 %114, 0, !dbg !10230
  br i1 %115, label %116, label %130, !dbg !10228

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #24, !dbg !10231
  %118 = sub i32 %117, %111, !dbg !10234
  %119 = icmp ugt i32 %118, 2, !dbg !10235
  br i1 %119, label %337, label %112, !dbg !10236, !llvm.loop !10237

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10239
  %121 = tail call i32 @HAL_GetTick() #24, !dbg !10241
  call void @llvm.dbg.value(metadata i32 %121, metadata !10103, metadata !DIExpression()), !dbg !10113
  br label %122, !dbg !10242

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10243
  %124 = and i32 %123, 2, !dbg !10243
  %125 = icmp eq i32 %124, 0, !dbg !10243
  br i1 %125, label %137, label %126, !dbg !10242

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #24, !dbg !10244
  %128 = sub i32 %127, %121, !dbg !10247
  %129 = icmp ugt i32 %128, 2, !dbg !10248
  br i1 %129, label %337, label %122, !dbg !10249, !llvm.loop !10250

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10252
  %132 = and i32 %131, -249, !dbg !10252
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10252
  %134 = load i32, i32* %133, align 4, !dbg !10252
  %135 = shl i32 %134, 3, !dbg !10252
  %136 = or i32 %135, %132, !dbg !10252
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10252
  br label %137, !dbg !10253

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !10253
  %139 = and i32 %138, 8, !dbg !10255
  %140 = icmp eq i32 %139, 0, !dbg !10256
  br i1 %140, label %165, label %141, !dbg !10257

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10258
  %143 = load i32, i32* %142, align 4, !dbg !10258
  %144 = icmp eq i32 %143, 0, !dbg !10261
  br i1 %144, label %155, label %145, !dbg !10262

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10263
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %146, metadata !10103, metadata !DIExpression()), !dbg !10113
  br label %147, !dbg !10266

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10267
  %149 = and i32 %148, 2, !dbg !10268
  %150 = icmp eq i32 %149, 0, !dbg !10268
  br i1 %150, label %151, label %165, !dbg !10266

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #24, !dbg !10269
  %153 = sub i32 %152, %146, !dbg !10272
  %154 = icmp ugt i32 %153, 2, !dbg !10273
  br i1 %154, label %337, label %147, !dbg !10274, !llvm.loop !10275

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10277
  %156 = tail call i32 @HAL_GetTick() #24, !dbg !10279
  call void @llvm.dbg.value(metadata i32 %156, metadata !10103, metadata !DIExpression()), !dbg !10113
  br label %157, !dbg !10280

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10281
  %159 = and i32 %158, 2, !dbg !10281
  %160 = icmp eq i32 %159, 0, !dbg !10281
  br i1 %160, label %165, label %161, !dbg !10280

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #24, !dbg !10282
  %163 = sub i32 %162, %156, !dbg !10285
  %164 = icmp ugt i32 %163, 2, !dbg !10286
  br i1 %164, label %337, label %157, !dbg !10287, !llvm.loop !10288

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !10290
  %167 = and i32 %166, 4, !dbg !10291
  %168 = icmp eq i32 %167, 0, !dbg !10292
  br i1 %168, label %237, label %169, !dbg !10293

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !10105, metadata !DIExpression()), !dbg !10294
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10295
  %171 = and i32 %170, 268435456, !dbg !10295
  %172 = icmp eq i32 %171, 0, !dbg !10295
  br i1 %172, label %173, label %180, !dbg !10296

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !10297
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !10297
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10109, metadata !DIExpression()), !dbg !10297
  store volatile i32 0, i32* %2, align 4, !dbg !10297
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10297
  %176 = or i32 %175, 268435456, !dbg !10297
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10297
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10297
  %178 = and i32 %177, 268435456, !dbg !10297
  store volatile i32 %178, i32* %2, align 4, !dbg !10297
  %179 = load volatile i32, i32* %2, align 4, !dbg !10297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !10298
  call void @llvm.dbg.value(metadata i32 1, metadata !10105, metadata !DIExpression()), !dbg !10294
  br label %180, !dbg !10299

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()), !dbg !10294
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10300
  %182 = and i32 %181, 256, !dbg !10300
  %183 = icmp eq i32 %182, 0, !dbg !10300
  br i1 %183, label %184, label %196, !dbg !10302

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10303
  %186 = or i32 %185, 256, !dbg !10303
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10303
  %187 = tail call i32 @HAL_GetTick() #24, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %187, metadata !10103, metadata !DIExpression()), !dbg !10113
  br label %188, !dbg !10306

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10307
  %190 = and i32 %189, 256, !dbg !10307
  %191 = icmp eq i32 %190, 0, !dbg !10307
  br i1 %191, label %192, label %196, !dbg !10306

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #24, !dbg !10308
  %194 = sub i32 %193, %187, !dbg !10311
  %195 = icmp ugt i32 %194, 2, !dbg !10312
  br i1 %195, label %337, label %188, !dbg !10313, !llvm.loop !10314

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10316
  %198 = load i32, i32* %197, align 4, !dbg !10316
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !10319

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10320
  %201 = or i32 %200, 1, !dbg !10320
  br label %212, !dbg !10320

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10322
  %204 = or i32 %203, 4, !dbg !10322
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10322
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10322
  %206 = or i32 %205, 1, !dbg !10322
  br label %212, !dbg !10322

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10325
  %209 = and i32 %208, -2, !dbg !10325
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10325
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10325
  %211 = and i32 %210, -5, !dbg !10325
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10327
  %214 = load i32, i32* %197, align 4, !dbg !10328
  %215 = icmp eq i32 %214, 0, !dbg !10330
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %216, metadata !10103, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %216, metadata !10103, metadata !DIExpression()), !dbg !10113
  br i1 %215, label %225, label %217, !dbg !10332

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10333
  %219 = and i32 %218, 2, !dbg !10335
  %220 = icmp eq i32 %219, 0, !dbg !10335
  br i1 %220, label %221, label %233, !dbg !10336

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #24, !dbg !10337
  %223 = sub i32 %222, %216, !dbg !10340
  %224 = icmp ugt i32 %223, 5000, !dbg !10341
  br i1 %224, label %337, label %217, !dbg !10342, !llvm.loop !10343

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10345
  %227 = and i32 %226, 2, !dbg !10345
  %228 = icmp eq i32 %227, 0, !dbg !10345
  br i1 %228, label %233, label %229, !dbg !10347

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #24, !dbg !10348
  %231 = sub i32 %230, %216, !dbg !10351
  %232 = icmp ugt i32 %231, 5000, !dbg !10352
  br i1 %232, label %337, label %225, !dbg !10353, !llvm.loop !10354

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !10356

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10357
  %236 = and i32 %235, -268435457, !dbg !10357
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10357
  br label %237, !dbg !10360

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10361
  %239 = load i32, i32* %238, align 4, !dbg !10361
  %240 = icmp eq i32 %239, 0, !dbg !10363
  br i1 %240, label %336, label %241, !dbg !10364

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10365
  %243 = and i32 %242, 12, !dbg !10365
  %244 = icmp eq i32 %243, 8, !dbg !10368
  br i1 %244, label %297, label %245, !dbg !10369

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !10370
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10373
  %247 = tail call i32 @HAL_GetTick() #24, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %247, metadata !10103, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %247, metadata !10103, metadata !DIExpression()), !dbg !10113
  br i1 %246, label %248, label %289, !dbg !10374

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10375
  %250 = and i32 %249, 33554432, !dbg !10375
  %251 = icmp eq i32 %250, 0, !dbg !10375
  br i1 %251, label %256, label %252, !dbg !10377

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #24, !dbg !10378
  %254 = sub i32 %253, %247, !dbg !10381
  %255 = icmp ugt i32 %254, 2, !dbg !10382
  br i1 %255, label %337, label %248, !dbg !10383, !llvm.loop !10384

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10386
  %258 = load i32, i32* %257, align 4, !dbg !10386
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10386
  %260 = load i32, i32* %259, align 4, !dbg !10386
  %261 = or i32 %260, %258, !dbg !10386
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10386
  %263 = load i32, i32* %262, align 4, !dbg !10386
  %264 = shl i32 %263, 6, !dbg !10386
  %265 = or i32 %261, %264, !dbg !10386
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10386
  %267 = load i32, i32* %266, align 4, !dbg !10386
  %268 = shl i32 %267, 15, !dbg !10386
  %269 = add i32 %268, -65536, !dbg !10386
  %270 = and i32 %269, -65536, !dbg !10386
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10386
  %272 = load i32, i32* %271, align 4, !dbg !10386
  %273 = shl i32 %272, 24, !dbg !10386
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10386
  %275 = load i32, i32* %274, align 4, !dbg !10386
  %276 = shl i32 %275, 28, !dbg !10386
  %277 = or i32 %265, %273, !dbg !10386
  %278 = or i32 %277, %270, !dbg !10386
  %279 = or i32 %278, %276, !dbg !10386
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10386
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10387
  %280 = tail call i32 @HAL_GetTick() #24, !dbg !10388
  call void @llvm.dbg.value(metadata i32 %280, metadata !10103, metadata !DIExpression()), !dbg !10113
  br label %281, !dbg !10389

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10390
  %283 = and i32 %282, 33554432, !dbg !10391
  %284 = icmp eq i32 %283, 0, !dbg !10391
  br i1 %284, label %285, label %336, !dbg !10389

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #24, !dbg !10392
  %287 = sub i32 %286, %280, !dbg !10395
  %288 = icmp ugt i32 %287, 2, !dbg !10396
  br i1 %288, label %337, label %281, !dbg !10397, !llvm.loop !10398

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10400
  %291 = and i32 %290, 33554432, !dbg !10400
  %292 = icmp eq i32 %291, 0, !dbg !10400
  br i1 %292, label %336, label %293, !dbg !10402

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #24, !dbg !10403
  %295 = sub i32 %294, %247, !dbg !10406
  %296 = icmp ugt i32 %295, 2, !dbg !10407
  br i1 %296, label %337, label %289, !dbg !10408, !llvm.loop !10409

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !10411
  br i1 %298, label %337, label %299, !dbg !10414

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10415
  call void @llvm.dbg.value(metadata i32 %300, metadata !10104, metadata !DIExpression()), !dbg !10113
  %301 = and i32 %300, 4194304, !dbg !10417
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10419
  %303 = load i32, i32* %302, align 4, !dbg !10419
  %304 = icmp eq i32 %301, %303, !dbg !10420
  br i1 %304, label %305, label %337, !dbg !10421

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !10422
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10423
  %308 = load i32, i32* %307, align 4, !dbg !10423
  %309 = icmp eq i32 %306, %308, !dbg !10424
  br i1 %309, label %310, label %337, !dbg !10425

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !10426
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10427
  %313 = load i32, i32* %312, align 4, !dbg !10427
  %314 = shl i32 %313, 6, !dbg !10428
  %315 = icmp eq i32 %311, %314, !dbg !10429
  br i1 %315, label %316, label %337, !dbg !10430

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !10431
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10432
  %319 = load i32, i32* %318, align 4, !dbg !10432
  %320 = shl i32 %319, 15, !dbg !10433
  %321 = add i32 %320, -65536, !dbg !10433
  %322 = and i32 %321, -65536, !dbg !10433
  %323 = icmp eq i32 %317, %322, !dbg !10434
  br i1 %323, label %324, label %337, !dbg !10435

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !10436
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10437
  %327 = load i32, i32* %326, align 4, !dbg !10437
  %328 = shl i32 %327, 24, !dbg !10438
  %329 = icmp eq i32 %325, %328, !dbg !10439
  br i1 %329, label %330, label %337, !dbg !10440

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !10441
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10442
  %333 = load i32, i32* %332, align 4, !dbg !10442
  %334 = shl i32 %333, 28, !dbg !10443
  %335 = icmp eq i32 %331, %334, !dbg !10444
  br i1 %335, label %336, label %337, !dbg !10445

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !10446

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !10113
  ret i32 %338, !dbg !10447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !10448 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10452, metadata !DIExpression()), !dbg !10453
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10454
  store i32 15, i32* %2, align 4, !dbg !10455
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10456
  %4 = and i32 %3, 262144, !dbg !10458
  %5 = icmp eq i32 %4, 0, !dbg !10459
  br i1 %5, label %8, label %6, !dbg !10460

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10461
  store i32 327680, i32* %7, align 4, !dbg !10463
  br label %15, !dbg !10464

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10465
  %10 = and i32 %9, 65536, !dbg !10467
  %11 = icmp eq i32 %10, 0, !dbg !10468
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10469
  br i1 %11, label %14, label %13, !dbg !10470

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10471
  br label %15, !dbg !10473

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10474
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10476
  %17 = and i32 %16, 1, !dbg !10478
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10479
  store i32 %17, i32* %18, align 4, !dbg !10481
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10482
  %20 = lshr i32 %19, 3, !dbg !10483
  %21 = and i32 %20, 31, !dbg !10483
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10484
  store i32 %21, i32* %22, align 4, !dbg !10485
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10486
  %24 = and i32 %23, 4, !dbg !10488
  %25 = icmp eq i32 %24, 0, !dbg !10489
  br i1 %25, label %28, label %26, !dbg !10490

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10491
  store i32 5, i32* %27, align 4, !dbg !10493
  br label %35, !dbg !10494

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10495
  %30 = and i32 %29, 1, !dbg !10497
  %31 = icmp eq i32 %30, 0, !dbg !10498
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10499
  br i1 %31, label %34, label %33, !dbg !10500

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10501
  br label %35, !dbg !10503

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10504
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10506
  %37 = and i32 %36, 1, !dbg !10508
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10509
  store i32 %37, i32* %38, align 4, !dbg !10511
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10512
  %40 = and i32 %39, 16777216, !dbg !10514
  %41 = icmp eq i32 %40, 0, !dbg !10515
  %42 = select i1 %41, i32 1, i32 2, !dbg !10516
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10517
  store i32 %42, i32* %43, align 4, !dbg !10519
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10520
  %45 = and i32 %44, 4194304, !dbg !10521
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10522
  store i32 %45, i32* %46, align 4, !dbg !10523
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10524
  %48 = and i32 %47, 63, !dbg !10525
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10526
  store i32 %48, i32* %49, align 4, !dbg !10527
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10528
  %51 = lshr i32 %50, 6, !dbg !10529
  %52 = and i32 %51, 511, !dbg !10529
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10530
  store i32 %52, i32* %53, align 4, !dbg !10531
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10532
  %55 = shl i32 %54, 1, !dbg !10533
  %56 = and i32 %55, 393216, !dbg !10533
  %57 = add nuw nsw i32 %56, 131072, !dbg !10533
  %58 = lshr exact i32 %57, 16, !dbg !10534
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10535
  store i32 %58, i32* %59, align 4, !dbg !10536
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10537
  %61 = lshr i32 %60, 24, !dbg !10538
  %62 = and i32 %61, 15, !dbg !10538
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10539
  store i32 %62, i32* %63, align 4, !dbg !10540
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10541
  %65 = lshr i32 %64, 28, !dbg !10542
  %66 = and i32 %65, 7, !dbg !10542
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10543
  store i32 %66, i32* %67, align 4, !dbg !10544
  ret void, !dbg !10545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10549, metadata !DIExpression()), !dbg !10550
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !10551
  ret void, !dbg !10552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10556, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.value(metadata i32 1000, metadata !10557, metadata !DIExpression()), !dbg !10558
  %2 = udiv i32 %0, 1000, !dbg !10559
  %3 = add nsw i32 %2, -1, !dbg !10560
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10561
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10562
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10563
  ret void, !dbg !10564
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10565 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10567, metadata !DIExpression()), !dbg !10569
  %3 = bitcast i32* %2 to i8*, !dbg !10570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10570
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10568, metadata !DIExpression()), !dbg !10571
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10572
  store volatile i32 %4, i32* %2, align 4, !dbg !10571
  %5 = load volatile i32, i32* %2, align 4, !dbg !10573
  %6 = icmp eq i32 %0, -1, !dbg !10574
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10567, metadata !DIExpression()), !dbg !10569
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %8, metadata !10567, metadata !DIExpression()), !dbg !10569
  br label %9, !dbg !10576

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10567, metadata !DIExpression()), !dbg !10569
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10577
  call void @llvm.dbg.value(metadata i32 undef, metadata !10567, metadata !DIExpression()), !dbg !10569
  %12 = shl i32 %11, 15, !dbg !10569
  %13 = ashr i32 %12, 31, !dbg !10569
  %14 = add i32 %13, %10, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %14, metadata !10567, metadata !DIExpression()), !dbg !10569
  %15 = icmp eq i32 %14, 0, !dbg !10576
  br i1 %15, label %16, label %9, !dbg !10576

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10580
  ret void, !dbg !10580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #3 !dbg !10581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10583, metadata !DIExpression()), !dbg !10584
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10585
  ret void, !dbg !10586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10592, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 0, metadata !10595, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 0, metadata !10596, metadata !DIExpression()), !dbg !10597
  %2 = icmp eq i32 %0, 0, !dbg !10598
  br i1 %2, label %72, label %3, !dbg !10600

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10601
  %5 = icmp eq i32 %4, 49152, !dbg !10604
  br i1 %5, label %6, label %21, !dbg !10605

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10606
  %8 = select i1 %7, i32 0, i32 5, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %8, metadata !10595, metadata !DIExpression()), !dbg !10597
  %9 = add i32 %0, -120000001, !dbg !10610
  %10 = icmp ult i32 %9, 30000000, !dbg !10610
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %11, metadata !10595, metadata !DIExpression()), !dbg !10597
  %12 = icmp ult i32 %9, -30000000, !dbg !10612
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %13, metadata !10595, metadata !DIExpression()), !dbg !10597
  %14 = icmp ugt i32 %0, 60000000, !dbg !10614
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10616
  br i1 %16, label %21, label %17, !dbg !10616

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10617
  %19 = and i1 %18, %15, !dbg !10620
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10620
  br label %21, !dbg !10620

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10597
  call void @llvm.dbg.value(metadata i32 %22, metadata !10595, metadata !DIExpression()), !dbg !10597
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10621
  %24 = icmp eq i32 %23, 32768, !dbg !10623
  br i1 %24, label %25, label %45, !dbg !10624

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !10625
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10628
  %29 = select i1 %28, i32 5, i32 %22, !dbg !10628
  call void @llvm.dbg.value(metadata i32 %29, metadata !10595, metadata !DIExpression()), !dbg !10597
  %30 = icmp ugt i32 %0, 12000000, !dbg !10629
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10631
  %33 = select i1 %32, i32 4, i32 %29, !dbg !10631
  call void @llvm.dbg.value(metadata i32 %33, metadata !10595, metadata !DIExpression()), !dbg !10597
  %34 = icmp ugt i32 %0, 90000000, !dbg !10632
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10634
  %37 = select i1 %36, i32 3, i32 %33, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %37, metadata !10595, metadata !DIExpression()), !dbg !10597
  %38 = icmp ugt i32 %0, 60000000, !dbg !10635
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !10637
  br i1 %40, label %45, label %41, !dbg !10637

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !10638
  %43 = select i1 %42, i1 %39, i1 false, !dbg !10641
  %44 = select i1 %43, i32 1, i32 %37, !dbg !10641
  br label %45, !dbg !10641

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !10642
  call void @llvm.dbg.value(metadata i32 %46, metadata !10595, metadata !DIExpression()), !dbg !10597
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10643
  %48 = icmp eq i32 %47, 16384, !dbg !10645
  br i1 %48, label %49, label %61, !dbg !10646

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !10647
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !10650
  %53 = select i1 %52, i32 3, i32 %46, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %53, metadata !10595, metadata !DIExpression()), !dbg !10597
  %54 = icmp ugt i32 %0, 60000000, !dbg !10651
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !10653
  br i1 %56, label %61, label %57, !dbg !10653

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !10654
  %59 = select i1 %58, i1 %55, i1 false, !dbg !10657
  %60 = select i1 %59, i32 1, i32 %53, !dbg !10657
  br label %61, !dbg !10657

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !10642
  call void @llvm.dbg.value(metadata i32 %62, metadata !10595, metadata !DIExpression()), !dbg !10597
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #25, !dbg !10658
  call void @llvm.dbg.value(metadata i32 2, metadata !10593, metadata !DIExpression()), !dbg !10597
  br label %63, !dbg !10659

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !10642
  call void @llvm.dbg.value(metadata i32 %64, metadata !10593, metadata !DIExpression()), !dbg !10597
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %65, metadata !10594, metadata !DIExpression()), !dbg !10597
  %66 = add nsw i32 %64, -1, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %66, metadata !10593, metadata !DIExpression()), !dbg !10597
  %67 = icmp ne i32 %65, %62, !dbg !10663
  %68 = icmp ne i32 %66, 0, !dbg !10664
  %69 = select i1 %67, i1 %68, i1 false, !dbg !10664
  br i1 %69, label %63, label %70, !dbg !10665, !llvm.loop !10666

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !10668
  call void @llvm.dbg.value(metadata i32 %73, metadata !10596, metadata !DIExpression()), !dbg !10597
  ret i32 %73, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10671
  %2 = and i32 %1, 49152, !dbg !10671
  ret i32 %2, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10675, metadata !DIExpression()), !dbg !10676
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10677
  %3 = and i32 %2, -16, !dbg !10677
  %4 = or i32 %3, %0, !dbg !10677
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10679 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10680
  %2 = and i32 %1, 15, !dbg !10680
  ret i32 %2, !dbg !10681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10682 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10700, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10701, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i32 0, metadata !10702, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i32 0, metadata !10703, metadata !DIExpression()), !dbg !10704
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10705
  %4 = icmp eq i32 %3, 0, !dbg !10707
  br i1 %4, label %5, label %21, !dbg !10708

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10703, metadata !DIExpression()), !dbg !10704
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.82() #25, !dbg !10711
  %8 = icmp eq i32 %7, 1, !dbg !10713
  br i1 %8, label %13, label %9, !dbg !10714

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.83() #25, !dbg !10715
  br label %10, !dbg !10717

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.82() #25, !dbg !10718
  %12 = icmp eq i32 %11, 1, !dbg !10719
  br i1 %12, label %13, label %10, !dbg !10717, !llvm.loop !10720

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10722
  %15 = load i32, i32* %14, align 4, !dbg !10722
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10723
  %17 = load i32, i32* %16, align 4, !dbg !10723
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10724
  %19 = load i32, i32* %18, align 4, !dbg !10724
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.84(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10725
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10726
  call void @llvm.dbg.value(metadata i32 %20, metadata !10702, metadata !DIExpression()), !dbg !10704
  br label %21, !dbg !10727

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10728
  call void @llvm.dbg.value(metadata i32 %22, metadata !10702, metadata !DIExpression()), !dbg !10704
  ret i32 %22, !dbg !10729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10730 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10734, metadata !DIExpression()), !dbg !10735
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.86() #25, !dbg !10736
  %2 = icmp ne i32 %1, 0, !dbg !10738
  call void @llvm.dbg.value(metadata i1 %2, metadata !10734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10735
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #25, !dbg !10739
  %4 = icmp ne i32 %3, 0, !dbg !10741
  call void @llvm.dbg.value(metadata i1 undef, metadata !10734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10735
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10742
  %6 = icmp ne i32 %5, 0, !dbg !10744
  %7 = select i1 %6, i1 true, i1 %4, !dbg !10745
  %8 = select i1 %7, i1 true, i1 %2, !dbg !10745
  %9 = zext i1 %8 to i32, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %9, metadata !10734, metadata !DIExpression()), !dbg !10735
  ret i32 %9, !dbg !10746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10751, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10752, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.value(metadata i32 0, metadata !10753, metadata !DIExpression()), !dbg !10754
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10755
  %4 = load i32, i32* %3, align 4, !dbg !10755
  %5 = and i32 %4, 63, !dbg !10756
  %6 = udiv i32 %0, %5, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %6, metadata !10753, metadata !DIExpression()), !dbg !10754
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10758
  %8 = load i32, i32* %7, align 4, !dbg !10758
  %9 = and i32 %8, 511, !dbg !10759
  %10 = mul i32 %9, %6, !dbg !10760
  call void @llvm.dbg.value(metadata i32 %10, metadata !10753, metadata !DIExpression()), !dbg !10754
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10761
  %12 = load i32, i32* %11, align 4, !dbg !10761
  %13 = lshr i32 %12, 15, !dbg !10762
  %14 = and i32 %13, 131070, !dbg !10762
  %15 = add nuw nsw i32 %14, 2, !dbg !10762
  %16 = udiv i32 %10, %15, !dbg !10763
  call void @llvm.dbg.value(metadata i32 %16, metadata !10753, metadata !DIExpression()), !dbg !10754
  ret i32 %16, !dbg !10764
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.82() unnamed_addr #14 !dbg !10765 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  %2 = lshr i32 %1, 1, !dbg !10767
  %3 = and i32 %2, 1, !dbg !10767
  ret i32 %3, !dbg !10768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.83() unnamed_addr #13 !dbg !10769 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10770
  %2 = or i32 %1, 1, !dbg !10770
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10770
  ret void, !dbg !10771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.84(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10774, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i32 %1, metadata !10775, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i32 %2, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i32 %3, metadata !10777, metadata !DIExpression()), !dbg !10778
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10779
  %6 = and i32 %5, -4227072, !dbg !10779
  %7 = or i32 %1, %0, !dbg !10779
  %8 = shl i32 %2, 6, !dbg !10779
  %9 = or i32 %7, %8, !dbg !10779
  %10 = or i32 %9, %6, !dbg !10779
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10779
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10780
  %12 = and i32 %11, -196609, !dbg !10780
  %13 = or i32 %12, %3, !dbg !10780
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10780
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10781
  %15 = and i32 %14, -1879048193, !dbg !10781
  %16 = or i32 %15, %3, !dbg !10781
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10781
  ret void, !dbg !10782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10787, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10788, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 0, metadata !10789, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 0, metadata !10790, metadata !DIExpression()), !dbg !10791
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10792
  %4 = load i32, i32* %3, align 4, !dbg !10792
  %5 = lshr i32 %4, 4, !dbg !10792
  %6 = and i32 %5, 15, !dbg !10792
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10792
  %8 = load i8, i8* %7, align 1, !dbg !10792
  %9 = zext i8 %8 to i32, !dbg !10792
  %10 = lshr i32 %0, %9, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %10, metadata !10790, metadata !DIExpression()), !dbg !10791
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10793
  %12 = icmp ult i32 %11, %10, !dbg !10795
  br i1 %12, label %13, label %16, !dbg !10796

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %14, metadata !10789, metadata !DIExpression()), !dbg !10791
  %15 = icmp eq i32 %14, 0, !dbg !10799
  br i1 %15, label %16, label %30, !dbg !10801

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.85() #25, !dbg !10802
  br label %17, !dbg !10804

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.86() #25, !dbg !10805
  %19 = icmp eq i32 %18, 1, !dbg !10806
  br i1 %19, label %20, label %17, !dbg !10804, !llvm.loop !10807

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10809
  tail call fastcc void @LL_RCC_SetAHBPrescaler.87(i32 noundef %21) #25, !dbg !10810
  tail call fastcc void @LL_RCC_SetSysClkSource.88() #25, !dbg !10811
  br label %22, !dbg !10812

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.89() #25, !dbg !10813
  %24 = icmp eq i32 %23, 8, !dbg !10814
  br i1 %24, label %25, label %22, !dbg !10812, !llvm.loop !10815

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10817
  %27 = load i32, i32* %26, align 4, !dbg !10817
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.90(i32 noundef %27) #25, !dbg !10818
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10819
  %29 = load i32, i32* %28, align 4, !dbg !10819
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.91(i32 noundef %29) #25, !dbg !10820
  br label %30, !dbg !10821

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10822
  %33 = icmp ugt i32 %32, %10, !dbg !10824
  br i1 %33, label %34, label %36, !dbg !10825

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10826
  call void @llvm.dbg.value(metadata i32 %35, metadata !10789, metadata !DIExpression()), !dbg !10791
  br label %36, !dbg !10828

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10791
  call void @llvm.dbg.value(metadata i32 %37, metadata !10789, metadata !DIExpression()), !dbg !10791
  %38 = icmp eq i32 %37, 0, !dbg !10829
  br i1 %38, label %39, label %40, !dbg !10831

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10832
  br label %40, !dbg !10834

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.85() unnamed_addr #13 !dbg !10836 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10837
  %2 = or i32 %1, 16777216, !dbg !10837
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10837
  ret void, !dbg !10838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.86() unnamed_addr #14 !dbg !10839 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10840
  %2 = lshr i32 %1, 25, !dbg !10841
  %3 = and i32 %2, 1, !dbg !10841
  ret i32 %3, !dbg !10842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.87(i32 noundef %0) unnamed_addr #13 !dbg !10843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10845, metadata !DIExpression()), !dbg !10846
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10847
  %3 = and i32 %2, -241, !dbg !10847
  %4 = or i32 %3, %0, !dbg !10847
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10847
  ret void, !dbg !10848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.88() unnamed_addr #13 !dbg !10849 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10851, metadata !DIExpression()), !dbg !10852
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10853
  %2 = and i32 %1, -4, !dbg !10853
  %3 = or i32 %2, 2, !dbg !10853
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.89() unnamed_addr #14 !dbg !10855 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10856
  %2 = and i32 %1, 12, !dbg !10856
  ret i32 %2, !dbg !10857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.90(i32 noundef %0) unnamed_addr #13 !dbg !10858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10860, metadata !DIExpression()), !dbg !10861
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10862
  %3 = and i32 %2, -7169, !dbg !10862
  %4 = or i32 %3, %0, !dbg !10862
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10862
  ret void, !dbg !10863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.91(i32 noundef %0) unnamed_addr #13 !dbg !10864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10866, metadata !DIExpression()), !dbg !10867
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10868
  %3 = and i32 %2, -57345, !dbg !10868
  %4 = or i32 %3, %0, !dbg !10868
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #14 !dbg !10870 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10871
  %2 = lshr i32 %1, 29, !dbg !10872
  %3 = and i32 %2, 1, !dbg !10872
  ret i32 %3, !dbg !10873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10875
  %2 = lshr i32 %1, 27, !dbg !10876
  %3 = and i32 %2, 1, !dbg !10876
  ret i32 %3, !dbg !10877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10882, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.value(metadata i32 %1, metadata !10883, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10884, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10885, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.value(metadata i32 0, metadata !10886, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.value(metadata i32 0, metadata !10887, metadata !DIExpression()), !dbg !10888
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10889
  %6 = icmp eq i32 %5, 0, !dbg !10891
  br i1 %6, label %7, label %27, !dbg !10892

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %8, metadata !10887, metadata !DIExpression()), !dbg !10888
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.92() #25, !dbg !10895
  %10 = icmp eq i32 %9, 1, !dbg !10897
  br i1 %10, label %19, label %11, !dbg !10898

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10899
  br i1 %12, label %13, label %14, !dbg !10902

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10903
  br label %15, !dbg !10905

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.93() #25, !dbg !10906
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.94() #25, !dbg !10908
  br label %16, !dbg !10909

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.92() #25, !dbg !10910
  %18 = icmp eq i32 %17, 1, !dbg !10911
  br i1 %18, label %19, label %16, !dbg !10909, !llvm.loop !10912

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10914
  %21 = load i32, i32* %20, align 4, !dbg !10914
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10915
  %23 = load i32, i32* %22, align 4, !dbg !10915
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10916
  %25 = load i32, i32* %24, align 4, !dbg !10916
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.84(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10917
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %26, metadata !10886, metadata !DIExpression()), !dbg !10888
  br label %27, !dbg !10919

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10920
  call void @llvm.dbg.value(metadata i32 %28, metadata !10886, metadata !DIExpression()), !dbg !10888
  ret i32 %28, !dbg !10921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.92() unnamed_addr #14 !dbg !10922 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10923
  %2 = lshr i32 %1, 17, !dbg !10924
  %3 = and i32 %2, 1, !dbg !10924
  ret i32 %3, !dbg !10925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10927
  %2 = or i32 %1, 262144, !dbg !10927
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10927
  ret void, !dbg !10928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.93() unnamed_addr #13 !dbg !10929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10930
  %2 = and i32 %1, -262145, !dbg !10930
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10930
  ret void, !dbg !10931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.94() unnamed_addr #13 !dbg !10932 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10933
  %2 = or i32 %1, 65536, !dbg !10933
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10933
  ret void, !dbg !10934
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10935 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10938, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.value(metadata i32 undef, metadata !10938, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.value(metadata i32 undef, metadata !10938, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10954
  ret void, !dbg !10955
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10960, metadata !DIExpression()), !dbg !10962
  %2 = icmp eq i8* %0, null, !dbg !10963
  br i1 %2, label %29, label %3, !dbg !10965

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10966
  %5 = icmp eq i8 %4, 0, !dbg !10967
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10968
  br i1 %6, label %29, label %8, !dbg !10968

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10961, metadata !DIExpression()), !dbg !10962
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10969

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10961, metadata !DIExpression()), !dbg !10962
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10971
  br i1 %10, label %11, label %15, !dbg !10976

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10977
  %13 = load i8*, i8** %12, align 4, !dbg !10977
  %14 = icmp eq i8* %13, %0, !dbg !10978
  br i1 %14, label %29, label %15, !dbg !10979

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10980
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10961, metadata !DIExpression()), !dbg !10962
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10981
  br i1 %17, label %7, label %8, !dbg !10982, !llvm.loop !10983

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10961, metadata !DIExpression()), !dbg !10962
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10985
  br i1 %20, label %21, label %26, !dbg !10989

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10990
  %23 = load i8*, i8** %22, align 4, !dbg !10990
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10991
  %25 = icmp eq i32 %24, 0, !dbg !10992
  br i1 %25, label %29, label %26, !dbg !10993

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10994
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10961, metadata !DIExpression()), !dbg !10962
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10995
  br i1 %28, label %29, label %18, !dbg !10969, !llvm.loop !10996

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10962
  ret %struct.device* %30, !dbg !10998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !10999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11003, metadata !DIExpression()), !dbg !11004
  %2 = icmp eq %struct.device* %0, null, !dbg !11005
  br i1 %2, label %14, label %3, !dbg !11007

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11008
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11008
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11009
  %7 = load i8, i8* %6, align 1, !dbg !11009
  %8 = and i8 %7, 1, !dbg !11009
  %9 = icmp eq i8 %8, 0, !dbg !11009
  br i1 %9, label %14, label %10, !dbg !11010

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11011
  %12 = load i8, i8* %11, align 1, !dbg !11011
  %13 = icmp eq i8 %12, 0, !dbg !11012
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11004
  ret i1 %15, !dbg !11013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11019, metadata !DIExpression()), !dbg !11020
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11021
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11023 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11031, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11032, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i8* %2, metadata !11033, metadata !DIExpression()), !dbg !11036
  %5 = bitcast i32* %4 to i8*, !dbg !11037
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11037
  call void @llvm.dbg.value(metadata i32 0, metadata !11034, metadata !DIExpression()), !dbg !11036
  store i32 0, i32* %4, align 4, !dbg !11038
  call void @llvm.dbg.value(metadata i32* %4, metadata !11034, metadata !DIExpression(DW_OP_deref)), !dbg !11036
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11039
  call void @llvm.dbg.value(metadata i16* %6, metadata !11035, metadata !DIExpression()), !dbg !11036
  %7 = load i32, i32* %4, align 4, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %7, metadata !11034, metadata !DIExpression()), !dbg !11036
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11041
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11042
  ret i32 %8, !dbg !11043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11048, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.value(metadata i32* %1, metadata !11049, metadata !DIExpression()), !dbg !11054
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11055
  %4 = load i16*, i16** %3, align 4, !dbg !11055
  call void @llvm.dbg.value(metadata i16* %4, metadata !11050, metadata !DIExpression()), !dbg !11054
  %5 = icmp eq i16* %4, null, !dbg !11056
  br i1 %5, label %14, label %6, !dbg !11057

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11058
  call void @llvm.dbg.value(metadata i32 %7, metadata !11051, metadata !DIExpression()), !dbg !11058
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11059
  %9 = load i16, i16* %8, align 2, !dbg !11059
  %10 = add i16 %9, -32767, !dbg !11060
  %11 = icmp ult i16 %10, 2, !dbg !11060
  %12 = add i32 %7, 1, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %12, metadata !11051, metadata !DIExpression()), !dbg !11058
  br i1 %11, label %13, label %6, !dbg !11060, !llvm.loop !11063

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11066
  br label %14, !dbg !11067

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11069 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11073, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 %1, metadata !11074, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11075, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i8* %3, metadata !11076, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 0, metadata !11077, metadata !DIExpression()), !dbg !11085
  %5 = icmp eq i32 %1, 0, !dbg !11086
  br i1 %5, label %16, label %8, !dbg !11087

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11077, metadata !DIExpression()), !dbg !11085
  %7 = icmp eq i32 %15, %1, !dbg !11086
  br i1 %7, label %16, label %8, !dbg !11087, !llvm.loop !11088

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11077, metadata !DIExpression()), !dbg !11085
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11090
  %11 = load i16, i16* %10, align 2, !dbg !11090
  call void @llvm.dbg.value(metadata i16 %11, metadata !11079, metadata !DIExpression()), !dbg !11091
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !11092
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11082, metadata !DIExpression()), !dbg !11091
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %13, metadata !11083, metadata !DIExpression()), !dbg !11091
  %14 = icmp slt i32 %13, 0, !dbg !11094
  %15 = add nuw i32 %9, 1, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %15, metadata !11077, metadata !DIExpression()), !dbg !11085
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !11098 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11102, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11103, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11104, metadata !DIExpression()), !dbg !11105
  %2 = sext i16 %0 to i32, !dbg !11106
  %3 = icmp slt i16 %0, 1, !dbg !11108
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11109
  %6 = add nsw i32 %2, -1, !dbg !11109
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11109
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11109
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11103, metadata !DIExpression()), !dbg !11105
  ret %struct.device* %8, !dbg !11110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11111 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11113, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11114, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.value(metadata i8* %2, metadata !11115, metadata !DIExpression()), !dbg !11118
  %5 = bitcast i32* %4 to i8*, !dbg !11119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11119
  call void @llvm.dbg.value(metadata i32 0, metadata !11116, metadata !DIExpression()), !dbg !11118
  store i32 0, i32* %4, align 4, !dbg !11120
  call void @llvm.dbg.value(metadata i32* %4, metadata !11116, metadata !DIExpression(DW_OP_deref)), !dbg !11118
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11121
  call void @llvm.dbg.value(metadata i16* %6, metadata !11117, metadata !DIExpression()), !dbg !11118
  %7 = load i32, i32* %4, align 4, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %7, metadata !11116, metadata !DIExpression()), !dbg !11118
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11124
  ret i32 %8, !dbg !11125
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11128, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i32* %1, metadata !11129, metadata !DIExpression()), !dbg !11133
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11134
  %4 = load i16*, i16** %3, align 4, !dbg !11134
  call void @llvm.dbg.value(metadata i16* %4, metadata !11130, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i32 0, metadata !11131, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i32 0, metadata !11132, metadata !DIExpression()), !dbg !11133
  %5 = icmp eq i16* %4, null, !dbg !11135
  br i1 %5, label %22, label %6, !dbg !11137

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11131, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i16* %8, metadata !11130, metadata !DIExpression()), !dbg !11133
  %9 = load i16, i16* %8, align 2, !dbg !11138
  %10 = icmp eq i16 %9, -32768, !dbg !11142
  call void @llvm.dbg.value(metadata i32 undef, metadata !11131, metadata !DIExpression()), !dbg !11133
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11143
  call void @llvm.dbg.value(metadata i16* %11, metadata !11130, metadata !DIExpression()), !dbg !11133
  %12 = zext i1 %10 to i32, !dbg !11144
  %13 = add i32 %7, %12, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %13, metadata !11131, metadata !DIExpression()), !dbg !11133
  %14 = icmp eq i32 %13, 2, !dbg !11145
  br i1 %14, label %15, label %6, !dbg !11146

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11133
  call void @llvm.dbg.value(metadata i32 %16, metadata !11132, metadata !DIExpression()), !dbg !11133
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11147
  %18 = load i16, i16* %17, align 2, !dbg !11147
  %19 = icmp eq i16 %18, 32767, !dbg !11148
  %20 = add i32 %16, 1, !dbg !11149
  call void @llvm.dbg.value(metadata i32 %20, metadata !11132, metadata !DIExpression()), !dbg !11133
  br i1 %19, label %21, label %15, !dbg !11151, !llvm.loop !11152

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11154
  br label %22, !dbg !11155

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11156
  call void @llvm.dbg.value(metadata i16* %23, metadata !11130, metadata !DIExpression()), !dbg !11133
  ret i16* %23, !dbg !11157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !11158 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11161
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11162
  ret i32* %2, !dbg !11163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !11164 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11312, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11313, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11314, metadata !DIExpression()), !dbg !11315
  ret void, !dbg !11316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11321, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32 %1, metadata !11322, metadata !DIExpression()), !dbg !11323
  ret void, !dbg !11324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11329, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i32 %1, metadata !11330, metadata !DIExpression()), !dbg !11331
  ret void, !dbg !11332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11337, metadata !DIExpression()), !dbg !11339
  call void @llvm.dbg.value(metadata i8* %1, metadata !11338, metadata !DIExpression()), !dbg !11339
  ret i32 -134, !dbg !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11345, metadata !DIExpression()), !dbg !11347
  call void @llvm.dbg.value(metadata i8* %1, metadata !11346, metadata !DIExpression()), !dbg !11347
  ret i32 -134, !dbg !11348
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11352, metadata !DIExpression()), !dbg !11353
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11354, !srcloc !11360
  call void @llvm.dbg.value(metadata i32 undef, metadata !11357, metadata !DIExpression()) #23, !dbg !11361
  call void @llvm.dbg.value(metadata i32 undef, metadata !11358, metadata !DIExpression()) #23, !dbg !11361
  br label %3, !dbg !11362

3:                                                ; preds = %3, %1
  br label %3, !dbg !11363, !llvm.loop !11366
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11373, metadata !DIExpression()), !dbg !11375
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11374, metadata !DIExpression()), !dbg !11375
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11376
  unreachable, !dbg !11376
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11379, metadata !DIExpression()), !dbg !11380
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11381
  unreachable, !dbg !11381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11384, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11385, metadata !DIExpression()), !dbg !11388
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11389, !srcloc !11360
  call void @llvm.dbg.value(metadata i32 undef, metadata !11357, metadata !DIExpression()) #23, !dbg !11391
  call void @llvm.dbg.value(metadata i32 undef, metadata !11358, metadata !DIExpression()) #23, !dbg !11391
  call void @llvm.dbg.value(metadata i32 undef, metadata !11386, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11387, metadata !DIExpression()), !dbg !11388
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11392
  br i1 %4, label %6, label %5, !dbg !11394

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !11395
  br label %7, !dbg !11396

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !11395
  br label %7, !dbg !11399

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11389
  call void @llvm.dbg.value(metadata i32 %8, metadata !11357, metadata !DIExpression()) #23, !dbg !11391
  call void @llvm.dbg.value(metadata i32 %8, metadata !11386, metadata !DIExpression()), !dbg !11388
  %9 = tail call fastcc %struct.k_thread* @k_current_get.101() #26, !dbg !11401
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11387, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i32 undef, metadata !11402, metadata !DIExpression()) #23, !dbg !11405
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11407, !srcloc !11408
  tail call fastcc void @k_thread_abort.102(%struct.k_thread* noundef %9) #25, !dbg !11409
  ret void, !dbg !11412
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.101() unnamed_addr #9 !dbg !11413 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !11417
  ret %struct.k_thread* %1, !dbg !11418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.102(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11423, metadata !DIExpression()), !dbg !11424
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11425, !srcloc !11427
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !11428
  ret void, !dbg !11429
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #9 !dbg !11430 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11431, !srcloc !11433
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !11434
  ret %struct.k_thread* %1, !dbg !11435
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11436 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11440, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.value(metadata i32 %1, metadata !11441, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.value(metadata i32 %2, metadata !11442, metadata !DIExpression()), !dbg !11443
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !11444
  ret void, !dbg !11445
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11450, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i8* %1, metadata !11451, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.value(metadata i32 %2, metadata !11452, metadata !DIExpression()), !dbg !11453
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !11454
  ret void, !dbg !11455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11456 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !11457
  ret void, !dbg !11458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11461, metadata !DIExpression()), !dbg !11462
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !11463
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11464
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11465
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11466
  %4 = trunc i32 %0 to i8, !dbg !11467
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11468
  store i8 %4, i8* %5, align 4, !dbg !11469
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11470
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !11471
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11472
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11473
  store i8* %8, i8** %9, align 4, !dbg !11474
  ret void, !dbg !11475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11478, metadata !DIExpression()), !dbg !11484
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11485
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11479, metadata !DIExpression()), !dbg !11484
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11486
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11480, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i8* null, metadata !11483, metadata !DIExpression()), !dbg !11484
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11487
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11488
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !11489
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !11490
  ret void, !dbg !11491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11492 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11496, metadata !DIExpression()), !dbg !11497
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11498
  ret i8* %2, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11505, metadata !DIExpression()), !dbg !11506
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11507
  %3 = load i8, i8* %2, align 1, !dbg !11508
  %4 = and i8 %3, -5, !dbg !11508
  store i8 %4, i8* %2, align 1, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !11510 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !11513
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !11514
  %3 = ptrtoint i8* %2 to i32, !dbg !11523
  %4 = add i32 %3, 2048, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %4, metadata !11518, metadata !DIExpression()) #23, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %4, metadata !11526, metadata !DIExpression()) #23, !dbg !11529
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11531, !srcloc !11532
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11533
  %6 = or i32 %5, 512, !dbg !11533
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11533
  tail call fastcc void @__NVIC_SetPriority.110(i32 noundef -2, i32 noundef 255) #24, !dbg !11534
  tail call fastcc void @__NVIC_SetPriority.110(i32 noundef -5, i32 noundef 0) #24, !dbg !11537
  tail call fastcc void @__NVIC_SetPriority.110(i32 noundef -12, i32 noundef 0) #24, !dbg !11538
  tail call fastcc void @__NVIC_SetPriority.110(i32 noundef -11, i32 noundef 0) #24, !dbg !11539
  tail call fastcc void @__NVIC_SetPriority.110(i32 noundef -10, i32 noundef 0) #24, !dbg !11540
  tail call fastcc void @__NVIC_SetPriority.110(i32 noundef -4, i32 noundef 0) #24, !dbg !11541
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11542
  %8 = or i32 %7, 458752, !dbg !11542
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11542
  tail call void @z_arm_fault_init() #24, !dbg !11543
  tail call void @z_arm_cpu_idle_init() #24, !dbg !11544
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11545
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11548
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !11549
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !11550
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11551
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11551
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11512, metadata !DIExpression()), !dbg !11552
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !11553
  call void @z_device_state_init() #24, !dbg !11554
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !11555
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !11556
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !11557
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11558
  unreachable, !dbg !11558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2051, metadata !DIExpression()), !dbg !11559
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11560
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11560
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2052, metadata !DIExpression()), !dbg !11559
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2052, metadata !DIExpression()), !dbg !11559
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11561
  br i1 %7, label %8, label %35, !dbg !11562

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2052, metadata !DIExpression()), !dbg !11559
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11563
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11563
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2062, metadata !DIExpression()), !dbg !11564
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11565
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11565
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %14, metadata !2066, metadata !DIExpression()), !dbg !11564
  %15 = icmp eq %struct.device* %11, null, !dbg !11567
  br i1 %15, label %32, label %16, !dbg !11569

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11570
  br i1 %17, label %26, label %18, !dbg !11573

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11574
  call void @llvm.dbg.value(metadata i32 %19, metadata !2066, metadata !DIExpression()), !dbg !11564
  %20 = icmp ult i32 %19, 255, !dbg !11576
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %21, metadata !2066, metadata !DIExpression()), !dbg !11564
  %22 = trunc i32 %21 to i8, !dbg !11577
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11578
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11578
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11579
  store i8 %22, i8* %25, align 1, !dbg !11580
  br label %26, !dbg !11581

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11582
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11582
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11583
  %30 = load i8, i8* %29, align 1, !dbg !11584
  %31 = or i8 %30, 1, !dbg !11584
  store i8 %31, i8* %29, align 1, !dbg !11584
  br label %32, !dbg !11585

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11586
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2052, metadata !DIExpression()), !dbg !11559
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11561
  br i1 %34, label %8, label %35, !dbg !11562, !llvm.loop !11587

35:                                               ; preds = %32, %1
  ret void, !dbg !11589
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.110(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11592, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i32 %1, metadata !11593, metadata !DIExpression()), !dbg !11594
  %3 = trunc i32 %1 to i8, !dbg !11595
  %4 = shl i8 %3, 4, !dbg !11595
  %5 = and i32 %0, 15, !dbg !11598
  %6 = add nsw i32 %5, -4, !dbg !11599
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11600
  store volatile i8 %4, i8* %7, align 1, !dbg !11601
  ret void, !dbg !11602
}

; Function Attrs: optsize
declare !dbg !11603 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !11604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11607, metadata !DIExpression()), !dbg !11608
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11609
  store i8 1, i8* %2, align 1, !dbg !11610
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11611
  store i8 1, i8* %3, align 4, !dbg !11612
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11613
  store i32 0, i32* %4, align 4, !dbg !11614
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11615
  store i32 0, i32* %5, align 4, !dbg !11616
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11617
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11618
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11619
  ret void, !dbg !11620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11621 {
  tail call void @z_sched_init() #24, !dbg !11626
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11627
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i32 0, i32 0)) #24, !dbg !11628
  call void @llvm.dbg.value(metadata i8* %1, metadata !11625, metadata !DIExpression()), !dbg !11629
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11630
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11631
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !11632
  ret i8* %1, !dbg !11633
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !11634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11638, metadata !DIExpression()), !dbg !11639
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !11640
  unreachable, !dbg !11641
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11644, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata i8* %1, metadata !11645, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.value(metadata i8* %2, metadata !11646, metadata !DIExpression()), !dbg !11647
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11648
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !11649
  tail call void @boot_banner() #24, !dbg !11650
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !11651
  tail call void @z_init_static_threads() #24, !dbg !11652
  tail call void @main() #24, !dbg !11653
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11654
  %5 = and i8 %4, -2, !dbg !11654
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11654
  ret void, !dbg !11655
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11656 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11666, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i8* %1, metadata !11667, metadata !DIExpression()), !dbg !11668
  ret void, !dbg !11669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11670 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11672, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.value(metadata i8* %1, metadata !11673, metadata !DIExpression()), !dbg !11674
  ret void, !dbg !11675
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11676 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11677, !srcloc !11684
  call void @llvm.dbg.value(metadata i32 %1, metadata !11680, metadata !DIExpression()) #23, !dbg !11685
  %2 = icmp ne i32 %1, 0, !dbg !11686
  ret i1 %2, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11688 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11689
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11690
  %3 = load i8, i8* %2, align 4, !dbg !11691
  %4 = or i8 %3, 1, !dbg !11691
  store i8 %4, i8* %2, align 4, !dbg !11691
  ret void, !dbg !11692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11693 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11694
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11695
  %3 = load i8, i8* %2, align 4, !dbg !11696
  %4 = and i8 %3, -2, !dbg !11696
  store i8 %4, i8* %2, align 4, !dbg !11696
  ret void, !dbg !11697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11698 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11699
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11700
  %3 = load i8, i8* %2, align 4, !dbg !11700
  %4 = and i8 %3, 1, !dbg !11701
  %5 = icmp ne i8 %4, 0, !dbg !11702
  ret i1 %5, !dbg !11703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11708, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.value(metadata i8* %1, metadata !11709, metadata !DIExpression()), !dbg !11710
  ret i32 -88, !dbg !11711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11716, metadata !DIExpression()), !dbg !11717
  ret i8* null, !dbg !11718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11723, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i8* %1, metadata !11724, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 %2, metadata !11725, metadata !DIExpression()), !dbg !11726
  ret i32 -88, !dbg !11727
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2189, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i8* %1, metadata !2190, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i32 %2, metadata !2191, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i32 0, metadata !2192, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i8 undef, metadata !2194, metadata !DIExpression()), !dbg !11728
  %4 = icmp eq i8* %1, null, !dbg !11729
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11731
  br i1 %6, label %46, label %7, !dbg !11731

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11732
  %9 = load i8, i8* %8, align 1, !dbg !11732
  call void @llvm.dbg.value(metadata i8 %9, metadata !2194, metadata !DIExpression()), !dbg !11728
  %10 = add i32 %2, -1, !dbg !11733
  call void @llvm.dbg.value(metadata i32 %10, metadata !2191, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i8 0, metadata !2195, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.value(metadata i8 %9, metadata !2194, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i32 0, metadata !2192, metadata !DIExpression()), !dbg !11728
  %11 = icmp eq i8 %9, 0, !dbg !11735
  br i1 %11, label %12, label %15, !dbg !11737

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11738
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11739
  store i8 0, i8* %14, align 1, !dbg !11740
  br label %46, !dbg !11741

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2195, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.value(metadata i8 %17, metadata !2194, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i32 %18, metadata !2192, metadata !DIExpression()), !dbg !11728
  %19 = zext i8 %17 to i32, !dbg !11742
  %20 = zext i8 %16 to i32, !dbg !11743
  %21 = shl nuw i32 1, %20, !dbg !11743
  call void @llvm.dbg.value(metadata i32 %21, metadata !2193, metadata !DIExpression()), !dbg !11728
  %22 = and i32 %21, %19, !dbg !11745
  %23 = icmp eq i32 %22, 0, !dbg !11747
  br i1 %23, label %42, label %24, !dbg !11748

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11749
  %26 = sub i32 %10, %18, !dbg !11750
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11751
  %28 = load i8*, i8** %27, align 4, !dbg !11751
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11752
  %30 = load i32, i32* %29, align 4, !dbg !11752
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11753
  %32 = add i32 %31, %18, !dbg !11754
  call void @llvm.dbg.value(metadata i32 %32, metadata !2192, metadata !DIExpression()), !dbg !11728
  %33 = trunc i32 %21 to i8, !dbg !11755
  %34 = xor i8 %33, -1, !dbg !11755
  %35 = and i8 %17, %34, !dbg !11755
  call void @llvm.dbg.value(metadata i8 %35, metadata !2194, metadata !DIExpression()), !dbg !11728
  %36 = icmp eq i8 %35, 0, !dbg !11756
  br i1 %36, label %12, label %37, !dbg !11758

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11759
  %39 = sub i32 %10, %32, !dbg !11761
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !11762
  %41 = add i32 %40, %32, !dbg !11763
  call void @llvm.dbg.value(metadata i32 %41, metadata !2192, metadata !DIExpression()), !dbg !11728
  br label %42, !dbg !11764

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11728
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11728
  call void @llvm.dbg.value(metadata i8 %44, metadata !2194, metadata !DIExpression()), !dbg !11728
  call void @llvm.dbg.value(metadata i32 %43, metadata !2192, metadata !DIExpression()), !dbg !11728
  %45 = add i8 %16, 1, !dbg !11765
  call void @llvm.dbg.value(metadata i8 %45, metadata !2195, metadata !DIExpression()), !dbg !11734
  br label %15, !dbg !11737

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.112, i32 0, i32 0), %3 ], !dbg !11728
  ret i8* %47, !dbg !11766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11767 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11771, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 %1, metadata !11772, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i8* %2, metadata !11773, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 %3, metadata !11774, metadata !DIExpression()), !dbg !11776
  %5 = icmp ult i32 %1, %3, !dbg !11777
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11777
  call void @llvm.dbg.value(metadata i32 %6, metadata !11775, metadata !DIExpression()), !dbg !11776
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11778
  ret i32 %6, !dbg !11779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11784, metadata !DIExpression()), !dbg !11785
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11786
  ret void, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11797, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11798, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i32 %2, metadata !11799, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11800, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i8* %4, metadata !11801, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i8* %5, metadata !11802, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i8* %6, metadata !11803, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i32 %7, metadata !11804, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i32 %8, metadata !11805, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i8* undef, metadata !11806, metadata !DIExpression()), !dbg !11808
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11809
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11810
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11811
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11812
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11813
  call void @llvm.dbg.value(metadata i8* %13, metadata !11807, metadata !DIExpression()), !dbg !11808
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11814
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11815
  store i8* null, i8** %14, align 4, !dbg !11816
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11817
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11817
  br i1 %16, label %20, label %17, !dbg !11819

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11820
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11820
  br label %20, !dbg !11821

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11808
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11822
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11824
  ret i8* %13, !dbg !11825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #3 !dbg !11826 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11831, metadata !DIExpression()), !dbg !11832
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11833
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11841, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i32 %1, metadata !11842, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i32 %2, metadata !11843, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata i32 %3, metadata !11844, metadata !DIExpression()), !dbg !11845
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11846
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11847
  %6 = trunc i32 %3 to i8, !dbg !11848
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11849
  store i8 %6, i8* %7, align 4, !dbg !11850
  %8 = trunc i32 %2 to i8, !dbg !11851
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11852
  store i8 %8, i8* %9, align 1, !dbg !11853
  %10 = trunc i32 %1 to i8, !dbg !11854
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11855
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11855
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11855
  store i8 %10, i8* %13, align 2, !dbg !11856
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11857
  store i8 0, i8* %14, align 1, !dbg !11858
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11859
  ret void, !dbg !11860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !11861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11865, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11866, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 %2, metadata !11867, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 0, metadata !11872, metadata !DIExpression()), !dbg !11873
  %4 = add i32 %2, 7, !dbg !11874
  %5 = and i32 %4, -8, !dbg !11874
  %6 = add i32 %5, 64, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %6, metadata !11868, metadata !DIExpression()), !dbg !11873
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.122(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11876
  call void @llvm.dbg.value(metadata i8* %7, metadata !11871, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 %5, metadata !11869, metadata !DIExpression()), !dbg !11873
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11877
  call void @llvm.dbg.value(metadata i8* %8, metadata !11870, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata i32 0, metadata !11872, metadata !DIExpression()), !dbg !11873
  %9 = ptrtoint i8* %7 to i32, !dbg !11878
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11879
  store i32 %9, i32* %10, align 4, !dbg !11880
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11881
  store i32 %5, i32* %11, align 4, !dbg !11882
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11883
  store i32 0, i32* %12, align 4, !dbg !11884
  call void @llvm.dbg.value(metadata i8* %8, metadata !11870, metadata !DIExpression()), !dbg !11873
  ret i8* %8, !dbg !11885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.122(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11886 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11890, metadata !DIExpression()), !dbg !11891
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11892
  ret i8* %2, !dbg !11893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11894 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11899, metadata !DIExpression()), !dbg !11900
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11901
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11902
  ret void, !dbg !11903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11904 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11906, metadata !DIExpression()), !dbg !11907
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11908
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11909
  ret void, !dbg !11910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11911 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11915, metadata !DIExpression()), !dbg !11916
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11917
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11918
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11919
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11920
  ret void, !dbg !11921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !11922 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11927, metadata !DIExpression()), !dbg !11928
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11929
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11930
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11931
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11932
  ret void, !dbg !11933
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11934 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11951, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11942, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11943, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 %2, metadata !11944, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11945, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i8* %4, metadata !11946, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i8* %5, metadata !11947, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i8* %6, metadata !11948, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 %7, metadata !11949, metadata !DIExpression()), !dbg !11952
  call void @llvm.dbg.value(metadata i32 %8, metadata !11950, metadata !DIExpression()), !dbg !11952
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11953
  %13 = icmp eq i64 %11, -1, !dbg !11954
  br i1 %13, label %15, label %14, !dbg !11956

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11957
  br label %15, !dbg !11959

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11961 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11966, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11965, metadata !DIExpression()), !dbg !11967
  %4 = icmp eq i64 %3, 0, !dbg !11968
  br i1 %4, label %5, label %6, !dbg !11970

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11971
  br label %7, !dbg !11973

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11974
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11981, metadata !DIExpression()), !dbg !11982
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11983, !srcloc !11985
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11986
  ret void, !dbg !11987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11988 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11991, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11990, metadata !DIExpression()), !dbg !11992
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11993
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11994
  ret void, !dbg !11995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11996 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11998, metadata !DIExpression()), !dbg !12018
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12019

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !12020
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12016, metadata !DIExpression()), !dbg !12021
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12022

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11998, metadata !DIExpression()), !dbg !12018
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12023
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12023
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12026
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12026
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12027
  %9 = load i32, i32* %8, align 4, !dbg !12027
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12028
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12028
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12029
  %13 = load i8*, i8** %12, align 4, !dbg !12029
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12030
  %15 = load i8*, i8** %14, align 4, !dbg !12030
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12031
  %17 = load i8*, i8** %16, align 4, !dbg !12031
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12032
  %19 = load i32, i32* %18, align 4, !dbg !12032
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12033
  %21 = load i32, i32* %20, align 4, !dbg !12033
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !12034
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12035
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12036
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12037
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12037
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12038
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11998, metadata !DIExpression()), !dbg !12018
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12039
  br i1 %27, label %2, label %1, !dbg !12019, !llvm.loop !12041

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !12020
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12016, metadata !DIExpression()), !dbg !12021
  br label %29, !dbg !12022

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !12043
  ret void, !dbg !12044

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12016, metadata !DIExpression()), !dbg !12021
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12045
  %33 = load i32, i32* %32, align 4, !dbg !12045
  %34 = icmp eq i32 %33, -1, !dbg !12049
  br i1 %34, label %43, label %35, !dbg !12050

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12051
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12051
  %38 = icmp sgt i32 %33, 0, !dbg !12053
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12053
  %40 = zext i32 %39 to i64, !dbg !12053
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !12053
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12054
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !12054
  br label %43, !dbg !12055

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12056
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12016, metadata !DIExpression()), !dbg !12021
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12057
  br i1 %45, label %30, label %29, !dbg !12022, !llvm.loop !12059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !12061 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12066, metadata !DIExpression()), !dbg !12067
  call void @llvm.dbg.value(metadata i64 %0, metadata !12068, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i32 1000, metadata !12073, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i32 10000, metadata !12074, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i8 1, metadata !12075, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i8 0, metadata !12076, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i8 1, metadata !12077, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i8 0, metadata !12078, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i8 1, metadata !12079, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i8 0, metadata !12080, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i64 0, metadata !12081, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i64 0, metadata !12081, metadata !DIExpression()), !dbg !12085
  %2 = mul i64 %0, 10, !dbg !12087
  ret i64 %2, !dbg !12093
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12094 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12096, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i8* %1, metadata !12097, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i8* %2, metadata !12098, metadata !DIExpression()), !dbg !12100
  call void @llvm.dbg.value(metadata i8* %3, metadata !12099, metadata !DIExpression()), !dbg !12100
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12101
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12102
  %7 = load i8, i8* %6, align 4, !dbg !12103
  %8 = or i8 %7, 4, !dbg !12103
  store i8 %8, i8* %6, align 4, !dbg !12103
  tail call void @z_thread_essential_clear() #25, !dbg !12104
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !12105
  unreachable, !dbg !12105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12110, metadata !DIExpression()), !dbg !12111
  ret i32 -134, !dbg !12112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12113 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12117, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 %1, metadata !12118, metadata !DIExpression()), !dbg !12119
  ret i32 -134, !dbg !12120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !12121 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12128, metadata !DIExpression()), !dbg !12130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12129, metadata !DIExpression()), !dbg !12130
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12131
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12133
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12130
  ret i32 %6, !dbg !12134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !12135 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12139, metadata !DIExpression()), !dbg !12140
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12141
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12140
  ret i32 %3, !dbg !12143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12144 {
  tail call void @sys_clock_idle_exit() #24, !dbg !12146
  ret void, !dbg !12147
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12148 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12150, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i8* %1, metadata !12151, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i8* %2, metadata !12152, metadata !DIExpression()), !dbg !12153
  br label %4, !dbg !12154

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12155, !srcloc !12162
  call void @llvm.dbg.value(metadata i32 undef, metadata !12158, metadata !DIExpression()) #23, !dbg !12163
  call void @llvm.dbg.value(metadata i32 undef, metadata !12159, metadata !DIExpression()) #23, !dbg !12163
  tail call fastcc void @k_cpu_idle() #25, !dbg !12164
  br label %4, !dbg !12154, !llvm.loop !12165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12167 {
  tail call void @arch_cpu_idle() #24, !dbg !12168
  ret void, !dbg !12169
}

; Function Attrs: optsize
declare !dbg !12170 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12175, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12176, metadata !DIExpression()), !dbg !12179
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12180
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12180
  %5 = load i8, i8* %4, align 2, !dbg !12180
  call void @llvm.dbg.value(metadata i8 %5, metadata !12177, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12179
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12181
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12181
  %8 = load i8, i8* %7, align 2, !dbg !12181
  call void @llvm.dbg.value(metadata i8 %8, metadata !12178, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12179
  %9 = icmp eq i8 %8, %5, !dbg !12182
  %10 = sext i8 %5 to i32, !dbg !12184
  %11 = sext i8 %8 to i32, !dbg !12184
  %12 = sub nsw i32 %11, %10, !dbg !12184
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12184
  ret i32 %13, !dbg !12185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12190, metadata !DIExpression()), !dbg !12191
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !12192
  %3 = icmp eq i32 %2, 0, !dbg !12194
  br i1 %3, label %8, label %4, !dbg !12195

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !12196
  %6 = add i32 %5, %2, !dbg !12198
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12199
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !12200
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !12201
  br label %8, !dbg !12202

8:                                                ; preds = %4, %1
  ret void, !dbg !12203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !12204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12208, metadata !DIExpression()), !dbg !12210
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12211
  call void @llvm.dbg.value(metadata i32 %1, metadata !12209, metadata !DIExpression()), !dbg !12210
  ret i32 %1, !dbg !12212
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12217, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata i32 %1, metadata !12218, metadata !DIExpression()), !dbg !12226
  call void @llvm.dbg.value(metadata i32 0, metadata !12219, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12235
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12237, !srcloc !12243
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12237
  call void @llvm.dbg.value(metadata i32 %4, metadata !12240, metadata !DIExpression()) #23, !dbg !12244
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12244
  call void @llvm.dbg.value(metadata i32 %4, metadata !12234, metadata !DIExpression()) #23, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %4, metadata !12225, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 undef, metadata !12219, metadata !DIExpression()), !dbg !12227
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12245
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !12248
  %6 = icmp sgt i32 %0, 0, !dbg !12249
  %7 = icmp sgt i32 %5, 2, !dbg !12251
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12251
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12251
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12252
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12253
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %4, metadata !12255, metadata !DIExpression()) #23, !dbg !12261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12261
  call void @llvm.dbg.value(metadata i32 %4, metadata !12263, metadata !DIExpression()) #23, !dbg !12266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12268, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !12219, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 undef, metadata !12219, metadata !DIExpression()), !dbg !12227
  ret void, !dbg !12270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12273, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.value(metadata i32 %0, metadata !12275, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12290
  call void @llvm.dbg.value(metadata i32 1000, metadata !12278, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 10000, metadata !12279, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i8 1, metadata !12280, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i1 true, metadata !12281, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12290
  call void @llvm.dbg.value(metadata i1 true, metadata !12282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12290
  call void @llvm.dbg.value(metadata i8 0, metadata !12283, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i1 true, metadata !12284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12290
  call void @llvm.dbg.value(metadata i1 false, metadata !12285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12290
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !12290
  %2 = mul i32 %0, 10, !dbg !12292
  ret i32 %2, !dbg !12298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12301, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12304
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12306, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12306
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !12308
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12308
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !12304
  call void @llvm.dbg.value(metadata i32 %3, metadata !12302, metadata !DIExpression()), !dbg !12303
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12309
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12311
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12312
  br i1 %6, label %7, label %8, !dbg !12313

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12314
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !12316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !12318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12320, !srcloc !12269
  br label %24, !dbg !12321

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12322
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !12323
  %10 = icmp eq i32 %9, 0, !dbg !12323
  br i1 %10, label %21, label %11, !dbg !12325

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !12326
  br i1 %12, label %13, label %21, !dbg !12327

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12328
  %15 = icmp sgt i32 %14, %0, !dbg !12331
  br i1 %15, label %19, label %16, !dbg !12332

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12333
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !12333
  call void @llvm.dbg.value(metadata i32 %18, metadata !12302, metadata !DIExpression()), !dbg !12303
  br label %22, !dbg !12335

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12336
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12336
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12338
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12303
  call void @llvm.dbg.value(metadata i32 %23, metadata !12302, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 %23, metadata !12255, metadata !DIExpression()) #23, !dbg !12340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %23, metadata !12263, metadata !DIExpression()) #23, !dbg !12342
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12344, !srcloc !12269
  br label %24, !dbg !12345

24:                                               ; preds = %22, %7
  ret void, !dbg !12345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12350, metadata !DIExpression()), !dbg !12352
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !12353
  %3 = icmp eq i32 %2, 0, !dbg !12353
  br i1 %3, label %16, label %4, !dbg !12354

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12355
  br i1 %5, label %16, label %6, !dbg !12356

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12357
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12357
  %9 = load i8, i8* %8, align 2, !dbg !12357
  %10 = sext i8 %9 to i32, !dbg !12358
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12359
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !12360
  br i1 %12, label %16, label %13, !dbg !12361

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !12362
  %15 = xor i1 %14, true, !dbg !12363
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12352
  call void @llvm.dbg.value(metadata i1 %17, metadata !12351, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12352
  ret i1 %17, !dbg !12364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12365 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12369, metadata !DIExpression()), !dbg !12371
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12372
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12370, metadata !DIExpression()), !dbg !12371
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !12373
  br i1 %3, label %5, label %4, !dbg !12375

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !12376
  br label %5, !dbg !12378

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12369, metadata !DIExpression()), !dbg !12371
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12379
  ret i32 %6, !dbg !12380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12383, metadata !DIExpression()), !dbg !12385
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12386
  %3 = load i8, i8* %2, align 1, !dbg !12386
  call void @llvm.dbg.value(metadata i8 %3, metadata !12384, metadata !DIExpression()), !dbg !12385
  %4 = and i8 %3, 31, !dbg !12387
  %5 = icmp ne i8 %4, 0, !dbg !12388
  ret i1 %5, !dbg !12389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12390 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12392, metadata !DIExpression()), !dbg !12393
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12394
  br i1 %2, label %3, label %7, !dbg !12396

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12397, metadata !DIExpression()) #23, !dbg !12400
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12403
  %5 = load i8, i8* %4, align 1, !dbg !12404
  %6 = and i8 %5, 127, !dbg !12404
  store i8 %6, i8* %4, align 1, !dbg !12404
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12405, metadata !DIExpression()) #23, !dbg !12408
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12412
  br label %7, !dbg !12413

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12414, metadata !DIExpression()) #23, !dbg !12417
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12419
  %9 = load i8, i8* %8, align 1, !dbg !12420
  %10 = or i8 %9, -128, !dbg !12420
  store i8 %10, i8* %8, align 1, !dbg !12420
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()) #23, !dbg !12424
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12428, metadata !DIExpression()) #23, !dbg !12436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12434, metadata !DIExpression()) #23, !dbg !12436
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12438
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12435, metadata !DIExpression()) #23, !dbg !12436
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12440
  br i1 %12, label %23, label %13, !dbg !12438

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12435, metadata !DIExpression()) #23, !dbg !12436
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12442
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12435, metadata !DIExpression()) #23, !dbg !12436
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !12443
  %17 = icmp sgt i32 %16, 0, !dbg !12446
  br i1 %17, label %18, label %20, !dbg !12447

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12448
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !12450
  br label %25, !dbg !12451

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !12440
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12435, metadata !DIExpression()) #23, !dbg !12436
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12440
  br i1 %22, label %23, label %13, !dbg !12438, !llvm.loop !12452

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12454
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !12455
  br label %25, !dbg !12456

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12457
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12458
  %28 = zext i1 %27 to i32, !dbg !12458
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !12459
  ret void, !dbg !12460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12463, metadata !DIExpression()), !dbg !12464
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !12465
  ret i1 %2, !dbg !12466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !12467 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12469, metadata !DIExpression()), !dbg !12471
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12470, metadata !DIExpression()), !dbg !12471
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12472
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !12473
  ret void, !dbg !12474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12475 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12479, metadata !DIExpression()), !dbg !12480
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !12481
  br i1 %2, label %6, label %3, !dbg !12481

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12482
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12482
  br label %6, !dbg !12481

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12481
  ret %struct._dnode* %7, !dbg !12483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12484 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12488, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12489, metadata !DIExpression()), !dbg !12492
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12493
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12493
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12490, metadata !DIExpression()), !dbg !12492
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12494
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12495
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12496
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12497
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12498
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12499
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12500
  ret void, !dbg !12501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12502 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12506, metadata !DIExpression()), !dbg !12508
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12507, metadata !DIExpression()), !dbg !12508
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12509
  br i1 %3, label %6, label %4, !dbg !12510

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !12511
  br label %6, !dbg !12510

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12510
  ret %struct._dnode* %7, !dbg !12512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12513 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12517, metadata !DIExpression()), !dbg !12520
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12518, metadata !DIExpression()), !dbg !12520
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12521
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12521
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12519, metadata !DIExpression()), !dbg !12520
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12522
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12523
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12524
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12525
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12526
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12527
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12528
  ret void, !dbg !12529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12532, metadata !DIExpression()), !dbg !12534
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12535
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12542, metadata !DIExpression()) #23, !dbg !12544
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12545
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12546
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12546
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12533, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12547, metadata !DIExpression()) #23, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %0, metadata !12552, metadata !DIExpression()) #23, !dbg !12553
  %6 = icmp eq i32 %0, 0, !dbg !12556
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12558
  br i1 %6, label %8, label %15, !dbg !12559

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !12560
  br i1 %9, label %15, label %10, !dbg !12562

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !12563
  br i1 %11, label %15, label %12, !dbg !12565

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !12566
  %14 = icmp eq i32 %13, 0, !dbg !12566
  br i1 %14, label %18, label %15, !dbg !12568

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12569
  br i1 %16, label %18, label %17, !dbg !12572

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12573
  br label %18, !dbg !12575

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12558
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12558
  ret void, !dbg !12576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !12577 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12581, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12582, metadata !DIExpression()), !dbg !12584
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !12585
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12583, metadata !DIExpression()), !dbg !12584
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12582, metadata !DIExpression()), !dbg !12584
  ret %struct.k_thread* %3, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12589, metadata !DIExpression()), !dbg !12590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12591
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12592
  %4 = xor i1 %3, true, !dbg !12593
  ret i1 %4, !dbg !12594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12597, metadata !DIExpression()), !dbg !12598
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12599
  %3 = load i16, i16* %2, align 2, !dbg !12599
  %4 = icmp ult i16 %3, 128, !dbg !12600
  %5 = zext i1 %4 to i32, !dbg !12600
  ret i32 %5, !dbg !12601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12602 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12608, metadata !DIExpression()), !dbg !12609
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12610
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !12611
  %4 = xor i1 %3, true, !dbg !12612
  ret i1 %4, !dbg !12613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12614 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12620, metadata !DIExpression()), !dbg !12621
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12622
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12622
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12623
  ret i1 %4, !dbg !12624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12625 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12627, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12628, metadata !DIExpression()), !dbg !12629
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12630
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12630
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12631
  br i1 %5, label %9, label %6, !dbg !12632

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12633
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12633
  br label %9, !dbg !12632

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12632
  ret %struct._dnode* %10, !dbg !12634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12635 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12639, metadata !DIExpression()), !dbg !12640
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12641
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12641
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12642
  ret i1 %4, !dbg !12643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !12644 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12648, metadata !DIExpression()), !dbg !12651
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12652
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12652
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12649, metadata !DIExpression()), !dbg !12651
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12653
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12653
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12650, metadata !DIExpression()), !dbg !12651
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12654
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12655
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12656
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12657
  tail call fastcc void @sys_dnode_init.127(%struct._dnode* noundef %0) #25, !dbg !12658
  ret void, !dbg !12659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.127(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !12660 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12662, metadata !DIExpression()), !dbg !12663
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12664
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12665
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12666
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12667
  ret void, !dbg !12668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12673, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i32 128, metadata !12674, metadata !DIExpression()), !dbg !12675
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12676
  %3 = load i8, i8* %2, align 1, !dbg !12676
  %4 = icmp slt i8 %3, 0, !dbg !12677
  ret i1 %4, !dbg !12678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12683, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.value(metadata i32 %1, metadata !12684, metadata !DIExpression()), !dbg !12685
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12686
  ret i1 %3, !dbg !12687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12690, metadata !DIExpression()), !dbg !12691
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12692
  ret i1 %2, !dbg !12693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12696, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata i32 %1, metadata !12697, metadata !DIExpression()), !dbg !12698
  %3 = icmp slt i32 %0, %1, !dbg !12699
  ret i1 %3, !dbg !12700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12703, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 0, metadata !12704, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12709
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12711, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12711
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !12713
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12713
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !12709
  call void @llvm.dbg.value(metadata i32 %3, metadata !12706, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()), !dbg !12708
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12714
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !12719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12719
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !12721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12723, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !12704, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.value(metadata i32 undef, metadata !12704, metadata !DIExpression()), !dbg !12708
  ret void, !dbg !12724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12727, metadata !DIExpression()), !dbg !12728
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12729
  br i1 %2, label %24, label %3, !dbg !12731

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12732
  br i1 %4, label %5, label %24, !dbg !12733

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12414, metadata !DIExpression()) #23, !dbg !12734
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12737
  %7 = load i8, i8* %6, align 1, !dbg !12738
  %8 = or i8 %7, -128, !dbg !12738
  store i8 %8, i8* %6, align 1, !dbg !12738
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()) #23, !dbg !12739
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12428, metadata !DIExpression()) #23, !dbg !12741
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12434, metadata !DIExpression()) #23, !dbg !12741
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12743
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12435, metadata !DIExpression()) #23, !dbg !12741
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12744
  br i1 %10, label %21, label %11, !dbg !12743

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12435, metadata !DIExpression()) #23, !dbg !12741
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12745
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12435, metadata !DIExpression()) #23, !dbg !12741
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12746
  %15 = icmp sgt i32 %14, 0, !dbg !12747
  br i1 %15, label %16, label %18, !dbg !12748

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12749
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12750
  br label %23, !dbg !12751

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12744
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12435, metadata !DIExpression()) #23, !dbg !12741
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12744
  br i1 %20, label %21, label %11, !dbg !12743, !llvm.loop !12752

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12754
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12755
  br label %23, !dbg !12756

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12757
  br label %24, !dbg !12758

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12764
  br i1 %2, label %6, label %3, !dbg !12765

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12766
  %5 = xor i1 %4, true, !dbg !12765
  br label %6, !dbg !12765

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12770, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.value(metadata i32 0, metadata !12771, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12776
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12778, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12778
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !12780
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12780
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !12776
  call void @llvm.dbg.value(metadata i32 %3, metadata !12773, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.value(metadata i32 undef, metadata !12771, metadata !DIExpression()), !dbg !12775
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12781
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !12784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12784
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !12786
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12788, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !12771, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.value(metadata i32 undef, metadata !12771, metadata !DIExpression()), !dbg !12775
  ret void, !dbg !12789
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12792, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12795
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12797, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12797
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !12799
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12799
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !12795
  call void @llvm.dbg.value(metadata i32 %3, metadata !12793, metadata !DIExpression()), !dbg !12794
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12800
  br i1 %4, label %5, label %6, !dbg !12802

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !12803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12803
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !12806
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12808, !srcloc !12269
  br label %8, !dbg !12809

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.132(%struct.k_thread* noundef %0) #25, !dbg !12810
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12811
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12812
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12812
  br label %8, !dbg !12813

8:                                                ; preds = %6, %5
  ret void, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12816, metadata !DIExpression()), !dbg !12817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12818
  %3 = load i8, i8* %2, align 1, !dbg !12818
  %4 = and i8 %3, 4, !dbg !12819
  %5 = icmp eq i8 %4, 0, !dbg !12820
  ret i1 %5, !dbg !12821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.132(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12824, metadata !DIExpression()), !dbg !12825
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12826
  %3 = load i8, i8* %2, align 1, !dbg !12827
  %4 = and i8 %3, -5, !dbg !12827
  store i8 %4, i8* %2, align 1, !dbg !12827
  ret void, !dbg !12828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12829 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12832, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12831, metadata !DIExpression()), !dbg !12833
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12834
  br i1 %4, label %5, label %9, !dbg !12836

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12837
  br i1 %6, label %7, label %9, !dbg !12838

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12839, metadata !DIExpression()) #23, !dbg !12845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12844, metadata !DIExpression()) #23, !dbg !12845
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12848
  br label %10, !dbg !12849

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !12853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12855, !srcloc !12269
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12861, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata i32 %0, metadata !12863, metadata !DIExpression()), !dbg !12868
  %2 = icmp eq i32 %0, 0, !dbg !12870
  br i1 %2, label %3, label %6, !dbg !12871

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12872, !srcloc !12879
  call void @llvm.dbg.value(metadata i32 %4, metadata !12875, metadata !DIExpression()) #23, !dbg !12880
  %5 = icmp eq i32 %4, 0, !dbg !12881
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12862
  ret i1 %7, !dbg !12882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12883 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12886
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12885, metadata !DIExpression()), !dbg !12887
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12888
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12889
  ret i1 %3, !dbg !12890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12893, metadata !DIExpression()), !dbg !12895
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %2, metadata !12894, metadata !DIExpression()), !dbg !12895
  ret i32 %2, !dbg !12897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12900, metadata !DIExpression()), !dbg !12904
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12905
  call void @llvm.dbg.value(metadata i32 0, metadata !12901, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12907
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12909, !srcloc !12243
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %4, metadata !12240, metadata !DIExpression()) #23, !dbg !12911
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %4, metadata !12234, metadata !DIExpression()) #23, !dbg !12907
  call void @llvm.dbg.value(metadata i32 %4, metadata !12903, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 undef, metadata !12901, metadata !DIExpression()), !dbg !12906
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12912
  br i1 %5, label %6, label %10, !dbg !12916

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12397, metadata !DIExpression()) #23, !dbg !12917
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12920
  %8 = load i8, i8* %7, align 1, !dbg !12921
  %9 = and i8 %8, 127, !dbg !12921
  store i8 %9, i8* %7, align 1, !dbg !12921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12405, metadata !DIExpression()) #23, !dbg !12922
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12924
  br label %10, !dbg !12925

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12926
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12927
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12928
  %13 = zext i1 %12 to i32, !dbg !12928
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12929
  call void @llvm.dbg.value(metadata i32 %4, metadata !12255, metadata !DIExpression()) #23, !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %4, metadata !12263, metadata !DIExpression()) #23, !dbg !12932
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12934, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !12901, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 undef, metadata !12901, metadata !DIExpression()), !dbg !12906
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12935
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12937
  br i1 %15, label %16, label %17, !dbg !12938

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12939
  br label %17, !dbg !12941

17:                                               ; preds = %16, %10
  ret void, !dbg !12942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12945, metadata !DIExpression()), !dbg !12946
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12947
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12948
  ret i32 %3, !dbg !12949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12952, metadata !DIExpression()), !dbg !12953
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12954
  %3 = load i8, i8* %2, align 1, !dbg !12955
  %4 = or i8 %3, 16, !dbg !12955
  store i8 %4, i8* %2, align 1, !dbg !12955
  ret void, !dbg !12956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12957 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12958, !srcloc !12243
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12958
  call void @llvm.dbg.value(metadata i32 %2, metadata !12240, metadata !DIExpression()) #23, !dbg !12960
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12960
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12961
  ret void, !dbg !12962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12965, metadata !DIExpression()), !dbg !12966
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12967
  br i1 %2, label %3, label %5, !dbg !12969

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12970
  br label %6, !dbg !12972

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12263, metadata !DIExpression()) #23, !dbg !12973
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12976, !srcloc !12269
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12978 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12980, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !12983
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12985, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12985
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !12987
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !12987
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !12983
  call void @llvm.dbg.value(metadata i32 %3, metadata !12981, metadata !DIExpression()), !dbg !12982
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12988
  br i1 %4, label %6, label %5, !dbg !12990

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !12991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !12991
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !12994
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12996, !srcloc !12269
  br label %8, !dbg !12997

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12998
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12999
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13000
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !13000
  br label %8, !dbg !13001

8:                                                ; preds = %6, %5
  ret void, !dbg !13001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13002 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13004, metadata !DIExpression()), !dbg !13005
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13006
  %3 = load i8, i8* %2, align 1, !dbg !13006
  %4 = and i8 %3, 16, !dbg !13007
  %5 = icmp ne i8 %4, 0, !dbg !13008
  ret i1 %5, !dbg !13009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13012, metadata !DIExpression()), !dbg !13013
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13014
  %3 = load i8, i8* %2, align 1, !dbg !13015
  %4 = and i8 %3, -17, !dbg !13015
  store i8 %4, i8* %2, align 1, !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13017 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13025, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13026, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 0, metadata !13028, metadata !DIExpression()), !dbg !13032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13033
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13035, !srcloc !12243
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %5, metadata !12240, metadata !DIExpression()) #23, !dbg !13037
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %5, metadata !12234, metadata !DIExpression()) #23, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %5, metadata !13030, metadata !DIExpression()), !dbg !13032
  call void @llvm.dbg.value(metadata i32 undef, metadata !13028, metadata !DIExpression()), !dbg !13032
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13038
  call void @llvm.dbg.value(metadata i32 %5, metadata !12255, metadata !DIExpression()) #23, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %5, metadata !12263, metadata !DIExpression()) #23, !dbg !13043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13045, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13028, metadata !DIExpression()), !dbg !13032
  call void @llvm.dbg.value(metadata i32 undef, metadata !13028, metadata !DIExpression()), !dbg !13032
  ret void, !dbg !13046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13047 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13051, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13049, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13050, metadata !DIExpression()), !dbg !13052
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !13053
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !13054
  ret void, !dbg !13055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13056 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13060, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13061, metadata !DIExpression()), !dbg !13062
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !13063
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !13064
  %3 = icmp eq %union.anon* %1, null, !dbg !13065
  br i1 %3, label %21, label %4, !dbg !13067

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13068
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13070
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13071
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12428, metadata !DIExpression()) #23, !dbg !13072
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12434, metadata !DIExpression()) #23, !dbg !13072
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !13074
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12435, metadata !DIExpression()) #23, !dbg !13072
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13075
  br i1 %8, label %19, label %9, !dbg !13074

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12435, metadata !DIExpression()) #23, !dbg !13072
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13076
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12435, metadata !DIExpression()) #23, !dbg !13072
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !13077
  %13 = icmp sgt i32 %12, 0, !dbg !13078
  br i1 %13, label %14, label %16, !dbg !13079

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13080
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !13081
  br label %21, !dbg !13082

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !13075
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12435, metadata !DIExpression()) #23, !dbg !13072
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13075
  br i1 %18, label %19, label %9, !dbg !13074, !llvm.loop !13083

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13085
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !13086
  br label %21, !dbg !13087

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13089 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13094, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13093, metadata !DIExpression()), !dbg !13095
  %4 = icmp eq i64 %3, -1, !dbg !13096
  br i1 %4, label %6, label %5, !dbg !13098

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.133(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13099
  br label %6, !dbg !13101

6:                                                ; preds = %5, %2
  ret void, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.133(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13103 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13106, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13105, metadata !DIExpression()), !dbg !13107
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13108
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13109
  ret void, !dbg !13110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13111 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13113, metadata !DIExpression()), !dbg !13121
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13122
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13122
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13114, metadata !DIExpression()), !dbg !13121
  call void @llvm.dbg.value(metadata i32 0, metadata !13115, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13124
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13126, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13128
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13128
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13124
  call void @llvm.dbg.value(metadata i32 undef, metadata !13117, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13115, metadata !DIExpression()), !dbg !13123
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13129
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13130
  %7 = load i8, i8* %6, align 1, !dbg !13130
  %8 = and i8 %7, 40, !dbg !13131
  %9 = icmp eq i8 %8, 0, !dbg !13131
  call void @llvm.dbg.value(metadata i1 %9, metadata !13118, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13132
  br i1 %9, label %10, label %17, !dbg !13133

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13134
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13134
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13134
  %14 = icmp eq %union.anon* %13, null, !dbg !13138
  br i1 %14, label %16, label %15, !dbg !13139

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !13140
  br label %16, !dbg !13142

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.132(%struct.k_thread* noundef nonnull %3) #25, !dbg !13143
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !13144
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !13145
  br label %17, !dbg !13146

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13126
  call void @llvm.dbg.value(metadata i32 %18, metadata !12240, metadata !DIExpression()) #23, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %18, metadata !12234, metadata !DIExpression()) #23, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %18, metadata !13117, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 undef, metadata !12255, metadata !DIExpression()) #23, !dbg !13147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()) #23, !dbg !13149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13151, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13115, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13115, metadata !DIExpression()), !dbg !13123
  ret void, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13155, metadata !DIExpression()), !dbg !13156
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13157
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !13158
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13159
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13160
  ret void, !dbg !13161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13164, metadata !DIExpression()), !dbg !13165
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13166
  %3 = load i8, i8* %2, align 1, !dbg !13167
  %4 = and i8 %3, -3, !dbg !13167
  store i8 %4, i8* %2, align 1, !dbg !13167
  ret void, !dbg !13168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13171, metadata !DIExpression()), !dbg !13172
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13173
  br i1 %2, label %3, label %7, !dbg !13175

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12397, metadata !DIExpression()) #23, !dbg !13176
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13179
  %5 = load i8, i8* %4, align 1, !dbg !13180
  %6 = and i8 %5, 127, !dbg !13180
  store i8 %6, i8* %4, align 1, !dbg !13180
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12405, metadata !DIExpression()) #23, !dbg !13181
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13183
  br label %7, !dbg !13184

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13185
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13186
  %10 = zext i1 %9 to i32, !dbg !13186
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !13187
  ret void, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13191, metadata !DIExpression()), !dbg !13192
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13193
  %3 = load i8, i8* %2, align 1, !dbg !13194
  %4 = or i8 %3, 2, !dbg !13194
  store i8 %4, i8* %2, align 1, !dbg !13194
  ret void, !dbg !13195
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13198, metadata !DIExpression()), !dbg !13202
  call void @llvm.dbg.value(metadata i32 0, metadata !13199, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13204
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13206, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13206
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !13208
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !13204
  call void @llvm.dbg.value(metadata i32 %3, metadata !13201, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 undef, metadata !13199, metadata !DIExpression()), !dbg !13203
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13209
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !13212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !13214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13216, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13199, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.value(metadata i32 undef, metadata !13199, metadata !DIExpression()), !dbg !13203
  ret void, !dbg !13217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13218 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13224, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.value(metadata i32 %0, metadata !13222, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13223, metadata !DIExpression()), !dbg !13229
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13230
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13231
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13232
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13233
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %6, metadata !13225, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.value(metadata i32 0, metadata !13226, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13236
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13238, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13236
  call void @llvm.dbg.value(metadata i32 undef, metadata !13228, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 undef, metadata !13226, metadata !DIExpression()), !dbg !13235
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13241
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13245
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13246
  br i1 %10, label %11, label %12, !dbg !13247

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13248
  br label %12, !dbg !13250

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %13, metadata !12240, metadata !DIExpression()) #23, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %13, metadata !12234, metadata !DIExpression()) #23, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %13, metadata !13228, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 undef, metadata !12255, metadata !DIExpression()) #23, !dbg !13251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()) #23, !dbg !13253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13255, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13226, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 undef, metadata !13226, metadata !DIExpression()), !dbg !13235
  ret i32 %6, !dbg !13256
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13257 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13262, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata i64 undef, metadata !13264, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13261, metadata !DIExpression()), !dbg !13265
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13263, metadata !DIExpression()), !dbg !13265
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13266
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13268
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13270, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13272
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13268
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13273
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13274
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12839, metadata !DIExpression()) #23, !dbg !13275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12844, metadata !DIExpression()) #23, !dbg !13275
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !13277
  ret i32 %9, !dbg !13278
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13279 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13283, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13284, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 0, metadata !13285, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13290
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13292, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13290
  call void @llvm.dbg.value(metadata i32 undef, metadata !13287, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13284, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()), !dbg !13289
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13295
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13284, metadata !DIExpression()), !dbg !13288
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13298
  br i1 %5, label %7, label %6, !dbg !13300

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13301
  br label %7, !dbg !13303

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %8, metadata !12240, metadata !DIExpression()) #23, !dbg !13294
  call void @llvm.dbg.value(metadata i32 %8, metadata !12234, metadata !DIExpression()) #23, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %8, metadata !13287, metadata !DIExpression()), !dbg !13289
  call void @llvm.dbg.value(metadata i32 undef, metadata !12255, metadata !DIExpression()) #23, !dbg !13304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13304
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()) #23, !dbg !13306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13308, !srcloc !12269
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13284, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i32 undef, metadata !13285, metadata !DIExpression()), !dbg !13289
  ret %struct.k_thread* %4, !dbg !13309
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13310 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13312, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13313, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i32 0, metadata !13314, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13319
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13321, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13319
  call void @llvm.dbg.value(metadata i32 undef, metadata !13316, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13313, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()), !dbg !13318
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13313, metadata !DIExpression()), !dbg !13317
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13327
  br i1 %5, label %8, label %6, !dbg !13329

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13330
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13332
  br label %8, !dbg !13333

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %9, metadata !12240, metadata !DIExpression()) #23, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %9, metadata !12234, metadata !DIExpression()) #23, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %9, metadata !13316, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata i32 undef, metadata !12255, metadata !DIExpression()) #23, !dbg !13334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13334
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()) #23, !dbg !13336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13338, !srcloc !12269
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13313, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()), !dbg !13318
  ret %struct.k_thread* %4, !dbg !13339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13340 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13342, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13198, metadata !DIExpression()) #23, !dbg !13344
  call void @llvm.dbg.value(metadata i32 0, metadata !13199, metadata !DIExpression()) #23, !dbg !13346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13347
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13349, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !13347
  call void @llvm.dbg.value(metadata i32 %3, metadata !13201, metadata !DIExpression()) #23, !dbg !13346
  call void @llvm.dbg.value(metadata i32 undef, metadata !13199, metadata !DIExpression()) #23, !dbg !13346
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13352
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !13353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13353
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !13355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13357, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13199, metadata !DIExpression()) #23, !dbg !13346
  call void @llvm.dbg.value(metadata i32 undef, metadata !13199, metadata !DIExpression()) #23, !dbg !13346
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13358
  ret void, !dbg !13359
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13362, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 %1, metadata !13363, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i8 0, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 0, metadata !13365, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13370
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13372, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13374
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13374
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13370
  call void @llvm.dbg.value(metadata i32 undef, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i8 poison, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13365, metadata !DIExpression()), !dbg !13369
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !13375
  call void @llvm.dbg.value(metadata i1 %6, metadata !13364, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13368
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13378

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12397, metadata !DIExpression()) #23, !dbg !13379
  %11 = load i8, i8* %4, align 1, !dbg !13385
  %12 = and i8 %11, 127, !dbg !13385
  store i8 %12, i8* %4, align 1, !dbg !13385
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12405, metadata !DIExpression()) #23, !dbg !13386
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13388
  store i8 %9, i8* %8, align 2, !dbg !13389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12414, metadata !DIExpression()) #23, !dbg !13390
  %13 = load i8, i8* %4, align 1, !dbg !13392
  %14 = or i8 %13, -128, !dbg !13392
  store i8 %14, i8* %4, align 1, !dbg !13392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()) #23, !dbg !13393
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12428, metadata !DIExpression()) #23, !dbg !13395
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12434, metadata !DIExpression()) #23, !dbg !13395
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13397
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12435, metadata !DIExpression()) #23, !dbg !13395
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13398
  br i1 %16, label %26, label %17, !dbg !13397

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12435, metadata !DIExpression()) #23, !dbg !13395
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13399
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12435, metadata !DIExpression()) #23, !dbg !13395
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !13400
  %21 = icmp sgt i32 %20, 0, !dbg !13401
  br i1 %21, label %22, label %23, !dbg !13402

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !13403
  br label %27, !dbg !13404

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !13398
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12435, metadata !DIExpression()) #23, !dbg !13395
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13398
  br i1 %25, label %26, label %17, !dbg !13397, !llvm.loop !13405

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !13407
  br label %27, !dbg !13408

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13409
  br label %29, !dbg !13410

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13411
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %30, metadata !12240, metadata !DIExpression()) #23, !dbg !13374
  call void @llvm.dbg.value(metadata i32 %30, metadata !12234, metadata !DIExpression()) #23, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %30, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 undef, metadata !12255, metadata !DIExpression()) #23, !dbg !13413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13413
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()) #23, !dbg !13415
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13417, !srcloc !12269
  call void @llvm.dbg.value(metadata i8 poison, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13365, metadata !DIExpression()), !dbg !13369
  ret i1 %6, !dbg !13418
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13423, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 %1, metadata !13424, metadata !DIExpression()), !dbg !13426
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13427
  call void @llvm.dbg.value(metadata i1 %3, metadata !13425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13426
  br i1 %3, label %4, label %12, !dbg !13428

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13430
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13431
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13431
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13431
  %9 = load i8, i8* %8, align 1, !dbg !13431
  %10 = icmp eq i8 %9, 0, !dbg !13432
  br i1 %10, label %11, label %12, !dbg !13433

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13434
  br label %12, !dbg !13436

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13438 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13440, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13444
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13446, !srcloc !12243
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13446
  call void @llvm.dbg.value(metadata i32 %2, metadata !12240, metadata !DIExpression()) #23, !dbg !13448
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %2, metadata !12234, metadata !DIExpression()) #23, !dbg !13444
  call void @llvm.dbg.value(metadata i32 %2, metadata !13442, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.value(metadata i32 undef, metadata !13440, metadata !DIExpression()), !dbg !13443
  tail call fastcc void @z_sched_lock() #25, !dbg !13449
  call void @llvm.dbg.value(metadata i32 %2, metadata !12255, metadata !DIExpression()) #23, !dbg !13452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13452
  call void @llvm.dbg.value(metadata i32 %2, metadata !12263, metadata !DIExpression()) #23, !dbg !13454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13456, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13440, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.value(metadata i32 undef, metadata !13440, metadata !DIExpression()), !dbg !13443
  ret void, !dbg !13457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13458 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13459
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13460
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13460
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13460
  %5 = load i8, i8* %4, align 1, !dbg !13461
  %6 = add i8 %5, -1, !dbg !13461
  store i8 %6, i8* %4, align 1, !dbg !13461
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13462, !srcloc !13464
  ret void, !dbg !13465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13466 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13468, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13472
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13474, !srcloc !12243
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %2, metadata !12240, metadata !DIExpression()) #23, !dbg !13476
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %2, metadata !12234, metadata !DIExpression()) #23, !dbg !13472
  call void @llvm.dbg.value(metadata i32 %2, metadata !13470, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13468, metadata !DIExpression()), !dbg !13471
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13477
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13480
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13480
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13480
  %7 = load i8, i8* %6, align 1, !dbg !13481
  %8 = add i8 %7, 1, !dbg !13481
  store i8 %8, i8* %6, align 1, !dbg !13481
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !13482
  call void @llvm.dbg.value(metadata i32 %2, metadata !12255, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %2, metadata !12263, metadata !DIExpression()) #23, !dbg !13485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13487, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 1, metadata !13468, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata i32 undef, metadata !13468, metadata !DIExpression()), !dbg !13471
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13488
  ret void, !dbg !13489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !13490 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13491
  ret %struct.k_thread* %1, !dbg !13492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !13493 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13497, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13498, metadata !DIExpression()), !dbg !13502
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13503
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13499, metadata !DIExpression()), !dbg !13502
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13504
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13500, metadata !DIExpression()), !dbg !13502
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %5, metadata !13501, metadata !DIExpression()), !dbg !13502
  %6 = icmp sgt i32 %5, 0, !dbg !13506
  br i1 %6, label %17, label %7, !dbg !13508

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13509
  br i1 %8, label %17, label %9, !dbg !13511

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13512
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13512
  %12 = load i32, i32* %11, align 8, !dbg !13512
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13514
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13514
  %15 = load i32, i32* %14, align 8, !dbg !13514
  %16 = icmp ult i32 %12, %15, !dbg !13515
  br label %17, !dbg !13516

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13517
  ret i1 %18, !dbg !13518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13519 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13536, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13537, metadata !DIExpression()), !dbg !13551
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13552
  %5 = load i32, i32* %4, align 4, !dbg !13553
  %6 = add nsw i32 %5, 1, !dbg !13553
  store i32 %6, i32* %4, align 4, !dbg !13553
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13554
  store i32 %5, i32* %7, align 8, !dbg !13555
  %8 = load i32, i32* %4, align 4, !dbg !13556
  %9 = icmp eq i32 %8, 0, !dbg !13557
  br i1 %9, label %10, label %32, !dbg !13558

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13559
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13559
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13539, metadata !DIExpression()), !dbg !13559
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13559
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13559
  %14 = load i32, i32* %13, align 4, !dbg !13559
  %15 = shl i32 %14, 2, !dbg !13559
  %16 = alloca i8, i32 %15, align 8, !dbg !13559
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13559
  store i8* %16, i8** %17, align 4, !dbg !13559
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13559
  %19 = alloca i8, i32 %14, align 8, !dbg !13559
  store i8* %19, i8** %18, align 4, !dbg !13559
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13559
  store i32 -1, i32* %20, align 4, !dbg !13559
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13560
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13548, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13538, metadata !DIExpression()), !dbg !13551
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13562
  br i1 %22, label %23, label %24, !dbg !13559

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13562
  br label %32, !dbg !13563

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13538, metadata !DIExpression()), !dbg !13551
  %26 = load i32, i32* %4, align 4, !dbg !13564
  %27 = add nsw i32 %26, 1, !dbg !13564
  store i32 %27, i32* %4, align 4, !dbg !13564
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13566
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13566
  store i32 %26, i32* %29, align 8, !dbg !13567
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13560
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13548, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13538, metadata !DIExpression()), !dbg !13551
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13562
  br i1 %31, label %23, label %24, !dbg !13559, !llvm.loop !13568

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13570
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13571
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !13572
  ret void, !dbg !13573
}

; Function Attrs: optsize
declare !dbg !13574 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13579 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13582 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13584, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13585, metadata !DIExpression()), !dbg !13586
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13587
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13588
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !13589
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13590
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13590
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13592
  br i1 %7, label %8, label %10, !dbg !13593

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13594
  store i32 0, i32* %9, align 4, !dbg !13596
  br label %10, !dbg !13597

10:                                               ; preds = %8, %2
  ret void, !dbg !13598
}

; Function Attrs: optsize
declare !dbg !13599 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13600 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13604, metadata !DIExpression()), !dbg !13607
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13605, metadata !DIExpression()), !dbg !13607
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13608
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !13609
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13606, metadata !DIExpression()), !dbg !13607
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13605, metadata !DIExpression()), !dbg !13607
  ret %struct.k_thread* %4, !dbg !13610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13615, metadata !DIExpression()), !dbg !13616
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !13617
  ret %struct.rbnode* %2, !dbg !13618
}

; Function Attrs: optsize
declare !dbg !13619 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13622 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13634, metadata !DIExpression()), !dbg !13638
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13639
  %3 = load i32, i32* %2, align 4, !dbg !13639
  %4 = icmp eq i32 %3, 0, !dbg !13641
  br i1 %4, label %10, label %5, !dbg !13642

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13635, metadata !DIExpression()), !dbg !13638
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13643, !range !5896
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13644
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13636, metadata !DIExpression()), !dbg !13638
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13645
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13637, metadata !DIExpression()), !dbg !13638
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13635, metadata !DIExpression()), !dbg !13638
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13638
  ret %struct.k_thread* %11, !dbg !13646
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13647 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13651, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.value(metadata i32 0, metadata !13652, metadata !DIExpression()), !dbg !13654
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13655
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13653, metadata !DIExpression()), !dbg !13654
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13656
  br i1 %3, label %8, label %4, !dbg !13657

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13658
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13660
  call void @llvm.dbg.value(metadata i32 1, metadata !13652, metadata !DIExpression()), !dbg !13654
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13655
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13653, metadata !DIExpression()), !dbg !13654
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13656
  br i1 %7, label %8, label %4, !dbg !13657, !llvm.loop !13661

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13654
  ret i32 %9, !dbg !13663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13664 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13668
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13669
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13670
  ret %struct.k_thread* %4, !dbg !13671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #3 !dbg !13672 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13681, metadata !DIExpression()), !dbg !13682
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13683
  tail call fastcc void @sys_dlist_init.140(%struct._dnode* noundef nonnull %2) #25, !dbg !13684
  ret void, !dbg !13685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.140(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !13686 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13690, metadata !DIExpression()), !dbg !13691
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13692
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13693
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13694
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13695
  ret void, !dbg !13696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13697 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13698
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13699
  ret void, !dbg !13700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()), !dbg !13707
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13708
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13708
  %4 = load i8, i8* %3, align 2, !dbg !13708
  %5 = sext i8 %4 to i32, !dbg !13709
  ret i32 %5, !dbg !13710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13711 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13715, metadata !DIExpression()), !dbg !13718
  call void @llvm.dbg.value(metadata i32 %1, metadata !13716, metadata !DIExpression()), !dbg !13718
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()), !dbg !13718
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13719
  ret void, !dbg !13720
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13721 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13722
  br i1 %1, label %8, label %2, !dbg !13723

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13724
  br i1 %3, label %8, label %4, !dbg !13725

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13726
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13727
  %7 = xor i1 %6, true, !dbg !13725
  br label %8, !dbg !13725

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13729 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13730, !range !5316
  %2 = icmp eq i8 %1, 0, !dbg !13730
  ret i1 %2, !dbg !13731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13732 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13735
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13737, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !13739
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13739
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !13735
  call void @llvm.dbg.value(metadata i32 undef, metadata !13734, metadata !DIExpression()), !dbg !13740
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13741
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12397, metadata !DIExpression()) #23, !dbg !13744
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13746
  %4 = load i8, i8* %3, align 1, !dbg !13747
  %5 = and i8 %4, 127, !dbg !13747
  store i8 %5, i8* %3, align 1, !dbg !13747
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12405, metadata !DIExpression()) #23, !dbg !13748
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13750
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12414, metadata !DIExpression()) #23, !dbg !13752
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13754
  %8 = load i8, i8* %7, align 1, !dbg !13755
  %9 = or i8 %8, -128, !dbg !13755
  store i8 %9, i8* %7, align 1, !dbg !13755
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12421, metadata !DIExpression()) #23, !dbg !13756
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12428, metadata !DIExpression()) #23, !dbg !13758
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12434, metadata !DIExpression()) #23, !dbg !13758
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13760
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12435, metadata !DIExpression()) #23, !dbg !13758
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13761
  br i1 %11, label %22, label %12, !dbg !13760

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12435, metadata !DIExpression()) #23, !dbg !13758
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13762
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12435, metadata !DIExpression()) #23, !dbg !13758
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13763
  %16 = icmp sgt i32 %15, 0, !dbg !13764
  br i1 %16, label %17, label %19, !dbg !13765

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13766
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13767
  br label %24, !dbg !13768

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13761
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12435, metadata !DIExpression()) #23, !dbg !13758
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13761
  br i1 %21, label %22, label %12, !dbg !13760, !llvm.loop !13769

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13771
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13772
  br label %24, !dbg !13773

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %25, metadata !12240, metadata !DIExpression()) #23, !dbg !13739
  call void @llvm.dbg.value(metadata i32 %25, metadata !12234, metadata !DIExpression()) #23, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %25, metadata !13734, metadata !DIExpression()), !dbg !13740
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13774
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()) #23, !dbg !13775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12844, metadata !DIExpression()) #23, !dbg !13775
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13777
  ret void, !dbg !13778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13779 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13783, metadata !DIExpression()), !dbg !13786
  %3 = icmp eq i64 %2, -1, !dbg !13787
  br i1 %3, label %4, label %6, !dbg !13789

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13790
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13792
  br label %11, !dbg !13793

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13784, metadata !DIExpression()), !dbg !13786
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13794
  %8 = sext i32 %7 to i64, !dbg !13794
  call void @llvm.dbg.value(metadata i64 %8, metadata !13784, metadata !DIExpression()), !dbg !13786
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13795
  %10 = trunc i64 %9 to i32, !dbg !13795
  call void @llvm.dbg.value(metadata i32 %10, metadata !13785, metadata !DIExpression()), !dbg !13786
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13786
  ret i32 %12, !dbg !13796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13801, metadata !DIExpression()), !dbg !13802
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13803, !srcloc !13805
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13806
  ret void, !dbg !13807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13808 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13812, metadata !DIExpression()), !dbg !13816
  %2 = icmp eq i64 %0, 0, !dbg !13817
  br i1 %2, label %3, label %4, !dbg !13819

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13820
  br label %29, !dbg !13822

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13814, metadata !DIExpression()), !dbg !13816
  %5 = icmp sgt i64 %0, -3, !dbg !13823
  br i1 %5, label %6, label %10, !dbg !13825

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13826
  %8 = trunc i64 %0 to i32, !dbg !13828
  %9 = add i32 %7, %8, !dbg !13828
  call void @llvm.dbg.value(metadata i32 %9, metadata !13813, metadata !DIExpression()), !dbg !13816
  br label %13, !dbg !13829

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13830
  %12 = sub i32 -2, %11, !dbg !13830
  call void @llvm.dbg.value(metadata i32 %12, metadata !13813, metadata !DIExpression()), !dbg !13816
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13832
  call void @llvm.dbg.value(metadata i32 %14, metadata !13813, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13833
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13835, !srcloc !12243
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %16, metadata !12240, metadata !DIExpression()) #23, !dbg !13837
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %16, metadata !12234, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %16, metadata !13815, metadata !DIExpression()), !dbg !13816
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13838
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13839
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13840
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13841
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13842
  tail call fastcc void @z_add_thread_timeout.133(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13842
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13843
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13844
  call void @llvm.dbg.value(metadata i32 %16, metadata !12839, metadata !DIExpression()) #23, !dbg !13845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12844, metadata !DIExpression()) #23, !dbg !13845
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13847
  %22 = zext i32 %14 to i64, !dbg !13848
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13849
  %24 = zext i32 %23 to i64, !dbg !13849
  %25 = sub nsw i64 %22, %24, !dbg !13850
  call void @llvm.dbg.value(metadata i64 %25, metadata !13812, metadata !DIExpression()), !dbg !13816
  %26 = icmp sgt i64 %25, 0, !dbg !13851
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13851
  %28 = trunc i64 %27 to i32, !dbg !13851
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13816
  ret i32 %30, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13853 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13855, metadata !DIExpression()), !dbg !13856
  call void @llvm.dbg.value(metadata i64 %0, metadata !12275, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 10000, metadata !12278, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i32 1000, metadata !12279, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i8 1, metadata !12280, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i1 false, metadata !12281, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i1 false, metadata !12282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i8 0, metadata !12283, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i1 false, metadata !12284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i1 true, metadata !12285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13857
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.value(metadata i64 %0, metadata !12275, metadata !DIExpression()), !dbg !13857
  %2 = udiv i64 %0, 10, !dbg !13859
  ret i64 %2, !dbg !13863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13864 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13865, !srcloc !13867
  tail call void @z_impl_k_yield() #25, !dbg !13868
  ret void, !dbg !13869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13874, metadata !DIExpression()), !dbg !13876
  %2 = sext i32 %0 to i64, !dbg !13877
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13878
  call void @llvm.dbg.value(metadata i64 %3, metadata !13875, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13876
  %4 = shl i64 %3, 32, !dbg !13879
  %5 = ashr exact i64 %4, 32, !dbg !13879
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13880
  call void @llvm.dbg.value(metadata i32 %6, metadata !13875, metadata !DIExpression()), !dbg !13876
  %7 = sext i32 %6 to i64, !dbg !13881
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13882
  %9 = trunc i64 %8 to i32, !dbg !13882
  ret i32 %9, !dbg !13883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13884 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13886, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata i64 %0, metadata !12275, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12278, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i32 10000, metadata !12279, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i8 1, metadata !12280, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i1 false, metadata !12281, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13888
  call void @llvm.dbg.value(metadata i1 true, metadata !12282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13888
  call void @llvm.dbg.value(metadata i8 0, metadata !12283, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i1 false, metadata !12284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13888
  call void @llvm.dbg.value(metadata i1 true, metadata !12285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13888
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !13888
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !13888
  %2 = add i64 %0, 99, !dbg !13890
  call void @llvm.dbg.value(metadata i64 %2, metadata !12275, metadata !DIExpression()), !dbg !13888
  %3 = udiv i64 %2, 100, !dbg !13891
  ret i64 %3, !dbg !13892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13893 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13895, metadata !DIExpression()), !dbg !13896
  call void @llvm.dbg.value(metadata i64 %0, metadata !12275, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32 10000, metadata !12278, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12279, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i8 1, metadata !12280, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i1 false, metadata !12281, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13897
  call void @llvm.dbg.value(metadata i1 false, metadata !12282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13897
  call void @llvm.dbg.value(metadata i8 0, metadata !12283, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i1 true, metadata !12284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13897
  call void @llvm.dbg.value(metadata i1 false, metadata !12285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13897
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !13897
  call void @llvm.dbg.value(metadata i64 0, metadata !12286, metadata !DIExpression()), !dbg !13897
  %2 = mul i64 %0, 100, !dbg !13899
  ret i64 %2, !dbg !13901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13904, metadata !DIExpression()), !dbg !13905
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13906
  br i1 %2, label %14, label %3, !dbg !13908

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13909
  %5 = icmp slt i32 %4, 0, !dbg !13911
  br i1 %5, label %6, label %10, !dbg !13912

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13913
  %8 = load i8, i8* %7, align 1, !dbg !13913
  %9 = icmp eq i8 %8, 16, !dbg !13916
  br i1 %9, label %10, label %14, !dbg !13917

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13918
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13919
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13920, !srcloc !12879
  call void @llvm.dbg.value(metadata i32 %11, metadata !12875, metadata !DIExpression()) #23, !dbg !13924
  %12 = icmp eq i32 %11, 0, !dbg !13925
  br i1 %12, label %13, label %14, !dbg !13926

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13927
  br label %14, !dbg !13929

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13933, metadata !DIExpression()), !dbg !13934
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13935
  %3 = load i8, i8* %2, align 1, !dbg !13935
  %4 = and i8 %3, 2, !dbg !13936
  %5 = icmp ne i8 %4, 0, !dbg !13937
  ret i1 %5, !dbg !13938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13939 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13944
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13943, metadata !DIExpression()), !dbg !13945
  ret %struct.k_thread* %1, !dbg !13946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13947 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13948, !srcloc !12879
  call void @llvm.dbg.value(metadata i32 %1, metadata !12875, metadata !DIExpression()) #23, !dbg !13951
  %2 = icmp eq i32 %1, 0, !dbg !13952
  br i1 %2, label %3, label %8, !dbg !13953

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13954
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13955
  %6 = icmp ne i32 %5, 0, !dbg !13953
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13959, metadata !DIExpression()), !dbg !13961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !13962
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13964, !srcloc !12243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13964
  call void @llvm.dbg.value(metadata i32 %3, metadata !12240, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata i32 %3, metadata !12234, metadata !DIExpression()) #23, !dbg !13962
  call void @llvm.dbg.value(metadata i32 %3, metadata !13960, metadata !DIExpression()), !dbg !13961
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13967
  %5 = load i8, i8* %4, align 4, !dbg !13967
  %6 = and i8 %5, 1, !dbg !13969
  %7 = icmp eq i8 %6, 0, !dbg !13970
  br i1 %7, label %9, label %8, !dbg !13971

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !13972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13972
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !13975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13977, !srcloc !12269
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13978, !srcloc !13980
  br label %24, !dbg !13981

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13982
  %11 = load i8, i8* %10, align 1, !dbg !13982
  %12 = and i8 %11, 8, !dbg !13984
  %13 = icmp eq i8 %12, 0, !dbg !13985
  br i1 %13, label %15, label %14, !dbg !13986

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !13987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !13987
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !13990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13992, !srcloc !12269
  br label %24, !dbg !13993

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13994
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13995
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13997
  br i1 %17, label %18, label %23, !dbg !13998

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13999, !srcloc !12879
  call void @llvm.dbg.value(metadata i32 %19, metadata !12875, metadata !DIExpression()) #23, !dbg !14002
  %20 = icmp eq i32 %19, 0, !dbg !14003
  br i1 %20, label %21, label %23, !dbg !14004

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12839, metadata !DIExpression()) #23, !dbg !14005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12844, metadata !DIExpression()) #23, !dbg !14005
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14008
  br label %23, !dbg !14009

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12255, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %3, metadata !12263, metadata !DIExpression()) #23, !dbg !14012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14014, !srcloc !12269
  br label %24, !dbg !14015

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14016 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14018, metadata !DIExpression()), !dbg !14019
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14020
  %3 = load i8, i8* %2, align 1, !dbg !14020
  %4 = and i8 %3, 8, !dbg !14022
  %5 = icmp eq i8 %4, 0, !dbg !14023
  br i1 %5, label %6, label %20, !dbg !14024

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14025
  %8 = or i8 %7, 8, !dbg !14025
  store i8 %8, i8* %2, align 1, !dbg !14025
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !14027
  br i1 %9, label %10, label %12, !dbg !14029

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12397, metadata !DIExpression()) #23, !dbg !14030
  %11 = and i8 %8, 95, !dbg !14033
  store i8 %11, i8* %2, align 1, !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12405, metadata !DIExpression()) #23, !dbg !14034
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !14036
  br label %12, !dbg !14037

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14038
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14038
  %15 = icmp eq %union.anon* %14, null, !dbg !14040
  br i1 %15, label %17, label %16, !dbg !14041

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !14042
  br label %17, !dbg !14044

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !14045
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14046
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !14047
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !14048
  br label %20, !dbg !14049

20:                                               ; preds = %17, %1
  ret void, !dbg !14050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14051 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14055, metadata !DIExpression()), !dbg !14057
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14056, metadata !DIExpression()), !dbg !14057
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14059
  br i1 %3, label %10, label %4, !dbg !14060

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14061
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14063
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14064, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14072
  store i32 0, i32* %7, align 4, !dbg !14073
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !14074
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14056, metadata !DIExpression()), !dbg !14057
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14059
  br i1 %9, label %10, label %4, !dbg !14060, !llvm.loop !14075

10:                                               ; preds = %4, %1
  ret void, !dbg !14077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14078 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14083, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14082, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !14087
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14089, !srcloc !12243
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %4, metadata !12240, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %4, metadata !12234, metadata !DIExpression()) #23, !dbg !14087
  call void @llvm.dbg.value(metadata i32 %4, metadata !14084, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 0, metadata !14085, metadata !DIExpression()), !dbg !14086
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14092
  %6 = load i8, i8* %5, align 1, !dbg !14092
  %7 = and i8 %6, 8, !dbg !14094
  %8 = icmp eq i8 %7, 0, !dbg !14095
  br i1 %8, label %9, label %24, !dbg !14096

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14083, metadata !DIExpression()), !dbg !14086
  %11 = icmp eq i64 %10, 0, !dbg !14097
  br i1 %11, label %24, label %12, !dbg !14099

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14100
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14102
  br i1 %14, label %24, label %15, !dbg !14103

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14104
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14104
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14105
  %19 = icmp eq %union.anon* %17, %18, !dbg !14106
  br i1 %19, label %24, label %20, !dbg !14107

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14108
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !14110
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14111
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !14112
  call void @llvm.dbg.value(metadata i32 %4, metadata !12839, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12844, metadata !DIExpression()) #23, !dbg !14113
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %23, metadata !14085, metadata !DIExpression()), !dbg !14086
  br label %26, !dbg !14116

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14117
  call void @llvm.dbg.value(metadata i32 %25, metadata !14085, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 %4, metadata !12255, metadata !DIExpression()) #23, !dbg !14118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !14118
  call void @llvm.dbg.value(metadata i32 %4, metadata !12263, metadata !DIExpression()) #23, !dbg !14120
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14122, !srcloc !12269
  br label %26, !dbg !14123

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14086
  ret i32 %27, !dbg !14124
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14125 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14129, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 %1, metadata !14130, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i8* %2, metadata !14131, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i8 0, metadata !14133, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 0, metadata !14134, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12228, metadata !DIExpression()) #23, !dbg !14139
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14141, !srcloc !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !12240, metadata !DIExpression()) #23, !dbg !14143
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !14143
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()) #23, !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14136, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.value(metadata i8 poison, metadata !14133, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14134, metadata !DIExpression()), !dbg !14138
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !14144
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14132, metadata !DIExpression()), !dbg !14137
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14147
  br i1 %7, label %12, label %8, !dbg !14149

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14150, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %1, metadata !14156, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i8* %2, metadata !14157, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14064, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i32 %1, metadata !14069, metadata !DIExpression()), !dbg !14161
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14163
  store i32 %1, i32* %9, align 4, !dbg !14164
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14165
  store i8* %2, i8** %10, align 4, !dbg !14166
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14167
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14168
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !14169
  call void @llvm.dbg.value(metadata i8 1, metadata !14133, metadata !DIExpression()), !dbg !14137
  br label %12, !dbg !14170

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14141
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14141
  call void @llvm.dbg.value(metadata i32 %14, metadata !12240, metadata !DIExpression()) #23, !dbg !14143
  call void @llvm.dbg.value(metadata i32 %14, metadata !12234, metadata !DIExpression()) #23, !dbg !14139
  call void @llvm.dbg.value(metadata i32 %14, metadata !14136, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.value(metadata i8 poison, metadata !14133, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !12255, metadata !DIExpression()) #23, !dbg !14171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12260, metadata !DIExpression()) #23, !dbg !14171
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()) #23, !dbg !14173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14175, !srcloc !12269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14134, metadata !DIExpression()), !dbg !14138
  ret i1 %13, !dbg !14176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14177 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14183, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i64 undef, metadata !14185, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14182, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14184, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i8** %4, metadata !14186, metadata !DIExpression()), !dbg !14188
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14189
  call void @llvm.dbg.value(metadata i32 %6, metadata !14187, metadata !DIExpression()), !dbg !14188
  %7 = icmp eq i8** %4, null, !dbg !14190
  br i1 %7, label %12, label %8, !dbg !14192

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14193
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14195
  %11 = load i8*, i8** %10, align 4, !dbg !14195
  store i8* %11, i8** %4, align 4, !dbg !14196
  br label %12, !dbg !14197

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14199 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !14201
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !14202
  ret void, !dbg !14203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14204 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14214, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14212, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14213, metadata !DIExpression()), !dbg !14231
  %5 = icmp eq i64 %4, -1, !dbg !14232
  br i1 %5, label %55, label %6, !dbg !14234

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14235
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14236
  call void @llvm.dbg.value(metadata i32 0, metadata !14215, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14245
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14247, !srcloc !14253
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14247
  call void @llvm.dbg.value(metadata i32 %9, metadata !14250, metadata !DIExpression()) #23, !dbg !14254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14254
  call void @llvm.dbg.value(metadata i32 %9, metadata !14244, metadata !DIExpression()) #23, !dbg !14245
  call void @llvm.dbg.value(metadata i32 %9, metadata !14221, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14215, metadata !DIExpression()), !dbg !14237
  %10 = icmp slt i64 %4, -1, !dbg !14255
  br i1 %10, label %11, label %17, !dbg !14256

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14257
  %13 = add i64 %4, %12, !dbg !14258
  %14 = sub i64 -2, %13, !dbg !14258
  call void @llvm.dbg.value(metadata i64 %14, metadata !14225, metadata !DIExpression()), !dbg !14259
  %15 = icmp sgt i64 %14, 1, !dbg !14260
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14260
  br label %22, !dbg !14261

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14262
  %19 = tail call fastcc i32 @elapsed.151() #25, !dbg !14264
  %20 = sext i32 %19 to i64, !dbg !14264
  %21 = add nsw i64 %18, %20, !dbg !14265
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14266
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14267
  store i64 %23, i64* %24, align 8, !dbg !14268
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !14269
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14222, metadata !DIExpression()), !dbg !14271
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14272
  br i1 %26, label %42, label %27, !dbg !14272

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14273
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14222, metadata !DIExpression()), !dbg !14271
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14277
  %31 = load i64, i64* %30, align 8, !dbg !14277
  %32 = icmp slt i64 %28, %31, !dbg !14278
  br i1 %32, label %33, label %38, !dbg !14279

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14277
  %35 = sub nsw i64 %31, %28, !dbg !14280
  store i64 %35, i64* %34, align 8, !dbg !14280
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14282
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14283
  tail call fastcc void @sys_dlist_insert.152(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !14284
  br label %44, !dbg !14285

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14286
  store i64 %39, i64* %24, align 8, !dbg !14286
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !14287
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14222, metadata !DIExpression()), !dbg !14271
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14272
  br i1 %41, label %42, label %27, !dbg !14272, !llvm.loop !14288

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14290
  tail call fastcc void @sys_dlist_append.153(%struct._dnode* noundef %43) #25, !dbg !14293
  br label %44, !dbg !14294

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !14295
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14296
  br i1 %46, label %47, label %54, !dbg !14297

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !14298
  call void @llvm.dbg.value(metadata i32 %48, metadata !14228, metadata !DIExpression()), !dbg !14299
  %49 = icmp ne i32 %48, 0, !dbg !14300
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14302
  br i1 %52, label %54, label %53, !dbg !14302

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !14303
  br label %54, !dbg !14305

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14306, metadata !DIExpression()) #23, !dbg !14312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14312
  call void @llvm.dbg.value(metadata i32 %9, metadata !14314, metadata !DIExpression()) #23, !dbg !14317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14319, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14215, metadata !DIExpression()), !dbg !14237
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.151() unnamed_addr #1 !dbg !14322 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14325
  %2 = icmp eq i32 %1, 0, !dbg !14326
  br i1 %2, label %3, label %5, !dbg !14325

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !14327
  br label %5, !dbg !14325

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14325
  ret i32 %6, !dbg !14328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !14329 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.156() #25, !dbg !14335
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14333, metadata !DIExpression()), !dbg !14336
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14337
  ret %struct._timeout* %2, !dbg !14338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.152(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14339 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14343, metadata !DIExpression()), !dbg !14347
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14344, metadata !DIExpression()), !dbg !14347
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14348
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14348
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14345, metadata !DIExpression()), !dbg !14347
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14349
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14350
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14351
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14352
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14353
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14354
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14355
  ret void, !dbg !14356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !14357 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14361, metadata !DIExpression()), !dbg !14363
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14364
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.154(%struct._dnode* noundef %2) #25, !dbg !14365
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14362, metadata !DIExpression()), !dbg !14363
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14366
  ret %struct._timeout* %4, !dbg !14367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.153(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14368 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14373, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14374, metadata !DIExpression()), !dbg !14376
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14377
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14375, metadata !DIExpression()), !dbg !14376
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14378
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14379
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14380
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14381
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14382
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14383
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14384
  ret void, !dbg !14385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14386 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !14391
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14388, metadata !DIExpression()), !dbg !14392
  %2 = tail call fastcc i32 @elapsed.151() #25, !dbg !14393
  call void @llvm.dbg.value(metadata i32 %2, metadata !14389, metadata !DIExpression()), !dbg !14392
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14394
  br i1 %3, label %14, label %4, !dbg !14396

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14397
  %6 = load i64, i64* %5, align 8, !dbg !14397
  %7 = sext i32 %2 to i64, !dbg !14398
  %8 = sub nsw i64 %6, %7, !dbg !14399
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14400
  br i1 %9, label %14, label %10, !dbg !14401

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14402
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14402
  %13 = trunc i64 %12 to i32, !dbg !14402
  call void @llvm.dbg.value(metadata i32 %13, metadata !14390, metadata !DIExpression()), !dbg !14392
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14404
  call void @llvm.dbg.value(metadata i32 %15, metadata !14390, metadata !DIExpression()), !dbg !14392
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14405
  %17 = icmp ne i32 %16, 0, !dbg !14407
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14408
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14408
  call void @llvm.dbg.value(metadata i32 %20, metadata !14390, metadata !DIExpression()), !dbg !14392
  ret i32 %20, !dbg !14409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.154(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14410 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14414, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14415, metadata !DIExpression()), !dbg !14416
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14417
  br i1 %2, label %5, label %3, !dbg !14418

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.155(%struct._dnode* noundef nonnull %0) #25, !dbg !14419
  br label %5, !dbg !14418

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14418
  ret %struct._dnode* %6, !dbg !14420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.155(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14421 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14423, metadata !DIExpression()), !dbg !14425
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14424, metadata !DIExpression()), !dbg !14425
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14426
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14427
  br i1 %3, label %7, label %4, !dbg !14428

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14429
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14429
  br label %7, !dbg !14428

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14428
  ret %struct._dnode* %8, !dbg !14430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.156() unnamed_addr #4 !dbg !14431 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14435, metadata !DIExpression()), !dbg !14436
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.157() #25, !dbg !14437
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14437
  ret %struct._dnode* %3, !dbg !14438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.157() unnamed_addr #4 !dbg !14439 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14443, metadata !DIExpression()), !dbg !14444
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14445
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14446
  ret i1 %2, !dbg !14447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14448 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14452, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata i32 -22, metadata !14453, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata i32 0, metadata !14454, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14459
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14461, !srcloc !14253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14244, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14456, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 -22, metadata !14453, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14454, metadata !DIExpression()), !dbg !14458
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14453, metadata !DIExpression()), !dbg !14457
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.160(%struct._dnode* noundef %3) #25, !dbg !14464
  br i1 %4, label %5, label %6, !dbg !14468

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !14469
  call void @llvm.dbg.value(metadata i32 0, metadata !14453, metadata !DIExpression()), !dbg !14457
  br label %6, !dbg !14471

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14457
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14461
  call void @llvm.dbg.value(metadata i32 %8, metadata !14250, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 %8, metadata !14244, metadata !DIExpression()) #23, !dbg !14459
  call void @llvm.dbg.value(metadata i32 %8, metadata !14456, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.value(metadata i32 %7, metadata !14453, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14314, metadata !DIExpression()) #23, !dbg !14474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14476, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14454, metadata !DIExpression()), !dbg !14458
  ret i32 %7, !dbg !14477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.160(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14478 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14484, metadata !DIExpression()), !dbg !14485
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14486
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14486
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14487
  ret i1 %4, !dbg !14488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !14489 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14491, metadata !DIExpression()), !dbg !14492
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !14493
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14495
  br i1 %3, label %10, label %4, !dbg !14496

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14497
  %6 = load i64, i64* %5, align 8, !dbg !14497
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14499
  %8 = load i64, i64* %7, align 8, !dbg !14500
  %9 = add nsw i64 %8, %6, !dbg !14500
  store i64 %9, i64* %7, align 8, !dbg !14500
  br label %10, !dbg !14501

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14502
  tail call fastcc void @sys_dlist_remove.161(%struct._dnode* noundef %11) #25, !dbg !14503
  ret void, !dbg !14504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.161(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14505 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14509, metadata !DIExpression()), !dbg !14512
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14513
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14513
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14510, metadata !DIExpression()), !dbg !14512
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14514
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14514
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14511, metadata !DIExpression()), !dbg !14512
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14515
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14516
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14517
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14518
  tail call fastcc void @sys_dnode_init.162(%struct._dnode* noundef %0) #25, !dbg !14519
  ret void, !dbg !14520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.162(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !14521 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14523, metadata !DIExpression()), !dbg !14524
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14525
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14526
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14527
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14528
  ret void, !dbg !14529
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14530 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14536, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i64 0, metadata !14537, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 0, metadata !14538, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14543
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14545, !srcloc !14253
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %3, metadata !14250, metadata !DIExpression()) #23, !dbg !14547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14547
  call void @llvm.dbg.value(metadata i32 %3, metadata !14244, metadata !DIExpression()) #23, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %3, metadata !14540, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i64 0, metadata !14537, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 undef, metadata !14538, metadata !DIExpression()), !dbg !14542
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14548
  call void @llvm.dbg.value(metadata i64 %4, metadata !14537, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #23, !dbg !14551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14551
  call void @llvm.dbg.value(metadata i32 %3, metadata !14314, metadata !DIExpression()) #23, !dbg !14553
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14555, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14538, metadata !DIExpression()), !dbg !14542
  ret i64 %4, !dbg !14556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14557 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14559, metadata !DIExpression()), !dbg !14563
  call void @llvm.dbg.value(metadata i64 0, metadata !14560, metadata !DIExpression()), !dbg !14563
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.163(%struct._timeout* noundef %0) #25, !dbg !14564
  br i1 %2, label %21, label %3, !dbg !14566

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !14567
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14561, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i64 0, metadata !14560, metadata !DIExpression()), !dbg !14563
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14569
  br i1 %5, label %16, label %6, !dbg !14571

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14561, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i64 %8, metadata !14560, metadata !DIExpression()), !dbg !14563
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14572
  %10 = load i64, i64* %9, align 8, !dbg !14572
  %11 = add nsw i64 %10, %8, !dbg !14574
  call void @llvm.dbg.value(metadata i64 %11, metadata !14560, metadata !DIExpression()), !dbg !14563
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14575
  br i1 %12, label %16, label %13, !dbg !14577

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !14578
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14561, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i64 %11, metadata !14560, metadata !DIExpression()), !dbg !14563
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14569
  br i1 %15, label %16, label %6, !dbg !14571, !llvm.loop !14579

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14563
  call void @llvm.dbg.value(metadata i64 %17, metadata !14560, metadata !DIExpression()), !dbg !14563
  %18 = tail call fastcc i32 @elapsed.151() #25, !dbg !14581
  %19 = sext i32 %18 to i64, !dbg !14581
  %20 = sub nsw i64 %17, %19, !dbg !14582
  br label %21, !dbg !14583

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14563
  ret i64 %22, !dbg !14584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.163(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14585 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14589, metadata !DIExpression()), !dbg !14590
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14591
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.160(%struct._dnode* noundef %2) #25, !dbg !14592
  %4 = xor i1 %3, true, !dbg !14593
  ret i1 %4, !dbg !14594
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14595 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14597, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.value(metadata i64 0, metadata !14598, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.value(metadata i32 0, metadata !14599, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14604
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14606, !srcloc !14253
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14606
  call void @llvm.dbg.value(metadata i32 %3, metadata !14250, metadata !DIExpression()) #23, !dbg !14608
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14608
  call void @llvm.dbg.value(metadata i32 %3, metadata !14244, metadata !DIExpression()) #23, !dbg !14604
  call void @llvm.dbg.value(metadata i32 %3, metadata !14601, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.value(metadata i64 0, metadata !14598, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14599, metadata !DIExpression()), !dbg !14603
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14609
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14612
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14598, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14602
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #23, !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %3, metadata !14314, metadata !DIExpression()) #23, !dbg !14615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14617, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14599, metadata !DIExpression()), !dbg !14603
  %6 = add i64 %5, %4, !dbg !14618
  ret i64 %6, !dbg !14619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14620 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14622, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.value(metadata i32 0, metadata !14623, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14628
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14630, !srcloc !14253
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %2, metadata !14250, metadata !DIExpression()) #23, !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %2, metadata !14244, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata i32 %2, metadata !14625, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata i32 -1, metadata !14622, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()), !dbg !14627
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14633
  call void @llvm.dbg.value(metadata i32 %3, metadata !14622, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()) #23, !dbg !14636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14636
  call void @llvm.dbg.value(metadata i32 %2, metadata !14314, metadata !DIExpression()) #23, !dbg !14638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14640, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14623, metadata !DIExpression()), !dbg !14627
  ret i32 %3, !dbg !14641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14642 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14644, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata i1 %1, metadata !14645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14654
  call void @llvm.dbg.value(metadata i32 0, metadata !14646, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14656
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14658, !srcloc !14253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14244, metadata !DIExpression()) #23, !dbg !14656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14646, metadata !DIExpression()), !dbg !14655
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %4, metadata !14649, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.value(metadata i1 undef, metadata !14652, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14662
  %5 = icmp slt i32 %4, 2, !dbg !14663
  call void @llvm.dbg.value(metadata i1 %5, metadata !14653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14662
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14664
  call void @llvm.dbg.value(metadata i1 %6, metadata !14652, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14662
  br i1 %7, label %11, label %8, !dbg !14664

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14666
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14666
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14668
  br label %11, !dbg !14669

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14658
  call void @llvm.dbg.value(metadata i32 %12, metadata !14250, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 %12, metadata !14244, metadata !DIExpression()) #23, !dbg !14656
  call void @llvm.dbg.value(metadata i32 %12, metadata !14648, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata i32 undef, metadata !14314, metadata !DIExpression()) #23, !dbg !14672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14674, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 1, metadata !14646, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14646, metadata !DIExpression()), !dbg !14655
  ret void, !dbg !14675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14680, metadata !DIExpression()), !dbg !14685
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14687
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14689, !srcloc !14253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !14244, metadata !DIExpression()) #23, !dbg !14687
  call void @llvm.dbg.value(metadata i32 undef, metadata !14681, metadata !DIExpression()), !dbg !14685
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14681, metadata !DIExpression()), !dbg !14685
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14692
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14693
  br i1 %4, label %28, label %5, !dbg !14694

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14695
  %10 = load i64, i64* %9, align 8, !dbg !14695
  %11 = sext i32 %8 to i64, !dbg !14696
  %12 = icmp sgt i64 %10, %11, !dbg !14697
  br i1 %12, label %26, label %13, !dbg !14698

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14685
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14682, metadata !DIExpression()), !dbg !14699
  %15 = trunc i64 %10 to i32, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %15, metadata !14684, metadata !DIExpression()), !dbg !14699
  %16 = sext i32 %15 to i64, !dbg !14701
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14702
  %18 = add i64 %17, %16, !dbg !14702
  store i64 %18, i64* @curr_tick, align 8, !dbg !14702
  store i64 0, i64* %9, align 8, !dbg !14703
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %14, metadata !14306, metadata !DIExpression()) #23, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14705
  call void @llvm.dbg.value(metadata i32 %14, metadata !14314, metadata !DIExpression()) #23, !dbg !14707
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14709, !srcloc !14320
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14710
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14710
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14712
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14714, !srcloc !14253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14250, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14244, metadata !DIExpression()) #23, !dbg !14712
  call void @llvm.dbg.value(metadata i32 undef, metadata !14681, metadata !DIExpression()), !dbg !14685
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14717
  %23 = sub nsw i32 %22, %15, !dbg !14717
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14681, metadata !DIExpression()), !dbg !14685
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14692
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14693
  br i1 %25, label %28, label %5, !dbg !14694, !llvm.loop !14718

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14720
  store i64 %27, i64* %9, align 8, !dbg !14720
  br label %32, !dbg !14723

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14685
  %31 = sext i32 %30 to i64, !dbg !14724
  br label %32, !dbg !14724

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14724
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14685
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14725
  %37 = add i64 %36, %33, !dbg !14725
  store i64 %37, i64* @curr_tick, align 8, !dbg !14725
  store i32 0, i32* @announce_remaining, align 4, !dbg !14726
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14727
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14728
  call void @llvm.dbg.value(metadata i32 %35, metadata !14306, metadata !DIExpression()) #23, !dbg !14729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14729
  call void @llvm.dbg.value(metadata i32 %35, metadata !14314, metadata !DIExpression()) #23, !dbg !14731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14733, !srcloc !14320
  ret void, !dbg !14734
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14735 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14739, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i32 0, metadata !14740, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14745
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14747, !srcloc !14253
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %2, metadata !14250, metadata !DIExpression()) #23, !dbg !14749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14251, metadata !DIExpression()) #23, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %2, metadata !14244, metadata !DIExpression()) #23, !dbg !14745
  call void @llvm.dbg.value(metadata i32 %2, metadata !14742, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.value(metadata i64 0, metadata !14739, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i32 undef, metadata !14740, metadata !DIExpression()), !dbg !14744
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14750
  %4 = tail call fastcc i32 @elapsed.151() #25, !dbg !14753
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14739, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14743
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()) #23, !dbg !14754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14311, metadata !DIExpression()) #23, !dbg !14754
  call void @llvm.dbg.value(metadata i32 %2, metadata !14314, metadata !DIExpression()) #23, !dbg !14756
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14758, !srcloc !14320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14740, metadata !DIExpression()), !dbg !14744
  %5 = sext i32 %4 to i64, !dbg !14753
  %6 = add i64 %3, %5, !dbg !14759
  ret i64 %6, !dbg !14760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14761 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14762
  %2 = trunc i64 %1 to i32, !dbg !14763
  ret i32 %2, !dbg !14764
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14765 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14766
  ret i64 %1, !dbg !14767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14770, metadata !DIExpression()), !dbg !14777
  %2 = icmp eq i32 %0, 0, !dbg !14778
  br i1 %2, label %10, label %3, !dbg !14780

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14781
  call void @llvm.dbg.value(metadata i32 %4, metadata !14771, metadata !DIExpression()), !dbg !14777
  %5 = mul i32 %0, 84, !dbg !14782
  call void @llvm.dbg.value(metadata i32 %5, metadata !14772, metadata !DIExpression()), !dbg !14777
  br label %6, !dbg !14783

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14784
  call void @llvm.dbg.value(metadata i32 %7, metadata !14773, metadata !DIExpression()), !dbg !14785
  %8 = sub i32 %7, %4, !dbg !14786
  %9 = icmp ult i32 %8, %5, !dbg !14788
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14790 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14791
  ret i32 %1, !dbg !14792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14793 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14795
  ret i32 %1, !dbg !14796
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14797 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14801, metadata !DIExpression()), !dbg !14803
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14804

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14805
  br label %14, !dbg !14809

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14802, metadata !DIExpression()), !dbg !14803
  %6 = icmp slt i64 %2, -1, !dbg !14810
  br i1 %6, label %7, label %9, !dbg !14813

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14814
  br label %14, !dbg !14815

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14817
  %11 = icmp ugt i64 %2, 1, !dbg !14818
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14818
  %13 = add nsw i64 %10, %12, !dbg !14819
  br label %14, !dbg !14820

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14821
  ret i64 %15, !dbg !14822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14823 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.172, i32 0, i32 0)) #24, !dbg !14825
  ret void, !dbg !14826
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!174, !2, !2352, !27, !109, !2354, !2356, !2394, !118, !217, !324, !2396, !2407, !2453, !2455, !2483, !2511, !2554, !2626, !2671, !353, !507, !2699, !543, !553, !578, !777, !2704, !905, !971, !1273, !1552, !2745, !1667, !1757, !2747, !2810, !2877, !1809, !2880, !1816, !2180, !2898, !2200, !2900, !2315, !2903}
!llvm.ident = !{!2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905, !2905}
!llvm.module.flags = !{!2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "backup_value", scope: !27, file: !105, line: 11, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/boards/stm32/backup_sram/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/boards/stm32/backup_sram/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(name: "_char_out", scope: !109, file: !112, line: 54, type: !113, isLocal: false, isDefinition: true)
!109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !110, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!110 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!111 = !{!107}
!112 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 32)
!114 = !DISubroutineType(types: !115)
!115 = !{!103, !103}
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !118, file: !135, line: 56, type: !136, isLocal: true, isDefinition: true, align: 32)
!118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !120, globals: !134, splitDebugInlining: false, nameTableKind: None)
!119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!120 = !{!121}
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !123, line: 407, baseType: !124)
!123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 398, size: 224, elements: !125)
!125 = !{!126, !128, !129, !130, !131, !132, !133}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !124, file: !123, line: 400, baseType: !127, size: 32)
!127 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !106)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !124, file: !123, line: 401, baseType: !127, size: 32, offset: 32)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !124, file: !123, line: 402, baseType: !127, size: 32, offset: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !124, file: !123, line: 403, baseType: !127, size: 32, offset: 96)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !124, file: !123, line: 404, baseType: !127, size: 32, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !124, file: !123, line: 405, baseType: !127, size: 32, offset: 160)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !124, file: !123, line: 406, baseType: !127, size: 32, offset: 192)
!134 = !{!116}
!135 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !139)
!138 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!139 = !{!140, !171}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !137, file: !138, line: 60, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!142 = !DISubroutineType(types: !143)
!143 = !{!103, !144}
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149, !153, !154, !155, !164, !165}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !146, file: !147, line: 380, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!152 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !146, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !146, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !146, file: !147, line: 386, baseType: !156, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !158)
!158 = !{!159, !162}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !157, file: !147, line: 359, baseType: !160, size: 8)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !161)
!161 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !157, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!163 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !146, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !147, line: 43, baseType: !169)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !170)
!170 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !137, file: !138, line: 65, baseType: !144, size: 32, offset: 32)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !174, file: !179, line: 117, type: !190, isLocal: false, isDefinition: true, align: 16)
!174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !176, splitDebugInlining: false, nameTableKind: None)
!175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!176 = !{!177, !183, !188, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !172}
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !174, file: !179, line: 21, type: !180, isLocal: false, isDefinition: true, align: 16)
!179 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 256, elements: !181)
!181 = !{!182}
!182 = !DISubrange(count: 16)
!183 = !DIGlobalVariableExpression(var: !184, expr: !DIExpression())
!184 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !174, file: !179, line: 26, type: !185, isLocal: false, isDefinition: true, align: 16)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 48, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 3)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !174, file: !179, line: 33, type: !190, isLocal: false, isDefinition: true, align: 16)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 64, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 4)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !174, file: !179, line: 40, type: !190, isLocal: false, isDefinition: true, align: 16)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !174, file: !179, line: 47, type: !190, isLocal: false, isDefinition: true, align: 16)
!197 = !DIGlobalVariableExpression(var: !198, expr: !DIExpression())
!198 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !174, file: !179, line: 54, type: !190, isLocal: false, isDefinition: true, align: 16)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !174, file: !179, line: 61, type: !190, isLocal: false, isDefinition: true, align: 16)
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !174, file: !179, line: 68, type: !190, isLocal: false, isDefinition: true, align: 16)
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !174, file: !179, line: 75, type: !190, isLocal: false, isDefinition: true, align: 16)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !174, file: !179, line: 82, type: !190, isLocal: false, isDefinition: true, align: 16)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !174, file: !179, line: 89, type: !190, isLocal: false, isDefinition: true, align: 16)
!209 = !DIGlobalVariableExpression(var: !210, expr: !DIExpression())
!210 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !174, file: !179, line: 96, type: !190, isLocal: false, isDefinition: true, align: 16)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !174, file: !179, line: 103, type: !190, isLocal: false, isDefinition: true, align: 16)
!213 = !DIGlobalVariableExpression(var: !214, expr: !DIExpression())
!214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !174, file: !179, line: 110, type: !190, isLocal: false, isDefinition: true, align: 16)
!215 = !DIGlobalVariableExpression(var: !216, expr: !DIExpression())
!216 = distinct !DIGlobalVariable(name: "config", scope: !217, file: !295, line: 56, type: !313, isLocal: true, isDefinition: true)
!217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !219, retainedTypes: !227, globals: !292, splitDebugInlining: false, nameTableKind: None)
!218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/stm32_backup_sram.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!219 = !{!220}
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !221, line: 44, baseType: !32, size: 32, elements: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = !{!223, !224, !225, !226}
!223 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!224 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!225 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!226 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!227 = !{!228, !230, !286}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !221, line: 56, baseType: !102)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !221, line: 100, size: 224, elements: !233)
!233 = !{!234, !254, !255, !264, !270, !275, !281}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !232, file: !221, line: 101, baseType: !235, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !221, line: 76, baseType: !236)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !239, !229}
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !242)
!242 = !{!243, !244, !245, !246, !252, !253}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !241, file: !147, line: 380, baseType: !150, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !241, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !241, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !241, file: !147, line: 386, baseType: !247, size: 32, offset: 96)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !249)
!249 = !{!250, !251}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !248, file: !147, line: 359, baseType: !160, size: 8)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !248, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !241, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !241, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !232, file: !221, line: 102, baseType: !235, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !232, file: !221, line: 103, baseType: !256, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !221, line: 83, baseType: !257)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = !DISubroutineType(types: !259)
!259 = !{!103, !239, !229, !260, !102}
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !221, line: 72, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DISubroutineType(types: !263)
!263 = !{null, !239, !229, !102}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !232, file: !221, line: 104, baseType: !265, size: 32, offset: 96)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !221, line: 79, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 32)
!267 = !DISubroutineType(types: !268)
!268 = !{!103, !239, !229, !269}
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !232, file: !221, line: 105, baseType: !271, size: 32, offset: 128)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !221, line: 88, baseType: !272)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 32)
!273 = !DISubroutineType(types: !274)
!274 = !{!220, !239, !229}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !232, file: !221, line: 106, baseType: !276, size: 32, offset: 160)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !221, line: 92, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DISubroutineType(types: !279)
!279 = !{!103, !239, !229, !280}
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !221, line: 64, baseType: !102)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !232, file: !221, line: 107, baseType: !282, size: 32, offset: 192)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !221, line: 96, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!103, !239, !229, !102}
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !123, line: 544, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 540, size: 64, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !288, file: !123, line: 542, baseType: !127, size: 32)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !288, file: !123, line: 543, baseType: !127, size: 32, offset: 32)
!292 = !{!293, !299, !301, !311, !215}
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !217, file: !295, line: 61, type: !296, isLocal: false, isDefinition: true, align: 16)
!295 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/stm32_backup_sram.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 80, elements: !297)
!297 = !{!298}
!298 = !DISubrange(count: 5)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !217, file: !295, line: 61, type: !240, isLocal: false, isDefinition: true, align: 32)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !217, file: !295, line: 61, type: !303, isLocal: true, isDefinition: true, align: 32)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !305)
!305 = !{!306, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !304, file: !138, line: 60, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DISubroutineType(types: !309)
!309 = !{!103, !239}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !304, file: !138, line: 65, baseType: !239, size: 32, offset: 32)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !217, file: !295, line: 61, type: !248, isLocal: true, isDefinition: true, align: 8)
!313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_backup_sram_config", file: !295, line: 17, size: 64, elements: !315)
!315 = !{!316}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !314, file: !295, line: 18, baseType: !317, size: 64)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !318, line: 343, size: 64, elements: !319)
!318 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!319 = !{!320, !321}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !317, file: !318, line: 344, baseType: !106, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !317, file: !318, line: 345, baseType: !106, size: 32, offset: 32)
!322 = !DIGlobalVariableExpression(var: !323, expr: !DIExpression())
!323 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !324, file: !327, line: 71, type: !328, isLocal: true, isDefinition: true, align: 32)
!324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !326, splitDebugInlining: false, nameTableKind: None)
!325 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!326 = !{!322}
!327 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !330)
!330 = !{!331, !350}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !329, file: !138, line: 60, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!333 = !DISubroutineType(types: !334)
!334 = !{!103, !335}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !338)
!338 = !{!339, !340, !341, !342, !348, !349}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !337, file: !147, line: 380, baseType: !150, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !337, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !337, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !337, file: !147, line: 386, baseType: !343, size: 32, offset: 96)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !345)
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !344, file: !147, line: 359, baseType: !160, size: 8)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !344, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !337, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !337, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !329, file: !138, line: 65, baseType: !335, size: 32, offset: 32)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "static_regions", scope: !353, file: !362, line: 62, type: !503, isLocal: true, isDefinition: true)
!353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !355, globals: !358, splitDebugInlining: false, nameTableKind: None)
!354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!355 = !{!356, !103, !106, !102}
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !357, line: 214, baseType: !32)
!357 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !351}
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !361, file: !362, line: 198, type: !489, isLocal: true, isDefinition: true)
!361 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !362, file: !362, line: 175, type: !363, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !484)
!362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DISubroutineType(types: !364)
!364 = !{null, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = !{!369, !438, !451, !452, !453, !454, !460, !479}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !366, file: !367, line: 247, baseType: !370, size: 384)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !371)
!371 = !{!372, !400, !408, !409, !410, !423, !424, !425}
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 60, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 60, size: 64, elements: !374)
!374 = !{!375, !391}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !373, file: !367, line: 61, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !378)
!377 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !379)
!379 = !{!380, !386}
!380 = !DIDerivedType(tag: DW_TAG_member, scope: !378, file: !377, line: 38, baseType: !381, size: 32)
!381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !378, file: !377, line: 38, size: 32, elements: !382)
!382 = !{!383, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !381, file: !377, line: 39, baseType: !384, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !381, file: !377, line: 40, baseType: !384, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, scope: !378, file: !377, line: 42, baseType: !387, size: 32, offset: 32)
!387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !378, file: !377, line: 42, size: 32, elements: !388)
!388 = !{!389, !390}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !387, file: !377, line: 43, baseType: !384, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !387, file: !377, line: 44, baseType: !384, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !373, file: !367, line: 62, baseType: !392, size: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !394)
!393 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!394 = !{!395}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !392, file: !393, line: 50, baseType: !396, size: 64)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 64, elements: !398)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!398 = !{!399}
!399 = !DISubrange(count: 2)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !370, file: !367, line: 68, baseType: !401, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !404)
!403 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !405)
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !404, file: !403, line: 232, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !378)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !370, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !370, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 90, baseType: !411, size: 16, offset: 112)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 90, size: 16, elements: !412)
!412 = !{!413, !420}
!413 = !DIDerivedType(tag: DW_TAG_member, scope: !411, file: !367, line: 91, baseType: !414, size: 16)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !367, line: 91, size: 16, elements: !415)
!415 = !{!416, !419}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !414, file: !367, line: 96, baseType: !417, size: 8)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !418)
!418 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !414, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !411, file: !367, line: 100, baseType: !421, size: 16)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !422)
!422 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !370, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !370, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !370, file: !367, line: 131, baseType: !426, size: 192, offset: 192)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !427)
!427 = !{!428, !429, !435}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !426, file: !403, line: 245, baseType: !376, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !426, file: !403, line: 246, baseType: !430, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !431)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 32)
!432 = !DISubroutineType(types: !433)
!433 = !{null, !434}
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !426, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !437)
!437 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !366, file: !367, line: 250, baseType: !439, size: 288, offset: 384)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !441)
!440 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !{!442, !443, !444, !445, !446, !447, !448, !449, !450}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !439, file: !440, line: 26, baseType: !106, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !439, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !439, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !439, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !439, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !439, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !439, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !439, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !439, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !366, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !366, file: !367, line: 256, baseType: !402, size: 64, offset: 704)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !366, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !366, file: !367, line: 300, baseType: !455, size: 96, offset: 800)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !456)
!456 = !{!457, !458, !459}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !455, file: !367, line: 153, baseType: !22, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !455, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !455, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !366, file: !367, line: 325, baseType: !461, size: 32, offset: 896)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !462, file: !463, line: 5074, baseType: !466, size: 96)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !468)
!467 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!468 = !{!469, !472, !473}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !466, file: !467, line: 57, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !467, line: 57, flags: DIFlagFwdDecl)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !466, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !466, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !462, file: !463, line: 5075, baseType: !402, size: 64, offset: 96)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !462, file: !463, line: 5076, baseType: !476, offset: 160)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!477 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!478 = !{}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !366, file: !367, line: 343, baseType: !480, size: 64, offset: 928)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !481)
!481 = !{!482, !483}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !480, file: !440, line: 63, baseType: !106, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !480, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!484 = !{!485, !486, !487, !488}
!485 = !DILocalVariable(name: "thread", arg: 1, scope: !361, file: !362, line: 175, type: !365)
!486 = !DILocalVariable(name: "region_num", scope: !361, file: !362, line: 200, type: !160)
!487 = !DILocalVariable(name: "guard_start", scope: !361, file: !362, line: 265, type: !22)
!488 = !DILocalVariable(name: "guard_size", scope: !361, file: !362, line: 266, type: !356)
!489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !490, size: 96, elements: !501)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !491, line: 52, size: 96, elements: !492)
!491 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !{!493, !494, !495}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !490, file: !491, line: 53, baseType: !22, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !490, file: !491, line: 54, baseType: !356, size: 32, offset: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !490, file: !491, line: 55, baseType: !496, size: 32, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !497, line: 151, baseType: !498)
!497 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 149, size: 32, elements: !499)
!499 = !{!500}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !498, file: !497, line: 150, baseType: !106, size: 32)
!501 = !{!502}
!502 = !DISubrange(count: 1)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !501)
!504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !507, file: !540, line: 39, type: !160, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !509, globals: !539, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!509 = !{!510, !102, !103, !527, !160}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !512, line: 1226, baseType: !513)
!512 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 1213, size: 352, elements: !514)
!514 = !{!515, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !513, file: !512, line: 1215, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !127)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !513, file: !512, line: 1216, baseType: !127, size: 32, offset: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !513, file: !512, line: 1217, baseType: !127, size: 32, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !513, file: !512, line: 1218, baseType: !127, size: 32, offset: 96)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !513, file: !512, line: 1219, baseType: !127, size: 32, offset: 128)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !513, file: !512, line: 1220, baseType: !127, size: 32, offset: 160)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !513, file: !512, line: 1221, baseType: !127, size: 32, offset: 192)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !513, file: !512, line: 1222, baseType: !127, size: 32, offset: 224)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !513, file: !512, line: 1223, baseType: !127, size: 32, offset: 256)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !513, file: !512, line: 1224, baseType: !127, size: 32, offset: 288)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !513, file: !512, line: 1225, baseType: !127, size: 32, offset: 320)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !530, line: 27, size: 96, elements: !531)
!530 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!531 = !{!532, !533, !534}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !529, file: !530, line: 29, baseType: !106, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !529, file: !530, line: 31, baseType: !150, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !529, file: !530, line: 37, baseType: !535, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !497, line: 146, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !497, line: 141, size: 32, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !536, file: !497, line: 143, baseType: !106, size: 32)
!539 = !{!505}
!540 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !543, file: !550, line: 21, type: !113, isLocal: true, isDefinition: true)
!543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !545, globals: !549, splitDebugInlining: false, nameTableKind: None)
!544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!545 = !{!546, !103, !102}
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !548, line: 22, baseType: !103)
!548 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!549 = !{!541}
!550 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !553, file: !558, line: 13, type: !575, isLocal: true, isDefinition: true)
!553 = distinct !DICompileUnit(language: DW_LANG_C99, file: !554, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !555, splitDebugInlining: false, nameTableKind: None)
!554 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!555 = !{!556, !551}
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "mpu_config", scope: !553, file: !558, line: 37, type: !559, isLocal: false, isDefinition: true)
!558 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !530, line: 41, size: 64, elements: !561)
!561 = !{!562, !563}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !560, file: !530, line: 43, baseType: !106, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !560, file: !530, line: 45, baseType: !564, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !530, line: 27, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !566, file: !530, line: 29, baseType: !106, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !566, file: !530, line: 31, baseType: !150, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !566, file: !530, line: 37, baseType: !571, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !497, line: 146, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !497, line: 141, size: 32, elements: !573)
!573 = !{!574}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !572, file: !497, line: 143, baseType: !106, size: 32)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 192, elements: !398)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !578, file: !691, line: 72, type: !772, isLocal: true, isDefinition: true)
!578 = distinct !DICompileUnit(language: DW_LANG_C99, file: !579, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !580, retainedTypes: !677, globals: !688, splitDebugInlining: false, nameTableKind: None)
!579 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!580 = !{!30, !581}
!581 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !123, line: 65, baseType: !103, size: 32, elements: !582)
!582 = !{!583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676}
!583 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!584 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!585 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!586 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!587 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!588 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!589 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!590 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!591 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!592 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!593 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!594 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!595 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!596 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!597 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!598 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!599 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!600 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!601 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!602 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!603 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!604 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!605 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!606 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!607 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!608 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!609 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!610 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!611 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!612 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!613 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!614 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!615 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!616 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!617 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!618 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!619 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!620 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!621 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!622 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!623 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!624 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!625 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!626 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!627 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!628 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!629 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!630 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!631 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!632 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!633 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!634 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!635 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!636 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!637 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!638 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!639 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!640 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!641 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!642 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!643 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!644 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!645 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!646 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!647 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!648 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!649 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!650 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!651 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!652 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!653 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!654 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!655 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!656 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!657 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!658 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!659 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!660 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!661 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!662 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!663 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!664 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!665 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!666 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!667 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!668 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!669 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!670 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!671 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!672 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!673 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!674 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!675 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!676 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!677 = !{!356, !103, !102, !678}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !123, line: 392, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 384, size: 192, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !680, file: !123, line: 386, baseType: !127, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !680, file: !123, line: 387, baseType: !127, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !680, file: !123, line: 388, baseType: !127, size: 32, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !680, file: !123, line: 389, baseType: !127, size: 32, offset: 96)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !680, file: !123, line: 390, baseType: !127, size: 32, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !680, file: !123, line: 391, baseType: !127, size: 32, offset: 160)
!688 = !{!689, !692, !708, !719, !736, !576, !738, !752, !754, !756, !758, !760, !762, !764, !766, !768, !770}
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !578, file: !691, line: 424, type: !190, isLocal: false, isDefinition: true, align: 16)
!691 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !578, file: !691, line: 424, type: !694, isLocal: false, isDefinition: true, align: 32)
!694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !696)
!696 = !{!697, !698, !699, !700, !706, !707}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !695, file: !147, line: 380, baseType: !150, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !695, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !695, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !695, file: !147, line: 386, baseType: !701, size: 32, offset: 96)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !703)
!703 = !{!704, !705}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !702, file: !147, line: 359, baseType: !160, size: 8)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !702, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !695, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !695, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !578, file: !691, line: 424, type: !710, isLocal: true, isDefinition: true, align: 32)
!710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !712)
!712 = !{!713, !718}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !711, file: !138, line: 60, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DISubroutineType(types: !716)
!716 = !{!103, !717}
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !711, file: !138, line: 65, baseType: !717, size: 32, offset: 32)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "exti_data", scope: !578, file: !691, line: 423, type: !721, isLocal: true, isDefinition: true)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !691, line: 107, size: 1472, elements: !722)
!722 = !{!723}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !721, file: !691, line: 109, baseType: !724, size: 1472)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 1472, elements: !734)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !691, line: 101, size: 64, elements: !726)
!726 = !{!727, !733}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !725, file: !691, line: 102, baseType: !728, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !729, line: 63, baseType: !730)
!729 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!731 = !DISubroutineType(types: !732)
!732 = !{null, !103, !102}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !725, file: !691, line: 103, baseType: !102, size: 32, offset: 32)
!734 = !{!735}
!735 = !DISubrange(count: 23)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !578, file: !691, line: 424, type: !702, isLocal: true, isDefinition: true, align: 8)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !740, file: !691, line: 493, type: !745, isLocal: true, isDefinition: true, align: 32)
!740 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !691, file: !691, line: 460, type: !741, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !743)
!741 = !DISubroutineType(types: !742)
!742 = !{null, !717}
!743 = !{!744}
!744 = !DILocalVariable(name: "dev", arg: 1, scope: !740, file: !691, line: 460, type: !717)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !746)
!746 = !{!747, !749, !750, !751}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !745, file: !10, line: 55, baseType: !748, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !745, file: !10, line: 57, baseType: !748, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !745, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !745, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !740, file: !691, line: 497, type: !745, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !740, file: !691, line: 507, type: !745, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !740, file: !691, line: 512, type: !745, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !740, file: !691, line: 516, type: !745, isLocal: true, isDefinition: true, align: 32)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !740, file: !691, line: 523, type: !745, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !740, file: !691, line: 527, type: !745, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !740, file: !691, line: 581, type: !745, isLocal: true, isDefinition: true, align: 32)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !740, file: !691, line: 586, type: !745, isLocal: true, isDefinition: true, align: 32)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !740, file: !691, line: 591, type: !745, isLocal: true, isDefinition: true, align: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !740, file: !691, line: 595, type: !745, isLocal: true, isDefinition: true, align: 32)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !773, size: 736, elements: !734)
!773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !774)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !123, line: 163, baseType: !581)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !777, file: !833, line: 398, type: !866, isLocal: true, isDefinition: true)
!777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !779, retainedTypes: !785, globals: !830, splitDebugInlining: false, nameTableKind: None)
!778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!779 = !{!780, !30, !220}
!780 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !781, line: 197, baseType: !32, size: 32, elements: !782)
!781 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!782 = !{!783, !784}
!783 = !DIEnumerator(name: "SUCCESS", value: 0)
!784 = !DIEnumerator(name: "ERROR", value: 1)
!785 = !{!102, !103, !106, !786, !825, !269}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 586, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 550, size: 1216, elements: !789)
!789 = !{!790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !788, file: !123, line: 552, baseType: !127, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !788, file: !123, line: 553, baseType: !127, size: 32, offset: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !788, file: !123, line: 554, baseType: !127, size: 32, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !788, file: !123, line: 555, baseType: !127, size: 32, offset: 96)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !788, file: !123, line: 556, baseType: !127, size: 32, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !788, file: !123, line: 557, baseType: !127, size: 32, offset: 160)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !788, file: !123, line: 558, baseType: !127, size: 32, offset: 192)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !788, file: !123, line: 559, baseType: !106, size: 32, offset: 224)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !788, file: !123, line: 560, baseType: !127, size: 32, offset: 256)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !788, file: !123, line: 561, baseType: !127, size: 32, offset: 288)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !788, file: !123, line: 562, baseType: !801, size: 64, offset: 320)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 64, elements: !398)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !788, file: !123, line: 563, baseType: !127, size: 32, offset: 384)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !788, file: !123, line: 564, baseType: !127, size: 32, offset: 416)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !788, file: !123, line: 565, baseType: !127, size: 32, offset: 448)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !788, file: !123, line: 566, baseType: !106, size: 32, offset: 480)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !788, file: !123, line: 567, baseType: !127, size: 32, offset: 512)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !788, file: !123, line: 568, baseType: !127, size: 32, offset: 544)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !788, file: !123, line: 569, baseType: !801, size: 64, offset: 576)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !788, file: !123, line: 570, baseType: !127, size: 32, offset: 640)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !788, file: !123, line: 571, baseType: !127, size: 32, offset: 672)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !788, file: !123, line: 572, baseType: !127, size: 32, offset: 704)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !788, file: !123, line: 573, baseType: !106, size: 32, offset: 736)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !788, file: !123, line: 574, baseType: !127, size: 32, offset: 768)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !788, file: !123, line: 575, baseType: !127, size: 32, offset: 800)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !788, file: !123, line: 576, baseType: !801, size: 64, offset: 832)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !788, file: !123, line: 577, baseType: !127, size: 32, offset: 896)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !788, file: !123, line: 578, baseType: !127, size: 32, offset: 928)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !788, file: !123, line: 579, baseType: !801, size: 64, offset: 960)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !788, file: !123, line: 580, baseType: !127, size: 32, offset: 1024)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !788, file: !123, line: 581, baseType: !127, size: 32, offset: 1056)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !788, file: !123, line: 582, baseType: !127, size: 32, offset: 1088)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !788, file: !123, line: 583, baseType: !127, size: 32, offset: 1120)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !788, file: !123, line: 584, baseType: !127, size: 32, offset: 1152)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !788, file: !123, line: 585, baseType: !127, size: 32, offset: 1184)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !318, line: 343, size: 64, elements: !827)
!827 = !{!828, !829}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !826, file: !318, line: 344, baseType: !106, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !826, file: !318, line: 345, baseType: !106, size: 32, offset: 32)
!830 = !{!831, !837, !853, !864, !775}
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !777, file: !833, line: 752, type: !834, isLocal: false, isDefinition: true, align: 16)
!833 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 800, elements: !835)
!835 = !{!836}
!836 = !DISubrange(count: 50)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !777, file: !833, line: 752, type: !839, isLocal: false, isDefinition: true, align: 32)
!839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !841)
!841 = !{!842, !843, !844, !845, !851, !852}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !840, file: !147, line: 380, baseType: !150, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !840, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !840, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !840, file: !147, line: 386, baseType: !846, size: 32, offset: 96)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !848)
!848 = !{!849, !850}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !847, file: !147, line: 359, baseType: !160, size: 8)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !847, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !840, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !840, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !777, file: !833, line: 752, type: !855, isLocal: true, isDefinition: true, align: 32)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !857)
!857 = !{!858, !863}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !856, file: !138, line: 60, baseType: !859, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!860 = !DISubroutineType(types: !861)
!861 = !{!103, !862}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !856, file: !138, line: 65, baseType: !862, size: 32, offset: 32)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !777, file: !833, line: 752, type: !847, isLocal: true, isDefinition: true, align: 8)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !221, line: 100, size: 224, elements: !867)
!867 = !{!868, !873, !874, !883, !888, !893, !898}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !866, file: !221, line: 101, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !221, line: 76, baseType: !870)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DISubroutineType(types: !872)
!872 = !{!103, !862, !229}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !866, file: !221, line: 102, baseType: !869, size: 32, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !866, file: !221, line: 103, baseType: !875, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !221, line: 83, baseType: !876)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!103, !862, !229, !879, !102}
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !221, line: 72, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !862, !229, !102}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !866, file: !221, line: 104, baseType: !884, size: 32, offset: 96)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !221, line: 79, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!103, !862, !229, !269}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !866, file: !221, line: 105, baseType: !889, size: 32, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !221, line: 88, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = !DISubroutineType(types: !892)
!892 = !{!220, !862, !229}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !866, file: !221, line: 106, baseType: !894, size: 32, offset: 160)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !221, line: 92, baseType: !895)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!896 = !DISubroutineType(types: !897)
!897 = !{!103, !862, !229, !280}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !866, file: !221, line: 107, baseType: !899, size: 32, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !221, line: 96, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DISubroutineType(types: !902)
!902 = !{!103, !862, !229, !102}
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !905, file: !962, line: 603, type: !964, isLocal: true, isDefinition: true, align: 32)
!905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !907, globals: !959, splitDebugInlining: false, nameTableKind: None)
!906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!907 = !{!102, !103, !908}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !911, line: 336, size: 160, elements: !912)
!911 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!912 = !{!913, !933, !937, !941, !954}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !910, file: !911, line: 365, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !917, !932}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !920)
!920 = !{!921, !922, !923, !924, !930, !931}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !919, file: !147, line: 380, baseType: !150, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !919, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !919, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !919, file: !147, line: 386, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !926, file: !147, line: 359, baseType: !160, size: 8)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !926, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !919, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !919, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !910, file: !911, line: 366, baseType: !934, size: 32, offset: 32)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !917, !161}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !910, file: !911, line: 374, baseType: !938, size: 32, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{!103, !917}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !910, file: !911, line: 377, baseType: !942, size: 32, offset: 96)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DISubroutineType(types: !944)
!944 = !{!103, !917, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !911, line: 122, size: 64, elements: !948)
!948 = !{!949, !950, !951, !952, !953}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !947, file: !911, line: 123, baseType: !106, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !947, file: !911, line: 124, baseType: !160, size: 8, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !947, file: !911, line: 125, baseType: !160, size: 8, offset: 40)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !947, file: !911, line: 126, baseType: !160, size: 8, offset: 48)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !947, file: !911, line: 127, baseType: !160, size: 8, offset: 56)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !910, file: !911, line: 379, baseType: !955, size: 32, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!103, !917, !958}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!959 = !{!903, !960}
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !905, file: !962, line: 38, type: !963, isLocal: true, isDefinition: true)
!962 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !965, file: !138, line: 60, baseType: !938, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !965, file: !138, line: 65, baseType: !917, size: 32, offset: 32)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !971, file: !1142, line: 762, type: !1248, isLocal: true, isDefinition: true)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !973, retainedTypes: !991, globals: !1139, splitDebugInlining: false, nameTableKind: None)
!972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!973 = !{!30, !974, !980, !985, !220}
!974 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !975, line: 506, baseType: !32, size: 32, elements: !976)
!975 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!976 = !{!977, !978, !979}
!977 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!978 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!979 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!980 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !975, line: 512, baseType: !32, size: 32, elements: !981)
!981 = !{!982, !983, !984}
!982 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!983 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!984 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!985 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !729, line: 43, baseType: !32, size: 32, elements: !986)
!986 = !{!987, !988, !989, !990}
!987 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!988 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!989 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!990 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!991 = !{!102, !103, !992, !1062, !1067, !1027, !980, !974, !1072, !1073, !106, !1087, !1042, !1099, !228, !1100}
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !975, line: 523, size: 288, elements: !995)
!995 = !{!996, !1017, !1023, !1028, !1032, !1033, !1034, !1038, !1058}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !994, file: !975, line: 524, baseType: !997, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!103, !1000, !1015, !1016}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1013, !1014}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1002, file: !147, line: 380, baseType: !150, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1002, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1002, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1002, file: !147, line: 386, baseType: !1008, size: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1009, file: !147, line: 359, baseType: !160, size: 8)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1009, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1002, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1002, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !975, line: 237, baseType: !160)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !975, line: 257, baseType: !106)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !994, file: !975, line: 530, baseType: !1018, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !1000, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !975, line: 229, baseType: !106)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !994, file: !975, line: 532, baseType: !1024, size: 32, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!103, !1000, !1027, !1022}
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !975, line: 216, baseType: !106)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !994, file: !975, line: 535, baseType: !1029, size: 32, offset: 96)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!103, !1000, !1027}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !994, file: !975, line: 537, baseType: !1029, size: 32, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !994, file: !975, line: 539, baseType: !1029, size: 32, offset: 160)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !994, file: !975, line: 541, baseType: !1035, size: 32, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 32)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!103, !1000, !1015, !974, !980}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !994, file: !975, line: 544, baseType: !1039, size: 32, offset: 224)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!103, !1000, !1042, !163}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !975, line: 478, size: 96, elements: !1044)
!1044 = !{!1045, !1052, !1057}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1043, file: !975, line: 482, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1047, line: 33, baseType: !1048)
!1047 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1047, line: 29, size: 32, elements: !1049)
!1049 = !{!1050}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1048, file: !1047, line: 30, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1043, file: !975, line: 485, baseType: !1053, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !975, line: 464, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1000, !1042, !1027}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1043, file: !975, line: 493, baseType: !1027, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !994, file: !975, line: 547, baseType: !1059, size: 32, offset: 256)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!106, !1000}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !975, line: 428, size: 32, elements: !1065)
!1065 = !{!1066}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1064, file: !975, line: 434, baseType: !1027, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !975, line: 441, size: 32, elements: !1070)
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1069, file: !975, line: 447, baseType: !1027, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !123, line: 469, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 458, size: 320, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1075, file: !123, line: 460, baseType: !127, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1075, file: !123, line: 461, baseType: !127, size: 32, offset: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1075, file: !123, line: 462, baseType: !127, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1075, file: !123, line: 463, baseType: !127, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1075, file: !123, line: 464, baseType: !127, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1075, file: !123, line: 465, baseType: !127, size: 32, offset: 160)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1075, file: !123, line: 466, baseType: !127, size: 32, offset: 192)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1075, file: !123, line: 467, baseType: !127, size: 32, offset: 224)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1075, file: !123, line: 468, baseType: !1086, size: 64, offset: 256)
!1086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 64, elements: !398)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !123, line: 484, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 475, size: 384, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1095, !1096, !1097, !1098}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1089, file: !123, line: 477, baseType: !127, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1089, file: !123, line: 478, baseType: !127, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1089, file: !123, line: 479, baseType: !1094, size: 128, offset: 64)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 128, elements: !191)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1089, file: !123, line: 480, baseType: !801, size: 64, offset: 192)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1089, file: !123, line: 481, baseType: !127, size: 32, offset: 256)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1089, file: !123, line: 482, baseType: !801, size: 64, offset: 288)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1089, file: !123, line: 483, baseType: !127, size: 32, offset: 352)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !221, line: 100, size: 224, elements: !1103)
!1103 = !{!1104, !1109, !1110, !1119, !1124, !1129, !1134}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1102, file: !221, line: 101, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !221, line: 76, baseType: !1106)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!103, !1000, !229}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1102, file: !221, line: 102, baseType: !1105, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1102, file: !221, line: 103, baseType: !1111, size: 32, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !221, line: 83, baseType: !1112)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!103, !1000, !229, !1115, !102}
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !221, line: 72, baseType: !1116)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{null, !1000, !229, !102}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1102, file: !221, line: 104, baseType: !1120, size: 32, offset: 96)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !221, line: 79, baseType: !1121)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!103, !1000, !229, !269}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1102, file: !221, line: 105, baseType: !1125, size: 32, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !221, line: 88, baseType: !1126)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!220, !1000, !229}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1102, file: !221, line: 106, baseType: !1130, size: 32, offset: 160)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !221, line: 92, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!103, !1000, !229, !280}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1102, file: !221, line: 107, baseType: !1135, size: 32, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !221, line: 96, baseType: !1136)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!103, !1000, !229, !102}
!1139 = !{!1140, !1143, !1145, !1155, !1157, !1159, !1161, !1163, !1165, !1167, !1172, !1174, !1176, !1178, !1180, !1182, !1184, !1186, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !969, !1244, !1246, !1259, !1261, !1263, !1265, !1267, !1269}
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !971, file: !1142, line: 762, type: !296, isLocal: false, isDefinition: true, align: 16)
!1142 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !971, file: !1142, line: 762, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !971, file: !1142, line: 762, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1149)
!1149 = !{!1150, !1154}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1148, file: !138, line: 60, baseType: !1151, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!103, !1000}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1148, file: !138, line: 65, baseType: !1000, size: 32, offset: 32)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !971, file: !1142, line: 766, type: !296, isLocal: false, isDefinition: true, align: 16)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !971, file: !1142, line: 766, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !971, file: !1142, line: 766, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !971, file: !1142, line: 770, type: !296, isLocal: false, isDefinition: true, align: 16)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !971, file: !1142, line: 770, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !971, file: !1142, line: 770, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !971, file: !1142, line: 774, type: !1169, isLocal: false, isDefinition: true, align: 16)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 144, elements: !1170)
!1170 = !{!1171}
!1171 = !DISubrange(count: 9)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !971, file: !1142, line: 774, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !971, file: !1142, line: 774, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !971, file: !1142, line: 778, type: !296, isLocal: false, isDefinition: true, align: 16)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !971, file: !1142, line: 778, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !971, file: !1142, line: 778, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !971, file: !1142, line: 782, type: !296, isLocal: false, isDefinition: true, align: 16)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !971, file: !1142, line: 782, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !971, file: !1142, line: 782, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !971, file: !1142, line: 786, type: !296, isLocal: false, isDefinition: true, align: 16)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !971, file: !1142, line: 786, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !971, file: !1142, line: 786, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !971, file: !1142, line: 790, type: !296, isLocal: false, isDefinition: true, align: 16)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !971, file: !1142, line: 790, type: !1001, isLocal: false, isDefinition: true, align: 32)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !971, file: !1142, line: 790, type: !1147, isLocal: true, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !971, file: !1142, line: 762, type: !1202, isLocal: true, isDefinition: true)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1203, line: 237, size: 128, elements: !1204)
!1203 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1204 = !{!1205, !1206, !1207}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1202, file: !1203, line: 239, baseType: !1069, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1202, file: !1203, line: 241, baseType: !1000, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1202, file: !1203, line: 243, baseType: !1208, size: 64, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1047, line: 40, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1047, line: 35, size: 64, elements: !1210)
!1210 = !{!1211, !1213}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1209, file: !1047, line: 36, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1209, file: !1047, line: 37, baseType: !1212, size: 32, offset: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !971, file: !1142, line: 762, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !971, file: !1142, line: 766, type: !1202, isLocal: true, isDefinition: true)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !971, file: !1142, line: 766, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !971, file: !1142, line: 770, type: !1202, isLocal: true, isDefinition: true)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !971, file: !1142, line: 770, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !971, file: !1142, line: 774, type: !1202, isLocal: true, isDefinition: true)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !971, file: !1142, line: 774, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !971, file: !1142, line: 778, type: !1202, isLocal: true, isDefinition: true)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !971, file: !1142, line: 778, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !971, file: !1142, line: 782, type: !1202, isLocal: true, isDefinition: true)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !971, file: !1142, line: 782, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !971, file: !1142, line: 786, type: !1202, isLocal: true, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !971, file: !1142, line: 786, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !971, file: !1142, line: 790, type: !1202, isLocal: true, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !971, file: !1142, line: 790, type: !1009, isLocal: true, isDefinition: true, align: 8)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !971, file: !1142, line: 656, type: !993, isLocal: true, isDefinition: true)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !971, file: !1142, line: 766, type: !1248, isLocal: true, isDefinition: true)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1203, line: 224, size: 160, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1249, file: !1203, line: 226, baseType: !1064, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1249, file: !1203, line: 228, baseType: !269, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1249, file: !1203, line: 230, baseType: !103, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1249, file: !1203, line: 231, baseType: !1255, size: 64, offset: 96)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !318, line: 343, size: 64, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1255, file: !318, line: 344, baseType: !106, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1255, file: !318, line: 345, baseType: !106, size: 32, offset: 32)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !971, file: !1142, line: 770, type: !1248, isLocal: true, isDefinition: true)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !971, file: !1142, line: 774, type: !1248, isLocal: true, isDefinition: true)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !971, file: !1142, line: 778, type: !1248, isLocal: true, isDefinition: true)
!1265 = !DIGlobalVariableExpression(var: !1266, expr: !DIExpression())
!1266 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !971, file: !1142, line: 782, type: !1248, isLocal: true, isDefinition: true)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !971, file: !1142, line: 786, type: !1248, isLocal: true, isDefinition: true)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !971, file: !1142, line: 790, type: !1248, isLocal: true, isDefinition: true)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1273, file: !1414, line: 1914, type: !1501, isLocal: true, isDefinition: true)
!1273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1274, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1275, retainedTypes: !1308, globals: !1411, splitDebugInlining: false, nameTableKind: None)
!1274 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!1275 = !{!30, !1276, !1283, !1290, !1297, !1303, !220}
!1276 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !911, line: 47, baseType: !32, size: 32, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282}
!1278 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1279 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1280 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1281 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1282 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !911, line: 75, baseType: !32, size: 32, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288, !1289}
!1285 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1286 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1287 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1288 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1289 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1290 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !911, line: 92, baseType: !32, size: 32, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296}
!1292 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1293 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1294 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1295 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1296 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !911, line: 84, baseType: !32, size: 32, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302}
!1299 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1300 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1301 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1302 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !911, line: 107, baseType: !32, size: 32, elements: !1304)
!1304 = !{!1305, !1306, !1307}
!1305 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1306 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1307 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1308 = !{!102, !103, !1309, !161, !160, !1358, !106, !229, !1369, !421, !1408, !1410}
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !911, line: 336, size: 160, elements: !1312)
!1312 = !{!1313, !1332, !1336, !1340, !1353}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1311, file: !911, line: 365, baseType: !1314, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!103, !1317, !932}
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324, !1330, !1331}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1319, file: !147, line: 380, baseType: !150, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1319, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1319, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1319, file: !147, line: 386, baseType: !1325, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1327)
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1326, file: !147, line: 359, baseType: !160, size: 8)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1326, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1319, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1319, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1311, file: !911, line: 366, baseType: !1333, size: 32, offset: 32)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !1317, !161}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1311, file: !911, line: 374, baseType: !1337, size: 32, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!103, !1317}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1311, file: !911, line: 377, baseType: !1341, size: 32, offset: 96)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!103, !1317, !1344}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !911, line: 122, size: 64, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1346, file: !911, line: 123, baseType: !106, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1346, file: !911, line: 124, baseType: !160, size: 8, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1346, file: !911, line: 125, baseType: !160, size: 8, offset: 40)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1346, file: !911, line: 126, baseType: !160, size: 8, offset: 48)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1346, file: !911, line: 127, baseType: !160, size: 8, offset: 56)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1311, file: !911, line: 379, baseType: !1354, size: 32, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!103, !1317, !1357}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !123, line: 783, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 774, size: 224, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1360, file: !123, line: 776, baseType: !127, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1360, file: !123, line: 777, baseType: !127, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1360, file: !123, line: 778, baseType: !127, size: 32, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1360, file: !123, line: 779, baseType: !127, size: 32, offset: 96)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1360, file: !123, line: 780, baseType: !127, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1360, file: !123, line: 781, baseType: !127, size: 32, offset: 160)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1360, file: !123, line: 782, baseType: !127, size: 32, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !221, line: 100, size: 224, elements: !1372)
!1372 = !{!1373, !1378, !1379, !1388, !1393, !1398, !1403}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1371, file: !221, line: 101, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !221, line: 76, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!103, !1317, !229}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1371, file: !221, line: 102, baseType: !1374, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1371, file: !221, line: 103, baseType: !1380, size: 32, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !221, line: 83, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!103, !1317, !229, !1384, !102}
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !221, line: 72, baseType: !1385)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{null, !1317, !229, !102}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1371, file: !221, line: 104, baseType: !1389, size: 32, offset: 96)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !221, line: 79, baseType: !1390)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!103, !1317, !229, !269}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1371, file: !221, line: 105, baseType: !1394, size: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !221, line: 88, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!220, !1317, !229}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1371, file: !221, line: 106, baseType: !1399, size: 32, offset: 160)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !221, line: 92, baseType: !1400)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!103, !1317, !229, !280}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1371, file: !221, line: 107, baseType: !1404, size: 32, offset: 192)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !221, line: 96, baseType: !1405)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!103, !1317, !229, !102}
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1409)
!1409 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!1411 = !{!1412, !1418, !1420, !1427, !1429, !1431, !1433, !1435, !1437, !1439, !1441, !1443, !1445, !1447, !1449, !1451, !1271, !1453, !1461, !1484, !1487, !1490, !1492, !1499, !1516, !1518, !1520, !1522, !1524, !1526, !1528, !1530, !1532, !1534, !1536, !1538, !1540, !1542, !1544, !1546, !1548}
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1415, isLocal: false, isDefinition: true, align: 16)
!1414 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 128, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 8)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1318, isLocal: false, isDefinition: true, align: 32)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1422, isLocal: true, isDefinition: true, align: 32)
!1422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1423, file: !138, line: 60, baseType: !1337, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1423, file: !138, line: 65, baseType: !1317, size: 32, offset: 32)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1415, isLocal: false, isDefinition: true, align: 16)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1318, isLocal: false, isDefinition: true, align: 32)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1422, isLocal: true, isDefinition: true, align: 32)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1415, isLocal: false, isDefinition: true, align: 16)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1318, isLocal: false, isDefinition: true, align: 32)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1422, isLocal: true, isDefinition: true, align: 32)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1415, isLocal: false, isDefinition: true, align: 16)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1318, isLocal: false, isDefinition: true, align: 32)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1422, isLocal: true, isDefinition: true, align: 32)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1326, isLocal: true, isDefinition: true, align: 8)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1326, isLocal: true, isDefinition: true, align: 8)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1326, isLocal: true, isDefinition: true, align: 8)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1326, isLocal: true, isDefinition: true, align: 8)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1273, file: !1414, line: 1914, type: !1455, isLocal: true, isDefinition: true)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1456, size: 64, elements: !501)
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !318, line: 343, size: 64, elements: !1458)
!1458 = !{!1459, !1460}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1457, file: !318, line: 344, baseType: !106, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1457, file: !318, line: 345, baseType: !106, size: 32, offset: 32)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1463, isLocal: true, isDefinition: true)
!1463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1465, line: 60, size: 64, elements: !1466)
!1465 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1466 = !{!1467, !1483}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1464, file: !1465, line: 69, baseType: !1468, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1470)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1465, line: 50, size: 64, elements: !1471)
!1471 = !{!1472, !1481, !1482}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1470, file: !1465, line: 52, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1476, line: 37, baseType: !1477)
!1476 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1476, line: 32, size: 64, elements: !1478)
!1478 = !{!1479, !1480}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1477, file: !1476, line: 34, baseType: !106, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1477, file: !1476, line: 36, baseType: !106, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1470, file: !1465, line: 54, baseType: !160, size: 8, offset: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1470, file: !1465, line: 56, baseType: !160, size: 8, offset: 40)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1464, file: !1465, line: 71, baseType: !160, size: 8, offset: 32)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1486, isLocal: true, isDefinition: true)
!1486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1469, size: 64, elements: !501)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1273, file: !1414, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 128, elements: !398)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1273, file: !1414, line: 1539, type: !1310, isLocal: true, isDefinition: true)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1273, file: !1414, line: 1914, type: !1494, isLocal: true, isDefinition: true)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1495, line: 74, size: 64, elements: !1496)
!1495 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1496 = !{!1497, !1498}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1494, file: !1495, line: 76, baseType: !106, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1494, file: !1495, line: 78, baseType: !1317, size: 32, offset: 32)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1273, file: !1414, line: 1914, type: !1501, isLocal: true, isDefinition: true)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1495, line: 22, size: 224, elements: !1503)
!1503 = !{!1504, !1505, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1502, file: !1495, line: 24, baseType: !1358, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1502, file: !1495, line: 26, baseType: !1506, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1502, file: !1495, line: 28, baseType: !356, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1502, file: !1495, line: 30, baseType: !163, size: 8, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1502, file: !1495, line: 32, baseType: !103, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1502, file: !1495, line: 34, baseType: !163, size: 8, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1502, file: !1495, line: 36, baseType: !163, size: 8, offset: 168)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1502, file: !1495, line: 38, baseType: !163, size: 8, offset: 176)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1502, file: !1495, line: 40, baseType: !163, size: 8, offset: 184)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1502, file: !1495, line: 41, baseType: !1515, size: 32, offset: 192)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1516 = !DIGlobalVariableExpression(var: !1517, expr: !DIExpression())
!1517 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1273, file: !1414, line: 1914, type: !1455, isLocal: true, isDefinition: true)
!1518 = !DIGlobalVariableExpression(var: !1519, expr: !DIExpression())
!1519 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1463, isLocal: true, isDefinition: true)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1486, isLocal: true, isDefinition: true)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1273, file: !1414, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1273, file: !1414, line: 1914, type: !1494, isLocal: true, isDefinition: true)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1273, file: !1414, line: 1914, type: !1501, isLocal: true, isDefinition: true)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1273, file: !1414, line: 1914, type: !1455, isLocal: true, isDefinition: true)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1463, isLocal: true, isDefinition: true)
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1486, isLocal: true, isDefinition: true)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1273, file: !1414, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1273, file: !1414, line: 1914, type: !1494, isLocal: true, isDefinition: true)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1273, file: !1414, line: 1914, type: !1501, isLocal: true, isDefinition: true)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1273, file: !1414, line: 1914, type: !1455, isLocal: true, isDefinition: true)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1463, isLocal: true, isDefinition: true)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1486, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1273, file: !1414, line: 1914, type: !1489, isLocal: true, isDefinition: true)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1273, file: !1414, line: 1914, type: !1494, isLocal: true, isDefinition: true)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1552, file: !1632, line: 65, type: !127, isLocal: true, isDefinition: true)
!1552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1553, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1554, retainedTypes: !1555, globals: !1629, splitDebugInlining: false, nameTableKind: None)
!1553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!1554 = !{!581}
!1555 = !{!1556, !1558, !748, !160, !106, !1566, !1597}
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1557, line: 46, baseType: !436)
!1557 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !512, line: 770, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 764, size: 128, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1560, file: !512, line: 766, baseType: !127, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1560, file: !512, line: 767, baseType: !127, size: 32, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1560, file: !512, line: 768, baseType: !127, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1560, file: !512, line: 769, baseType: !516, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !512, line: 426, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 411, size: 28704, elements: !1569)
!1569 = !{!1570, !1572, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1587, !1592, !1596}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1568, file: !512, line: 413, baseType: !1571, size: 256)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 256, elements: !1416)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1568, file: !512, line: 414, baseType: !1573, size: 768, offset: 256)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 768, elements: !1574)
!1574 = !{!1575}
!1575 = !DISubrange(count: 24)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1568, file: !512, line: 415, baseType: !1571, size: 256, offset: 1024)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1568, file: !512, line: 416, baseType: !1573, size: 768, offset: 1280)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1568, file: !512, line: 417, baseType: !1571, size: 256, offset: 2048)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1568, file: !512, line: 418, baseType: !1573, size: 768, offset: 2304)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1568, file: !512, line: 419, baseType: !1571, size: 256, offset: 3072)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1568, file: !512, line: 420, baseType: !1573, size: 768, offset: 3328)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1568, file: !512, line: 421, baseType: !1571, size: 256, offset: 4096)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1568, file: !512, line: 422, baseType: !1584, size: 1792, offset: 4352)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 1792, elements: !1585)
!1585 = !{!1586}
!1586 = !DISubrange(count: 56)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1568, file: !512, line: 423, baseType: !1588, size: 1920, offset: 6144)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 1920, elements: !1590)
!1589 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !160)
!1590 = !{!1591}
!1591 = !DISubrange(count: 240)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1568, file: !512, line: 424, baseType: !1593, size: 20608, offset: 8064)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 20608, elements: !1594)
!1594 = !{!1595}
!1595 = !DISubrange(count: 644)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1568, file: !512, line: 425, baseType: !127, size: 32, offset: 28672)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604, !1605, !1606, !1607, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1620, !1621, !1622, !1624, !1626, !1628}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1599, file: !512, line: 447, baseType: !516, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1599, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1599, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1599, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1599, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1599, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1599, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 96, elements: !1609)
!1609 = !{!1610}
!1610 = !DISubrange(count: 12)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1599, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1599, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1599, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1599, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1599, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1599, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1599, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1599, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 64, elements: !398)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1599, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1599, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1599, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 128, elements: !191)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1599, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 160, elements: !297)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1599, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !106, size: 160, elements: !297)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1599, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!1629 = !{!1630, !1656, !1659, !1661, !1663, !1550}
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1552, file: !1632, line: 285, type: !1633, isLocal: true, isDefinition: true, align: 32)
!1632 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !1635)
!1635 = !{!1636, !1655}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1634, file: !138, line: 60, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!103, !1640}
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1653, !1654}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1642, file: !147, line: 380, baseType: !150, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1642, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1642, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1642, file: !147, line: 386, baseType: !1648, size: 32, offset: 96)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1649, file: !147, line: 359, baseType: !160, size: 8)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1649, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1642, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1642, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1634, file: !138, line: 65, baseType: !1640, size: 32, offset: 32)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "lock", scope: !1552, file: !1632, line: 34, type: !1658, isLocal: true, isDefinition: true)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "last_load", scope: !1552, file: !1632, line: 36, type: !106, isLocal: true, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1552, file: !1632, line: 48, type: !106, isLocal: true, isDefinition: true)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1552, file: !1632, line: 54, type: !106, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1667, file: !1749, line: 22, type: !1751, isLocal: true, isDefinition: true)
!1667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1669, retainedTypes: !1670, globals: !1746, splitDebugInlining: false, nameTableKind: None)
!1668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!1669 = !{!974, !980}
!1670 = !{!1671, !1735, !1740, !1027, !980, !974, !1745, !102}
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !975, line: 523, size: 288, elements: !1674)
!1674 = !{!1675, !1694, !1698, !1702, !1706, !1707, !1708, !1712, !1731}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1673, file: !975, line: 524, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!103, !1679, !1015, !1016}
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1692, !1693}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1681, file: !147, line: 380, baseType: !150, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1681, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1681, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1681, file: !147, line: 386, baseType: !1687, size: 32, offset: 96)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1688, file: !147, line: 359, baseType: !160, size: 8)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1688, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1681, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1681, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1673, file: !975, line: 530, baseType: !1695, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!103, !1679, !1021}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1673, file: !975, line: 532, baseType: !1699, size: 32, offset: 64)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!103, !1679, !1027, !1022}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1673, file: !975, line: 535, baseType: !1703, size: 32, offset: 96)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!103, !1679, !1027}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1673, file: !975, line: 537, baseType: !1703, size: 32, offset: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1673, file: !975, line: 539, baseType: !1703, size: 32, offset: 160)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1673, file: !975, line: 541, baseType: !1709, size: 32, offset: 192)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!103, !1679, !1015, !974, !980}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1673, file: !975, line: 544, baseType: !1713, size: 32, offset: 224)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!103, !1679, !1716, !163}
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !975, line: 478, size: 96, elements: !1718)
!1718 = !{!1719, !1725, !1730}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1717, file: !975, line: 482, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1047, line: 33, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1047, line: 29, size: 32, elements: !1722)
!1722 = !{!1723}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1721, file: !1047, line: 30, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1717, file: !975, line: 485, baseType: !1726, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !975, line: 464, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{null, !1679, !1716, !1027}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1717, file: !975, line: 493, baseType: !1027, size: 32, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1673, file: !975, line: 547, baseType: !1732, size: 32, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!106, !1679}
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !975, line: 428, size: 32, elements: !1738)
!1738 = !{!1739}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1737, file: !975, line: 434, baseType: !1027, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !975, line: 441, size: 32, elements: !1743)
!1743 = !{!1744}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1742, file: !975, line: 447, baseType: !1027, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1746 = !{!1747, !1665}
!1747 = !DIGlobalVariableExpression(var: !1748, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1748 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1667, file: !1749, line: 37, type: !1750, isLocal: true, isDefinition: true)
!1749 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 352, elements: !1753)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1753 = !{!1754}
!1754 = !DISubrange(count: 11)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1757, file: !1801, line: 139, type: !1806, isLocal: false, isDefinition: true)
!1757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1759, globals: !1798, splitDebugInlining: false, nameTableKind: None)
!1758 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!1759 = !{!1760}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 586, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 550, size: 1216, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1762, file: !123, line: 552, baseType: !127, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1762, file: !123, line: 553, baseType: !127, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1762, file: !123, line: 554, baseType: !127, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1762, file: !123, line: 555, baseType: !127, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1762, file: !123, line: 556, baseType: !127, size: 32, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1762, file: !123, line: 557, baseType: !127, size: 32, offset: 160)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1762, file: !123, line: 558, baseType: !127, size: 32, offset: 192)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1762, file: !123, line: 559, baseType: !106, size: 32, offset: 224)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1762, file: !123, line: 560, baseType: !127, size: 32, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1762, file: !123, line: 561, baseType: !127, size: 32, offset: 288)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1762, file: !123, line: 562, baseType: !801, size: 64, offset: 320)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1762, file: !123, line: 563, baseType: !127, size: 32, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1762, file: !123, line: 564, baseType: !127, size: 32, offset: 416)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1762, file: !123, line: 565, baseType: !127, size: 32, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1762, file: !123, line: 566, baseType: !106, size: 32, offset: 480)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1762, file: !123, line: 567, baseType: !127, size: 32, offset: 512)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1762, file: !123, line: 568, baseType: !127, size: 32, offset: 544)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1762, file: !123, line: 569, baseType: !801, size: 64, offset: 576)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1762, file: !123, line: 570, baseType: !127, size: 32, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1762, file: !123, line: 571, baseType: !127, size: 32, offset: 672)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1762, file: !123, line: 572, baseType: !127, size: 32, offset: 704)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1762, file: !123, line: 573, baseType: !106, size: 32, offset: 736)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1762, file: !123, line: 574, baseType: !127, size: 32, offset: 768)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1762, file: !123, line: 575, baseType: !127, size: 32, offset: 800)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1762, file: !123, line: 576, baseType: !801, size: 64, offset: 832)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1762, file: !123, line: 577, baseType: !127, size: 32, offset: 896)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1762, file: !123, line: 578, baseType: !127, size: 32, offset: 928)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1762, file: !123, line: 579, baseType: !801, size: 64, offset: 960)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1762, file: !123, line: 580, baseType: !127, size: 32, offset: 1024)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1762, file: !123, line: 581, baseType: !127, size: 32, offset: 1056)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1762, file: !123, line: 582, baseType: !127, size: 32, offset: 1088)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1762, file: !123, line: 583, baseType: !127, size: 32, offset: 1120)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1762, file: !123, line: 584, baseType: !127, size: 32, offset: 1152)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1762, file: !123, line: 585, baseType: !127, size: 32, offset: 1184)
!1798 = !{!1799, !1802, !1755}
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1757, file: !1801, line: 137, type: !106, isLocal: false, isDefinition: true)
!1801 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1757, file: !1801, line: 138, type: !1804, isLocal: false, isDefinition: true)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 128, elements: !181)
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !160)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 64, elements: !1416)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1809, file: !1812, line: 23, type: !1813, isLocal: false, isDefinition: true)
!1809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1810, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1811, splitDebugInlining: false, nameTableKind: None)
!1810 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!1811 = !{!1807}
!1812 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1816, file: !1820, line: 86, type: !2070, isLocal: false, isDefinition: true, align: 512)
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1818, retainedTypes: !1827, globals: !1901, splitDebugInlining: false, nameTableKind: None)
!1817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!1818 = !{!1819, !30, !581}
!1819 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1820, line: 63, baseType: !32, size: 32, elements: !1821)
!1820 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1821 = !{!1822, !1823, !1824, !1825, !1826}
!1822 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1823 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1824 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1825 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1826 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1827 = !{!356, !102, !103, !1828, !1099, !106, !1859, !748, !160, !1884}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1831, line: 51, size: 64, elements: !1832)
!1831 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1832 = !{!1833, !1854}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1830, file: !1831, line: 52, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1831, line: 38, baseType: !1835)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!103, !1838, !1853, !421}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !1841)
!1841 = !{!1842, !1843, !1844, !1845, !1851, !1852}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1840, file: !147, line: 380, baseType: !150, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1840, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1840, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1840, file: !147, line: 386, baseType: !1846, size: 32, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !1848)
!1848 = !{!1849, !1850}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1847, file: !147, line: 359, baseType: !160, size: 8)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1847, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1840, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1840, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1830, file: !1831, line: 53, baseType: !1855, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1831, line: 47, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!103, !1838, !1853, !421, !106}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1861, file: !512, line: 447, baseType: !516, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1861, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1861, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1861, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1861, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1861, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1861, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1861, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1861, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1861, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1861, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1861, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1861, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1861, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1861, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1861, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1861, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1861, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1861, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1861, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1861, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !512, line: 426, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 411, size: 28704, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1886, file: !512, line: 413, baseType: !1571, size: 256)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1886, file: !512, line: 414, baseType: !1573, size: 768, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1886, file: !512, line: 415, baseType: !1571, size: 256, offset: 1024)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1886, file: !512, line: 416, baseType: !1573, size: 768, offset: 1280)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1886, file: !512, line: 417, baseType: !1571, size: 256, offset: 2048)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1886, file: !512, line: 418, baseType: !1573, size: 768, offset: 2304)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1886, file: !512, line: 419, baseType: !1571, size: 256, offset: 3072)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1886, file: !512, line: 420, baseType: !1573, size: 768, offset: 3328)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1886, file: !512, line: 421, baseType: !1571, size: 256, offset: 4096)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1886, file: !512, line: 422, baseType: !1584, size: 1792, offset: 4352)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1886, file: !512, line: 423, baseType: !1588, size: 1920, offset: 6144)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1886, file: !512, line: 424, baseType: !1593, size: 20608, offset: 8064)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1886, file: !512, line: 425, baseType: !127, size: 32, offset: 28672)
!1901 = !{!1902, !2024, !2033, !2035, !1814, !2038, !2040, !2045}
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "_kernel", scope: !1816, file: !1820, line: 40, type: !1904, isLocal: false, isDefinition: true)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !403, line: 158, size: 288, elements: !1905)
!1905 = !{!1906, !2019}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1904, file: !403, line: 159, baseType: !1907, size: 192)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 192, elements: !501)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !403, line: 100, size: 192, elements: !1909)
!1909 = !{!1910, !1911, !1912, !2013, !2014, !2015, !2016}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1908, file: !403, line: 102, baseType: !106, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1908, file: !403, line: 105, baseType: !1099, size: 32, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1908, file: !403, line: 108, baseType: !1913, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !1915)
!1915 = !{!1916, !1974, !1986, !1987, !1988, !1989, !1995, !2008}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1914, file: !367, line: 247, baseType: !1917, size: 384)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !1918)
!1918 = !{!1919, !1943, !1950, !1951, !1952, !1961, !1962, !1963}
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !367, line: 60, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !367, line: 60, size: 64, elements: !1921)
!1921 = !{!1922, !1937}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1920, file: !367, line: 61, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !1925)
!1925 = !{!1926, !1932}
!1926 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !377, line: 38, baseType: !1927, size: 32)
!1927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !377, line: 38, size: 32, elements: !1928)
!1928 = !{!1929, !1931}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1927, file: !377, line: 39, baseType: !1930, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1927, file: !377, line: 40, baseType: !1930, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !377, line: 42, baseType: !1933, size: 32, offset: 32)
!1933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !377, line: 42, size: 32, elements: !1934)
!1934 = !{!1935, !1936}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1933, file: !377, line: 43, baseType: !1930, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1933, file: !377, line: 44, baseType: !1930, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1920, file: !367, line: 62, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !1939)
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1938, file: !393, line: 50, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 64, elements: !398)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1917, file: !367, line: 68, baseType: !1944, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1946, file: !403, line: 232, baseType: !1949, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !1924)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1917, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1917, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!1952 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !367, line: 90, baseType: !1953, size: 16, offset: 112)
!1953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !367, line: 90, size: 16, elements: !1954)
!1954 = !{!1955, !1960}
!1955 = !DIDerivedType(tag: DW_TAG_member, scope: !1953, file: !367, line: 91, baseType: !1956, size: 16)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1953, file: !367, line: 91, size: 16, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1956, file: !367, line: 96, baseType: !417, size: 8)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1956, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1953, file: !367, line: 100, baseType: !421, size: 16)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1917, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1917, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1917, file: !367, line: 131, baseType: !1964, size: 192, offset: 192)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !1965)
!1965 = !{!1966, !1967, !1973}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1964, file: !403, line: 245, baseType: !1923, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1964, file: !403, line: 246, baseType: !1968, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !1969)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !1972}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1964, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1914, file: !367, line: 250, baseType: !1975, size: 288, offset: 384)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1975, file: !440, line: 26, baseType: !106, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1975, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1975, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1975, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1975, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1975, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1975, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1975, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1975, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1914, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1914, file: !367, line: 256, baseType: !1945, size: 64, offset: 704)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1914, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1914, file: !367, line: 300, baseType: !1990, size: 96, offset: 800)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !1991)
!1991 = !{!1992, !1993, !1994}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1990, file: !367, line: 153, baseType: !22, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1990, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1990, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1914, file: !367, line: 325, baseType: !1996, size: 32, offset: 896)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !1998)
!1998 = !{!1999, !2005, !2006}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1997, file: !463, line: 5074, baseType: !2000, size: 96)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !2001)
!2001 = !{!2002, !2003, !2004}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2000, file: !467, line: 57, baseType: !470, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2000, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2000, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1997, file: !463, line: 5075, baseType: !1945, size: 64, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1997, file: !463, line: 5076, baseType: !2007, offset: 160)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1914, file: !367, line: 343, baseType: !2009, size: 64, offset: 928)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2009, file: !440, line: 63, baseType: !106, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2009, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1908, file: !403, line: 111, baseType: !1913, size: 32, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1908, file: !403, line: 124, baseType: !103, size: 32, offset: 128)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1908, file: !403, line: 127, baseType: !160, size: 8, offset: 160)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1908, file: !403, line: 153, baseType: !2017, offset: 168)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2018, line: 33, elements: !478)
!2018 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1904, file: !403, line: 170, baseType: !2020, size: 96, offset: 192)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !403, line: 83, size: 96, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2020, file: !403, line: 86, baseType: !1913, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2020, file: !403, line: 90, baseType: !1949, size: 64, offset: 32)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1816, file: !1820, line: 43, type: !2026, isLocal: false, isDefinition: true, align: 512)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 8704, elements: !2031)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2028, line: 47, size: 8, elements: !2029)
!2028 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2029 = !{!2030}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2027, file: !2028, line: 48, baseType: !152, size: 8)
!2031 = !{!2032}
!2032 = !DISubrange(count: 1088)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1816, file: !1820, line: 44, type: !1914, isLocal: false, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1816, file: !1820, line: 48, type: !2037, isLocal: false, isDefinition: true)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 1024, elements: !501)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1816, file: !1820, line: 217, type: !163, isLocal: false, isDefinition: true)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1816, file: !1820, line: 50, type: !2042, isLocal: true, isDefinition: true, align: 512)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 3072, elements: !2043)
!2043 = !{!502, !2044}
!2044 = !DISubrange(count: 384)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "levels", scope: !2047, file: !1820, line: 232, type: !2067, isLocal: true, isDefinition: true)
!2047 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1820, file: !1820, line: 230, type: !2048, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !2050)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{null, !1819}
!2050 = !{!2051, !2052, !2062, !2066}
!2051 = !DILocalVariable(name: "level", arg: 1, scope: !2047, file: !1820, line: 230, type: !1819)
!2052 = !DILocalVariable(name: "entry", scope: !2047, file: !1820, line: 244, type: !2053)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !138, line: 51, size: 64, elements: !2056)
!2056 = !{!2057, !2061}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2055, file: !138, line: 60, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{!103, !1838}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2055, file: !138, line: 65, baseType: !1838, size: 32, offset: 32)
!2062 = !DILocalVariable(name: "dev", scope: !2063, file: !1820, line: 247, type: !1838)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !1820, line: 246, column: 64)
!2064 = distinct !DILexicalBlock(scope: !2065, file: !1820, line: 246, column: 2)
!2065 = distinct !DILexicalBlock(scope: !2047, file: !1820, line: 246, column: 2)
!2066 = !DILocalVariable(name: "rc", scope: !2063, file: !1820, line: 248, type: !103)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2053, size: 192, elements: !2068)
!2068 = !{!2069}
!2069 = !DISubrange(count: 6)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 16896, elements: !2071)
!2071 = !{!502, !2072}
!2072 = !DISubrange(count: 2112)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "states_str", scope: !2075, file: !2076, line: 276, type: !2197, isLocal: true, isDefinition: true)
!2075 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2076, file: !2076, line: 271, type: !2077, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !2188)
!2076 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!150, !2079, !1099, !356}
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2080)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2082)
!2082 = !{!2083, !2141, !2153, !2154, !2155, !2156, !2162, !2175}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2081, file: !367, line: 247, baseType: !2084, size: 384)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2085)
!2085 = !{!2086, !2110, !2117, !2118, !2119, !2128, !2129, !2130}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !367, line: 60, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !367, line: 60, size: 64, elements: !2088)
!2088 = !{!2089, !2104}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2087, file: !367, line: 61, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !2092)
!2092 = !{!2093, !2099}
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !377, line: 38, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !377, line: 38, size: 32, elements: !2095)
!2095 = !{!2096, !2098}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2094, file: !377, line: 39, baseType: !2097, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2094, file: !377, line: 40, baseType: !2097, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !377, line: 42, baseType: !2100, size: 32, offset: 32)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2091, file: !377, line: 42, size: 32, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2100, file: !377, line: 43, baseType: !2097, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2100, file: !377, line: 44, baseType: !2097, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2087, file: !367, line: 62, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2105, file: !393, line: 50, baseType: !2108, size: 64)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 64, elements: !398)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2084, file: !367, line: 68, baseType: !2111, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2113, file: !403, line: 232, baseType: !2116, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !2091)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2084, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2084, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!2119 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !367, line: 90, baseType: !2120, size: 16, offset: 112)
!2120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !367, line: 90, size: 16, elements: !2121)
!2121 = !{!2122, !2127}
!2122 = !DIDerivedType(tag: DW_TAG_member, scope: !2120, file: !367, line: 91, baseType: !2123, size: 16)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2120, file: !367, line: 91, size: 16, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2123, file: !367, line: 96, baseType: !417, size: 8)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2123, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2120, file: !367, line: 100, baseType: !421, size: 16)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2084, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2084, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2084, file: !367, line: 131, baseType: !2131, size: 192, offset: 192)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !2132)
!2132 = !{!2133, !2134, !2140}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2131, file: !403, line: 245, baseType: !2090, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2131, file: !403, line: 246, baseType: !2135, size: 32, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !2136)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !2139}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2131, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2081, file: !367, line: 250, baseType: !2142, size: 288, offset: 384)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2142, file: !440, line: 26, baseType: !106, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2142, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2142, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2142, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2142, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2142, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2142, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2142, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2142, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2081, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2081, file: !367, line: 256, baseType: !2112, size: 64, offset: 704)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2081, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2081, file: !367, line: 300, baseType: !2157, size: 96, offset: 800)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2158)
!2158 = !{!2159, !2160, !2161}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2157, file: !367, line: 153, baseType: !22, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2157, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2157, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2081, file: !367, line: 325, baseType: !2163, size: 32, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !2165)
!2165 = !{!2166, !2172, !2173}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2164, file: !463, line: 5074, baseType: !2167, size: 96)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2167, file: !467, line: 57, baseType: !470, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2167, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2167, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2164, file: !463, line: 5075, baseType: !2112, size: 64, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2164, file: !463, line: 5076, baseType: !2174, offset: 160)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2081, file: !367, line: 343, baseType: !2176, size: 64, offset: 928)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2176, file: !440, line: 63, baseType: !106, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2176, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!2180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2182, globals: !2184, splitDebugInlining: false, nameTableKind: None)
!2181 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2182 = !{!102, !150, !1556, !160, !103, !2183, !24, !356, !1099, !22, !106, !1408}
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2184 = !{!2073, !2185}
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "states_sz", scope: !2075, file: !2076, line: 279, type: !2187, isLocal: true, isDefinition: true)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1750, size: 256, elements: !1416)
!2188 = !{!2189, !2190, !2191, !2192, !2193, !2194, !2195}
!2189 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2075, file: !2076, line: 271, type: !2079)
!2190 = !DILocalVariable(name: "buf", arg: 2, scope: !2075, file: !2076, line: 271, type: !1099)
!2191 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2075, file: !2076, line: 271, type: !356)
!2192 = !DILocalVariable(name: "off", scope: !2075, file: !2076, line: 273, type: !356)
!2193 = !DILocalVariable(name: "bit", scope: !2075, file: !2076, line: 274, type: !160)
!2194 = !DILocalVariable(name: "thread_state", scope: !2075, file: !2076, line: 275, type: !160)
!2195 = !DILocalVariable(name: "index", scope: !2196, file: !2076, line: 293, type: !160)
!2196 = distinct !DILexicalBlock(scope: !2075, file: !2076, line: 293, column: 2)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !1416)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2200, file: !2308, line: 56, type: !2297, isLocal: false, isDefinition: true)
!2200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2201, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2202, globals: !2305, splitDebugInlining: false, nameTableKind: None)
!2201 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2202 = !{!2203, !1099, !102, !2303, !1853, !1556, !748, !103, !106, !1408, !2304}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2205)
!2205 = !{!2206, !2264, !2276, !2277, !2278, !2279, !2285, !2298}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2204, file: !367, line: 247, baseType: !2207, size: 384)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2208)
!2208 = !{!2209, !2233, !2240, !2241, !2242, !2251, !2252, !2253}
!2209 = !DIDerivedType(tag: DW_TAG_member, scope: !2207, file: !367, line: 60, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2207, file: !367, line: 60, size: 64, elements: !2211)
!2211 = !{!2212, !2227}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2210, file: !367, line: 61, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !2215)
!2215 = !{!2216, !2222}
!2216 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !377, line: 38, baseType: !2217, size: 32)
!2217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !377, line: 38, size: 32, elements: !2218)
!2218 = !{!2219, !2221}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2217, file: !377, line: 39, baseType: !2220, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2217, file: !377, line: 40, baseType: !2220, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !377, line: 42, baseType: !2223, size: 32, offset: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !377, line: 42, size: 32, elements: !2224)
!2224 = !{!2225, !2226}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2223, file: !377, line: 43, baseType: !2220, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2223, file: !377, line: 44, baseType: !2220, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2210, file: !367, line: 62, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2228, file: !393, line: 50, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2232, size: 64, elements: !398)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2207, file: !367, line: 68, baseType: !2234, size: 32, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !2236)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !2237)
!2237 = !{!2238}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2236, file: !403, line: 232, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !2214)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2207, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2207, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2207, file: !367, line: 90, baseType: !2243, size: 16, offset: 112)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2207, file: !367, line: 90, size: 16, elements: !2244)
!2244 = !{!2245, !2250}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !367, line: 91, baseType: !2246, size: 16)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2243, file: !367, line: 91, size: 16, elements: !2247)
!2247 = !{!2248, !2249}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2246, file: !367, line: 96, baseType: !417, size: 8)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2246, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2243, file: !367, line: 100, baseType: !421, size: 16)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2207, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2207, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2207, file: !367, line: 131, baseType: !2254, size: 192, offset: 192)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !2255)
!2255 = !{!2256, !2257, !2263}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2254, file: !403, line: 245, baseType: !2213, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2254, file: !403, line: 246, baseType: !2258, size: 32, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !2259)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{null, !2262}
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2254, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2204, file: !367, line: 250, baseType: !2265, size: 288, offset: 384)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2265, file: !440, line: 26, baseType: !106, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2265, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2265, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2265, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2265, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2265, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2265, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2265, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2265, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2204, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2204, file: !367, line: 256, baseType: !2235, size: 64, offset: 704)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2204, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2204, file: !367, line: 300, baseType: !2280, size: 96, offset: 800)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2281)
!2281 = !{!2282, !2283, !2284}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2280, file: !367, line: 153, baseType: !22, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2280, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2280, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2204, file: !367, line: 325, baseType: !2286, size: 32, offset: 896)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !2288)
!2288 = !{!2289, !2295, !2296}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2287, file: !463, line: 5074, baseType: !2290, size: 96)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !2291)
!2291 = !{!2292, !2293, !2294}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2290, file: !467, line: 57, baseType: !470, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2290, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2290, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2287, file: !463, line: 5075, baseType: !2235, size: 64, offset: 96)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2287, file: !463, line: 5076, baseType: !2297, offset: 160)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2204, file: !367, line: 343, baseType: !2299, size: 64, offset: 928)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2299, file: !440, line: 63, baseType: !106, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2299, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2305 = !{!2198, !2306, !2309, !2311}
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2200, file: !2308, line: 404, type: !103, isLocal: true, isDefinition: true)
!2308 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2200, file: !2308, line: 405, type: !103, isLocal: true, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "pending_current", scope: !2200, file: !2308, line: 425, type: !2203, isLocal: true, isDefinition: true)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2315, file: !2345, line: 15, type: !1408, isLocal: true, isDefinition: true)
!2315 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2316, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2317, globals: !2342, splitDebugInlining: false, nameTableKind: None)
!2316 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2317 = !{!1556, !102, !748, !106, !1408, !103, !2318, !1099, !436}
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !2320)
!2320 = !{!2321, !2336, !2341}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2319, file: !403, line: 245, baseType: !2322, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !2323)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !2324)
!2324 = !{!2325, !2331}
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !377, line: 38, baseType: !2326, size: 32)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !377, line: 38, size: 32, elements: !2327)
!2327 = !{!2328, !2330}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2326, file: !377, line: 39, baseType: !2329, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2326, file: !377, line: 40, baseType: !2329, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !377, line: 42, baseType: !2332, size: 32, offset: 32)
!2332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !377, line: 42, size: 32, elements: !2333)
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2332, file: !377, line: 43, baseType: !2329, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2332, file: !377, line: 44, baseType: !2329, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2319, file: !403, line: 246, baseType: !2337, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !2338)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{null, !2318}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2319, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!2342 = !{!2313, !2343, !2347, !2349}
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2315, file: !2345, line: 19, type: !2346, isLocal: true, isDefinition: true)
!2345 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2315, file: !2345, line: 25, type: !103, isLocal: true, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2315, file: !2345, line: 17, type: !2351, isLocal: true, isDefinition: true)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !2323)
!2352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2353, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2358, retainedTypes: !2378, splitDebugInlining: false, nameTableKind: None)
!2357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2358 = !{!2359, !2367}
!2359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2360, line: 69, baseType: !32, size: 32, elements: !2361)
!2360 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2361 = !{!2362, !2363, !2364, !2365, !2366}
!2362 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2363 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2364 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2365 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2366 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2360, line: 56, baseType: !32, size: 32, elements: !2368)
!2368 = !{!2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2369 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2370 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2371 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2372 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2373 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2374 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2375 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2376 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2377 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2378 = !{!103, !2359, !2367, !2379, !418, !170, !2381, !2382, !161, !422, !150, !356, !102, !22, !32, !2384, !2385, !2386, !2387, !2388, !437, !2389, !2380, !2390, !2391, !2392, !2393}
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2360, line: 31, baseType: !2380)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !437)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !357, line: 329, baseType: !32)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2360, line: 32, baseType: !2383)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1409)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!2387 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !357, line: 145, baseType: !103)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2395 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2397, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2398, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2397 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2398 = !{!2399, !30}
!2399 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2400, line: 27, baseType: !32, size: 32, elements: !2401)
!2400 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2401 = !{!2402, !2403, !2404, !2405, !2406}
!2402 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2403 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2404 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2405 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2406 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2407 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2408, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2409, retainedTypes: !2410, splitDebugInlining: false, nameTableKind: None)
!2408 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2409 = !{!581, !2399, !30}
!2410 = !{!774, !2411, !102, !103, !748, !106, !160, !2428}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !512, line: 426, baseType: !2413)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 411, size: 28704, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2413, file: !512, line: 413, baseType: !1571, size: 256)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2413, file: !512, line: 414, baseType: !1573, size: 768, offset: 256)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2413, file: !512, line: 415, baseType: !1571, size: 256, offset: 1024)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2413, file: !512, line: 416, baseType: !1573, size: 768, offset: 1280)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2413, file: !512, line: 417, baseType: !1571, size: 256, offset: 2048)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2413, file: !512, line: 418, baseType: !1573, size: 768, offset: 2304)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2413, file: !512, line: 419, baseType: !1571, size: 256, offset: 3072)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2413, file: !512, line: 420, baseType: !1573, size: 768, offset: 3328)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2413, file: !512, line: 421, baseType: !1571, size: 256, offset: 4096)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2413, file: !512, line: 422, baseType: !1584, size: 1792, offset: 4352)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2413, file: !512, line: 423, baseType: !1588, size: 1920, offset: 6144)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2413, file: !512, line: 424, baseType: !1593, size: 20608, offset: 8064)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2413, file: !512, line: 425, baseType: !127, size: 32, offset: 28672)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !2430)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !2431)
!2431 = !{!2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2430, file: !512, line: 447, baseType: !516, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2430, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2430, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2430, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2430, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2430, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2430, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2430, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2430, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2430, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2430, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2430, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2430, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2430, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2430, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2430, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2430, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2430, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2430, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2430, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2430, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!2453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2457, splitDebugInlining: false, nameTableKind: None)
!2456 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2457 = !{!102, !103, !22, !2458}
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2460, file: !512, line: 447, baseType: !516, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2460, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2460, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2460, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2460, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2460, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2460, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2460, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2460, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2460, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2460, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2460, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2460, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2460, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2460, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2460, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2460, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2460, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2460, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2460, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2460, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!2483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2484, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2485, splitDebugInlining: false, nameTableKind: None)
!2484 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2485 = !{!2486, !102, !103}
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !2489)
!2489 = !{!2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2488, file: !512, line: 447, baseType: !516, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2488, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2488, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2488, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2488, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2488, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2488, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2488, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2488, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2488, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2488, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2488, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2488, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2488, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2488, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2488, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2488, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2488, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2488, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2488, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2488, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2513, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2513 = !{!2514, !106, !102, !103}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2516, line: 98, size: 256, elements: !2517)
!2516 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2517 = !{!2518, !2523, !2528, !2533, !2538, !2543, !2548, !2553}
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 99, baseType: !2519, size: 32)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 99, size: 32, elements: !2520)
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2519, file: !2516, line: 99, baseType: !106, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2519, file: !2516, line: 99, baseType: !106, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 100, baseType: !2524, size: 32, offset: 32)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 100, size: 32, elements: !2525)
!2525 = !{!2526, !2527}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2524, file: !2516, line: 100, baseType: !106, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2524, file: !2516, line: 100, baseType: !106, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 101, baseType: !2529, size: 32, offset: 64)
!2529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 101, size: 32, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2529, file: !2516, line: 101, baseType: !106, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2529, file: !2516, line: 101, baseType: !106, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 102, baseType: !2534, size: 32, offset: 96)
!2534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 102, size: 32, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2534, file: !2516, line: 102, baseType: !106, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2534, file: !2516, line: 102, baseType: !106, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 103, baseType: !2539, size: 32, offset: 128)
!2539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 103, size: 32, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2539, file: !2516, line: 103, baseType: !106, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2539, file: !2516, line: 103, baseType: !106, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 104, baseType: !2544, size: 32, offset: 160)
!2544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 104, size: 32, elements: !2545)
!2545 = !{!2546, !2547}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2544, file: !2516, line: 104, baseType: !106, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2544, file: !2516, line: 104, baseType: !106, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, scope: !2515, file: !2516, line: 105, baseType: !2549, size: 32, offset: 192)
!2549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2515, file: !2516, line: 105, size: 32, elements: !2550)
!2550 = !{!2551, !2552}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2549, file: !2516, line: 105, baseType: !106, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2549, file: !2516, line: 105, baseType: !106, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2515, file: !2516, line: 106, baseType: !106, size: 32, offset: 224)
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2398, retainedTypes: !2556, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2556 = !{!2557, !102, !103, !2582, !2625, !106}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !2559)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2559, file: !512, line: 447, baseType: !516, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2559, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2559, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2559, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2559, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2559, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2559, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2559, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2559, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2559, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2559, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2559, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2559, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2559, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2559, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2559, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2559, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2559, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2559, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2559, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2559, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2516, line: 141, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2516, line: 97, size: 256, elements: !2585)
!2585 = !{!2586}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2584, file: !2516, line: 107, baseType: !2587, size: 256)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2516, line: 98, size: 256, elements: !2588)
!2588 = !{!2589, !2594, !2599, !2604, !2609, !2614, !2619, !2624}
!2589 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 99, baseType: !2590, size: 32)
!2590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 99, size: 32, elements: !2591)
!2591 = !{!2592, !2593}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2590, file: !2516, line: 99, baseType: !106, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2590, file: !2516, line: 99, baseType: !106, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 100, baseType: !2595, size: 32, offset: 32)
!2595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 100, size: 32, elements: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2595, file: !2516, line: 100, baseType: !106, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2595, file: !2516, line: 100, baseType: !106, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 101, baseType: !2600, size: 32, offset: 64)
!2600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 101, size: 32, elements: !2601)
!2601 = !{!2602, !2603}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2600, file: !2516, line: 101, baseType: !106, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2600, file: !2516, line: 101, baseType: !106, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 102, baseType: !2605, size: 32, offset: 96)
!2605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 102, size: 32, elements: !2606)
!2606 = !{!2607, !2608}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2605, file: !2516, line: 102, baseType: !106, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2605, file: !2516, line: 102, baseType: !106, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 103, baseType: !2610, size: 32, offset: 128)
!2610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 103, size: 32, elements: !2611)
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2610, file: !2516, line: 103, baseType: !106, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2610, file: !2516, line: 103, baseType: !106, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 104, baseType: !2615, size: 32, offset: 160)
!2615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 104, size: 32, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2615, file: !2516, line: 104, baseType: !106, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2615, file: !2516, line: 104, baseType: !106, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !2516, line: 105, baseType: !2620, size: 32, offset: 192)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !2516, line: 105, size: 32, elements: !2621)
!2621 = !{!2622, !2623}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2620, file: !2516, line: 105, baseType: !106, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2620, file: !2516, line: 105, baseType: !106, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2587, file: !2516, line: 106, baseType: !106, size: 32, offset: 224)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!2626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2627, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1554, retainedTypes: !2628, splitDebugInlining: false, nameTableKind: None)
!2627 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2628 = !{!774, !748, !160, !106, !2629, !2646}
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !512, line: 426, baseType: !2631)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 411, size: 28704, elements: !2632)
!2632 = !{!2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2631, file: !512, line: 413, baseType: !1571, size: 256)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2631, file: !512, line: 414, baseType: !1573, size: 768, offset: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2631, file: !512, line: 415, baseType: !1571, size: 256, offset: 1024)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2631, file: !512, line: 416, baseType: !1573, size: 768, offset: 1280)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2631, file: !512, line: 417, baseType: !1571, size: 256, offset: 2048)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2631, file: !512, line: 418, baseType: !1573, size: 768, offset: 2304)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2631, file: !512, line: 419, baseType: !1571, size: 256, offset: 3072)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2631, file: !512, line: 420, baseType: !1573, size: 768, offset: 3328)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2631, file: !512, line: 421, baseType: !1571, size: 256, offset: 4096)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2631, file: !512, line: 422, baseType: !1584, size: 1792, offset: 4352)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2631, file: !512, line: 423, baseType: !1588, size: 1920, offset: 6144)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2631, file: !512, line: 424, baseType: !1593, size: 20608, offset: 8064)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2631, file: !512, line: 425, baseType: !127, size: 32, offset: 28672)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !2648)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !2649)
!2649 = !{!2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2648, file: !512, line: 447, baseType: !516, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2648, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2648, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2648, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2648, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2648, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2648, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2648, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2648, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2648, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2648, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2648, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2648, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2648, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2648, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2648, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2648, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2648, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2648, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2648, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2648, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!2671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2673, splitDebugInlining: false, nameTableKind: None)
!2672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2673 = !{!2674, !102, !103}
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !512, line: 468, baseType: !2676)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 445, size: 1120, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2676, file: !512, line: 447, baseType: !516, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2676, file: !512, line: 448, baseType: !127, size: 32, offset: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2676, file: !512, line: 449, baseType: !127, size: 32, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2676, file: !512, line: 450, baseType: !127, size: 32, offset: 96)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2676, file: !512, line: 451, baseType: !127, size: 32, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2676, file: !512, line: 452, baseType: !127, size: 32, offset: 160)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2676, file: !512, line: 453, baseType: !1608, size: 96, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2676, file: !512, line: 454, baseType: !127, size: 32, offset: 288)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2676, file: !512, line: 455, baseType: !127, size: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2676, file: !512, line: 456, baseType: !127, size: 32, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2676, file: !512, line: 457, baseType: !127, size: 32, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2676, file: !512, line: 458, baseType: !127, size: 32, offset: 416)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2676, file: !512, line: 459, baseType: !127, size: 32, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2676, file: !512, line: 460, baseType: !127, size: 32, offset: 480)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2676, file: !512, line: 461, baseType: !1619, size: 64, offset: 512)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2676, file: !512, line: 462, baseType: !516, size: 32, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2676, file: !512, line: 463, baseType: !516, size: 32, offset: 608)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2676, file: !512, line: 464, baseType: !1623, size: 128, offset: 640)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2676, file: !512, line: 465, baseType: !1625, size: 160, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2676, file: !512, line: 466, baseType: !1627, size: 160, offset: 928)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2676, file: !512, line: 467, baseType: !127, size: 32, offset: 1088)
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2701, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2701 = !{!152, !1099, !356, !932, !2702, !161, !102}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2706, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2706 = !{!2707}
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 586, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 550, size: 1216, elements: !2710)
!2710 = !{!2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2709, file: !123, line: 552, baseType: !127, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2709, file: !123, line: 553, baseType: !127, size: 32, offset: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2709, file: !123, line: 554, baseType: !127, size: 32, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2709, file: !123, line: 555, baseType: !127, size: 32, offset: 96)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2709, file: !123, line: 556, baseType: !127, size: 32, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2709, file: !123, line: 557, baseType: !127, size: 32, offset: 160)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2709, file: !123, line: 558, baseType: !127, size: 32, offset: 192)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2709, file: !123, line: 559, baseType: !106, size: 32, offset: 224)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2709, file: !123, line: 560, baseType: !127, size: 32, offset: 256)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2709, file: !123, line: 561, baseType: !127, size: 32, offset: 288)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2709, file: !123, line: 562, baseType: !801, size: 64, offset: 320)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2709, file: !123, line: 563, baseType: !127, size: 32, offset: 384)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2709, file: !123, line: 564, baseType: !127, size: 32, offset: 416)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2709, file: !123, line: 565, baseType: !127, size: 32, offset: 448)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2709, file: !123, line: 566, baseType: !106, size: 32, offset: 480)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2709, file: !123, line: 567, baseType: !127, size: 32, offset: 512)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2709, file: !123, line: 568, baseType: !127, size: 32, offset: 544)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2709, file: !123, line: 569, baseType: !801, size: 64, offset: 576)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2709, file: !123, line: 570, baseType: !127, size: 32, offset: 640)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2709, file: !123, line: 571, baseType: !127, size: 32, offset: 672)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2709, file: !123, line: 572, baseType: !127, size: 32, offset: 704)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2709, file: !123, line: 573, baseType: !106, size: 32, offset: 736)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2709, file: !123, line: 574, baseType: !127, size: 32, offset: 768)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2709, file: !123, line: 575, baseType: !127, size: 32, offset: 800)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2709, file: !123, line: 576, baseType: !801, size: 64, offset: 832)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2709, file: !123, line: 577, baseType: !127, size: 32, offset: 896)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2709, file: !123, line: 578, baseType: !127, size: 32, offset: 928)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2709, file: !123, line: 579, baseType: !801, size: 64, offset: 960)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2709, file: !123, line: 580, baseType: !127, size: 32, offset: 1024)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2709, file: !123, line: 581, baseType: !127, size: 32, offset: 1056)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2709, file: !123, line: 582, baseType: !127, size: 32, offset: 1088)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2709, file: !123, line: 583, baseType: !127, size: 32, offset: 1120)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2709, file: !123, line: 584, baseType: !127, size: 32, offset: 1152)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2709, file: !123, line: 585, baseType: !127, size: 32, offset: 1184)
!2745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2748, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2749, retainedTypes: !2765, splitDebugInlining: false, nameTableKind: None)
!2748 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2749 = !{!2750, !2757, !2761}
!2750 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2751, line: 38, baseType: !32, size: 32, elements: !2752)
!2751 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2752 = !{!2753, !2754, !2755, !2756}
!2753 = !DIEnumerator(name: "HAL_OK", value: 0)
!2754 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2755 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2756 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2757 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !781, line: 184, baseType: !32, size: 32, elements: !2758)
!2758 = !{!2759, !2760}
!2759 = !DIEnumerator(name: "RESET", value: 0)
!2760 = !DIEnumerator(name: "SET", value: 1)
!2761 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !781, line: 190, baseType: !32, size: 32, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIEnumerator(name: "DISABLE", value: 0)
!2764 = !DIEnumerator(name: "ENABLE", value: 1)
!2765 = !{!2766, !106, !2804, !1410, !160, !1408, !102}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 586, baseType: !2768)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 550, size: 1216, elements: !2769)
!2769 = !{!2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2768, file: !123, line: 552, baseType: !127, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2768, file: !123, line: 553, baseType: !127, size: 32, offset: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2768, file: !123, line: 554, baseType: !127, size: 32, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2768, file: !123, line: 555, baseType: !127, size: 32, offset: 96)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2768, file: !123, line: 556, baseType: !127, size: 32, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2768, file: !123, line: 557, baseType: !127, size: 32, offset: 160)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2768, file: !123, line: 558, baseType: !127, size: 32, offset: 192)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2768, file: !123, line: 559, baseType: !106, size: 32, offset: 224)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2768, file: !123, line: 560, baseType: !127, size: 32, offset: 256)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2768, file: !123, line: 561, baseType: !127, size: 32, offset: 288)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2768, file: !123, line: 562, baseType: !801, size: 64, offset: 320)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2768, file: !123, line: 563, baseType: !127, size: 32, offset: 384)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2768, file: !123, line: 564, baseType: !127, size: 32, offset: 416)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2768, file: !123, line: 565, baseType: !127, size: 32, offset: 448)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2768, file: !123, line: 566, baseType: !106, size: 32, offset: 480)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2768, file: !123, line: 567, baseType: !127, size: 32, offset: 512)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2768, file: !123, line: 568, baseType: !127, size: 32, offset: 544)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2768, file: !123, line: 569, baseType: !801, size: 64, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2768, file: !123, line: 570, baseType: !127, size: 32, offset: 640)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2768, file: !123, line: 571, baseType: !127, size: 32, offset: 672)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2768, file: !123, line: 572, baseType: !127, size: 32, offset: 704)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2768, file: !123, line: 573, baseType: !106, size: 32, offset: 736)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2768, file: !123, line: 574, baseType: !127, size: 32, offset: 768)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2768, file: !123, line: 575, baseType: !127, size: 32, offset: 800)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2768, file: !123, line: 576, baseType: !801, size: 64, offset: 832)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2768, file: !123, line: 577, baseType: !127, size: 32, offset: 896)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2768, file: !123, line: 578, baseType: !127, size: 32, offset: 928)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2768, file: !123, line: 579, baseType: !801, size: 64, offset: 960)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2768, file: !123, line: 580, baseType: !127, size: 32, offset: 1024)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2768, file: !123, line: 581, baseType: !127, size: 32, offset: 1056)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2768, file: !123, line: 582, baseType: !127, size: 32, offset: 1088)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2768, file: !123, line: 583, baseType: !127, size: 32, offset: 1120)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2768, file: !123, line: 584, baseType: !127, size: 32, offset: 1152)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2768, file: !123, line: 585, baseType: !127, size: 32, offset: 1184)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !123, line: 544, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 540, size: 64, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2806, file: !123, line: 542, baseType: !127, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2806, file: !123, line: 543, baseType: !127, size: 32, offset: 32)
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2812, retainedTypes: !2813, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2812 = !{!780}
!2813 = !{!2814, !106, !2822, !2828, !2839}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !512, line: 770, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !512, line: 764, size: 128, elements: !2817)
!2817 = !{!2818, !2819, !2820, !2821}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2816, file: !512, line: 766, baseType: !127, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2816, file: !512, line: 767, baseType: !127, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2816, file: !512, line: 768, baseType: !127, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2816, file: !512, line: 769, baseType: !516, size: 32, offset: 96)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !123, line: 544, baseType: !2824)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 540, size: 64, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2824, file: !123, line: 542, baseType: !127, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2824, file: !123, line: 543, baseType: !127, size: 32, offset: 32)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !123, line: 407, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 398, size: 224, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2830, file: !123, line: 400, baseType: !127, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2830, file: !123, line: 401, baseType: !127, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2830, file: !123, line: 402, baseType: !127, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2830, file: !123, line: 403, baseType: !127, size: 32, offset: 96)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2830, file: !123, line: 404, baseType: !127, size: 32, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2830, file: !123, line: 405, baseType: !127, size: 32, offset: 160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2830, file: !123, line: 406, baseType: !127, size: 32, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !123, line: 586, baseType: !2841)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 550, size: 1216, elements: !2842)
!2842 = !{!2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2841, file: !123, line: 552, baseType: !127, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2841, file: !123, line: 553, baseType: !127, size: 32, offset: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2841, file: !123, line: 554, baseType: !127, size: 32, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2841, file: !123, line: 555, baseType: !127, size: 32, offset: 96)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2841, file: !123, line: 556, baseType: !127, size: 32, offset: 128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2841, file: !123, line: 557, baseType: !127, size: 32, offset: 160)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2841, file: !123, line: 558, baseType: !127, size: 32, offset: 192)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2841, file: !123, line: 559, baseType: !106, size: 32, offset: 224)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2841, file: !123, line: 560, baseType: !127, size: 32, offset: 256)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2841, file: !123, line: 561, baseType: !127, size: 32, offset: 288)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2841, file: !123, line: 562, baseType: !801, size: 64, offset: 320)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2841, file: !123, line: 563, baseType: !127, size: 32, offset: 384)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2841, file: !123, line: 564, baseType: !127, size: 32, offset: 416)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2841, file: !123, line: 565, baseType: !127, size: 32, offset: 448)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2841, file: !123, line: 566, baseType: !106, size: 32, offset: 480)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2841, file: !123, line: 567, baseType: !127, size: 32, offset: 512)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2841, file: !123, line: 568, baseType: !127, size: 32, offset: 544)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2841, file: !123, line: 569, baseType: !801, size: 64, offset: 576)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2841, file: !123, line: 570, baseType: !127, size: 32, offset: 640)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2841, file: !123, line: 571, baseType: !127, size: 32, offset: 672)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2841, file: !123, line: 572, baseType: !127, size: 32, offset: 704)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2841, file: !123, line: 573, baseType: !106, size: 32, offset: 736)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2841, file: !123, line: 574, baseType: !127, size: 32, offset: 768)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2841, file: !123, line: 575, baseType: !127, size: 32, offset: 800)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2841, file: !123, line: 576, baseType: !801, size: 64, offset: 832)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2841, file: !123, line: 577, baseType: !127, size: 32, offset: 896)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2841, file: !123, line: 578, baseType: !127, size: 32, offset: 928)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2841, file: !123, line: 579, baseType: !801, size: 64, offset: 960)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2841, file: !123, line: 580, baseType: !127, size: 32, offset: 1024)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2841, file: !123, line: 581, baseType: !127, size: 32, offset: 1056)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2841, file: !123, line: 582, baseType: !127, size: 32, offset: 1088)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2841, file: !123, line: 583, baseType: !127, size: 32, offset: 1120)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2841, file: !123, line: 584, baseType: !127, size: 32, offset: 1152)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2841, file: !123, line: 585, baseType: !127, size: 32, offset: 1184)
!2877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2878, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2879, splitDebugInlining: false, nameTableKind: None)
!2878 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2879 = !{!102, !356}
!2880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2882, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2882 = !{!2883, !2890, !30}
!2883 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2884, line: 14, baseType: !32, size: 32, elements: !2885)
!2884 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2885 = !{!2886, !2887, !2888, !2889}
!2886 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2887 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2888 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2889 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2890 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2884, line: 42, baseType: !32, size: 32, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897}
!2892 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2893 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2894 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2895 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2896 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2897 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2902, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2902 = !{!22, !102, !103}
!2903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!2905 = !{!"Ubuntu clang version 14.0.6"}
!2906 = !{i32 7, !"Dwarf Version", i32 4}
!2907 = !{i32 2, !"Debug Info Version", i32 3}
!2908 = !{i32 1, !"wchar_size", i32 4}
!2909 = !{i32 1, !"min_enum_size", i32 4}
!2910 = !{i32 1, !"branch-target-enforcement", i32 0}
!2911 = !{i32 1, !"sign-return-address", i32 0}
!2912 = !{i32 1, !"sign-return-address-all", i32 0}
!2913 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2914 = !{i32 7, !"frame-pointer", i32 2}
!2915 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2916, file: !2916, line: 26, type: !2917, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !478)
!2916 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2917 = !DISubroutineType(types: !2918)
!2918 = !{null}
!2919 = !DILocation(line: 28, column: 1, scope: !2915)
!2920 = !{i64 2155360472, i64 2155360492, i64 2155360555}
!2921 = !DILocation(line: 29, column: 1, scope: !2915)
!2922 = !{i64 2155360887, i64 2155360907, i64 2155360970}
!2923 = !DILocation(line: 30, column: 1, scope: !2915)
!2924 = !{i64 2155361306, i64 2155361326, i64 2155361389}
!2925 = !DILocation(line: 31, column: 1, scope: !2915)
!2926 = !{i64 2155361725, i64 2155361745, i64 2155361808}
!2927 = !DILocation(line: 33, column: 1, scope: !2915)
!2928 = !{i64 2155362017, i64 2155362037, i64 2155362100}
!2929 = !DILocation(line: 35, column: 1, scope: !2915)
!2930 = !{i64 2155362342, i64 2155362362, i64 2155362425}
!2931 = !DILocation(line: 50, column: 1, scope: !2915)
!2932 = !{i64 2155362769, i64 2155362789, i64 2155362852}
!2933 = !DILocation(line: 54, column: 1, scope: !2915)
!2934 = !{i64 2155367269, i64 2155367289, i64 2155367352}
!2935 = !DILocation(line: 61, column: 1, scope: !2915)
!2936 = !{i64 2155367586, i64 2155367606, i64 2155367669}
!2937 = !DILocation(line: 63, column: 1, scope: !2915)
!2938 = !{i64 2155367966, i64 2155367986, i64 2155368049}
!2939 = !DILocation(line: 64, column: 1, scope: !2915)
!2940 = !{i64 2155368488, i64 2155368508, i64 2155368571}
!2941 = !DILocation(line: 65, column: 1, scope: !2915)
!2942 = !{i64 2155368986, i64 2155369006, i64 2155369069}
!2943 = !DILocation(line: 66, column: 1, scope: !2915)
!2944 = !{i64 2155369468, i64 2155369488, i64 2155369551}
!2945 = !DILocation(line: 67, column: 1, scope: !2915)
!2946 = !{i64 2155369975, i64 2155369995, i64 2155370058}
!2947 = !DILocation(line: 68, column: 1, scope: !2915)
!2948 = !{i64 2155370463, i64 2155370483, i64 2155370546}
!2949 = !DILocation(line: 70, column: 1, scope: !2915)
!2950 = !{i64 2155370931, i64 2155370951, i64 2155371014}
!2951 = !DILocation(line: 71, column: 1, scope: !2915)
!2952 = !{i64 2155371373, i64 2155371393, i64 2155371456}
!2953 = !DILocation(line: 72, column: 1, scope: !2915)
!2954 = !{i64 2155371831, i64 2155371851, i64 2155371914}
!2955 = !DILocation(line: 79, column: 1, scope: !2915)
!2956 = !{i64 2155372285, i64 2155372305, i64 2155372368}
!2957 = !DILocation(line: 80, column: 1, scope: !2915)
!2958 = !{i64 2155372796, i64 2155372816, i64 2155372879}
!2959 = !DILocation(line: 82, column: 1, scope: !2915)
!2960 = !{i64 2155373287, i64 2155373307, i64 2155373370}
!2961 = !DILocation(line: 97, column: 1, scope: !2915)
!2962 = !{i64 2155373624, i64 2155373644, i64 2155373707}
!2963 = !DILocation(line: 99, column: 1, scope: !2915)
!2964 = !{i64 2155373842, i64 2155373862, i64 2155373925}
!2965 = !DILocation(line: 102, column: 1, scope: !2915)
!2966 = !{i64 2155374099, i64 2155374119, i64 2155374182}
!2967 = !DILocation(line: 105, column: 1, scope: !2915)
!2968 = !{i64 2155374339, i64 2155374359, i64 2155374422}
!2969 = !DILocation(line: 115, column: 1, scope: !2915)
!2970 = !{i64 2155374678, i64 2155374698, i64 2155374761}
!2971 = !DILocation(line: 118, column: 1, scope: !2915)
!2972 = !{i64 2155375022, i64 2155375042, i64 2155375105}
!2973 = !DILocation(line: 32, column: 1, scope: !2974)
!2974 = !DILexicalBlockFile(scope: !2915, file: !2975, discriminator: 0)
!2975 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2976 = !{i64 2155375378, i64 2155375398, i64 2155375461}
!2977 = !DILocation(line: 33, column: 1, scope: !2974)
!2978 = !{i64 2155375890, i64 2155375910, i64 2155375973}
!2979 = !DILocation(line: 53, column: 1, scope: !2974)
!2980 = !{i64 2155376398, i64 2155376418, i64 2155376481}
!2981 = !DILocation(line: 54, column: 1, scope: !2974)
!2982 = !{i64 2155380877, i64 2155380897, i64 2155380960}
!2983 = !DILocation(line: 55, column: 1, scope: !2974)
!2984 = !{i64 2155381295, i64 2155381315, i64 2155381378}
!2985 = !DILocation(line: 56, column: 1, scope: !2974)
!2986 = !{i64 2155381713, i64 2155381733, i64 2155381796}
!2987 = !DILocation(line: 57, column: 1, scope: !2974)
!2988 = !{i64 2155382131, i64 2155382151, i64 2155382214}
!2989 = !DILocation(line: 58, column: 1, scope: !2974)
!2990 = !{i64 2155382549, i64 2155382569, i64 2155382632}
!2991 = !DILocation(line: 59, column: 1, scope: !2974)
!2992 = !{i64 2155382967, i64 2155382987, i64 2155383050}
!2993 = !DILocation(line: 60, column: 1, scope: !2974)
!2994 = !{i64 2155383391, i64 2155383411, i64 2155383474}
!2995 = !DILocation(line: 61, column: 1, scope: !2974)
!2996 = !{i64 2155383708, i64 2155383728, i64 2155383791}
!2997 = !DILocation(line: 70, column: 1, scope: !2974)
!2998 = !{i64 2155383937, i64 2155383957, i64 2155384020}
!2999 = !DILocation(line: 72, column: 1, scope: !2974)
!3000 = !{i64 2155384269, i64 2155384289, i64 2155384352}
!3001 = !DILocation(line: 73, column: 1, scope: !2974)
!3002 = !{i64 2155384719, i64 2155384739, i64 2155384802}
!3003 = !DILocation(line: 74, column: 1, scope: !2974)
!3004 = !{i64 2155385169, i64 2155385189, i64 2155385252}
!3005 = !DILocation(line: 75, column: 1, scope: !2974)
!3006 = !{i64 2155385619, i64 2155385639, i64 2155385702}
!3007 = !DILocation(line: 76, column: 1, scope: !2974)
!3008 = !{i64 2155386069, i64 2155386089, i64 2155386152}
!3009 = !DILocation(line: 77, column: 1, scope: !2974)
!3010 = !{i64 2155386519, i64 2155386539, i64 2155386602}
!3011 = !DILocation(line: 78, column: 1, scope: !2974)
!3012 = !{i64 2155386969, i64 2155386989, i64 2155387052}
!3013 = !DILocation(line: 79, column: 1, scope: !2974)
!3014 = !{i64 2155387419, i64 2155387439, i64 2155387502}
!3015 = !DILocation(line: 80, column: 1, scope: !2974)
!3016 = !{i64 2155387872, i64 2155387892, i64 2155387955}
!3017 = !DILocation(line: 84, column: 1, scope: !2974)
!3018 = !{i64 2155388204, i64 2155388224, i64 2155388287}
!3019 = !DILocation(line: 91, column: 1, scope: !2974)
!3020 = !{i64 2155388601, i64 2155388621, i64 2155388684}
!3021 = !DILocation(line: 93, column: 1, scope: !2974)
!3022 = !{i64 2155388968, i64 2155388988, i64 2155389051}
!3023 = !DILocation(line: 106, column: 1, scope: !2974)
!3024 = !{i64 2155389238, i64 2155389258, i64 2155389321}
!3025 = !DILocation(line: 11, column: 1, scope: !3026)
!3026 = !DILexicalBlockFile(scope: !2915, file: !3027, discriminator: 0)
!3027 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3028 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 13, type: !2917, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !478)
!3029 = !DILocation(line: 15, column: 47, scope: !3028)
!3030 = !DILocation(line: 15, column: 2, scope: !3028)
!3031 = !DILocation(line: 17, column: 14, scope: !3028)
!3032 = !DILocation(line: 22, column: 2, scope: !3028)
!3033 = !DILocation(line: 23, column: 2, scope: !3028)
!3034 = !DILocation(line: 24, column: 1, scope: !3028)
!3035 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !112, file: !112, line: 45, type: !114, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3036)
!3036 = !{!3037}
!3037 = !DILocalVariable(name: "c", arg: 1, scope: !3035, file: !112, line: 45, type: !103)
!3038 = !DILocation(line: 0, scope: !3035)
!3039 = !DILocation(line: 50, column: 2, scope: !3035)
!3040 = distinct !DISubprogram(name: "__printk_hook_install", scope: !112, file: !112, line: 63, type: !3041, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3043)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{null, !113}
!3043 = !{!3044}
!3044 = !DILocalVariable(name: "fn", arg: 1, scope: !3040, file: !112, line: 63, type: !113)
!3045 = !DILocation(line: 0, scope: !3040)
!3046 = !DILocation(line: 65, column: 12, scope: !3040)
!3047 = !DILocation(line: 66, column: 1, scope: !3040)
!3048 = distinct !DISubprogram(name: "__printk_get_hook", scope: !112, file: !112, line: 76, type: !3049, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !478)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!102}
!3051 = !DILocation(line: 78, column: 9, scope: !3048)
!3052 = !DILocation(line: 78, column: 2, scope: !3048)
!3053 = distinct !DISubprogram(name: "vprintk", scope: !112, file: !112, line: 113, type: !3054, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3063)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{null, !150, !3056}
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3057, line: 99, baseType: !3058)
!3057 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3058 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3057, line: 40, baseType: !3059)
!3059 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !112, baseType: !3060)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3061)
!3061 = !{!3062}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3060, file: !112, line: 79, baseType: !102, size: 32)
!3063 = !{!3064, !3065, !3066}
!3064 = !DILocalVariable(name: "fmt", arg: 1, scope: !3053, file: !112, line: 113, type: !150)
!3065 = !DILocalVariable(name: "ap", arg: 2, scope: !3053, file: !112, line: 113, type: !3056)
!3066 = !DILocalVariable(name: "ctx", scope: !3067, file: !112, line: 121, type: !3069)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !112, line: 120, column: 27)
!3068 = distinct !DILexicalBlock(scope: !3053, file: !112, line: 120, column: 6)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !112, line: 81, size: 32, elements: !3070)
!3070 = !{!3071, !3072}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3069, file: !112, line: 85, baseType: !32, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3069, file: !112, line: 86, baseType: !3073, offset: 32)
!3073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, elements: !3074)
!3074 = !{!3075}
!3075 = !DISubrange(count: 0)
!3076 = !DILocation(line: 0, scope: !3053)
!3077 = !DILocation(line: 148, column: 3, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3068, file: !112, line: 138, column: 9)
!3079 = !DILocation(line: 155, column: 1, scope: !3053)
!3080 = distinct !DISubprogram(name: "char_out", scope: !112, file: !112, line: 107, type: !3081, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3083)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!103, !103, !102}
!3083 = !{!3084, !3085}
!3084 = !DILocalVariable(name: "c", arg: 1, scope: !3080, file: !112, line: 107, type: !103)
!3085 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3080, file: !112, line: 107, type: !102)
!3086 = !DILocation(line: 0, scope: !3080)
!3087 = !DILocation(line: 110, column: 9, scope: !3080)
!3088 = !DILocation(line: 110, column: 2, scope: !3080)
!3089 = distinct !DISubprogram(name: "cbvprintf", scope: !3090, file: !3090, line: 739, type: !3091, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3097)
!3090 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!103, !3093, !102, !150, !3056}
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3090, line: 297, baseType: !3094)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!103, null}
!3097 = !{!3098, !3099, !3100, !3101}
!3098 = !DILocalVariable(name: "out", arg: 1, scope: !3089, file: !3090, line: 739, type: !3093)
!3099 = !DILocalVariable(name: "ctx", arg: 2, scope: !3089, file: !3090, line: 739, type: !102)
!3100 = !DILocalVariable(name: "format", arg: 3, scope: !3089, file: !3090, line: 739, type: !150)
!3101 = !DILocalVariable(name: "ap", arg: 4, scope: !3089, file: !3090, line: 739, type: !3056)
!3102 = !DILocation(line: 0, scope: !3089)
!3103 = !DILocation(line: 741, column: 9, scope: !3089)
!3104 = !DILocation(line: 741, column: 2, scope: !3089)
!3105 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !112, file: !112, line: 157, type: !3106, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3108)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !1099, !356}
!3108 = !{!3109, !3110, !3111}
!3109 = !DILocalVariable(name: "c", arg: 1, scope: !3105, file: !112, line: 157, type: !1099)
!3110 = !DILocalVariable(name: "n", arg: 2, scope: !3105, file: !112, line: 157, type: !356)
!3111 = !DILocalVariable(name: "i", scope: !3105, file: !112, line: 159, type: !356)
!3112 = !DILocation(line: 0, scope: !3105)
!3113 = !DILocation(line: 164, column: 16, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3115, file: !112, line: 164, column: 2)
!3115 = distinct !DILexicalBlock(scope: !3105, file: !112, line: 164, column: 2)
!3116 = !DILocation(line: 164, column: 2, scope: !3115)
!3117 = !DILocation(line: 165, column: 3, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3114, file: !112, line: 164, column: 26)
!3119 = !DILocation(line: 165, column: 13, scope: !3118)
!3120 = !DILocation(line: 164, column: 22, scope: !3114)
!3121 = distinct !{!3121, !3116, !3122}
!3122 = !DILocation(line: 166, column: 2, scope: !3115)
!3123 = !DILocation(line: 171, column: 1, scope: !3105)
!3124 = distinct !DISubprogram(name: "printk", scope: !112, file: !112, line: 203, type: !3125, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3127)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{null, !150, null}
!3127 = !{!3128, !3129}
!3128 = !DILocalVariable(name: "fmt", arg: 1, scope: !3124, file: !112, line: 203, type: !150)
!3129 = !DILocalVariable(name: "ap", scope: !3124, file: !112, line: 205, type: !3056)
!3130 = !DILocation(line: 0, scope: !3124)
!3131 = !DILocation(line: 205, column: 2, scope: !3124)
!3132 = !DILocation(line: 205, column: 10, scope: !3124)
!3133 = !DILocation(line: 207, column: 2, scope: !3124)
!3134 = !DILocation(line: 209, column: 2, scope: !3124)
!3135 = !DILocation(line: 211, column: 2, scope: !3124)
!3136 = !DILocation(line: 212, column: 1, scope: !3124)
!3137 = distinct !DISubprogram(name: "snprintk", scope: !112, file: !112, line: 239, type: !3138, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3140)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!103, !1099, !356, !150, null}
!3140 = !{!3141, !3142, !3143, !3144, !3145}
!3141 = !DILocalVariable(name: "str", arg: 1, scope: !3137, file: !112, line: 239, type: !1099)
!3142 = !DILocalVariable(name: "size", arg: 2, scope: !3137, file: !112, line: 239, type: !356)
!3143 = !DILocalVariable(name: "fmt", arg: 3, scope: !3137, file: !112, line: 239, type: !150)
!3144 = !DILocalVariable(name: "ap", scope: !3137, file: !112, line: 241, type: !3056)
!3145 = !DILocalVariable(name: "ret", scope: !3137, file: !112, line: 242, type: !103)
!3146 = !DILocation(line: 0, scope: !3137)
!3147 = !DILocation(line: 241, column: 2, scope: !3137)
!3148 = !DILocation(line: 241, column: 10, scope: !3137)
!3149 = !DILocation(line: 244, column: 2, scope: !3137)
!3150 = !DILocation(line: 245, column: 8, scope: !3137)
!3151 = !DILocation(line: 246, column: 2, scope: !3137)
!3152 = !DILocation(line: 249, column: 1, scope: !3137)
!3153 = !DILocation(line: 248, column: 2, scope: !3137)
!3154 = distinct !DISubprogram(name: "vsnprintk", scope: !112, file: !112, line: 251, type: !3155, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3157)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!103, !1099, !356, !150, !3056}
!3157 = !{!3158, !3159, !3160, !3161, !3162}
!3158 = !DILocalVariable(name: "str", arg: 1, scope: !3154, file: !112, line: 251, type: !1099)
!3159 = !DILocalVariable(name: "size", arg: 2, scope: !3154, file: !112, line: 251, type: !356)
!3160 = !DILocalVariable(name: "fmt", arg: 3, scope: !3154, file: !112, line: 251, type: !150)
!3161 = !DILocalVariable(name: "ap", arg: 4, scope: !3154, file: !112, line: 251, type: !3056)
!3162 = !DILocalVariable(name: "ctx", scope: !3154, file: !112, line: 253, type: !3163)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !112, line: 217, size: 96, elements: !3164)
!3164 = !{!3165, !3166, !3167}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3163, file: !112, line: 218, baseType: !1099, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3163, file: !112, line: 219, baseType: !103, size: 32, offset: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3163, file: !112, line: 220, baseType: !103, size: 32, offset: 64)
!3168 = !DILocation(line: 0, scope: !3154)
!3169 = !DILocation(line: 253, column: 2, scope: !3154)
!3170 = !DILocation(line: 253, column: 21, scope: !3154)
!3171 = !DILocation(line: 253, column: 27, scope: !3154)
!3172 = !DILocation(line: 255, column: 2, scope: !3154)
!3173 = !DILocation(line: 257, column: 10, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3154, file: !112, line: 257, column: 6)
!3175 = !DILocation(line: 257, column: 22, scope: !3174)
!3176 = !DILocation(line: 257, column: 16, scope: !3174)
!3177 = !DILocation(line: 257, column: 6, scope: !3154)
!3178 = !DILocation(line: 258, column: 3, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3174, file: !112, line: 257, column: 27)
!3180 = !DILocation(line: 258, column: 18, scope: !3179)
!3181 = !DILocation(line: 259, column: 2, scope: !3179)
!3182 = !DILocation(line: 262, column: 1, scope: !3154)
!3183 = !DILocation(line: 261, column: 2, scope: !3154)
!3184 = distinct !DISubprogram(name: "str_out", scope: !112, file: !112, line: 223, type: !3185, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !109, retainedNodes: !3188)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!103, !103, !3187}
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 32)
!3188 = !{!3189, !3190}
!3189 = !DILocalVariable(name: "c", arg: 1, scope: !3184, file: !112, line: 223, type: !103)
!3190 = !DILocalVariable(name: "ctx", arg: 2, scope: !3184, file: !112, line: 223, type: !3187)
!3191 = !DILocation(line: 0, scope: !3184)
!3192 = !DILocation(line: 225, column: 11, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3184, file: !112, line: 225, column: 6)
!3194 = !DILocation(line: 225, column: 15, scope: !3193)
!3195 = !DILocation(line: 0, scope: !3193)
!3196 = !DILocation(line: 225, column: 23, scope: !3193)
!3197 = !DILocation(line: 225, column: 45, scope: !3193)
!3198 = !DILocation(line: 225, column: 37, scope: !3193)
!3199 = !DILocation(line: 225, column: 6, scope: !3184)
!3200 = !DILocation(line: 226, column: 8, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3193, file: !112, line: 225, column: 50)
!3202 = !DILocation(line: 226, column: 13, scope: !3201)
!3203 = !DILocation(line: 227, column: 3, scope: !3201)
!3204 = !DILocation(line: 230, column: 29, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3184, file: !112, line: 230, column: 6)
!3206 = !DILocation(line: 230, column: 17, scope: !3205)
!3207 = !DILocation(line: 230, column: 6, scope: !3184)
!3208 = !DILocation(line: 231, column: 22, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3205, file: !112, line: 230, column: 34)
!3210 = !DILocation(line: 231, column: 3, scope: !3209)
!3211 = !DILocation(line: 231, column: 26, scope: !3209)
!3212 = !DILocation(line: 232, column: 2, scope: !3209)
!3213 = !DILocation(line: 233, column: 28, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3205, file: !112, line: 232, column: 9)
!3215 = !DILocation(line: 233, column: 22, scope: !3214)
!3216 = !DILocation(line: 233, column: 3, scope: !3214)
!3217 = !DILocation(line: 233, column: 26, scope: !3214)
!3218 = !DILocation(line: 237, column: 1, scope: !3184)
!3219 = distinct !DISubprogram(name: "z_thread_entry", scope: !3220, file: !3220, line: 30, type: !3221, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !3228)
!3220 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3221 = !DISubroutineType(types: !3222)
!3222 = !{null, !3223, !102, !102, !102}
!3223 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3224, line: 46, baseType: !3225)
!3224 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{null, !102, !102, !102}
!3228 = !{!3229, !3230, !3231, !3232}
!3229 = !DILocalVariable(name: "entry", arg: 1, scope: !3219, file: !3220, line: 30, type: !3223)
!3230 = !DILocalVariable(name: "p1", arg: 2, scope: !3219, file: !3220, line: 31, type: !102)
!3231 = !DILocalVariable(name: "p2", arg: 3, scope: !3219, file: !3220, line: 31, type: !102)
!3232 = !DILocalVariable(name: "p3", arg: 4, scope: !3219, file: !3220, line: 31, type: !102)
!3233 = !DILocation(line: 0, scope: !3219)
!3234 = !DILocation(line: 36, column: 2, scope: !3219)
!3235 = !DILocation(line: 38, column: 17, scope: !3219)
!3236 = !DILocation(line: 38, column: 2, scope: !3219)
!3237 = !DILocation(line: 45, column: 2, scope: !3219)
!3238 = distinct !DISubprogram(name: "k_current_get", scope: !463, file: !463, line: 530, type: !3239, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !478)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!3241}
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !3242)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 32)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !3244)
!3244 = !{!3245, !3303, !3315, !3316, !3317, !3318, !3324, !3337}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3243, file: !367, line: 247, baseType: !3246, size: 384)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !3247)
!3247 = !{!3248, !3272, !3279, !3280, !3281, !3290, !3291, !3292}
!3248 = !DIDerivedType(tag: DW_TAG_member, scope: !3246, file: !367, line: 60, baseType: !3249, size: 64)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3246, file: !367, line: 60, size: 64, elements: !3250)
!3250 = !{!3251, !3266}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3249, file: !367, line: 61, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !3253)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !3254)
!3254 = !{!3255, !3261}
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !3253, file: !377, line: 38, baseType: !3256, size: 32)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3253, file: !377, line: 38, size: 32, elements: !3257)
!3257 = !{!3258, !3260}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3256, file: !377, line: 39, baseType: !3259, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3256, file: !377, line: 40, baseType: !3259, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, scope: !3253, file: !377, line: 42, baseType: !3262, size: 32, offset: 32)
!3262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3253, file: !377, line: 42, size: 32, elements: !3263)
!3263 = !{!3264, !3265}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3262, file: !377, line: 43, baseType: !3259, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3262, file: !377, line: 44, baseType: !3259, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3249, file: !367, line: 62, baseType: !3267, size: 64)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !3268)
!3268 = !{!3269}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3267, file: !393, line: 50, baseType: !3270, size: 64)
!3270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3271, size: 64, elements: !398)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3246, file: !367, line: 68, baseType: !3273, size: 32, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !3275)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !3276)
!3276 = !{!3277}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3275, file: !403, line: 232, baseType: !3278, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !3253)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3246, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3246, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!3281 = !DIDerivedType(tag: DW_TAG_member, scope: !3246, file: !367, line: 90, baseType: !3282, size: 16, offset: 112)
!3282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3246, file: !367, line: 90, size: 16, elements: !3283)
!3283 = !{!3284, !3289}
!3284 = !DIDerivedType(tag: DW_TAG_member, scope: !3282, file: !367, line: 91, baseType: !3285, size: 16)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3282, file: !367, line: 91, size: 16, elements: !3286)
!3286 = !{!3287, !3288}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3285, file: !367, line: 96, baseType: !417, size: 8)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3285, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3282, file: !367, line: 100, baseType: !421, size: 16)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3246, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3246, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3246, file: !367, line: 131, baseType: !3293, size: 192, offset: 192)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !3294)
!3294 = !{!3295, !3296, !3302}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3293, file: !403, line: 245, baseType: !3252, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3293, file: !403, line: 246, baseType: !3297, size: 32, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !3298)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 32)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{null, !3301}
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3293, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3243, file: !367, line: 250, baseType: !3304, size: 288, offset: 384)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !3305)
!3305 = !{!3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3304, file: !440, line: 26, baseType: !106, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3304, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3304, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3304, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3304, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3304, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3304, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3304, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3304, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3243, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3243, file: !367, line: 256, baseType: !3274, size: 64, offset: 704)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3243, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3243, file: !367, line: 300, baseType: !3319, size: 96, offset: 800)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !3320)
!3320 = !{!3321, !3322, !3323}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3319, file: !367, line: 153, baseType: !22, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3319, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3319, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3243, file: !367, line: 325, baseType: !3325, size: 32, offset: 896)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !3327)
!3327 = !{!3328, !3334, !3335}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3326, file: !463, line: 5074, baseType: !3329, size: 96)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !3330)
!3330 = !{!3331, !3332, !3333}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3329, file: !467, line: 57, baseType: !470, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3329, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3329, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3326, file: !463, line: 5075, baseType: !3274, size: 64, offset: 96)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3326, file: !463, line: 5076, baseType: !3336, offset: 160)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3243, file: !367, line: 343, baseType: !3338, size: 64, offset: 928)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !3339)
!3339 = !{!3340, !3341}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3338, file: !440, line: 63, baseType: !106, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3338, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!3342 = !DILocation(line: 535, column: 9, scope: !3238)
!3343 = !DILocation(line: 535, column: 2, scope: !3238)
!3344 = distinct !DISubprogram(name: "k_thread_abort", scope: !3345, file: !3345, line: 188, type: !3346, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !3348)
!3345 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!3346 = !DISubroutineType(types: !3347)
!3347 = !{null, !3241}
!3348 = !{!3349}
!3349 = !DILocalVariable(name: "thread", arg: 1, scope: !3344, file: !3345, line: 188, type: !3241)
!3350 = !DILocation(line: 0, scope: !3344)
!3351 = !DILocation(line: 197, column: 2, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3344, file: !3345, line: 197, column: 2)
!3353 = !{i64 2155057737}
!3354 = !DILocation(line: 198, column: 2, scope: !3344)
!3355 = !DILocation(line: 199, column: 1, scope: !3344)
!3356 = distinct !DISubprogram(name: "z_current_get", scope: !3345, file: !3345, line: 173, type: !3239, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !478)
!3357 = !DILocation(line: 180, column: 2, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3356, file: !3345, line: 180, column: 2)
!3359 = !{i64 2155057669}
!3360 = !DILocation(line: 181, column: 9, scope: !3356)
!3361 = !DILocation(line: 181, column: 2, scope: !3356)
!3362 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2360, file: !2360, line: 1338, type: !3363, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3371)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!103, !3093, !102, !150, !3365, !106}
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3057, line: 99, baseType: !3366)
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3057, line: 40, baseType: !3367)
!3367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2360, baseType: !3368)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3369)
!3369 = !{!3370}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3368, file: !2360, baseType: !102, size: 32)
!3371 = !{!3372, !3373, !3374, !3375, !3376, !3377, !3381, !3382, !3383, !3385, !3390, !3435, !3438, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3450, !3451, !3452, !3456, !3459, !3461, !3464, !3465, !3466, !3471, !3477, !3480, !3484, !3490, !3494, !3497, !3499, !3502}
!3372 = !DILocalVariable(name: "out", arg: 1, scope: !3362, file: !2360, line: 1338, type: !3093)
!3373 = !DILocalVariable(name: "ctx", arg: 2, scope: !3362, file: !2360, line: 1338, type: !102)
!3374 = !DILocalVariable(name: "fp", arg: 3, scope: !3362, file: !2360, line: 1338, type: !150)
!3375 = !DILocalVariable(name: "ap", arg: 4, scope: !3362, file: !2360, line: 1339, type: !3365)
!3376 = !DILocalVariable(name: "flags", arg: 5, scope: !3362, file: !2360, line: 1339, type: !106)
!3377 = !DILocalVariable(name: "buf", scope: !3362, file: !2360, line: 1341, type: !3378)
!3378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 176, elements: !3379)
!3379 = !{!3380}
!3380 = !DISubrange(count: 22)
!3381 = !DILocalVariable(name: "count", scope: !3362, file: !2360, line: 1342, type: !356)
!3382 = !DILocalVariable(name: "sint", scope: !3362, file: !2360, line: 1343, type: !2379)
!3383 = !DILocalVariable(name: "tagged_ap", scope: !3362, file: !2360, line: 1345, type: !3384)
!3384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!3385 = !DILocalVariable(name: "rc", scope: !3386, file: !2360, line: 1377, type: !103)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !2360, line: 1377, column: 4)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !2360, line: 1376, column: 19)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1376, column: 7)
!3389 = distinct !DILexicalBlock(scope: !3362, file: !2360, line: 1375, column: 19)
!3390 = !DILocalVariable(name: "state", scope: !3389, file: !2360, line: 1395, type: !3391)
!3391 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3362, file: !2360, line: 1392, size: 192, elements: !3392)
!3392 = !{!3393, !3403}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3391, file: !2360, line: 1393, baseType: !3394, size: 64)
!3394 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2360, line: 166, size: 64, elements: !3395)
!3395 = !{!3396, !3397, !3398, !3400, !3402}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3394, file: !2360, line: 168, baseType: !2379, size: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3394, file: !2360, line: 171, baseType: !2382, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3394, file: !2360, line: 174, baseType: !3399, size: 64)
!3399 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3394, file: !2360, line: 177, baseType: !3401, size: 64)
!3401 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3394, file: !2360, line: 180, baseType: !102, size: 32)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3391, file: !2360, line: 1394, baseType: !3404, size: 96, offset: 64)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2360, line: 189, size: 96, elements: !3405)
!3405 = !{!3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3430}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3404, file: !2360, line: 191, baseType: !163, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3404, file: !2360, line: 194, baseType: !163, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3404, file: !2360, line: 197, baseType: !163, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3404, file: !2360, line: 200, baseType: !163, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3404, file: !2360, line: 203, baseType: !163, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3404, file: !2360, line: 206, baseType: !163, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3404, file: !2360, line: 209, baseType: !163, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3404, file: !2360, line: 212, baseType: !163, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3404, file: !2360, line: 219, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3404, file: !2360, line: 222, baseType: !163, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3404, file: !2360, line: 229, baseType: !163, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3404, file: !2360, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3404, file: !2360, line: 238, baseType: !163, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3404, file: !2360, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3404, file: !2360, line: 244, baseType: !163, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3404, file: !2360, line: 247, baseType: !163, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3404, file: !2360, line: 252, baseType: !163, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3404, file: !2360, line: 257, baseType: !163, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3404, file: !2360, line: 260, baseType: !161, size: 8, offset: 24)
!3425 = !DIDerivedType(tag: DW_TAG_member, scope: !3404, file: !2360, line: 262, baseType: !3426, size: 32, offset: 32)
!3426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3404, file: !2360, line: 262, size: 32, elements: !3427)
!3427 = !{!3428, !3429}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3426, file: !2360, line: 267, baseType: !103, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3426, file: !2360, line: 289, baseType: !103, size: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, scope: !3404, file: !2360, line: 292, baseType: !3431, size: 32, offset: 64)
!3431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3404, file: !2360, line: 292, size: 32, elements: !3432)
!3432 = !{!3433, !3434}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3431, file: !2360, line: 297, baseType: !103, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3431, file: !2360, line: 306, baseType: !103, size: 32)
!3435 = !DILocalVariable(name: "conv", scope: !3389, file: !2360, line: 1400, type: !3436)
!3436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3437)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 32)
!3438 = !DILocalVariable(name: "value", scope: !3389, file: !2360, line: 1401, type: !3439)
!3439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3440)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 32)
!3441 = !DILocalVariable(name: "sp", scope: !3389, file: !2360, line: 1402, type: !150)
!3442 = !DILocalVariable(name: "width", scope: !3389, file: !2360, line: 1403, type: !103)
!3443 = !DILocalVariable(name: "precision", scope: !3389, file: !2360, line: 1404, type: !103)
!3444 = !DILocalVariable(name: "bps", scope: !3389, file: !2360, line: 1405, type: !150)
!3445 = !DILocalVariable(name: "bpe", scope: !3389, file: !2360, line: 1406, type: !150)
!3446 = !DILocalVariable(name: "sign", scope: !3389, file: !2360, line: 1407, type: !152)
!3447 = !DILocalVariable(name: "arg", scope: !3448, file: !2360, line: 1432, type: !103)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !2360, line: 1431, column: 24)
!3449 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1431, column: 7)
!3450 = !DILocalVariable(name: "specifier_cat", scope: !3389, file: !2360, line: 1468, type: !2359)
!3451 = !DILocalVariable(name: "length_mod", scope: !3389, file: !2360, line: 1470, type: !2367)
!3452 = !DILocalVariable(name: "rc", scope: !3453, file: !2360, line: 1575, type: !103)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !2360, line: 1575, column: 4)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !2360, line: 1574, column: 43)
!3455 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1574, column: 7)
!3456 = !DILocalVariable(name: "rc", scope: !3457, file: !2360, line: 1584, type: !103)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1584, column: 4)
!3458 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1582, column: 28)
!3459 = !DILocalVariable(name: "len", scope: !3460, file: !2360, line: 1589, type: !356)
!3460 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1586, column: 13)
!3461 = !DILocalVariable(name: "len", scope: !3462, file: !2360, line: 1641, type: !356)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !2360, line: 1640, column: 24)
!3463 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1640, column: 8)
!3464 = !DILocalVariable(name: "nj_len", scope: !3389, file: !2360, line: 1722, type: !356)
!3465 = !DILocalVariable(name: "pad_len", scope: !3389, file: !2360, line: 1723, type: !103)
!3466 = !DILocalVariable(name: "pad", scope: !3467, file: !2360, line: 1751, type: !152)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !2360, line: 1750, column: 26)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !2360, line: 1750, column: 8)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !2360, line: 1747, column: 18)
!3470 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1747, column: 7)
!3471 = !DILocalVariable(name: "rc", scope: !3472, file: !2360, line: 1758, type: !103)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !2360, line: 1758, column: 7)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !2360, line: 1757, column: 21)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !2360, line: 1757, column: 10)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !2360, line: 1756, column: 26)
!3476 = distinct !DILexicalBlock(scope: !3467, file: !2360, line: 1756, column: 9)
!3477 = !DILocalVariable(name: "rc", scope: !3478, file: !2360, line: 1765, type: !103)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !2360, line: 1765, column: 6)
!3479 = distinct !DILexicalBlock(scope: !3467, file: !2360, line: 1764, column: 25)
!3480 = !DILocalVariable(name: "rc", scope: !3481, file: !2360, line: 1774, type: !103)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !2360, line: 1774, column: 4)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !2360, line: 1773, column: 18)
!3483 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1773, column: 7)
!3484 = !DILocalVariable(name: "rc", scope: !3485, file: !2360, line: 1819, type: !103)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !2360, line: 1819, column: 5)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !2360, line: 1818, column: 44)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !2360, line: 1818, column: 8)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !2360, line: 1817, column: 10)
!3489 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1777, column: 7)
!3490 = !DILocalVariable(name: "rc", scope: !3491, file: !2360, line: 1823, type: !103)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !2360, line: 1823, column: 5)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !2360, line: 1822, column: 26)
!3493 = distinct !DILexicalBlock(scope: !3488, file: !2360, line: 1822, column: 8)
!3494 = !DILocalVariable(name: "rc", scope: !3495, file: !2360, line: 1828, type: !103)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !2360, line: 1828, column: 5)
!3496 = distinct !DILexicalBlock(scope: !3488, file: !2360, line: 1827, column: 26)
!3497 = !DILocalVariable(name: "rc", scope: !3498, file: !2360, line: 1831, type: !103)
!3498 = distinct !DILexicalBlock(scope: !3488, file: !2360, line: 1831, column: 4)
!3499 = !DILocalVariable(name: "rc", scope: !3500, file: !2360, line: 1836, type: !103)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !2360, line: 1836, column: 4)
!3501 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1835, column: 21)
!3502 = !DILabel(scope: !3458, name: "prec_int_pad0", file: !2360, line: 1634)
!3503 = !DILocation(line: 0, scope: !3362)
!3504 = !DILocation(line: 1341, column: 2, scope: !3362)
!3505 = !DILocation(line: 1341, column: 7, scope: !3362)
!3506 = !DILocation(line: 1375, column: 2, scope: !3362)
!3507 = !DILocation(line: 1342, column: 9, scope: !3362)
!3508 = !DILocation(line: 1375, column: 9, scope: !3362)
!3509 = !DILocation(line: 1377, column: 4, scope: !3386)
!3510 = !DILocation(line: 0, scope: !3386)
!3511 = !DILocation(line: 1377, column: 4, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3386, file: !2360, line: 1377, column: 4)
!3513 = distinct !{!3513, !3506, !3514}
!3514 = !DILocation(line: 1839, column: 2, scope: !3362)
!3515 = !DILocation(line: 1392, column: 3, scope: !3389)
!3516 = !DILocation(line: 1395, column: 5, scope: !3389)
!3517 = !DILocation(line: 0, scope: !3389)
!3518 = !DILocation(line: 1409, column: 8, scope: !3389)
!3519 = !DILocation(line: 1414, column: 13, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1414, column: 7)
!3521 = !DILocation(line: 1414, column: 7, scope: !3389)
!3522 = !DILocation(line: 1415, column: 12, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3520, file: !2360, line: 1414, column: 25)
!3524 = !DILocation(line: 1417, column: 14, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3523, file: !2360, line: 1417, column: 8)
!3526 = !DILocation(line: 1417, column: 8, scope: !3523)
!3527 = !DILocation(line: 1418, column: 21, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3525, file: !2360, line: 1417, column: 19)
!3529 = !DILocation(line: 1419, column: 13, scope: !3528)
!3530 = !DILocation(line: 1420, column: 4, scope: !3528)
!3531 = !DILocation(line: 1421, column: 20, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3520, file: !2360, line: 1421, column: 14)
!3533 = !DILocation(line: 1421, column: 14, scope: !3520)
!3534 = !DILocation(line: 1431, column: 13, scope: !3449)
!3535 = !DILocation(line: 1431, column: 7, scope: !3389)
!3536 = !DILocation(line: 1432, column: 14, scope: !3448)
!3537 = !DILocation(line: 0, scope: !3448)
!3538 = !DILocation(line: 1434, column: 12, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3448, file: !2360, line: 1434, column: 8)
!3540 = !DILocation(line: 1434, column: 8, scope: !3448)
!3541 = !DILocation(line: 1435, column: 24, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !2360, line: 1434, column: 17)
!3543 = !DILocation(line: 1436, column: 4, scope: !3542)
!3544 = !DILocation(line: 1439, column: 20, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3449, file: !2360, line: 1439, column: 14)
!3546 = !DILocation(line: 1439, column: 14, scope: !3449)
!3547 = !DILocation(line: 1469, column: 37, scope: !3389)
!3548 = !DILocation(line: 1448, column: 20, scope: !3389)
!3549 = !DILocation(line: 1449, column: 22, scope: !3389)
!3550 = !DILocation(line: 1471, column: 34, scope: !3389)
!3551 = !DILocation(line: 1478, column: 7, scope: !3389)
!3552 = !DILocation(line: 1479, column: 4, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !2360, line: 1478, column: 40)
!3554 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1478, column: 7)
!3555 = !DILocation(line: 1484, column: 19, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3553, file: !2360, line: 1479, column: 24)
!3557 = !DILocation(line: 1484, column: 17, scope: !3556)
!3558 = !DILocation(line: 1485, column: 5, scope: !3556)
!3559 = !DILocation(line: 1492, column: 20, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !2360, line: 1491, column: 12)
!3561 = distinct !DILexicalBlock(scope: !3556, file: !2360, line: 1487, column: 9)
!3562 = !DILocation(line: 1492, column: 18, scope: !3560)
!3563 = !DILocation(line: 1494, column: 5, scope: !3556)
!3564 = !DILocation(line: 1497, column: 23, scope: !3556)
!3565 = !DILocation(line: 1496, column: 17, scope: !3556)
!3566 = !DILocation(line: 1498, column: 5, scope: !3556)
!3567 = !DILocation(line: 1501, column: 23, scope: !3556)
!3568 = !DILocation(line: 1500, column: 17, scope: !3556)
!3569 = !DILocation(line: 1502, column: 5, scope: !3556)
!3570 = !DILocation(line: 1513, column: 23, scope: !3556)
!3571 = !DILocation(line: 1513, column: 6, scope: !3556)
!3572 = !DILocation(line: 1512, column: 17, scope: !3556)
!3573 = !DILocation(line: 1514, column: 5, scope: !3556)
!3574 = !DILocation(line: 0, scope: !3556)
!3575 = !DILocation(line: 1516, column: 8, scope: !3553)
!3576 = !DILocation(line: 1517, column: 19, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !2360, line: 1516, column: 33)
!3578 = distinct !DILexicalBlock(scope: !3553, file: !2360, line: 1516, column: 8)
!3579 = !DILocation(line: 1517, column: 17, scope: !3577)
!3580 = !DILocation(line: 1518, column: 4, scope: !3577)
!3581 = !DILocation(line: 1519, column: 19, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !2360, line: 1518, column: 39)
!3583 = distinct !DILexicalBlock(scope: !3578, file: !2360, line: 1518, column: 15)
!3584 = !DILocation(line: 1519, column: 17, scope: !3582)
!3585 = !DILocation(line: 1520, column: 4, scope: !3582)
!3586 = !DILocation(line: 1522, column: 4, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !2360, line: 1521, column: 47)
!3588 = distinct !DILexicalBlock(scope: !3554, file: !2360, line: 1521, column: 14)
!3589 = !DILocation(line: 1527, column: 19, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3587, file: !2360, line: 1522, column: 24)
!3591 = !DILocation(line: 1527, column: 17, scope: !3590)
!3592 = !DILocation(line: 1528, column: 5, scope: !3590)
!3593 = !DILocation(line: 0, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3590, file: !2360, line: 1530, column: 9)
!3595 = !DILocation(line: 1540, column: 23, scope: !3590)
!3596 = !DILocation(line: 1539, column: 17, scope: !3590)
!3597 = !DILocation(line: 1542, column: 5, scope: !3590)
!3598 = !DILocation(line: 1545, column: 23, scope: !3590)
!3599 = !DILocation(line: 1544, column: 17, scope: !3590)
!3600 = !DILocation(line: 1547, column: 5, scope: !3590)
!3601 = !DILocation(line: 1551, column: 23, scope: !3590)
!3602 = !DILocation(line: 1551, column: 6, scope: !3590)
!3603 = !DILocation(line: 1550, column: 17, scope: !3590)
!3604 = !DILocation(line: 1552, column: 5, scope: !3590)
!3605 = !DILocation(line: 0, scope: !3590)
!3606 = !DILocation(line: 1554, column: 8, scope: !3587)
!3607 = !DILocation(line: 1555, column: 19, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !2360, line: 1554, column: 33)
!3609 = distinct !DILexicalBlock(scope: !3587, file: !2360, line: 1554, column: 8)
!3610 = !DILocation(line: 1555, column: 17, scope: !3608)
!3611 = !DILocation(line: 1556, column: 4, scope: !3608)
!3612 = !DILocation(line: 1557, column: 19, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !2360, line: 1556, column: 39)
!3614 = distinct !DILexicalBlock(scope: !3609, file: !2360, line: 1556, column: 15)
!3615 = !DILocation(line: 1557, column: 17, scope: !3613)
!3616 = !DILocation(line: 1558, column: 4, scope: !3613)
!3617 = !DILocation(line: 0, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !2360, line: 1560, column: 8)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !2360, line: 1559, column: 45)
!3620 = distinct !DILexicalBlock(scope: !3588, file: !2360, line: 1559, column: 14)
!3621 = !DILocation(line: 1566, column: 17, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !2360, line: 1565, column: 46)
!3623 = distinct !DILexicalBlock(scope: !3620, file: !2360, line: 1565, column: 14)
!3624 = !DILocation(line: 1566, column: 15, scope: !3622)
!3625 = !DILocation(line: 1567, column: 3, scope: !3622)
!3626 = !DILocation(line: 1574, column: 21, scope: !3455)
!3627 = !DILocation(line: 1575, column: 4, scope: !3453)
!3628 = !DILocation(line: 0, scope: !3453)
!3629 = !DILocation(line: 1575, column: 4, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3453, file: !2360, line: 1575, column: 4)
!3631 = !DILocation(line: 1582, column: 17, scope: !3389)
!3632 = !DILocation(line: 1582, column: 3, scope: !3389)
!3633 = !DILocation(line: 1584, column: 4, scope: !3457)
!3634 = !DILocation(line: 0, scope: !3457)
!3635 = !DILocation(line: 1584, column: 4, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3457, file: !2360, line: 1584, column: 4)
!3637 = !DILocation(line: 1587, column: 31, scope: !3460)
!3638 = !DILocation(line: 1591, column: 18, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3460, file: !2360, line: 1591, column: 8)
!3640 = !DILocation(line: 1591, column: 8, scope: !3460)
!3641 = !DILocation(line: 1592, column: 11, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3639, file: !2360, line: 1591, column: 24)
!3643 = !DILocation(line: 0, scope: !3460)
!3644 = !DILocation(line: 1593, column: 4, scope: !3642)
!3645 = !DILocation(line: 1594, column: 11, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3639, file: !2360, line: 1593, column: 11)
!3647 = !DILocation(line: 1604, column: 51, scope: !3458)
!3648 = !DILocation(line: 1604, column: 13, scope: !3458)
!3649 = !DILocation(line: 1604, column: 11, scope: !3458)
!3650 = !DILocation(line: 1606, column: 4, scope: !3458)
!3651 = !DILocation(line: 1609, column: 14, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1609, column: 8)
!3653 = !DILocation(line: 1609, column: 8, scope: !3458)
!3654 = !DILocation(line: 1619, column: 18, scope: !3458)
!3655 = !DILocation(line: 1620, column: 13, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1620, column: 8)
!3657 = !DILocation(line: 1620, column: 8, scope: !3458)
!3658 = !DILocation(line: 1622, column: 36, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3656, file: !2360, line: 1620, column: 18)
!3660 = !DILocation(line: 1622, column: 17, scope: !3659)
!3661 = !DILocation(line: 1623, column: 4, scope: !3659)
!3662 = !DILocation(line: 1632, column: 29, scope: !3458)
!3663 = !DILocation(line: 1632, column: 10, scope: !3458)
!3664 = !DILocation(line: 1632, column: 4, scope: !3458)
!3665 = !DILocation(line: 1407, column: 8, scope: !3389)
!3666 = !DILocation(line: 0, scope: !3458)
!3667 = !DILocation(line: 1634, column: 3, scope: !3458)
!3668 = !DILocation(line: 1640, column: 18, scope: !3463)
!3669 = !DILocation(line: 1640, column: 8, scope: !3458)
!3670 = !DILocation(line: 1729, column: 13, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1729, column: 7)
!3672 = !DILocation(line: 1641, column: 22, scope: !3462)
!3673 = !DILocation(line: 0, scope: !3462)
!3674 = !DILocation(line: 1646, column: 21, scope: !3462)
!3675 = !DILocation(line: 1649, column: 13, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3462, file: !2360, line: 1649, column: 9)
!3677 = !DILocation(line: 1649, column: 9, scope: !3462)
!3678 = !DILocation(line: 1650, column: 35, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !2360, line: 1649, column: 34)
!3680 = !DILocation(line: 1650, column: 23, scope: !3679)
!3681 = !DILocation(line: 1651, column: 5, scope: !3679)
!3682 = !DILocation(line: 1660, column: 15, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1660, column: 8)
!3684 = !DILocation(line: 1660, column: 19, scope: !3683)
!3685 = !DILocation(line: 1660, column: 8, scope: !3458)
!3686 = !DILocation(line: 1661, column: 23, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3683, file: !2360, line: 1660, column: 28)
!3688 = !DILocation(line: 1661, column: 11, scope: !3687)
!3689 = !DILocation(line: 1665, column: 22, scope: !3687)
!3690 = !DILocation(line: 1666, column: 21, scope: !3687)
!3691 = !DILocation(line: 1668, column: 5, scope: !3687)
!3692 = !DILocation(line: 1677, column: 30, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !2360, line: 1676, column: 49)
!3694 = distinct !DILexicalBlock(scope: !3458, file: !2360, line: 1676, column: 8)
!3695 = !DILocation(line: 1677, column: 5, scope: !3693)
!3696 = !DILocation(line: 1680, column: 4, scope: !3458)
!3697 = !DILocation(line: 0, scope: !3639)
!3698 = !DILocation(line: 1597, column: 14, scope: !3460)
!3699 = !DILocation(line: 1699, column: 11, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1699, column: 7)
!3701 = !DILocation(line: 1699, column: 7, scope: !3389)
!3702 = !DILocation(line: 1725, column: 7, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1725, column: 7)
!3704 = !DILocation(line: 1725, column: 12, scope: !3703)
!3705 = !DILocation(line: 1747, column: 13, scope: !3470)
!3706 = !DILocation(line: 1747, column: 7, scope: !3389)
!3707 = !DILocation(line: 1722, column: 24, scope: !3389)
!3708 = !DILocation(line: 1725, column: 7, scope: !3389)
!3709 = !DILocation(line: 1729, column: 7, scope: !3389)
!3710 = !DILocation(line: 1736, column: 13, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3389, file: !2360, line: 1736, column: 7)
!3712 = !DILocation(line: 1735, column: 19, scope: !3389)
!3713 = !DILocation(line: 1736, column: 7, scope: !3389)
!3714 = !DILocation(line: 1748, column: 10, scope: !3469)
!3715 = !DILocation(line: 1750, column: 15, scope: !3468)
!3716 = !DILocation(line: 1750, column: 8, scope: !3469)
!3717 = !DILocation(line: 0, scope: !3467)
!3718 = !DILocation(line: 1756, column: 15, scope: !3476)
!3719 = !DILocation(line: 1756, column: 9, scope: !3467)
!3720 = !DILocation(line: 1758, column: 7, scope: !3472)
!3721 = !DILocation(line: 0, scope: !3472)
!3722 = !DILocation(line: 1758, column: 7, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3472, file: !2360, line: 1758, column: 7)
!3724 = !DILocation(line: 1764, column: 5, scope: !3467)
!3725 = !DILocation(line: 0, scope: !3469)
!3726 = !DILocation(line: 1764, column: 20, scope: !3467)
!3727 = !DILocation(line: 1764, column: 17, scope: !3467)
!3728 = !DILocation(line: 1765, column: 6, scope: !3478)
!3729 = !DILocation(line: 0, scope: !3478)
!3730 = !DILocation(line: 1765, column: 6, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3478, file: !2360, line: 1765, column: 6)
!3732 = distinct !{!3732, !3724, !3733}
!3733 = !DILocation(line: 1766, column: 5, scope: !3467)
!3734 = !DILocation(line: 1773, column: 12, scope: !3483)
!3735 = !DILocation(line: 1773, column: 7, scope: !3389)
!3736 = !DILocation(line: 1773, column: 7, scope: !3483)
!3737 = !DILocation(line: 1774, column: 4, scope: !3481)
!3738 = !DILocation(line: 0, scope: !3481)
!3739 = !DILocation(line: 1774, column: 4, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3481, file: !2360, line: 1774, column: 4)
!3741 = !DILocation(line: 1818, column: 8, scope: !3487)
!3742 = !DILocation(line: 1818, column: 27, scope: !3487)
!3743 = !DILocation(line: 1818, column: 25, scope: !3487)
!3744 = !DILocation(line: 1818, column: 8, scope: !3488)
!3745 = !DILocation(line: 1819, column: 5, scope: !3485)
!3746 = !DILocation(line: 0, scope: !3485)
!3747 = !DILocation(line: 1819, column: 5, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3485, file: !2360, line: 1819, column: 5)
!3749 = !DILocation(line: 1822, column: 14, scope: !3493)
!3750 = !DILocation(line: 1822, column: 8, scope: !3488)
!3751 = !DILocation(line: 1823, column: 5, scope: !3491)
!3752 = !DILocation(line: 0, scope: !3491)
!3753 = !DILocation(line: 1823, column: 5, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3491, file: !2360, line: 1823, column: 5)
!3755 = !DILocation(line: 1826, column: 20, scope: !3488)
!3756 = !DILocation(line: 1827, column: 4, scope: !3488)
!3757 = !DILocation(line: 0, scope: !3488)
!3758 = !DILocation(line: 1827, column: 21, scope: !3488)
!3759 = !DILocation(line: 1827, column: 18, scope: !3488)
!3760 = !DILocation(line: 1828, column: 5, scope: !3495)
!3761 = !DILocation(line: 0, scope: !3495)
!3762 = !DILocation(line: 1828, column: 5, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3495, file: !2360, line: 1828, column: 5)
!3764 = distinct !{!3764, !3756, !3765}
!3765 = !DILocation(line: 1829, column: 4, scope: !3488)
!3766 = !DILocation(line: 1831, column: 4, scope: !3498)
!3767 = !DILocation(line: 0, scope: !3498)
!3768 = !DILocation(line: 1831, column: 4, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3498, file: !2360, line: 1831, column: 4)
!3770 = !DILocation(line: 1835, column: 16, scope: !3389)
!3771 = !DILocation(line: 1835, column: 3, scope: !3389)
!3772 = !DILocation(line: 1836, column: 4, scope: !3500)
!3773 = !DILocation(line: 0, scope: !3500)
!3774 = !DILocation(line: 1836, column: 4, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3500, file: !2360, line: 1836, column: 4)
!3776 = !DILocation(line: 1837, column: 4, scope: !3501)
!3777 = distinct !{!3777, !3771, !3778}
!3778 = !DILocation(line: 1838, column: 3, scope: !3389)
!3779 = !DILocation(line: 1844, column: 1, scope: !3362)
!3780 = distinct !DISubprogram(name: "extract_conversion", scope: !2360, file: !2360, line: 642, type: !3781, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3783)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!150, !3437, !150}
!3783 = !{!3784, !3785}
!3784 = !DILocalVariable(name: "conv", arg: 1, scope: !3780, file: !2360, line: 642, type: !3437)
!3785 = !DILocalVariable(name: "sp", arg: 2, scope: !3780, file: !2360, line: 643, type: !150)
!3786 = !DILocation(line: 0, scope: !3780)
!3787 = !DILocation(line: 645, column: 10, scope: !3780)
!3788 = !DILocation(line: 653, column: 2, scope: !3780)
!3789 = !DILocation(line: 654, column: 6, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3780, file: !2360, line: 654, column: 6)
!3791 = !DILocation(line: 654, column: 10, scope: !3790)
!3792 = !DILocation(line: 654, column: 6, scope: !3780)
!3793 = !DILocation(line: 655, column: 24, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !2360, line: 654, column: 18)
!3795 = !DILocation(line: 655, column: 19, scope: !3794)
!3796 = !DILocation(line: 656, column: 3, scope: !3794)
!3797 = !DILocation(line: 659, column: 7, scope: !3780)
!3798 = !DILocation(line: 660, column: 7, scope: !3780)
!3799 = !DILocation(line: 661, column: 7, scope: !3780)
!3800 = !DILocation(line: 662, column: 7, scope: !3780)
!3801 = !DILocation(line: 663, column: 7, scope: !3780)
!3802 = !DILocation(line: 665, column: 2, scope: !3780)
!3803 = !DILocation(line: 666, column: 1, scope: !3780)
!3804 = distinct !DISubprogram(name: "outs", scope: !2360, file: !2360, line: 1319, type: !3805, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!103, !3093, !102, !150, !150}
!3807 = !{!3808, !3809, !3810, !3811, !3812, !3813}
!3808 = !DILocalVariable(name: "out", arg: 1, scope: !3804, file: !2360, line: 1319, type: !3093)
!3809 = !DILocalVariable(name: "ctx", arg: 2, scope: !3804, file: !2360, line: 1320, type: !102)
!3810 = !DILocalVariable(name: "sp", arg: 3, scope: !3804, file: !2360, line: 1321, type: !150)
!3811 = !DILocalVariable(name: "ep", arg: 4, scope: !3804, file: !2360, line: 1322, type: !150)
!3812 = !DILocalVariable(name: "count", scope: !3804, file: !2360, line: 1324, type: !356)
!3813 = !DILocalVariable(name: "rc", scope: !3814, file: !2360, line: 1327, type: !103)
!3814 = distinct !DILexicalBlock(scope: !3804, file: !2360, line: 1326, column: 45)
!3815 = !DILocation(line: 0, scope: !3804)
!3816 = !DILocation(line: 1326, column: 2, scope: !3804)
!3817 = !DILocation(line: 1324, column: 9, scope: !3804)
!3818 = !DILocation(line: 1326, column: 13, scope: !3804)
!3819 = !DILocation(line: 1326, column: 19, scope: !3804)
!3820 = !DILocation(line: 1327, column: 21, scope: !3814)
!3821 = !DILocation(line: 1326, column: 36, scope: !3804)
!3822 = !DILocation(line: 1326, column: 39, scope: !3804)
!3823 = !DILocation(line: 1327, column: 24, scope: !3814)
!3824 = !DILocation(line: 1327, column: 16, scope: !3814)
!3825 = !DILocation(line: 1327, column: 12, scope: !3814)
!3826 = !DILocation(line: 0, scope: !3814)
!3827 = !DILocation(line: 1329, column: 10, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3814, file: !2360, line: 1329, column: 7)
!3829 = !DILocation(line: 1329, column: 7, scope: !3814)
!3830 = distinct !{!3830, !3816, !3831}
!3831 = !DILocation(line: 1333, column: 2, scope: !3804)
!3832 = !DILocation(line: 1336, column: 1, scope: !3804)
!3833 = distinct !DISubprogram(name: "encode_uint", scope: !2360, file: !2360, line: 788, type: !3834, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3836)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!1099, !2382, !3437, !1099, !150}
!3836 = !{!3837, !3838, !3839, !3840, !3841, !3842, !3844, !3845}
!3837 = !DILocalVariable(name: "value", arg: 1, scope: !3833, file: !2360, line: 788, type: !2382)
!3838 = !DILocalVariable(name: "conv", arg: 2, scope: !3833, file: !2360, line: 789, type: !3437)
!3839 = !DILocalVariable(name: "bps", arg: 3, scope: !3833, file: !2360, line: 790, type: !1099)
!3840 = !DILocalVariable(name: "bpe", arg: 4, scope: !3833, file: !2360, line: 791, type: !150)
!3841 = !DILocalVariable(name: "upcase", scope: !3833, file: !2360, line: 793, type: !163)
!3842 = !DILocalVariable(name: "radix", scope: !3833, file: !2360, line: 794, type: !3843)
!3843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3844 = !DILocalVariable(name: "bp", scope: !3833, file: !2360, line: 795, type: !1099)
!3845 = !DILocalVariable(name: "lsv", scope: !3846, file: !2360, line: 798, type: !32)
!3846 = distinct !DILexicalBlock(scope: !3833, file: !2360, line: 797, column: 5)
!3847 = !DILocation(line: 0, scope: !3833)
!3848 = !DILocation(line: 793, column: 35, scope: !3833)
!3849 = !DILocation(line: 793, column: 24, scope: !3833)
!3850 = !DILocation(line: 793, column: 16, scope: !3833)
!3851 = !DILocation(line: 794, column: 29, scope: !3833)
!3852 = !DILocation(line: 795, column: 24, scope: !3833)
!3853 = !DILocation(line: 795, column: 17, scope: !3833)
!3854 = !DILocation(line: 797, column: 2, scope: !3833)
!3855 = !DILocation(line: 802, column: 9, scope: !3846)
!3856 = !DILocation(line: 798, column: 22, scope: !3846)
!3857 = !DILocation(line: 0, scope: !3846)
!3858 = !DILocation(line: 800, column: 16, scope: !3846)
!3859 = !DILocation(line: 800, column: 11, scope: !3846)
!3860 = !DILocation(line: 800, column: 4, scope: !3846)
!3861 = !DILocation(line: 800, column: 9, scope: !3846)
!3862 = !DILocation(line: 803, column: 18, scope: !3833)
!3863 = !DILocation(line: 803, column: 24, scope: !3833)
!3864 = !DILocation(line: 803, column: 2, scope: !3846)
!3865 = distinct !{!3865, !3854, !3866}
!3866 = !DILocation(line: 803, column: 37, scope: !3833)
!3867 = !DILocation(line: 808, column: 12, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3833, file: !2360, line: 808, column: 6)
!3869 = !DILocation(line: 808, column: 6, scope: !3833)
!3870 = !DILocation(line: 809, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !2360, line: 808, column: 23)
!3872 = !DILocation(line: 813, column: 3, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !2360, line: 811, column: 27)
!3874 = distinct !DILexicalBlock(scope: !3875, file: !2360, line: 811, column: 14)
!3875 = distinct !DILexicalBlock(scope: !3871, file: !2360, line: 809, column: 7)
!3876 = !DILocation(line: 0, scope: !3875)
!3877 = !DILocation(line: 818, column: 2, scope: !3833)
!3878 = distinct !DISubprogram(name: "store_count", scope: !2360, file: !2360, line: 1280, type: !3879, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3883)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{null, !3881, !102, !103}
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 32)
!3882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3404)
!3883 = !{!3884, !3885, !3886}
!3884 = !DILocalVariable(name: "conv", arg: 1, scope: !3878, file: !2360, line: 1280, type: !3881)
!3885 = !DILocalVariable(name: "dp", arg: 2, scope: !3878, file: !2360, line: 1281, type: !102)
!3886 = !DILocalVariable(name: "count", arg: 3, scope: !3878, file: !2360, line: 1282, type: !103)
!3887 = !DILocation(line: 0, scope: !3878)
!3888 = !DILocation(line: 1284, column: 38, scope: !3878)
!3889 = !DILocation(line: 1284, column: 2, scope: !3878)
!3890 = !DILocation(line: 1286, column: 4, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3878, file: !2360, line: 1284, column: 50)
!3892 = !DILocation(line: 1286, column: 14, scope: !3891)
!3893 = !DILocation(line: 1287, column: 3, scope: !3891)
!3894 = !DILocation(line: 1289, column: 24, scope: !3891)
!3895 = !DILocation(line: 1289, column: 22, scope: !3891)
!3896 = !DILocation(line: 1290, column: 3, scope: !3891)
!3897 = !DILocation(line: 1292, column: 18, scope: !3891)
!3898 = !DILocation(line: 1292, column: 4, scope: !3891)
!3899 = !DILocation(line: 1292, column: 16, scope: !3891)
!3900 = !DILocation(line: 1293, column: 3, scope: !3891)
!3901 = !DILocation(line: 1295, column: 4, scope: !3891)
!3902 = !DILocation(line: 1295, column: 15, scope: !3891)
!3903 = !DILocation(line: 1296, column: 3, scope: !3891)
!3904 = !DILocation(line: 1298, column: 22, scope: !3891)
!3905 = !DILocation(line: 1298, column: 4, scope: !3891)
!3906 = !DILocation(line: 1298, column: 20, scope: !3891)
!3907 = !DILocation(line: 1299, column: 3, scope: !3891)
!3908 = !DILocation(line: 1301, column: 21, scope: !3891)
!3909 = !DILocation(line: 1301, column: 4, scope: !3891)
!3910 = !DILocation(line: 1301, column: 19, scope: !3891)
!3911 = !DILocation(line: 1302, column: 3, scope: !3891)
!3912 = !DILocation(line: 1304, column: 4, scope: !3891)
!3913 = !DILocation(line: 1304, column: 17, scope: !3891)
!3914 = !DILocation(line: 1305, column: 3, scope: !3891)
!3915 = !DILocation(line: 1307, column: 4, scope: !3891)
!3916 = !DILocation(line: 1307, column: 20, scope: !3891)
!3917 = !DILocation(line: 1308, column: 3, scope: !3891)
!3918 = !DILocation(line: 1316, column: 1, scope: !3878)
!3919 = distinct !DISubprogram(name: "isupper", scope: !3920, file: !3920, line: 16, type: !114, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3921)
!3920 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3921 = !{!3922}
!3922 = !DILocalVariable(name: "a", arg: 1, scope: !3919, file: !3920, line: 16, type: !103)
!3923 = !DILocation(line: 0, scope: !3919)
!3924 = !DILocation(line: 18, column: 29, scope: !3919)
!3925 = !DILocation(line: 18, column: 45, scope: !3919)
!3926 = !DILocation(line: 18, column: 2, scope: !3919)
!3927 = distinct !DISubprogram(name: "conversion_radix", scope: !2360, file: !2360, line: 761, type: !3928, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3930)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!356, !152}
!3930 = !{!3931}
!3931 = !DILocalVariable(name: "specifier", arg: 1, scope: !3927, file: !2360, line: 761, type: !152)
!3932 = !DILocation(line: 0, scope: !3927)
!3933 = !DILocation(line: 763, column: 2, scope: !3927)
!3934 = !DILocation(line: 770, column: 3, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3927, file: !2360, line: 763, column: 21)
!3936 = !DILocation(line: 774, column: 3, scope: !3935)
!3937 = !DILocation(line: 0, scope: !3935)
!3938 = !DILocation(line: 776, column: 1, scope: !3927)
!3939 = distinct !DISubprogram(name: "extract_flags", scope: !2360, file: !2360, line: 339, type: !3781, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3940)
!3940 = !{!3941, !3942, !3943}
!3941 = !DILocalVariable(name: "conv", arg: 1, scope: !3939, file: !2360, line: 339, type: !3437)
!3942 = !DILocalVariable(name: "sp", arg: 2, scope: !3939, file: !2360, line: 340, type: !150)
!3943 = !DILocalVariable(name: "loop", scope: !3939, file: !2360, line: 342, type: !163)
!3944 = !DILocation(line: 0, scope: !3939)
!3945 = !DILocation(line: 344, column: 2, scope: !3939)
!3946 = !DILocation(line: 345, column: 11, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3939, file: !2360, line: 344, column: 5)
!3948 = !DILocation(line: 345, column: 3, scope: !3947)
!3949 = !DILocation(line: 351, column: 4, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3947, file: !2360, line: 345, column: 16)
!3951 = !DILocation(line: 354, column: 4, scope: !3950)
!3952 = !DILocation(line: 357, column: 4, scope: !3950)
!3953 = !DILocation(line: 360, column: 4, scope: !3950)
!3954 = !DILocation(line: 0, scope: !3950)
!3955 = !DILocation(line: 370, column: 12, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3939, file: !2360, line: 370, column: 6)
!3957 = !DILocation(line: 370, column: 22, scope: !3956)
!3958 = !DILocation(line: 371, column: 19, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3956, file: !2360, line: 370, column: 42)
!3960 = !DILocation(line: 372, column: 2, scope: !3959)
!3961 = !DILocation(line: 376, column: 2, scope: !3939)
!3962 = distinct !DISubprogram(name: "extract_width", scope: !2360, file: !2360, line: 388, type: !3781, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3963)
!3963 = !{!3964, !3965, !3966, !3967}
!3964 = !DILocalVariable(name: "conv", arg: 1, scope: !3962, file: !2360, line: 388, type: !3437)
!3965 = !DILocalVariable(name: "sp", arg: 2, scope: !3962, file: !2360, line: 389, type: !150)
!3966 = !DILocalVariable(name: "wp", scope: !3962, file: !2360, line: 398, type: !150)
!3967 = !DILocalVariable(name: "width", scope: !3962, file: !2360, line: 399, type: !356)
!3968 = !DILocation(line: 0, scope: !3962)
!3969 = !DILocation(line: 391, column: 8, scope: !3962)
!3970 = !DILocation(line: 391, column: 22, scope: !3962)
!3971 = !DILocation(line: 393, column: 6, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3962, file: !2360, line: 393, column: 6)
!3973 = !DILocation(line: 393, column: 10, scope: !3972)
!3974 = !DILocation(line: 393, column: 6, scope: !3962)
!3975 = !DILocation(line: 394, column: 20, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3972, file: !2360, line: 393, column: 18)
!3977 = !DILocation(line: 395, column: 10, scope: !3976)
!3978 = !DILocation(line: 395, column: 3, scope: !3976)
!3979 = !DILocation(line: 399, column: 17, scope: !3962)
!3980 = !DILocation(line: 401, column: 6, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3962, file: !2360, line: 401, column: 6)
!3982 = !DILocation(line: 401, column: 9, scope: !3981)
!3983 = !DILocation(line: 401, column: 6, scope: !3962)
!3984 = !DILocation(line: 402, column: 23, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3981, file: !2360, line: 401, column: 16)
!3986 = !DILocation(line: 403, column: 9, scope: !3985)
!3987 = !DILocation(line: 403, column: 21, scope: !3985)
!3988 = !DILocation(line: 405, column: 11, scope: !3985)
!3989 = !DILocation(line: 404, column: 21, scope: !3985)
!3990 = !DILocation(line: 406, column: 2, scope: !3985)
!3991 = !DILocation(line: 409, column: 1, scope: !3962)
!3992 = distinct !DISubprogram(name: "extract_prec", scope: !2360, file: !2360, line: 420, type: !3781, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !3993)
!3993 = !{!3994, !3995, !3996}
!3994 = !DILocalVariable(name: "conv", arg: 1, scope: !3992, file: !2360, line: 420, type: !3437)
!3995 = !DILocalVariable(name: "sp", arg: 2, scope: !3992, file: !2360, line: 421, type: !150)
!3996 = !DILocalVariable(name: "prec", scope: !3992, file: !2360, line: 435, type: !356)
!3997 = !DILocation(line: 0, scope: !3992)
!3998 = !DILocation(line: 423, column: 24, scope: !3992)
!3999 = !DILocation(line: 423, column: 28, scope: !3992)
!4000 = !DILocation(line: 423, column: 8, scope: !3992)
!4001 = !DILocation(line: 423, column: 21, scope: !3992)
!4002 = !DILocation(line: 425, column: 6, scope: !3992)
!4003 = !DILocation(line: 428, column: 2, scope: !3992)
!4004 = !DILocation(line: 430, column: 6, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3992, file: !2360, line: 430, column: 6)
!4006 = !DILocation(line: 430, column: 10, scope: !4005)
!4007 = !DILocation(line: 430, column: 6, scope: !3992)
!4008 = !DILocation(line: 431, column: 19, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4005, file: !2360, line: 430, column: 18)
!4010 = !DILocation(line: 432, column: 10, scope: !4009)
!4011 = !DILocation(line: 432, column: 3, scope: !4009)
!4012 = !DILocation(line: 435, column: 16, scope: !3992)
!4013 = !DILocation(line: 437, column: 8, scope: !3992)
!4014 = !DILocation(line: 437, column: 19, scope: !3992)
!4015 = !DILocation(line: 439, column: 10, scope: !3992)
!4016 = !DILocation(line: 438, column: 20, scope: !3992)
!4017 = !DILocation(line: 441, column: 9, scope: !3992)
!4018 = !DILocation(line: 442, column: 1, scope: !3992)
!4019 = distinct !DISubprogram(name: "extract_length", scope: !2360, file: !2360, line: 453, type: !3781, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !4020)
!4020 = !{!4021, !4022}
!4021 = !DILocalVariable(name: "conv", arg: 1, scope: !4019, file: !2360, line: 453, type: !3437)
!4022 = !DILocalVariable(name: "sp", arg: 2, scope: !4019, file: !2360, line: 454, type: !150)
!4023 = !DILocation(line: 0, scope: !4019)
!4024 = !DILocation(line: 456, column: 10, scope: !4019)
!4025 = !DILocation(line: 456, column: 2, scope: !4019)
!4026 = !DILocation(line: 458, column: 8, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !2360, line: 458, column: 7)
!4028 = distinct !DILexicalBlock(scope: !4019, file: !2360, line: 456, column: 15)
!4029 = !DILocation(line: 458, column: 7, scope: !4027)
!4030 = !DILocation(line: 458, column: 13, scope: !4027)
!4031 = !DILocation(line: 0, scope: !4027)
!4032 = !DILocation(line: 458, column: 7, scope: !4028)
!4033 = !DILocation(line: 459, column: 21, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4027, file: !2360, line: 458, column: 21)
!4035 = !DILocation(line: 460, column: 4, scope: !4034)
!4036 = !DILocation(line: 461, column: 3, scope: !4034)
!4037 = !DILocation(line: 462, column: 21, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4027, file: !2360, line: 461, column: 10)
!4039 = !DILocation(line: 466, column: 8, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4028, file: !2360, line: 466, column: 7)
!4041 = !DILocation(line: 466, column: 7, scope: !4040)
!4042 = !DILocation(line: 466, column: 13, scope: !4040)
!4043 = !DILocation(line: 0, scope: !4040)
!4044 = !DILocation(line: 466, column: 7, scope: !4028)
!4045 = !DILocation(line: 467, column: 21, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4040, file: !2360, line: 466, column: 21)
!4047 = !DILocation(line: 468, column: 4, scope: !4046)
!4048 = !DILocation(line: 469, column: 3, scope: !4046)
!4049 = !DILocation(line: 470, column: 21, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4040, file: !2360, line: 469, column: 10)
!4051 = !DILocation(line: 474, column: 9, scope: !4028)
!4052 = !DILocation(line: 474, column: 20, scope: !4028)
!4053 = !DILocation(line: 475, column: 3, scope: !4028)
!4054 = !DILocation(line: 476, column: 3, scope: !4028)
!4055 = !DILocation(line: 478, column: 9, scope: !4028)
!4056 = !DILocation(line: 478, column: 20, scope: !4028)
!4057 = !DILocation(line: 479, column: 3, scope: !4028)
!4058 = !DILocation(line: 480, column: 3, scope: !4028)
!4059 = !DILocation(line: 482, column: 9, scope: !4028)
!4060 = !DILocation(line: 482, column: 20, scope: !4028)
!4061 = !DILocation(line: 483, column: 3, scope: !4028)
!4062 = !DILocation(line: 484, column: 3, scope: !4028)
!4063 = !DILocation(line: 486, column: 9, scope: !4028)
!4064 = !DILocation(line: 486, column: 20, scope: !4028)
!4065 = !DILocation(line: 487, column: 3, scope: !4028)
!4066 = !DILocation(line: 492, column: 21, scope: !4028)
!4067 = !DILocation(line: 493, column: 3, scope: !4028)
!4068 = !DILocation(line: 495, column: 9, scope: !4028)
!4069 = !DILocation(line: 495, column: 20, scope: !4028)
!4070 = !DILocation(line: 496, column: 3, scope: !4028)
!4071 = !DILocation(line: 498, column: 2, scope: !4019)
!4072 = distinct !DISubprogram(name: "extract_specifier", scope: !2360, file: !2360, line: 513, type: !3781, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !4073)
!4073 = !{!4074, !4075, !4076, !4077}
!4074 = !DILocalVariable(name: "conv", arg: 1, scope: !4072, file: !2360, line: 513, type: !3437)
!4075 = !DILocalVariable(name: "sp", arg: 2, scope: !4072, file: !2360, line: 514, type: !150)
!4076 = !DILocalVariable(name: "unsupported", scope: !4072, file: !2360, line: 516, type: !163)
!4077 = !DILabel(scope: !4078, name: "int_conv", file: !2360, line: 526)
!4078 = distinct !DILexicalBlock(scope: !4072, file: !2360, line: 520, column: 27)
!4079 = !DILocation(line: 0, scope: !4072)
!4080 = !DILocation(line: 518, column: 20, scope: !4072)
!4081 = !DILocation(line: 518, column: 8, scope: !4072)
!4082 = !DILocation(line: 518, column: 18, scope: !4072)
!4083 = !DILocation(line: 520, column: 2, scope: !4072)
!4084 = !DILocation(line: 525, column: 3, scope: !4078)
!4085 = !DILocation(line: 0, scope: !4078)
!4086 = !DILocation(line: 526, column: 1, scope: !4078)
!4087 = !DILocation(line: 528, column: 24, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4078, file: !2360, line: 528, column: 7)
!4089 = !DILocation(line: 528, column: 7, scope: !4078)
!4090 = !DILocation(line: 535, column: 23, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4078, file: !2360, line: 535, column: 7)
!4092 = !DILocation(line: 535, column: 7, scope: !4078)
!4093 = !DILocation(line: 536, column: 36, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4091, file: !2360, line: 535, column: 31)
!4095 = !DILocation(line: 537, column: 3, scope: !4094)
!4096 = !DILocation(line: 570, column: 9, scope: !4078)
!4097 = !DILocation(line: 570, column: 23, scope: !4078)
!4098 = !DILocation(line: 575, column: 4, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !2360, line: 573, column: 48)
!4100 = distinct !DILexicalBlock(scope: !4078, file: !2360, line: 573, column: 7)
!4101 = !DILocation(line: 603, column: 9, scope: !4078)
!4102 = !DILocation(line: 603, column: 23, scope: !4078)
!4103 = !DILocation(line: 605, column: 24, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4078, file: !2360, line: 605, column: 7)
!4105 = !DILocation(line: 605, column: 7, scope: !4078)
!4106 = !DILocation(line: 612, column: 9, scope: !4078)
!4107 = !DILocation(line: 612, column: 23, scope: !4078)
!4108 = !DILocation(line: 619, column: 24, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4078, file: !2360, line: 619, column: 7)
!4110 = !DILocation(line: 619, column: 7, scope: !4078)
!4111 = !DILocation(line: 625, column: 9, scope: !4078)
!4112 = !DILocation(line: 625, column: 17, scope: !4078)
!4113 = !DILocation(line: 626, column: 3, scope: !4078)
!4114 = !DILocation(line: 629, column: 20, scope: !4072)
!4115 = !DILocation(line: 629, column: 8, scope: !4072)
!4116 = !DILocation(line: 518, column: 23, scope: !4072)
!4117 = !DILocation(line: 631, column: 2, scope: !4072)
!4118 = distinct !DISubprogram(name: "extract_decimal", scope: !2360, file: !2360, line: 318, type: !4119, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !4122)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!356, !4121}
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!4122 = !{!4123, !4124, !4125}
!4123 = !DILocalVariable(name: "str", arg: 1, scope: !4118, file: !2360, line: 318, type: !4121)
!4124 = !DILocalVariable(name: "sp", scope: !4118, file: !2360, line: 320, type: !150)
!4125 = !DILocalVariable(name: "val", scope: !4118, file: !2360, line: 321, type: !356)
!4126 = !DILocation(line: 0, scope: !4118)
!4127 = !DILocation(line: 320, column: 19, scope: !4118)
!4128 = !DILocation(line: 323, column: 37, scope: !4118)
!4129 = !DILocation(line: 323, column: 17, scope: !4118)
!4130 = !DILocation(line: 323, column: 9, scope: !4118)
!4131 = !DILocation(line: 323, column: 2, scope: !4118)
!4132 = !DILocation(line: 324, column: 13, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4118, file: !2360, line: 323, column: 43)
!4134 = !DILocation(line: 324, column: 24, scope: !4133)
!4135 = !DILocation(line: 324, column: 19, scope: !4133)
!4136 = !DILocation(line: 324, column: 27, scope: !4133)
!4137 = distinct !{!4137, !4131, !4138}
!4138 = !DILocation(line: 325, column: 2, scope: !4118)
!4139 = !DILocation(line: 326, column: 7, scope: !4118)
!4140 = !DILocation(line: 327, column: 2, scope: !4118)
!4141 = distinct !DISubprogram(name: "isdigit", scope: !3920, file: !3920, line: 43, type: !114, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !4142)
!4142 = !{!4143}
!4143 = !DILocalVariable(name: "a", arg: 1, scope: !4141, file: !3920, line: 43, type: !103)
!4144 = !DILocation(line: 0, scope: !4141)
!4145 = !DILocation(line: 45, column: 29, scope: !4141)
!4146 = !DILocation(line: 45, column: 45, scope: !4141)
!4147 = !DILocation(line: 45, column: 2, scope: !4141)
!4148 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4149, file: !4149, line: 9, type: !2917, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2394, retainedNodes: !478)
!4149 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!4150 = !DILocation(line: 11, column: 1, scope: !4148)
!4151 = !{i64 2147561664, i64 2147561707, i64 2147561747}
!4152 = !DILocation(line: 12, column: 1, scope: !4148)
!4153 = !{i64 2147565891, i64 2147565934, i64 2147565974}
!4154 = !DILocation(line: 13, column: 1, scope: !4148)
!4155 = !{i64 2147566100, i64 2147566143, i64 2147566183}
!4156 = !DILocation(line: 14, column: 1, scope: !4148)
!4157 = !{i64 2147566269, i64 2147566312, i64 2147566352}
!4158 = !DILocation(line: 15, column: 1, scope: !4148)
!4159 = !{i64 2147566432, i64 2147566475, i64 2147566515}
!4160 = !DILocation(line: 16, column: 1, scope: !4148)
!4161 = !{i64 2147566616, i64 2147566659, i64 2147566699}
!4162 = !DILocation(line: 17, column: 1, scope: !4148)
!4163 = !{i64 2147566795, i64 2147566838, i64 2147566878}
!4164 = !DILocation(line: 18, column: 1, scope: !4148)
!4165 = !{i64 2147567037, i64 2147567080, i64 2147567120}
!4166 = !DILocation(line: 19, column: 1, scope: !4148)
!4167 = !{i64 2147567272, i64 2147567315, i64 2147567355}
!4168 = !DILocation(line: 20, column: 1, scope: !4148)
!4169 = !{i64 2147567458, i64 2147567501, i64 2147567541}
!4170 = !DILocation(line: 21, column: 1, scope: !4148)
!4171 = !{i64 2147567674, i64 2147567717, i64 2147567757}
!4172 = !DILocation(line: 22, column: 1, scope: !4148)
!4173 = !{i64 2147567877, i64 2147567920, i64 2147567960}
!4174 = !DILocation(line: 23, column: 1, scope: !4148)
!4175 = !{i64 2147568080, i64 2147568123, i64 2147568163}
!4176 = !DILocation(line: 24, column: 1, scope: !4148)
!4177 = !{i64 2147568255, i64 2147568298, i64 2147568338}
!4178 = !DILocation(line: 25, column: 1, scope: !4148)
!4179 = !{i64 2147568463, i64 2147568506, i64 2147568546}
!4180 = !DILocation(line: 26, column: 1, scope: !4148)
!4181 = !{i64 2147568667, i64 2147568710, i64 2147568750}
!4182 = !DILocation(line: 27, column: 1, scope: !4148)
!4183 = !{i64 2147568860, i64 2147568903, i64 2147568943}
!4184 = !DILocation(line: 28, column: 1, scope: !4148)
!4185 = !{i64 2147569062, i64 2147569105, i64 2147569145}
!4186 = !DILocation(line: 29, column: 1, scope: !4148)
!4187 = !{i64 2147569289, i64 2147569332, i64 2147569372}
!4188 = !DILocation(line: 30, column: 1, scope: !4148)
!4189 = !{i64 2147569491, i64 2147569534, i64 2147569574}
!4190 = !DILocation(line: 31, column: 1, scope: !4148)
!4191 = !{i64 2147569706, i64 2147569749, i64 2147569789}
!4192 = !DILocation(line: 32, column: 1, scope: !4148)
!4193 = !{i64 2147569878, i64 2147569921, i64 2147569961}
!4194 = !DILocation(line: 33, column: 1, scope: !4148)
!4195 = !{i64 2147570080, i64 2147570123, i64 2147570163}
!4196 = !DILocation(line: 34, column: 1, scope: !4148)
!4197 = !{i64 2147570306, i64 2147570349, i64 2147570389}
!4198 = !DILocation(line: 35, column: 1, scope: !4148)
!4199 = !{i64 2147570505, i64 2147570548, i64 2147570588}
!4200 = !DILocation(line: 36, column: 1, scope: !4148)
!4201 = !{i64 2147570680, i64 2147570723, i64 2147570763}
!4202 = !DILocation(line: 37, column: 1, scope: !4148)
!4203 = !{i64 2147570933, i64 2147570976, i64 2147571016}
!4204 = !DILocation(line: 38, column: 1, scope: !4148)
!4205 = !{i64 2147571174, i64 2147571217, i64 2147571257}
!4206 = !DILocation(line: 39, column: 1, scope: !4148)
!4207 = !{i64 2147571409, i64 2147571452, i64 2147571492}
!4208 = !DILocation(line: 40, column: 1, scope: !4148)
!4209 = !{i64 2147571641, i64 2147571684, i64 2147571724}
!4210 = !DILocation(line: 41, column: 1, scope: !4148)
!4211 = !{i64 2147571867, i64 2147571910, i64 2147571950}
!4212 = !DILocation(line: 42, column: 1, scope: !4148)
!4213 = !{i64 2147572093, i64 2147572136, i64 2147572176}
!4214 = !DILocation(line: 43, column: 1, scope: !4148)
!4215 = !{i64 2147572319, i64 2147572362, i64 2147572402}
!4216 = !DILocation(line: 44, column: 1, scope: !4148)
!4217 = !{i64 2147572554, i64 2147572597, i64 2147572637}
!4218 = !DILocation(line: 45, column: 1, scope: !4148)
!4219 = !{i64 2147572798, i64 2147572841, i64 2147572881}
!4220 = !DILocation(line: 46, column: 1, scope: !4148)
!4221 = !{i64 2147573045, i64 2147573088, i64 2147573128}
!4222 = !DILocation(line: 47, column: 1, scope: !4148)
!4223 = !{i64 2147573277, i64 2147573320, i64 2147573360}
!4224 = !DILocation(line: 48, column: 1, scope: !4148)
!4225 = !{i64 2147573521, i64 2147573564, i64 2147573604}
!4226 = !DILocation(line: 49, column: 1, scope: !4148)
!4227 = !{i64 2147573759, i64 2147573802, i64 2147573842}
!4228 = !DILocation(line: 50, column: 1, scope: !4148)
!4229 = !{i64 2147574033, i64 2147574076, i64 2147574116}
!4230 = !DILocation(line: 51, column: 1, scope: !4148)
!4231 = !{i64 2147574271, i64 2147574314, i64 2147574354}
!4232 = !DILocation(line: 52, column: 1, scope: !4148)
!4233 = !{i64 2147574524, i64 2147574567, i64 2147574607}
!4234 = !DILocation(line: 53, column: 1, scope: !4148)
!4235 = !{i64 2147578829, i64 2147578872, i64 2147578912}
!4236 = !DILocation(line: 54, column: 1, scope: !4148)
!4237 = !{i64 2147579064, i64 2147579107, i64 2147579147}
!4238 = !DILocation(line: 55, column: 1, scope: !4148)
!4239 = !{i64 2147579314, i64 2147579357, i64 2147579397}
!4240 = !DILocation(line: 56, column: 1, scope: !4148)
!4241 = !{i64 2147579561, i64 2147579604, i64 2147579644}
!4242 = !DILocation(line: 57, column: 1, scope: !4148)
!4243 = !{i64 2147579796, i64 2147579839, i64 2147579879}
!4244 = !DILocation(line: 58, column: 1, scope: !4148)
!4245 = !{i64 2147580031, i64 2147580074, i64 2147580114}
!4246 = !DILocation(line: 59, column: 1, scope: !4148)
!4247 = !{i64 2147580266, i64 2147580309, i64 2147580349}
!4248 = !DILocation(line: 60, column: 1, scope: !4148)
!4249 = !{i64 2147580501, i64 2147580544, i64 2147580584}
!4250 = !DILocation(line: 61, column: 1, scope: !4148)
!4251 = !{i64 2147580745, i64 2147580788, i64 2147580828}
!4252 = !DILocation(line: 62, column: 1, scope: !4148)
!4253 = !{i64 2147580983, i64 2147581026, i64 2147581066}
!4254 = !DILocation(line: 63, column: 1, scope: !4148)
!4255 = !{i64 2147581224, i64 2147581267, i64 2147581307}
!4256 = !DILocation(line: 64, column: 1, scope: !4148)
!4257 = !{i64 2147581504, i64 2147581547, i64 2147581587}
!4258 = !DILocation(line: 65, column: 1, scope: !4148)
!4259 = !{i64 2147581763, i64 2147581806, i64 2147581846}
!4260 = !DILocation(line: 66, column: 1, scope: !4148)
!4261 = !{i64 2147582001, i64 2147582044, i64 2147582084}
!4262 = !DILocation(line: 67, column: 1, scope: !4148)
!4263 = !{i64 2147582230, i64 2147582273, i64 2147582313}
!4264 = !DILocation(line: 68, column: 1, scope: !4148)
!4265 = !{i64 2147582438, i64 2147582481, i64 2147582521}
!4266 = !DILocation(line: 69, column: 1, scope: !4148)
!4267 = !{i64 2147582649, i64 2147582692, i64 2147582732}
!4268 = !DILocation(line: 70, column: 1, scope: !4148)
!4269 = !{i64 2147582884, i64 2147582927, i64 2147582967}
!4270 = !DILocation(line: 71, column: 1, scope: !4148)
!4271 = !{i64 2147583113, i64 2147583156, i64 2147583196}
!4272 = !DILocation(line: 72, column: 1, scope: !4148)
!4273 = !{i64 2147583351, i64 2147583394, i64 2147583434}
!4274 = !DILocation(line: 73, column: 1, scope: !4148)
!4275 = !{i64 2147583583, i64 2147583626, i64 2147583666}
!4276 = !DILocation(line: 74, column: 1, scope: !4148)
!4277 = !{i64 2147583809, i64 2147583852, i64 2147583892}
!4278 = !DILocation(line: 75, column: 1, scope: !4148)
!4279 = !{i64 2147584026, i64 2147584069, i64 2147584109}
!4280 = !DILocation(line: 76, column: 1, scope: !4148)
!4281 = !{i64 2147584258, i64 2147584301, i64 2147584341}
!4282 = !DILocation(line: 77, column: 1, scope: !4148)
!4283 = !{i64 2147584484, i64 2147584527, i64 2147584567}
!4284 = !DILocation(line: 78, column: 1, scope: !4148)
!4285 = !{i64 2147584698, i64 2147584741, i64 2147584781}
!4286 = !DILocation(line: 79, column: 1, scope: !4148)
!4287 = !{i64 2147584918, i64 2147584961, i64 2147585001}
!4288 = !DILocation(line: 80, column: 1, scope: !4148)
!4289 = !{i64 2147585150, i64 2147585193, i64 2147585233}
!4290 = !DILocation(line: 81, column: 1, scope: !4148)
!4291 = !{i64 2147585358, i64 2147585401, i64 2147585441}
!4292 = !DILocation(line: 82, column: 1, scope: !4148)
!4293 = !{i64 2147585563, i64 2147585606, i64 2147585646}
!4294 = !DILocation(line: 83, column: 1, scope: !4148)
!4295 = !{i64 2147585780, i64 2147585823, i64 2147585863}
!4296 = !DILocation(line: 84, column: 1, scope: !4148)
!4297 = !{i64 2147585994, i64 2147586037, i64 2147586077}
!4298 = !DILocation(line: 85, column: 1, scope: !4148)
!4299 = !{i64 2147586220, i64 2147586263, i64 2147586303}
!4300 = !DILocation(line: 86, column: 1, scope: !4148)
!4301 = !{i64 2147586440, i64 2147586483, i64 2147586523}
!4302 = !DILocation(line: 87, column: 1, scope: !4148)
!4303 = !{i64 2147586645, i64 2147586688, i64 2147586728}
!4304 = !DILocation(line: 88, column: 1, scope: !4148)
!4305 = !{i64 2147590938, i64 2147590981, i64 2147591021}
!4306 = !DILocation(line: 89, column: 1, scope: !4148)
!4307 = !{i64 2147591173, i64 2147591216, i64 2147591256}
!4308 = !DILocation(line: 90, column: 1, scope: !4148)
!4309 = !{i64 2147591423, i64 2147591466, i64 2147591506}
!4310 = !DILocation(line: 91, column: 1, scope: !4148)
!4311 = !{i64 2147591673, i64 2147591716, i64 2147591756}
!4312 = !DILocation(line: 92, column: 1, scope: !4148)
!4313 = !{i64 2147591911, i64 2147591954, i64 2147591994}
!4314 = !DILocation(line: 93, column: 1, scope: !4148)
!4315 = !{i64 2147592122, i64 2147592165, i64 2147592205}
!4316 = !DILocation(line: 94, column: 1, scope: !4148)
!4317 = !{i64 2147592339, i64 2147592382, i64 2147592422}
!4318 = !DILocation(line: 95, column: 1, scope: !4148)
!4319 = !{i64 2147592535, i64 2147592578, i64 2147592618}
!4320 = !DILocation(line: 96, column: 1, scope: !4148)
!4321 = !{i64 2147592737, i64 2147592780, i64 2147592820}
!4322 = !DILocation(line: 97, column: 1, scope: !4148)
!4323 = !{i64 2147592930, i64 2147592973, i64 2147593013}
!4324 = !DILocation(line: 98, column: 1, scope: !4148)
!4325 = !{i64 2147593138, i64 2147593181, i64 2147593221}
!4326 = !DILocation(line: 99, column: 1, scope: !4148)
!4327 = !{i64 2147593334, i64 2147593377, i64 2147593417}
!4328 = !DILocation(line: 100, column: 1, scope: !4148)
!4329 = !{i64 2147593566, i64 2147593609, i64 2147593649}
!4330 = !DILocation(line: 101, column: 1, scope: !4148)
!4331 = !{i64 2147593777, i64 2147593820, i64 2147593860}
!4332 = !DILocation(line: 102, column: 1, scope: !4148)
!4333 = !{i64 2147593976, i64 2147594019, i64 2147594059}
!4334 = !DILocation(line: 103, column: 1, scope: !4148)
!4335 = !{i64 2147594151, i64 2147594194, i64 2147594234}
!4336 = !DILocation(line: 104, column: 1, scope: !4148)
!4337 = !{i64 2147594335, i64 2147594378, i64 2147594418}
!4338 = !DILocation(line: 105, column: 1, scope: !4148)
!4339 = !{i64 2147594537, i64 2147594580, i64 2147594620}
!4340 = !DILocation(line: 106, column: 1, scope: !4148)
!4341 = !{i64 2147594742, i64 2147594785, i64 2147594825}
!4342 = !DILocation(line: 107, column: 1, scope: !4148)
!4343 = !{i64 2147594941, i64 2147594984, i64 2147595024}
!4344 = !DILocation(line: 108, column: 1, scope: !4148)
!4345 = !{i64 2147595107, i64 2147595150, i64 2147595190}
!4346 = !DILocation(line: 109, column: 1, scope: !4148)
!4347 = !{i64 2147595291, i64 2147595334, i64 2147595374}
!4348 = !DILocation(line: 110, column: 1, scope: !4148)
!4349 = !{i64 2147595481, i64 2147595524, i64 2147595564}
!4350 = !DILocation(line: 111, column: 1, scope: !4148)
!4351 = !{i64 2147595665, i64 2147595708, i64 2147595748}
!4352 = !DILocation(line: 112, column: 1, scope: !4148)
!4353 = !{i64 2147595879, i64 2147595922, i64 2147595962}
!4354 = !DILocation(line: 113, column: 1, scope: !4148)
!4355 = !{i64 2147596090, i64 2147596133, i64 2147596173}
!4356 = !DILocation(line: 114, column: 1, scope: !4148)
!4357 = !{i64 2147596313, i64 2147596356, i64 2147596396}
!4358 = !DILocation(line: 115, column: 1, scope: !4148)
!4359 = !{i64 2147596497, i64 2147596540, i64 2147596580}
!4360 = !DILocation(line: 116, column: 1, scope: !4148)
!4361 = !{i64 2147596711, i64 2147596754, i64 2147596794}
!4362 = !DILocation(line: 117, column: 1, scope: !4148)
!4363 = !{i64 2147596877, i64 2147596920, i64 2147596960}
!4364 = !DILocation(line: 118, column: 1, scope: !4148)
!4365 = !{i64 2147597058, i64 2147597101, i64 2147597141}
!4366 = !DILocation(line: 119, column: 1, scope: !4148)
!4367 = !{i64 2147597251, i64 2147597294, i64 2147597334}
!4368 = !DILocation(line: 120, column: 1, scope: !4148)
!4369 = !{i64 2147597477, i64 2147597520, i64 2147597560}
!4370 = !DILocation(line: 121, column: 1, scope: !4148)
!4371 = !{i64 2147597691, i64 2147597734, i64 2147597774}
!4372 = !DILocation(line: 122, column: 1, scope: !4148)
!4373 = !{i64 2147597917, i64 2147597960, i64 2147598000}
!4374 = !DILocation(line: 123, column: 1, scope: !4148)
!4375 = !{i64 2147598134, i64 2147598177, i64 2147598217}
!4376 = !DILocation(line: 124, column: 1, scope: !4148)
!4377 = !{i64 2147598411, i64 2147598454, i64 2147598494}
!4378 = !DILocation(line: 125, column: 1, scope: !4148)
!4379 = !{i64 2147598637, i64 2147598680, i64 2147598720}
!4380 = !DILocation(line: 126, column: 1, scope: !4148)
!4381 = !{i64 2147598845, i64 2147598888, i64 2147598928}
!4382 = !DILocation(line: 127, column: 1, scope: !4148)
!4383 = !{i64 2147599041, i64 2147599084, i64 2147599124}
!4384 = !DILocation(line: 128, column: 1, scope: !4148)
!4385 = !{i64 2147599306, i64 2147599349, i64 2147599389}
!4386 = !DILocation(line: 129, column: 1, scope: !4148)
!4387 = !{i64 2147599520, i64 2147599563, i64 2147599603}
!4388 = !DILocation(line: 130, column: 1, scope: !4148)
!4389 = !{i64 2147599695, i64 2147599738, i64 2147599778}
!4390 = !DILocation(line: 131, column: 1, scope: !4148)
!4391 = !{i64 2147604010, i64 2147604053, i64 2147604093}
!4392 = !DILocation(line: 132, column: 1, scope: !4148)
!4393 = !{i64 2147604209, i64 2147604252, i64 2147604292}
!4394 = !DILocation(line: 133, column: 1, scope: !4148)
!4395 = !{i64 2147604451, i64 2147604494, i64 2147604534}
!4396 = !DILocation(line: 134, column: 1, scope: !4148)
!4397 = !{i64 2147604614, i64 2147604657, i64 2147604697}
!4398 = !DILocation(line: 135, column: 1, scope: !4148)
!4399 = !{i64 2147604801, i64 2147604844, i64 2147604884}
!4400 = !DILocation(line: 136, column: 1, scope: !4148)
!4401 = !{i64 2147604994, i64 2147605037, i64 2147605077}
!4402 = !DILocation(line: 137, column: 1, scope: !4148)
!4403 = !{i64 2147605177, i64 2147605220, i64 2147605260}
!4404 = !DILocation(line: 138, column: 1, scope: !4148)
!4405 = !{i64 2147605391, i64 2147605434, i64 2147605474}
!4406 = !DILocation(line: 139, column: 1, scope: !4148)
!4407 = !{i64 2147605602, i64 2147605645, i64 2147605685}
!4408 = !DILocation(line: 140, column: 1, scope: !4148)
!4409 = !{i64 2147605822, i64 2147605865, i64 2147605905}
!4410 = !DILocation(line: 141, column: 1, scope: !4148)
!4411 = !{i64 2147606029, i64 2147606072, i64 2147606112}
!4412 = !DILocation(line: 142, column: 1, scope: !4148)
!4413 = !{i64 2147606302, i64 2147606345, i64 2147606385}
!4414 = !DILocation(line: 143, column: 1, scope: !4148)
!4415 = !{i64 2147606550, i64 2147606593, i64 2147606633}
!4416 = !DILocation(line: 144, column: 1, scope: !4148)
!4417 = !{i64 2147606749, i64 2147606792, i64 2147606832}
!4418 = !DILocation(line: 145, column: 1, scope: !4148)
!4419 = !{i64 2147606984, i64 2147607027, i64 2147607067}
!4420 = !DILocation(line: 146, column: 1, scope: !4148)
!4421 = !{i64 2147607234, i64 2147607277, i64 2147607317}
!4422 = !DILocation(line: 147, column: 1, scope: !4148)
!4423 = !{i64 2147607436, i64 2147607479, i64 2147607519}
!4424 = !DILocation(line: 148, column: 1, scope: !4148)
!4425 = !{i64 2147607659, i64 2147607702, i64 2147607742}
!4426 = !DILocation(line: 149, column: 1, scope: !4148)
!4427 = !{i64 2147607873, i64 2147607916, i64 2147607956}
!4428 = !DILocation(line: 150, column: 1, scope: !4148)
!4429 = !{i64 2147608117, i64 2147608160, i64 2147608200}
!4430 = !DILocation(line: 151, column: 1, scope: !4148)
!4431 = !{i64 2147608346, i64 2147608389, i64 2147608429}
!4432 = !DILocation(line: 152, column: 1, scope: !4148)
!4433 = !{i64 2147608575, i64 2147608618, i64 2147608658}
!4434 = !DILocation(line: 153, column: 1, scope: !4148)
!4435 = !{i64 2147608783, i64 2147608826, i64 2147608866}
!4436 = !DILocation(line: 154, column: 1, scope: !4148)
!4437 = !{i64 2147609021, i64 2147609064, i64 2147609104}
!4438 = !DILocation(line: 155, column: 1, scope: !4148)
!4439 = !{i64 2147609247, i64 2147609290, i64 2147609330}
!4440 = !DILocation(line: 156, column: 1, scope: !4148)
!4441 = !{i64 2147609506, i64 2147609549, i64 2147609589}
!4442 = !DILocation(line: 157, column: 1, scope: !4148)
!4443 = !{i64 2147609726, i64 2147609769, i64 2147609809}
!4444 = !DILocation(line: 158, column: 1, scope: !4148)
!4445 = !{i64 2147609958, i64 2147610001, i64 2147610041}
!4446 = !DILocation(line: 159, column: 1, scope: !4148)
!4447 = !{i64 2147610199, i64 2147610242, i64 2147610282}
!4448 = !DILocation(line: 160, column: 1, scope: !4148)
!4449 = !{i64 2147610440, i64 2147610483, i64 2147610523}
!4450 = !DILocation(line: 161, column: 1, scope: !4148)
!4451 = !{i64 2147610663, i64 2147610706, i64 2147610746}
!4452 = !DILocation(line: 162, column: 1, scope: !4148)
!4453 = !{i64 2147610880, i64 2147610923, i64 2147610963}
!4454 = !DILocation(line: 163, column: 1, scope: !4148)
!4455 = !{i64 2147611121, i64 2147611164, i64 2147611204}
!4456 = !DILocation(line: 164, column: 1, scope: !4148)
!4457 = !{i64 2147611308, i64 2147611351, i64 2147611391}
!4458 = !DILocation(line: 165, column: 1, scope: !4148)
!4459 = !{i64 2147611495, i64 2147611538, i64 2147611578}
!4460 = !DILocation(line: 166, column: 1, scope: !4148)
!4461 = !{i64 2147611658, i64 2147611701, i64 2147611741}
!4462 = !DILocation(line: 167, column: 1, scope: !4148)
!4463 = !{i64 2147611917, i64 2147611960, i64 2147612000}
!4464 = !DILocation(line: 168, column: 1, scope: !4148)
!4465 = !{i64 2147612140, i64 2147612183, i64 2147612223}
!4466 = !DILocation(line: 169, column: 1, scope: !4148)
!4467 = !{i64 2147612369, i64 2147612412, i64 2147612452}
!4468 = !DILocation(line: 170, column: 1, scope: !4148)
!4469 = !{i64 2147616626, i64 2147616669, i64 2147616709}
!4470 = !DILocation(line: 171, column: 1, scope: !4148)
!4471 = !{i64 2147616838, i64 2147616881, i64 2147616921}
!4472 = !DILocation(line: 172, column: 1, scope: !4148)
!4473 = !{i64 2147617059, i64 2147617102, i64 2147617142}
!4474 = !DILocation(line: 173, column: 1, scope: !4148)
!4475 = !{i64 2147617273, i64 2147617316, i64 2147617356}
!4476 = !DILocation(line: 174, column: 1, scope: !4148)
!4477 = !{i64 2147617463, i64 2147617506, i64 2147617546}
!4478 = !DILocation(line: 175, column: 1, scope: !4148)
!4479 = !{i64 2147617662, i64 2147617705, i64 2147617745}
!4480 = !DILocation(line: 176, column: 1, scope: !4148)
!4481 = !{i64 2147617867, i64 2147617910, i64 2147617950}
!4482 = !DILocation(line: 177, column: 1, scope: !4148)
!4483 = !{i64 2147618087, i64 2147618130, i64 2147618170}
!4484 = !DILocation(line: 178, column: 1, scope: !4148)
!4485 = !{i64 2147618288, i64 2147618331, i64 2147618371}
!4486 = !DILocation(line: 179, column: 1, scope: !4148)
!4487 = !{i64 2147618487, i64 2147618530, i64 2147618570}
!4488 = !DILocation(line: 180, column: 1, scope: !4148)
!4489 = !{i64 2147618692, i64 2147618735, i64 2147618775}
!4490 = !DILocation(line: 181, column: 1, scope: !4148)
!4491 = !{i64 2147618861, i64 2147618904, i64 2147618944}
!4492 = !DILocation(line: 182, column: 1, scope: !4148)
!4493 = !{i64 2147619045, i64 2147619088, i64 2147619128}
!4494 = !DILocation(line: 183, column: 1, scope: !4148)
!4495 = !{i64 2147619229, i64 2147619272, i64 2147619312}
!4496 = !DILocation(line: 184, column: 1, scope: !4148)
!4497 = !{i64 2147619416, i64 2147619459, i64 2147619499}
!4498 = !DILocation(line: 185, column: 1, scope: !4148)
!4499 = !{i64 2147619600, i64 2147619643, i64 2147619683}
!4500 = !DILocation(line: 186, column: 1, scope: !4148)
!4501 = !{i64 2147619838, i64 2147619881, i64 2147619921}
!4502 = !DILocation(line: 187, column: 1, scope: !4148)
!4503 = !{i64 2147620068, i64 2147620111, i64 2147620151}
!4504 = !DILocation(line: 188, column: 1, scope: !4148)
!4505 = !{i64 2147620297, i64 2147620340, i64 2147620380}
!4506 = !DILocation(line: 189, column: 1, scope: !4148)
!4507 = !{i64 2147620484, i64 2147620527, i64 2147620567}
!4508 = !DILocation(line: 190, column: 1, scope: !4148)
!4509 = !{i64 2147620680, i64 2147620723, i64 2147620763}
!4510 = !DILocation(line: 191, column: 1, scope: !4148)
!4511 = !{i64 2147620888, i64 2147620931, i64 2147620971}
!4512 = !DILocation(line: 192, column: 1, scope: !4148)
!4513 = !{i64 2147621100, i64 2147621143, i64 2147621183}
!4514 = !DILocation(line: 193, column: 1, scope: !4148)
!4515 = !{i64 2147621299, i64 2147621342, i64 2147621382}
!4516 = !DILocation(line: 194, column: 1, scope: !4148)
!4517 = !{i64 2147621537, i64 2147621580, i64 2147621620}
!4518 = !DILocation(line: 195, column: 1, scope: !4148)
!4519 = !{i64 2147621733, i64 2147621776, i64 2147621816}
!4520 = !DILocation(line: 196, column: 1, scope: !4148)
!4521 = !{i64 2147621935, i64 2147621978, i64 2147622018}
!4522 = !DILocation(line: 197, column: 1, scope: !4148)
!4523 = !{i64 2147622128, i64 2147622171, i64 2147622211}
!4524 = !DILocation(line: 198, column: 1, scope: !4148)
!4525 = !{i64 2147622362, i64 2147622405, i64 2147622445}
!4526 = !DILocation(line: 199, column: 1, scope: !4148)
!4527 = !{i64 2147622525, i64 2147622568, i64 2147622608}
!4528 = !DILocation(line: 200, column: 1, scope: !4148)
!4529 = !{i64 2147622764, i64 2147622807, i64 2147622847}
!4530 = !DILocation(line: 201, column: 1, scope: !4148)
!4531 = !{i64 2147623003, i64 2147623046, i64 2147623086}
!4532 = !DILocation(line: 202, column: 1, scope: !4148)
!4533 = !{i64 2147623239, i64 2147623282, i64 2147623322}
!4534 = !DILocation(line: 203, column: 1, scope: !4148)
!4535 = !{i64 2147623469, i64 2147623512, i64 2147623552}
!4536 = !DILocation(line: 204, column: 1, scope: !4148)
!4537 = !{i64 2147623656, i64 2147623699, i64 2147623739}
!4538 = !DILocation(line: 205, column: 1, scope: !4148)
!4539 = !{i64 2147623855, i64 2147623898, i64 2147623938}
!4540 = !DILocation(line: 206, column: 1, scope: !4148)
!4541 = !{i64 2147624126, i64 2147624169, i64 2147624209}
!4542 = !DILocation(line: 207, column: 1, scope: !4148)
!4543 = !{i64 2147624301, i64 2147624344, i64 2147624384}
!4544 = !DILocation(line: 208, column: 1, scope: !4148)
!4545 = !{i64 2147624535, i64 2147624578, i64 2147624618}
!4546 = !DILocation(line: 209, column: 1, scope: !4148)
!4547 = !{i64 2147624743, i64 2147624786, i64 2147624826}
!4548 = !DILocation(line: 210, column: 1, scope: !4148)
!4549 = !{i64 2147624961, i64 2147625004, i64 2147625044}
!4550 = !DILocation(line: 211, column: 1, scope: !4148)
!4551 = !{i64 2147625151, i64 2147625194, i64 2147625234}
!4552 = !DILocation(line: 212, column: 1, scope: !4148)
!4553 = !{i64 2147625347, i64 2147625390, i64 2147625430}
!4554 = !DILocation(line: 213, column: 1, scope: !4148)
!4555 = !{i64 2147625553, i64 2147625596, i64 2147625636}
!4556 = !DILocation(line: 214, column: 1, scope: !4148)
!4557 = !{i64 2147625758, i64 2147625801, i64 2147625841}
!4558 = !DILocation(line: 215, column: 1, scope: !4148)
!4559 = !{i64 2147630033, i64 2147630076, i64 2147630116}
!4560 = !DILocation(line: 216, column: 1, scope: !4148)
!4561 = !{i64 2147630259, i64 2147630302, i64 2147630342}
!4562 = !DILocation(line: 217, column: 1, scope: !4148)
!4563 = !{i64 2147630491, i64 2147630534, i64 2147630574}
!4564 = !DILocation(line: 218, column: 1, scope: !4148)
!4565 = !{i64 2147630675, i64 2147630718, i64 2147630758}
!4566 = !DILocation(line: 219, column: 1, scope: !4148)
!4567 = !{i64 2147630884, i64 2147630927, i64 2147630967}
!4568 = !DILocation(line: 220, column: 1, scope: !4148)
!4569 = !{i64 2147631068, i64 2147631111, i64 2147631151}
!4570 = !DILocation(line: 221, column: 1, scope: !4148)
!4571 = !{i64 2147631294, i64 2147631337, i64 2147631377}
!4572 = !DILocation(line: 222, column: 1, scope: !4148)
!4573 = !{i64 2147631520, i64 2147631563, i64 2147631603}
!4574 = !DILocation(line: 223, column: 1, scope: !4148)
!4575 = !{i64 2147631746, i64 2147631789, i64 2147631829}
!4576 = !DILocation(line: 224, column: 1, scope: !4148)
!4577 = !{i64 2147631972, i64 2147632015, i64 2147632055}
!4578 = !DILocation(line: 225, column: 1, scope: !4148)
!4579 = !{i64 2147632198, i64 2147632241, i64 2147632281}
!4580 = !DILocation(line: 226, column: 1, scope: !4148)
!4581 = !{i64 2147632430, i64 2147632473, i64 2147632513}
!4582 = !DILocation(line: 227, column: 1, scope: !4148)
!4583 = !{i64 2147632668, i64 2147632711, i64 2147632751}
!4584 = !DILocation(line: 228, column: 1, scope: !4148)
!4585 = !{i64 2147632888, i64 2147632931, i64 2147632971}
!4586 = !DILocation(line: 229, column: 1, scope: !4148)
!4587 = !{i64 2147633132, i64 2147633175, i64 2147633215}
!4588 = !DILocation(line: 230, column: 1, scope: !4148)
!4589 = !{i64 2147633373, i64 2147633416, i64 2147633456}
!4590 = !DILocation(line: 231, column: 1, scope: !4148)
!4591 = !{i64 2147633608, i64 2147633651, i64 2147633691}
!4592 = !DILocation(line: 232, column: 1, scope: !4148)
!4593 = !{i64 2147633840, i64 2147633883, i64 2147633923}
!4594 = !DILocation(line: 233, column: 1, scope: !4148)
!4595 = !{i64 2147634042, i64 2147634085, i64 2147634125}
!4596 = !DILocation(line: 234, column: 1, scope: !4148)
!4597 = !{i64 2147634292, i64 2147634335, i64 2147634375}
!4598 = !DILocation(line: 235, column: 1, scope: !4148)
!4599 = !{i64 2147634530, i64 2147634573, i64 2147634613}
!4600 = !DILocation(line: 236, column: 1, scope: !4148)
!4601 = !{i64 2147634714, i64 2147634757, i64 2147634797}
!4602 = !DILocation(line: 237, column: 1, scope: !4148)
!4603 = !{i64 2147634938, i64 2147634981, i64 2147635021}
!4604 = !DILocation(line: 238, column: 1, scope: !4148)
!4605 = !{i64 2147635176, i64 2147635219, i64 2147635259}
!4606 = !DILocation(line: 239, column: 1, scope: !4148)
!4607 = !{i64 2147635414, i64 2147635457, i64 2147635497}
!4608 = !DILocation(line: 240, column: 1, scope: !4148)
!4609 = !{i64 2147635607, i64 2147635650, i64 2147635690}
!4610 = !DILocation(line: 241, column: 1, scope: !4148)
!4611 = !{i64 2147635860, i64 2147635903, i64 2147635943}
!4612 = !DILocation(line: 242, column: 1, scope: !4148)
!4613 = !{i64 2147636074, i64 2147636117, i64 2147636157}
!4614 = !DILocation(line: 243, column: 1, scope: !4148)
!4615 = !{i64 2147636282, i64 2147636325, i64 2147636365}
!4616 = !DILocation(line: 244, column: 1, scope: !4148)
!4617 = !{i64 2147636472, i64 2147636515, i64 2147636555}
!4618 = !DILocation(line: 245, column: 1, scope: !4148)
!4619 = !{i64 2147636686, i64 2147636729, i64 2147636769}
!4620 = !DILocation(line: 246, column: 1, scope: !4148)
!4621 = !{i64 2147636948, i64 2147636991, i64 2147637031}
!4622 = !DILocation(line: 247, column: 1, scope: !4148)
!4623 = !{i64 2147637159, i64 2147637202, i64 2147637242}
!4624 = !DILocation(line: 248, column: 1, scope: !4148)
!4625 = !{i64 2147637403, i64 2147637446, i64 2147637486}
!4626 = !DILocation(line: 249, column: 1, scope: !4148)
!4627 = !{i64 2147637614, i64 2147637657, i64 2147637697}
!4628 = !DILocation(line: 250, column: 1, scope: !4148)
!4629 = !{i64 2147637843, i64 2147637886, i64 2147637926}
!4630 = !DILocation(line: 251, column: 1, scope: !4148)
!4631 = !{i64 2147638108, i64 2147638151, i64 2147638191}
!4632 = !DILocation(line: 252, column: 1, scope: !4148)
!4633 = !{i64 2147642374, i64 2147642417, i64 2147642457}
!4634 = !DILocation(line: 253, column: 1, scope: !4148)
!4635 = !{i64 2147642570, i64 2147642613, i64 2147642653}
!4636 = !DILocation(line: 254, column: 1, scope: !4148)
!4637 = !{i64 2147642793, i64 2147642836, i64 2147642876}
!4638 = !DILocation(line: 255, column: 1, scope: !4148)
!4639 = !{i64 2147642956, i64 2147642999, i64 2147643039}
!4640 = !DILocation(line: 256, column: 1, scope: !4148)
!4641 = !{i64 2147643161, i64 2147643204, i64 2147643244}
!4642 = !DILocation(line: 257, column: 1, scope: !4148)
!4643 = !{i64 2147643381, i64 2147643424, i64 2147643464}
!4644 = !DILocation(line: 258, column: 1, scope: !4148)
!4645 = !{i64 2147643595, i64 2147643638, i64 2147643678}
!4646 = !DILocation(line: 259, column: 1, scope: !4148)
!4647 = !{i64 2147643809, i64 2147643852, i64 2147643892}
!4648 = !DILocation(line: 260, column: 1, scope: !4148)
!4649 = !{i64 2147644020, i64 2147644063, i64 2147644103}
!4650 = !DILocation(line: 261, column: 1, scope: !4148)
!4651 = !{i64 2147644213, i64 2147644256, i64 2147644296}
!4652 = !DILocation(line: 262, column: 1, scope: !4148)
!4653 = !{i64 2147644412, i64 2147644455, i64 2147644495}
!4654 = !DILocation(line: 263, column: 1, scope: !4148)
!4655 = !{i64 2147644584, i64 2147644627, i64 2147644667}
!4656 = !DILocation(line: 264, column: 1, scope: !4148)
!4657 = !{i64 2147644777, i64 2147644820, i64 2147644860}
!4658 = !DILocation(line: 265, column: 1, scope: !4148)
!4659 = !{i64 2147644973, i64 2147645016, i64 2147645056}
!4660 = !DILocation(line: 266, column: 1, scope: !4148)
!4661 = !{i64 2147645200, i64 2147645243, i64 2147645283}
!4662 = !DILocation(line: 267, column: 1, scope: !4148)
!4663 = !{i64 2147645417, i64 2147645460, i64 2147645500}
!4664 = !DILocation(line: 268, column: 1, scope: !4148)
!4665 = !{i64 2147645709, i64 2147645752, i64 2147645792}
!4666 = !DILocation(line: 269, column: 1, scope: !4148)
!4667 = !{i64 2147645941, i64 2147645984, i64 2147646024}
!4668 = !DILocation(line: 270, column: 1, scope: !4148)
!4669 = !{i64 2147646158, i64 2147646201, i64 2147646241}
!4670 = !DILocation(line: 271, column: 1, scope: !4148)
!4671 = !{i64 2147646365, i64 2147646408, i64 2147646448}
!4672 = !DILocation(line: 272, column: 1, scope: !4148)
!4673 = !{i64 2147646566, i64 2147646609, i64 2147646649}
!4674 = !DILocation(line: 273, column: 1, scope: !4148)
!4675 = !{i64 2147646798, i64 2147646841, i64 2147646881}
!4676 = !DILocation(line: 274, column: 1, scope: !4148)
!4677 = !{i64 2147647006, i64 2147647049, i64 2147647089}
!4678 = !DILocation(line: 275, column: 1, scope: !4148)
!4679 = !{i64 2147647196, i64 2147647239, i64 2147647279}
!4680 = !DILocation(line: 276, column: 1, scope: !4148)
!4681 = !{i64 2147647422, i64 2147647465, i64 2147647505}
!4682 = !DILocation(line: 277, column: 1, scope: !4148)
!4683 = !{i64 2147647611, i64 2147647654, i64 2147647694}
!4684 = !DILocation(line: 278, column: 1, scope: !4148)
!4685 = !{i64 2147647882, i64 2147647925, i64 2147647965}
!4686 = !DILocation(line: 279, column: 1, scope: !4148)
!4687 = !{i64 2147648102, i64 2147648145, i64 2147648185}
!4688 = !DILocation(line: 280, column: 1, scope: !4148)
!4689 = !{i64 2147648355, i64 2147648398, i64 2147648438}
!4690 = !DILocation(line: 281, column: 1, scope: !4148)
!4691 = !{i64 2147648563, i64 2147648606, i64 2147648646}
!4692 = !DILocation(line: 282, column: 1, scope: !4148)
!4693 = !{i64 2147648795, i64 2147648838, i64 2147648878}
!4694 = !DILocation(line: 283, column: 1, scope: !4148)
!4695 = !{i64 2147649006, i64 2147649049, i64 2147649089}
!4696 = !DILocation(line: 284, column: 1, scope: !4148)
!4697 = !{i64 2147649196, i64 2147649239, i64 2147649279}
!4698 = !DILocation(line: 285, column: 1, scope: !4148)
!4699 = !{i64 2147649410, i64 2147649453, i64 2147649493}
!4700 = !DILocation(line: 286, column: 1, scope: !4148)
!4701 = !{i64 2147649609, i64 2147649652, i64 2147649692}
!4702 = !DILocation(line: 287, column: 1, scope: !4148)
!4703 = !{i64 2147649796, i64 2147649839, i64 2147649879}
!4704 = !DILocation(line: 288, column: 1, scope: !4148)
!4705 = !{i64 2147650004, i64 2147650047, i64 2147650087}
!4706 = !DILocation(line: 289, column: 1, scope: !4148)
!4707 = !{i64 2147650233, i64 2147650276, i64 2147650316}
!4708 = !DILocation(line: 290, column: 1, scope: !4148)
!4709 = !{i64 2147650435, i64 2147650478, i64 2147650518}
!4710 = !DILocation(line: 291, column: 1, scope: !4148)
!4711 = !{i64 2147650634, i64 2147650677, i64 2147650717}
!4712 = !DILocation(line: 292, column: 1, scope: !4148)
!4713 = !{i64 2147650851, i64 2147650894, i64 2147650934}
!4714 = !DILocation(line: 294, column: 1, scope: !4148)
!4715 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !135, file: !135, line: 30, type: !142, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !4716)
!4716 = !{!4717, !4718}
!4717 = !DILocalVariable(name: "arg", arg: 1, scope: !4715, file: !135, line: 30, type: !144)
!4718 = !DILocalVariable(name: "key", scope: !4715, file: !135, line: 32, type: !106)
!4719 = !DILocation(line: 0, scope: !4715)
!4720 = !DILocation(line: 37, column: 2, scope: !4715)
!4721 = !DILocation(line: 38, column: 2, scope: !4715)
!4722 = !DILocation(line: 55, column: 2, scope: !4723, inlinedAt: !4730)
!4723 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !4727)
!4724 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!32}
!4727 = !{!4728, !4729}
!4728 = !DILocalVariable(name: "key", scope: !4723, file: !4724, line: 44, type: !32)
!4729 = !DILocalVariable(name: "tmp", scope: !4723, file: !4724, line: 53, type: !32)
!4730 = distinct !DILocation(line: 40, column: 8, scope: !4715)
!4731 = !{i64 2184633}
!4732 = !DILocation(line: 0, scope: !4723, inlinedAt: !4730)
!4733 = !DILocalVariable(name: "key", arg: 1, scope: !4734, file: !4724, line: 84, type: !32)
!4734 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{null, !32}
!4737 = !{!4733}
!4738 = !DILocation(line: 0, scope: !4734, inlinedAt: !4739)
!4739 = distinct !DILocation(line: 47, column: 2, scope: !4715)
!4740 = !DILocation(line: 95, column: 2, scope: !4734, inlinedAt: !4739)
!4741 = !{i64 2185450}
!4742 = !DILocation(line: 51, column: 18, scope: !4715)
!4743 = !DILocation(line: 53, column: 2, scope: !4715)
!4744 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4745, file: !4745, line: 1609, type: !2917, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !478)
!4745 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4746 = !DILocation(line: 1611, column: 3, scope: !4744)
!4747 = !DILocation(line: 1612, column: 1, scope: !4744)
!4748 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4745, file: !4745, line: 1629, type: !2917, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !118, retainedNodes: !478)
!4749 = !DILocation(line: 1631, column: 3, scope: !4748)
!4750 = !DILocation(line: 1632, column: 1, scope: !4748)
!4751 = distinct !DISubprogram(name: "stm32_backup_sram_init", scope: !295, file: !295, line: 21, type: !308, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !4752)
!4752 = !{!4753, !4754, !4756, !4757}
!4753 = !DILocalVariable(name: "dev", arg: 1, scope: !4751, file: !295, line: 21, type: !239)
!4754 = !DILocalVariable(name: "config", scope: !4751, file: !295, line: 23, type: !4755)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!4756 = !DILocalVariable(name: "ret", scope: !4751, file: !295, line: 25, type: !103)
!4757 = !DILocalVariable(name: "clk", scope: !4751, file: !295, line: 28, type: !4758)
!4758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!4759 = !DILocation(line: 0, scope: !4751)
!4760 = !DILocation(line: 23, column: 55, scope: !4751)
!4761 = !DILocation(line: 30, column: 7, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4751, file: !295, line: 30, column: 6)
!4763 = !DILocation(line: 30, column: 6, scope: !4751)
!4764 = !DILocation(line: 35, column: 8, scope: !4751)
!4765 = !DILocation(line: 36, column: 10, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4751, file: !295, line: 36, column: 6)
!4767 = !DILocation(line: 36, column: 6, scope: !4751)
!4768 = !DILocation(line: 42, column: 2, scope: !4751)
!4769 = !DILocation(line: 43, column: 2, scope: !4751)
!4770 = !DILocation(line: 43, column: 10, scope: !4751)
!4771 = !DILocation(line: 43, column: 9, scope: !4751)
!4772 = distinct !{!4772, !4769, !4773}
!4773 = !DILocation(line: 44, column: 2, scope: !4751)
!4774 = !DILocation(line: 49, column: 2, scope: !4751)
!4775 = !DILocation(line: 50, column: 2, scope: !4751)
!4776 = !DILocation(line: 50, column: 10, scope: !4751)
!4777 = !DILocation(line: 50, column: 9, scope: !4751)
!4778 = distinct !{!4778, !4775, !4779}
!4779 = !DILocation(line: 51, column: 2, scope: !4751)
!4780 = !DILocation(line: 54, column: 1, scope: !4751)
!4781 = distinct !DISubprogram(name: "device_is_ready", scope: !4782, file: !4782, line: 47, type: !4783, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !4785)
!4782 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!163, !239}
!4785 = !{!4786}
!4786 = !DILocalVariable(name: "dev", arg: 1, scope: !4781, file: !4782, line: 47, type: !239)
!4787 = !DILocation(line: 0, scope: !4781)
!4788 = !DILocation(line: 55, column: 2, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4781, file: !4782, line: 55, column: 2)
!4790 = !{i64 2149461728}
!4791 = !DILocation(line: 56, column: 9, scope: !4781)
!4792 = !DILocation(line: 56, column: 2, scope: !4781)
!4793 = distinct !DISubprogram(name: "clock_control_on", scope: !221, file: !221, line: 123, type: !237, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !4794)
!4794 = !{!4795, !4796, !4797}
!4795 = !DILocalVariable(name: "dev", arg: 1, scope: !4793, file: !221, line: 123, type: !239)
!4796 = !DILocalVariable(name: "sys", arg: 2, scope: !4793, file: !221, line: 124, type: !229)
!4797 = !DILocalVariable(name: "api", scope: !4793, file: !221, line: 126, type: !230)
!4798 = !DILocation(line: 0, scope: !4793)
!4799 = !DILocation(line: 127, column: 49, scope: !4793)
!4800 = !DILocation(line: 129, column: 14, scope: !4793)
!4801 = !DILocation(line: 129, column: 9, scope: !4793)
!4802 = !DILocation(line: 129, column: 2, scope: !4793)
!4803 = distinct !DISubprogram(name: "LL_PWR_EnableBkUpAccess", scope: !4804, file: !4804, line: 558, type: !2917, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !478)
!4804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4805 = !DILocation(line: 560, column: 3, scope: !4803)
!4806 = !DILocation(line: 561, column: 1, scope: !4803)
!4807 = distinct !DISubprogram(name: "LL_PWR_IsEnabledBkUpAccess", scope: !4804, file: !4804, line: 578, type: !4808, scopeLine: 579, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !478)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!106}
!4810 = !DILocation(line: 580, column: 11, scope: !4807)
!4811 = !DILocation(line: 580, column: 41, scope: !4807)
!4812 = !DILocation(line: 580, column: 3, scope: !4807)
!4813 = distinct !DISubprogram(name: "LL_PWR_EnableBkUpRegulator", scope: !4804, file: !4804, line: 589, type: !2917, scopeLine: 590, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !478)
!4814 = !DILocation(line: 591, column: 3, scope: !4813)
!4815 = !DILocation(line: 592, column: 1, scope: !4813)
!4816 = distinct !DISubprogram(name: "LL_PWR_IsEnabledBkUpRegulator", scope: !4804, file: !4804, line: 611, type: !4808, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !478)
!4817 = !DILocation(line: 613, column: 11, scope: !4816)
!4818 = !DILocation(line: 613, column: 43, scope: !4816)
!4819 = !DILocation(line: 613, column: 3, scope: !4816)
!4820 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !4783, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !217, retainedNodes: !4821)
!4821 = !{!4822}
!4822 = !DILocalVariable(name: "dev", arg: 1, scope: !4820, file: !147, line: 730, type: !239)
!4823 = !DILocation(line: 0, scope: !4820)
!4824 = !DILocation(line: 732, column: 9, scope: !4820)
!4825 = !DILocation(line: 732, column: 2, scope: !4820)
!4826 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !327, file: !327, line: 26, type: !333, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !324, retainedNodes: !4827)
!4827 = !{!4828}
!4828 = !DILocalVariable(name: "dev", arg: 1, scope: !4826, file: !327, line: 26, type: !335)
!4829 = !DILocation(line: 0, scope: !4826)
!4830 = !DILocation(line: 68, column: 2, scope: !4826)
!4831 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4832, file: !4832, line: 57, type: !4833, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !4879)
!4832 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4833 = !DISubroutineType(types: !4834)
!4834 = !{null, !32, !4835}
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 32)
!4836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4837)
!4837 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2516, line: 141, baseType: !4838)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2516, line: 97, size: 256, elements: !4839)
!4839 = !{!4840}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4838, file: !2516, line: 107, baseType: !4841, size: 256)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2516, line: 98, size: 256, elements: !4842)
!4842 = !{!4843, !4848, !4853, !4858, !4863, !4868, !4873, !4878}
!4843 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 99, baseType: !4844, size: 32)
!4844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 99, size: 32, elements: !4845)
!4845 = !{!4846, !4847}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4844, file: !2516, line: 99, baseType: !106, size: 32)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4844, file: !2516, line: 99, baseType: !106, size: 32)
!4848 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 100, baseType: !4849, size: 32, offset: 32)
!4849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 100, size: 32, elements: !4850)
!4850 = !{!4851, !4852}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4849, file: !2516, line: 100, baseType: !106, size: 32)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4849, file: !2516, line: 100, baseType: !106, size: 32)
!4853 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 101, baseType: !4854, size: 32, offset: 64)
!4854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 101, size: 32, elements: !4855)
!4855 = !{!4856, !4857}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4854, file: !2516, line: 101, baseType: !106, size: 32)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4854, file: !2516, line: 101, baseType: !106, size: 32)
!4858 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 102, baseType: !4859, size: 32, offset: 96)
!4859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 102, size: 32, elements: !4860)
!4860 = !{!4861, !4862}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4859, file: !2516, line: 102, baseType: !106, size: 32)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4859, file: !2516, line: 102, baseType: !106, size: 32)
!4863 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 103, baseType: !4864, size: 32, offset: 128)
!4864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 103, size: 32, elements: !4865)
!4865 = !{!4866, !4867}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4864, file: !2516, line: 103, baseType: !106, size: 32)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4864, file: !2516, line: 103, baseType: !106, size: 32)
!4868 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 104, baseType: !4869, size: 32, offset: 160)
!4869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 104, size: 32, elements: !4870)
!4870 = !{!4871, !4872}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4869, file: !2516, line: 104, baseType: !106, size: 32)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4869, file: !2516, line: 104, baseType: !106, size: 32)
!4873 = !DIDerivedType(tag: DW_TAG_member, scope: !4841, file: !2516, line: 105, baseType: !4874, size: 32, offset: 192)
!4874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4841, file: !2516, line: 105, size: 32, elements: !4875)
!4875 = !{!4876, !4877}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4874, file: !2516, line: 105, baseType: !106, size: 32)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4874, file: !2516, line: 105, baseType: !106, size: 32)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4841, file: !2516, line: 106, baseType: !106, size: 32, offset: 224)
!4879 = !{!4880, !4881}
!4880 = !DILocalVariable(name: "reason", arg: 1, scope: !4831, file: !4832, line: 57, type: !32)
!4881 = !DILocalVariable(name: "esf", arg: 2, scope: !4831, file: !4832, line: 57, type: !4835)
!4882 = !DILocation(line: 0, scope: !4831)
!4883 = !DILocation(line: 63, column: 2, scope: !4831)
!4884 = !DILocation(line: 64, column: 1, scope: !4831)
!4885 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4832, file: !4832, line: 82, type: !4886, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !4901)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{null, !4835, !4888}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 32)
!4889 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !440, line: 37, baseType: !4890)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !4891)
!4891 = !{!4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4890, file: !440, line: 26, baseType: !106, size: 32)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4890, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4890, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4890, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4890, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4890, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4890, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4890, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4890, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!4901 = !{!4902, !4903, !4904}
!4902 = !DILocalVariable(name: "esf", arg: 1, scope: !4885, file: !4832, line: 82, type: !4835)
!4903 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4885, file: !4832, line: 82, type: !4888)
!4904 = !DILocalVariable(name: "reason", scope: !4885, file: !4832, line: 88, type: !32)
!4905 = !DILocation(line: 0, scope: !4885)
!4906 = !DILocation(line: 88, column: 35, scope: !4885)
!4907 = !DILocation(line: 108, column: 2, scope: !4885)
!4908 = !DILocation(line: 131, column: 1, scope: !4885)
!4909 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4832, file: !4832, line: 133, type: !4910, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2396, retainedNodes: !4912)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{null, !102}
!4912 = !{!4913, !4914, !4915}
!4913 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4909, file: !4832, line: 133, type: !102)
!4914 = !DILocalVariable(name: "ssf_contents", scope: !4909, file: !4832, line: 135, type: !269)
!4915 = !DILocalVariable(name: "oops_esf", scope: !4909, file: !4832, line: 136, type: !4837)
!4916 = !DILocation(line: 0, scope: !4909)
!4917 = !DILocation(line: 136, column: 2, scope: !4909)
!4918 = !DILocation(line: 136, column: 15, scope: !4909)
!4919 = !DILocation(line: 139, column: 22, scope: !4909)
!4920 = !DILocation(line: 139, column: 17, scope: !4909)
!4921 = !DILocation(line: 139, column: 20, scope: !4909)
!4922 = !DILocation(line: 141, column: 2, scope: !4909)
!4923 = !DILocation(line: 142, column: 2, scope: !4909)
!4924 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4925, file: !4925, line: 40, type: !4735, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !4926)
!4925 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4926 = !{!4927}
!4927 = !DILocalVariable(name: "irq", arg: 1, scope: !4924, file: !4925, line: 40, type: !32)
!4928 = !DILocation(line: 0, scope: !4924)
!4929 = !DILocation(line: 42, column: 2, scope: !4924)
!4930 = !DILocation(line: 43, column: 1, scope: !4924)
!4931 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !512, file: !512, line: 1684, type: !4932, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !4934)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{null, !774}
!4934 = !{!4935}
!4935 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4931, file: !512, line: 1684, type: !774)
!4936 = !DILocation(line: 0, scope: !4931)
!4937 = !DILocation(line: 1686, column: 23, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4931, file: !512, line: 1686, column: 7)
!4939 = !DILocation(line: 1686, column: 7, scope: !4931)
!4940 = !DILocation(line: 1688, column: 5, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !512, line: 1687, column: 3)
!4942 = !{i64 2151254155}
!4943 = !DILocation(line: 1689, column: 81, scope: !4941)
!4944 = !DILocation(line: 1689, column: 60, scope: !4941)
!4945 = !DILocation(line: 1689, column: 34, scope: !4941)
!4946 = !DILocation(line: 1689, column: 5, scope: !4941)
!4947 = !DILocation(line: 1689, column: 43, scope: !4941)
!4948 = !DILocation(line: 1690, column: 5, scope: !4941)
!4949 = !{i64 2151254269}
!4950 = !DILocation(line: 1691, column: 3, scope: !4941)
!4951 = !DILocation(line: 1692, column: 1, scope: !4931)
!4952 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4925, file: !4925, line: 45, type: !4735, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !4953)
!4953 = !{!4954}
!4954 = !DILocalVariable(name: "irq", arg: 1, scope: !4952, file: !4925, line: 45, type: !32)
!4955 = !DILocation(line: 0, scope: !4952)
!4956 = !DILocation(line: 47, column: 2, scope: !4952)
!4957 = !DILocation(line: 48, column: 1, scope: !4952)
!4958 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !512, file: !512, line: 1722, type: !4932, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !4959)
!4959 = !{!4960}
!4960 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4958, file: !512, line: 1722, type: !774)
!4961 = !DILocation(line: 0, scope: !4958)
!4962 = !DILocation(line: 1724, column: 23, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4958, file: !512, line: 1724, column: 7)
!4964 = !DILocation(line: 1724, column: 7, scope: !4958)
!4965 = !DILocation(line: 1726, column: 81, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !512, line: 1725, column: 3)
!4967 = !DILocation(line: 1726, column: 60, scope: !4966)
!4968 = !DILocation(line: 1726, column: 34, scope: !4966)
!4969 = !DILocation(line: 1726, column: 5, scope: !4966)
!4970 = !DILocation(line: 1726, column: 43, scope: !4966)
!4971 = !DILocation(line: 271, column: 3, scope: !4972, inlinedAt: !4974)
!4972 = distinct !DISubprogram(name: "__DSB", scope: !4973, file: !4973, line: 269, type: !2917, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !478)
!4973 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4974 = distinct !DILocation(line: 1727, column: 5, scope: !4966)
!4975 = !{i64 3708538}
!4976 = !DILocation(line: 260, column: 3, scope: !4977, inlinedAt: !4978)
!4977 = distinct !DISubprogram(name: "__ISB", scope: !4973, file: !4973, line: 258, type: !2917, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !478)
!4978 = distinct !DILocation(line: 1728, column: 5, scope: !4966)
!4979 = !{i64 3708255}
!4980 = !DILocation(line: 1729, column: 3, scope: !4966)
!4981 = !DILocation(line: 1730, column: 1, scope: !4958)
!4982 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4925, file: !4925, line: 50, type: !4983, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !4985)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{!103, !32}
!4985 = !{!4986}
!4986 = !DILocalVariable(name: "irq", arg: 1, scope: !4982, file: !4925, line: 50, type: !32)
!4987 = !DILocation(line: 0, scope: !4982)
!4988 = !DILocation(line: 52, column: 20, scope: !4982)
!4989 = !DILocation(line: 52, column: 9, scope: !4982)
!4990 = !DILocation(line: 52, column: 41, scope: !4982)
!4991 = !DILocation(line: 52, column: 39, scope: !4982)
!4992 = !DILocation(line: 52, column: 2, scope: !4982)
!4993 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4925, file: !4925, line: 64, type: !4994, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !4996)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{null, !32, !32, !106}
!4996 = !{!4997, !4998, !4999}
!4997 = !DILocalVariable(name: "irq", arg: 1, scope: !4993, file: !4925, line: 64, type: !32)
!4998 = !DILocalVariable(name: "prio", arg: 2, scope: !4993, file: !4925, line: 64, type: !32)
!4999 = !DILocalVariable(name: "flags", arg: 3, scope: !4993, file: !4925, line: 64, type: !106)
!5000 = !DILocation(line: 0, scope: !4993)
!5001 = !DILocation(line: 83, column: 8, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !4925, line: 82, column: 9)
!5003 = distinct !DILexicalBlock(scope: !4993, file: !4925, line: 76, column: 6)
!5004 = !DILocation(line: 95, column: 2, scope: !4993)
!5005 = !DILocation(line: 96, column: 1, scope: !4993)
!5006 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !512, file: !512, line: 1814, type: !5007, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !5009)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{null, !774, !106}
!5009 = !{!5010, !5011}
!5010 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5006, file: !512, line: 1814, type: !774)
!5011 = !DILocalVariable(name: "priority", arg: 2, scope: !5006, file: !512, line: 1814, type: !106)
!5012 = !DILocation(line: 0, scope: !5006)
!5013 = !DILocation(line: 0, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5006, file: !512, line: 1816, column: 7)
!5015 = !DILocation(line: 1816, column: 7, scope: !5006)
!5016 = !DILocation(line: 1824, column: 1, scope: !5006)
!5017 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4925, file: !4925, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !5018)
!5018 = !{!5019}
!5019 = !DILocalVariable(name: "unused", arg: 1, scope: !5017, file: !4925, line: 155, type: !13)
!5020 = !DILocation(line: 0, scope: !5017)
!5021 = !DILocation(line: 159, column: 2, scope: !5017)
!5022 = !DILocation(line: 160, column: 1, scope: !5017)
!5023 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5024, file: !5024, line: 87, type: !2917, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !478)
!5024 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5025 = !DILocation(line: 89, column: 2, scope: !5023)
!5026 = !DILocation(line: 90, column: 2, scope: !5023)
!5027 = !DILocation(line: 91, column: 1, scope: !5023)
!5028 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5024, file: !5024, line: 23, type: !2917, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!5029 = !DISubprogram(name: "z_arm_int_exit", scope: !5030, file: !5030, line: 153, type: !2917, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!5030 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5031 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5032, file: !5032, line: 256, type: !2917, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !478)
!5032 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5033 = !DILocation(line: 258, column: 2, scope: !5031)
!5034 = !DILocation(line: 260, column: 2, scope: !5031)
!5035 = !DILocation(line: 262, column: 2, scope: !5031)
!5036 = !DILocation(line: 263, column: 2, scope: !5031)
!5037 = !DILocation(line: 267, column: 2, scope: !5031)
!5038 = !DILocation(line: 268, column: 2, scope: !5031)
!5039 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5032, file: !5032, line: 53, type: !2917, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !478)
!5040 = !DILocation(line: 55, column: 12, scope: !5039)
!5041 = !DILocation(line: 271, column: 3, scope: !5042, inlinedAt: !5043)
!5042 = distinct !DISubprogram(name: "__DSB", scope: !4973, file: !4973, line: 269, type: !2917, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !478)
!5043 = distinct !DILocation(line: 56, column: 2, scope: !5039)
!5044 = !{i64 3707209}
!5045 = !DILocation(line: 260, column: 3, scope: !5046, inlinedAt: !5047)
!5046 = distinct !DISubprogram(name: "__ISB", scope: !4973, file: !4973, line: 258, type: !2917, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !478)
!5047 = distinct !DILocation(line: 57, column: 2, scope: !5039)
!5048 = !{i64 3706926}
!5049 = !DILocation(line: 58, column: 1, scope: !5039)
!5050 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5032, file: !5032, line: 96, type: !2917, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !478)
!5051 = !DILocation(line: 103, column: 13, scope: !5050)
!5052 = !DILocation(line: 975, column: 3, scope: !5053, inlinedAt: !5056)
!5053 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4973, file: !4973, line: 971, type: !4808, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !5054)
!5054 = !{!5055}
!5055 = !DILocalVariable(name: "result", scope: !5053, file: !4973, line: 973, type: !106)
!5056 = distinct !DILocation(line: 189, column: 16, scope: !5050)
!5057 = !{i64 3728039}
!5058 = !DILocation(line: 0, scope: !5053, inlinedAt: !5056)
!5059 = !DILocation(line: 189, column: 32, scope: !5050)
!5060 = !DILocalVariable(name: "control", arg: 1, scope: !5061, file: !4973, line: 1001, type: !106)
!5061 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4973, file: !4973, line: 1001, type: !5062, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2455, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{null, !106}
!5064 = !{!5060}
!5065 = !DILocation(line: 0, scope: !5061, inlinedAt: !5066)
!5066 = distinct !DILocation(line: 189, column: 2, scope: !5050)
!5067 = !DILocation(line: 1003, column: 3, scope: !5061, inlinedAt: !5066)
!5068 = !{i64 3728759}
!5069 = !DILocation(line: 260, column: 3, scope: !5046, inlinedAt: !5070)
!5070 = distinct !DILocation(line: 1004, column: 3, scope: !5061, inlinedAt: !5066)
!5071 = !DILocation(line: 191, column: 1, scope: !5050)
!5072 = distinct !DISubprogram(name: "arch_swap", scope: !5073, file: !5073, line: 33, type: !4983, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !5074)
!5073 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5074 = !{!5075}
!5075 = !DILocalVariable(name: "key", arg: 1, scope: !5072, file: !5073, line: 33, type: !32)
!5076 = !DILocation(line: 0, scope: !5072)
!5077 = !DILocation(line: 36, column: 2, scope: !5072)
!5078 = !DILocation(line: 36, column: 17, scope: !5072)
!5079 = !DILocation(line: 36, column: 25, scope: !5072)
!5080 = !DILocation(line: 37, column: 37, scope: !5072)
!5081 = !DILocation(line: 37, column: 17, scope: !5072)
!5082 = !DILocation(line: 37, column: 35, scope: !5072)
!5083 = !DILocation(line: 41, column: 12, scope: !5072)
!5084 = !DILocalVariable(name: "key", arg: 1, scope: !5085, file: !4724, line: 84, type: !32)
!5085 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !5086)
!5086 = !{!5084}
!5087 = !DILocation(line: 0, scope: !5085, inlinedAt: !5088)
!5088 = distinct !DILocation(line: 44, column: 2, scope: !5072)
!5089 = !DILocation(line: 95, column: 2, scope: !5085, inlinedAt: !5088)
!5090 = !{i64 2277710}
!5091 = !DILocation(line: 53, column: 9, scope: !5072)
!5092 = !DILocation(line: 53, column: 24, scope: !5072)
!5093 = !DILocation(line: 53, column: 2, scope: !5072)
!5094 = distinct !DISubprogram(name: "arch_new_thread", scope: !5095, file: !5095, line: 56, type: !5096, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5203)
!5095 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5096 = !DISubroutineType(types: !5097)
!5097 = !{null, !5098, !5198, !1099, !3223, !102, !102, !102}
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 32)
!5099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !5100)
!5100 = !{!5101, !5159, !5171, !5172, !5173, !5174, !5180, !5193}
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5099, file: !367, line: 247, baseType: !5102, size: 384)
!5102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !5103)
!5103 = !{!5104, !5128, !5135, !5136, !5137, !5146, !5147, !5148}
!5104 = !DIDerivedType(tag: DW_TAG_member, scope: !5102, file: !367, line: 60, baseType: !5105, size: 64)
!5105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5102, file: !367, line: 60, size: 64, elements: !5106)
!5106 = !{!5107, !5122}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5105, file: !367, line: 61, baseType: !5108, size: 64)
!5108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !5109)
!5109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !5110)
!5110 = !{!5111, !5117}
!5111 = !DIDerivedType(tag: DW_TAG_member, scope: !5109, file: !377, line: 38, baseType: !5112, size: 32)
!5112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5109, file: !377, line: 38, size: 32, elements: !5113)
!5113 = !{!5114, !5116}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5112, file: !377, line: 39, baseType: !5115, size: 32)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 32)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5112, file: !377, line: 40, baseType: !5115, size: 32)
!5117 = !DIDerivedType(tag: DW_TAG_member, scope: !5109, file: !377, line: 42, baseType: !5118, size: 32, offset: 32)
!5118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5109, file: !377, line: 42, size: 32, elements: !5119)
!5119 = !{!5120, !5121}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5118, file: !377, line: 43, baseType: !5115, size: 32)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5118, file: !377, line: 44, baseType: !5115, size: 32)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5105, file: !367, line: 62, baseType: !5123, size: 64)
!5123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !5124)
!5124 = !{!5125}
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5123, file: !393, line: 50, baseType: !5126, size: 64)
!5126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5127, size: 64, elements: !398)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5123, size: 32)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5102, file: !367, line: 68, baseType: !5129, size: 32, offset: 64)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 32)
!5130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !5131)
!5131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !5132)
!5132 = !{!5133}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5131, file: !403, line: 232, baseType: !5134, size: 64)
!5134 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !5109)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5102, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5102, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!5137 = !DIDerivedType(tag: DW_TAG_member, scope: !5102, file: !367, line: 90, baseType: !5138, size: 16, offset: 112)
!5138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5102, file: !367, line: 90, size: 16, elements: !5139)
!5139 = !{!5140, !5145}
!5140 = !DIDerivedType(tag: DW_TAG_member, scope: !5138, file: !367, line: 91, baseType: !5141, size: 16)
!5141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5138, file: !367, line: 91, size: 16, elements: !5142)
!5142 = !{!5143, !5144}
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5141, file: !367, line: 96, baseType: !417, size: 8)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5141, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5138, file: !367, line: 100, baseType: !421, size: 16)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5102, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5102, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5102, file: !367, line: 131, baseType: !5149, size: 192, offset: 192)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !5150)
!5150 = !{!5151, !5152, !5158}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5149, file: !403, line: 245, baseType: !5108, size: 64)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5149, file: !403, line: 246, baseType: !5153, size: 32, offset: 64)
!5153 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !5154)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 32)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{null, !5157}
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 32)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5149, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5099, file: !367, line: 250, baseType: !5160, size: 288, offset: 384)
!5160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !5161)
!5161 = !{!5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170}
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5160, file: !440, line: 26, baseType: !106, size: 32)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5160, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5160, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5160, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5160, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5160, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5160, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5160, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5160, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5099, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5099, file: !367, line: 256, baseType: !5130, size: 64, offset: 704)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5099, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5099, file: !367, line: 300, baseType: !5175, size: 96, offset: 800)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !5176)
!5176 = !{!5177, !5178, !5179}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5175, file: !367, line: 153, baseType: !22, size: 32)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5175, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5175, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5099, file: !367, line: 325, baseType: !5181, size: 32, offset: 896)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 32)
!5182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !5183)
!5183 = !{!5184, !5190, !5191}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5182, file: !463, line: 5074, baseType: !5185, size: 96)
!5185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !5186)
!5186 = !{!5187, !5188, !5189}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5185, file: !467, line: 57, baseType: !470, size: 32)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5185, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5185, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5182, file: !463, line: 5075, baseType: !5130, size: 64, offset: 96)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5182, file: !463, line: 5076, baseType: !5192, offset: 160)
!5192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5099, file: !367, line: 343, baseType: !5194, size: 64, offset: 928)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !5195)
!5195 = !{!5196, !5197}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5194, file: !440, line: 63, baseType: !106, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5194, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 32)
!5199 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3224, line: 44, baseType: !5200)
!5200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2028, line: 47, size: 8, elements: !5201)
!5201 = !{!5202}
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5200, file: !2028, line: 48, baseType: !152, size: 8)
!5203 = !{!5204, !5205, !5206, !5207, !5208, !5209, !5210, !5211}
!5204 = !DILocalVariable(name: "thread", arg: 1, scope: !5094, file: !5095, line: 56, type: !5098)
!5205 = !DILocalVariable(name: "stack", arg: 2, scope: !5094, file: !5095, line: 56, type: !5198)
!5206 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5094, file: !5095, line: 57, type: !1099)
!5207 = !DILocalVariable(name: "entry", arg: 4, scope: !5094, file: !5095, line: 57, type: !3223)
!5208 = !DILocalVariable(name: "p1", arg: 5, scope: !5094, file: !5095, line: 58, type: !102)
!5209 = !DILocalVariable(name: "p2", arg: 6, scope: !5094, file: !5095, line: 58, type: !102)
!5210 = !DILocalVariable(name: "p3", arg: 7, scope: !5094, file: !5095, line: 58, type: !102)
!5211 = !DILocalVariable(name: "iframe", scope: !5094, file: !5095, line: 60, type: !2514)
!5212 = !DILocation(line: 0, scope: !5094)
!5213 = !DILocation(line: 85, column: 11, scope: !5094)
!5214 = !DILocation(line: 93, column: 10, scope: !5094)
!5215 = !DILocation(line: 98, column: 13, scope: !5094)
!5216 = !DILocation(line: 100, column: 15, scope: !5094)
!5217 = !DILocation(line: 100, column: 10, scope: !5094)
!5218 = !DILocation(line: 100, column: 13, scope: !5094)
!5219 = !DILocation(line: 101, column: 15, scope: !5094)
!5220 = !DILocation(line: 101, column: 10, scope: !5094)
!5221 = !DILocation(line: 101, column: 13, scope: !5094)
!5222 = !DILocation(line: 102, column: 15, scope: !5094)
!5223 = !DILocation(line: 102, column: 10, scope: !5094)
!5224 = !DILocation(line: 102, column: 13, scope: !5094)
!5225 = !DILocation(line: 103, column: 15, scope: !5094)
!5226 = !DILocation(line: 103, column: 10, scope: !5094)
!5227 = !DILocation(line: 103, column: 13, scope: !5094)
!5228 = !DILocation(line: 106, column: 10, scope: !5094)
!5229 = !DILocation(line: 106, column: 15, scope: !5094)
!5230 = !DILocation(line: 122, column: 29, scope: !5094)
!5231 = !DILocation(line: 122, column: 23, scope: !5094)
!5232 = !DILocation(line: 122, column: 27, scope: !5094)
!5233 = !DILocation(line: 123, column: 15, scope: !5094)
!5234 = !DILocation(line: 123, column: 23, scope: !5094)
!5235 = !DILocation(line: 143, column: 1, scope: !5094)
!5236 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5095, file: !5095, line: 385, type: !5237, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5240)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!106, !5239, !5239}
!5239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!5240 = !{!5241, !5242, !5243, !5246}
!5241 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5236, file: !5095, line: 385, type: !5239)
!5242 = !DILocalVariable(name: "psp", arg: 2, scope: !5236, file: !5095, line: 385, type: !5239)
!5243 = !DILocalVariable(name: "thread", scope: !5236, file: !5095, line: 388, type: !5244)
!5244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5099)
!5246 = !DILocalVariable(name: "guard_len", scope: !5236, file: !5095, line: 405, type: !106)
!5247 = !DILocation(line: 0, scope: !5236)
!5248 = !DILocation(line: 388, column: 34, scope: !5236)
!5249 = !DILocation(line: 390, column: 13, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5236, file: !5095, line: 390, column: 6)
!5251 = !DILocation(line: 390, column: 6, scope: !5236)
!5252 = !DILocation(line: 438, column: 6, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5236, file: !5095, line: 438, column: 6)
!5254 = !DILocation(line: 438, column: 6, scope: !5236)
!5255 = !DILocation(line: 442, column: 3, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5253, file: !5095, line: 440, column: 22)
!5257 = !DILocation(line: 455, column: 1, scope: !5236)
!5258 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5095, file: !5095, line: 530, type: !5259, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5261)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{null, !5098, !1099, !3223}
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5258, file: !5095, line: 530, type: !5098)
!5263 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5258, file: !5095, line: 530, type: !1099)
!5264 = !DILocalVariable(name: "_main", arg: 3, scope: !5258, file: !5095, line: 531, type: !3223)
!5265 = !DILocation(line: 0, scope: !5258)
!5266 = !DILocation(line: 535, column: 11, scope: !5258)
!5267 = !DILocation(line: 560, column: 2, scope: !5258)
!5268 = !DILocation(line: 576, column: 2, scope: !5258)
!5269 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5270 = !DILocation(line: 603, column: 2, scope: !5258)
!5271 = distinct !DISubprogram(name: "z_arm_fault", scope: !5272, file: !5272, line: 1036, type: !5273, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5288)
!5272 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5273 = !DISubroutineType(types: !5274)
!5274 = !{null, !106, !106, !106, !5275}
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5276, size: 32)
!5276 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !440, line: 37, baseType: !5277)
!5277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !5278)
!5278 = !{!5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5277, file: !440, line: 26, baseType: !106, size: 32)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5277, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5277, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5277, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5277, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5277, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5277, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5277, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5277, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!5288 = !{!5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298}
!5289 = !DILocalVariable(name: "msp", arg: 1, scope: !5271, file: !5272, line: 1036, type: !106)
!5290 = !DILocalVariable(name: "psp", arg: 2, scope: !5271, file: !5272, line: 1036, type: !106)
!5291 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5271, file: !5272, line: 1036, type: !106)
!5292 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5271, file: !5272, line: 1037, type: !5275)
!5293 = !DILocalVariable(name: "reason", scope: !5271, file: !5272, line: 1039, type: !106)
!5294 = !DILocalVariable(name: "fault", scope: !5271, file: !5272, line: 1040, type: !103)
!5295 = !DILocalVariable(name: "recoverable", scope: !5271, file: !5272, line: 1041, type: !163)
!5296 = !DILocalVariable(name: "nested_exc", scope: !5271, file: !5272, line: 1041, type: !163)
!5297 = !DILocalVariable(name: "esf", scope: !5271, file: !5272, line: 1042, type: !2582)
!5298 = !DILocalVariable(name: "esf_copy", scope: !5271, file: !5272, line: 1047, type: !2583)
!5299 = !DILocation(line: 0, scope: !5271)
!5300 = !DILocation(line: 1040, column: 19, scope: !5271)
!5301 = !DILocation(line: 1040, column: 24, scope: !5271)
!5302 = !DILocation(line: 1041, column: 2, scope: !5271)
!5303 = !DILocation(line: 1047, column: 2, scope: !5271)
!5304 = !DILocation(line: 1047, column: 15, scope: !5271)
!5305 = !DILocalVariable(name: "key", arg: 1, scope: !5306, file: !4724, line: 84, type: !32)
!5306 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5307)
!5307 = !{!5305}
!5308 = !DILocation(line: 0, scope: !5306, inlinedAt: !5309)
!5309 = distinct !DILocation(line: 1050, column: 2, scope: !5271)
!5310 = !DILocation(line: 95, column: 2, scope: !5306, inlinedAt: !5309)
!5311 = !{i64 2310954}
!5312 = !DILocation(line: 1055, column: 9, scope: !5271)
!5313 = !DILocation(line: 1063, column: 11, scope: !5271)
!5314 = !DILocation(line: 1064, column: 6, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5271, file: !5272, line: 1064, column: 6)
!5316 = !{i8 0, i8 2}
!5317 = !DILocation(line: 1064, column: 6, scope: !5271)
!5318 = !DILocation(line: 1070, column: 20, scope: !5271)
!5319 = !DILocation(line: 1070, column: 2, scope: !5271)
!5320 = !DILocation(line: 1089, column: 6, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5271, file: !5272, line: 1089, column: 6)
!5322 = !DILocation(line: 0, scope: !5321)
!5323 = !DILocation(line: 1089, column: 6, scope: !5271)
!5324 = !DILocation(line: 1090, column: 28, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5326, file: !5272, line: 1090, column: 7)
!5326 = distinct !DILexicalBlock(scope: !5321, file: !5272, line: 1089, column: 18)
!5327 = !DILocation(line: 1090, column: 44, scope: !5325)
!5328 = !DILocation(line: 1090, column: 7, scope: !5326)
!5329 = !DILocation(line: 1091, column: 24, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5325, file: !5272, line: 1090, column: 50)
!5331 = !DILocation(line: 1092, column: 3, scope: !5330)
!5332 = !DILocation(line: 1094, column: 23, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5321, file: !5272, line: 1093, column: 9)
!5334 = !DILocation(line: 1097, column: 2, scope: !5271)
!5335 = !DILocation(line: 1098, column: 1, scope: !5271)
!5336 = distinct !DISubprogram(name: "get_esf", scope: !5272, file: !5272, line: 894, type: !5337, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5340)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{!2582, !106, !106, !106, !5339}
!5339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!5340 = !{!5341, !5342, !5343, !5344, !5345, !5346}
!5341 = !DILocalVariable(name: "msp", arg: 1, scope: !5336, file: !5272, line: 894, type: !106)
!5342 = !DILocalVariable(name: "psp", arg: 2, scope: !5336, file: !5272, line: 894, type: !106)
!5343 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5336, file: !5272, line: 894, type: !106)
!5344 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5336, file: !5272, line: 895, type: !5339)
!5345 = !DILocalVariable(name: "alternative_state_exc", scope: !5336, file: !5272, line: 897, type: !163)
!5346 = !DILocalVariable(name: "ptr_esf", scope: !5336, file: !5272, line: 898, type: !2582)
!5347 = !DILocation(line: 0, scope: !5336)
!5348 = !DILocation(line: 900, column: 14, scope: !5336)
!5349 = !DILocation(line: 902, column: 49, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5336, file: !5272, line: 902, column: 6)
!5351 = !DILocation(line: 902, column: 6, scope: !5336)
!5352 = !DILocation(line: 983, column: 18, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5336, file: !5272, line: 983, column: 6)
!5354 = !DILocation(line: 991, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !5272, line: 990, column: 30)
!5356 = distinct !DILexicalBlock(scope: !5336, file: !5272, line: 990, column: 6)
!5357 = !DILocation(line: 998, column: 16, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5359, file: !5272, line: 995, column: 10)
!5359 = distinct !DILexicalBlock(scope: !5355, file: !5272, line: 991, column: 7)
!5360 = !DILocation(line: 1002, column: 2, scope: !5336)
!5361 = !DILocation(line: 1003, column: 1, scope: !5336)
!5362 = distinct !DISubprogram(name: "fault_handle", scope: !5272, file: !5272, line: 786, type: !5363, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5365)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{!106, !2582, !103, !5339}
!5365 = !{!5366, !5367, !5368, !5369}
!5366 = !DILocalVariable(name: "esf", arg: 1, scope: !5362, file: !5272, line: 786, type: !2582)
!5367 = !DILocalVariable(name: "fault", arg: 2, scope: !5362, file: !5272, line: 786, type: !103)
!5368 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5362, file: !5272, line: 786, type: !5339)
!5369 = !DILocalVariable(name: "reason", scope: !5362, file: !5272, line: 788, type: !106)
!5370 = !DILocation(line: 0, scope: !5362)
!5371 = !DILocation(line: 790, column: 15, scope: !5362)
!5372 = !DILocation(line: 792, column: 2, scope: !5362)
!5373 = !DILocation(line: 794, column: 12, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5362, file: !5272, line: 792, column: 17)
!5375 = !DILocation(line: 795, column: 3, scope: !5374)
!5376 = !DILocation(line: 800, column: 12, scope: !5374)
!5377 = !DILocation(line: 801, column: 3, scope: !5374)
!5378 = !DILocation(line: 803, column: 12, scope: !5374)
!5379 = !DILocation(line: 804, column: 3, scope: !5374)
!5380 = !DILocation(line: 806, column: 12, scope: !5374)
!5381 = !DILocation(line: 807, column: 3, scope: !5374)
!5382 = !DILocation(line: 814, column: 3, scope: !5374)
!5383 = !DILocation(line: 815, column: 3, scope: !5374)
!5384 = !DILocation(line: 829, column: 2, scope: !5362)
!5385 = distinct !DISubprogram(name: "hard_fault", scope: !5272, file: !5272, line: 709, type: !5386, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5388)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!106, !2582, !5339}
!5388 = !{!5389, !5390, !5391}
!5389 = !DILocalVariable(name: "esf", arg: 1, scope: !5385, file: !5272, line: 709, type: !2582)
!5390 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5385, file: !5272, line: 709, type: !5339)
!5391 = !DILocalVariable(name: "reason", scope: !5385, file: !5272, line: 711, type: !106)
!5392 = !DILocation(line: 0, scope: !5385)
!5393 = !DILocation(line: 732, column: 15, scope: !5385)
!5394 = !DILocation(line: 734, column: 12, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5385, file: !5272, line: 734, column: 6)
!5396 = !DILocation(line: 734, column: 17, scope: !5395)
!5397 = !DILocation(line: 734, column: 41, scope: !5395)
!5398 = !DILocation(line: 734, column: 6, scope: !5385)
!5399 = !DILocation(line: 736, column: 19, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5395, file: !5272, line: 736, column: 13)
!5401 = !DILocation(line: 736, column: 49, scope: !5400)
!5402 = !DILocation(line: 736, column: 13, scope: !5395)
!5403 = !DILocation(line: 738, column: 19, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5400, file: !5272, line: 738, column: 13)
!5405 = !DILocation(line: 738, column: 24, scope: !5404)
!5406 = !DILocation(line: 738, column: 47, scope: !5404)
!5407 = !DILocation(line: 738, column: 13, scope: !5400)
!5408 = !DILocation(line: 740, column: 7, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !5272, line: 740, column: 7)
!5410 = distinct !DILexicalBlock(scope: !5404, file: !5272, line: 738, column: 53)
!5411 = !DILocation(line: 740, column: 7, scope: !5410)
!5412 = !DILocation(line: 742, column: 24, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5409, file: !5272, line: 740, column: 38)
!5414 = !DILocation(line: 743, column: 3, scope: !5413)
!5415 = !DILocation(line: 743, column: 20, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5409, file: !5272, line: 743, column: 14)
!5417 = !DILocation(line: 743, column: 25, scope: !5416)
!5418 = !DILocation(line: 743, column: 52, scope: !5416)
!5419 = !DILocation(line: 743, column: 14, scope: !5409)
!5420 = !DILocation(line: 744, column: 13, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5416, file: !5272, line: 743, column: 58)
!5422 = !DILocation(line: 745, column: 3, scope: !5421)
!5423 = !DILocation(line: 745, column: 20, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5416, file: !5272, line: 745, column: 14)
!5425 = !DILocation(line: 745, column: 25, scope: !5424)
!5426 = !DILocation(line: 745, column: 52, scope: !5424)
!5427 = !DILocation(line: 745, column: 14, scope: !5416)
!5428 = !DILocation(line: 746, column: 13, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5424, file: !5272, line: 745, column: 58)
!5430 = !DILocation(line: 747, column: 3, scope: !5429)
!5431 = !DILocation(line: 747, column: 20, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5424, file: !5272, line: 747, column: 14)
!5433 = !DILocation(line: 747, column: 52, scope: !5432)
!5434 = !DILocation(line: 747, column: 14, scope: !5424)
!5435 = !DILocation(line: 748, column: 13, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5432, file: !5272, line: 747, column: 58)
!5437 = !DILocation(line: 753, column: 3, scope: !5436)
!5438 = !DILocation(line: 766, column: 2, scope: !5385)
!5439 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5272, file: !5272, line: 229, type: !5363, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5440)
!5440 = !{!5441, !5442, !5443, !5444, !5445, !5446, !5449}
!5441 = !DILocalVariable(name: "esf", arg: 1, scope: !5439, file: !5272, line: 229, type: !2582)
!5442 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5439, file: !5272, line: 229, type: !103)
!5443 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5439, file: !5272, line: 230, type: !5339)
!5444 = !DILocalVariable(name: "reason", scope: !5439, file: !5272, line: 232, type: !106)
!5445 = !DILocalVariable(name: "mmfar", scope: !5439, file: !5272, line: 233, type: !106)
!5446 = !DILocalVariable(name: "temp", scope: !5447, file: !5272, line: 254, type: !106)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !5272, line: 244, column: 48)
!5448 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 244, column: 6)
!5449 = !DILocalVariable(name: "min_stack_ptr", scope: !5450, file: !5272, line: 309, type: !106)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !5272, line: 308, column: 43)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !5272, line: 308, column: 7)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !5272, line: 289, column: 40)
!5453 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 288, column: 6)
!5454 = !DILocation(line: 0, scope: !5439)
!5455 = !DILocation(line: 237, column: 12, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 237, column: 6)
!5457 = !DILocation(line: 241, column: 12, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 241, column: 6)
!5459 = !DILocation(line: 244, column: 12, scope: !5448)
!5460 = !DILocation(line: 244, column: 17, scope: !5448)
!5461 = !DILocation(line: 244, column: 42, scope: !5448)
!5462 = !DILocation(line: 244, column: 6, scope: !5439)
!5463 = !DILocation(line: 254, column: 24, scope: !5447)
!5464 = !DILocation(line: 0, scope: !5447)
!5465 = !DILocation(line: 256, column: 13, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5447, file: !5272, line: 256, column: 7)
!5467 = !DILocation(line: 256, column: 18, scope: !5466)
!5468 = !DILocation(line: 256, column: 44, scope: !5466)
!5469 = !DILocation(line: 256, column: 7, scope: !5447)
!5470 = !DILocation(line: 259, column: 24, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !5272, line: 259, column: 8)
!5472 = distinct !DILexicalBlock(scope: !5466, file: !5272, line: 256, column: 50)
!5473 = !DILocation(line: 259, column: 8, scope: !5472)
!5474 = !DILocation(line: 261, column: 15, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5471, file: !5272, line: 259, column: 30)
!5476 = !DILocation(line: 262, column: 4, scope: !5475)
!5477 = !DILocation(line: 265, column: 12, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 265, column: 6)
!5479 = !DILocation(line: 269, column: 12, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 269, column: 6)
!5481 = !DILocation(line: 288, column: 12, scope: !5453)
!5482 = !DILocation(line: 288, column: 17, scope: !5453)
!5483 = !DILocation(line: 288, column: 41, scope: !5453)
!5484 = !DILocation(line: 289, column: 9, scope: !5453)
!5485 = !DILocation(line: 289, column: 14, scope: !5453)
!5486 = !DILocation(line: 288, column: 6, scope: !5439)
!5487 = !DILocation(line: 308, column: 12, scope: !5451)
!5488 = !DILocation(line: 308, column: 17, scope: !5451)
!5489 = !DILocation(line: 308, column: 7, scope: !5452)
!5490 = !DILocation(line: 310, column: 6, scope: !5450)
!5491 = !DILocation(line: 309, column: 29, scope: !5450)
!5492 = !DILocation(line: 0, scope: !5450)
!5493 = !DILocation(line: 312, column: 8, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5450, file: !5272, line: 312, column: 8)
!5495 = !DILocation(line: 312, column: 8, scope: !5450)
!5496 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5497, file: !4973, line: 1099, type: !106)
!5497 = distinct !DISubprogram(name: "__set_PSP", scope: !4973, file: !4973, line: 1099, type: !5062, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5498)
!5498 = !{!5496}
!5499 = !DILocation(line: 0, scope: !5497, inlinedAt: !5500)
!5500 = distinct !DILocation(line: 338, column: 5, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5494, file: !5272, line: 312, column: 23)
!5502 = !DILocation(line: 1101, column: 3, scope: !5497, inlinedAt: !5500)
!5503 = !{i64 3758178}
!5504 = !DILocation(line: 341, column: 4, scope: !5501)
!5505 = !DILocation(line: 360, column: 12, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5439, file: !5272, line: 360, column: 6)
!5507 = !DILocation(line: 360, column: 17, scope: !5506)
!5508 = !DILocation(line: 360, column: 41, scope: !5506)
!5509 = !DILocation(line: 360, column: 6, scope: !5439)
!5510 = !DILocation(line: 361, column: 14, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5506, file: !5272, line: 360, column: 47)
!5512 = !DILocation(line: 362, column: 2, scope: !5511)
!5513 = !DILocation(line: 366, column: 12, scope: !5439)
!5514 = !DILocation(line: 369, column: 15, scope: !5439)
!5515 = !DILocation(line: 371, column: 2, scope: !5439)
!5516 = distinct !DISubprogram(name: "bus_fault", scope: !5272, file: !5272, line: 383, type: !5517, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5519)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!103, !2582, !103, !5339}
!5519 = !{!5520, !5521, !5522, !5523, !5524}
!5520 = !DILocalVariable(name: "esf", arg: 1, scope: !5516, file: !5272, line: 383, type: !2582)
!5521 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5516, file: !5272, line: 383, type: !103)
!5522 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5516, file: !5272, line: 383, type: !5339)
!5523 = !DILocalVariable(name: "reason", scope: !5516, file: !5272, line: 385, type: !106)
!5524 = !DILocalVariable(name: "bfar", scope: !5525, file: !5272, line: 405, type: !106)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !5272, line: 395, column: 42)
!5526 = distinct !DILexicalBlock(scope: !5516, file: !5272, line: 395, column: 6)
!5527 = !DILocation(line: 0, scope: !5516)
!5528 = !DILocation(line: 389, column: 11, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5516, file: !5272, line: 389, column: 6)
!5530 = !DILocation(line: 392, column: 11, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5516, file: !5272, line: 392, column: 6)
!5532 = !DILocation(line: 395, column: 11, scope: !5526)
!5533 = !DILocation(line: 395, column: 16, scope: !5526)
!5534 = !DILocation(line: 395, column: 6, scope: !5516)
!5535 = !DILocation(line: 405, column: 3, scope: !5525)
!5536 = !DILocation(line: 0, scope: !5525)
!5537 = !DILocation(line: 407, column: 13, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5525, file: !5272, line: 407, column: 7)
!5539 = !DILocation(line: 407, column: 18, scope: !5538)
!5540 = !DILocation(line: 407, column: 44, scope: !5538)
!5541 = !DILocation(line: 407, column: 7, scope: !5525)
!5542 = !DILocation(line: 411, column: 15, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !5272, line: 409, column: 30)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !5272, line: 409, column: 8)
!5545 = distinct !DILexicalBlock(scope: !5538, file: !5272, line: 407, column: 50)
!5546 = !DILocation(line: 412, column: 4, scope: !5543)
!5547 = !DILocation(line: 415, column: 11, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5516, file: !5272, line: 415, column: 6)
!5549 = !DILocation(line: 418, column: 12, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5516, file: !5272, line: 418, column: 6)
!5551 = !DILocation(line: 418, column: 17, scope: !5550)
!5552 = !DILocation(line: 418, column: 41, scope: !5550)
!5553 = !DILocation(line: 418, column: 6, scope: !5516)
!5554 = !DILocation(line: 423, column: 18, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5550, file: !5272, line: 423, column: 13)
!5556 = !DILocation(line: 524, column: 12, scope: !5516)
!5557 = !DILocation(line: 526, column: 15, scope: !5516)
!5558 = !DILocation(line: 528, column: 2, scope: !5516)
!5559 = distinct !DISubprogram(name: "usage_fault", scope: !5272, file: !5272, line: 539, type: !5560, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5564)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!106, !5562}
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 32)
!5563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2583)
!5564 = !{!5565, !5566}
!5565 = !DILocalVariable(name: "esf", arg: 1, scope: !5559, file: !5272, line: 539, type: !5562)
!5566 = !DILocalVariable(name: "reason", scope: !5559, file: !5272, line: 541, type: !106)
!5567 = !DILocation(line: 0, scope: !5559)
!5568 = !DILocation(line: 546, column: 12, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5559, file: !5272, line: 546, column: 6)
!5570 = !DILocation(line: 549, column: 12, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5559, file: !5272, line: 549, column: 6)
!5572 = !DILocation(line: 567, column: 12, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5559, file: !5272, line: 567, column: 6)
!5574 = !DILocation(line: 570, column: 12, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5559, file: !5272, line: 570, column: 6)
!5576 = !DILocation(line: 573, column: 12, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5559, file: !5272, line: 573, column: 6)
!5578 = !DILocation(line: 576, column: 12, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5559, file: !5272, line: 576, column: 6)
!5580 = !DILocation(line: 581, column: 12, scope: !5559)
!5581 = !DILocation(line: 583, column: 2, scope: !5559)
!5582 = distinct !DISubprogram(name: "debug_monitor", scope: !5272, file: !5272, line: 632, type: !5583, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5585)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{null, !2582, !5339}
!5585 = !{!5586, !5587}
!5586 = !DILocalVariable(name: "esf", arg: 1, scope: !5582, file: !5272, line: 632, type: !2582)
!5587 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5582, file: !5272, line: 632, type: !5339)
!5588 = !DILocation(line: 0, scope: !5582)
!5589 = !DILocation(line: 634, column: 15, scope: !5582)
!5590 = !DILocation(line: 652, column: 1, scope: !5582)
!5591 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5272, file: !5272, line: 658, type: !5592, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !5594)
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!163, !2582}
!5594 = !{!5595, !5596, !5597}
!5595 = !DILocalVariable(name: "esf", arg: 1, scope: !5591, file: !5272, line: 658, type: !2582)
!5596 = !DILocalVariable(name: "ret_addr", scope: !5591, file: !5272, line: 660, type: !2625)
!5597 = !DILocalVariable(name: "fault_insn", scope: !5591, file: !5272, line: 686, type: !421)
!5598 = !DILocation(line: 0, scope: !5591)
!5599 = !DILocation(line: 660, column: 46, scope: !5591)
!5600 = !DILocation(line: 660, column: 23, scope: !5591)
!5601 = !DILocation(line: 682, column: 11, scope: !5591)
!5602 = !DILocation(line: 271, column: 3, scope: !5603, inlinedAt: !5604)
!5603 = distinct !DISubprogram(name: "__DSB", scope: !4973, file: !4973, line: 269, type: !2917, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !478)
!5604 = distinct !DILocation(line: 683, column: 2, scope: !5591)
!5605 = !{i64 3734313}
!5606 = !DILocation(line: 260, column: 3, scope: !5607, inlinedAt: !5608)
!5607 = distinct !DISubprogram(name: "__ISB", scope: !4973, file: !4973, line: 258, type: !2917, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !478)
!5608 = distinct !DILocation(line: 684, column: 2, scope: !5591)
!5609 = !{i64 3734030}
!5610 = !DILocation(line: 686, column: 35, scope: !5591)
!5611 = !DILocation(line: 686, column: 24, scope: !5591)
!5612 = !DILocation(line: 688, column: 11, scope: !5591)
!5613 = !DILocation(line: 271, column: 3, scope: !5603, inlinedAt: !5614)
!5614 = distinct !DILocation(line: 689, column: 2, scope: !5591)
!5615 = !DILocation(line: 260, column: 3, scope: !5607, inlinedAt: !5616)
!5616 = distinct !DILocation(line: 690, column: 2, scope: !5591)
!5617 = !DILocation(line: 693, column: 45, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5591, file: !5272, line: 693, column: 6)
!5619 = !DILocation(line: 699, column: 1, scope: !5591)
!5620 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5272, file: !5272, line: 1107, type: !2917, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !478)
!5621 = !DILocation(line: 1111, column: 11, scope: !5620)
!5622 = !DILocation(line: 1136, column: 1, scope: !5620)
!5623 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5624, file: !5624, line: 26, type: !2917, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5625)
!5624 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5625 = !{!5626}
!5626 = !DILocalVariable(name: "irq", scope: !5623, file: !5624, line: 28, type: !103)
!5627 = !DILocation(line: 0, scope: !5623)
!5628 = !DILocation(line: 30, column: 2, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5623, file: !5624, line: 30, column: 2)
!5630 = !DILocation(line: 31, column: 3, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !5624, line: 30, column: 39)
!5632 = distinct !DILexicalBlock(scope: !5629, file: !5624, line: 30, column: 2)
!5633 = !DILocation(line: 30, column: 35, scope: !5632)
!5634 = !DILocation(line: 30, column: 13, scope: !5632)
!5635 = distinct !{!5635, !5628, !5636}
!5636 = !DILocation(line: 32, column: 2, scope: !5629)
!5637 = !DILocation(line: 33, column: 1, scope: !5623)
!5638 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !512, file: !512, line: 1814, type: !5007, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5639)
!5639 = !{!5640, !5641}
!5640 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5638, file: !512, line: 1814, type: !774)
!5641 = !DILocalVariable(name: "priority", arg: 2, scope: !5638, file: !512, line: 1814, type: !106)
!5642 = !DILocation(line: 0, scope: !5638)
!5643 = !DILocation(line: 1816, column: 7, scope: !5638)
!5644 = !DILocation(line: 0, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5638, file: !512, line: 1816, column: 7)
!5646 = !DILocation(line: 1824, column: 1, scope: !5638)
!5647 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5648, file: !5648, line: 27, type: !5649, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !5752)
!5648 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !5651}
!5651 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !5652)
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5653, size: 32)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !5654)
!5654 = !{!5655, !5713, !5725, !5726, !5727, !5728, !5734, !5747}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5653, file: !367, line: 247, baseType: !5656, size: 384)
!5656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !5657)
!5657 = !{!5658, !5682, !5689, !5690, !5691, !5700, !5701, !5702}
!5658 = !DIDerivedType(tag: DW_TAG_member, scope: !5656, file: !367, line: 60, baseType: !5659, size: 64)
!5659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5656, file: !367, line: 60, size: 64, elements: !5660)
!5660 = !{!5661, !5676}
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5659, file: !367, line: 61, baseType: !5662, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !5663)
!5663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !5664)
!5664 = !{!5665, !5671}
!5665 = !DIDerivedType(tag: DW_TAG_member, scope: !5663, file: !377, line: 38, baseType: !5666, size: 32)
!5666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5663, file: !377, line: 38, size: 32, elements: !5667)
!5667 = !{!5668, !5670}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5666, file: !377, line: 39, baseType: !5669, size: 32)
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 32)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5666, file: !377, line: 40, baseType: !5669, size: 32)
!5671 = !DIDerivedType(tag: DW_TAG_member, scope: !5663, file: !377, line: 42, baseType: !5672, size: 32, offset: 32)
!5672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5663, file: !377, line: 42, size: 32, elements: !5673)
!5673 = !{!5674, !5675}
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5672, file: !377, line: 43, baseType: !5669, size: 32)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5672, file: !377, line: 44, baseType: !5669, size: 32)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5659, file: !367, line: 62, baseType: !5677, size: 64)
!5677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !5678)
!5678 = !{!5679}
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5677, file: !393, line: 50, baseType: !5680, size: 64)
!5680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5681, size: 64, elements: !398)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5656, file: !367, line: 68, baseType: !5683, size: 32, offset: 64)
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 32)
!5684 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !5685)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !5686)
!5686 = !{!5687}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5685, file: !403, line: 232, baseType: !5688, size: 64)
!5688 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !5663)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5656, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5656, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!5691 = !DIDerivedType(tag: DW_TAG_member, scope: !5656, file: !367, line: 90, baseType: !5692, size: 16, offset: 112)
!5692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5656, file: !367, line: 90, size: 16, elements: !5693)
!5693 = !{!5694, !5699}
!5694 = !DIDerivedType(tag: DW_TAG_member, scope: !5692, file: !367, line: 91, baseType: !5695, size: 16)
!5695 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5692, file: !367, line: 91, size: 16, elements: !5696)
!5696 = !{!5697, !5698}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5695, file: !367, line: 96, baseType: !417, size: 8)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5695, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5692, file: !367, line: 100, baseType: !421, size: 16)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5656, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5656, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5656, file: !367, line: 131, baseType: !5703, size: 192, offset: 192)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !5704)
!5704 = !{!5705, !5706, !5712}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5703, file: !403, line: 245, baseType: !5662, size: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5703, file: !403, line: 246, baseType: !5707, size: 32, offset: 64)
!5707 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !5708)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 32)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !5711}
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 32)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5703, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5653, file: !367, line: 250, baseType: !5714, size: 288, offset: 384)
!5714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !5715)
!5715 = !{!5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724}
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5714, file: !440, line: 26, baseType: !106, size: 32)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5714, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5714, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5714, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5714, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5714, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5714, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5714, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5714, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5653, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5653, file: !367, line: 256, baseType: !5684, size: 64, offset: 704)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5653, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5653, file: !367, line: 300, baseType: !5729, size: 96, offset: 800)
!5729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !5730)
!5730 = !{!5731, !5732, !5733}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5729, file: !367, line: 153, baseType: !22, size: 32)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5729, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5729, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5653, file: !367, line: 325, baseType: !5735, size: 32, offset: 896)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 32)
!5736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !5737)
!5737 = !{!5738, !5744, !5745}
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5736, file: !463, line: 5074, baseType: !5739, size: 96)
!5739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !5740)
!5740 = !{!5741, !5742, !5743}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5739, file: !467, line: 57, baseType: !470, size: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5739, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5739, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5736, file: !463, line: 5075, baseType: !5684, size: 64, offset: 96)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5736, file: !463, line: 5076, baseType: !5746, offset: 160)
!5746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5653, file: !367, line: 343, baseType: !5748, size: 64, offset: 928)
!5748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !5749)
!5749 = !{!5750, !5751}
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5748, file: !440, line: 63, baseType: !106, size: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5748, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!5752 = !{!5753}
!5753 = !DILocalVariable(name: "thread", arg: 1, scope: !5647, file: !5648, line: 27, type: !5651)
!5754 = !DILocation(line: 0, scope: !5647)
!5755 = !DILocation(line: 29, column: 6, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5647, file: !5648, line: 29, column: 6)
!5757 = !DILocation(line: 29, column: 15, scope: !5756)
!5758 = !DILocation(line: 29, column: 6, scope: !5647)
!5759 = !DILocation(line: 1031, column: 3, scope: !5760, inlinedAt: !5763)
!5760 = distinct !DISubprogram(name: "__get_IPSR", scope: !4973, file: !4973, line: 1027, type: !4808, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !5761)
!5761 = !{!5762}
!5762 = !DILocalVariable(name: "result", scope: !5760, file: !4973, line: 1029, type: !106)
!5763 = distinct !DILocation(line: 48, column: 10, scope: !5764, inlinedAt: !5768)
!5764 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5765, file: !5765, line: 46, type: !5766, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2671, retainedNodes: !478)
!5765 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5766 = !DISubroutineType(types: !5767)
!5767 = !{!163}
!5768 = distinct !DILocation(line: 30, column: 7, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !5648, line: 30, column: 7)
!5770 = distinct !DILexicalBlock(scope: !5756, file: !5648, line: 29, column: 26)
!5771 = !{i64 3723161}
!5772 = !DILocation(line: 0, scope: !5760, inlinedAt: !5763)
!5773 = !DILocation(line: 48, column: 9, scope: !5764, inlinedAt: !5768)
!5774 = !DILocation(line: 30, column: 7, scope: !5770)
!5775 = !DILocation(line: 42, column: 14, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5769, file: !5648, line: 30, column: 25)
!5777 = !DILocation(line: 48, column: 15, scope: !5776)
!5778 = !DILocation(line: 49, column: 3, scope: !5776)
!5779 = !DILocation(line: 52, column: 2, scope: !5647)
!5780 = !DILocation(line: 53, column: 1, scope: !5647)
!5781 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !362, file: !362, line: 127, type: !2917, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !478)
!5782 = !DILocation(line: 134, column: 2, scope: !5781)
!5783 = !DILocation(line: 156, column: 1, scope: !5781)
!5784 = !DILocation(line: 0, scope: !361)
!5785 = !DILocation(line: 289, column: 36, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !361, file: !362, line: 285, column: 2)
!5787 = !DILocation(line: 289, column: 42, scope: !5786)
!5788 = !DILocation(line: 300, column: 36, scope: !361)
!5789 = !DILocation(line: 301, column: 35, scope: !361)
!5790 = !DILocation(line: 302, column: 37, scope: !361)
!5791 = !DILocation(line: 311, column: 2, scope: !361)
!5792 = !DILocation(line: 316, column: 1, scope: !361)
!5793 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !540, file: !540, line: 180, type: !2917, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !478)
!5794 = !DILocation(line: 188, column: 12, scope: !5793)
!5795 = !DILocation(line: 271, column: 3, scope: !5796, inlinedAt: !5797)
!5796 = distinct !DISubprogram(name: "__DSB", scope: !4973, file: !4973, line: 269, type: !2917, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !478)
!5797 = distinct !DILocation(line: 192, column: 2, scope: !5793)
!5798 = !{i64 3911063}
!5799 = !DILocation(line: 260, column: 3, scope: !5800, inlinedAt: !5801)
!5800 = distinct !DISubprogram(name: "__ISB", scope: !4973, file: !4973, line: 258, type: !2917, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !478)
!5801 = distinct !DILocation(line: 193, column: 2, scope: !5793)
!5802 = !{i64 3910780}
!5803 = !DILocation(line: 194, column: 1, scope: !5793)
!5804 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !540, file: !540, line: 199, type: !2917, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !478)
!5805 = !DILocation(line: 282, column: 3, scope: !5806, inlinedAt: !5807)
!5806 = distinct !DISubprogram(name: "__DMB", scope: !4973, file: !4973, line: 280, type: !2917, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !478)
!5807 = distinct !DILocation(line: 202, column: 2, scope: !5804)
!5808 = !{i64 3911339}
!5809 = !DILocation(line: 205, column: 12, scope: !5804)
!5810 = !DILocation(line: 206, column: 1, scope: !5804)
!5811 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !540, file: !540, line: 275, type: !5812, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5825)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{null, !5814, !1805, !5239, !5239}
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5815, size: 32)
!5815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5816)
!5816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !491, line: 52, size: 96, elements: !5817)
!5817 = !{!5818, !5819, !5820}
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5816, file: !491, line: 53, baseType: !22, size: 32)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5816, file: !491, line: 54, baseType: !356, size: 32, offset: 32)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5816, file: !491, line: 55, baseType: !5821, size: 32, offset: 64)
!5821 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !497, line: 151, baseType: !5822)
!5822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 149, size: 32, elements: !5823)
!5823 = !{!5824}
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5822, file: !497, line: 150, baseType: !106, size: 32)
!5825 = !{!5826, !5827, !5828, !5829}
!5826 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5811, file: !540, line: 276, type: !5814)
!5827 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5811, file: !540, line: 276, type: !1805)
!5828 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5811, file: !540, line: 277, type: !5239)
!5829 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5811, file: !540, line: 277, type: !5239)
!5830 = !DILocation(line: 0, scope: !5811)
!5831 = !DILocation(line: 279, column: 6, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5811, file: !540, line: 279, column: 6)
!5833 = !DILocation(line: 285, column: 1, scope: !5811)
!5834 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5835, file: !5835, line: 220, type: !5836, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5838)
!5835 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!103, !5814, !1805, !5239, !5239}
!5838 = !{!5839, !5840, !5841, !5842, !5843}
!5839 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5834, file: !5835, line: 221, type: !5814)
!5840 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5834, file: !5835, line: 221, type: !1805)
!5841 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5834, file: !5835, line: 222, type: !5239)
!5842 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5834, file: !5835, line: 223, type: !5239)
!5843 = !DILocalVariable(name: "mpu_reg_index", scope: !5834, file: !5835, line: 225, type: !103)
!5844 = !DILocation(line: 0, scope: !5834)
!5845 = !DILocation(line: 225, column: 22, scope: !5834)
!5846 = !DILocation(line: 233, column: 18, scope: !5834)
!5847 = !DILocation(line: 236, column: 23, scope: !5834)
!5848 = !DILocation(line: 236, column: 21, scope: !5834)
!5849 = !DILocation(line: 238, column: 2, scope: !5834)
!5850 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !540, file: !540, line: 105, type: !5851, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5853)
!5851 = !DISubroutineType(types: !5852)
!5852 = !{!103, !5814, !160, !160, !163}
!5853 = !{!5854, !5855, !5856, !5857, !5858, !5859}
!5854 = !DILocalVariable(name: "regions", arg: 1, scope: !5850, file: !540, line: 106, type: !5814)
!5855 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5850, file: !540, line: 106, type: !160)
!5856 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5850, file: !540, line: 106, type: !160)
!5857 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5850, file: !540, line: 107, type: !163)
!5858 = !DILocalVariable(name: "i", scope: !5850, file: !540, line: 109, type: !103)
!5859 = !DILocalVariable(name: "reg_index", scope: !5850, file: !540, line: 110, type: !103)
!5860 = !DILocation(line: 0, scope: !5850)
!5861 = !DILocation(line: 110, column: 18, scope: !5850)
!5862 = !DILocation(line: 112, column: 16, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !540, line: 112, column: 2)
!5864 = distinct !DILexicalBlock(scope: !5850, file: !540, line: 112, column: 2)
!5865 = !DILocation(line: 112, column: 2, scope: !5864)
!5866 = !DILocation(line: 113, column: 7, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !540, line: 113, column: 7)
!5868 = distinct !DILexicalBlock(scope: !5863, file: !540, line: 112, column: 36)
!5869 = !DILocation(line: 113, column: 18, scope: !5867)
!5870 = !DILocation(line: 113, column: 23, scope: !5867)
!5871 = !DILocation(line: 113, column: 7, scope: !5868)
!5872 = !DILocation(line: 118, column: 23, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5868, file: !540, line: 118, column: 7)
!5874 = !DILocation(line: 119, column: 7, scope: !5873)
!5875 = !DILocation(line: 118, column: 7, scope: !5868)
!5876 = !DILocation(line: 124, column: 36, scope: !5868)
!5877 = !DILocation(line: 124, column: 15, scope: !5868)
!5878 = !DILocation(line: 126, column: 17, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5868, file: !540, line: 126, column: 7)
!5880 = !DILocation(line: 126, column: 7, scope: !5868)
!5881 = !DILocation(line: 131, column: 12, scope: !5868)
!5882 = !DILocation(line: 132, column: 2, scope: !5868)
!5883 = !DILocation(line: 112, column: 32, scope: !5863)
!5884 = distinct !{!5884, !5865, !5885}
!5885 = !DILocation(line: 132, column: 2, scope: !5864)
!5886 = !DILocation(line: 135, column: 1, scope: !5850)
!5887 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5835, file: !5835, line: 63, type: !5888, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5890)
!5888 = !DISubroutineType(types: !5889)
!5889 = !{!103, !5814}
!5890 = !{!5891, !5892}
!5891 = !DILocalVariable(name: "part", arg: 1, scope: !5887, file: !5835, line: 63, type: !5814)
!5892 = !DILocalVariable(name: "partition_is_valid", scope: !5887, file: !5835, line: 70, type: !103)
!5893 = !DILocation(line: 0, scope: !5887)
!5894 = !DILocation(line: 71, column: 11, scope: !5887)
!5895 = !DILocation(line: 71, column: 37, scope: !5887)
!5896 = !{i32 0, i32 33}
!5897 = !DILocation(line: 72, column: 3, scope: !5887)
!5898 = !DILocation(line: 71, column: 30, scope: !5887)
!5899 = !DILocation(line: 75, column: 11, scope: !5887)
!5900 = !DILocation(line: 75, column: 17, scope: !5887)
!5901 = !DILocation(line: 75, column: 38, scope: !5887)
!5902 = !DILocation(line: 77, column: 2, scope: !5887)
!5903 = distinct !DISubprogram(name: "mpu_configure_region", scope: !540, file: !540, line: 79, type: !5904, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5906)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{!103, !1805, !5814}
!5906 = !{!5907, !5908, !5909}
!5907 = !DILocalVariable(name: "index", arg: 1, scope: !5903, file: !540, line: 79, type: !1805)
!5908 = !DILocalVariable(name: "new_region", arg: 2, scope: !5903, file: !540, line: 80, type: !5814)
!5909 = !DILocalVariable(name: "region_conf", scope: !5903, file: !540, line: 82, type: !529)
!5910 = !DILocation(line: 0, scope: !5903)
!5911 = !DILocation(line: 82, column: 2, scope: !5903)
!5912 = !DILocation(line: 82, column: 24, scope: !5903)
!5913 = !DILocation(line: 87, column: 33, scope: !5903)
!5914 = !DILocation(line: 87, column: 14, scope: !5903)
!5915 = !DILocation(line: 87, column: 19, scope: !5903)
!5916 = !DILocation(line: 91, column: 55, scope: !5903)
!5917 = !DILocation(line: 92, column: 16, scope: !5903)
!5918 = !DILocation(line: 92, column: 53, scope: !5903)
!5919 = !DILocation(line: 91, column: 2, scope: !5903)
!5920 = !DILocation(line: 95, column: 9, scope: !5903)
!5921 = !DILocation(line: 97, column: 1, scope: !5903)
!5922 = !DILocation(line: 95, column: 2, scope: !5903)
!5923 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5835, file: !5835, line: 113, type: !5924, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5929)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{null, !5926, !5927, !106, !106}
!5926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 32)
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5928, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5821)
!5929 = !{!5930, !5931, !5932, !5933}
!5930 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5923, file: !5835, line: 114, type: !5926)
!5931 = !DILocalVariable(name: "attr", arg: 2, scope: !5923, file: !5835, line: 115, type: !5927)
!5932 = !DILocalVariable(name: "base", arg: 3, scope: !5923, file: !5835, line: 115, type: !106)
!5933 = !DILocalVariable(name: "size", arg: 4, scope: !5923, file: !5835, line: 115, type: !106)
!5934 = !DILocation(line: 0, scope: !5923)
!5935 = !DILocation(line: 127, column: 23, scope: !5923)
!5936 = !DILocation(line: 127, column: 35, scope: !5923)
!5937 = !DILocation(line: 127, column: 33, scope: !5923)
!5938 = !DILocation(line: 127, column: 10, scope: !5923)
!5939 = !DILocation(line: 127, column: 15, scope: !5923)
!5940 = !DILocation(line: 129, column: 1, scope: !5923)
!5941 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !540, file: !540, line: 57, type: !5942, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!103, !1805, !527}
!5944 = !{!5945, !5946}
!5945 = !DILocalVariable(name: "index", arg: 1, scope: !5941, file: !540, line: 57, type: !1805)
!5946 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5941, file: !540, line: 58, type: !527)
!5947 = !DILocation(line: 0, scope: !5941)
!5948 = !DILocation(line: 61, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5941, file: !540, line: 61, column: 6)
!5950 = !DILocation(line: 61, column: 12, scope: !5949)
!5951 = !DILocation(line: 61, column: 6, scope: !5941)
!5952 = !DILocation(line: 71, column: 2, scope: !5941)
!5953 = !DILocation(line: 73, column: 2, scope: !5941)
!5954 = !DILocation(line: 74, column: 1, scope: !5941)
!5955 = distinct !DISubprogram(name: "region_init", scope: !5835, file: !5835, line: 29, type: !5956, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5958)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{null, !5239, !527}
!5958 = !{!5959, !5960}
!5959 = !DILocalVariable(name: "index", arg: 1, scope: !5955, file: !5835, line: 29, type: !5239)
!5960 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5955, file: !5835, line: 30, type: !527)
!5961 = !DILocation(line: 0, scope: !5955)
!5962 = !DILocation(line: 33, column: 2, scope: !5955)
!5963 = !DILocation(line: 47, column: 28, scope: !5955)
!5964 = !DILocation(line: 47, column: 33, scope: !5955)
!5965 = !DILocation(line: 48, column: 26, scope: !5955)
!5966 = !DILocation(line: 47, column: 12, scope: !5955)
!5967 = !DILocation(line: 49, column: 32, scope: !5955)
!5968 = !DILocation(line: 49, column: 37, scope: !5955)
!5969 = !DILocation(line: 49, column: 12, scope: !5955)
!5970 = !DILocation(line: 53, column: 1, scope: !5955)
!5971 = distinct !DISubprogram(name: "set_region_number", scope: !5972, file: !5972, line: 32, type: !5062, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5973)
!5972 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5973 = !{!5974}
!5974 = !DILocalVariable(name: "index", arg: 1, scope: !5971, file: !5972, line: 32, type: !106)
!5975 = !DILocation(line: 0, scope: !5971)
!5976 = !DILocation(line: 34, column: 11, scope: !5971)
!5977 = !DILocation(line: 35, column: 1, scope: !5971)
!5978 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5835, file: !5835, line: 88, type: !5979, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5981)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!106, !106}
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "size", arg: 1, scope: !5978, file: !5835, line: 88, type: !106)
!5983 = !DILocation(line: 0, scope: !5978)
!5984 = !DILocation(line: 91, column: 11, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5978, file: !5835, line: 91, column: 6)
!5986 = !DILocation(line: 91, column: 6, scope: !5978)
!5987 = !DILocation(line: 100, column: 11, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5978, file: !5835, line: 100, column: 6)
!5989 = !DILocation(line: 100, column: 6, scope: !5978)
!5990 = !DILocation(line: 104, column: 35, scope: !5978)
!5991 = !DILocation(line: 104, column: 16, scope: !5978)
!5992 = !DILocation(line: 104, column: 50, scope: !5978)
!5993 = !DILocation(line: 104, column: 72, scope: !5978)
!5994 = !DILocation(line: 104, column: 2, scope: !5978)
!5995 = !DILocation(line: 106, column: 1, scope: !5978)
!5996 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !540, file: !540, line: 307, type: !5997, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !5999)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{null, !5814, !160}
!5999 = !{!6000, !6001}
!6000 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5996, file: !540, line: 308, type: !5814)
!6001 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5996, file: !540, line: 308, type: !160)
!6002 = !DILocation(line: 0, scope: !5996)
!6003 = !DILocation(line: 310, column: 6, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5996, file: !540, line: 310, column: 6)
!6005 = !DILocation(line: 316, column: 1, scope: !5996)
!6006 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5835, file: !5835, line: 249, type: !6007, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !6009)
!6007 = !DISubroutineType(types: !6008)
!6008 = !{!103, !5814, !160}
!6009 = !{!6010, !6011, !6012, !6013}
!6010 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6006, file: !5835, line: 250, type: !5814)
!6011 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6006, file: !5835, line: 250, type: !160)
!6012 = !DILocalVariable(name: "mpu_reg_index", scope: !6006, file: !5835, line: 252, type: !103)
!6013 = !DILocalVariable(name: "i", scope: !6014, file: !5835, line: 264, type: !103)
!6014 = distinct !DILexicalBlock(scope: !6015, file: !5835, line: 264, column: 3)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !5835, line: 261, column: 32)
!6016 = distinct !DILexicalBlock(scope: !6006, file: !5835, line: 261, column: 6)
!6017 = !DILocation(line: 0, scope: !6006)
!6018 = !DILocation(line: 252, column: 22, scope: !6006)
!6019 = !DILocation(line: 258, column: 18, scope: !6006)
!6020 = !DILocation(line: 261, column: 20, scope: !6016)
!6021 = !DILocation(line: 261, column: 6, scope: !6006)
!6022 = !DILocation(line: 0, scope: !6014)
!6023 = !DILocation(line: 265, column: 4, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !5835, line: 264, column: 59)
!6025 = distinct !DILexicalBlock(scope: !6014, file: !5835, line: 264, column: 3)
!6026 = !DILocation(line: 264, column: 55, scope: !6025)
!6027 = !DILocation(line: 264, column: 33, scope: !6025)
!6028 = !DILocation(line: 264, column: 3, scope: !6014)
!6029 = distinct !{!6029, !6028, !6030}
!6030 = !DILocation(line: 266, column: 3, scope: !6014)
!6031 = !DILocation(line: 269, column: 2, scope: !6006)
!6032 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6033, file: !6033, line: 218, type: !5062, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !6034)
!6033 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6034 = !{!6035}
!6035 = !DILocalVariable(name: "rnr", arg: 1, scope: !6032, file: !6033, line: 218, type: !106)
!6036 = !DILocation(line: 0, scope: !6032)
!6037 = !DILocation(line: 220, column: 12, scope: !6032)
!6038 = !DILocation(line: 221, column: 13, scope: !6032)
!6039 = !DILocation(line: 222, column: 1, scope: !6032)
!6040 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !540, file: !540, line: 326, type: !6041, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !6043)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{!103}
!6043 = !{!6044}
!6044 = !DILocalVariable(name: "r_index", scope: !6040, file: !540, line: 328, type: !106)
!6045 = !DILocation(line: 330, column: 17, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6040, file: !540, line: 330, column: 6)
!6047 = !DILocation(line: 330, column: 29, scope: !6046)
!6048 = !DILocation(line: 330, column: 6, scope: !6040)
!6049 = !DILocation(line: 347, column: 2, scope: !6040)
!6050 = !DILocation(line: 0, scope: !6040)
!6051 = !DILocation(line: 364, column: 29, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !540, line: 364, column: 2)
!6053 = distinct !DILexicalBlock(scope: !6040, file: !540, line: 364, column: 2)
!6054 = !DILocation(line: 364, column: 2, scope: !6053)
!6055 = !DILocation(line: 365, column: 25, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6052, file: !540, line: 364, column: 66)
!6057 = !DILocation(line: 365, column: 3, scope: !6056)
!6058 = !DILocation(line: 364, column: 62, scope: !6052)
!6059 = distinct !{!6059, !6054, !6060}
!6060 = !DILocation(line: 366, column: 2, scope: !6053)
!6061 = !DILocation(line: 369, column: 23, scope: !6040)
!6062 = !DILocation(line: 369, column: 21, scope: !6040)
!6063 = !DILocation(line: 372, column: 2, scope: !6040)
!6064 = !DILocation(line: 443, column: 2, scope: !6040)
!6065 = !DILocation(line: 444, column: 1, scope: !6040)
!6066 = distinct !DISubprogram(name: "strcpy", scope: !6067, file: !6067, line: 20, type: !6068, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6072)
!6067 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6068 = !DISubroutineType(types: !6069)
!6069 = !{!1099, !6070, !6071}
!6070 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1099)
!6071 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !150)
!6072 = !{!6073, !6074, !6075}
!6073 = !DILocalVariable(name: "d", arg: 1, scope: !6066, file: !6067, line: 20, type: !6070)
!6074 = !DILocalVariable(name: "s", arg: 2, scope: !6066, file: !6067, line: 20, type: !6071)
!6075 = !DILocalVariable(name: "dest", scope: !6066, file: !6067, line: 22, type: !1099)
!6076 = !DILocation(line: 0, scope: !6066)
!6077 = !DILocation(line: 24, column: 9, scope: !6066)
!6078 = !DILocation(line: 24, column: 12, scope: !6066)
!6079 = !DILocation(line: 24, column: 2, scope: !6066)
!6080 = !DILocation(line: 25, column: 6, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6066, file: !6067, line: 24, column: 21)
!6082 = !DILocation(line: 26, column: 4, scope: !6081)
!6083 = !DILocation(line: 27, column: 4, scope: !6081)
!6084 = distinct !{!6084, !6079, !6085}
!6085 = !DILocation(line: 28, column: 2, scope: !6066)
!6086 = !DILocation(line: 30, column: 5, scope: !6066)
!6087 = !DILocation(line: 32, column: 2, scope: !6066)
!6088 = distinct !DISubprogram(name: "strncpy", scope: !6067, file: !6067, line: 42, type: !6089, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6091)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!1099, !6070, !6071, !356}
!6091 = !{!6092, !6093, !6094, !6095}
!6092 = !DILocalVariable(name: "d", arg: 1, scope: !6088, file: !6067, line: 42, type: !6070)
!6093 = !DILocalVariable(name: "s", arg: 2, scope: !6088, file: !6067, line: 42, type: !6071)
!6094 = !DILocalVariable(name: "n", arg: 3, scope: !6088, file: !6067, line: 42, type: !356)
!6095 = !DILocalVariable(name: "dest", scope: !6088, file: !6067, line: 44, type: !1099)
!6096 = !DILocation(line: 0, scope: !6088)
!6097 = !DILocation(line: 46, column: 12, scope: !6088)
!6098 = !DILocation(line: 46, column: 17, scope: !6088)
!6099 = !DILocation(line: 46, column: 20, scope: !6088)
!6100 = !DILocation(line: 46, column: 23, scope: !6088)
!6101 = !DILocation(line: 46, column: 2, scope: !6088)
!6102 = !DILocation(line: 47, column: 6, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6088, file: !6067, line: 46, column: 32)
!6104 = !DILocation(line: 48, column: 4, scope: !6103)
!6105 = !DILocation(line: 49, column: 4, scope: !6103)
!6106 = !DILocation(line: 50, column: 4, scope: !6103)
!6107 = distinct !{!6107, !6101, !6108}
!6108 = !DILocation(line: 51, column: 2, scope: !6088)
!6109 = !DILocation(line: 54, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6088, file: !6067, line: 53, column: 16)
!6111 = !DILocation(line: 55, column: 4, scope: !6110)
!6112 = !DILocation(line: 56, column: 4, scope: !6110)
!6113 = !DILocation(line: 53, column: 11, scope: !6088)
!6114 = !DILocation(line: 53, column: 2, scope: !6088)
!6115 = distinct !{!6115, !6114, !6116}
!6116 = !DILocation(line: 57, column: 2, scope: !6088)
!6117 = !DILocation(line: 59, column: 2, scope: !6088)
!6118 = distinct !DISubprogram(name: "strchr", scope: !6067, file: !6067, line: 69, type: !6119, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!1099, !150, !103}
!6121 = !{!6122, !6123, !6124}
!6122 = !DILocalVariable(name: "s", arg: 1, scope: !6118, file: !6067, line: 69, type: !150)
!6123 = !DILocalVariable(name: "c", arg: 2, scope: !6118, file: !6067, line: 69, type: !103)
!6124 = !DILocalVariable(name: "tmp", scope: !6118, file: !6067, line: 71, type: !152)
!6125 = !DILocation(line: 0, scope: !6118)
!6126 = !DILocation(line: 73, column: 2, scope: !6118)
!6127 = !DILocation(line: 73, column: 10, scope: !6118)
!6128 = !DILocation(line: 73, column: 13, scope: !6118)
!6129 = !DILocation(line: 73, column: 21, scope: !6118)
!6130 = !DILocation(line: 74, column: 4, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6118, file: !6067, line: 73, column: 38)
!6132 = distinct !{!6132, !6126, !6133}
!6133 = !DILocation(line: 75, column: 2, scope: !6118)
!6134 = !DILocation(line: 77, column: 9, scope: !6118)
!6135 = !DILocation(line: 77, column: 2, scope: !6118)
!6136 = distinct !DISubprogram(name: "strrchr", scope: !6067, file: !6067, line: 87, type: !6119, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6137)
!6137 = !{!6138, !6139, !6140}
!6138 = !DILocalVariable(name: "s", arg: 1, scope: !6136, file: !6067, line: 87, type: !150)
!6139 = !DILocalVariable(name: "c", arg: 2, scope: !6136, file: !6067, line: 87, type: !103)
!6140 = !DILocalVariable(name: "match", scope: !6136, file: !6067, line: 89, type: !1099)
!6141 = !DILocation(line: 0, scope: !6136)
!6142 = !DILocation(line: 91, column: 2, scope: !6136)
!6143 = !DILocation(line: 92, column: 7, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !6067, line: 92, column: 7)
!6145 = distinct !DILexicalBlock(scope: !6136, file: !6067, line: 91, column: 5)
!6146 = !DILocation(line: 92, column: 10, scope: !6144)
!6147 = !DILocation(line: 92, column: 7, scope: !6145)
!6148 = !DILocation(line: 95, column: 13, scope: !6136)
!6149 = !DILocation(line: 95, column: 2, scope: !6145)
!6150 = distinct !{!6150, !6142, !6151}
!6151 = !DILocation(line: 95, column: 15, scope: !6136)
!6152 = !DILocation(line: 97, column: 2, scope: !6136)
!6153 = distinct !DISubprogram(name: "strlen", scope: !6067, file: !6067, line: 107, type: !6154, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6156)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{!356, !150}
!6156 = !{!6157, !6158}
!6157 = !DILocalVariable(name: "s", arg: 1, scope: !6153, file: !6067, line: 107, type: !150)
!6158 = !DILocalVariable(name: "n", scope: !6153, file: !6067, line: 109, type: !356)
!6159 = !DILocation(line: 0, scope: !6153)
!6160 = !DILocation(line: 111, column: 9, scope: !6153)
!6161 = !DILocation(line: 111, column: 12, scope: !6153)
!6162 = !DILocation(line: 111, column: 2, scope: !6153)
!6163 = !DILocation(line: 112, column: 4, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6153, file: !6067, line: 111, column: 21)
!6165 = !DILocation(line: 113, column: 4, scope: !6164)
!6166 = distinct !{!6166, !6162, !6167}
!6167 = !DILocation(line: 114, column: 2, scope: !6153)
!6168 = !DILocation(line: 116, column: 2, scope: !6153)
!6169 = distinct !DISubprogram(name: "strnlen", scope: !6067, file: !6067, line: 126, type: !6170, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6172)
!6170 = !DISubroutineType(types: !6171)
!6171 = !{!356, !150, !356}
!6172 = !{!6173, !6174, !6175}
!6173 = !DILocalVariable(name: "s", arg: 1, scope: !6169, file: !6067, line: 126, type: !150)
!6174 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6169, file: !6067, line: 126, type: !356)
!6175 = !DILocalVariable(name: "n", scope: !6169, file: !6067, line: 128, type: !356)
!6176 = !DILocation(line: 0, scope: !6169)
!6177 = !DILocation(line: 130, column: 9, scope: !6169)
!6178 = !DILocation(line: 130, column: 12, scope: !6169)
!6179 = !DILocation(line: 130, column: 20, scope: !6169)
!6180 = !DILocation(line: 130, column: 2, scope: !6169)
!6181 = !DILocation(line: 131, column: 4, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6169, file: !6067, line: 130, column: 35)
!6183 = !DILocation(line: 132, column: 4, scope: !6182)
!6184 = distinct !{!6184, !6180, !6185}
!6185 = !DILocation(line: 133, column: 2, scope: !6169)
!6186 = !DILocation(line: 135, column: 2, scope: !6169)
!6187 = distinct !DISubprogram(name: "strcmp", scope: !6067, file: !6067, line: 145, type: !6188, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6190)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{!103, !150, !150}
!6190 = !{!6191, !6192}
!6191 = !DILocalVariable(name: "s1", arg: 1, scope: !6187, file: !6067, line: 145, type: !150)
!6192 = !DILocalVariable(name: "s2", arg: 2, scope: !6187, file: !6067, line: 145, type: !150)
!6193 = !DILocation(line: 0, scope: !6187)
!6194 = !DILocation(line: 147, column: 10, scope: !6187)
!6195 = !DILocation(line: 147, column: 17, scope: !6187)
!6196 = !DILocation(line: 147, column: 14, scope: !6187)
!6197 = !DILocation(line: 147, column: 22, scope: !6187)
!6198 = !DILocation(line: 148, column: 5, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6187, file: !6067, line: 147, column: 40)
!6200 = !DILocation(line: 149, column: 5, scope: !6199)
!6201 = distinct !{!6201, !6202, !6203}
!6202 = !DILocation(line: 147, column: 2, scope: !6187)
!6203 = !DILocation(line: 150, column: 2, scope: !6187)
!6204 = !DILocation(line: 152, column: 9, scope: !6187)
!6205 = !DILocation(line: 152, column: 15, scope: !6187)
!6206 = !DILocation(line: 152, column: 13, scope: !6187)
!6207 = !DILocation(line: 152, column: 2, scope: !6187)
!6208 = distinct !DISubprogram(name: "strncmp", scope: !6067, file: !6067, line: 162, type: !6209, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6211)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{!103, !150, !150, !356}
!6211 = !{!6212, !6213, !6214}
!6212 = !DILocalVariable(name: "s1", arg: 1, scope: !6208, file: !6067, line: 162, type: !150)
!6213 = !DILocalVariable(name: "s2", arg: 2, scope: !6208, file: !6067, line: 162, type: !150)
!6214 = !DILocalVariable(name: "n", arg: 3, scope: !6208, file: !6067, line: 162, type: !356)
!6215 = !DILocation(line: 0, scope: !6208)
!6216 = !DILocation(line: 164, column: 17, scope: !6208)
!6217 = !DILocation(line: 164, column: 21, scope: !6208)
!6218 = !DILocation(line: 164, column: 28, scope: !6208)
!6219 = !DILocation(line: 164, column: 25, scope: !6208)
!6220 = !DILocation(line: 164, column: 33, scope: !6208)
!6221 = !DILocation(line: 165, column: 5, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6208, file: !6067, line: 164, column: 51)
!6223 = !DILocation(line: 166, column: 5, scope: !6222)
!6224 = !DILocation(line: 167, column: 4, scope: !6222)
!6225 = distinct !{!6225, !6226, !6227}
!6226 = !DILocation(line: 164, column: 2, scope: !6208)
!6227 = !DILocation(line: 168, column: 2, scope: !6208)
!6228 = !DILocation(line: 170, column: 25, scope: !6208)
!6229 = !DILocation(line: 170, column: 31, scope: !6208)
!6230 = !DILocation(line: 170, column: 29, scope: !6208)
!6231 = !DILocation(line: 170, column: 9, scope: !6208)
!6232 = !DILocation(line: 170, column: 2, scope: !6208)
!6233 = distinct !DISubprogram(name: "strtok_r", scope: !6067, file: !6067, line: 180, type: !6234, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6237)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!1099, !1099, !150, !6236}
!6236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!6237 = !{!6238, !6239, !6240, !6241, !6242}
!6238 = !DILocalVariable(name: "str", arg: 1, scope: !6233, file: !6067, line: 180, type: !1099)
!6239 = !DILocalVariable(name: "sep", arg: 2, scope: !6233, file: !6067, line: 180, type: !150)
!6240 = !DILocalVariable(name: "state", arg: 3, scope: !6233, file: !6067, line: 180, type: !6236)
!6241 = !DILocalVariable(name: "start", scope: !6233, file: !6067, line: 182, type: !1099)
!6242 = !DILocalVariable(name: "end", scope: !6233, file: !6067, line: 182, type: !1099)
!6243 = !DILocation(line: 0, scope: !6233)
!6244 = !DILocation(line: 184, column: 10, scope: !6233)
!6245 = !DILocation(line: 184, column: 22, scope: !6233)
!6246 = !DILocation(line: 187, column: 9, scope: !6233)
!6247 = !DILocation(line: 187, column: 16, scope: !6233)
!6248 = !DILocation(line: 187, column: 19, scope: !6233)
!6249 = !DILocation(line: 187, column: 2, scope: !6233)
!6250 = !DILocation(line: 188, column: 8, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6233, file: !6067, line: 187, column: 40)
!6252 = distinct !{!6252, !6249, !6253}
!6253 = !DILocation(line: 189, column: 2, scope: !6233)
!6254 = !DILocation(line: 198, column: 9, scope: !6233)
!6255 = !DILocation(line: 198, column: 18, scope: !6233)
!6256 = !DILocation(line: 198, column: 17, scope: !6233)
!6257 = !DILocation(line: 198, column: 2, scope: !6233)
!6258 = !DILocation(line: 199, column: 6, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6233, file: !6067, line: 198, column: 37)
!6260 = !DILocation(line: 198, column: 14, scope: !6233)
!6261 = distinct !{!6261, !6257, !6262}
!6262 = !DILocation(line: 200, column: 2, scope: !6233)
!6263 = !DILocation(line: 203, column: 8, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !6067, line: 202, column: 20)
!6265 = distinct !DILexicalBlock(scope: !6233, file: !6067, line: 202, column: 6)
!6266 = !DILocation(line: 204, column: 16, scope: !6264)
!6267 = !DILocation(line: 205, column: 2, scope: !6264)
!6268 = !DILocation(line: 210, column: 1, scope: !6233)
!6269 = distinct !DISubprogram(name: "strcat", scope: !6067, file: !6067, line: 212, type: !6068, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6270)
!6270 = !{!6271, !6272}
!6271 = !DILocalVariable(name: "dest", arg: 1, scope: !6269, file: !6067, line: 212, type: !6070)
!6272 = !DILocalVariable(name: "src", arg: 2, scope: !6269, file: !6067, line: 212, type: !6071)
!6273 = !DILocation(line: 0, scope: !6269)
!6274 = !DILocation(line: 214, column: 16, scope: !6269)
!6275 = !DILocation(line: 214, column: 14, scope: !6269)
!6276 = !DILocation(line: 214, column: 2, scope: !6269)
!6277 = !DILocation(line: 215, column: 2, scope: !6269)
!6278 = distinct !DISubprogram(name: "strncat", scope: !6067, file: !6067, line: 218, type: !6089, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6279)
!6279 = !{!6280, !6281, !6282, !6283, !6284}
!6280 = !DILocalVariable(name: "dest", arg: 1, scope: !6278, file: !6067, line: 218, type: !6070)
!6281 = !DILocalVariable(name: "src", arg: 2, scope: !6278, file: !6067, line: 218, type: !6071)
!6282 = !DILocalVariable(name: "n", arg: 3, scope: !6278, file: !6067, line: 219, type: !356)
!6283 = !DILocalVariable(name: "orig_dest", scope: !6278, file: !6067, line: 221, type: !1099)
!6284 = !DILocalVariable(name: "len", scope: !6278, file: !6067, line: 222, type: !356)
!6285 = !DILocation(line: 0, scope: !6278)
!6286 = !DILocation(line: 222, column: 15, scope: !6278)
!6287 = !DILocation(line: 224, column: 7, scope: !6278)
!6288 = !DILocation(line: 225, column: 14, scope: !6278)
!6289 = !DILocation(line: 225, column: 19, scope: !6278)
!6290 = !DILocation(line: 225, column: 11, scope: !6278)
!6291 = !DILocation(line: 225, column: 23, scope: !6278)
!6292 = !DILocation(line: 225, column: 28, scope: !6278)
!6293 = !DILocation(line: 225, column: 2, scope: !6278)
!6294 = !DILocation(line: 226, column: 17, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6278, file: !6067, line: 225, column: 38)
!6296 = !DILocation(line: 226, column: 8, scope: !6295)
!6297 = !DILocation(line: 226, column: 11, scope: !6295)
!6298 = distinct !{!6298, !6293, !6299}
!6299 = !DILocation(line: 227, column: 2, scope: !6278)
!6300 = !DILocation(line: 228, column: 8, scope: !6278)
!6301 = !DILocation(line: 230, column: 2, scope: !6278)
!6302 = distinct !DISubprogram(name: "memcmp", scope: !6067, file: !6067, line: 239, type: !6303, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6305)
!6303 = !DISubroutineType(types: !6304)
!6304 = !{!103, !13, !13, !356}
!6305 = !{!6306, !6307, !6308, !6309, !6310}
!6306 = !DILocalVariable(name: "m1", arg: 1, scope: !6302, file: !6067, line: 239, type: !13)
!6307 = !DILocalVariable(name: "m2", arg: 2, scope: !6302, file: !6067, line: 239, type: !13)
!6308 = !DILocalVariable(name: "n", arg: 3, scope: !6302, file: !6067, line: 239, type: !356)
!6309 = !DILocalVariable(name: "c1", scope: !6302, file: !6067, line: 241, type: !150)
!6310 = !DILocalVariable(name: "c2", scope: !6302, file: !6067, line: 242, type: !150)
!6311 = !DILocation(line: 0, scope: !6302)
!6312 = !DILocation(line: 244, column: 7, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6302, file: !6067, line: 244, column: 6)
!6314 = !DILocation(line: 244, column: 6, scope: !6302)
!6315 = !DILocation(line: 248, column: 10, scope: !6302)
!6316 = !DILocation(line: 248, column: 14, scope: !6302)
!6317 = !DILocation(line: 248, column: 19, scope: !6302)
!6318 = !DILocation(line: 248, column: 2, scope: !6302)
!6319 = !DILocation(line: 248, column: 23, scope: !6302)
!6320 = !DILocation(line: 248, column: 30, scope: !6302)
!6321 = !DILocation(line: 248, column: 27, scope: !6302)
!6322 = !DILocation(line: 249, column: 5, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6302, file: !6067, line: 248, column: 36)
!6324 = !DILocation(line: 250, column: 5, scope: !6323)
!6325 = distinct !{!6325, !6318, !6326}
!6326 = !DILocation(line: 251, column: 2, scope: !6302)
!6327 = !DILocation(line: 253, column: 9, scope: !6302)
!6328 = !DILocation(line: 253, column: 15, scope: !6302)
!6329 = !DILocation(line: 253, column: 13, scope: !6302)
!6330 = !DILocation(line: 253, column: 2, scope: !6302)
!6331 = !DILocation(line: 254, column: 1, scope: !6302)
!6332 = distinct !DISubprogram(name: "memmove", scope: !6067, file: !6067, line: 263, type: !6333, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6335)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!102, !102, !13, !356}
!6335 = !{!6336, !6337, !6338, !6339, !6340}
!6336 = !DILocalVariable(name: "d", arg: 1, scope: !6332, file: !6067, line: 263, type: !102)
!6337 = !DILocalVariable(name: "s", arg: 2, scope: !6332, file: !6067, line: 263, type: !13)
!6338 = !DILocalVariable(name: "n", arg: 3, scope: !6332, file: !6067, line: 263, type: !356)
!6339 = !DILocalVariable(name: "dest", scope: !6332, file: !6067, line: 265, type: !1099)
!6340 = !DILocalVariable(name: "src", scope: !6332, file: !6067, line: 266, type: !150)
!6341 = !DILocation(line: 0, scope: !6332)
!6342 = !DILocation(line: 268, column: 21, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6332, file: !6067, line: 268, column: 6)
!6344 = !DILocation(line: 268, column: 28, scope: !6343)
!6345 = !DILocation(line: 268, column: 6, scope: !6332)
!6346 = !DILocation(line: 280, column: 12, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !6067, line: 278, column: 9)
!6348 = !DILocation(line: 280, column: 3, scope: !6347)
!6349 = !DILocation(line: 275, column: 5, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !6067, line: 274, column: 17)
!6351 = distinct !DILexicalBlock(scope: !6343, file: !6067, line: 268, column: 33)
!6352 = !DILocation(line: 276, column: 14, scope: !6350)
!6353 = !DILocation(line: 276, column: 4, scope: !6350)
!6354 = !DILocation(line: 276, column: 12, scope: !6350)
!6355 = !DILocation(line: 274, column: 12, scope: !6351)
!6356 = !DILocation(line: 274, column: 3, scope: !6351)
!6357 = distinct !{!6357, !6356, !6358}
!6358 = !DILocation(line: 277, column: 3, scope: !6351)
!6359 = !DILocation(line: 281, column: 12, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6347, file: !6067, line: 280, column: 17)
!6361 = !DILocation(line: 281, column: 10, scope: !6360)
!6362 = !DILocation(line: 282, column: 8, scope: !6360)
!6363 = !DILocation(line: 283, column: 7, scope: !6360)
!6364 = !DILocation(line: 284, column: 5, scope: !6360)
!6365 = distinct !{!6365, !6348, !6366}
!6366 = !DILocation(line: 285, column: 3, scope: !6347)
!6367 = !DILocation(line: 288, column: 2, scope: !6332)
!6368 = distinct !DISubprogram(name: "memcpy", scope: !6067, file: !6067, line: 298, type: !6369, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6373)
!6369 = !DISubroutineType(types: !6370)
!6370 = !{!102, !6371, !6372, !356}
!6371 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6372 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6373 = !{!6374, !6375, !6376, !6377, !6378}
!6374 = !DILocalVariable(name: "d", arg: 1, scope: !6368, file: !6067, line: 298, type: !6371)
!6375 = !DILocalVariable(name: "s", arg: 2, scope: !6368, file: !6067, line: 298, type: !6372)
!6376 = !DILocalVariable(name: "n", arg: 3, scope: !6368, file: !6067, line: 298, type: !356)
!6377 = !DILocalVariable(name: "d_byte", scope: !6368, file: !6067, line: 302, type: !932)
!6378 = !DILocalVariable(name: "s_byte", scope: !6368, file: !6067, line: 303, type: !2702)
!6379 = !DILocation(line: 0, scope: !6368)
!6380 = !DILocation(line: 337, column: 11, scope: !6368)
!6381 = !DILocation(line: 337, column: 2, scope: !6368)
!6382 = !DILocation(line: 338, column: 25, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6368, file: !6067, line: 337, column: 16)
!6384 = !DILocation(line: 338, column: 17, scope: !6383)
!6385 = !DILocation(line: 338, column: 11, scope: !6383)
!6386 = !DILocation(line: 338, column: 15, scope: !6383)
!6387 = !DILocation(line: 339, column: 4, scope: !6383)
!6388 = distinct !{!6388, !6381, !6389}
!6389 = !DILocation(line: 340, column: 2, scope: !6368)
!6390 = !DILocation(line: 342, column: 2, scope: !6368)
!6391 = distinct !DISubprogram(name: "memset", scope: !6067, file: !6067, line: 352, type: !6392, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6394)
!6392 = !DISubroutineType(types: !6393)
!6393 = !{!102, !102, !103, !356}
!6394 = !{!6395, !6396, !6397, !6398, !6399}
!6395 = !DILocalVariable(name: "buf", arg: 1, scope: !6391, file: !6067, line: 352, type: !102)
!6396 = !DILocalVariable(name: "c", arg: 2, scope: !6391, file: !6067, line: 352, type: !103)
!6397 = !DILocalVariable(name: "n", arg: 3, scope: !6391, file: !6067, line: 352, type: !356)
!6398 = !DILocalVariable(name: "d_byte", scope: !6391, file: !6067, line: 356, type: !932)
!6399 = !DILocalVariable(name: "c_byte", scope: !6391, file: !6067, line: 357, type: !161)
!6400 = !DILocation(line: 0, scope: !6391)
!6401 = !DILocation(line: 357, column: 25, scope: !6391)
!6402 = !DILocation(line: 389, column: 11, scope: !6391)
!6403 = !DILocation(line: 389, column: 2, scope: !6391)
!6404 = !DILocation(line: 390, column: 11, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6391, file: !6067, line: 389, column: 16)
!6406 = !DILocation(line: 390, column: 15, scope: !6405)
!6407 = !DILocation(line: 391, column: 4, scope: !6405)
!6408 = distinct !{!6408, !6403, !6409}
!6409 = !DILocation(line: 392, column: 2, scope: !6391)
!6410 = !DILocation(line: 394, column: 2, scope: !6391)
!6411 = distinct !DISubprogram(name: "memchr", scope: !6067, file: !6067, line: 404, type: !6412, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !6414)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{!102, !13, !103, !356}
!6414 = !{!6415, !6416, !6417, !6418}
!6415 = !DILocalVariable(name: "s", arg: 1, scope: !6411, file: !6067, line: 404, type: !13)
!6416 = !DILocalVariable(name: "c", arg: 2, scope: !6411, file: !6067, line: 404, type: !103)
!6417 = !DILocalVariable(name: "n", arg: 3, scope: !6411, file: !6067, line: 404, type: !356)
!6418 = !DILocalVariable(name: "p", scope: !6419, file: !6067, line: 407, type: !2702)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !6067, line: 406, column: 14)
!6420 = distinct !DILexicalBlock(scope: !6411, file: !6067, line: 406, column: 6)
!6421 = !DILocation(line: 0, scope: !6411)
!6422 = !DILocation(line: 406, column: 8, scope: !6420)
!6423 = !DILocation(line: 406, column: 6, scope: !6411)
!6424 = !DILocation(line: 409, column: 3, scope: !6419)
!6425 = !DILocation(line: 0, scope: !6419)
!6426 = !DILocation(line: 410, column: 8, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6428, file: !6067, line: 410, column: 8)
!6428 = distinct !DILexicalBlock(scope: !6419, file: !6067, line: 409, column: 6)
!6429 = !DILocation(line: 410, column: 13, scope: !6427)
!6430 = !DILocation(line: 410, column: 8, scope: !6428)
!6431 = distinct !{!6431, !6424, !6432}
!6432 = !DILocation(line: 414, column: 20, scope: !6419)
!6433 = !DILocation(line: 417, column: 2, scope: !6411)
!6434 = !DILocation(line: 418, column: 1, scope: !6411)
!6435 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !550, file: !550, line: 23, type: !3041, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6436)
!6436 = !{!6437}
!6437 = !DILocalVariable(name: "hook", arg: 1, scope: !6435, file: !550, line: 23, type: !113)
!6438 = !DILocation(line: 0, scope: !6435)
!6439 = !DILocation(line: 25, column: 15, scope: !6435)
!6440 = !DILocation(line: 26, column: 1, scope: !6435)
!6441 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !550, file: !550, line: 14, type: !114, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6442)
!6442 = !{!6443}
!6443 = !DILocalVariable(name: "c", arg: 1, scope: !6441, file: !550, line: 14, type: !103)
!6444 = !DILocation(line: 0, scope: !6441)
!6445 = !DILocation(line: 18, column: 2, scope: !6441)
!6446 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !550, file: !550, line: 28, type: !6447, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6449)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{!103, !103, !546}
!6449 = !{!6450, !6451}
!6450 = !DILocalVariable(name: "c", arg: 1, scope: !6446, file: !550, line: 28, type: !103)
!6451 = !DILocalVariable(name: "stream", arg: 2, scope: !6446, file: !550, line: 28, type: !546)
!6452 = !DILocation(line: 0, scope: !6446)
!6453 = !DILocation(line: 30, column: 27, scope: !6446)
!6454 = !DILocation(line: 30, column: 50, scope: !6446)
!6455 = !DILocation(line: 30, column: 9, scope: !6446)
!6456 = !DILocation(line: 30, column: 2, scope: !6446)
!6457 = distinct !DISubprogram(name: "fputc", scope: !550, file: !550, line: 41, type: !6447, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6458)
!6458 = !{!6459, !6460}
!6459 = !DILocalVariable(name: "c", arg: 1, scope: !6457, file: !550, line: 41, type: !103)
!6460 = !DILocalVariable(name: "stream", arg: 2, scope: !6457, file: !550, line: 41, type: !546)
!6461 = !DILocation(line: 0, scope: !6457)
!6462 = !DILocation(line: 43, column: 9, scope: !6457)
!6463 = !DILocation(line: 43, column: 2, scope: !6457)
!6464 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6465, file: !6465, line: 72, type: !6447, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6466)
!6465 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!6466 = !{!6467, !6468}
!6467 = !DILocalVariable(name: "c", arg: 1, scope: !6464, file: !6465, line: 72, type: !103)
!6468 = !DILocalVariable(name: "stream", arg: 2, scope: !6464, file: !6465, line: 72, type: !546)
!6469 = !DILocation(line: 0, scope: !6464)
!6470 = !DILocation(line: 81, column: 2, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6464, file: !6465, line: 81, column: 2)
!6472 = !{i64 2155123286}
!6473 = !DILocation(line: 82, column: 9, scope: !6464)
!6474 = !DILocation(line: 82, column: 2, scope: !6464)
!6475 = distinct !DISubprogram(name: "fputs", scope: !550, file: !550, line: 46, type: !6476, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6479)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!103, !6071, !6478}
!6478 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !546)
!6479 = !{!6480, !6481, !6482, !6483}
!6480 = !DILocalVariable(name: "s", arg: 1, scope: !6475, file: !550, line: 46, type: !6071)
!6481 = !DILocalVariable(name: "stream", arg: 2, scope: !6475, file: !550, line: 46, type: !6478)
!6482 = !DILocalVariable(name: "len", scope: !6475, file: !550, line: 48, type: !103)
!6483 = !DILocalVariable(name: "ret", scope: !6475, file: !550, line: 49, type: !103)
!6484 = !DILocation(line: 0, scope: !6475)
!6485 = !DILocation(line: 48, column: 12, scope: !6475)
!6486 = !DILocation(line: 51, column: 8, scope: !6475)
!6487 = !DILocation(line: 53, column: 13, scope: !6475)
!6488 = !DILocation(line: 53, column: 9, scope: !6475)
!6489 = !DILocation(line: 53, column: 2, scope: !6475)
!6490 = distinct !DISubprogram(name: "fwrite", scope: !550, file: !550, line: 99, type: !6491, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!356, !6372, !356, !356, !6478}
!6493 = !{!6494, !6495, !6496, !6497}
!6494 = !DILocalVariable(name: "ptr", arg: 1, scope: !6490, file: !550, line: 99, type: !6372)
!6495 = !DILocalVariable(name: "size", arg: 2, scope: !6490, file: !550, line: 99, type: !356)
!6496 = !DILocalVariable(name: "nitems", arg: 3, scope: !6490, file: !550, line: 99, type: !356)
!6497 = !DILocalVariable(name: "stream", arg: 4, scope: !6490, file: !550, line: 100, type: !6478)
!6498 = !DILocation(line: 0, scope: !6490)
!6499 = !DILocation(line: 102, column: 9, scope: !6490)
!6500 = !DILocation(line: 102, column: 2, scope: !6490)
!6501 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6465, file: !6465, line: 96, type: !6491, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6502)
!6502 = !{!6503, !6504, !6505, !6506}
!6503 = !DILocalVariable(name: "ptr", arg: 1, scope: !6501, file: !6465, line: 96, type: !6372)
!6504 = !DILocalVariable(name: "size", arg: 2, scope: !6501, file: !6465, line: 96, type: !356)
!6505 = !DILocalVariable(name: "nitems", arg: 3, scope: !6501, file: !6465, line: 96, type: !356)
!6506 = !DILocalVariable(name: "stream", arg: 4, scope: !6501, file: !6465, line: 96, type: !6478)
!6507 = !DILocation(line: 0, scope: !6501)
!6508 = !DILocation(line: 107, column: 2, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6501, file: !6465, line: 107, column: 2)
!6510 = !{i64 2155123390}
!6511 = !DILocation(line: 108, column: 9, scope: !6501)
!6512 = !DILocation(line: 108, column: 2, scope: !6501)
!6513 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !550, file: !550, line: 56, type: !6491, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6514)
!6514 = !{!6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522}
!6515 = !DILocalVariable(name: "ptr", arg: 1, scope: !6513, file: !550, line: 56, type: !6372)
!6516 = !DILocalVariable(name: "size", arg: 2, scope: !6513, file: !550, line: 56, type: !356)
!6517 = !DILocalVariable(name: "nitems", arg: 3, scope: !6513, file: !550, line: 57, type: !356)
!6518 = !DILocalVariable(name: "stream", arg: 4, scope: !6513, file: !550, line: 57, type: !6478)
!6519 = !DILocalVariable(name: "i", scope: !6513, file: !550, line: 59, type: !356)
!6520 = !DILocalVariable(name: "j", scope: !6513, file: !550, line: 60, type: !356)
!6521 = !DILocalVariable(name: "p", scope: !6513, file: !550, line: 61, type: !2702)
!6522 = !DILabel(scope: !6513, name: "done", file: !550, line: 82)
!6523 = !DILocation(line: 0, scope: !6513)
!6524 = !DILocation(line: 63, column: 14, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6513, file: !550, line: 63, column: 6)
!6526 = !DILocation(line: 63, column: 24, scope: !6525)
!6527 = !DILocation(line: 72, column: 3, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6513, file: !550, line: 70, column: 5)
!6529 = !DILocation(line: 0, scope: !6528)
!6530 = !DILocation(line: 73, column: 8, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !550, line: 73, column: 8)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !550, line: 72, column: 6)
!6533 = !DILocation(line: 73, column: 29, scope: !6531)
!6534 = !DILocation(line: 73, column: 27, scope: !6531)
!6535 = !DILocation(line: 73, column: 21, scope: !6531)
!6536 = !DILocation(line: 73, column: 33, scope: !6531)
!6537 = !DILocation(line: 73, column: 8, scope: !6532)
!6538 = !DILocation(line: 76, column: 5, scope: !6532)
!6539 = !DILocation(line: 77, column: 14, scope: !6528)
!6540 = !DILocation(line: 77, column: 3, scope: !6532)
!6541 = distinct !{!6541, !6527, !6542}
!6542 = !DILocation(line: 77, column: 17, scope: !6528)
!6543 = !DILocation(line: 79, column: 4, scope: !6528)
!6544 = !DILocation(line: 80, column: 13, scope: !6513)
!6545 = !DILocation(line: 80, column: 2, scope: !6528)
!6546 = distinct !{!6546, !6547, !6548}
!6547 = !DILocation(line: 70, column: 2, scope: !6513)
!6548 = !DILocation(line: 80, column: 16, scope: !6513)
!6549 = !DILocation(line: 82, column: 1, scope: !6513)
!6550 = !DILocation(line: 83, column: 17, scope: !6513)
!6551 = !DILocation(line: 83, column: 2, scope: !6513)
!6552 = !DILocation(line: 84, column: 1, scope: !6513)
!6553 = distinct !DISubprogram(name: "puts", scope: !550, file: !550, line: 106, type: !6554, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6556)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{!103, !150}
!6556 = !{!6557}
!6557 = !DILocalVariable(name: "s", arg: 1, scope: !6553, file: !550, line: 106, type: !150)
!6558 = !DILocation(line: 0, scope: !6553)
!6559 = !DILocation(line: 108, column: 6, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6553, file: !550, line: 108, column: 6)
!6561 = !DILocation(line: 108, column: 23, scope: !6560)
!6562 = !DILocation(line: 108, column: 6, scope: !6553)
!6563 = !DILocation(line: 112, column: 9, scope: !6553)
!6564 = !DILocation(line: 112, column: 29, scope: !6553)
!6565 = !DILocation(line: 112, column: 2, scope: !6553)
!6566 = !DILocation(line: 113, column: 1, scope: !6553)
!6567 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !691, file: !691, line: 368, type: !741, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6568)
!6568 = !{!6569}
!6569 = !DILocalVariable(name: "dev", arg: 1, scope: !6567, file: !691, line: 368, type: !717)
!6570 = !DILocation(line: 0, scope: !6567)
!6571 = !DILocation(line: 370, column: 2, scope: !6567)
!6572 = !DILocation(line: 371, column: 1, scope: !6567)
!6573 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !691, file: !691, line: 243, type: !6574, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6576)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{null, !103, !103, !717}
!6576 = !{!6577, !6578, !6579, !6580, !6582}
!6577 = !DILocalVariable(name: "min", arg: 1, scope: !6573, file: !691, line: 243, type: !103)
!6578 = !DILocalVariable(name: "max", arg: 2, scope: !6573, file: !691, line: 243, type: !103)
!6579 = !DILocalVariable(name: "dev", arg: 3, scope: !6573, file: !691, line: 243, type: !717)
!6580 = !DILocalVariable(name: "data", scope: !6573, file: !691, line: 245, type: !6581)
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!6582 = !DILocalVariable(name: "line", scope: !6573, file: !691, line: 246, type: !103)
!6583 = !DILocation(line: 0, scope: !6573)
!6584 = !DILocation(line: 245, column: 38, scope: !6573)
!6585 = !DILocation(line: 249, column: 24, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !691, line: 249, column: 2)
!6587 = distinct !DILexicalBlock(scope: !6573, file: !691, line: 249, column: 2)
!6588 = !DILocation(line: 249, column: 2, scope: !6587)
!6589 = !DILocation(line: 251, column: 7, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !691, line: 251, column: 7)
!6591 = distinct !DILexicalBlock(scope: !6586, file: !691, line: 249, column: 39)
!6592 = !DILocation(line: 251, column: 7, scope: !6591)
!6593 = !DILocation(line: 253, column: 4, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !691, line: 251, column: 36)
!6595 = !DILocation(line: 256, column: 24, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6594, file: !691, line: 256, column: 8)
!6597 = !DILocation(line: 256, column: 9, scope: !6596)
!6598 = !DILocation(line: 256, column: 8, scope: !6594)
!6599 = !DILocation(line: 260, column: 43, scope: !6594)
!6600 = !DILocation(line: 260, column: 4, scope: !6594)
!6601 = !DILocation(line: 261, column: 3, scope: !6594)
!6602 = !DILocation(line: 249, column: 35, scope: !6586)
!6603 = distinct !{!6603, !6588, !6604}
!6604 = !DILocation(line: 262, column: 2, scope: !6587)
!6605 = !DILocation(line: 263, column: 1, scope: !6573)
!6606 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !691, file: !691, line: 158, type: !114, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "line", arg: 1, scope: !6606, file: !691, line: 158, type: !103)
!6609 = !DILocation(line: 0, scope: !6606)
!6610 = !DILocation(line: 170, column: 38, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !691, line: 160, column: 17)
!6612 = distinct !DILexicalBlock(scope: !6606, file: !691, line: 160, column: 6)
!6613 = !DILocation(line: 170, column: 10, scope: !6611)
!6614 = !DILocation(line: 176, column: 1, scope: !6606)
!6615 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !691, file: !691, line: 183, type: !6616, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6618)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{null, !103}
!6618 = !{!6619}
!6619 = !DILocalVariable(name: "line", arg: 1, scope: !6615, file: !691, line: 183, type: !103)
!6620 = !DILocation(line: 0, scope: !6615)
!6621 = !DILocation(line: 195, column: 28, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !691, line: 185, column: 17)
!6623 = distinct !DILexicalBlock(scope: !6615, file: !691, line: 185, column: 6)
!6624 = !DILocation(line: 195, column: 3, scope: !6622)
!6625 = !DILocation(line: 200, column: 1, scope: !6615)
!6626 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6627, file: !6627, line: 910, type: !5062, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6628)
!6627 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6628 = !{!6629}
!6629 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6626, file: !6627, line: 910, type: !106)
!6630 = !DILocation(line: 0, scope: !6626)
!6631 = !DILocation(line: 912, column: 3, scope: !6626)
!6632 = !DILocation(line: 913, column: 1, scope: !6626)
!6633 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6627, file: !6627, line: 834, type: !5979, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6634)
!6634 = !{!6635}
!6635 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6633, file: !6627, line: 834, type: !106)
!6636 = !DILocation(line: 0, scope: !6633)
!6637 = !DILocation(line: 836, column: 11, scope: !6633)
!6638 = !DILocation(line: 836, column: 40, scope: !6633)
!6639 = !DILocation(line: 836, column: 3, scope: !6633)
!6640 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !691, file: !691, line: 304, type: !741, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6641)
!6641 = !{!6642}
!6642 = !DILocalVariable(name: "dev", arg: 1, scope: !6640, file: !691, line: 304, type: !717)
!6643 = !DILocation(line: 0, scope: !6640)
!6644 = !DILocation(line: 306, column: 2, scope: !6640)
!6645 = !DILocation(line: 307, column: 1, scope: !6640)
!6646 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !691, file: !691, line: 299, type: !741, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6647)
!6647 = !{!6648}
!6648 = !DILocalVariable(name: "dev", arg: 1, scope: !6646, file: !691, line: 299, type: !717)
!6649 = !DILocation(line: 0, scope: !6646)
!6650 = !DILocation(line: 301, column: 2, scope: !6646)
!6651 = !DILocation(line: 302, column: 1, scope: !6646)
!6652 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !691, file: !691, line: 294, type: !741, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6653)
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "dev", arg: 1, scope: !6652, file: !691, line: 294, type: !717)
!6655 = !DILocation(line: 0, scope: !6652)
!6656 = !DILocation(line: 296, column: 2, scope: !6652)
!6657 = !DILocation(line: 297, column: 1, scope: !6652)
!6658 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !691, file: !691, line: 397, type: !741, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6659)
!6659 = !{!6660}
!6660 = !DILocalVariable(name: "dev", arg: 1, scope: !6658, file: !691, line: 397, type: !717)
!6661 = !DILocation(line: 0, scope: !6658)
!6662 = !DILocation(line: 399, column: 2, scope: !6658)
!6663 = !DILocation(line: 400, column: 1, scope: !6658)
!6664 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !691, file: !691, line: 392, type: !741, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6665)
!6665 = !{!6666}
!6666 = !DILocalVariable(name: "dev", arg: 1, scope: !6664, file: !691, line: 392, type: !717)
!6667 = !DILocation(line: 0, scope: !6664)
!6668 = !DILocation(line: 394, column: 2, scope: !6664)
!6669 = !DILocation(line: 395, column: 1, scope: !6664)
!6670 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !691, file: !691, line: 289, type: !741, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6671)
!6671 = !{!6672}
!6672 = !DILocalVariable(name: "dev", arg: 1, scope: !6670, file: !691, line: 289, type: !717)
!6673 = !DILocation(line: 0, scope: !6670)
!6674 = !DILocation(line: 291, column: 2, scope: !6670)
!6675 = !DILocation(line: 292, column: 1, scope: !6670)
!6676 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !691, file: !691, line: 387, type: !741, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6677)
!6677 = !{!6678}
!6678 = !DILocalVariable(name: "dev", arg: 1, scope: !6676, file: !691, line: 387, type: !717)
!6679 = !DILocation(line: 0, scope: !6676)
!6680 = !DILocation(line: 389, column: 2, scope: !6676)
!6681 = !DILocation(line: 390, column: 1, scope: !6676)
!6682 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !691, file: !691, line: 382, type: !741, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6683)
!6683 = !{!6684}
!6684 = !DILocalVariable(name: "dev", arg: 1, scope: !6682, file: !691, line: 382, type: !717)
!6685 = !DILocation(line: 0, scope: !6682)
!6686 = !DILocation(line: 384, column: 2, scope: !6682)
!6687 = !DILocation(line: 385, column: 1, scope: !6682)
!6688 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !691, file: !691, line: 373, type: !741, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6689)
!6689 = !{!6690}
!6690 = !DILocalVariable(name: "dev", arg: 1, scope: !6688, file: !691, line: 373, type: !717)
!6691 = !DILocation(line: 0, scope: !6688)
!6692 = !DILocation(line: 375, column: 2, scope: !6688)
!6693 = !DILocation(line: 376, column: 1, scope: !6688)
!6694 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !691, file: !691, line: 284, type: !741, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6695)
!6695 = !{!6696}
!6696 = !DILocalVariable(name: "dev", arg: 1, scope: !6694, file: !691, line: 284, type: !717)
!6697 = !DILocation(line: 0, scope: !6694)
!6698 = !DILocation(line: 286, column: 2, scope: !6694)
!6699 = !DILocation(line: 287, column: 1, scope: !6694)
!6700 = distinct !DISubprogram(name: "stm32_exti_init", scope: !691, file: !691, line: 416, type: !715, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6701)
!6701 = !{!6702}
!6702 = !DILocalVariable(name: "dev", arg: 1, scope: !6700, file: !691, line: 416, type: !717)
!6703 = !DILocation(line: 0, scope: !6700)
!6704 = !DILocation(line: 418, column: 2, scope: !6700)
!6705 = !DILocation(line: 420, column: 2, scope: !6700)
!6706 = !DILocation(line: 0, scope: !740)
!6707 = !DILocation(line: 493, column: 2, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !740, file: !691, line: 493, column: 2)
!6709 = !DILocation(line: 497, column: 2, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !740, file: !691, line: 497, column: 2)
!6711 = !DILocation(line: 507, column: 2, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !740, file: !691, line: 507, column: 2)
!6713 = !DILocation(line: 512, column: 2, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !740, file: !691, line: 512, column: 2)
!6715 = !DILocation(line: 516, column: 2, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !740, file: !691, line: 516, column: 2)
!6717 = !DILocation(line: 523, column: 2, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !740, file: !691, line: 523, column: 2)
!6719 = !DILocation(line: 527, column: 2, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !740, file: !691, line: 527, column: 2)
!6721 = !DILocation(line: 581, column: 2, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !740, file: !691, line: 581, column: 2)
!6723 = !DILocation(line: 586, column: 2, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !740, file: !691, line: 586, column: 2)
!6725 = !DILocation(line: 591, column: 2, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !740, file: !691, line: 591, column: 2)
!6727 = !DILocation(line: 595, column: 2, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !740, file: !691, line: 595, column: 2)
!6729 = !DILocation(line: 607, column: 1, scope: !740)
!6730 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !691, file: !691, line: 112, type: !6616, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6731)
!6731 = !{!6732, !6733}
!6732 = !DILocalVariable(name: "line", arg: 1, scope: !6730, file: !691, line: 112, type: !103)
!6733 = !DILocalVariable(name: "irqnum", scope: !6730, file: !691, line: 114, type: !103)
!6734 = !DILocation(line: 0, scope: !6730)
!6735 = !DILocation(line: 121, column: 11, scope: !6730)
!6736 = !DILocation(line: 130, column: 26, scope: !6730)
!6737 = !DILocation(line: 130, column: 2, scope: !6730)
!6738 = !DILocation(line: 134, column: 2, scope: !6730)
!6739 = !DILocation(line: 135, column: 1, scope: !6730)
!6740 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6627, file: !6627, line: 268, type: !5062, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6741)
!6741 = !{!6742}
!6742 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6740, file: !6627, line: 268, type: !106)
!6743 = !DILocation(line: 0, scope: !6740)
!6744 = !DILocation(line: 270, column: 3, scope: !6740)
!6745 = !DILocation(line: 271, column: 1, scope: !6740)
!6746 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !691, file: !691, line: 137, type: !6616, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6747)
!6747 = !{!6748}
!6748 = !DILocalVariable(name: "line", arg: 1, scope: !6746, file: !691, line: 137, type: !103)
!6749 = !DILocation(line: 0, scope: !6746)
!6750 = !DILocation(line: 141, column: 11, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6746, file: !691, line: 141, column: 6)
!6752 = !DILocation(line: 141, column: 6, scope: !6746)
!6753 = !DILocation(line: 145, column: 28, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6751, file: !691, line: 141, column: 17)
!6755 = !DILocation(line: 145, column: 3, scope: !6754)
!6756 = !DILocation(line: 147, column: 2, scope: !6754)
!6757 = !DILocation(line: 151, column: 1, scope: !6746)
!6758 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6627, file: !6627, line: 309, type: !5062, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6759)
!6759 = !{!6760}
!6760 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6758, file: !6627, line: 309, type: !106)
!6761 = !DILocation(line: 0, scope: !6758)
!6762 = !DILocation(line: 311, column: 3, scope: !6758)
!6763 = !DILocation(line: 312, column: 1, scope: !6758)
!6764 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !691, file: !691, line: 202, type: !6765, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6767)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !103, !103}
!6767 = !{!6768, !6769}
!6768 = !DILocalVariable(name: "line", arg: 1, scope: !6764, file: !691, line: 202, type: !103)
!6769 = !DILocalVariable(name: "trigger", arg: 2, scope: !6764, file: !691, line: 202, type: !103)
!6770 = !DILocation(line: 0, scope: !6764)
!6771 = !DILocation(line: 211, column: 2, scope: !6764)
!6772 = !DILocation(line: 213, column: 36, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6764, file: !691, line: 211, column: 19)
!6774 = !DILocation(line: 213, column: 3, scope: !6773)
!6775 = !DILocation(line: 214, column: 3, scope: !6773)
!6776 = !DILocation(line: 215, column: 3, scope: !6773)
!6777 = !DILocation(line: 217, column: 35, scope: !6773)
!6778 = !DILocation(line: 217, column: 3, scope: !6773)
!6779 = !DILocation(line: 218, column: 3, scope: !6773)
!6780 = !DILocation(line: 219, column: 3, scope: !6773)
!6781 = !DILocation(line: 221, column: 36, scope: !6773)
!6782 = !DILocation(line: 221, column: 3, scope: !6773)
!6783 = !DILocation(line: 222, column: 3, scope: !6773)
!6784 = !DILocation(line: 223, column: 3, scope: !6773)
!6785 = !DILocation(line: 225, column: 35, scope: !6773)
!6786 = !DILocation(line: 225, column: 3, scope: !6773)
!6787 = !DILocation(line: 226, column: 3, scope: !6773)
!6788 = !DILocation(line: 227, column: 3, scope: !6773)
!6789 = !DILocation(line: 232, column: 1, scope: !6764)
!6790 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6627, file: !6627, line: 573, type: !5062, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6791)
!6791 = !{!6792}
!6792 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6790, file: !6627, line: 573, type: !106)
!6793 = !DILocation(line: 0, scope: !6790)
!6794 = !DILocation(line: 575, column: 3, scope: !6790)
!6795 = !DILocation(line: 577, column: 1, scope: !6790)
!6796 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6627, file: !6627, line: 703, type: !5062, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6797)
!6797 = !{!6798}
!6798 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6796, file: !6627, line: 703, type: !106)
!6799 = !DILocation(line: 0, scope: !6796)
!6800 = !DILocation(line: 705, column: 3, scope: !6796)
!6801 = !DILocation(line: 706, column: 1, scope: !6796)
!6802 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6627, file: !6627, line: 529, type: !5062, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6803)
!6803 = !{!6804}
!6804 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6802, file: !6627, line: 529, type: !106)
!6805 = !DILocation(line: 0, scope: !6802)
!6806 = !DILocation(line: 531, column: 3, scope: !6802)
!6807 = !DILocation(line: 533, column: 1, scope: !6802)
!6808 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6627, file: !6627, line: 661, type: !5062, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6809)
!6809 = !{!6810}
!6810 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6808, file: !6627, line: 661, type: !106)
!6811 = !DILocation(line: 0, scope: !6808)
!6812 = !DILocation(line: 663, column: 3, scope: !6808)
!6813 = !DILocation(line: 664, column: 1, scope: !6808)
!6814 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !691, file: !691, line: 433, type: !6815, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6817)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{!103, !103, !728, !102}
!6817 = !{!6818, !6819, !6820, !6821, !6823}
!6818 = !DILocalVariable(name: "line", arg: 1, scope: !6814, file: !691, line: 433, type: !103)
!6819 = !DILocalVariable(name: "cb", arg: 2, scope: !6814, file: !691, line: 433, type: !728)
!6820 = !DILocalVariable(name: "arg", arg: 3, scope: !6814, file: !691, line: 433, type: !102)
!6821 = !DILocalVariable(name: "dev", scope: !6814, file: !691, line: 435, type: !6822)
!6822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!6823 = !DILocalVariable(name: "data", scope: !6814, file: !691, line: 436, type: !6581)
!6824 = !DILocation(line: 0, scope: !6814)
!6825 = !DILocation(line: 438, column: 21, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6814, file: !691, line: 438, column: 6)
!6827 = !DILocation(line: 438, column: 6, scope: !6826)
!6828 = !DILocation(line: 438, column: 6, scope: !6814)
!6829 = !DILocation(line: 442, column: 20, scope: !6814)
!6830 = !DILocation(line: 443, column: 17, scope: !6814)
!6831 = !DILocation(line: 443, column: 22, scope: !6814)
!6832 = !DILocation(line: 445, column: 2, scope: !6814)
!6833 = !DILocation(line: 446, column: 1, scope: !6814)
!6834 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !691, file: !691, line: 448, type: !6616, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !578, retainedNodes: !6835)
!6835 = !{!6836, !6837, !6838}
!6836 = !DILocalVariable(name: "line", arg: 1, scope: !6834, file: !691, line: 448, type: !103)
!6837 = !DILocalVariable(name: "dev", scope: !6834, file: !691, line: 450, type: !6822)
!6838 = !DILocalVariable(name: "data", scope: !6834, file: !691, line: 451, type: !6581)
!6839 = !DILocation(line: 0, scope: !6834)
!6840 = !DILocation(line: 453, column: 17, scope: !6834)
!6841 = !DILocation(line: 453, column: 20, scope: !6834)
!6842 = !DILocation(line: 454, column: 17, scope: !6834)
!6843 = !DILocation(line: 454, column: 22, scope: !6834)
!6844 = !DILocation(line: 455, column: 1, scope: !6834)
!6845 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !833, file: !833, line: 183, type: !871, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6846)
!6846 = !{!6847, !6848, !6849, !6850, !6851}
!6847 = !DILocalVariable(name: "dev", arg: 1, scope: !6845, file: !833, line: 183, type: !862)
!6848 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6845, file: !833, line: 184, type: !229)
!6849 = !DILocalVariable(name: "pclken", scope: !6845, file: !833, line: 186, type: !825)
!6850 = !DILocalVariable(name: "reg", scope: !6845, file: !833, line: 187, type: !1410)
!6851 = !DILocalVariable(name: "reg_val", scope: !6845, file: !833, line: 188, type: !106)
!6852 = !DILocation(line: 0, scope: !6845)
!6853 = !DILocation(line: 192, column: 6, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6845, file: !833, line: 192, column: 6)
!6855 = !DILocation(line: 192, column: 6, scope: !6845)
!6856 = !DILocation(line: 197, column: 52, scope: !6845)
!6857 = !DILocation(line: 197, column: 8, scope: !6845)
!6858 = !DILocation(line: 198, column: 12, scope: !6845)
!6859 = !DILocation(line: 199, column: 21, scope: !6845)
!6860 = !DILocation(line: 199, column: 10, scope: !6845)
!6861 = !DILocation(line: 200, column: 7, scope: !6845)
!6862 = !DILocation(line: 202, column: 2, scope: !6845)
!6863 = !DILocation(line: 203, column: 1, scope: !6845)
!6864 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !833, file: !833, line: 205, type: !871, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6865)
!6865 = !{!6866, !6867, !6868, !6869, !6870}
!6866 = !DILocalVariable(name: "dev", arg: 1, scope: !6864, file: !833, line: 205, type: !862)
!6867 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6864, file: !833, line: 206, type: !229)
!6868 = !DILocalVariable(name: "pclken", scope: !6864, file: !833, line: 208, type: !825)
!6869 = !DILocalVariable(name: "reg", scope: !6864, file: !833, line: 209, type: !1410)
!6870 = !DILocalVariable(name: "reg_val", scope: !6864, file: !833, line: 210, type: !106)
!6871 = !DILocation(line: 0, scope: !6864)
!6872 = !DILocation(line: 214, column: 6, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6864, file: !833, line: 214, column: 6)
!6874 = !DILocation(line: 214, column: 6, scope: !6864)
!6875 = !DILocation(line: 219, column: 52, scope: !6864)
!6876 = !DILocation(line: 219, column: 8, scope: !6864)
!6877 = !DILocation(line: 220, column: 12, scope: !6864)
!6878 = !DILocation(line: 221, column: 22, scope: !6864)
!6879 = !DILocation(line: 221, column: 13, scope: !6864)
!6880 = !DILocation(line: 221, column: 10, scope: !6864)
!6881 = !DILocation(line: 222, column: 7, scope: !6864)
!6882 = !DILocation(line: 224, column: 2, scope: !6864)
!6883 = !DILocation(line: 225, column: 1, scope: !6864)
!6884 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !833, file: !833, line: 262, type: !886, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6885)
!6885 = !{!6886, !6887, !6888, !6889, !6890, !6891, !6892, !6893}
!6886 = !DILocalVariable(name: "clock", arg: 1, scope: !6884, file: !833, line: 262, type: !862)
!6887 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6884, file: !833, line: 263, type: !229)
!6888 = !DILocalVariable(name: "rate", arg: 3, scope: !6884, file: !833, line: 264, type: !269)
!6889 = !DILocalVariable(name: "pclken", scope: !6884, file: !833, line: 266, type: !825)
!6890 = !DILocalVariable(name: "ahb_clock", scope: !6884, file: !833, line: 273, type: !106)
!6891 = !DILocalVariable(name: "apb1_clock", scope: !6884, file: !833, line: 274, type: !106)
!6892 = !DILocalVariable(name: "apb2_clock", scope: !6884, file: !833, line: 276, type: !106)
!6893 = !DILocalVariable(name: "ahb3_clock", scope: !6884, file: !833, line: 286, type: !106)
!6894 = !DILocation(line: 0, scope: !6884)
!6895 = !DILocation(line: 273, column: 23, scope: !6884)
!6896 = !DILocation(line: 299, column: 18, scope: !6884)
!6897 = !DILocation(line: 299, column: 2, scope: !6884)
!6898 = !DILocation(line: 274, column: 24, scope: !6884)
!6899 = !DILocation(line: 319, column: 3, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6884, file: !833, line: 299, column: 23)
!6901 = !DILocation(line: 276, column: 24, scope: !6884)
!6902 = !DILocation(line: 323, column: 3, scope: !6900)
!6903 = !DILocation(line: 346, column: 33, scope: !6900)
!6904 = !DILocation(line: 346, column: 11, scope: !6900)
!6905 = !DILocation(line: 350, column: 3, scope: !6900)
!6906 = !DILocation(line: 354, column: 33, scope: !6900)
!6907 = !DILocation(line: 354, column: 11, scope: !6900)
!6908 = !DILocation(line: 358, column: 3, scope: !6900)
!6909 = !DILocation(line: 374, column: 3, scope: !6900)
!6910 = !DILocation(line: 379, column: 3, scope: !6900)
!6911 = !DILocation(line: 0, scope: !6900)
!6912 = !DILocation(line: 396, column: 1, scope: !6884)
!6913 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !833, file: !833, line: 227, type: !901, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6914)
!6914 = !{!6915, !6916, !6917, !6918, !6919, !6920, !6921, !6922}
!6915 = !DILocalVariable(name: "dev", arg: 1, scope: !6913, file: !833, line: 227, type: !862)
!6916 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6913, file: !833, line: 228, type: !229)
!6917 = !DILocalVariable(name: "data", arg: 3, scope: !6913, file: !833, line: 229, type: !102)
!6918 = !DILocalVariable(name: "pclken", scope: !6913, file: !833, line: 233, type: !825)
!6919 = !DILocalVariable(name: "reg", scope: !6913, file: !833, line: 234, type: !1410)
!6920 = !DILocalVariable(name: "reg_val", scope: !6913, file: !833, line: 235, type: !106)
!6921 = !DILocalVariable(name: "dt_val", scope: !6913, file: !833, line: 235, type: !106)
!6922 = !DILocalVariable(name: "err", scope: !6913, file: !833, line: 236, type: !103)
!6923 = !DILocation(line: 0, scope: !6913)
!6924 = !DILocation(line: 241, column: 30, scope: !6913)
!6925 = !DILocation(line: 241, column: 8, scope: !6913)
!6926 = !DILocation(line: 242, column: 10, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6913, file: !833, line: 242, column: 6)
!6928 = !DILocation(line: 242, column: 6, scope: !6913)
!6929 = !DILocation(line: 247, column: 11, scope: !6913)
!6930 = !DILocation(line: 248, column: 6, scope: !6913)
!6931 = !DILocation(line: 247, column: 44, scope: !6913)
!6932 = !DILocation(line: 250, column: 6, scope: !6913)
!6933 = !DILocation(line: 249, column: 52, scope: !6913)
!6934 = !DILocation(line: 249, column: 8, scope: !6913)
!6935 = !DILocation(line: 251, column: 12, scope: !6913)
!6936 = !DILocation(line: 252, column: 10, scope: !6913)
!6937 = !DILocation(line: 253, column: 7, scope: !6913)
!6938 = !DILocation(line: 255, column: 2, scope: !6913)
!6939 = !DILocation(line: 260, column: 1, scope: !6913)
!6940 = distinct !DISubprogram(name: "enabled_clock", scope: !833, file: !833, line: 100, type: !6941, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6943)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!103, !106}
!6943 = !{!6944, !6945}
!6944 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6940, file: !833, line: 100, type: !106)
!6945 = !DILocalVariable(name: "r", scope: !6940, file: !833, line: 102, type: !103)
!6946 = !DILocation(line: 0, scope: !6940)
!6947 = !DILocation(line: 104, column: 2, scope: !6940)
!6948 = !DILocation(line: 180, column: 2, scope: !6940)
!6949 = !DILocation(line: 181, column: 1, scope: !6940)
!6950 = distinct !DISubprogram(name: "get_bus_clock", scope: !833, file: !833, line: 79, type: !6951, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6953)
!6951 = !DISubroutineType(types: !6952)
!6952 = !{!106, !106, !106}
!6953 = !{!6954, !6955}
!6954 = !DILocalVariable(name: "clock", arg: 1, scope: !6950, file: !833, line: 79, type: !106)
!6955 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6950, file: !833, line: 79, type: !106)
!6956 = !DILocation(line: 0, scope: !6950)
!6957 = !DILocation(line: 81, column: 15, scope: !6950)
!6958 = !DILocation(line: 81, column: 2, scope: !6950)
!6959 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !833, file: !833, line: 68, type: !6960, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6962)
!6960 = !DISubroutineType(types: !6961)
!6961 = !{!106, !106, !103, !103, !103}
!6962 = !{!6963, !6964, !6965, !6966}
!6963 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6959, file: !833, line: 68, type: !106)
!6964 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6959, file: !833, line: 69, type: !103)
!6965 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6959, file: !833, line: 70, type: !103)
!6966 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6959, file: !833, line: 71, type: !103)
!6967 = !DILocation(line: 0, scope: !6959)
!6968 = !DILocation(line: 75, column: 22, scope: !6959)
!6969 = !DILocation(line: 76, column: 13, scope: !6959)
!6970 = !DILocation(line: 75, column: 34, scope: !6959)
!6971 = !DILocation(line: 75, column: 2, scope: !6959)
!6972 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !833, file: !833, line: 641, type: !860, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !6973)
!6973 = !{!6974, !6975, !6976}
!6974 = !DILocalVariable(name: "dev", arg: 1, scope: !6972, file: !833, line: 641, type: !862)
!6975 = !DILocalVariable(name: "old_flash_freq", scope: !6972, file: !833, line: 664, type: !106)
!6976 = !DILocalVariable(name: "new_flash_freq", scope: !6972, file: !833, line: 665, type: !106)
!6977 = !DILocation(line: 0, scope: !6972)
!6978 = !DILocation(line: 646, column: 2, scope: !6972)
!6979 = !DILocation(line: 667, column: 19, scope: !6972)
!6980 = !DILocation(line: 674, column: 21, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6972, file: !833, line: 674, column: 6)
!6982 = !DILocation(line: 674, column: 6, scope: !6972)
!6983 = !DILocation(line: 675, column: 3, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6981, file: !833, line: 674, column: 59)
!6985 = !DILocation(line: 676, column: 2, scope: !6984)
!6986 = !DILocation(line: 680, column: 2, scope: !6972)
!6987 = !DILocation(line: 683, column: 2, scope: !6972)
!6988 = !DILocation(line: 690, column: 3, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !833, line: 689, column: 9)
!6990 = distinct !DILexicalBlock(scope: !6972, file: !833, line: 685, column: 6)
!6991 = !DILocation(line: 695, column: 2, scope: !6972)
!6992 = !DILocation(line: 696, column: 2, scope: !6972)
!6993 = !DILocation(line: 696, column: 9, scope: !6972)
!6994 = !DILocation(line: 696, column: 34, scope: !6972)
!6995 = distinct !{!6995, !6992, !6996}
!6996 = !DILocation(line: 697, column: 2, scope: !6972)
!6997 = !DILocation(line: 720, column: 21, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6972, file: !833, line: 720, column: 6)
!6999 = !DILocation(line: 720, column: 6, scope: !6972)
!7000 = !DILocation(line: 721, column: 3, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6998, file: !833, line: 720, column: 60)
!7002 = !DILocation(line: 722, column: 2, scope: !7001)
!7003 = !DILocation(line: 725, column: 18, scope: !6972)
!7004 = !DILocation(line: 728, column: 2, scope: !6972)
!7005 = !DILocation(line: 730, column: 2, scope: !6972)
!7006 = !DILocation(line: 745, column: 2, scope: !6972)
!7007 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7008, file: !7008, line: 3275, type: !4808, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7008 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7009 = !DILocation(line: 3277, column: 21, scope: !7007)
!7010 = !DILocation(line: 3277, column: 3, scope: !7007)
!7011 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !833, file: !833, line: 507, type: !2917, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7012 = !DILocation(line: 516, column: 4, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !833, line: 515, column: 10)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !833, line: 513, column: 7)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !833, line: 510, column: 37)
!7016 = distinct !DILexicalBlock(scope: !7011, file: !833, line: 510, column: 6)
!7017 = !DILocation(line: 526, column: 3, scope: !7015)
!7018 = !DILocation(line: 527, column: 3, scope: !7015)
!7019 = !DILocation(line: 527, column: 10, scope: !7015)
!7020 = !DILocation(line: 527, column: 31, scope: !7015)
!7021 = distinct !{!7021, !7018, !7022}
!7022 = !DILocation(line: 529, column: 3, scope: !7015)
!7023 = !DILocation(line: 583, column: 3, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !833, line: 577, column: 37)
!7025 = distinct !DILexicalBlock(scope: !7011, file: !833, line: 577, column: 6)
!7026 = !DILocation(line: 584, column: 3, scope: !7024)
!7027 = !DILocation(line: 584, column: 10, scope: !7024)
!7028 = !DILocation(line: 584, column: 31, scope: !7024)
!7029 = distinct !{!7029, !7026, !7030}
!7030 = !DILocation(line: 585, column: 3, scope: !7024)
!7031 = !DILocation(line: 627, column: 1, scope: !7011)
!7032 = distinct !DISubprogram(name: "set_up_plls", scope: !833, file: !833, line: 448, type: !2917, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7033 = !DILocation(line: 460, column: 6, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7032, file: !833, line: 460, column: 6)
!7035 = !DILocation(line: 460, column: 31, scope: !7034)
!7036 = !DILocation(line: 460, column: 6, scope: !7032)
!7037 = !DILocation(line: 461, column: 3, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !833, line: 460, column: 67)
!7039 = !DILocation(line: 462, column: 3, scope: !7038)
!7040 = !DILocation(line: 463, column: 2, scope: !7038)
!7041 = !DILocation(line: 464, column: 2, scope: !7032)
!7042 = !DILocation(line: 488, column: 2, scope: !7032)
!7043 = !DILocation(line: 492, column: 2, scope: !7032)
!7044 = !DILocation(line: 496, column: 2, scope: !7032)
!7045 = !DILocation(line: 499, column: 2, scope: !7032)
!7046 = !DILocation(line: 500, column: 2, scope: !7032)
!7047 = !DILocation(line: 500, column: 9, scope: !7032)
!7048 = !DILocation(line: 500, column: 30, scope: !7032)
!7049 = distinct !{!7049, !7046, !7050}
!7050 = !DILocation(line: 502, column: 2, scope: !7032)
!7051 = !DILocation(line: 505, column: 1, scope: !7032)
!7052 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7008, file: !7008, line: 3224, type: !5062, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !7053)
!7053 = !{!7054}
!7054 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7052, file: !7008, line: 3224, type: !106)
!7055 = !DILocation(line: 0, scope: !7052)
!7056 = !DILocation(line: 3226, column: 3, scope: !7052)
!7057 = !DILocation(line: 3227, column: 1, scope: !7052)
!7058 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7008, file: !7008, line: 3188, type: !5062, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !7059)
!7059 = !{!7060}
!7060 = !DILocalVariable(name: "Source", arg: 1, scope: !7058, file: !7008, line: 3188, type: !106)
!7061 = !DILocation(line: 0, scope: !7058)
!7062 = !DILocation(line: 3190, column: 3, scope: !7058)
!7063 = !DILocation(line: 3191, column: 1, scope: !7058)
!7064 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7008, file: !7008, line: 3204, type: !4808, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7065 = !DILocation(line: 3206, column: 21, scope: !7064)
!7066 = !DILocation(line: 3206, column: 3, scope: !7064)
!7067 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7008, file: !7008, line: 3240, type: !5062, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !7068)
!7068 = !{!7069}
!7069 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7067, file: !7008, line: 3240, type: !106)
!7070 = !DILocation(line: 0, scope: !7067)
!7071 = !DILocation(line: 3242, column: 3, scope: !7067)
!7072 = !DILocation(line: 3243, column: 1, scope: !7067)
!7073 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7008, file: !7008, line: 3256, type: !5062, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !7074)
!7074 = !{!7075}
!7075 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7073, file: !7008, line: 3256, type: !106)
!7076 = !DILocation(line: 0, scope: !7073)
!7077 = !DILocation(line: 3258, column: 3, scope: !7073)
!7078 = !DILocation(line: 3259, column: 1, scope: !7073)
!7079 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !833, file: !833, line: 409, type: !2917, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7080 = !DILocation(line: 412, column: 6, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7079, file: !833, line: 412, column: 6)
!7082 = !DILocation(line: 412, column: 27, scope: !7081)
!7083 = !DILocation(line: 412, column: 6, scope: !7079)
!7084 = !DILocation(line: 414, column: 3, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7081, file: !833, line: 412, column: 33)
!7086 = !DILocation(line: 415, column: 3, scope: !7085)
!7087 = !DILocation(line: 415, column: 10, scope: !7085)
!7088 = !DILocation(line: 415, column: 31, scope: !7085)
!7089 = distinct !{!7089, !7086, !7090}
!7090 = !DILocation(line: 417, column: 3, scope: !7085)
!7091 = !DILocation(line: 421, column: 2, scope: !7079)
!7092 = !DILocation(line: 422, column: 2, scope: !7079)
!7093 = !DILocation(line: 422, column: 9, scope: !7079)
!7094 = !DILocation(line: 422, column: 34, scope: !7079)
!7095 = distinct !{!7095, !7092, !7096}
!7096 = !DILocation(line: 423, column: 2, scope: !7079)
!7097 = !DILocation(line: 424, column: 1, scope: !7079)
!7098 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7008, file: !7008, line: 4195, type: !2917, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7099 = !DILocation(line: 4197, column: 3, scope: !7098)
!7100 = !DILocation(line: 4198, column: 1, scope: !7098)
!7101 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7008, file: !7008, line: 4184, type: !2917, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7102 = !DILocation(line: 4186, column: 3, scope: !7101)
!7103 = !DILocation(line: 4187, column: 1, scope: !7101)
!7104 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7008, file: !7008, line: 4205, type: !4808, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7105 = !DILocation(line: 4207, column: 11, scope: !7104)
!7106 = !DILocation(line: 4207, column: 44, scope: !7104)
!7107 = !DILocation(line: 4207, column: 3, scope: !7104)
!7108 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7008, file: !7008, line: 3007, type: !4808, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7109 = !DILocation(line: 3009, column: 11, scope: !7108)
!7110 = !DILocation(line: 3009, column: 44, scope: !7108)
!7111 = !DILocation(line: 3009, column: 3, scope: !7108)
!7112 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7008, file: !7008, line: 2987, type: !2917, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7113 = !DILocation(line: 2989, column: 3, scope: !7112)
!7114 = !DILocation(line: 2990, column: 1, scope: !7112)
!7115 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7008, file: !7008, line: 2939, type: !2917, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7116 = !DILocation(line: 2941, column: 3, scope: !7115)
!7117 = !DILocation(line: 2942, column: 1, scope: !7115)
!7118 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7008, file: !7008, line: 2949, type: !2917, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7119 = !DILocation(line: 2951, column: 3, scope: !7118)
!7120 = !DILocation(line: 2952, column: 1, scope: !7118)
!7121 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7008, file: !7008, line: 2969, type: !4808, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7122 = !DILocation(line: 2971, column: 11, scope: !7121)
!7123 = !DILocation(line: 2971, column: 44, scope: !7121)
!7124 = !DILocation(line: 2971, column: 3, scope: !7121)
!7125 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7008, file: !7008, line: 3143, type: !2917, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7126 = !DILocation(line: 3145, column: 3, scope: !7125)
!7127 = !DILocation(line: 3146, column: 1, scope: !7125)
!7128 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7008, file: !7008, line: 3163, type: !4808, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !478)
!7129 = !DILocation(line: 3165, column: 11, scope: !7128)
!7130 = !DILocation(line: 3165, column: 46, scope: !7128)
!7131 = !DILocation(line: 3165, column: 3, scope: !7128)
!7132 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7133, file: !7133, line: 40, type: !4808, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !478)
!7133 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7134 = !DILocation(line: 45, column: 3, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !7133, line: 44, column: 44)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !7133, line: 44, column: 13)
!7137 = distinct !DILexicalBlock(scope: !7132, file: !7133, line: 42, column: 6)
!7138 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7133, file: !7133, line: 56, type: !2917, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !478)
!7139 = !DILocation(line: 58, column: 2, scope: !7138)
!7140 = !DILocation(line: 62, column: 1, scope: !7138)
!7141 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7008, file: !7008, line: 4304, type: !7142, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7144)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{null, !106, !106, !106, !106}
!7144 = !{!7145, !7146, !7147, !7148}
!7145 = !DILocalVariable(name: "Source", arg: 1, scope: !7141, file: !7008, line: 4304, type: !106)
!7146 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7141, file: !7008, line: 4304, type: !106)
!7147 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7141, file: !7008, line: 4304, type: !106)
!7148 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7141, file: !7008, line: 4304, type: !106)
!7149 = !DILocation(line: 0, scope: !7141)
!7150 = !DILocation(line: 4306, column: 3, scope: !7141)
!7151 = !DILocation(line: 4308, column: 3, scope: !7141)
!7152 = !DILocation(line: 4310, column: 3, scope: !7141)
!7153 = !DILocation(line: 4312, column: 1, scope: !7141)
!7154 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7133, file: !7133, line: 69, type: !2917, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !478)
!7155 = !DILocation(line: 72, column: 2, scope: !7154)
!7156 = !DILocation(line: 73, column: 1, scope: !7154)
!7157 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7158, file: !7158, line: 1185, type: !5062, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !7159)
!7158 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7159 = !{!7160, !7161}
!7160 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7157, file: !7158, line: 1185, type: !106)
!7161 = !DILocalVariable(name: "tmpreg", scope: !7157, file: !7158, line: 1187, type: !127)
!7162 = !DILocation(line: 0, scope: !7157)
!7163 = !DILocation(line: 1187, column: 3, scope: !7157)
!7164 = !DILocation(line: 1187, column: 17, scope: !7157)
!7165 = !DILocation(line: 1188, column: 3, scope: !7157)
!7166 = !DILocation(line: 1190, column: 12, scope: !7157)
!7167 = !DILocation(line: 1190, column: 10, scope: !7157)
!7168 = !DILocation(line: 1191, column: 9, scope: !7157)
!7169 = !DILocation(line: 1192, column: 1, scope: !7157)
!7170 = distinct !DISubprogram(name: "uart_console_init", scope: !962, file: !962, line: 588, type: !939, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7171)
!7171 = !{!7172}
!7172 = !DILocalVariable(name: "arg", arg: 1, scope: !7170, file: !962, line: 588, type: !917)
!7173 = !DILocation(line: 0, scope: !7170)
!7174 = !DILocation(line: 593, column: 7, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7170, file: !962, line: 593, column: 6)
!7176 = !DILocation(line: 593, column: 6, scope: !7170)
!7177 = !DILocation(line: 597, column: 2, scope: !7170)
!7178 = !DILocation(line: 599, column: 2, scope: !7170)
!7179 = !DILocation(line: 600, column: 1, scope: !7170)
!7180 = distinct !DISubprogram(name: "device_is_ready", scope: !4782, file: !4782, line: 47, type: !7181, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!163, !917}
!7183 = !{!7184}
!7184 = !DILocalVariable(name: "dev", arg: 1, scope: !7180, file: !4782, line: 47, type: !917)
!7185 = !DILocation(line: 0, scope: !7180)
!7186 = !DILocation(line: 55, column: 2, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7180, file: !4782, line: 55, column: 2)
!7188 = !{i64 2155286379}
!7189 = !DILocation(line: 56, column: 9, scope: !7180)
!7190 = !DILocation(line: 56, column: 2, scope: !7180)
!7191 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !962, file: !962, line: 573, type: !2917, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !478)
!7192 = !DILocation(line: 576, column: 2, scope: !7191)
!7193 = !DILocation(line: 579, column: 2, scope: !7191)
!7194 = !DILocation(line: 581, column: 1, scope: !7191)
!7195 = distinct !DISubprogram(name: "console_out", scope: !962, file: !962, line: 77, type: !114, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7196)
!7196 = !{!7197}
!7197 = !DILocalVariable(name: "c", arg: 1, scope: !7195, file: !962, line: 77, type: !103)
!7198 = !DILocation(line: 0, scope: !7195)
!7199 = !DILocation(line: 89, column: 11, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7195, file: !962, line: 89, column: 6)
!7201 = !DILocation(line: 89, column: 6, scope: !7195)
!7202 = !DILocation(line: 90, column: 3, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7200, file: !962, line: 89, column: 17)
!7204 = !DILocation(line: 91, column: 2, scope: !7203)
!7205 = !DILocation(line: 92, column: 34, scope: !7195)
!7206 = !DILocation(line: 92, column: 2, scope: !7195)
!7207 = !DILocation(line: 94, column: 2, scope: !7195)
!7208 = distinct !DISubprogram(name: "uart_poll_out", scope: !7209, file: !7209, line: 95, type: !935, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7210)
!7209 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/backup_sram")
!7210 = !{!7211, !7212}
!7211 = !DILocalVariable(name: "dev", arg: 1, scope: !7208, file: !7209, line: 95, type: !917)
!7212 = !DILocalVariable(name: "out_char", arg: 2, scope: !7208, file: !7209, line: 95, type: !161)
!7213 = !DILocation(line: 0, scope: !7208)
!7214 = !DILocation(line: 105, column: 2, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7208, file: !7209, line: 105, column: 2)
!7216 = !{i64 2155369770}
!7217 = !DILocation(line: 106, column: 2, scope: !7208)
!7218 = !DILocation(line: 107, column: 1, scope: !7208)
!7219 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !911, file: !911, line: 574, type: !935, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7220)
!7220 = !{!7221, !7222, !7223}
!7221 = !DILocalVariable(name: "dev", arg: 1, scope: !7219, file: !911, line: 574, type: !917)
!7222 = !DILocalVariable(name: "out_char", arg: 2, scope: !7219, file: !911, line: 575, type: !161)
!7223 = !DILocalVariable(name: "api", scope: !7219, file: !911, line: 577, type: !908)
!7224 = !DILocation(line: 0, scope: !7219)
!7225 = !DILocation(line: 578, column: 40, scope: !7219)
!7226 = !DILocation(line: 580, column: 7, scope: !7219)
!7227 = !DILocation(line: 580, column: 2, scope: !7219)
!7228 = !DILocation(line: 581, column: 1, scope: !7219)
!7229 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !7181, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7230)
!7230 = !{!7231}
!7231 = !DILocalVariable(name: "dev", arg: 1, scope: !7229, file: !147, line: 730, type: !917)
!7232 = !DILocation(line: 0, scope: !7229)
!7233 = !DILocation(line: 732, column: 9, scope: !7229)
!7234 = !DILocation(line: 732, column: 2, scope: !7229)
!7235 = distinct !DISubprogram(name: "uart_register_input", scope: !962, file: !962, line: 560, type: !7236, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !905, retainedNodes: !7281)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{null, !7238, !7238, !7278}
!7238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7239, size: 32)
!7239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !463, line: 2208, size: 128, elements: !7240)
!7240 = !{!7241}
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7239, file: !463, line: 2209, baseType: !7242, size: 128)
!7242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !463, line: 1709, size: 128, elements: !7243)
!7243 = !{!7244, !7257, !7259}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7242, file: !463, line: 1710, baseType: !7245, size: 64)
!7245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7246, line: 46, baseType: !7247)
!7246 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7246, line: 41, size: 64, elements: !7248)
!7248 = !{!7249, !7256}
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7247, file: !7246, line: 42, baseType: !7250, size: 32)
!7250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7251, size: 32)
!7251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7246, line: 39, baseType: !7252)
!7252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7246, line: 35, size: 32, elements: !7253)
!7253 = !{!7254}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7252, file: !7246, line: 36, baseType: !7255, size: 32)
!7255 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7246, line: 32, baseType: !106)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7247, file: !7246, line: 43, baseType: !7250, size: 32, offset: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7242, file: !463, line: 1711, baseType: !7258, offset: 64)
!7258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7242, file: !463, line: 1712, baseType: !7260, size: 64, offset: 64)
!7260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !7261)
!7261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !7262)
!7262 = !{!7263}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7261, file: !403, line: 232, baseType: !7264, size: 64)
!7264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !7265)
!7265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !7266)
!7266 = !{!7267, !7273}
!7267 = !DIDerivedType(tag: DW_TAG_member, scope: !7265, file: !377, line: 38, baseType: !7268, size: 32)
!7268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7265, file: !377, line: 38, size: 32, elements: !7269)
!7269 = !{!7270, !7272}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7268, file: !377, line: 39, baseType: !7271, size: 32)
!7271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 32)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7268, file: !377, line: 40, baseType: !7271, size: 32)
!7273 = !DIDerivedType(tag: DW_TAG_member, scope: !7265, file: !377, line: 42, baseType: !7274, size: 32, offset: 32)
!7274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7265, file: !377, line: 42, size: 32, elements: !7275)
!7275 = !{!7276, !7277}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7274, file: !377, line: 43, baseType: !7271, size: 32)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7274, file: !377, line: 44, baseType: !7271, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7279, size: 32)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{!160, !1099, !160}
!7281 = !{!7282, !7283, !7284}
!7282 = !DILocalVariable(name: "avail", arg: 1, scope: !7235, file: !962, line: 560, type: !7238)
!7283 = !DILocalVariable(name: "lines", arg: 2, scope: !7235, file: !962, line: 560, type: !7238)
!7284 = !DILocalVariable(name: "completion", arg: 3, scope: !7235, file: !962, line: 561, type: !7278)
!7285 = !DILocation(line: 0, scope: !7235)
!7286 = !DILocation(line: 566, column: 1, scope: !7235)
!7287 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1142, file: !1142, line: 523, type: !998, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7288)
!7288 = !{!7289, !7290, !7291, !7292, !7293}
!7289 = !DILocalVariable(name: "dev", arg: 1, scope: !7287, file: !1142, line: 523, type: !1000)
!7290 = !DILocalVariable(name: "pin", arg: 2, scope: !7287, file: !1142, line: 524, type: !1015)
!7291 = !DILocalVariable(name: "flags", arg: 3, scope: !7287, file: !1142, line: 524, type: !1016)
!7292 = !DILocalVariable(name: "err", scope: !7287, file: !1142, line: 526, type: !103)
!7293 = !DILocalVariable(name: "pincfg", scope: !7287, file: !1142, line: 527, type: !103)
!7294 = !DILocation(line: 0, scope: !7287)
!7295 = !DILocation(line: 527, column: 2, scope: !7287)
!7296 = !DILocation(line: 532, column: 8, scope: !7287)
!7297 = !DILocation(line: 533, column: 10, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7287, file: !1142, line: 533, column: 6)
!7299 = !DILocation(line: 533, column: 6, scope: !7287)
!7300 = !DILocation(line: 543, column: 13, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7287, file: !1142, line: 543, column: 6)
!7302 = !DILocation(line: 543, column: 28, scope: !7301)
!7303 = !DILocation(line: 543, column: 6, scope: !7287)
!7304 = !DILocation(line: 544, column: 14, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !1142, line: 544, column: 7)
!7306 = distinct !DILexicalBlock(scope: !7301, file: !1142, line: 543, column: 34)
!7307 = !DILocation(line: 544, column: 39, scope: !7305)
!7308 = !DILocation(line: 544, column: 7, scope: !7306)
!7309 = !DILocation(line: 545, column: 38, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7305, file: !1142, line: 544, column: 45)
!7311 = !DILocation(line: 545, column: 4, scope: !7310)
!7312 = !DILocation(line: 546, column: 3, scope: !7310)
!7313 = !DILocation(line: 546, column: 21, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7305, file: !1142, line: 546, column: 14)
!7315 = !DILocation(line: 546, column: 45, scope: !7314)
!7316 = !DILocation(line: 546, column: 14, scope: !7305)
!7317 = !DILocation(line: 547, column: 40, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !1142, line: 546, column: 51)
!7319 = !DILocation(line: 547, column: 4, scope: !7318)
!7320 = !DILocation(line: 548, column: 3, scope: !7318)
!7321 = !DILocation(line: 551, column: 32, scope: !7287)
!7322 = !DILocation(line: 551, column: 37, scope: !7287)
!7323 = !DILocation(line: 551, column: 2, scope: !7287)
!7324 = !DILocation(line: 554, column: 6, scope: !7287)
!7325 = !DILocation(line: 562, column: 1, scope: !7287)
!7326 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1142, file: !1142, line: 410, type: !7327, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7329)
!7327 = !DISubroutineType(types: !7328)
!7328 = !{!103, !1000, !269}
!7329 = !{!7330, !7331, !7332, !7334}
!7330 = !DILocalVariable(name: "dev", arg: 1, scope: !7326, file: !1142, line: 410, type: !1000)
!7331 = !DILocalVariable(name: "value", arg: 2, scope: !7326, file: !1142, line: 410, type: !269)
!7332 = !DILocalVariable(name: "cfg", scope: !7326, file: !1142, line: 412, type: !7333)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!7334 = !DILocalVariable(name: "gpio", scope: !7326, file: !1142, line: 413, type: !1073)
!7335 = !DILocation(line: 0, scope: !7326)
!7336 = !DILocation(line: 412, column: 45, scope: !7326)
!7337 = !DILocation(line: 413, column: 44, scope: !7326)
!7338 = !DILocation(line: 415, column: 11, scope: !7326)
!7339 = !DILocation(line: 415, column: 9, scope: !7326)
!7340 = !DILocation(line: 417, column: 2, scope: !7326)
!7341 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1142, file: !1142, line: 420, type: !1025, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7342)
!7342 = !{!7343, !7344, !7345, !7346, !7347, !7348}
!7343 = !DILocalVariable(name: "dev", arg: 1, scope: !7341, file: !1142, line: 420, type: !1000)
!7344 = !DILocalVariable(name: "mask", arg: 2, scope: !7341, file: !1142, line: 421, type: !1027)
!7345 = !DILocalVariable(name: "value", arg: 3, scope: !7341, file: !1142, line: 422, type: !1022)
!7346 = !DILocalVariable(name: "cfg", scope: !7341, file: !1142, line: 424, type: !7333)
!7347 = !DILocalVariable(name: "gpio", scope: !7341, file: !1142, line: 425, type: !1073)
!7348 = !DILocalVariable(name: "port_value", scope: !7341, file: !1142, line: 426, type: !106)
!7349 = !DILocation(line: 0, scope: !7341)
!7350 = !DILocation(line: 424, column: 45, scope: !7341)
!7351 = !DILocation(line: 425, column: 44, scope: !7341)
!7352 = !DILocation(line: 430, column: 15, scope: !7341)
!7353 = !DILocation(line: 431, column: 46, scope: !7341)
!7354 = !DILocation(line: 431, column: 44, scope: !7341)
!7355 = !DILocation(line: 431, column: 61, scope: !7341)
!7356 = !DILocation(line: 431, column: 53, scope: !7341)
!7357 = !DILocation(line: 431, column: 2, scope: !7341)
!7358 = !DILocation(line: 435, column: 2, scope: !7341)
!7359 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1142, file: !1142, line: 438, type: !1030, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7360)
!7360 = !{!7361, !7362, !7363, !7364}
!7361 = !DILocalVariable(name: "dev", arg: 1, scope: !7359, file: !1142, line: 438, type: !1000)
!7362 = !DILocalVariable(name: "pins", arg: 2, scope: !7359, file: !1142, line: 439, type: !1027)
!7363 = !DILocalVariable(name: "cfg", scope: !7359, file: !1142, line: 441, type: !7333)
!7364 = !DILocalVariable(name: "gpio", scope: !7359, file: !1142, line: 442, type: !1073)
!7365 = !DILocation(line: 0, scope: !7359)
!7366 = !DILocation(line: 441, column: 45, scope: !7359)
!7367 = !DILocation(line: 442, column: 44, scope: !7359)
!7368 = !DILocation(line: 448, column: 2, scope: !7359)
!7369 = !DILocation(line: 450, column: 2, scope: !7359)
!7370 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1142, file: !1142, line: 453, type: !1030, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7371)
!7371 = !{!7372, !7373, !7374, !7375}
!7372 = !DILocalVariable(name: "dev", arg: 1, scope: !7370, file: !1142, line: 453, type: !1000)
!7373 = !DILocalVariable(name: "pins", arg: 2, scope: !7370, file: !1142, line: 454, type: !1027)
!7374 = !DILocalVariable(name: "cfg", scope: !7370, file: !1142, line: 456, type: !7333)
!7375 = !DILocalVariable(name: "gpio", scope: !7370, file: !1142, line: 457, type: !1073)
!7376 = !DILocation(line: 0, scope: !7370)
!7377 = !DILocation(line: 456, column: 45, scope: !7370)
!7378 = !DILocation(line: 457, column: 44, scope: !7370)
!7379 = !DILocation(line: 467, column: 2, scope: !7370)
!7380 = !DILocation(line: 470, column: 2, scope: !7370)
!7381 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1142, file: !1142, line: 473, type: !1030, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7382)
!7382 = !{!7383, !7384, !7385, !7386}
!7383 = !DILocalVariable(name: "dev", arg: 1, scope: !7381, file: !1142, line: 473, type: !1000)
!7384 = !DILocalVariable(name: "pins", arg: 2, scope: !7381, file: !1142, line: 474, type: !1027)
!7385 = !DILocalVariable(name: "cfg", scope: !7381, file: !1142, line: 476, type: !7333)
!7386 = !DILocalVariable(name: "gpio", scope: !7381, file: !1142, line: 477, type: !1073)
!7387 = !DILocation(line: 0, scope: !7381)
!7388 = !DILocation(line: 476, column: 45, scope: !7381)
!7389 = !DILocation(line: 477, column: 44, scope: !7381)
!7390 = !DILocation(line: 484, column: 2, scope: !7381)
!7391 = !DILocation(line: 487, column: 2, scope: !7381)
!7392 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1142, file: !1142, line: 594, type: !1036, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7393)
!7393 = !{!7394, !7395, !7396, !7397, !7398, !7399, !7401, !7402, !7403}
!7394 = !DILocalVariable(name: "dev", arg: 1, scope: !7392, file: !1142, line: 594, type: !1000)
!7395 = !DILocalVariable(name: "pin", arg: 2, scope: !7392, file: !1142, line: 595, type: !1015)
!7396 = !DILocalVariable(name: "mode", arg: 3, scope: !7392, file: !1142, line: 596, type: !974)
!7397 = !DILocalVariable(name: "trig", arg: 4, scope: !7392, file: !1142, line: 597, type: !980)
!7398 = !DILocalVariable(name: "cfg", scope: !7392, file: !1142, line: 599, type: !7333)
!7399 = !DILocalVariable(name: "data", scope: !7392, file: !1142, line: 600, type: !7400)
!7400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!7401 = !DILocalVariable(name: "edge", scope: !7392, file: !1142, line: 601, type: !103)
!7402 = !DILocalVariable(name: "err", scope: !7392, file: !1142, line: 602, type: !103)
!7403 = !DILabel(scope: !7392, name: "exit", file: !1142, line: 643)
!7404 = !DILocation(line: 0, scope: !7392)
!7405 = !DILocation(line: 599, column: 45, scope: !7392)
!7406 = !DILocation(line: 604, column: 6, scope: !7392)
!7407 = !DILocation(line: 605, column: 34, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7409, file: !1142, line: 605, column: 7)
!7409 = distinct !DILexicalBlock(scope: !7410, file: !1142, line: 604, column: 38)
!7410 = distinct !DILexicalBlock(scope: !7392, file: !1142, line: 604, column: 6)
!7411 = !DILocation(line: 605, column: 7, scope: !7408)
!7412 = !DILocation(line: 605, column: 47, scope: !7408)
!7413 = !DILocation(line: 605, column: 39, scope: !7408)
!7414 = !DILocation(line: 605, column: 7, scope: !7409)
!7415 = !DILocation(line: 606, column: 4, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7408, file: !1142, line: 605, column: 53)
!7417 = !DILocation(line: 607, column: 4, scope: !7416)
!7418 = !DILocation(line: 608, column: 4, scope: !7416)
!7419 = !DILocation(line: 609, column: 3, scope: !7416)
!7420 = !DILocation(line: 600, column: 38, scope: !7392)
!7421 = !DILocation(line: 620, column: 30, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7392, file: !1142, line: 620, column: 6)
!7423 = !DILocation(line: 620, column: 6, scope: !7422)
!7424 = !DILocation(line: 620, column: 57, scope: !7422)
!7425 = !DILocation(line: 620, column: 6, scope: !7392)
!7426 = !DILocation(line: 625, column: 29, scope: !7392)
!7427 = !DILocation(line: 625, column: 2, scope: !7392)
!7428 = !DILocation(line: 627, column: 2, scope: !7392)
!7429 = !DILocation(line: 630, column: 3, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7392, file: !1142, line: 627, column: 16)
!7431 = !DILocation(line: 633, column: 3, scope: !7430)
!7432 = !DILocation(line: 636, column: 3, scope: !7430)
!7433 = !DILocation(line: 639, column: 2, scope: !7392)
!7434 = !DILocation(line: 641, column: 2, scope: !7392)
!7435 = !DILocation(line: 643, column: 1, scope: !7392)
!7436 = !DILocation(line: 644, column: 2, scope: !7392)
!7437 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1142, file: !1142, line: 647, type: !1040, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7438)
!7438 = !{!7439, !7440, !7441, !7442}
!7439 = !DILocalVariable(name: "dev", arg: 1, scope: !7437, file: !1142, line: 647, type: !1000)
!7440 = !DILocalVariable(name: "callback", arg: 2, scope: !7437, file: !1142, line: 648, type: !1042)
!7441 = !DILocalVariable(name: "set", arg: 3, scope: !7437, file: !1142, line: 649, type: !163)
!7442 = !DILocalVariable(name: "data", scope: !7437, file: !1142, line: 651, type: !7400)
!7443 = !DILocation(line: 0, scope: !7437)
!7444 = !DILocation(line: 651, column: 38, scope: !7437)
!7445 = !DILocation(line: 653, column: 37, scope: !7437)
!7446 = !DILocation(line: 653, column: 9, scope: !7437)
!7447 = !DILocation(line: 653, column: 2, scope: !7437)
!7448 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7449, file: !7449, line: 38, type: !7450, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7453)
!7449 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!103, !7452, !1042, !163}
!7452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!7453 = !{!7454, !7455, !7456}
!7454 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7448, file: !7449, line: 38, type: !7452)
!7455 = !DILocalVariable(name: "callback", arg: 2, scope: !7448, file: !7449, line: 39, type: !1042)
!7456 = !DILocalVariable(name: "set", arg: 3, scope: !7448, file: !7449, line: 40, type: !163)
!7457 = !DILocation(line: 0, scope: !7448)
!7458 = !DILocation(line: 45, column: 7, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7448, file: !7449, line: 45, column: 6)
!7460 = !DILocation(line: 45, column: 6, scope: !7448)
!7461 = !DILocation(line: 46, column: 56, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !7449, line: 46, column: 7)
!7463 = distinct !DILexicalBlock(scope: !7459, file: !7449, line: 45, column: 38)
!7464 = !DILocation(line: 46, column: 8, scope: !7462)
!7465 = !DILocation(line: 46, column: 7, scope: !7463)
!7466 = !DILocation(line: 51, column: 13, scope: !7459)
!7467 = !DILocation(line: 56, column: 43, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !7449, line: 55, column: 11)
!7469 = distinct !DILexicalBlock(scope: !7448, file: !7449, line: 55, column: 6)
!7470 = !DILocation(line: 56, column: 3, scope: !7468)
!7471 = !DILocation(line: 57, column: 2, scope: !7468)
!7472 = !DILocation(line: 60, column: 1, scope: !7448)
!7473 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1047, file: !1047, line: 261, type: !7474, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7476)
!7474 = !DISubroutineType(types: !7475)
!7475 = !{!163, !7452}
!7476 = !{!7477}
!7477 = !DILocalVariable(name: "list", arg: 1, scope: !7473, file: !1047, line: 261, type: !7452)
!7478 = !DILocation(line: 0, scope: !7473)
!7479 = !DILocation(line: 261, column: 1, scope: !7473)
!7480 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1047, file: !1047, line: 417, type: !7481, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7483)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!163, !7452, !1212}
!7483 = !{!7484, !7485, !7486, !7487}
!7484 = !DILocalVariable(name: "list", arg: 1, scope: !7480, file: !1047, line: 417, type: !7452)
!7485 = !DILocalVariable(name: "node", arg: 2, scope: !7480, file: !1047, line: 417, type: !1212)
!7486 = !DILocalVariable(name: "prev", scope: !7480, file: !1047, line: 417, type: !1212)
!7487 = !DILocalVariable(name: "test", scope: !7480, file: !1047, line: 417, type: !1212)
!7488 = !DILocation(line: 0, scope: !7480)
!7489 = !DILocation(line: 417, column: 1, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7480, file: !1047, line: 417, column: 1)
!7491 = !DILocation(line: 417, column: 1, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7490, file: !1047, line: 417, column: 1)
!7493 = !DILocation(line: 417, column: 1, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !1047, line: 417, column: 1)
!7495 = distinct !DILexicalBlock(scope: !7492, file: !1047, line: 417, column: 1)
!7496 = !DILocation(line: 417, column: 1, scope: !7495)
!7497 = distinct !{!7497, !7489, !7489}
!7498 = !DILocation(line: 417, column: 1, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7494, file: !1047, line: 417, column: 1)
!7500 = !DILocation(line: 417, column: 1, scope: !7480)
!7501 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1047, file: !1047, line: 298, type: !7502, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7504)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{null, !7452, !1212}
!7504 = !{!7505, !7506}
!7505 = !DILocalVariable(name: "list", arg: 1, scope: !7501, file: !1047, line: 298, type: !7452)
!7506 = !DILocalVariable(name: "node", arg: 2, scope: !7501, file: !1047, line: 298, type: !1212)
!7507 = !DILocation(line: 0, scope: !7501)
!7508 = !DILocation(line: 298, column: 1, scope: !7501)
!7509 = !DILocation(line: 298, column: 1, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7501, file: !1047, line: 298, column: 1)
!7511 = !DILocation(line: 298, column: 1, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7510, file: !1047, line: 298, column: 1)
!7513 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1047, file: !1047, line: 231, type: !7514, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7516)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!1212, !7452}
!7516 = !{!7517}
!7517 = !DILocalVariable(name: "list", arg: 1, scope: !7513, file: !1047, line: 231, type: !7452)
!7518 = !DILocation(line: 0, scope: !7513)
!7519 = !DILocation(line: 233, column: 15, scope: !7513)
!7520 = !DILocation(line: 233, column: 2, scope: !7513)
!7521 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1047, file: !1047, line: 209, type: !7522, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7524)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{null, !1212, !1212}
!7524 = !{!7525, !7526}
!7525 = !DILocalVariable(name: "parent", arg: 1, scope: !7521, file: !1047, line: 209, type: !1212)
!7526 = !DILocalVariable(name: "child", arg: 2, scope: !7521, file: !1047, line: 209, type: !1212)
!7527 = !DILocation(line: 0, scope: !7521)
!7528 = !DILocation(line: 211, column: 10, scope: !7521)
!7529 = !DILocation(line: 211, column: 15, scope: !7521)
!7530 = !DILocation(line: 212, column: 1, scope: !7521)
!7531 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1047, file: !1047, line: 214, type: !7502, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7532)
!7532 = !{!7533, !7534}
!7533 = !DILocalVariable(name: "list", arg: 1, scope: !7531, file: !1047, line: 214, type: !7452)
!7534 = !DILocalVariable(name: "node", arg: 2, scope: !7531, file: !1047, line: 214, type: !1212)
!7535 = !DILocation(line: 0, scope: !7531)
!7536 = !DILocation(line: 216, column: 8, scope: !7531)
!7537 = !DILocation(line: 216, column: 13, scope: !7531)
!7538 = !DILocation(line: 217, column: 1, scope: !7531)
!7539 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1047, file: !1047, line: 243, type: !7514, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7540)
!7540 = !{!7541}
!7541 = !DILocalVariable(name: "list", arg: 1, scope: !7539, file: !1047, line: 243, type: !7452)
!7542 = !DILocation(line: 0, scope: !7539)
!7543 = !DILocation(line: 245, column: 15, scope: !7539)
!7544 = !DILocation(line: 245, column: 2, scope: !7539)
!7545 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1047, file: !1047, line: 219, type: !7502, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7546)
!7546 = !{!7547, !7548}
!7547 = !DILocalVariable(name: "list", arg: 1, scope: !7545, file: !1047, line: 219, type: !7452)
!7548 = !DILocalVariable(name: "node", arg: 2, scope: !7545, file: !1047, line: 219, type: !1212)
!7549 = !DILocation(line: 0, scope: !7545)
!7550 = !DILocation(line: 221, column: 8, scope: !7545)
!7551 = !DILocation(line: 221, column: 13, scope: !7545)
!7552 = !DILocation(line: 222, column: 1, scope: !7545)
!7553 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1047, file: !1047, line: 401, type: !7554, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7556)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{null, !7452, !1212, !1212}
!7556 = !{!7557, !7558, !7559}
!7557 = !DILocalVariable(name: "list", arg: 1, scope: !7553, file: !1047, line: 401, type: !7452)
!7558 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7553, file: !1047, line: 401, type: !1212)
!7559 = !DILocalVariable(name: "node", arg: 3, scope: !7553, file: !1047, line: 401, type: !1212)
!7560 = !DILocation(line: 0, scope: !7553)
!7561 = !DILocation(line: 401, column: 1, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7553, file: !1047, line: 401, column: 1)
!7563 = !DILocation(line: 0, scope: !7562)
!7564 = !DILocation(line: 401, column: 1, scope: !7553)
!7565 = !DILocation(line: 401, column: 1, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7562, file: !1047, line: 401, column: 1)
!7567 = !DILocation(line: 401, column: 1, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7566, file: !1047, line: 401, column: 1)
!7569 = !DILocation(line: 401, column: 1, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7568, file: !1047, line: 401, column: 1)
!7571 = !DILocation(line: 401, column: 1, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7562, file: !1047, line: 401, column: 1)
!7573 = !DILocation(line: 401, column: 1, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7572, file: !1047, line: 401, column: 1)
!7575 = !DILocation(line: 401, column: 1, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7574, file: !1047, line: 401, column: 1)
!7577 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1047, file: !1047, line: 285, type: !7578, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7580)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!1212, !1212}
!7580 = !{!7581}
!7581 = !DILocalVariable(name: "node", arg: 1, scope: !7577, file: !1047, line: 285, type: !1212)
!7582 = !DILocation(line: 0, scope: !7577)
!7583 = !DILocation(line: 285, column: 1, scope: !7577)
!7584 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1047, file: !1047, line: 274, type: !7578, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7585)
!7585 = !{!7586}
!7586 = !DILocalVariable(name: "node", arg: 1, scope: !7584, file: !1047, line: 274, type: !1212)
!7587 = !DILocation(line: 0, scope: !7584)
!7588 = !DILocation(line: 274, column: 1, scope: !7584)
!7589 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1047, file: !1047, line: 204, type: !7578, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7590)
!7590 = !{!7591}
!7591 = !DILocalVariable(name: "node", arg: 1, scope: !7589, file: !1047, line: 204, type: !1212)
!7592 = !DILocation(line: 0, scope: !7589)
!7593 = !DILocation(line: 206, column: 15, scope: !7589)
!7594 = !DILocation(line: 206, column: 2, scope: !7589)
!7595 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1142, file: !1142, line: 342, type: !114, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7596)
!7596 = !{!7597, !7598, !7599}
!7597 = !DILocalVariable(name: "pin", arg: 1, scope: !7595, file: !1142, line: 342, type: !103)
!7598 = !DILocalVariable(name: "line", scope: !7595, file: !1142, line: 344, type: !106)
!7599 = !DILocalVariable(name: "port", scope: !7595, file: !1142, line: 345, type: !103)
!7600 = !DILocation(line: 0, scope: !7595)
!7601 = !DILocation(line: 344, column: 18, scope: !7595)
!7602 = !{i32 983040, i32 0}
!7603 = !DILocation(line: 356, column: 9, scope: !7595)
!7604 = !DILocation(line: 370, column: 2, scope: !7595)
!7605 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1142, file: !1142, line: 37, type: !731, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7606)
!7606 = !{!7607, !7608, !7609}
!7607 = !DILocalVariable(name: "line", arg: 1, scope: !7605, file: !1142, line: 37, type: !103)
!7608 = !DILocalVariable(name: "arg", arg: 2, scope: !7605, file: !1142, line: 37, type: !102)
!7609 = !DILocalVariable(name: "data", scope: !7605, file: !1142, line: 39, type: !7400)
!7610 = !DILocation(line: 0, scope: !7605)
!7611 = !DILocation(line: 41, column: 29, scope: !7605)
!7612 = !DILocation(line: 41, column: 39, scope: !7605)
!7613 = !DILocation(line: 41, column: 44, scope: !7605)
!7614 = !DILocation(line: 41, column: 2, scope: !7605)
!7615 = !DILocation(line: 42, column: 1, scope: !7605)
!7616 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1142, file: !1142, line: 376, type: !7617, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7619)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{!103, !103, !103}
!7619 = !{!7620, !7621, !7622, !7624, !7625}
!7620 = !DILocalVariable(name: "port", arg: 1, scope: !7616, file: !1142, line: 376, type: !103)
!7621 = !DILocalVariable(name: "pin", arg: 2, scope: !7616, file: !1142, line: 376, type: !103)
!7622 = !DILocalVariable(name: "clk", scope: !7616, file: !1142, line: 386, type: !7623)
!7623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!7624 = !DILocalVariable(name: "pclken", scope: !7616, file: !1142, line: 387, type: !1255)
!7625 = !DILocalVariable(name: "ret", scope: !7616, file: !1142, line: 396, type: !103)
!7626 = !DILocation(line: 0, scope: !7616)
!7627 = !DILocation(line: 387, column: 2, scope: !7616)
!7628 = !DILocation(line: 387, column: 22, scope: !7616)
!7629 = !DILocation(line: 399, column: 8, scope: !7616)
!7630 = !DILocation(line: 400, column: 10, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7616, file: !1142, line: 400, column: 6)
!7632 = !DILocation(line: 400, column: 6, scope: !7616)
!7633 = !DILocation(line: 405, column: 2, scope: !7616)
!7634 = !DILocation(line: 407, column: 2, scope: !7616)
!7635 = !DILocation(line: 408, column: 1, scope: !7616)
!7636 = distinct !DISubprogram(name: "clock_control_on", scope: !221, file: !221, line: 123, type: !1107, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7637)
!7637 = !{!7638, !7639, !7640}
!7638 = !DILocalVariable(name: "dev", arg: 1, scope: !7636, file: !221, line: 123, type: !1000)
!7639 = !DILocalVariable(name: "sys", arg: 2, scope: !7636, file: !221, line: 124, type: !229)
!7640 = !DILocalVariable(name: "api", scope: !7636, file: !221, line: 126, type: !1100)
!7641 = !DILocation(line: 0, scope: !7636)
!7642 = !DILocation(line: 127, column: 49, scope: !7636)
!7643 = !DILocation(line: 129, column: 14, scope: !7636)
!7644 = !DILocation(line: 129, column: 9, scope: !7636)
!7645 = !DILocation(line: 129, column: 2, scope: !7636)
!7646 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1142, file: !1142, line: 311, type: !6765, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7647)
!7647 = !{!7648, !7649, !7650}
!7648 = !DILocalVariable(name: "port", arg: 1, scope: !7646, file: !1142, line: 311, type: !103)
!7649 = !DILocalVariable(name: "pin", arg: 2, scope: !7646, file: !1142, line: 311, type: !103)
!7650 = !DILocalVariable(name: "line", scope: !7646, file: !1142, line: 313, type: !106)
!7651 = !DILocation(line: 0, scope: !7646)
!7652 = !DILocation(line: 313, column: 18, scope: !7646)
!7653 = !DILocation(line: 337, column: 2, scope: !7646)
!7654 = !DILocation(line: 340, column: 1, scope: !7646)
!7655 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1142, file: !1142, line: 295, type: !7656, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7658)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!106, !103}
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "pin", arg: 1, scope: !7655, file: !1142, line: 295, type: !103)
!7660 = !DILocation(line: 0, scope: !7655)
!7661 = !DILocation(line: 307, column: 46, scope: !7655)
!7662 = !DILocation(line: 307, column: 27, scope: !7655)
!7663 = !DILocation(line: 307, column: 32, scope: !7655)
!7664 = !DILocation(line: 307, column: 14, scope: !7655)
!7665 = !DILocation(line: 307, column: 39, scope: !7655)
!7666 = !DILocation(line: 307, column: 2, scope: !7655)
!7667 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4745, file: !4745, line: 671, type: !7668, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7670)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{null, !106, !106}
!7670 = !{!7671, !7672}
!7671 = !DILocalVariable(name: "Port", arg: 1, scope: !7667, file: !4745, line: 671, type: !106)
!7672 = !DILocalVariable(name: "Line", arg: 2, scope: !7667, file: !4745, line: 671, type: !106)
!7673 = !DILocation(line: 0, scope: !7667)
!7674 = !DILocation(line: 673, column: 3, scope: !7667)
!7675 = !DILocalVariable(name: "value", arg: 1, scope: !7676, file: !4973, line: 373, type: !106)
!7676 = distinct !DISubprogram(name: "__RBIT", scope: !4973, file: !4973, line: 373, type: !5979, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7677)
!7677 = !{!7675, !7678}
!7678 = !DILocalVariable(name: "result", scope: !7676, file: !4973, line: 375, type: !106)
!7679 = !DILocation(line: 0, scope: !7676, inlinedAt: !7680)
!7680 = distinct !DILocation(line: 673, column: 3, scope: !7667)
!7681 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7680)
!7682 = !{i64 3730461}
!7683 = !DILocalVariable(name: "value", arg: 1, scope: !7684, file: !4973, line: 403, type: !106)
!7684 = distinct !DISubprogram(name: "__CLZ", scope: !4973, file: !4973, line: 403, type: !7685, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7687)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{!160, !106}
!7687 = !{!7683}
!7688 = !DILocation(line: 0, scope: !7684, inlinedAt: !7689)
!7689 = distinct !DILocation(line: 673, column: 3, scope: !7667)
!7690 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7689)
!7691 = !DILocation(line: 674, column: 1, scope: !7667)
!7692 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7449, file: !7449, line: 69, type: !7693, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7695)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{null, !7452, !1000, !106}
!7695 = !{!7696, !7697, !7698, !7699, !7700}
!7696 = !DILocalVariable(name: "list", arg: 1, scope: !7692, file: !7449, line: 69, type: !7452)
!7697 = !DILocalVariable(name: "port", arg: 2, scope: !7692, file: !7449, line: 70, type: !1000)
!7698 = !DILocalVariable(name: "pins", arg: 3, scope: !7692, file: !7449, line: 71, type: !106)
!7699 = !DILocalVariable(name: "cb", scope: !7692, file: !7449, line: 73, type: !1042)
!7700 = !DILocalVariable(name: "tmp", scope: !7692, file: !7449, line: 73, type: !1042)
!7701 = !DILocation(line: 0, scope: !7692)
!7702 = !DILocation(line: 75, column: 2, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7692, file: !7449, line: 75, column: 2)
!7704 = !DILocation(line: 0, scope: !7703)
!7705 = !DILocation(line: 76, column: 11, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7449, line: 76, column: 7)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7449, line: 75, column: 57)
!7708 = distinct !DILexicalBlock(scope: !7703, file: !7449, line: 75, column: 2)
!7709 = !DILocation(line: 76, column: 20, scope: !7706)
!7710 = !DILocation(line: 76, column: 7, scope: !7707)
!7711 = !DILocation(line: 78, column: 8, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7706, file: !7449, line: 76, column: 28)
!7713 = !DILocation(line: 78, column: 4, scope: !7712)
!7714 = !DILocation(line: 79, column: 3, scope: !7712)
!7715 = !DILocation(line: 75, column: 2, scope: !7708)
!7716 = !DILocation(line: 81, column: 1, scope: !7692)
!7717 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4745, file: !4745, line: 710, type: !5979, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7718)
!7718 = !{!7719}
!7719 = !DILocalVariable(name: "Line", arg: 1, scope: !7717, file: !4745, line: 710, type: !106)
!7720 = !DILocation(line: 0, scope: !7717)
!7721 = !DILocation(line: 712, column: 21, scope: !7717)
!7722 = !DILocation(line: 0, scope: !7676, inlinedAt: !7723)
!7723 = distinct !DILocation(line: 712, column: 76, scope: !7717)
!7724 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7723)
!7725 = !DILocation(line: 0, scope: !7684, inlinedAt: !7726)
!7726 = distinct !DILocation(line: 712, column: 76, scope: !7717)
!7727 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7726)
!7728 = !DILocation(line: 712, column: 73, scope: !7717)
!7729 = !DILocation(line: 712, column: 3, scope: !7717)
!7730 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7731, file: !7731, line: 910, type: !7732, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7734)
!7731 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7732 = !DISubroutineType(types: !7733)
!7733 = !{null, !1073, !106}
!7734 = !{!7735, !7736}
!7735 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7730, file: !7731, line: 910, type: !1073)
!7736 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7730, file: !7731, line: 910, type: !106)
!7737 = !DILocation(line: 0, scope: !7730)
!7738 = !DILocation(line: 912, column: 3, scope: !7730)
!7739 = !DILocation(line: 913, column: 1, scope: !7730)
!7740 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7731, file: !7731, line: 823, type: !7741, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!106, !1073}
!7743 = !{!7744}
!7744 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7740, file: !7731, line: 823, type: !1073)
!7745 = !DILocation(line: 0, scope: !7740)
!7746 = !DILocation(line: 825, column: 21, scope: !7740)
!7747 = !DILocation(line: 825, column: 3, scope: !7740)
!7748 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7731, file: !7731, line: 812, type: !7732, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7749)
!7749 = !{!7750, !7751}
!7750 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7748, file: !7731, line: 812, type: !1073)
!7751 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7748, file: !7731, line: 812, type: !106)
!7752 = !DILocation(line: 0, scope: !7748)
!7753 = !DILocation(line: 814, column: 3, scope: !7748)
!7754 = !DILocation(line: 815, column: 1, scope: !7748)
!7755 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7731, file: !7731, line: 771, type: !7741, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7756)
!7756 = !{!7757}
!7757 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7755, file: !7731, line: 771, type: !1073)
!7758 = !DILocation(line: 0, scope: !7755)
!7759 = !DILocation(line: 773, column: 21, scope: !7755)
!7760 = !DILocation(line: 773, column: 3, scope: !7755)
!7761 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1142, file: !1142, line: 47, type: !7762, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!103, !1016, !2384}
!7764 = !{!7765, !7766}
!7765 = !DILocalVariable(name: "flags", arg: 1, scope: !7761, file: !1142, line: 47, type: !1016)
!7766 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7761, file: !1142, line: 47, type: !2384)
!7767 = !DILocation(line: 0, scope: !7761)
!7768 = !DILocation(line: 50, column: 13, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7761, file: !1142, line: 50, column: 6)
!7770 = !DILocation(line: 50, column: 28, scope: !7769)
!7771 = !DILocation(line: 50, column: 6, scope: !7761)
!7772 = !DILocation(line: 53, column: 11, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7769, file: !1142, line: 50, column: 34)
!7774 = !DILocation(line: 55, column: 14, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7773, file: !1142, line: 55, column: 7)
!7776 = !DILocation(line: 55, column: 35, scope: !7775)
!7777 = !DILocation(line: 55, column: 7, scope: !7773)
!7778 = !DILocation(line: 56, column: 14, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !1142, line: 56, column: 8)
!7780 = distinct !DILexicalBlock(scope: !7775, file: !1142, line: 55, column: 41)
!7781 = !DILocation(line: 56, column: 8, scope: !7780)
!7782 = !DILocation(line: 0, scope: !7775)
!7783 = !DILocation(line: 66, column: 14, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7773, file: !1142, line: 66, column: 7)
!7785 = !DILocation(line: 66, column: 30, scope: !7784)
!7786 = !DILocation(line: 66, column: 7, scope: !7773)
!7787 = !DILocation(line: 67, column: 12, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7784, file: !1142, line: 66, column: 36)
!7789 = !DILocation(line: 68, column: 3, scope: !7788)
!7790 = !DILocation(line: 68, column: 21, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7784, file: !1142, line: 68, column: 14)
!7792 = !DILocation(line: 68, column: 39, scope: !7791)
!7793 = !DILocation(line: 68, column: 14, scope: !7784)
!7794 = !DILocation(line: 69, column: 12, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7791, file: !1142, line: 68, column: 45)
!7796 = !DILocation(line: 70, column: 3, scope: !7795)
!7797 = !DILocation(line: 72, column: 21, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7769, file: !1142, line: 72, column: 14)
!7799 = !DILocation(line: 72, column: 35, scope: !7798)
!7800 = !DILocation(line: 72, column: 14, scope: !7769)
!7801 = !DILocation(line: 77, column: 14, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !1142, line: 77, column: 7)
!7803 = distinct !DILexicalBlock(scope: !7798, file: !1142, line: 72, column: 41)
!7804 = !DILocation(line: 77, column: 30, scope: !7802)
!7805 = !DILocation(line: 77, column: 7, scope: !7803)
!7806 = !DILocation(line: 0, scope: !7769)
!7807 = !DILocation(line: 90, column: 1, scope: !7761)
!7808 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1142, file: !1142, line: 157, type: !7809, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7811)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{null, !1000, !103, !103, !103}
!7811 = !{!7812, !7813, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822}
!7812 = !DILocalVariable(name: "dev", arg: 1, scope: !7808, file: !1142, line: 157, type: !1000)
!7813 = !DILocalVariable(name: "pin", arg: 2, scope: !7808, file: !1142, line: 157, type: !103)
!7814 = !DILocalVariable(name: "conf", arg: 3, scope: !7808, file: !1142, line: 158, type: !103)
!7815 = !DILocalVariable(name: "func", arg: 4, scope: !7808, file: !1142, line: 158, type: !103)
!7816 = !DILocalVariable(name: "cfg", scope: !7808, file: !1142, line: 160, type: !7333)
!7817 = !DILocalVariable(name: "gpio", scope: !7808, file: !1142, line: 161, type: !1073)
!7818 = !DILocalVariable(name: "pin_ll", scope: !7808, file: !1142, line: 163, type: !103)
!7819 = !DILocalVariable(name: "mode", scope: !7808, file: !1142, line: 227, type: !32)
!7820 = !DILocalVariable(name: "otype", scope: !7808, file: !1142, line: 227, type: !32)
!7821 = !DILocalVariable(name: "ospeed", scope: !7808, file: !1142, line: 227, type: !32)
!7822 = !DILocalVariable(name: "pupd", scope: !7808, file: !1142, line: 227, type: !32)
!7823 = !DILocation(line: 0, scope: !7808)
!7824 = !DILocation(line: 160, column: 45, scope: !7808)
!7825 = !DILocation(line: 161, column: 44, scope: !7808)
!7826 = !DILocation(line: 163, column: 15, scope: !7808)
!7827 = !DILocation(line: 229, column: 14, scope: !7808)
!7828 = !DILocation(line: 246, column: 47, scope: !7808)
!7829 = !DILocation(line: 246, column: 2, scope: !7808)
!7830 = !DILocation(line: 248, column: 43, scope: !7808)
!7831 = !DILocation(line: 248, column: 2, scope: !7808)
!7832 = !DILocation(line: 250, column: 40, scope: !7808)
!7833 = !DILocation(line: 250, column: 2, scope: !7808)
!7834 = !DILocation(line: 252, column: 11, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7808, file: !1142, line: 252, column: 6)
!7836 = !DILocation(line: 252, column: 6, scope: !7808)
!7837 = !DILocation(line: 253, column: 11, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !1142, line: 253, column: 7)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !1142, line: 252, column: 36)
!7840 = !DILocation(line: 253, column: 7, scope: !7839)
!7841 = !DILocation(line: 254, column: 4, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7838, file: !1142, line: 253, column: 16)
!7843 = !DILocation(line: 255, column: 3, scope: !7842)
!7844 = !DILocation(line: 256, column: 4, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7838, file: !1142, line: 255, column: 10)
!7846 = !DILocation(line: 260, column: 40, scope: !7808)
!7847 = !DILocation(line: 260, column: 2, scope: !7808)
!7848 = !DILocation(line: 265, column: 1, scope: !7808)
!7849 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1142, file: !1142, line: 137, type: !7656, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7850)
!7850 = !{!7851, !7852}
!7851 = !DILocalVariable(name: "pin", arg: 1, scope: !7849, file: !1142, line: 137, type: !103)
!7852 = !DILocalVariable(name: "pinval", scope: !7849, file: !1142, line: 139, type: !106)
!7853 = !DILocation(line: 0, scope: !7849)
!7854 = !DILocation(line: 149, column: 13, scope: !7849)
!7855 = !DILocation(line: 151, column: 2, scope: !7849)
!7856 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7731, file: !7731, line: 342, type: !7857, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7859)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{null, !1073, !106, !106}
!7859 = !{!7860, !7861, !7862}
!7860 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7856, file: !7731, line: 342, type: !1073)
!7861 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7856, file: !7731, line: 342, type: !106)
!7862 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7856, file: !7731, line: 342, type: !106)
!7863 = !DILocation(line: 0, scope: !7856)
!7864 = !DILocation(line: 344, column: 3, scope: !7856)
!7865 = !DILocation(line: 345, column: 1, scope: !7856)
!7866 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7731, file: !7731, line: 413, type: !7857, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7867)
!7867 = !{!7868, !7869, !7870}
!7868 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7866, file: !7731, line: 413, type: !1073)
!7869 = !DILocalVariable(name: "Pin", arg: 2, scope: !7866, file: !7731, line: 413, type: !106)
!7870 = !DILocalVariable(name: "Speed", arg: 3, scope: !7866, file: !7731, line: 413, type: !106)
!7871 = !DILocation(line: 0, scope: !7866)
!7872 = !DILocation(line: 415, column: 3, scope: !7866)
!7873 = !DILocation(line: 0, scope: !7676, inlinedAt: !7874)
!7874 = distinct !DILocation(line: 415, column: 3, scope: !7866)
!7875 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7874)
!7876 = !DILocation(line: 0, scope: !7684, inlinedAt: !7877)
!7877 = distinct !DILocation(line: 415, column: 3, scope: !7866)
!7878 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7877)
!7879 = !DILocation(line: 0, scope: !7676, inlinedAt: !7880)
!7880 = distinct !DILocation(line: 415, column: 3, scope: !7866)
!7881 = !DILocation(line: 0, scope: !7684, inlinedAt: !7882)
!7882 = distinct !DILocation(line: 415, column: 3, scope: !7866)
!7883 = !DILocation(line: 417, column: 1, scope: !7866)
!7884 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7731, file: !7731, line: 484, type: !7857, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7885)
!7885 = !{!7886, !7887, !7888}
!7886 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7884, file: !7731, line: 484, type: !1073)
!7887 = !DILocalVariable(name: "Pin", arg: 2, scope: !7884, file: !7731, line: 484, type: !106)
!7888 = !DILocalVariable(name: "Pull", arg: 3, scope: !7884, file: !7731, line: 484, type: !106)
!7889 = !DILocation(line: 0, scope: !7884)
!7890 = !DILocation(line: 486, column: 3, scope: !7884)
!7891 = !DILocation(line: 0, scope: !7676, inlinedAt: !7892)
!7892 = distinct !DILocation(line: 486, column: 3, scope: !7884)
!7893 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7892)
!7894 = !DILocation(line: 0, scope: !7684, inlinedAt: !7895)
!7895 = distinct !DILocation(line: 486, column: 3, scope: !7884)
!7896 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7895)
!7897 = !DILocation(line: 0, scope: !7676, inlinedAt: !7898)
!7898 = distinct !DILocation(line: 486, column: 3, scope: !7884)
!7899 = !DILocation(line: 0, scope: !7684, inlinedAt: !7900)
!7900 = distinct !DILocation(line: 486, column: 3, scope: !7884)
!7901 = !DILocation(line: 487, column: 1, scope: !7884)
!7902 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7731, file: !7731, line: 556, type: !7857, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7903)
!7903 = !{!7904, !7905, !7906}
!7904 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7902, file: !7731, line: 556, type: !1073)
!7905 = !DILocalVariable(name: "Pin", arg: 2, scope: !7902, file: !7731, line: 556, type: !106)
!7906 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7902, file: !7731, line: 556, type: !106)
!7907 = !DILocation(line: 0, scope: !7902)
!7908 = !DILocation(line: 558, column: 3, scope: !7902)
!7909 = !DILocation(line: 0, scope: !7676, inlinedAt: !7910)
!7910 = distinct !DILocation(line: 558, column: 3, scope: !7902)
!7911 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7910)
!7912 = !DILocation(line: 0, scope: !7684, inlinedAt: !7913)
!7913 = distinct !DILocation(line: 558, column: 3, scope: !7902)
!7914 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7913)
!7915 = !DILocation(line: 0, scope: !7676, inlinedAt: !7916)
!7916 = distinct !DILocation(line: 558, column: 3, scope: !7902)
!7917 = !DILocation(line: 0, scope: !7684, inlinedAt: !7918)
!7918 = distinct !DILocation(line: 558, column: 3, scope: !7902)
!7919 = !DILocation(line: 560, column: 1, scope: !7902)
!7920 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7731, file: !7731, line: 633, type: !7857, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7921)
!7921 = !{!7922, !7923, !7924}
!7922 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7920, file: !7731, line: 633, type: !1073)
!7923 = !DILocalVariable(name: "Pin", arg: 2, scope: !7920, file: !7731, line: 633, type: !106)
!7924 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7920, file: !7731, line: 633, type: !106)
!7925 = !DILocation(line: 0, scope: !7920)
!7926 = !DILocation(line: 635, column: 3, scope: !7920)
!7927 = !DILocation(line: 0, scope: !7676, inlinedAt: !7928)
!7928 = distinct !DILocation(line: 635, column: 3, scope: !7920)
!7929 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7928)
!7930 = !DILocation(line: 0, scope: !7684, inlinedAt: !7931)
!7931 = distinct !DILocation(line: 635, column: 3, scope: !7920)
!7932 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7931)
!7933 = !DILocation(line: 0, scope: !7676, inlinedAt: !7934)
!7934 = distinct !DILocation(line: 635, column: 3, scope: !7920)
!7935 = !DILocation(line: 0, scope: !7684, inlinedAt: !7936)
!7936 = distinct !DILocation(line: 635, column: 3, scope: !7920)
!7937 = !DILocation(line: 637, column: 1, scope: !7920)
!7938 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7731, file: !7731, line: 273, type: !7857, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7939)
!7939 = !{!7940, !7941, !7942}
!7940 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7938, file: !7731, line: 273, type: !1073)
!7941 = !DILocalVariable(name: "Pin", arg: 2, scope: !7938, file: !7731, line: 273, type: !106)
!7942 = !DILocalVariable(name: "Mode", arg: 3, scope: !7938, file: !7731, line: 273, type: !106)
!7943 = !DILocation(line: 0, scope: !7938)
!7944 = !DILocation(line: 275, column: 3, scope: !7938)
!7945 = !DILocation(line: 0, scope: !7676, inlinedAt: !7946)
!7946 = distinct !DILocation(line: 275, column: 3, scope: !7938)
!7947 = !DILocation(line: 380, column: 4, scope: !7676, inlinedAt: !7946)
!7948 = !DILocation(line: 0, scope: !7684, inlinedAt: !7949)
!7949 = distinct !DILocation(line: 275, column: 3, scope: !7938)
!7950 = !DILocation(line: 414, column: 7, scope: !7684, inlinedAt: !7949)
!7951 = !DILocation(line: 0, scope: !7676, inlinedAt: !7952)
!7952 = distinct !DILocation(line: 275, column: 3, scope: !7938)
!7953 = !DILocation(line: 0, scope: !7684, inlinedAt: !7954)
!7954 = distinct !DILocation(line: 275, column: 3, scope: !7938)
!7955 = !DILocation(line: 276, column: 1, scope: !7938)
!7956 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1142, file: !1142, line: 698, type: !1152, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7957)
!7957 = !{!7958, !7959, !7960}
!7958 = !DILocalVariable(name: "dev", arg: 1, scope: !7956, file: !1142, line: 698, type: !1000)
!7959 = !DILocalVariable(name: "data", scope: !7956, file: !1142, line: 700, type: !7400)
!7960 = !DILocalVariable(name: "ret", scope: !7956, file: !1142, line: 701, type: !103)
!7961 = !DILocation(line: 0, scope: !7956)
!7962 = !DILocation(line: 700, column: 38, scope: !7956)
!7963 = !DILocation(line: 703, column: 8, scope: !7956)
!7964 = !DILocation(line: 703, column: 12, scope: !7956)
!7965 = !DILocation(line: 705, column: 7, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7956, file: !1142, line: 705, column: 6)
!7967 = !DILocation(line: 705, column: 6, scope: !7956)
!7968 = !DILocation(line: 722, column: 8, scope: !7956)
!7969 = !DILocation(line: 723, column: 10, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7956, file: !1142, line: 723, column: 6)
!7971 = !DILocation(line: 723, column: 6, scope: !7956)
!7972 = !DILocation(line: 731, column: 1, scope: !7956)
!7973 = distinct !DISubprogram(name: "device_is_ready", scope: !4782, file: !4782, line: 47, type: !7974, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7976)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{!163, !1000}
!7976 = !{!7977}
!7977 = !DILocalVariable(name: "dev", arg: 1, scope: !7973, file: !4782, line: 47, type: !1000)
!7978 = !DILocation(line: 0, scope: !7973)
!7979 = !DILocation(line: 55, column: 2, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7973, file: !4782, line: 55, column: 2)
!7981 = !{i64 2155277586}
!7982 = !DILocation(line: 56, column: 9, scope: !7973)
!7983 = !DILocation(line: 56, column: 2, scope: !7973)
!7984 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1142, file: !1142, line: 270, type: !7985, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !7987)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{!103, !1000, !163}
!7987 = !{!7988, !7989, !7990, !7991, !7992}
!7988 = !DILocalVariable(name: "dev", arg: 1, scope: !7984, file: !1142, line: 270, type: !1000)
!7989 = !DILocalVariable(name: "on", arg: 2, scope: !7984, file: !1142, line: 270, type: !163)
!7990 = !DILocalVariable(name: "cfg", scope: !7984, file: !1142, line: 272, type: !7333)
!7991 = !DILocalVariable(name: "ret", scope: !7984, file: !1142, line: 273, type: !103)
!7992 = !DILocalVariable(name: "clk", scope: !7984, file: !1142, line: 278, type: !7623)
!7993 = !DILocation(line: 0, scope: !7984)
!7994 = !DILocation(line: 272, column: 45, scope: !7984)
!7995 = !DILocation(line: 282, column: 38, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !1142, line: 280, column: 10)
!7997 = distinct !DILexicalBlock(scope: !7984, file: !1142, line: 280, column: 6)
!7998 = !DILocation(line: 282, column: 6, scope: !7996)
!7999 = !DILocation(line: 281, column: 9, scope: !7996)
!8000 = !DILocation(line: 293, column: 1, scope: !7984)
!8001 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !7974, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8002)
!8002 = !{!8003}
!8003 = !DILocalVariable(name: "dev", arg: 1, scope: !8001, file: !147, line: 730, type: !1000)
!8004 = !DILocation(line: 0, scope: !8001)
!8005 = !DILocation(line: 732, column: 9, scope: !8001)
!8006 = !DILocation(line: 732, column: 2, scope: !8001)
!8007 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1142, file: !1142, line: 496, type: !8008, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8010)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!103, !1000, !103, !103, !103}
!8010 = !{!8011, !8012, !8013, !8014, !8015, !8016}
!8011 = !DILocalVariable(name: "dev", arg: 1, scope: !8007, file: !1142, line: 496, type: !1000)
!8012 = !DILocalVariable(name: "pin", arg: 2, scope: !8007, file: !1142, line: 496, type: !103)
!8013 = !DILocalVariable(name: "conf", arg: 3, scope: !8007, file: !1142, line: 496, type: !103)
!8014 = !DILocalVariable(name: "func", arg: 4, scope: !8007, file: !1142, line: 496, type: !103)
!8015 = !DILocalVariable(name: "ret", scope: !8007, file: !1142, line: 498, type: !103)
!8016 = !DILocalVariable(name: "gpio_out", scope: !8017, file: !1142, line: 508, type: !106)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !1142, line: 507, column: 27)
!8018 = distinct !DILexicalBlock(scope: !8007, file: !1142, line: 507, column: 6)
!8019 = !DILocation(line: 0, scope: !8007)
!8020 = !DILocation(line: 505, column: 2, scope: !8007)
!8021 = !DILocation(line: 507, column: 11, scope: !8018)
!8022 = !DILocation(line: 507, column: 6, scope: !8007)
!8023 = !DILocation(line: 508, column: 28, scope: !8017)
!8024 = !DILocation(line: 0, scope: !8017)
!8025 = !DILocation(line: 510, column: 16, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8017, file: !1142, line: 510, column: 7)
!8027 = !DILocation(line: 0, scope: !8026)
!8028 = !DILocation(line: 510, column: 7, scope: !8017)
!8029 = !DILocation(line: 511, column: 4, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8026, file: !1142, line: 510, column: 32)
!8031 = !DILocation(line: 512, column: 3, scope: !8030)
!8032 = !DILocation(line: 513, column: 4, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8034, file: !1142, line: 512, column: 39)
!8034 = distinct !DILexicalBlock(scope: !8026, file: !1142, line: 512, column: 14)
!8035 = !DILocation(line: 514, column: 3, scope: !8033)
!8036 = !DILocation(line: 518, column: 1, scope: !8007)
!8037 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1414, file: !1414, line: 526, type: !1315, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8038)
!8038 = !{!8039, !8040, !8041}
!8039 = !DILocalVariable(name: "dev", arg: 1, scope: !8037, file: !1414, line: 526, type: !1317)
!8040 = !DILocalVariable(name: "c", arg: 2, scope: !8037, file: !1414, line: 526, type: !932)
!8041 = !DILocalVariable(name: "config", scope: !8037, file: !1414, line: 528, type: !8042)
!8042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!8043 = !DILocation(line: 0, scope: !8037)
!8044 = !DILocation(line: 528, column: 48, scope: !8037)
!8045 = !DILocation(line: 531, column: 40, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8037, file: !1414, line: 531, column: 6)
!8047 = !DILocation(line: 531, column: 6, scope: !8046)
!8048 = !DILocation(line: 531, column: 6, scope: !8037)
!8049 = !DILocation(line: 532, column: 34, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8046, file: !1414, line: 531, column: 48)
!8051 = !DILocation(line: 532, column: 3, scope: !8050)
!8052 = !DILocation(line: 533, column: 2, scope: !8050)
!8053 = !DILocation(line: 539, column: 42, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8037, file: !1414, line: 539, column: 6)
!8055 = !DILocation(line: 539, column: 7, scope: !8054)
!8056 = !DILocation(line: 539, column: 6, scope: !8037)
!8057 = !DILocation(line: 543, column: 52, scope: !8037)
!8058 = !DILocation(line: 543, column: 22, scope: !8037)
!8059 = !DILocation(line: 543, column: 5, scope: !8037)
!8060 = !DILocation(line: 545, column: 2, scope: !8037)
!8061 = !DILocation(line: 546, column: 1, scope: !8037)
!8062 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1414, file: !1414, line: 548, type: !1334, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8063)
!8063 = !{!8064, !8065, !8066, !8067}
!8064 = !DILocalVariable(name: "dev", arg: 1, scope: !8062, file: !1414, line: 548, type: !1317)
!8065 = !DILocalVariable(name: "c", arg: 2, scope: !8062, file: !1414, line: 549, type: !161)
!8066 = !DILocalVariable(name: "config", scope: !8062, file: !1414, line: 551, type: !8042)
!8067 = !DILocalVariable(name: "key", scope: !8062, file: !1414, line: 555, type: !32)
!8068 = !DILocation(line: 0, scope: !8062)
!8069 = !DILocation(line: 551, column: 48, scope: !8062)
!8070 = !DILocation(line: 562, column: 2, scope: !8062)
!8071 = !DILocation(line: 563, column: 41, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !1414, line: 563, column: 7)
!8073 = distinct !DILexicalBlock(scope: !8062, file: !1414, line: 562, column: 12)
!8074 = !DILocation(line: 563, column: 7, scope: !8072)
!8075 = !DILocation(line: 563, column: 7, scope: !8073)
!8076 = !DILocation(line: 55, column: 2, scope: !8077, inlinedAt: !8081)
!8077 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8078)
!8078 = !{!8079, !8080}
!8079 = !DILocalVariable(name: "key", scope: !8077, file: !4724, line: 44, type: !32)
!8080 = !DILocalVariable(name: "tmp", scope: !8077, file: !4724, line: 53, type: !32)
!8081 = distinct !DILocation(line: 564, column: 10, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8072, file: !1414, line: 563, column: 49)
!8083 = !{i64 2327311}
!8084 = !DILocation(line: 0, scope: !8077, inlinedAt: !8081)
!8085 = !DILocation(line: 565, column: 42, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8082, file: !1414, line: 565, column: 8)
!8087 = !DILocation(line: 565, column: 8, scope: !8086)
!8088 = !DILocation(line: 565, column: 8, scope: !8082)
!8089 = !DILocalVariable(name: "key", arg: 1, scope: !8090, file: !4724, line: 84, type: !32)
!8090 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8091)
!8091 = !{!8089}
!8092 = !DILocation(line: 0, scope: !8090, inlinedAt: !8093)
!8093 = distinct !DILocation(line: 568, column: 4, scope: !8082)
!8094 = !DILocation(line: 95, column: 2, scope: !8090, inlinedAt: !8093)
!8095 = !{i64 2328128}
!8096 = !DILocation(line: 569, column: 3, scope: !8082)
!8097 = distinct !{!8097, !8070, !8098}
!8098 = !DILocation(line: 570, column: 2, scope: !8062)
!8099 = !DILocation(line: 592, column: 33, scope: !8062)
!8100 = !DILocation(line: 592, column: 2, scope: !8062)
!8101 = !DILocation(line: 0, scope: !8090, inlinedAt: !8102)
!8102 = distinct !DILocation(line: 593, column: 2, scope: !8062)
!8103 = !DILocation(line: 95, column: 2, scope: !8090, inlinedAt: !8102)
!8104 = !DILocation(line: 594, column: 1, scope: !8062)
!8105 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1414, file: !1414, line: 596, type: !1338, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8106)
!8106 = !{!8107, !8108, !8109}
!8107 = !DILocalVariable(name: "dev", arg: 1, scope: !8105, file: !1414, line: 596, type: !1317)
!8108 = !DILocalVariable(name: "config", scope: !8105, file: !1414, line: 598, type: !8042)
!8109 = !DILocalVariable(name: "err", scope: !8105, file: !1414, line: 599, type: !106)
!8110 = !DILocation(line: 0, scope: !8105)
!8111 = !DILocation(line: 598, column: 48, scope: !8105)
!8112 = !DILocation(line: 606, column: 40, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 606, column: 6)
!8114 = !DILocation(line: 606, column: 6, scope: !8113)
!8115 = !DILocation(line: 606, column: 6, scope: !8105)
!8116 = !DILocation(line: 610, column: 39, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 610, column: 6)
!8118 = !DILocation(line: 610, column: 6, scope: !8117)
!8119 = !DILocation(line: 610, column: 6, scope: !8105)
!8120 = !DILocation(line: 614, column: 39, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 614, column: 6)
!8122 = !DILocation(line: 614, column: 6, scope: !8121)
!8123 = !DILocation(line: 614, column: 6, scope: !8105)
!8124 = !DILocation(line: 619, column: 40, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 619, column: 6)
!8126 = !DILocation(line: 619, column: 6, scope: !8125)
!8127 = !DILocation(line: 619, column: 6, scope: !8105)
!8128 = !DILocation(line: 623, column: 10, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 623, column: 6)
!8130 = !DILocation(line: 623, column: 6, scope: !8105)
!8131 = !DILocation(line: 624, column: 34, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8129, file: !1414, line: 623, column: 24)
!8133 = !DILocation(line: 624, column: 3, scope: !8132)
!8134 = !DILocation(line: 625, column: 2, scope: !8132)
!8135 = !DILocation(line: 632, column: 10, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 632, column: 6)
!8137 = !DILocation(line: 632, column: 6, scope: !8105)
!8138 = !DILocation(line: 633, column: 34, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8136, file: !1414, line: 632, column: 32)
!8140 = !DILocation(line: 633, column: 3, scope: !8139)
!8141 = !DILocation(line: 634, column: 2, scope: !8139)
!8142 = !DILocation(line: 636, column: 10, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 636, column: 6)
!8144 = !DILocation(line: 636, column: 6, scope: !8105)
!8145 = !DILocation(line: 637, column: 33, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8143, file: !1414, line: 636, column: 31)
!8147 = !DILocation(line: 637, column: 3, scope: !8146)
!8148 = !DILocation(line: 638, column: 2, scope: !8146)
!8149 = !DILocation(line: 640, column: 10, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8105, file: !1414, line: 640, column: 6)
!8151 = !DILocation(line: 640, column: 6, scope: !8105)
!8152 = !DILocation(line: 641, column: 33, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !1414, line: 640, column: 32)
!8154 = !DILocation(line: 641, column: 3, scope: !8153)
!8155 = !DILocation(line: 642, column: 2, scope: !8153)
!8156 = !DILocation(line: 646, column: 32, scope: !8105)
!8157 = !DILocation(line: 646, column: 2, scope: !8105)
!8158 = !DILocation(line: 648, column: 2, scope: !8105)
!8159 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1414, file: !1414, line: 419, type: !1342, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8160)
!8160 = !{!8161, !8162, !8163, !8164, !8166, !8167, !8168, !8169}
!8161 = !DILocalVariable(name: "dev", arg: 1, scope: !8159, file: !1414, line: 419, type: !1317)
!8162 = !DILocalVariable(name: "cfg", arg: 2, scope: !8159, file: !1414, line: 420, type: !1344)
!8163 = !DILocalVariable(name: "config", scope: !8159, file: !1414, line: 422, type: !8042)
!8164 = !DILocalVariable(name: "data", scope: !8159, file: !1414, line: 423, type: !8165)
!8165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!8166 = !DILocalVariable(name: "parity", scope: !8159, file: !1414, line: 424, type: !5239)
!8167 = !DILocalVariable(name: "stopbits", scope: !8159, file: !1414, line: 425, type: !5239)
!8168 = !DILocalVariable(name: "databits", scope: !8159, file: !1414, line: 426, type: !5239)
!8169 = !DILocalVariable(name: "flowctrl", scope: !8159, file: !1414, line: 428, type: !5239)
!8170 = !DILocation(line: 0, scope: !8159)
!8171 = !DILocation(line: 422, column: 48, scope: !8159)
!8172 = !DILocation(line: 423, column: 38, scope: !8159)
!8173 = !DILocation(line: 424, column: 56, scope: !8159)
!8174 = !DILocation(line: 424, column: 51, scope: !8159)
!8175 = !DILocation(line: 424, column: 26, scope: !8159)
!8176 = !DILocation(line: 425, column: 60, scope: !8159)
!8177 = !DILocation(line: 425, column: 55, scope: !8159)
!8178 = !DILocation(line: 425, column: 28, scope: !8159)
!8179 = !DILocation(line: 426, column: 60, scope: !8159)
!8180 = !DILocation(line: 426, column: 55, scope: !8159)
!8181 = !DILocation(line: 426, column: 28, scope: !8159)
!8182 = !DILocation(line: 428, column: 58, scope: !8159)
!8183 = !DILocation(line: 428, column: 53, scope: !8159)
!8184 = !DILocation(line: 428, column: 28, scope: !8159)
!8185 = !DILocation(line: 431, column: 44, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 431, column: 6)
!8187 = !DILocation(line: 438, column: 22, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 437, column: 6)
!8189 = !DILocation(line: 437, column: 6, scope: !8159)
!8190 = !DILocation(line: 448, column: 6, scope: !8159)
!8191 = !DILocation(line: 465, column: 47, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 465, column: 6)
!8193 = !DILocation(line: 475, column: 21, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 475, column: 6)
!8195 = !DILocation(line: 475, column: 6, scope: !8159)
!8196 = !DILocation(line: 476, column: 8, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !1414, line: 476, column: 7)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !1414, line: 475, column: 49)
!8199 = !DILocation(line: 477, column: 34, scope: !8197)
!8200 = !DILocation(line: 476, column: 7, scope: !8198)
!8201 = !DILocation(line: 482, column: 27, scope: !8159)
!8202 = !DILocation(line: 482, column: 2, scope: !8159)
!8203 = !DILocation(line: 484, column: 16, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 484, column: 6)
!8205 = !DILocation(line: 484, column: 13, scope: !8204)
!8206 = !DILocation(line: 484, column: 6, scope: !8159)
!8207 = !DILocation(line: 485, column: 3, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8204, file: !1414, line: 484, column: 44)
!8209 = !DILocation(line: 486, column: 2, scope: !8208)
!8210 = !DILocation(line: 488, column: 18, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 488, column: 6)
!8212 = !DILocation(line: 488, column: 15, scope: !8211)
!8213 = !DILocation(line: 488, column: 6, scope: !8159)
!8214 = !DILocation(line: 489, column: 3, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8211, file: !1414, line: 488, column: 48)
!8216 = !DILocation(line: 490, column: 2, scope: !8215)
!8217 = !DILocation(line: 492, column: 18, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 492, column: 6)
!8219 = !DILocation(line: 492, column: 15, scope: !8218)
!8220 = !DILocation(line: 492, column: 6, scope: !8159)
!8221 = !DILocation(line: 493, column: 3, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8218, file: !1414, line: 492, column: 48)
!8223 = !DILocation(line: 494, column: 2, scope: !8222)
!8224 = !DILocation(line: 496, column: 18, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 496, column: 6)
!8226 = !DILocation(line: 496, column: 15, scope: !8225)
!8227 = !DILocation(line: 496, column: 6, scope: !8159)
!8228 = !DILocation(line: 497, column: 3, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8225, file: !1414, line: 496, column: 46)
!8230 = !DILocation(line: 498, column: 2, scope: !8229)
!8231 = !DILocation(line: 500, column: 11, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8159, file: !1414, line: 500, column: 6)
!8233 = !DILocation(line: 500, column: 29, scope: !8232)
!8234 = !DILocation(line: 500, column: 20, scope: !8232)
!8235 = !DILocation(line: 500, column: 6, scope: !8159)
!8236 = !DILocation(line: 501, column: 3, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8232, file: !1414, line: 500, column: 40)
!8238 = !DILocation(line: 502, column: 26, scope: !8237)
!8239 = !DILocation(line: 502, column: 19, scope: !8237)
!8240 = !DILocation(line: 503, column: 2, scope: !8237)
!8241 = !DILocation(line: 505, column: 26, scope: !8159)
!8242 = !DILocation(line: 505, column: 2, scope: !8159)
!8243 = !DILocation(line: 506, column: 2, scope: !8159)
!8244 = !DILocation(line: 507, column: 1, scope: !8159)
!8245 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1414, file: !1414, line: 509, type: !1355, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8246)
!8246 = !{!8247, !8248, !8249}
!8247 = !DILocalVariable(name: "dev", arg: 1, scope: !8245, file: !1414, line: 509, type: !1317)
!8248 = !DILocalVariable(name: "cfg", arg: 2, scope: !8245, file: !1414, line: 510, type: !1357)
!8249 = !DILocalVariable(name: "data", scope: !8245, file: !1414, line: 512, type: !8165)
!8250 = !DILocation(line: 0, scope: !8245)
!8251 = !DILocation(line: 512, column: 38, scope: !8245)
!8252 = !DILocation(line: 514, column: 24, scope: !8245)
!8253 = !DILocation(line: 514, column: 7, scope: !8245)
!8254 = !DILocation(line: 514, column: 16, scope: !8245)
!8255 = !DILocation(line: 515, column: 41, scope: !8245)
!8256 = !{i32 0, i32 1537}
!8257 = !DILocation(line: 515, column: 16, scope: !8245)
!8258 = !DILocation(line: 515, column: 7, scope: !8245)
!8259 = !DILocation(line: 515, column: 14, scope: !8245)
!8260 = !DILocation(line: 517, column: 3, scope: !8245)
!8261 = !{i32 0, i32 12289}
!8262 = !DILocation(line: 516, column: 19, scope: !8245)
!8263 = !DILocation(line: 516, column: 7, scope: !8245)
!8264 = !DILocation(line: 516, column: 17, scope: !8245)
!8265 = !DILocation(line: 519, column: 3, scope: !8245)
!8266 = !DILocation(line: 519, column: 33, scope: !8245)
!8267 = !DILocation(line: 518, column: 19, scope: !8245)
!8268 = !DILocation(line: 518, column: 7, scope: !8245)
!8269 = !DILocation(line: 518, column: 17, scope: !8245)
!8270 = !DILocation(line: 521, column: 3, scope: !8245)
!8271 = !{i32 0, i32 769}
!8272 = !DILocation(line: 520, column: 19, scope: !8245)
!8273 = !DILocation(line: 520, column: 7, scope: !8245)
!8274 = !DILocation(line: 520, column: 17, scope: !8245)
!8275 = !DILocation(line: 522, column: 2, scope: !8245)
!8276 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1414, file: !1414, line: 205, type: !8277, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8279)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{!106, !1317}
!8279 = !{!8280, !8281}
!8280 = !DILocalVariable(name: "dev", arg: 1, scope: !8276, file: !1414, line: 205, type: !1317)
!8281 = !DILocalVariable(name: "config", scope: !8276, file: !1414, line: 207, type: !8042)
!8282 = !DILocation(line: 0, scope: !8276)
!8283 = !DILocation(line: 207, column: 48, scope: !8276)
!8284 = !DILocation(line: 209, column: 36, scope: !8276)
!8285 = !DILocation(line: 209, column: 9, scope: !8276)
!8286 = !DILocation(line: 209, column: 2, scope: !8276)
!8287 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1414, file: !1414, line: 270, type: !8288, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8290)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!1283, !106}
!8290 = !{!8291}
!8291 = !DILocalVariable(name: "parity", arg: 1, scope: !8287, file: !1414, line: 270, type: !106)
!8292 = !DILocation(line: 0, scope: !8287)
!8293 = !DILocation(line: 272, column: 2, scope: !8287)
!8294 = !DILocation(line: 281, column: 1, scope: !8287)
!8295 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1414, file: !1414, line: 220, type: !8277, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8296)
!8296 = !{!8297, !8298}
!8297 = !DILocalVariable(name: "dev", arg: 1, scope: !8295, file: !1414, line: 220, type: !1317)
!8298 = !DILocalVariable(name: "config", scope: !8295, file: !1414, line: 222, type: !8042)
!8299 = !DILocation(line: 0, scope: !8295)
!8300 = !DILocation(line: 222, column: 48, scope: !8295)
!8301 = !DILocation(line: 224, column: 44, scope: !8295)
!8302 = !DILocation(line: 224, column: 9, scope: !8295)
!8303 = !DILocation(line: 224, column: 2, scope: !8295)
!8304 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1414, file: !1414, line: 304, type: !8305, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8307)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{!1297, !106}
!8307 = !{!8308}
!8308 = !DILocalVariable(name: "sb", arg: 1, scope: !8304, file: !1414, line: 304, type: !106)
!8309 = !DILocation(line: 0, scope: !8304)
!8310 = !DILocation(line: 306, column: 2, scope: !8304)
!8311 = !DILocation(line: 0, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8304, file: !1414, line: 306, column: 14)
!8313 = !DILocation(line: 323, column: 1, scope: !8304)
!8314 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1414, file: !1414, line: 235, type: !8277, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8315)
!8315 = !{!8316, !8317}
!8316 = !DILocalVariable(name: "dev", arg: 1, scope: !8314, file: !1414, line: 235, type: !1317)
!8317 = !DILocalVariable(name: "config", scope: !8314, file: !1414, line: 237, type: !8042)
!8318 = !DILocation(line: 0, scope: !8314)
!8319 = !DILocation(line: 237, column: 48, scope: !8314)
!8320 = !DILocation(line: 239, column: 39, scope: !8314)
!8321 = !DILocation(line: 239, column: 9, scope: !8314)
!8322 = !DILocation(line: 239, column: 2, scope: !8314)
!8323 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1414, file: !1414, line: 355, type: !8324, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8326)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!1290, !106, !106}
!8326 = !{!8327, !8328}
!8327 = !DILocalVariable(name: "db", arg: 1, scope: !8323, file: !1414, line: 355, type: !106)
!8328 = !DILocalVariable(name: "p", arg: 2, scope: !8323, file: !1414, line: 356, type: !106)
!8329 = !DILocation(line: 0, scope: !8323)
!8330 = !DILocation(line: 358, column: 2, scope: !8323)
!8331 = !DILocation(line: 384, column: 1, scope: !8323)
!8332 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1414, file: !1414, line: 250, type: !8277, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8333)
!8333 = !{!8334, !8335}
!8334 = !DILocalVariable(name: "dev", arg: 1, scope: !8332, file: !1414, line: 250, type: !1317)
!8335 = !DILocalVariable(name: "config", scope: !8332, file: !1414, line: 252, type: !8042)
!8336 = !DILocation(line: 0, scope: !8332)
!8337 = !DILocation(line: 252, column: 48, scope: !8332)
!8338 = !DILocation(line: 254, column: 40, scope: !8332)
!8339 = !DILocation(line: 254, column: 9, scope: !8332)
!8340 = !DILocation(line: 254, column: 2, scope: !8332)
!8341 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1414, file: !1414, line: 409, type: !8342, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8344)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!1303, !106}
!8344 = !{!8345}
!8345 = !DILocalVariable(name: "fc", arg: 1, scope: !8341, file: !1414, line: 409, type: !106)
!8346 = !DILocation(line: 0, scope: !8341)
!8347 = !DILocation(line: 411, column: 9, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8341, file: !1414, line: 411, column: 6)
!8349 = !DILocation(line: 416, column: 1, scope: !8341)
!8350 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8351, file: !8351, line: 967, type: !8352, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8354)
!8351 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8352 = !DISubroutineType(types: !8353)
!8353 = !{!106, !1358}
!8354 = !{!8355}
!8355 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8350, file: !8351, line: 967, type: !1358)
!8356 = !DILocation(line: 0, scope: !8350)
!8357 = !DILocation(line: 969, column: 21, scope: !8350)
!8358 = !DILocation(line: 969, column: 3, scope: !8350)
!8359 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8351, file: !8351, line: 601, type: !8352, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8360)
!8360 = !{!8361}
!8361 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8359, file: !8351, line: 601, type: !1358)
!8362 = !DILocation(line: 0, scope: !8359)
!8363 = !DILocation(line: 603, column: 21, scope: !8359)
!8364 = !DILocation(line: 603, column: 3, scope: !8359)
!8365 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8351, file: !8351, line: 820, type: !8352, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8366)
!8366 = !{!8367}
!8367 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8365, file: !8351, line: 820, type: !1358)
!8368 = !DILocation(line: 0, scope: !8365)
!8369 = !DILocation(line: 822, column: 21, scope: !8365)
!8370 = !DILocation(line: 822, column: 3, scope: !8365)
!8371 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8351, file: !8351, line: 547, type: !8352, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8372)
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8371, file: !8351, line: 547, type: !1358)
!8374 = !DILocation(line: 0, scope: !8371)
!8375 = !DILocation(line: 549, column: 21, scope: !8371)
!8376 = !DILocation(line: 549, column: 3, scope: !8371)
!8377 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1414, file: !1414, line: 257, type: !8378, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8380)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!106, !1283}
!8380 = !{!8381}
!8381 = !DILocalVariable(name: "parity", arg: 1, scope: !8377, file: !1414, line: 257, type: !1283)
!8382 = !DILocation(line: 0, scope: !8377)
!8383 = !DILocation(line: 259, column: 2, scope: !8377)
!8384 = !DILocation(line: 268, column: 1, scope: !8377)
!8385 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1414, file: !1414, line: 283, type: !8386, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8388)
!8386 = !DISubroutineType(types: !8387)
!8387 = !{!106, !1297}
!8388 = !{!8389}
!8389 = !DILocalVariable(name: "sb", arg: 1, scope: !8385, file: !1414, line: 283, type: !1297)
!8390 = !DILocation(line: 0, scope: !8385)
!8391 = !DILocation(line: 285, column: 2, scope: !8385)
!8392 = !DILocation(line: 0, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8385, file: !1414, line: 285, column: 14)
!8394 = !DILocation(line: 302, column: 1, scope: !8385)
!8395 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1414, file: !1414, line: 325, type: !8396, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8398)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{!106, !1290, !1283}
!8398 = !{!8399, !8400}
!8399 = !DILocalVariable(name: "db", arg: 1, scope: !8395, file: !1414, line: 325, type: !1290)
!8400 = !DILocalVariable(name: "p", arg: 2, scope: !8395, file: !1414, line: 326, type: !1283)
!8401 = !DILocation(line: 0, scope: !8395)
!8402 = !DILocation(line: 328, column: 2, scope: !8395)
!8403 = !DILocation(line: 353, column: 1, scope: !8395)
!8404 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1414, file: !1414, line: 393, type: !8405, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8407)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!106, !1303}
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "fc", arg: 1, scope: !8404, file: !1414, line: 393, type: !1303)
!8409 = !DILocation(line: 0, scope: !8404)
!8410 = !DILocation(line: 395, column: 9, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8404, file: !1414, line: 395, column: 6)
!8412 = !DILocation(line: 400, column: 1, scope: !8404)
!8413 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8351, file: !8351, line: 424, type: !8414, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8416)
!8414 = !DISubroutineType(types: !8415)
!8415 = !{null, !1358}
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8413, file: !8351, line: 424, type: !1358)
!8418 = !DILocation(line: 0, scope: !8413)
!8419 = !DILocation(line: 426, column: 3, scope: !8413)
!8420 = !DILocation(line: 427, column: 1, scope: !8413)
!8421 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1414, file: !1414, line: 197, type: !8422, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8424)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{null, !1317, !106}
!8424 = !{!8425, !8426, !8427}
!8425 = !DILocalVariable(name: "dev", arg: 1, scope: !8421, file: !1414, line: 197, type: !1317)
!8426 = !DILocalVariable(name: "parity", arg: 2, scope: !8421, file: !1414, line: 198, type: !106)
!8427 = !DILocalVariable(name: "config", scope: !8421, file: !1414, line: 200, type: !8042)
!8428 = !DILocation(line: 0, scope: !8421)
!8429 = !DILocation(line: 200, column: 48, scope: !8421)
!8430 = !DILocation(line: 202, column: 29, scope: !8421)
!8431 = !DILocation(line: 202, column: 2, scope: !8421)
!8432 = !DILocation(line: 203, column: 1, scope: !8421)
!8433 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1414, file: !1414, line: 212, type: !8422, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8434)
!8434 = !{!8435, !8436, !8437}
!8435 = !DILocalVariable(name: "dev", arg: 1, scope: !8433, file: !1414, line: 212, type: !1317)
!8436 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8433, file: !1414, line: 213, type: !106)
!8437 = !DILocalVariable(name: "config", scope: !8433, file: !1414, line: 215, type: !8042)
!8438 = !DILocation(line: 0, scope: !8433)
!8439 = !DILocation(line: 215, column: 48, scope: !8433)
!8440 = !DILocation(line: 217, column: 37, scope: !8433)
!8441 = !DILocation(line: 217, column: 2, scope: !8433)
!8442 = !DILocation(line: 218, column: 1, scope: !8433)
!8443 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1414, file: !1414, line: 227, type: !8422, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8444)
!8444 = !{!8445, !8446, !8447}
!8445 = !DILocalVariable(name: "dev", arg: 1, scope: !8443, file: !1414, line: 227, type: !1317)
!8446 = !DILocalVariable(name: "databits", arg: 2, scope: !8443, file: !1414, line: 228, type: !106)
!8447 = !DILocalVariable(name: "config", scope: !8443, file: !1414, line: 230, type: !8042)
!8448 = !DILocation(line: 0, scope: !8443)
!8449 = !DILocation(line: 230, column: 48, scope: !8443)
!8450 = !DILocation(line: 232, column: 32, scope: !8443)
!8451 = !DILocation(line: 232, column: 2, scope: !8443)
!8452 = !DILocation(line: 233, column: 1, scope: !8443)
!8453 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1414, file: !1414, line: 242, type: !8422, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8454)
!8454 = !{!8455, !8456, !8457}
!8455 = !DILocalVariable(name: "dev", arg: 1, scope: !8453, file: !1414, line: 242, type: !1317)
!8456 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8453, file: !1414, line: 243, type: !106)
!8457 = !DILocalVariable(name: "config", scope: !8453, file: !1414, line: 245, type: !8042)
!8458 = !DILocation(line: 0, scope: !8453)
!8459 = !DILocation(line: 245, column: 48, scope: !8453)
!8460 = !DILocation(line: 247, column: 33, scope: !8453)
!8461 = !DILocation(line: 247, column: 2, scope: !8453)
!8462 = !DILocation(line: 248, column: 1, scope: !8453)
!8463 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1414, file: !1414, line: 107, type: !8422, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8464)
!8464 = !{!8465, !8466, !8467, !8468, !8469}
!8465 = !DILocalVariable(name: "dev", arg: 1, scope: !8463, file: !1414, line: 107, type: !1317)
!8466 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8463, file: !1414, line: 107, type: !106)
!8467 = !DILocalVariable(name: "config", scope: !8463, file: !1414, line: 109, type: !8042)
!8468 = !DILocalVariable(name: "data", scope: !8463, file: !1414, line: 110, type: !8165)
!8469 = !DILocalVariable(name: "clock_rate", scope: !8463, file: !1414, line: 112, type: !106)
!8470 = !DILocation(line: 0, scope: !8463)
!8471 = !DILocation(line: 109, column: 48, scope: !8463)
!8472 = !DILocation(line: 110, column: 38, scope: !8463)
!8473 = !DILocation(line: 112, column: 2, scope: !8463)
!8474 = !DILocation(line: 123, column: 36, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !1414, line: 123, column: 7)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !1414, line: 122, column: 9)
!8477 = distinct !DILexicalBlock(scope: !8463, file: !1414, line: 115, column: 6)
!8478 = !DILocation(line: 124, column: 42, scope: !8475)
!8479 = !DILocation(line: 123, column: 7, scope: !8475)
!8480 = !DILocation(line: 125, column: 22, scope: !8475)
!8481 = !DILocation(line: 123, column: 7, scope: !8476)
!8482 = !DILocation(line: 176, column: 36, scope: !8463)
!8483 = !DILocation(line: 176, column: 3, scope: !8463)
!8484 = !DILocation(line: 179, column: 32, scope: !8463)
!8485 = !DILocation(line: 180, column: 10, scope: !8463)
!8486 = !DILocation(line: 179, column: 3, scope: !8463)
!8487 = !DILocation(line: 195, column: 1, scope: !8463)
!8488 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8351, file: !8351, line: 410, type: !8414, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8489)
!8489 = !{!8490}
!8490 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8488, file: !8351, line: 410, type: !1358)
!8491 = !DILocation(line: 0, scope: !8488)
!8492 = !DILocation(line: 412, column: 3, scope: !8488)
!8493 = !DILocation(line: 413, column: 1, scope: !8488)
!8494 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !221, file: !221, line: 216, type: !1391, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8495)
!8495 = !{!8496, !8497, !8498, !8499}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8494, file: !221, line: 216, type: !1317)
!8497 = !DILocalVariable(name: "sys", arg: 2, scope: !8494, file: !221, line: 217, type: !229)
!8498 = !DILocalVariable(name: "rate", arg: 3, scope: !8494, file: !221, line: 218, type: !269)
!8499 = !DILocalVariable(name: "api", scope: !8494, file: !221, line: 220, type: !1369)
!8500 = !DILocation(line: 0, scope: !8494)
!8501 = !DILocation(line: 221, column: 49, scope: !8494)
!8502 = !DILocation(line: 223, column: 11, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8494, file: !221, line: 223, column: 6)
!8504 = !DILocation(line: 223, column: 20, scope: !8503)
!8505 = !DILocation(line: 223, column: 6, scope: !8494)
!8506 = !DILocation(line: 227, column: 9, scope: !8494)
!8507 = !DILocation(line: 227, column: 2, scope: !8494)
!8508 = !DILocation(line: 228, column: 1, scope: !8494)
!8509 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8351, file: !8351, line: 615, type: !8510, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8512)
!8510 = !DISubroutineType(types: !8511)
!8511 = !{null, !1358, !106}
!8512 = !{!8513, !8514}
!8513 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8509, file: !8351, line: 615, type: !1358)
!8514 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8509, file: !8351, line: 615, type: !106)
!8515 = !DILocation(line: 0, scope: !8509)
!8516 = !DILocation(line: 617, column: 3, scope: !8509)
!8517 = !DILocation(line: 618, column: 1, scope: !8509)
!8518 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8351, file: !8351, line: 1020, type: !8519, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8521)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{null, !1358, !106, !106, !106}
!8521 = !{!8522, !8523, !8524, !8525}
!8522 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8518, file: !8351, line: 1020, type: !1358)
!8523 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8518, file: !8351, line: 1020, type: !106)
!8524 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8518, file: !8351, line: 1020, type: !106)
!8525 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8518, file: !8351, line: 1021, type: !106)
!8526 = !DILocation(line: 0, scope: !8518)
!8527 = !DILocation(line: 1029, column: 30, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !8351, line: 1028, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8518, file: !8351, line: 1023, column: 7)
!8530 = !DILocation(line: 1029, column: 19, scope: !8528)
!8531 = !DILocation(line: 1029, column: 13, scope: !8528)
!8532 = !DILocation(line: 1029, column: 17, scope: !8528)
!8533 = !DILocation(line: 1031, column: 1, scope: !8518)
!8534 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8351, file: !8351, line: 949, type: !8510, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8535)
!8535 = !{!8536, !8537}
!8536 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8534, file: !8351, line: 949, type: !1358)
!8537 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8534, file: !8351, line: 949, type: !106)
!8538 = !DILocation(line: 0, scope: !8534)
!8539 = !DILocation(line: 951, column: 3, scope: !8534)
!8540 = !DILocation(line: 952, column: 1, scope: !8534)
!8541 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8351, file: !8351, line: 588, type: !8510, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8542)
!8542 = !{!8543, !8544}
!8543 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8541, file: !8351, line: 588, type: !1358)
!8544 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8541, file: !8351, line: 588, type: !106)
!8545 = !DILocation(line: 0, scope: !8541)
!8546 = !DILocation(line: 590, column: 3, scope: !8541)
!8547 = !DILocation(line: 591, column: 1, scope: !8541)
!8548 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8351, file: !8351, line: 805, type: !8510, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8549)
!8549 = !{!8550, !8551}
!8550 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8548, file: !8351, line: 805, type: !1358)
!8551 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8548, file: !8351, line: 805, type: !106)
!8552 = !DILocation(line: 0, scope: !8548)
!8553 = !DILocation(line: 807, column: 3, scope: !8548)
!8554 = !DILocation(line: 808, column: 1, scope: !8548)
!8555 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8351, file: !8351, line: 532, type: !8510, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8556)
!8556 = !{!8557, !8558}
!8557 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8555, file: !8351, line: 532, type: !1358)
!8558 = !DILocalVariable(name: "Parity", arg: 2, scope: !8555, file: !8351, line: 532, type: !106)
!8559 = !DILocation(line: 0, scope: !8555)
!8560 = !DILocation(line: 534, column: 3, scope: !8555)
!8561 = !DILocation(line: 535, column: 1, scope: !8555)
!8562 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8351, file: !8351, line: 1770, type: !8352, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8563)
!8563 = !{!8564}
!8564 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8562, file: !8351, line: 1770, type: !1358)
!8565 = !DILocation(line: 0, scope: !8562)
!8566 = !DILocation(line: 1772, column: 11, scope: !8562)
!8567 = !DILocation(line: 1772, column: 46, scope: !8562)
!8568 = !DILocation(line: 1772, column: 3, scope: !8562)
!8569 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8351, file: !8351, line: 1737, type: !8352, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8570)
!8570 = !{!8571}
!8571 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8569, file: !8351, line: 1737, type: !1358)
!8572 = !DILocation(line: 0, scope: !8569)
!8573 = !DILocation(line: 1739, column: 11, scope: !8569)
!8574 = !DILocation(line: 1739, column: 3, scope: !8569)
!8575 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8351, file: !8351, line: 1748, type: !8352, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8576)
!8576 = !{!8577}
!8577 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8575, file: !8351, line: 1748, type: !1358)
!8578 = !DILocation(line: 0, scope: !8575)
!8579 = !DILocation(line: 1750, column: 11, scope: !8575)
!8580 = !DILocation(line: 1750, column: 45, scope: !8575)
!8581 = !DILocation(line: 1750, column: 3, scope: !8575)
!8582 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8351, file: !8351, line: 1827, type: !8352, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8583)
!8583 = !{!8584}
!8584 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8582, file: !8351, line: 1827, type: !1358)
!8585 = !DILocation(line: 0, scope: !8582)
!8586 = !DILocation(line: 1829, column: 11, scope: !8582)
!8587 = !DILocation(line: 1829, column: 46, scope: !8582)
!8588 = !DILocation(line: 1829, column: 3, scope: !8582)
!8589 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8351, file: !8351, line: 1992, type: !8414, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8590)
!8590 = !{!8591}
!8591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8589, file: !8351, line: 1992, type: !1358)
!8592 = !DILocation(line: 0, scope: !8589)
!8593 = !DILocation(line: 1994, column: 3, scope: !8589)
!8594 = !DILocation(line: 1995, column: 1, scope: !8589)
!8595 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8351, file: !8351, line: 1934, type: !8414, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8596)
!8596 = !{!8597, !8598}
!8597 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8595, file: !8351, line: 1934, type: !1358)
!8598 = !DILocalVariable(name: "tmpreg", scope: !8595, file: !8351, line: 1936, type: !127)
!8599 = !DILocation(line: 0, scope: !8595)
!8600 = !DILocation(line: 1936, column: 3, scope: !8595)
!8601 = !DILocation(line: 1936, column: 17, scope: !8595)
!8602 = !DILocation(line: 1937, column: 20, scope: !8595)
!8603 = !DILocation(line: 1937, column: 10, scope: !8595)
!8604 = !DILocation(line: 1938, column: 10, scope: !8595)
!8605 = !DILocation(line: 1939, column: 20, scope: !8595)
!8606 = !DILocation(line: 1939, column: 10, scope: !8595)
!8607 = !DILocation(line: 1940, column: 10, scope: !8595)
!8608 = !DILocation(line: 1941, column: 1, scope: !8595)
!8609 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8351, file: !8351, line: 1877, type: !8414, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8610)
!8610 = !{!8611, !8612}
!8611 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8609, file: !8351, line: 1877, type: !1358)
!8612 = !DILocalVariable(name: "tmpreg", scope: !8609, file: !8351, line: 1879, type: !127)
!8613 = !DILocation(line: 0, scope: !8609)
!8614 = !DILocation(line: 1879, column: 3, scope: !8609)
!8615 = !DILocation(line: 1879, column: 17, scope: !8609)
!8616 = !DILocation(line: 1880, column: 20, scope: !8609)
!8617 = !DILocation(line: 1880, column: 10, scope: !8609)
!8618 = !DILocation(line: 1881, column: 10, scope: !8609)
!8619 = !DILocation(line: 1882, column: 20, scope: !8609)
!8620 = !DILocation(line: 1882, column: 10, scope: !8609)
!8621 = !DILocation(line: 1883, column: 10, scope: !8609)
!8622 = !DILocation(line: 1884, column: 1, scope: !8609)
!8623 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8351, file: !8351, line: 1896, type: !8414, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8624)
!8624 = !{!8625, !8626}
!8625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8623, file: !8351, line: 1896, type: !1358)
!8626 = !DILocalVariable(name: "tmpreg", scope: !8623, file: !8351, line: 1898, type: !127)
!8627 = !DILocation(line: 0, scope: !8623)
!8628 = !DILocation(line: 1898, column: 3, scope: !8623)
!8629 = !DILocation(line: 1898, column: 17, scope: !8623)
!8630 = !DILocation(line: 1899, column: 20, scope: !8623)
!8631 = !DILocation(line: 1899, column: 10, scope: !8623)
!8632 = !DILocation(line: 1900, column: 10, scope: !8623)
!8633 = !DILocation(line: 1901, column: 20, scope: !8623)
!8634 = !DILocation(line: 1901, column: 10, scope: !8623)
!8635 = !DILocation(line: 1902, column: 10, scope: !8623)
!8636 = !DILocation(line: 1903, column: 1, scope: !8623)
!8637 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8351, file: !8351, line: 1915, type: !8414, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8638)
!8638 = !{!8639, !8640}
!8639 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8637, file: !8351, line: 1915, type: !1358)
!8640 = !DILocalVariable(name: "tmpreg", scope: !8637, file: !8351, line: 1917, type: !127)
!8641 = !DILocation(line: 0, scope: !8637)
!8642 = !DILocation(line: 1917, column: 3, scope: !8637)
!8643 = !DILocation(line: 1917, column: 17, scope: !8637)
!8644 = !DILocation(line: 1918, column: 20, scope: !8637)
!8645 = !DILocation(line: 1918, column: 10, scope: !8637)
!8646 = !DILocation(line: 1919, column: 10, scope: !8637)
!8647 = !DILocation(line: 1920, column: 20, scope: !8637)
!8648 = !DILocation(line: 1920, column: 10, scope: !8637)
!8649 = !DILocation(line: 1921, column: 10, scope: !8637)
!8650 = !DILocation(line: 1922, column: 1, scope: !8637)
!8651 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8351, file: !8351, line: 1814, type: !8352, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8652)
!8652 = !{!8653}
!8653 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8651, file: !8351, line: 1814, type: !1358)
!8654 = !DILocation(line: 0, scope: !8651)
!8655 = !DILocation(line: 1816, column: 11, scope: !8651)
!8656 = !DILocation(line: 1816, column: 46, scope: !8651)
!8657 = !DILocation(line: 1816, column: 3, scope: !8651)
!8658 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8351, file: !8351, line: 2426, type: !8659, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8661)
!8659 = !DISubroutineType(types: !8660)
!8660 = !{null, !1358, !160}
!8661 = !{!8662, !8663}
!8662 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8658, file: !8351, line: 2426, type: !1358)
!8663 = !DILocalVariable(name: "Value", arg: 2, scope: !8658, file: !8351, line: 2426, type: !160)
!8664 = !DILocation(line: 0, scope: !8658)
!8665 = !DILocation(line: 2428, column: 16, scope: !8658)
!8666 = !DILocation(line: 2428, column: 11, scope: !8658)
!8667 = !DILocation(line: 2428, column: 14, scope: !8658)
!8668 = !DILocation(line: 2429, column: 1, scope: !8658)
!8669 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8351, file: !8351, line: 1792, type: !8352, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8670)
!8670 = !{!8671}
!8671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8669, file: !8351, line: 1792, type: !1358)
!8672 = !DILocation(line: 0, scope: !8669)
!8673 = !DILocation(line: 1794, column: 11, scope: !8669)
!8674 = !DILocation(line: 1794, column: 47, scope: !8669)
!8675 = !DILocation(line: 1794, column: 3, scope: !8669)
!8676 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8351, file: !8351, line: 2403, type: !8677, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8679)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!160, !1358}
!8679 = !{!8680}
!8680 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8676, file: !8351, line: 2403, type: !1358)
!8681 = !DILocation(line: 0, scope: !8676)
!8682 = !DILocation(line: 2405, column: 20, scope: !8676)
!8683 = !DILocation(line: 2405, column: 10, scope: !8676)
!8684 = !DILocation(line: 2405, column: 3, scope: !8676)
!8685 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1414, file: !1414, line: 1583, type: !1338, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8686)
!8686 = !{!8687, !8688, !8689, !8690, !8691, !8692}
!8687 = !DILocalVariable(name: "dev", arg: 1, scope: !8685, file: !1414, line: 1583, type: !1317)
!8688 = !DILocalVariable(name: "config", scope: !8685, file: !1414, line: 1585, type: !8042)
!8689 = !DILocalVariable(name: "data", scope: !8685, file: !1414, line: 1586, type: !8165)
!8690 = !DILocalVariable(name: "ll_parity", scope: !8685, file: !1414, line: 1587, type: !106)
!8691 = !DILocalVariable(name: "ll_datawidth", scope: !8685, file: !1414, line: 1588, type: !106)
!8692 = !DILocalVariable(name: "err", scope: !8685, file: !1414, line: 1589, type: !103)
!8693 = !DILocation(line: 0, scope: !8685)
!8694 = !DILocation(line: 1585, column: 48, scope: !8685)
!8695 = !DILocation(line: 1586, column: 38, scope: !8685)
!8696 = !DILocation(line: 1591, column: 2, scope: !8685)
!8697 = !DILocation(line: 1593, column: 29, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8685, file: !1414, line: 1593, column: 6)
!8699 = !DILocation(line: 1593, column: 7, scope: !8698)
!8700 = !DILocation(line: 1593, column: 6, scope: !8685)
!8701 = !DILocation(line: 1599, column: 31, scope: !8685)
!8702 = !DILocation(line: 1599, column: 71, scope: !8685)
!8703 = !DILocation(line: 1599, column: 8, scope: !8685)
!8704 = !DILocation(line: 1600, column: 10, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8685, file: !1414, line: 1600, column: 6)
!8706 = !DILocation(line: 1600, column: 6, scope: !8685)
!8707 = !DILocation(line: 1616, column: 36, scope: !8685)
!8708 = !DILocation(line: 1616, column: 8, scope: !8685)
!8709 = !DILocation(line: 1617, column: 10, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8685, file: !1414, line: 1617, column: 6)
!8711 = !DILocation(line: 1617, column: 6, scope: !8685)
!8712 = !DILocation(line: 1621, column: 27, scope: !8685)
!8713 = !DILocation(line: 1621, column: 2, scope: !8685)
!8714 = !DILocation(line: 1624, column: 40, scope: !8685)
!8715 = !DILocation(line: 1624, column: 2, scope: !8685)
!8716 = !DILocation(line: 1630, column: 14, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8685, file: !1414, line: 1630, column: 6)
!8718 = !DILocation(line: 1630, column: 6, scope: !8685)
!8719 = !DILocation(line: 1638, column: 2, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !1414, line: 1634, column: 34)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !1414, line: 1634, column: 13)
!8722 = !DILocation(line: 0, scope: !8717)
!8723 = !DILocation(line: 1649, column: 35, scope: !8685)
!8724 = !DILocation(line: 1649, column: 2, scope: !8685)
!8725 = !DILocation(line: 1654, column: 14, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8685, file: !1414, line: 1654, column: 6)
!8727 = !DILocation(line: 1654, column: 6, scope: !8685)
!8728 = !DILocation(line: 1655, column: 3, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8726, file: !1414, line: 1654, column: 31)
!8730 = !DILocation(line: 1656, column: 2, scope: !8729)
!8731 = !DILocation(line: 1659, column: 37, scope: !8685)
!8732 = !DILocation(line: 1659, column: 2, scope: !8685)
!8733 = !DILocation(line: 1662, column: 14, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8685, file: !1414, line: 1662, column: 6)
!8735 = !DILocation(line: 1662, column: 6, scope: !8685)
!8736 = !DILocation(line: 1663, column: 37, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8734, file: !1414, line: 1662, column: 27)
!8738 = !DILocation(line: 1663, column: 3, scope: !8737)
!8739 = !DILocation(line: 1664, column: 2, scope: !8737)
!8740 = !DILocation(line: 1684, column: 26, scope: !8685)
!8741 = !DILocation(line: 1684, column: 2, scope: !8685)
!8742 = !DILocation(line: 1722, column: 2, scope: !8685)
!8743 = !DILocation(line: 1724, column: 1, scope: !8685)
!8744 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1414, file: !1414, line: 651, type: !8745, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8747)
!8745 = !DISubroutineType(types: !8746)
!8746 = !{null, !1317}
!8747 = !{!8748, !8749, !8750}
!8748 = !DILocalVariable(name: "dev", arg: 1, scope: !8744, file: !1414, line: 651, type: !1317)
!8749 = !DILocalVariable(name: "data", scope: !8744, file: !1414, line: 653, type: !8165)
!8750 = !DILocalVariable(name: "clk", scope: !8744, file: !1414, line: 654, type: !8751)
!8751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!8752 = !DILocation(line: 0, scope: !8744)
!8753 = !DILocation(line: 653, column: 38, scope: !8744)
!8754 = !DILocation(line: 656, column: 8, scope: !8744)
!8755 = !DILocation(line: 656, column: 14, scope: !8744)
!8756 = !DILocation(line: 657, column: 1, scope: !8744)
!8757 = distinct !DISubprogram(name: "device_is_ready", scope: !4782, file: !4782, line: 47, type: !8758, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8760)
!8758 = !DISubroutineType(types: !8759)
!8759 = !{!163, !1317}
!8760 = !{!8761}
!8761 = !DILocalVariable(name: "dev", arg: 1, scope: !8757, file: !4782, line: 47, type: !1317)
!8762 = !DILocation(line: 0, scope: !8757)
!8763 = !DILocation(line: 55, column: 2, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8757, file: !4782, line: 55, column: 2)
!8765 = !{i64 2155368749}
!8766 = !DILocation(line: 56, column: 9, scope: !8757)
!8767 = !DILocation(line: 56, column: 2, scope: !8757)
!8768 = distinct !DISubprogram(name: "clock_control_on", scope: !221, file: !221, line: 123, type: !1376, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8769)
!8769 = !{!8770, !8771, !8772}
!8770 = !DILocalVariable(name: "dev", arg: 1, scope: !8768, file: !221, line: 123, type: !1317)
!8771 = !DILocalVariable(name: "sys", arg: 2, scope: !8768, file: !221, line: 124, type: !229)
!8772 = !DILocalVariable(name: "api", scope: !8768, file: !221, line: 126, type: !1369)
!8773 = !DILocation(line: 0, scope: !8768)
!8774 = !DILocation(line: 127, column: 49, scope: !8768)
!8775 = !DILocation(line: 129, column: 14, scope: !8768)
!8776 = !DILocation(line: 129, column: 9, scope: !8768)
!8777 = !DILocation(line: 129, column: 2, scope: !8768)
!8778 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1465, file: !1465, line: 342, type: !8779, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8781)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{!103, !1515, !160}
!8781 = !{!8782, !8783, !8784, !8785}
!8782 = !DILocalVariable(name: "config", arg: 1, scope: !8778, file: !1465, line: 342, type: !1515)
!8783 = !DILocalVariable(name: "id", arg: 2, scope: !8778, file: !1465, line: 343, type: !160)
!8784 = !DILocalVariable(name: "ret", scope: !8778, file: !1465, line: 345, type: !103)
!8785 = !DILocalVariable(name: "state", scope: !8778, file: !1465, line: 346, type: !1468)
!8786 = !DILocation(line: 0, scope: !8778)
!8787 = !DILocation(line: 346, column: 2, scope: !8778)
!8788 = !DILocation(line: 348, column: 8, scope: !8778)
!8789 = !DILocation(line: 349, column: 10, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8778, file: !1465, line: 349, column: 6)
!8791 = !DILocation(line: 349, column: 6, scope: !8778)
!8792 = !DILocation(line: 353, column: 44, scope: !8778)
!8793 = !DILocation(line: 353, column: 9, scope: !8778)
!8794 = !DILocation(line: 353, column: 2, scope: !8778)
!8795 = !DILocation(line: 354, column: 1, scope: !8778)
!8796 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8351, file: !8351, line: 497, type: !8510, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8797)
!8797 = !{!8798, !8799, !8800}
!8798 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8796, file: !8351, line: 497, type: !1358)
!8799 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8796, file: !8351, line: 497, type: !106)
!8800 = !DILocalVariable(name: "val", scope: !8801, file: !8351, line: 499, type: !106)
!8801 = distinct !DILexicalBlock(scope: !8796, file: !8351, line: 499, column: 3)
!8802 = !DILocation(line: 0, scope: !8796)
!8803 = !DILocation(line: 499, column: 3, scope: !8801)
!8804 = !DILocalVariable(name: "addr", arg: 1, scope: !8805, file: !4973, line: 476, type: !1410)
!8805 = distinct !DISubprogram(name: "__LDREXW", scope: !4973, file: !4973, line: 476, type: !8806, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!106, !1410}
!8808 = !{!8804, !8809}
!8809 = !DILocalVariable(name: "result", scope: !8805, file: !4973, line: 478, type: !106)
!8810 = !DILocation(line: 0, scope: !8805, inlinedAt: !8811)
!8811 = distinct !DILocation(line: 499, column: 3, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8801, file: !8351, line: 499, column: 3)
!8813 = !DILocation(line: 480, column: 4, scope: !8805, inlinedAt: !8811)
!8814 = !{i64 3758068}
!8815 = !DILocation(line: 499, column: 3, scope: !8812)
!8816 = !DILocation(line: 0, scope: !8801)
!8817 = !DILocalVariable(name: "value", arg: 1, scope: !8818, file: !4973, line: 527, type: !106)
!8818 = distinct !DISubprogram(name: "__STREXW", scope: !4973, file: !4973, line: 527, type: !8819, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8821)
!8819 = !DISubroutineType(types: !8820)
!8820 = !{!106, !106, !1410}
!8821 = !{!8817, !8822, !8823}
!8822 = !DILocalVariable(name: "addr", arg: 2, scope: !8818, file: !4973, line: 527, type: !1410)
!8823 = !DILocalVariable(name: "result", scope: !8818, file: !4973, line: 529, type: !106)
!8824 = !DILocation(line: 0, scope: !8818, inlinedAt: !8825)
!8825 = distinct !DILocation(line: 499, column: 3, scope: !8801)
!8826 = !DILocation(line: 531, column: 4, scope: !8818, inlinedAt: !8825)
!8827 = !{i64 3759504}
!8828 = distinct !{!8828, !8803, !8803}
!8829 = !DILocation(line: 500, column: 1, scope: !8796)
!8830 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8351, file: !8351, line: 850, type: !8519, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8831)
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8830, file: !8351, line: 850, type: !1358)
!8833 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8830, file: !8351, line: 850, type: !106)
!8834 = !DILocalVariable(name: "Parity", arg: 3, scope: !8830, file: !8351, line: 850, type: !106)
!8835 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8830, file: !8351, line: 851, type: !106)
!8836 = !DILocation(line: 0, scope: !8830)
!8837 = !DILocation(line: 853, column: 3, scope: !8830)
!8838 = !DILocation(line: 854, column: 3, scope: !8830)
!8839 = !DILocation(line: 855, column: 1, scope: !8830)
!8840 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8351, file: !8351, line: 1337, type: !8414, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8841)
!8841 = !{!8842}
!8842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8840, file: !8351, line: 1337, type: !1358)
!8843 = !DILocation(line: 0, scope: !8840)
!8844 = !DILocation(line: 1339, column: 3, scope: !8840)
!8845 = !DILocation(line: 1340, column: 1, scope: !8840)
!8846 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1465, file: !1465, line: 316, type: !8847, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8849)
!8847 = !DISubroutineType(types: !8848)
!8848 = !{!103, !1515, !1468}
!8849 = !{!8850, !8851, !8852}
!8850 = !DILocalVariable(name: "config", arg: 1, scope: !8846, file: !1465, line: 317, type: !1515)
!8851 = !DILocalVariable(name: "state", arg: 2, scope: !8846, file: !1465, line: 318, type: !1468)
!8852 = !DILocalVariable(name: "reg", scope: !8846, file: !1465, line: 320, type: !22)
!8853 = !DILocation(line: 0, scope: !8846)
!8854 = !DILocation(line: 329, column: 39, scope: !8846)
!8855 = !DILocation(line: 329, column: 52, scope: !8846)
!8856 = !DILocation(line: 329, column: 9, scope: !8846)
!8857 = !DILocation(line: 329, column: 2, scope: !8846)
!8858 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !8758, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1273, retainedNodes: !8859)
!8859 = !{!8860}
!8860 = !DILocalVariable(name: "dev", arg: 1, scope: !8858, file: !147, line: 730, type: !1317)
!8861 = !DILocation(line: 0, scope: !8858)
!8862 = !DILocation(line: 732, column: 9, scope: !8858)
!8863 = !DILocation(line: 732, column: 2, scope: !8858)
!8864 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1632, file: !1632, line: 270, type: !1638, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8865)
!8865 = !{!8866}
!8866 = !DILocalVariable(name: "dev", arg: 1, scope: !8864, file: !1632, line: 270, type: !1640)
!8867 = !DILocation(line: 0, scope: !8864)
!8868 = !DILocation(line: 274, column: 2, scope: !8864)
!8869 = !DILocation(line: 275, column: 12, scope: !8864)
!8870 = !DILocation(line: 276, column: 15, scope: !8864)
!8871 = !DILocation(line: 277, column: 16, scope: !8864)
!8872 = !DILocation(line: 278, column: 15, scope: !8864)
!8873 = !DILocation(line: 279, column: 16, scope: !8864)
!8874 = !DILocation(line: 282, column: 2, scope: !8864)
!8875 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !512, file: !512, line: 1814, type: !5007, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8876)
!8876 = !{!8877, !8878}
!8877 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8875, file: !512, line: 1814, type: !774)
!8878 = !DILocalVariable(name: "priority", arg: 2, scope: !8875, file: !512, line: 1814, type: !106)
!8879 = !DILocation(line: 0, scope: !8875)
!8880 = !DILocation(line: 1822, column: 46, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !512, line: 1821, column: 3)
!8882 = distinct !DILexicalBlock(scope: !8875, file: !512, line: 1816, column: 7)
!8883 = !DILocation(line: 1824, column: 1, scope: !8875)
!8884 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1632, file: !1632, line: 118, type: !4910, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8885)
!8885 = !{!8886, !8887}
!8886 = !DILocalVariable(name: "arg", arg: 1, scope: !8884, file: !1632, line: 118, type: !102)
!8887 = !DILocalVariable(name: "dticks", scope: !8884, file: !1632, line: 121, type: !106)
!8888 = !DILocation(line: 0, scope: !8884)
!8889 = !DILocation(line: 124, column: 2, scope: !8884)
!8890 = !DILocation(line: 129, column: 17, scope: !8884)
!8891 = !DILocation(line: 129, column: 14, scope: !8884)
!8892 = !DILocation(line: 130, column: 15, scope: !8884)
!8893 = !DILocation(line: 145, column: 27, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !1632, line: 132, column: 16)
!8895 = distinct !DILexicalBlock(scope: !8884, file: !1632, line: 132, column: 6)
!8896 = !DILocation(line: 145, column: 25, scope: !8894)
!8897 = !DILocation(line: 145, column: 45, scope: !8894)
!8898 = !DILocation(line: 146, column: 30, scope: !8894)
!8899 = !DILocation(line: 146, column: 20, scope: !8894)
!8900 = !DILocation(line: 147, column: 3, scope: !8894)
!8901 = !DILocation(line: 151, column: 2, scope: !8884)
!8902 = !DILocation(line: 152, column: 1, scope: !8884)
!8903 = distinct !DISubprogram(name: "elapsed", scope: !1632, file: !1632, line: 85, type: !4808, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8904)
!8904 = !{!8905, !8906, !8907}
!8905 = !DILocalVariable(name: "val1", scope: !8903, file: !1632, line: 87, type: !106)
!8906 = !DILocalVariable(name: "ctrl", scope: !8903, file: !1632, line: 88, type: !106)
!8907 = !DILocalVariable(name: "val2", scope: !8903, file: !1632, line: 89, type: !106)
!8908 = !DILocation(line: 87, column: 27, scope: !8903)
!8909 = !DILocation(line: 0, scope: !8903)
!8910 = !DILocation(line: 88, column: 27, scope: !8903)
!8911 = !DILocation(line: 89, column: 27, scope: !8903)
!8912 = !DILocation(line: 105, column: 12, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8903, file: !1632, line: 105, column: 6)
!8914 = !DILocation(line: 106, column: 6, scope: !8913)
!8915 = !DILocation(line: 107, column: 16, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8913, file: !1632, line: 106, column: 24)
!8917 = !DILocation(line: 111, column: 18, scope: !8916)
!8918 = !DILocation(line: 112, column: 2, scope: !8916)
!8919 = !DILocation(line: 114, column: 20, scope: !8903)
!8920 = !DILocation(line: 114, column: 30, scope: !8903)
!8921 = !DILocation(line: 114, column: 28, scope: !8903)
!8922 = !DILocation(line: 114, column: 2, scope: !8903)
!8923 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1632, file: !1632, line: 154, type: !8924, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8926)
!8924 = !DISubroutineType(types: !8925)
!8925 = !{null, !748, !163}
!8926 = !{!8927, !8928, !8929, !8930, !8931, !8932, !8933, !8938, !8939}
!8927 = !DILocalVariable(name: "ticks", arg: 1, scope: !8923, file: !1632, line: 154, type: !748)
!8928 = !DILocalVariable(name: "idle", arg: 2, scope: !8923, file: !1632, line: 154, type: !163)
!8929 = !DILocalVariable(name: "delay", scope: !8923, file: !1632, line: 169, type: !106)
!8930 = !DILocalVariable(name: "val1", scope: !8923, file: !1632, line: 170, type: !106)
!8931 = !DILocalVariable(name: "val2", scope: !8923, file: !1632, line: 170, type: !106)
!8932 = !DILocalVariable(name: "last_load_", scope: !8923, file: !1632, line: 171, type: !106)
!8933 = !DILocalVariable(name: "key", scope: !8923, file: !1632, line: 176, type: !8934)
!8934 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !477, line: 106, baseType: !8935)
!8935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !477, line: 32, size: 32, elements: !8936)
!8936 = !{!8937}
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8935, file: !477, line: 33, baseType: !103, size: 32)
!8938 = !DILocalVariable(name: "pending", scope: !8923, file: !1632, line: 178, type: !106)
!8939 = !DILocalVariable(name: "unannounced", scope: !8923, file: !1632, line: 185, type: !106)
!8940 = !DILocation(line: 0, scope: !8923)
!8941 = !DILocation(line: 162, column: 49, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8923, file: !1632, line: 162, column: 6)
!8943 = !DILocation(line: 163, column: 17, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8942, file: !1632, line: 162, column: 78)
!8945 = !DILocation(line: 164, column: 13, scope: !8944)
!8946 = !DILocation(line: 165, column: 3, scope: !8944)
!8947 = !DILocation(line: 171, column: 24, scope: !8923)
!8948 = !DILocation(line: 173, column: 10, scope: !8923)
!8949 = !DILocation(line: 174, column: 10, scope: !8923)
!8950 = !DILocalVariable(name: "l", arg: 1, scope: !8951, file: !477, line: 136, type: !8954)
!8951 = distinct !DISubprogram(name: "k_spin_lock", scope: !477, file: !477, line: 136, type: !8952, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8955)
!8952 = !DISubroutineType(types: !8953)
!8953 = !{!8934, !8954}
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!8955 = !{!8950, !8956}
!8956 = !DILocalVariable(name: "k", scope: !8951, file: !477, line: 139, type: !8934)
!8957 = !DILocation(line: 0, scope: !8951, inlinedAt: !8958)
!8958 = distinct !DILocation(line: 176, column: 25, scope: !8923)
!8959 = !DILocation(line: 55, column: 2, scope: !8960, inlinedAt: !8964)
!8960 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !8961)
!8961 = !{!8962, !8963}
!8962 = !DILocalVariable(name: "key", scope: !8960, file: !4724, line: 44, type: !32)
!8963 = !DILocalVariable(name: "tmp", scope: !8960, file: !4724, line: 53, type: !32)
!8964 = distinct !DILocation(line: 145, column: 10, scope: !8951, inlinedAt: !8958)
!8965 = !{i64 2278920}
!8966 = !DILocation(line: 0, scope: !8960, inlinedAt: !8964)
!8967 = !DILocation(line: 178, column: 21, scope: !8923)
!8968 = !DILocation(line: 180, column: 18, scope: !8923)
!8969 = !DILocation(line: 182, column: 14, scope: !8923)
!8970 = !DILocation(line: 183, column: 15, scope: !8923)
!8971 = !DILocation(line: 185, column: 39, scope: !8923)
!8972 = !DILocation(line: 185, column: 37, scope: !8923)
!8973 = !DILocation(line: 187, column: 27, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8923, file: !1632, line: 187, column: 6)
!8975 = !DILocation(line: 187, column: 6, scope: !8923)
!8976 = !DILocation(line: 202, column: 27, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8974, file: !1632, line: 195, column: 9)
!8978 = !DILocation(line: 202, column: 48, scope: !8977)
!8979 = !DILocation(line: 203, column: 9, scope: !8977)
!8980 = !DILocation(line: 204, column: 11, scope: !8977)
!8981 = !DILocation(line: 205, column: 13, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8977, file: !1632, line: 205, column: 7)
!8983 = !DILocation(line: 205, column: 7, scope: !8977)
!8984 = !DILocation(line: 0, scope: !8974)
!8985 = !DILocation(line: 212, column: 18, scope: !8923)
!8986 = !DILocation(line: 214, column: 28, scope: !8923)
!8987 = !DILocation(line: 214, column: 16, scope: !8923)
!8988 = !DILocation(line: 215, column: 15, scope: !8923)
!8989 = !DILocation(line: 227, column: 11, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8923, file: !1632, line: 227, column: 6)
!8991 = !DILocation(line: 227, column: 6, scope: !8923)
!8992 = !DILocation(line: 228, column: 15, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8990, file: !1632, line: 227, column: 19)
!8994 = !DILocation(line: 228, column: 38, scope: !8993)
!8995 = !DILocation(line: 228, column: 24, scope: !8993)
!8996 = !DILocation(line: 229, column: 2, scope: !8993)
!8997 = !DILocation(line: 230, column: 24, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8990, file: !1632, line: 229, column: 9)
!8999 = !DILocation(line: 230, column: 15, scope: !8998)
!9000 = !DILocation(line: 0, scope: !8990)
!9001 = !DILocalVariable(name: "key", arg: 2, scope: !9002, file: !477, line: 190, type: !8934)
!9002 = distinct !DISubprogram(name: "k_spin_unlock", scope: !477, file: !477, line: 189, type: !9003, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !9005)
!9003 = !DISubroutineType(types: !9004)
!9004 = !{null, !8954, !8934}
!9005 = !{!9006, !9001}
!9006 = !DILocalVariable(name: "l", arg: 1, scope: !9002, file: !477, line: 189, type: !8954)
!9007 = !DILocation(line: 0, scope: !9002, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 232, column: 2, scope: !8923)
!9009 = !DILocalVariable(name: "key", arg: 1, scope: !9010, file: !4724, line: 84, type: !32)
!9010 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !9011)
!9011 = !{!9009}
!9012 = !DILocation(line: 0, scope: !9010, inlinedAt: !9013)
!9013 = distinct !DILocation(line: 215, column: 2, scope: !9002, inlinedAt: !9008)
!9014 = !DILocation(line: 95, column: 2, scope: !9010, inlinedAt: !9013)
!9015 = !{i64 2279737}
!9016 = !DILocation(line: 234, column: 1, scope: !8923)
!9017 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1632, file: !1632, line: 236, type: !4808, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !9018)
!9018 = !{!9019, !9020}
!9019 = !DILocalVariable(name: "key", scope: !9017, file: !1632, line: 242, type: !8934)
!9020 = !DILocalVariable(name: "cyc", scope: !9017, file: !1632, line: 243, type: !106)
!9021 = !DILocation(line: 0, scope: !8951, inlinedAt: !9022)
!9022 = distinct !DILocation(line: 242, column: 25, scope: !9017)
!9023 = !DILocation(line: 55, column: 2, scope: !8960, inlinedAt: !9024)
!9024 = distinct !DILocation(line: 145, column: 10, scope: !8951, inlinedAt: !9022)
!9025 = !DILocation(line: 0, scope: !8960, inlinedAt: !9024)
!9026 = !DILocation(line: 0, scope: !9017)
!9027 = !DILocation(line: 243, column: 17, scope: !9017)
!9028 = !DILocation(line: 243, column: 29, scope: !9017)
!9029 = !DILocation(line: 243, column: 27, scope: !9017)
!9030 = !DILocation(line: 243, column: 43, scope: !9017)
!9031 = !DILocation(line: 243, column: 41, scope: !9017)
!9032 = !DILocation(line: 0, scope: !9002, inlinedAt: !9033)
!9033 = distinct !DILocation(line: 245, column: 2, scope: !9017)
!9034 = !DILocation(line: 0, scope: !9010, inlinedAt: !9035)
!9035 = distinct !DILocation(line: 215, column: 2, scope: !9002, inlinedAt: !9033)
!9036 = !DILocation(line: 95, column: 2, scope: !9010, inlinedAt: !9035)
!9037 = !DILocation(line: 246, column: 13, scope: !9017)
!9038 = !DILocation(line: 246, column: 2, scope: !9017)
!9039 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1632, file: !1632, line: 249, type: !4808, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !9040)
!9040 = !{!9041, !9042}
!9041 = !DILocalVariable(name: "key", scope: !9039, file: !1632, line: 251, type: !8934)
!9042 = !DILocalVariable(name: "ret", scope: !9039, file: !1632, line: 252, type: !106)
!9043 = !DILocation(line: 0, scope: !8951, inlinedAt: !9044)
!9044 = distinct !DILocation(line: 251, column: 25, scope: !9039)
!9045 = !DILocation(line: 55, column: 2, scope: !8960, inlinedAt: !9046)
!9046 = distinct !DILocation(line: 145, column: 10, scope: !8951, inlinedAt: !9044)
!9047 = !DILocation(line: 0, scope: !8960, inlinedAt: !9046)
!9048 = !DILocation(line: 0, scope: !9039)
!9049 = !DILocation(line: 252, column: 17, scope: !9039)
!9050 = !DILocation(line: 252, column: 29, scope: !9039)
!9051 = !DILocation(line: 252, column: 27, scope: !9039)
!9052 = !DILocation(line: 0, scope: !9002, inlinedAt: !9053)
!9053 = distinct !DILocation(line: 254, column: 2, scope: !9039)
!9054 = !DILocation(line: 0, scope: !9010, inlinedAt: !9055)
!9055 = distinct !DILocation(line: 215, column: 2, scope: !9002, inlinedAt: !9053)
!9056 = !DILocation(line: 95, column: 2, scope: !9010, inlinedAt: !9055)
!9057 = !DILocation(line: 255, column: 2, scope: !9039)
!9058 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1632, file: !1632, line: 258, type: !2917, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !478)
!9059 = !DILocation(line: 260, column: 6, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9058, file: !1632, line: 260, column: 6)
!9061 = !DILocation(line: 260, column: 16, scope: !9060)
!9062 = !DILocation(line: 260, column: 6, scope: !9058)
!9063 = !DILocation(line: 261, column: 17, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9060, file: !1632, line: 260, column: 34)
!9065 = !DILocation(line: 262, column: 2, scope: !9064)
!9066 = !DILocation(line: 263, column: 1, scope: !9058)
!9067 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1632, file: !1632, line: 265, type: !2917, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1552, retainedNodes: !478)
!9068 = !DILocation(line: 267, column: 16, scope: !9067)
!9069 = !DILocation(line: 268, column: 1, scope: !9067)
!9070 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9071, file: !9071, line: 9, type: !9072, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !9095)
!9071 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!103, !9074, !160, !9094}
!9074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9075, size: 32)
!9075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9076)
!9076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1465, line: 60, size: 64, elements: !9077)
!9077 = !{!9078, !9093}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9076, file: !1465, line: 69, baseType: !9079, size: 32)
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9080, size: 32)
!9080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9081)
!9081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1465, line: 50, size: 64, elements: !9082)
!9082 = !{!9083, !9091, !9092}
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9081, file: !1465, line: 52, baseType: !9084, size: 32)
!9084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9085, size: 32)
!9085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9086)
!9086 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1476, line: 37, baseType: !9087)
!9087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1476, line: 32, size: 64, elements: !9088)
!9088 = !{!9089, !9090}
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9087, file: !1476, line: 34, baseType: !106, size: 32)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9087, file: !1476, line: 36, baseType: !106, size: 32, offset: 32)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9081, file: !1465, line: 54, baseType: !160, size: 8, offset: 32)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9081, file: !1465, line: 56, baseType: !160, size: 8, offset: 40)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9076, file: !1465, line: 71, baseType: !160, size: 8, offset: 32)
!9094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9079, size: 32)
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "config", arg: 1, scope: !9070, file: !9071, line: 9, type: !9074)
!9097 = !DILocalVariable(name: "id", arg: 2, scope: !9070, file: !9071, line: 9, type: !160)
!9098 = !DILocalVariable(name: "state", arg: 3, scope: !9070, file: !9071, line: 10, type: !9094)
!9099 = !DILocation(line: 0, scope: !9070)
!9100 = !DILocation(line: 12, column: 20, scope: !9070)
!9101 = !DILocation(line: 13, column: 27, scope: !9070)
!9102 = !DILocation(line: 13, column: 42, scope: !9070)
!9103 = !DILocation(line: 13, column: 19, scope: !9070)
!9104 = !DILocation(line: 13, column: 16, scope: !9070)
!9105 = !DILocation(line: 13, column: 2, scope: !9070)
!9106 = distinct !{!9106, !9105, !9107}
!9107 = !DILocation(line: 19, column: 2, scope: !9070)
!9108 = !DILocation(line: 14, column: 23, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !9071, line: 14, column: 7)
!9110 = distinct !DILexicalBlock(scope: !9070, file: !9071, line: 13, column: 54)
!9111 = !DILocation(line: 14, column: 10, scope: !9109)
!9112 = !DILocation(line: 18, column: 11, scope: !9110)
!9113 = !DILocation(line: 14, column: 7, scope: !9110)
!9114 = !DILocation(line: 22, column: 1, scope: !9070)
!9115 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1749, file: !1749, line: 193, type: !9116, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !9125)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!103, !9118, !160, !22}
!9118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9119, size: 32)
!9119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9120)
!9120 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1476, line: 37, baseType: !9121)
!9121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1476, line: 32, size: 64, elements: !9122)
!9122 = !{!9123, !9124}
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9121, file: !1476, line: 34, baseType: !106, size: 32)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9121, file: !1476, line: 36, baseType: !106, size: 32, offset: 32)
!9125 = !{!9126, !9127, !9128, !9129, !9130, !9131, !9132, !9133, !9135}
!9126 = !DILocalVariable(name: "pins", arg: 1, scope: !9115, file: !1749, line: 193, type: !9118)
!9127 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9115, file: !1749, line: 193, type: !160)
!9128 = !DILocalVariable(name: "reg", arg: 3, scope: !9115, file: !1749, line: 194, type: !22)
!9129 = !DILocalVariable(name: "pin", scope: !9115, file: !1749, line: 196, type: !106)
!9130 = !DILocalVariable(name: "mux", scope: !9115, file: !1749, line: 196, type: !106)
!9131 = !DILocalVariable(name: "pin_cgf", scope: !9115, file: !1749, line: 197, type: !106)
!9132 = !DILocalVariable(name: "ret", scope: !9115, file: !1749, line: 198, type: !103)
!9133 = !DILocalVariable(name: "i", scope: !9134, file: !1749, line: 209, type: !160)
!9134 = distinct !DILexicalBlock(scope: !9115, file: !1749, line: 209, column: 2)
!9135 = !DILocalVariable(name: "gpio_out", scope: !9136, file: !1749, line: 239, type: !106)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !1749, line: 238, column: 55)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !1749, line: 238, column: 14)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !1749, line: 236, column: 14)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !1749, line: 234, column: 7)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !1749, line: 209, column: 41)
!9141 = distinct !DILexicalBlock(scope: !9134, file: !1749, line: 209, column: 2)
!9142 = !DILocation(line: 0, scope: !9115)
!9143 = !DILocation(line: 0, scope: !9134)
!9144 = !DILocation(line: 209, column: 25, scope: !9141)
!9145 = !DILocation(line: 209, column: 2, scope: !9134)
!9146 = distinct !{!9146, !9145, !9147}
!9147 = !DILocation(line: 259, column: 2, scope: !9134)
!9148 = !DILocation(line: 210, column: 17, scope: !9140)
!9149 = !DILocation(line: 234, column: 7, scope: !9139)
!9150 = !DILocation(line: 234, column: 33, scope: !9139)
!9151 = !DILocation(line: 234, column: 7, scope: !9140)
!9152 = !DILocation(line: 235, column: 22, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9139, file: !1749, line: 234, column: 49)
!9154 = !DILocation(line: 235, column: 29, scope: !9153)
!9155 = !DILocation(line: 236, column: 3, scope: !9153)
!9156 = !DILocation(line: 236, column: 14, scope: !9139)
!9157 = !DILocation(line: 239, column: 32, scope: !9136)
!9158 = !DILocation(line: 0, scope: !9136)
!9159 = !DILocation(line: 241, column: 8, scope: !9136)
!9160 = !DILocation(line: 246, column: 3, scope: !9136)
!9161 = !DILocation(line: 252, column: 9, scope: !9140)
!9162 = !DILocation(line: 255, column: 9, scope: !9140)
!9163 = !DILocation(line: 256, column: 11, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9140, file: !1749, line: 256, column: 7)
!9165 = !DILocation(line: 209, column: 37, scope: !9141)
!9166 = !DILocation(line: 256, column: 7, scope: !9140)
!9167 = !DILocation(line: 262, column: 1, scope: !9115)
!9168 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1749, file: !1749, line: 176, type: !9169, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !9171)
!9169 = !DISubroutineType(types: !9170)
!9170 = !{!103, !106, !106, !106}
!9171 = !{!9172, !9173, !9174, !9175}
!9172 = !DILocalVariable(name: "pin", arg: 1, scope: !9168, file: !1749, line: 176, type: !106)
!9173 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9168, file: !1749, line: 176, type: !106)
!9174 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9168, file: !1749, line: 176, type: !106)
!9175 = !DILocalVariable(name: "port_device", scope: !9168, file: !1749, line: 178, type: !1679)
!9176 = !DILocation(line: 0, scope: !9168)
!9177 = !DILocation(line: 180, column: 22, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9168, file: !1749, line: 180, column: 6)
!9179 = !DILocation(line: 180, column: 6, scope: !9168)
!9180 = !DILocation(line: 180, column: 6, scope: !9178)
!9181 = !DILocation(line: 184, column: 16, scope: !9168)
!9182 = !DILocation(line: 186, column: 19, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9168, file: !1749, line: 186, column: 6)
!9184 = !DILocation(line: 186, column: 28, scope: !9183)
!9185 = !DILocation(line: 186, column: 33, scope: !9183)
!9186 = !DILocation(line: 186, column: 6, scope: !9168)
!9187 = !DILocation(line: 190, column: 43, scope: !9168)
!9188 = !DILocation(line: 190, column: 9, scope: !9168)
!9189 = !DILocation(line: 190, column: 2, scope: !9168)
!9190 = !DILocation(line: 191, column: 1, scope: !9168)
!9191 = distinct !DISubprogram(name: "device_is_ready", scope: !4782, file: !4782, line: 47, type: !9192, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !9194)
!9192 = !DISubroutineType(types: !9193)
!9193 = !{!163, !1679}
!9194 = !{!9195}
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9191, file: !4782, line: 47, type: !1679)
!9196 = !DILocation(line: 0, scope: !9191)
!9197 = !DILocation(line: 55, column: 2, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9191, file: !4782, line: 55, column: 2)
!9199 = !{i64 2149512929}
!9200 = !DILocation(line: 56, column: 9, scope: !9191)
!9201 = !DILocation(line: 56, column: 2, scope: !9191)
!9202 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !147, file: !147, line: 730, type: !9192, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !9203)
!9203 = !{!9204}
!9204 = !DILocalVariable(name: "dev", arg: 1, scope: !9202, file: !147, line: 730, type: !1679)
!9205 = !DILocation(line: 0, scope: !9202)
!9206 = !DILocation(line: 732, column: 9, scope: !9202)
!9207 = !DILocation(line: 732, column: 2, scope: !9202)
!9208 = distinct !DISubprogram(name: "SystemInit", scope: !1801, file: !1801, line: 167, type: !2917, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1757, retainedNodes: !478)
!9209 = !DILocation(line: 182, column: 1, scope: !9208)
!9210 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1801, file: !1801, line: 220, type: !2917, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1757, retainedNodes: !9211)
!9211 = !{!9212, !9213, !9214, !9215, !9216}
!9212 = !DILocalVariable(name: "tmp", scope: !9210, file: !1801, line: 222, type: !106)
!9213 = !DILocalVariable(name: "pllvco", scope: !9210, file: !1801, line: 222, type: !106)
!9214 = !DILocalVariable(name: "pllp", scope: !9210, file: !1801, line: 222, type: !106)
!9215 = !DILocalVariable(name: "pllsource", scope: !9210, file: !1801, line: 222, type: !106)
!9216 = !DILocalVariable(name: "pllm", scope: !9210, file: !1801, line: 222, type: !106)
!9217 = !DILocation(line: 0, scope: !9210)
!9218 = !DILocation(line: 225, column: 14, scope: !9210)
!9219 = !DILocation(line: 225, column: 19, scope: !9210)
!9220 = !DILocation(line: 227, column: 3, scope: !9210)
!9221 = !DILocation(line: 240, column: 25, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9210, file: !1801, line: 228, column: 3)
!9223 = !DILocation(line: 241, column: 19, scope: !9222)
!9224 = !DILocation(line: 241, column: 27, scope: !9222)
!9225 = !DILocation(line: 0, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !1801, line: 243, column: 11)
!9227 = !DILocation(line: 254, column: 22, scope: !9222)
!9228 = !DILocation(line: 254, column: 62, scope: !9222)
!9229 = !DILocation(line: 255, column: 31, scope: !9222)
!9230 = !DILocation(line: 256, column: 7, scope: !9222)
!9231 = !DILocation(line: 0, scope: !9222)
!9232 = !DILocation(line: 263, column: 30, scope: !9210)
!9233 = !DILocation(line: 263, column: 52, scope: !9210)
!9234 = !DILocation(line: 263, column: 9, scope: !9210)
!9235 = !DILocation(line: 265, column: 19, scope: !9210)
!9236 = !DILocation(line: 266, column: 1, scope: !9210)
!9237 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !9238, file: !9238, line: 87, type: !9239, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9278)
!9238 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9239 = !DISubroutineType(types: !9240)
!9240 = !{!9241, !9242}
!9241 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2751, line: 44, baseType: !2750)
!9242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9243, size: 32)
!9243 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !9244, line: 172, baseType: !9245)
!9244 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9244, line: 121, size: 736, elements: !9246)
!9246 = !{!9247, !9248, !9257, !9265, !9266, !9267, !9268, !9269, !9270, !9271, !9272, !9273, !9274, !9275, !9276, !9277}
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !9245, file: !9244, line: 123, baseType: !106, size: 32)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !9245, file: !9244, line: 126, baseType: !9249, size: 160, offset: 32)
!9249 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !9244, line: 97, baseType: !9250)
!9250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9244, line: 79, size: 160, elements: !9251)
!9251 = !{!9252, !9253, !9254, !9255, !9256}
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !9250, file: !9244, line: 81, baseType: !106, size: 32)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !9250, file: !9244, line: 84, baseType: !106, size: 32, offset: 32)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !9250, file: !9244, line: 87, baseType: !106, size: 32, offset: 64)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !9250, file: !9244, line: 90, baseType: !106, size: 32, offset: 96)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !9250, file: !9244, line: 94, baseType: !106, size: 32, offset: 128)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !9245, file: !9244, line: 129, baseType: !9258, size: 128, offset: 192)
!9258 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !9244, line: 116, baseType: !9259)
!9259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9244, line: 102, size: 128, elements: !9260)
!9260 = !{!9261, !9262, !9263, !9264}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !9259, file: !9244, line: 104, baseType: !106, size: 32)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !9259, file: !9244, line: 107, baseType: !106, size: 32, offset: 32)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !9259, file: !9244, line: 110, baseType: !106, size: 32, offset: 64)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !9259, file: !9244, line: 113, baseType: !106, size: 32, offset: 96)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !9245, file: !9244, line: 132, baseType: !106, size: 32, offset: 320)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !9245, file: !9244, line: 136, baseType: !106, size: 32, offset: 352)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !9245, file: !9244, line: 140, baseType: !106, size: 32, offset: 384)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !9245, file: !9244, line: 143, baseType: !106, size: 32, offset: 416)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !9245, file: !9244, line: 146, baseType: !106, size: 32, offset: 448)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !9245, file: !9244, line: 149, baseType: !106, size: 32, offset: 480)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !9245, file: !9244, line: 152, baseType: !106, size: 32, offset: 512)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !9245, file: !9244, line: 155, baseType: !106, size: 32, offset: 544)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !9245, file: !9244, line: 158, baseType: !106, size: 32, offset: 576)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !9245, file: !9244, line: 161, baseType: !106, size: 32, offset: 608)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !9245, file: !9244, line: 164, baseType: !106, size: 32, offset: 640)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !9245, file: !9244, line: 167, baseType: !106, size: 32, offset: 672)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !9245, file: !9244, line: 170, baseType: !160, size: 8, offset: 704)
!9278 = !{!9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9289}
!9279 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9237, file: !9238, line: 87, type: !9242)
!9280 = !DILocalVariable(name: "tickstart", scope: !9237, file: !9238, line: 89, type: !106)
!9281 = !DILocalVariable(name: "tmpreg1", scope: !9237, file: !9238, line: 90, type: !106)
!9282 = !DILocalVariable(name: "plli2sp", scope: !9237, file: !9238, line: 91, type: !106)
!9283 = !DILocalVariable(name: "plli2sq", scope: !9237, file: !9238, line: 92, type: !106)
!9284 = !DILocalVariable(name: "plli2sr", scope: !9237, file: !9238, line: 93, type: !106)
!9285 = !DILocalVariable(name: "pllsaip", scope: !9237, file: !9238, line: 94, type: !106)
!9286 = !DILocalVariable(name: "pllsaiq", scope: !9237, file: !9238, line: 95, type: !106)
!9287 = !DILocalVariable(name: "plli2sused", scope: !9237, file: !9238, line: 96, type: !106)
!9288 = !DILocalVariable(name: "pllsaiused", scope: !9237, file: !9238, line: 97, type: !106)
!9289 = !DILocalVariable(name: "tmpreg", scope: !9290, file: !9238, line: 184, type: !127)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !9238, line: 184, column: 5)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !9238, line: 179, column: 3)
!9292 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 178, column: 6)
!9293 = !DILocation(line: 0, scope: !9237)
!9294 = !DILocation(line: 103, column: 23, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 103, column: 6)
!9296 = !DILocation(line: 103, column: 45, scope: !9295)
!9297 = !DILocation(line: 103, column: 71, scope: !9295)
!9298 = !DILocation(line: 103, column: 6, scope: !9237)
!9299 = !DILocation(line: 109, column: 5, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9295, file: !9238, line: 104, column: 3)
!9301 = !DILocation(line: 111, column: 23, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9300, file: !9238, line: 111, column: 8)
!9303 = !DILocation(line: 111, column: 45, scope: !9302)
!9304 = !DILocation(line: 111, column: 8, scope: !9300)
!9305 = !DILocation(line: 119, column: 23, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 119, column: 6)
!9307 = !DILocation(line: 119, column: 45, scope: !9306)
!9308 = !DILocation(line: 119, column: 71, scope: !9306)
!9309 = !DILocation(line: 119, column: 6, scope: !9237)
!9310 = !DILocation(line: 125, column: 5, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9306, file: !9238, line: 120, column: 3)
!9312 = !DILocation(line: 127, column: 23, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9311, file: !9238, line: 127, column: 8)
!9314 = !DILocation(line: 127, column: 45, scope: !9313)
!9315 = !DILocation(line: 127, column: 8, scope: !9311)
!9316 = !DILocation(line: 135, column: 23, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 135, column: 6)
!9318 = !DILocation(line: 135, column: 45, scope: !9317)
!9319 = !DILocation(line: 135, column: 67, scope: !9317)
!9320 = !DILocation(line: 135, column: 6, scope: !9237)
!9321 = !DILocation(line: 141, column: 5, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9317, file: !9238, line: 136, column: 3)
!9323 = !DILocation(line: 143, column: 23, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9322, file: !9238, line: 143, column: 8)
!9325 = !DILocation(line: 143, column: 42, scope: !9324)
!9326 = !DILocation(line: 143, column: 8, scope: !9322)
!9327 = !DILocation(line: 148, column: 42, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9322, file: !9238, line: 148, column: 8)
!9329 = !DILocation(line: 148, column: 8, scope: !9322)
!9330 = !DILocation(line: 156, column: 23, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 156, column: 6)
!9332 = !DILocation(line: 156, column: 45, scope: !9331)
!9333 = !DILocation(line: 156, column: 67, scope: !9331)
!9334 = !DILocation(line: 156, column: 6, scope: !9237)
!9335 = !DILocation(line: 162, column: 5, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9331, file: !9238, line: 157, column: 3)
!9337 = !DILocation(line: 165, column: 23, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9336, file: !9238, line: 165, column: 8)
!9339 = !DILocation(line: 165, column: 42, scope: !9338)
!9340 = !DILocation(line: 165, column: 8, scope: !9336)
!9341 = !DILocation(line: 170, column: 42, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9336, file: !9238, line: 170, column: 8)
!9343 = !DILocation(line: 170, column: 8, scope: !9336)
!9344 = !DILocation(line: 178, column: 23, scope: !9292)
!9345 = !DILocation(line: 178, column: 45, scope: !9292)
!9346 = !DILocation(line: 178, column: 66, scope: !9292)
!9347 = !DILocation(line: 178, column: 6, scope: !9237)
!9348 = !DILocation(line: 184, column: 5, scope: !9290)
!9349 = !DILocation(line: 184, column: 5, scope: !9291)
!9350 = !DILocation(line: 187, column: 13, scope: !9291)
!9351 = !DILocation(line: 190, column: 17, scope: !9291)
!9352 = !DILocation(line: 192, column: 5, scope: !9291)
!9353 = !DILocation(line: 192, column: 17, scope: !9291)
!9354 = !DILocation(line: 192, column: 20, scope: !9291)
!9355 = !DILocation(line: 192, column: 34, scope: !9291)
!9356 = !DILocation(line: 194, column: 11, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !9238, line: 194, column: 10)
!9358 = distinct !DILexicalBlock(scope: !9291, file: !9238, line: 193, column: 5)
!9359 = !DILocation(line: 194, column: 25, scope: !9357)
!9360 = !DILocation(line: 194, column: 39, scope: !9357)
!9361 = !DILocation(line: 194, column: 10, scope: !9358)
!9362 = distinct !{!9362, !9352, !9363}
!9363 = !DILocation(line: 198, column: 5, scope: !9291)
!9364 = !DILocation(line: 200, column: 21, scope: !9291)
!9365 = !DILocation(line: 200, column: 26, scope: !9291)
!9366 = !DILocation(line: 201, column: 17, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9291, file: !9238, line: 201, column: 8)
!9368 = !DILocation(line: 201, column: 33, scope: !9367)
!9369 = !DILocation(line: 201, column: 66, scope: !9367)
!9370 = !DILocation(line: 201, column: 84, scope: !9367)
!9371 = !DILocation(line: 201, column: 47, scope: !9367)
!9372 = !DILocation(line: 201, column: 8, scope: !9291)
!9373 = !DILocation(line: 204, column: 23, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9367, file: !9238, line: 202, column: 5)
!9375 = !DILocation(line: 204, column: 28, scope: !9374)
!9376 = !DILocation(line: 206, column: 7, scope: !9374)
!9377 = !DILocation(line: 207, column: 7, scope: !9374)
!9378 = !DILocation(line: 209, column: 17, scope: !9374)
!9379 = !DILocation(line: 212, column: 10, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9374, file: !9238, line: 212, column: 10)
!9381 = !DILocation(line: 212, column: 10, scope: !9374)
!9382 = !DILocation(line: 215, column: 21, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9380, file: !9238, line: 213, column: 7)
!9384 = !DILocation(line: 218, column: 9, scope: !9383)
!9385 = !DILocation(line: 218, column: 15, scope: !9383)
!9386 = !DILocation(line: 218, column: 51, scope: !9383)
!9387 = !DILocation(line: 220, column: 15, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !9238, line: 220, column: 14)
!9389 = distinct !DILexicalBlock(scope: !9383, file: !9238, line: 219, column: 9)
!9390 = !DILocation(line: 220, column: 29, scope: !9388)
!9391 = !DILocation(line: 220, column: 43, scope: !9388)
!9392 = !DILocation(line: 220, column: 14, scope: !9389)
!9393 = distinct !{!9393, !9384, !9394}
!9394 = !DILocation(line: 224, column: 9, scope: !9383)
!9395 = !DILocation(line: 227, column: 5, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9291, file: !9238, line: 227, column: 5)
!9397 = !DILocation(line: 232, column: 23, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 232, column: 6)
!9399 = !DILocation(line: 228, column: 3, scope: !9291)
!9400 = !DILocation(line: 232, column: 45, scope: !9398)
!9401 = !DILocation(line: 232, column: 66, scope: !9398)
!9402 = !DILocation(line: 232, column: 6, scope: !9237)
!9403 = !DILocation(line: 235, column: 5, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9398, file: !9238, line: 233, column: 3)
!9405 = !DILocation(line: 240, column: 23, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 240, column: 6)
!9407 = !DILocation(line: 236, column: 3, scope: !9404)
!9408 = !DILocation(line: 240, column: 45, scope: !9406)
!9409 = !DILocation(line: 240, column: 70, scope: !9406)
!9410 = !DILocation(line: 240, column: 6, scope: !9237)
!9411 = !DILocation(line: 246, column: 5, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9406, file: !9238, line: 241, column: 3)
!9413 = !DILocation(line: 251, column: 23, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 251, column: 6)
!9415 = !DILocation(line: 247, column: 3, scope: !9412)
!9416 = !DILocation(line: 251, column: 45, scope: !9414)
!9417 = !DILocation(line: 251, column: 66, scope: !9414)
!9418 = !DILocation(line: 251, column: 6, scope: !9237)
!9419 = !DILocation(line: 257, column: 5, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9414, file: !9238, line: 252, column: 3)
!9421 = !DILocation(line: 262, column: 23, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 262, column: 6)
!9423 = !DILocation(line: 258, column: 3, scope: !9420)
!9424 = !DILocation(line: 262, column: 45, scope: !9422)
!9425 = !DILocation(line: 262, column: 68, scope: !9422)
!9426 = !DILocation(line: 262, column: 6, scope: !9237)
!9427 = !DILocation(line: 268, column: 5, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9422, file: !9238, line: 263, column: 3)
!9429 = !DILocation(line: 271, column: 23, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9428, file: !9238, line: 271, column: 8)
!9431 = !DILocation(line: 271, column: 43, scope: !9430)
!9432 = !DILocation(line: 271, column: 8, scope: !9428)
!9433 = !DILocation(line: 279, column: 23, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 279, column: 6)
!9435 = !DILocation(line: 279, column: 45, scope: !9434)
!9436 = !DILocation(line: 279, column: 67, scope: !9434)
!9437 = !DILocation(line: 279, column: 6, scope: !9237)
!9438 = !DILocation(line: 285, column: 5, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !9238, line: 280, column: 3)
!9440 = !DILocation(line: 290, column: 23, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 290, column: 6)
!9442 = !DILocation(line: 286, column: 3, scope: !9439)
!9443 = !DILocation(line: 290, column: 45, scope: !9441)
!9444 = !DILocation(line: 290, column: 70, scope: !9441)
!9445 = !DILocation(line: 290, column: 6, scope: !9237)
!9446 = !DILocation(line: 296, column: 5, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9441, file: !9238, line: 291, column: 3)
!9448 = !DILocation(line: 298, column: 23, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9447, file: !9238, line: 298, column: 8)
!9450 = !DILocation(line: 298, column: 43, scope: !9449)
!9451 = !DILocation(line: 298, column: 8, scope: !9447)
!9452 = !DILocation(line: 308, column: 44, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 308, column: 6)
!9454 = !DILocation(line: 308, column: 18, scope: !9453)
!9455 = !DILocation(line: 308, column: 25, scope: !9453)
!9456 = !DILocation(line: 308, column: 65, scope: !9453)
!9457 = !DILocation(line: 308, column: 6, scope: !9237)
!9458 = !DILocation(line: 311, column: 5, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9453, file: !9238, line: 309, column: 3)
!9460 = !DILocation(line: 313, column: 17, scope: !9459)
!9461 = !DILocation(line: 315, column: 5, scope: !9459)
!9462 = !DILocation(line: 315, column: 11, scope: !9459)
!9463 = !DILocation(line: 317, column: 11, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !9238, line: 317, column: 10)
!9465 = distinct !DILexicalBlock(scope: !9459, file: !9238, line: 316, column: 5)
!9466 = !DILocation(line: 317, column: 25, scope: !9464)
!9467 = !DILocation(line: 317, column: 39, scope: !9464)
!9468 = !DILocation(line: 317, column: 10, scope: !9465)
!9469 = distinct !{!9469, !9461, !9470}
!9470 = !DILocation(line: 322, column: 5, scope: !9459)
!9471 = !DILocation(line: 329, column: 27, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9459, file: !9238, line: 329, column: 8)
!9473 = !DILocation(line: 329, column: 49, scope: !9472)
!9474 = !DILocation(line: 329, column: 75, scope: !9472)
!9475 = !DILocation(line: 329, column: 102, scope: !9472)
!9476 = !DILocation(line: 329, column: 121, scope: !9472)
!9477 = !DILocation(line: 329, column: 143, scope: !9472)
!9478 = !DILocation(line: 329, column: 176, scope: !9472)
!9479 = !DILocation(line: 330, column: 49, scope: !9472)
!9480 = !DILocation(line: 330, column: 75, scope: !9472)
!9481 = !DILocation(line: 330, column: 102, scope: !9472)
!9482 = !DILocation(line: 330, column: 121, scope: !9472)
!9483 = !DILocation(line: 330, column: 143, scope: !9472)
!9484 = !DILocation(line: 329, column: 8, scope: !9459)
!9485 = !DILocation(line: 336, column: 26, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9472, file: !9238, line: 331, column: 5)
!9487 = !DILocation(line: 336, column: 100, scope: !9486)
!9488 = !DILocation(line: 337, column: 24, scope: !9486)
!9489 = !DILocation(line: 337, column: 61, scope: !9486)
!9490 = !DILocation(line: 341, column: 7, scope: !9486)
!9491 = !DILocation(line: 345, column: 27, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9459, file: !9238, line: 345, column: 8)
!9493 = !DILocation(line: 342, column: 5, scope: !9486)
!9494 = !DILocation(line: 345, column: 49, scope: !9492)
!9495 = !DILocation(line: 345, column: 71, scope: !9492)
!9496 = !DILocation(line: 345, column: 94, scope: !9492)
!9497 = !DILocation(line: 345, column: 113, scope: !9492)
!9498 = !DILocation(line: 345, column: 132, scope: !9492)
!9499 = !DILocation(line: 345, column: 162, scope: !9492)
!9500 = !DILocation(line: 346, column: 49, scope: !9492)
!9501 = !DILocation(line: 346, column: 71, scope: !9492)
!9502 = !DILocation(line: 346, column: 94, scope: !9492)
!9503 = !DILocation(line: 346, column: 113, scope: !9492)
!9504 = !DILocation(line: 346, column: 132, scope: !9492)
!9505 = !DILocation(line: 345, column: 8, scope: !9459)
!9506 = !DILocation(line: 354, column: 26, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9492, file: !9238, line: 347, column: 5)
!9508 = !DILocation(line: 354, column: 100, scope: !9507)
!9509 = !DILocation(line: 355, column: 24, scope: !9507)
!9510 = !DILocation(line: 355, column: 61, scope: !9507)
!9511 = !DILocation(line: 360, column: 7, scope: !9507)
!9512 = !DILocation(line: 363, column: 7, scope: !9507)
!9513 = !DILocation(line: 367, column: 26, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9459, file: !9238, line: 367, column: 8)
!9515 = !DILocation(line: 364, column: 5, scope: !9507)
!9516 = !DILocation(line: 367, column: 48, scope: !9514)
!9517 = !DILocation(line: 367, column: 73, scope: !9514)
!9518 = !DILocation(line: 367, column: 99, scope: !9514)
!9519 = !DILocation(line: 367, column: 118, scope: !9514)
!9520 = !DILocation(line: 367, column: 138, scope: !9514)
!9521 = !DILocation(line: 367, column: 8, scope: !9459)
!9522 = !DILocation(line: 372, column: 26, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9514, file: !9238, line: 368, column: 5)
!9524 = !DILocation(line: 373, column: 24, scope: !9523)
!9525 = !DILocation(line: 373, column: 61, scope: !9523)
!9526 = !DILocation(line: 377, column: 7, scope: !9523)
!9527 = !DILocation(line: 381, column: 24, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9459, file: !9238, line: 381, column: 8)
!9529 = !DILocation(line: 378, column: 5, scope: !9523)
!9530 = !DILocation(line: 381, column: 45, scope: !9528)
!9531 = !DILocation(line: 381, column: 69, scope: !9528)
!9532 = !DILocation(line: 381, column: 8, scope: !9459)
!9533 = !DILocation(line: 390, column: 7, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9528, file: !9238, line: 382, column: 5)
!9535 = !DILocation(line: 391, column: 5, scope: !9534)
!9536 = !DILocation(line: 394, column: 5, scope: !9459)
!9537 = !DILocation(line: 396, column: 17, scope: !9459)
!9538 = !DILocation(line: 398, column: 5, scope: !9459)
!9539 = !DILocation(line: 398, column: 11, scope: !9459)
!9540 = !DILocation(line: 398, column: 51, scope: !9459)
!9541 = !DILocation(line: 400, column: 11, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !9238, line: 400, column: 10)
!9543 = distinct !DILexicalBlock(scope: !9459, file: !9238, line: 399, column: 5)
!9544 = !DILocation(line: 400, column: 25, scope: !9542)
!9545 = !DILocation(line: 400, column: 39, scope: !9542)
!9546 = !DILocation(line: 400, column: 10, scope: !9543)
!9547 = distinct !{!9547, !9538, !9548}
!9548 = !DILocation(line: 405, column: 5, scope: !9459)
!9549 = !DILocation(line: 411, column: 17, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9237, file: !9238, line: 411, column: 6)
!9551 = !DILocation(line: 411, column: 6, scope: !9237)
!9552 = !DILocation(line: 414, column: 5, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9550, file: !9238, line: 412, column: 3)
!9554 = !DILocation(line: 416, column: 17, scope: !9553)
!9555 = !DILocation(line: 418, column: 5, scope: !9553)
!9556 = !DILocation(line: 418, column: 11, scope: !9553)
!9557 = !DILocation(line: 420, column: 11, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !9238, line: 420, column: 10)
!9559 = distinct !DILexicalBlock(scope: !9553, file: !9238, line: 419, column: 5)
!9560 = !DILocation(line: 420, column: 25, scope: !9558)
!9561 = !DILocation(line: 420, column: 39, scope: !9558)
!9562 = !DILocation(line: 420, column: 10, scope: !9559)
!9563 = distinct !{!9563, !9555, !9564}
!9564 = !DILocation(line: 425, column: 5, scope: !9553)
!9565 = !DILocation(line: 432, column: 27, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9553, file: !9238, line: 432, column: 8)
!9567 = !DILocation(line: 432, column: 49, scope: !9566)
!9568 = !DILocation(line: 432, column: 71, scope: !9566)
!9569 = !DILocation(line: 432, column: 94, scope: !9566)
!9570 = !DILocation(line: 432, column: 113, scope: !9566)
!9571 = !DILocation(line: 432, column: 132, scope: !9566)
!9572 = !DILocation(line: 432, column: 162, scope: !9566)
!9573 = !DILocation(line: 433, column: 49, scope: !9566)
!9574 = !DILocation(line: 433, column: 71, scope: !9566)
!9575 = !DILocation(line: 433, column: 94, scope: !9566)
!9576 = !DILocation(line: 433, column: 113, scope: !9566)
!9577 = !DILocation(line: 433, column: 132, scope: !9566)
!9578 = !DILocation(line: 432, column: 8, scope: !9553)
!9579 = !DILocation(line: 441, column: 26, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9566, file: !9238, line: 434, column: 5)
!9581 = !DILocation(line: 441, column: 100, scope: !9580)
!9582 = !DILocation(line: 445, column: 7, scope: !9580)
!9583 = !DILocation(line: 448, column: 7, scope: !9580)
!9584 = !DILocation(line: 453, column: 26, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9553, file: !9238, line: 453, column: 8)
!9586 = !DILocation(line: 449, column: 5, scope: !9580)
!9587 = !DILocation(line: 453, column: 48, scope: !9585)
!9588 = !DILocation(line: 453, column: 71, scope: !9585)
!9589 = !DILocation(line: 453, column: 95, scope: !9585)
!9590 = !DILocation(line: 453, column: 114, scope: !9585)
!9591 = !DILocation(line: 453, column: 134, scope: !9585)
!9592 = !DILocation(line: 453, column: 8, scope: !9553)
!9593 = !DILocation(line: 458, column: 24, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9585, file: !9238, line: 454, column: 5)
!9595 = !DILocation(line: 458, column: 61, scope: !9594)
!9596 = !DILocation(line: 462, column: 7, scope: !9594)
!9597 = !DILocation(line: 463, column: 5, scope: !9594)
!9598 = !DILocation(line: 466, column: 5, scope: !9553)
!9599 = !DILocation(line: 468, column: 17, scope: !9553)
!9600 = !DILocation(line: 470, column: 5, scope: !9553)
!9601 = !DILocation(line: 470, column: 11, scope: !9553)
!9602 = !DILocation(line: 470, column: 39, scope: !9553)
!9603 = !DILocation(line: 472, column: 11, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !9238, line: 472, column: 10)
!9605 = distinct !DILexicalBlock(scope: !9553, file: !9238, line: 471, column: 5)
!9606 = !DILocation(line: 472, column: 25, scope: !9604)
!9607 = !DILocation(line: 472, column: 39, scope: !9604)
!9608 = !DILocation(line: 472, column: 10, scope: !9605)
!9609 = distinct !{!9609, !9600, !9610}
!9610 = !DILocation(line: 477, column: 5, scope: !9553)
!9611 = !DILocation(line: 480, column: 1, scope: !9237)
!9612 = !DISubprogram(name: "HAL_GetTick", scope: !9613, file: !9613, line: 234, type: !4808, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!9613 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9614 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !9238, file: !9238, line: 489, type: !9615, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9617)
!9615 = !DISubroutineType(types: !9616)
!9616 = !{null, !9242}
!9617 = !{!9618, !9619}
!9618 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9614, file: !9238, line: 489, type: !9242)
!9619 = !DILocalVariable(name: "tempreg", scope: !9614, file: !9238, line: 491, type: !106)
!9620 = !DILocation(line: 0, scope: !9614)
!9621 = !DILocation(line: 494, column: 18, scope: !9614)
!9622 = !DILocation(line: 494, column: 39, scope: !9614)
!9623 = !DILocation(line: 502, column: 52, scope: !9614)
!9624 = !DILocation(line: 502, column: 63, scope: !9614)
!9625 = !DILocation(line: 502, column: 25, scope: !9614)
!9626 = !DILocation(line: 502, column: 33, scope: !9614)
!9627 = !DILocation(line: 503, column: 52, scope: !9614)
!9628 = !DILocation(line: 503, column: 89, scope: !9614)
!9629 = !DILocation(line: 503, column: 25, scope: !9614)
!9630 = !DILocation(line: 503, column: 33, scope: !9614)
!9631 = !DILocation(line: 504, column: 54, scope: !9614)
!9632 = !DILocation(line: 504, column: 128, scope: !9614)
!9633 = !DILocation(line: 504, column: 25, scope: !9614)
!9634 = !DILocation(line: 504, column: 33, scope: !9614)
!9635 = !DILocation(line: 505, column: 52, scope: !9614)
!9636 = !DILocation(line: 505, column: 89, scope: !9614)
!9637 = !DILocation(line: 505, column: 25, scope: !9614)
!9638 = !DILocation(line: 505, column: 33, scope: !9614)
!9639 = !DILocation(line: 506, column: 52, scope: !9614)
!9640 = !DILocation(line: 506, column: 89, scope: !9614)
!9641 = !DILocation(line: 506, column: 25, scope: !9614)
!9642 = !DILocation(line: 506, column: 33, scope: !9614)
!9643 = !DILocation(line: 508, column: 52, scope: !9614)
!9644 = !DILocation(line: 508, column: 63, scope: !9614)
!9645 = !DILocation(line: 508, column: 25, scope: !9614)
!9646 = !DILocation(line: 508, column: 33, scope: !9614)
!9647 = !DILocation(line: 509, column: 52, scope: !9614)
!9648 = !DILocation(line: 509, column: 89, scope: !9614)
!9649 = !DILocation(line: 509, column: 25, scope: !9614)
!9650 = !DILocation(line: 509, column: 33, scope: !9614)
!9651 = !DILocation(line: 510, column: 54, scope: !9614)
!9652 = !DILocation(line: 510, column: 128, scope: !9614)
!9653 = !DILocation(line: 510, column: 25, scope: !9614)
!9654 = !DILocation(line: 510, column: 33, scope: !9614)
!9655 = !DILocation(line: 511, column: 52, scope: !9614)
!9656 = !DILocation(line: 511, column: 89, scope: !9614)
!9657 = !DILocation(line: 511, column: 25, scope: !9614)
!9658 = !DILocation(line: 511, column: 33, scope: !9614)
!9659 = !DILocation(line: 513, column: 48, scope: !9614)
!9660 = !DILocation(line: 513, column: 56, scope: !9614)
!9661 = !DILocation(line: 513, column: 18, scope: !9614)
!9662 = !DILocation(line: 513, column: 29, scope: !9614)
!9663 = !DILocation(line: 514, column: 48, scope: !9614)
!9664 = !DILocation(line: 514, column: 82, scope: !9614)
!9665 = !DILocation(line: 514, column: 18, scope: !9614)
!9666 = !DILocation(line: 514, column: 29, scope: !9614)
!9667 = !DILocation(line: 517, column: 39, scope: !9614)
!9668 = !DILocation(line: 517, column: 18, scope: !9614)
!9669 = !DILocation(line: 517, column: 37, scope: !9614)
!9670 = !DILocation(line: 520, column: 39, scope: !9614)
!9671 = !DILocation(line: 520, column: 18, scope: !9614)
!9672 = !DILocation(line: 520, column: 37, scope: !9614)
!9673 = !DILocation(line: 523, column: 42, scope: !9614)
!9674 = !DILocation(line: 523, column: 18, scope: !9614)
!9675 = !DILocation(line: 523, column: 40, scope: !9614)
!9676 = !DILocation(line: 526, column: 42, scope: !9614)
!9677 = !DILocation(line: 526, column: 18, scope: !9614)
!9678 = !DILocation(line: 526, column: 40, scope: !9614)
!9679 = !DILocation(line: 529, column: 19, scope: !9614)
!9680 = !DILocation(line: 529, column: 24, scope: !9614)
!9681 = !DILocation(line: 530, column: 67, scope: !9614)
!9682 = !DILocation(line: 530, column: 72, scope: !9614)
!9683 = !DILocation(line: 530, column: 59, scope: !9614)
!9684 = !DILocation(line: 530, column: 18, scope: !9614)
!9685 = !DILocation(line: 530, column: 36, scope: !9614)
!9686 = !DILocation(line: 533, column: 38, scope: !9614)
!9687 = !DILocation(line: 533, column: 18, scope: !9614)
!9688 = !DILocation(line: 533, column: 36, scope: !9614)
!9689 = !DILocation(line: 536, column: 42, scope: !9614)
!9690 = !DILocation(line: 536, column: 18, scope: !9614)
!9691 = !DILocation(line: 536, column: 40, scope: !9614)
!9692 = !DILocation(line: 539, column: 40, scope: !9614)
!9693 = !DILocation(line: 539, column: 18, scope: !9614)
!9694 = !DILocation(line: 539, column: 38, scope: !9614)
!9695 = !DILocation(line: 542, column: 39, scope: !9614)
!9696 = !DILocation(line: 542, column: 18, scope: !9614)
!9697 = !DILocation(line: 542, column: 37, scope: !9614)
!9698 = !DILocation(line: 545, column: 40, scope: !9614)
!9699 = !DILocation(line: 545, column: 18, scope: !9614)
!9700 = !DILocation(line: 545, column: 38, scope: !9614)
!9701 = !DILocation(line: 548, column: 13, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9614, file: !9238, line: 548, column: 7)
!9703 = !DILocation(line: 548, column: 7, scope: !9614)
!9704 = !DILocation(line: 550, column: 20, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9702, file: !9238, line: 549, column: 3)
!9706 = !DILocation(line: 550, column: 37, scope: !9705)
!9707 = !DILocation(line: 556, column: 1, scope: !9614)
!9708 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !9238, file: !9238, line: 569, type: !5979, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9709)
!9709 = !{!9710, !9711, !9712, !9713, !9714, !9715, !9716}
!9710 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !9708, file: !9238, line: 569, type: !106)
!9711 = !DILocalVariable(name: "tmpreg1", scope: !9708, file: !9238, line: 571, type: !106)
!9712 = !DILocalVariable(name: "frequency", scope: !9708, file: !9238, line: 573, type: !106)
!9713 = !DILocalVariable(name: "vcoinput", scope: !9708, file: !9238, line: 575, type: !106)
!9714 = !DILocalVariable(name: "saiclocksource", scope: !9708, file: !9238, line: 577, type: !106)
!9715 = !DILocalVariable(name: "srcclk", scope: !9708, file: !9238, line: 578, type: !106)
!9716 = !DILocalVariable(name: "vcooutput", scope: !9708, file: !9238, line: 580, type: !106)
!9717 = !DILocation(line: 0, scope: !9708)
!9718 = !DILocation(line: 581, column: 3, scope: !9708)
!9719 = !DILocation(line: 586, column: 29, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9721, file: !9238, line: 585, column: 5)
!9721 = distinct !DILexicalBlock(scope: !9708, file: !9238, line: 582, column: 3)
!9722 = !DILocation(line: 588, column: 7, scope: !9720)
!9723 = !DILocation(line: 594, column: 20, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9725, file: !9238, line: 594, column: 14)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !9238, line: 591, column: 9)
!9726 = distinct !DILexicalBlock(scope: !9720, file: !9238, line: 589, column: 7)
!9727 = !DILocation(line: 0, scope: !9724)
!9728 = !DILocation(line: 606, column: 27, scope: !9725)
!9729 = !DILocation(line: 606, column: 64, scope: !9725)
!9730 = !DILocation(line: 607, column: 42, scope: !9725)
!9731 = !DILocation(line: 607, column: 79, scope: !9725)
!9732 = !DILocation(line: 607, column: 33, scope: !9725)
!9733 = !DILocation(line: 607, column: 86, scope: !9725)
!9734 = !DILocation(line: 610, column: 29, scope: !9725)
!9735 = !DILocation(line: 610, column: 63, scope: !9725)
!9736 = !DILocation(line: 610, column: 70, scope: !9725)
!9737 = !DILocation(line: 611, column: 32, scope: !9725)
!9738 = !DILocation(line: 612, column: 11, scope: !9725)
!9739 = !DILocation(line: 619, column: 20, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !9238, line: 619, column: 14)
!9741 = distinct !DILexicalBlock(scope: !9726, file: !9238, line: 616, column: 9)
!9742 = !DILocation(line: 0, scope: !9740)
!9743 = !DILocation(line: 632, column: 27, scope: !9741)
!9744 = !DILocation(line: 632, column: 64, scope: !9741)
!9745 = !DILocation(line: 633, column: 42, scope: !9741)
!9746 = !DILocation(line: 633, column: 79, scope: !9741)
!9747 = !DILocation(line: 633, column: 33, scope: !9741)
!9748 = !DILocation(line: 633, column: 86, scope: !9741)
!9749 = !DILocation(line: 636, column: 28, scope: !9741)
!9750 = !DILocation(line: 636, column: 36, scope: !9741)
!9751 = !DILocation(line: 636, column: 62, scope: !9741)
!9752 = !DILocation(line: 637, column: 32, scope: !9741)
!9753 = !DILocation(line: 638, column: 11, scope: !9741)
!9754 = !DILocation(line: 645, column: 20, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !9238, line: 645, column: 14)
!9756 = distinct !DILexicalBlock(scope: !9726, file: !9238, line: 642, column: 9)
!9757 = !DILocation(line: 0, scope: !9755)
!9758 = !DILocation(line: 658, column: 27, scope: !9756)
!9759 = !DILocation(line: 658, column: 55, scope: !9756)
!9760 = !DILocation(line: 659, column: 42, scope: !9756)
!9761 = !DILocation(line: 659, column: 70, scope: !9756)
!9762 = !DILocation(line: 659, column: 33, scope: !9756)
!9763 = !DILocation(line: 659, column: 77, scope: !9756)
!9764 = !DILocation(line: 660, column: 11, scope: !9756)
!9765 = !DILocation(line: 665, column: 11, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9726, file: !9238, line: 663, column: 9)
!9767 = !DILocation(line: 669, column: 20, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !9238, line: 669, column: 14)
!9769 = distinct !DILexicalBlock(scope: !9726, file: !9238, line: 668, column: 9)
!9770 = !DILocation(line: 691, column: 16, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9721, file: !9238, line: 689, column: 5)
!9772 = !DILocation(line: 692, column: 7, scope: !9771)
!9773 = !DILocation(line: 706, column: 20, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9775, file: !9238, line: 706, column: 14)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !9238, line: 703, column: 9)
!9776 = distinct !DILexicalBlock(scope: !9771, file: !9238, line: 693, column: 7)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 718, column: 53, scope: !9775)
!9779 = !DILocation(line: 718, column: 90, scope: !9775)
!9780 = !DILocation(line: 718, column: 43, scope: !9775)
!9781 = !DILocation(line: 720, column: 53, scope: !9775)
!9782 = !DILocation(line: 720, column: 90, scope: !9775)
!9783 = !DILocation(line: 720, column: 44, scope: !9775)
!9784 = !DILocation(line: 721, column: 11, scope: !9775)
!9785 = !DILocation(line: 728, column: 20, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9787, file: !9238, line: 728, column: 14)
!9787 = distinct !DILexicalBlock(scope: !9776, file: !9238, line: 725, column: 9)
!9788 = !DILocation(line: 0, scope: !9786)
!9789 = !DILocation(line: 740, column: 53, scope: !9787)
!9790 = !DILocation(line: 740, column: 81, scope: !9787)
!9791 = !DILocation(line: 740, column: 43, scope: !9787)
!9792 = !DILocation(line: 742, column: 53, scope: !9787)
!9793 = !DILocation(line: 742, column: 81, scope: !9787)
!9794 = !DILocation(line: 742, column: 44, scope: !9787)
!9795 = !DILocation(line: 743, column: 11, scope: !9787)
!9796 = !DILocation(line: 748, column: 20, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9798, file: !9238, line: 748, column: 14)
!9798 = distinct !DILexicalBlock(scope: !9776, file: !9238, line: 747, column: 9)
!9799 = !DILocation(line: 770, column: 16, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9721, file: !9238, line: 768, column: 5)
!9801 = !DILocation(line: 771, column: 7, scope: !9800)
!9802 = !DILocation(line: 785, column: 20, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !9238, line: 785, column: 14)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !9238, line: 782, column: 9)
!9805 = distinct !DILexicalBlock(scope: !9800, file: !9238, line: 772, column: 7)
!9806 = !DILocation(line: 0, scope: !9803)
!9807 = !DILocation(line: 797, column: 53, scope: !9804)
!9808 = !DILocation(line: 797, column: 90, scope: !9804)
!9809 = !DILocation(line: 797, column: 43, scope: !9804)
!9810 = !DILocation(line: 799, column: 53, scope: !9804)
!9811 = !DILocation(line: 799, column: 90, scope: !9804)
!9812 = !DILocation(line: 799, column: 44, scope: !9804)
!9813 = !DILocation(line: 800, column: 11, scope: !9804)
!9814 = !DILocation(line: 807, column: 20, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !9238, line: 807, column: 14)
!9816 = distinct !DILexicalBlock(scope: !9805, file: !9238, line: 804, column: 9)
!9817 = !DILocation(line: 0, scope: !9815)
!9818 = !DILocation(line: 819, column: 53, scope: !9816)
!9819 = !DILocation(line: 819, column: 81, scope: !9816)
!9820 = !DILocation(line: 819, column: 43, scope: !9816)
!9821 = !DILocation(line: 821, column: 53, scope: !9816)
!9822 = !DILocation(line: 821, column: 81, scope: !9816)
!9823 = !DILocation(line: 821, column: 44, scope: !9816)
!9824 = !DILocation(line: 822, column: 11, scope: !9816)
!9825 = !DILocation(line: 827, column: 20, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9827, file: !9238, line: 827, column: 14)
!9827 = distinct !DILexicalBlock(scope: !9805, file: !9238, line: 826, column: 9)
!9828 = !DILocation(line: 847, column: 3, scope: !9708)
!9829 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !9238, file: !9238, line: 2766, type: !9830, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9832)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{null, !160}
!9832 = !{!9833}
!9833 = !DILocalVariable(name: "Mode", arg: 1, scope: !9829, file: !9238, line: 2766, type: !160)
!9834 = !DILocation(line: 0, scope: !9829)
!9835 = !DILocation(line: 2770, column: 11, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9829, file: !9238, line: 2770, column: 6)
!9837 = !DILocation(line: 0, scope: !9836)
!9838 = !DILocation(line: 2770, column: 6, scope: !9829)
!9839 = !DILocation(line: 2778, column: 1, scope: !9829)
!9840 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !9238, file: !9238, line: 2803, type: !9841, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9844)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{!9241, !9843}
!9843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9249, size: 32)
!9844 = !{!9845, !9846}
!9845 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !9840, file: !9238, line: 2803, type: !9843)
!9846 = !DILocalVariable(name: "tickstart", scope: !9840, file: !9238, line: 2805, type: !106)
!9847 = !DILocation(line: 0, scope: !9840)
!9848 = !DILocation(line: 2821, column: 3, scope: !9840)
!9849 = !DILocation(line: 2824, column: 15, scope: !9840)
!9850 = !DILocation(line: 2825, column: 3, scope: !9840)
!9851 = !DILocation(line: 2825, column: 9, scope: !9840)
!9852 = !DILocation(line: 2827, column: 9, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !9238, line: 2827, column: 8)
!9854 = distinct !DILexicalBlock(scope: !9840, file: !9238, line: 2826, column: 3)
!9855 = !DILocation(line: 2827, column: 23, scope: !9853)
!9856 = !DILocation(line: 2827, column: 37, scope: !9853)
!9857 = !DILocation(line: 2827, column: 8, scope: !9854)
!9858 = distinct !{!9858, !9850, !9859}
!9859 = !DILocation(line: 2832, column: 3, scope: !9840)
!9860 = !DILocation(line: 2840, column: 3, scope: !9840)
!9861 = !DILocation(line: 2866, column: 3, scope: !9840)
!9862 = !DILocation(line: 2869, column: 15, scope: !9840)
!9863 = !DILocation(line: 2870, column: 3, scope: !9840)
!9864 = !DILocation(line: 2870, column: 9, scope: !9840)
!9865 = !DILocation(line: 2870, column: 48, scope: !9840)
!9866 = !DILocation(line: 2872, column: 9, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !9238, line: 2872, column: 8)
!9868 = distinct !DILexicalBlock(scope: !9840, file: !9238, line: 2871, column: 3)
!9869 = !DILocation(line: 2872, column: 23, scope: !9867)
!9870 = !DILocation(line: 2872, column: 37, scope: !9867)
!9871 = !DILocation(line: 2872, column: 8, scope: !9868)
!9872 = distinct !{!9872, !9863, !9873}
!9873 = !DILocation(line: 2877, column: 3, scope: !9840)
!9874 = !DILocation(line: 2880, column: 1, scope: !9840)
!9875 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !9238, file: !9238, line: 2886, type: !9876, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!9241}
!9878 = !{!9879}
!9879 = !DILocalVariable(name: "tickstart", scope: !9875, file: !9238, line: 2888, type: !106)
!9880 = !DILocation(line: 2891, column: 3, scope: !9875)
!9881 = !DILocation(line: 2894, column: 15, scope: !9875)
!9882 = !DILocation(line: 0, scope: !9875)
!9883 = !DILocation(line: 2895, column: 3, scope: !9875)
!9884 = !DILocation(line: 2895, column: 9, scope: !9875)
!9885 = !DILocation(line: 2895, column: 45, scope: !9875)
!9886 = !DILocation(line: 2897, column: 9, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !9238, line: 2897, column: 8)
!9888 = distinct !DILexicalBlock(scope: !9875, file: !9238, line: 2896, column: 3)
!9889 = !DILocation(line: 2897, column: 23, scope: !9887)
!9890 = !DILocation(line: 2897, column: 36, scope: !9887)
!9891 = !DILocation(line: 2897, column: 8, scope: !9888)
!9892 = distinct !{!9892, !9883, !9893}
!9893 = !DILocation(line: 2902, column: 3, scope: !9875)
!9894 = !DILocation(line: 2905, column: 1, scope: !9875)
!9895 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !9238, file: !9238, line: 2916, type: !9896, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9899)
!9896 = !DISubroutineType(types: !9897)
!9897 = !{!9241, !9898}
!9898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9258, size: 32)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !9895, file: !9238, line: 2916, type: !9898)
!9901 = !DILocalVariable(name: "tickstart", scope: !9895, file: !9238, line: 2918, type: !106)
!9902 = !DILocation(line: 0, scope: !9895)
!9903 = !DILocation(line: 2934, column: 3, scope: !9895)
!9904 = !DILocation(line: 2937, column: 15, scope: !9895)
!9905 = !DILocation(line: 2938, column: 3, scope: !9895)
!9906 = !DILocation(line: 2938, column: 9, scope: !9895)
!9907 = !DILocation(line: 2940, column: 9, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !9238, line: 2940, column: 8)
!9909 = distinct !DILexicalBlock(scope: !9895, file: !9238, line: 2939, column: 3)
!9910 = !DILocation(line: 2940, column: 23, scope: !9908)
!9911 = !DILocation(line: 2940, column: 37, scope: !9908)
!9912 = !DILocation(line: 2940, column: 8, scope: !9909)
!9913 = distinct !{!9913, !9905, !9914}
!9914 = !DILocation(line: 2945, column: 3, scope: !9895)
!9915 = !DILocation(line: 2953, column: 3, scope: !9895)
!9916 = !DILocation(line: 2970, column: 3, scope: !9895)
!9917 = !DILocation(line: 2973, column: 15, scope: !9895)
!9918 = !DILocation(line: 2974, column: 3, scope: !9895)
!9919 = !DILocation(line: 2974, column: 9, scope: !9895)
!9920 = !DILocation(line: 2974, column: 37, scope: !9895)
!9921 = !DILocation(line: 2976, column: 9, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !9238, line: 2976, column: 8)
!9923 = distinct !DILexicalBlock(scope: !9895, file: !9238, line: 2975, column: 3)
!9924 = !DILocation(line: 2976, column: 23, scope: !9922)
!9925 = !DILocation(line: 2976, column: 37, scope: !9922)
!9926 = !DILocation(line: 2976, column: 8, scope: !9923)
!9927 = distinct !{!9927, !9918, !9928}
!9928 = !DILocation(line: 2981, column: 3, scope: !9895)
!9929 = !DILocation(line: 2984, column: 1, scope: !9895)
!9930 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !9238, file: !9238, line: 2990, type: !9876, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9931)
!9931 = !{!9932}
!9932 = !DILocalVariable(name: "tickstart", scope: !9930, file: !9238, line: 2992, type: !106)
!9933 = !DILocation(line: 2995, column: 3, scope: !9930)
!9934 = !DILocation(line: 2998, column: 15, scope: !9930)
!9935 = !DILocation(line: 0, scope: !9930)
!9936 = !DILocation(line: 2999, column: 3, scope: !9930)
!9937 = !DILocation(line: 2999, column: 9, scope: !9930)
!9938 = !DILocation(line: 3001, column: 9, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !9238, line: 3001, column: 8)
!9940 = distinct !DILexicalBlock(scope: !9930, file: !9238, line: 3000, column: 3)
!9941 = !DILocation(line: 3001, column: 23, scope: !9939)
!9942 = !DILocation(line: 3001, column: 36, scope: !9939)
!9943 = !DILocation(line: 3001, column: 8, scope: !9940)
!9944 = distinct !{!9944, !9936, !9945}
!9945 = !DILocation(line: 3006, column: 3, scope: !9930)
!9946 = !DILocation(line: 3009, column: 1, scope: !9930)
!9947 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9238, file: !9238, line: 3051, type: !4808, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9948)
!9948 = !{!9949, !9950, !9951, !9952, !9953}
!9949 = !DILocalVariable(name: "pllm", scope: !9947, file: !9238, line: 3053, type: !106)
!9950 = !DILocalVariable(name: "pllvco", scope: !9947, file: !9238, line: 3054, type: !106)
!9951 = !DILocalVariable(name: "pllp", scope: !9947, file: !9238, line: 3055, type: !106)
!9952 = !DILocalVariable(name: "pllr", scope: !9947, file: !9238, line: 3056, type: !106)
!9953 = !DILocalVariable(name: "sysclockfreq", scope: !9947, file: !9238, line: 3057, type: !106)
!9954 = !DILocation(line: 0, scope: !9947)
!9955 = !DILocation(line: 3060, column: 16, scope: !9947)
!9956 = !DILocation(line: 3060, column: 3, scope: !9947)
!9957 = !DILocation(line: 3076, column: 19, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !9238, line: 3073, column: 5)
!9959 = distinct !DILexicalBlock(scope: !9947, file: !9238, line: 3061, column: 3)
!9960 = !DILocation(line: 3076, column: 27, scope: !9958)
!9961 = !DILocation(line: 3077, column: 10, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9958, file: !9238, line: 3077, column: 10)
!9963 = !DILocation(line: 0, scope: !9962)
!9964 = !DILocation(line: 3087, column: 23, scope: !9958)
!9965 = !DILocation(line: 3087, column: 82, scope: !9958)
!9966 = !DILocation(line: 3089, column: 28, scope: !9958)
!9967 = !DILocation(line: 3090, column: 7, scope: !9958)
!9968 = !DILocation(line: 3096, column: 19, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9959, file: !9238, line: 3093, column: 5)
!9970 = !DILocation(line: 3096, column: 27, scope: !9969)
!9971 = !DILocation(line: 3097, column: 10, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9969, file: !9238, line: 3097, column: 10)
!9973 = !DILocation(line: 0, scope: !9972)
!9974 = !DILocation(line: 3107, column: 21, scope: !9969)
!9975 = !DILocation(line: 3107, column: 49, scope: !9969)
!9976 = !DILocation(line: 3109, column: 28, scope: !9969)
!9977 = !DILocation(line: 3110, column: 7, scope: !9969)
!9978 = !DILocation(line: 0, scope: !9959)
!9979 = !DILocation(line: 3118, column: 3, scope: !9947)
!9980 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9238, file: !9238, line: 3143, type: !9876, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !9981)
!9981 = !{!9982}
!9982 = !DILocalVariable(name: "tickstart", scope: !9980, file: !9238, line: 3145, type: !106)
!9983 = !DILocation(line: 3148, column: 15, scope: !9980)
!9984 = !DILocation(line: 0, scope: !9980)
!9985 = !DILocation(line: 3151, column: 3, scope: !9980)
!9986 = !DILocation(line: 3154, column: 3, scope: !9980)
!9987 = !DILocation(line: 3154, column: 10, scope: !9980)
!9988 = !DILocation(line: 3154, column: 43, scope: !9980)
!9989 = !DILocation(line: 3156, column: 10, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9991, file: !9238, line: 3156, column: 9)
!9991 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3155, column: 3)
!9992 = !DILocation(line: 3156, column: 24, scope: !9990)
!9993 = !DILocation(line: 3156, column: 37, scope: !9990)
!9994 = !DILocation(line: 3156, column: 9, scope: !9991)
!9995 = distinct !{!9995, !9986, !9996}
!9996 = !DILocation(line: 3160, column: 3, scope: !9980)
!9997 = !DILocation(line: 3163, column: 3, scope: !9980)
!9998 = !DILocation(line: 3166, column: 15, scope: !9980)
!9999 = !DILocation(line: 3169, column: 3, scope: !9980)
!10000 = !DILocation(line: 3172, column: 3, scope: !9980)
!10001 = !DILocation(line: 3172, column: 10, scope: !9980)
!10002 = !DILocation(line: 3172, column: 44, scope: !9980)
!10003 = !DILocation(line: 3174, column: 24, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !9238, line: 3174, column: 9)
!10005 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3173, column: 3)
!10006 = !DILocation(line: 3174, column: 37, scope: !10004)
!10007 = !DILocation(line: 3174, column: 9, scope: !10005)
!10008 = distinct !{!10008, !10000, !10009}
!10009 = !DILocation(line: 3178, column: 3, scope: !9980)
!10010 = !DILocation(line: 3184, column: 3, scope: !9980)
!10011 = !DILocation(line: 3187, column: 3, scope: !9980)
!10012 = !DILocation(line: 3187, column: 10, scope: !9980)
!10013 = !DILocation(line: 3187, column: 43, scope: !9980)
!10014 = !DILocation(line: 3189, column: 24, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !9238, line: 3189, column: 9)
!10016 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3188, column: 3)
!10017 = !DILocation(line: 3189, column: 37, scope: !10015)
!10018 = !DILocation(line: 3189, column: 9, scope: !10016)
!10019 = distinct !{!10019, !10011, !10020}
!10020 = !DILocation(line: 3193, column: 3, scope: !9980)
!10021 = !DILocation(line: 3199, column: 3, scope: !9980)
!10022 = !DILocation(line: 3202, column: 3, scope: !9980)
!10023 = !DILocation(line: 3202, column: 10, scope: !9980)
!10024 = !DILocation(line: 3202, column: 43, scope: !9980)
!10025 = !DILocation(line: 3204, column: 24, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !9238, line: 3204, column: 9)
!10027 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3203, column: 3)
!10028 = !DILocation(line: 3204, column: 37, scope: !10026)
!10029 = !DILocation(line: 3204, column: 9, scope: !10027)
!10030 = distinct !{!10030, !10022, !10031}
!10031 = !DILocation(line: 3208, column: 3, scope: !9980)
!10032 = !DILocation(line: 3215, column: 3, scope: !9980)
!10033 = !DILocation(line: 3218, column: 3, scope: !9980)
!10034 = !DILocation(line: 3218, column: 10, scope: !9980)
!10035 = !DILocation(line: 3218, column: 46, scope: !9980)
!10036 = !DILocation(line: 3220, column: 24, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !9238, line: 3220, column: 9)
!10038 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3219, column: 3)
!10039 = !DILocation(line: 3220, column: 37, scope: !10037)
!10040 = !DILocation(line: 3220, column: 9, scope: !10038)
!10041 = distinct !{!10041, !10033, !10042}
!10042 = !DILocation(line: 3224, column: 3, scope: !9980)
!10043 = !DILocation(line: 3232, column: 3, scope: !9980)
!10044 = !DILocation(line: 3235, column: 3, scope: !9980)
!10045 = !DILocation(line: 3235, column: 10, scope: !9980)
!10046 = !DILocation(line: 3235, column: 46, scope: !9980)
!10047 = !DILocation(line: 3237, column: 10, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !9238, line: 3237, column: 9)
!10049 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3236, column: 3)
!10050 = !DILocation(line: 3237, column: 24, scope: !10048)
!10051 = !DILocation(line: 3237, column: 37, scope: !10048)
!10052 = !DILocation(line: 3237, column: 9, scope: !10049)
!10053 = distinct !{!10053, !10044, !10054}
!10054 = !DILocation(line: 3241, column: 3, scope: !9980)
!10055 = !DILocation(line: 3247, column: 16, scope: !9980)
!10056 = !DILocation(line: 3257, column: 19, scope: !9980)
!10057 = !DILocation(line: 3270, column: 19, scope: !9980)
!10058 = !DILocation(line: 3274, column: 3, scope: !9980)
!10059 = !DILocation(line: 3277, column: 3, scope: !9980)
!10060 = !DILocation(line: 3281, column: 3, scope: !9980)
!10061 = !DILocation(line: 3285, column: 3, scope: !9980)
!10062 = !DILocation(line: 3288, column: 3, scope: !9980)
!10063 = !DILocation(line: 3292, column: 3, scope: !9980)
!10064 = !DILocation(line: 3296, column: 3, scope: !9980)
!10065 = !DILocation(line: 3299, column: 3, scope: !9980)
!10066 = !DILocation(line: 3302, column: 19, scope: !9980)
!10067 = !DILocation(line: 3305, column: 19, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !9980, file: !9238, line: 3305, column: 6)
!10069 = !DILocation(line: 3305, column: 6, scope: !10068)
!10070 = !DILocation(line: 3305, column: 31, scope: !10068)
!10071 = !DILocation(line: 0, scope: !10068)
!10072 = !DILocation(line: 3313, column: 1, scope: !9980)
!10073 = !DISubprogram(name: "HAL_InitTick", scope: !9613, file: !9613, line: 223, type: !10074, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!10074 = !DISubroutineType(types: !10075)
!10075 = !{!9241, !106}
!10076 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9238, file: !9238, line: 3333, type: !10077, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !10101)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!9241, !10079}
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10080, size: 32)
!10080 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10081, line: 70, baseType: !10082)
!10081 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10081, line: 49, size: 416, elements: !10083)
!10083 = !{!10084, !10085, !10086, !10087, !10088, !10089, !10090}
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10082, file: !10081, line: 51, baseType: !106, size: 32)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10082, file: !10081, line: 54, baseType: !106, size: 32, offset: 32)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10082, file: !10081, line: 57, baseType: !106, size: 32, offset: 64)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10082, file: !10081, line: 60, baseType: !106, size: 32, offset: 96)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10082, file: !10081, line: 63, baseType: !106, size: 32, offset: 128)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10082, file: !10081, line: 66, baseType: !106, size: 32, offset: 160)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10082, file: !10081, line: 69, baseType: !10091, size: 224, offset: 192)
!10091 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9244, line: 73, baseType: !10092)
!10092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9244, line: 45, size: 224, elements: !10093)
!10093 = !{!10094, !10095, !10096, !10097, !10098, !10099, !10100}
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10092, file: !9244, line: 47, baseType: !106, size: 32)
!10095 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10092, file: !9244, line: 50, baseType: !106, size: 32, offset: 32)
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10092, file: !9244, line: 53, baseType: !106, size: 32, offset: 64)
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10092, file: !9244, line: 56, baseType: !106, size: 32, offset: 96)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10092, file: !9244, line: 60, baseType: !106, size: 32, offset: 128)
!10099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10092, file: !9244, line: 63, baseType: !106, size: 32, offset: 160)
!10100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10092, file: !9244, line: 68, baseType: !106, size: 32, offset: 192)
!10101 = !{!10102, !10103, !10104, !10105, !10109}
!10102 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10076, file: !9238, line: 3333, type: !10079)
!10103 = !DILocalVariable(name: "tickstart", scope: !10076, file: !9238, line: 3335, type: !106)
!10104 = !DILocalVariable(name: "pll_config", scope: !10076, file: !9238, line: 3335, type: !106)
!10105 = !DILocalVariable(name: "pwrclkchanged", scope: !10106, file: !9238, line: 3517, type: !10108)
!10106 = distinct !DILexicalBlock(scope: !10107, file: !9238, line: 3516, column: 3)
!10107 = distinct !DILexicalBlock(scope: !10076, file: !9238, line: 3515, column: 6)
!10108 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !781, line: 188, baseType: !2757)
!10109 = !DILocalVariable(name: "tmpreg", scope: !10110, file: !9238, line: 3526, type: !127)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !9238, line: 3526, column: 7)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !9238, line: 3525, column: 5)
!10112 = distinct !DILexicalBlock(scope: !10106, file: !9238, line: 3524, column: 8)
!10113 = !DILocation(line: 0, scope: !10076)
!10114 = !DILocation(line: 3338, column: 24, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10076, file: !9238, line: 3338, column: 6)
!10116 = !DILocation(line: 3338, column: 6, scope: !10076)
!10117 = !DILocation(line: 3346, column: 27, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10076, file: !9238, line: 3346, column: 6)
!10119 = !DILocation(line: 3346, column: 43, scope: !10118)
!10120 = !DILocation(line: 3346, column: 69, scope: !10118)
!10121 = !DILocation(line: 3346, column: 6, scope: !10076)
!10122 = !DILocation(line: 3352, column: 9, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !9238, line: 3352, column: 8)
!10124 = distinct !DILexicalBlock(scope: !10118, file: !9238, line: 3347, column: 3)
!10125 = !DILocation(line: 3352, column: 39, scope: !10123)
!10126 = !DILocation(line: 3352, column: 128, scope: !10123)
!10127 = !DILocation(line: 3353, column: 9, scope: !10123)
!10128 = !DILocation(line: 3353, column: 39, scope: !10123)
!10129 = !DILocation(line: 3353, column: 60, scope: !10123)
!10130 = !DILocation(line: 3353, column: 70, scope: !10123)
!10131 = !DILocation(line: 3353, column: 78, scope: !10123)
!10132 = !DILocation(line: 3353, column: 100, scope: !10123)
!10133 = !DILocation(line: 3353, column: 128, scope: !10123)
!10134 = !DILocation(line: 3354, column: 9, scope: !10123)
!10135 = !DILocation(line: 3354, column: 39, scope: !10123)
!10136 = !DILocation(line: 3354, column: 61, scope: !10123)
!10137 = !DILocation(line: 3354, column: 71, scope: !10123)
!10138 = !DILocation(line: 3354, column: 79, scope: !10123)
!10139 = !DILocation(line: 3354, column: 101, scope: !10123)
!10140 = !DILocation(line: 3352, column: 8, scope: !10124)
!10141 = !DILocation(line: 3360, column: 11, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !9238, line: 3360, column: 10)
!10143 = distinct !DILexicalBlock(scope: !10123, file: !9238, line: 3359, column: 5)
!10144 = !DILocation(line: 3360, column: 57, scope: !10142)
!10145 = !DILocation(line: 3360, column: 80, scope: !10142)
!10146 = !DILocation(line: 3360, column: 89, scope: !10142)
!10147 = !DILocation(line: 3360, column: 10, scope: !10143)
!10148 = !DILocation(line: 3368, column: 7, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !9238, line: 3368, column: 7)
!10150 = distinct !DILexicalBlock(scope: !10151, file: !9238, line: 3368, column: 7)
!10151 = distinct !DILexicalBlock(scope: !10123, file: !9238, line: 3366, column: 5)
!10152 = !DILocation(line: 3368, column: 7, scope: !10150)
!10153 = !DILocation(line: 3368, column: 7, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10149, file: !9238, line: 3368, column: 7)
!10155 = !DILocation(line: 3368, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !9238, line: 3368, column: 7)
!10157 = distinct !DILexicalBlock(scope: !10149, file: !9238, line: 3368, column: 7)
!10158 = !DILocation(line: 3368, column: 7, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10157, file: !9238, line: 3368, column: 7)
!10160 = !DILocation(line: 0, scope: !10149)
!10161 = !DILocation(line: 3371, column: 30, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10151, file: !9238, line: 3371, column: 10)
!10163 = !DILocation(line: 3371, column: 40, scope: !10162)
!10164 = !DILocation(line: 0, scope: !10162)
!10165 = !DILocation(line: 3371, column: 10, scope: !10151)
!10166 = !DILocation(line: 3377, column: 15, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !9238, line: 3372, column: 7)
!10168 = !DILocation(line: 3377, column: 51, scope: !10167)
!10169 = !DILocation(line: 3377, column: 9, scope: !10167)
!10170 = !DILocation(line: 3379, column: 15, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !9238, line: 3379, column: 14)
!10172 = distinct !DILexicalBlock(scope: !10167, file: !9238, line: 3378, column: 9)
!10173 = !DILocation(line: 3379, column: 29, scope: !10171)
!10174 = !DILocation(line: 3379, column: 43, scope: !10171)
!10175 = !DILocation(line: 3379, column: 14, scope: !10172)
!10176 = distinct !{!10176, !10169, !10177}
!10177 = !DILocation(line: 3383, column: 9, scope: !10167)
!10178 = !DILocation(line: 3391, column: 15, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10162, file: !9238, line: 3386, column: 7)
!10180 = !DILocation(line: 3391, column: 9, scope: !10179)
!10181 = !DILocation(line: 3393, column: 15, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !9238, line: 3393, column: 14)
!10183 = distinct !DILexicalBlock(scope: !10179, file: !9238, line: 3392, column: 9)
!10184 = !DILocation(line: 3393, column: 29, scope: !10182)
!10185 = !DILocation(line: 3393, column: 43, scope: !10182)
!10186 = !DILocation(line: 3393, column: 14, scope: !10183)
!10187 = distinct !{!10187, !10180, !10188}
!10188 = !DILocation(line: 3397, column: 9, scope: !10179)
!10189 = !DILocation(line: 3402, column: 27, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10076, file: !9238, line: 3402, column: 6)
!10191 = !DILocation(line: 3402, column: 43, scope: !10190)
!10192 = !DILocation(line: 3402, column: 69, scope: !10190)
!10193 = !DILocation(line: 3402, column: 6, scope: !10076)
!10194 = !DILocation(line: 3410, column: 9, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !9238, line: 3410, column: 8)
!10196 = distinct !DILexicalBlock(scope: !10190, file: !9238, line: 3403, column: 3)
!10197 = !DILocation(line: 3410, column: 39, scope: !10195)
!10198 = !DILocation(line: 3410, column: 128, scope: !10195)
!10199 = !DILocation(line: 3411, column: 9, scope: !10195)
!10200 = !DILocation(line: 3411, column: 39, scope: !10195)
!10201 = !DILocation(line: 3411, column: 60, scope: !10195)
!10202 = !DILocation(line: 3411, column: 70, scope: !10195)
!10203 = !DILocation(line: 3411, column: 78, scope: !10195)
!10204 = !DILocation(line: 3411, column: 100, scope: !10195)
!10205 = !DILocation(line: 3411, column: 128, scope: !10195)
!10206 = !DILocation(line: 3412, column: 9, scope: !10195)
!10207 = !DILocation(line: 3412, column: 39, scope: !10195)
!10208 = !DILocation(line: 3412, column: 61, scope: !10195)
!10209 = !DILocation(line: 3412, column: 71, scope: !10195)
!10210 = !DILocation(line: 3412, column: 79, scope: !10195)
!10211 = !DILocation(line: 3412, column: 101, scope: !10195)
!10212 = !DILocation(line: 3410, column: 8, scope: !10196)
!10213 = !DILocation(line: 3419, column: 11, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10215, file: !9238, line: 3419, column: 10)
!10215 = distinct !DILexicalBlock(scope: !10195, file: !9238, line: 3417, column: 5)
!10216 = !DILocation(line: 3419, column: 57, scope: !10214)
!10217 = !DILocation(line: 3419, column: 80, scope: !10214)
!10218 = !DILocation(line: 3419, column: 89, scope: !10214)
!10219 = !DILocation(line: 3419, column: 10, scope: !10215)
!10220 = !DILocation(line: 3433, column: 30, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !9238, line: 3433, column: 10)
!10222 = distinct !DILexicalBlock(scope: !10195, file: !9238, line: 3431, column: 5)
!10223 = !DILocation(line: 3433, column: 39, scope: !10221)
!10224 = !DILocation(line: 3433, column: 10, scope: !10222)
!10225 = !DILocation(line: 3436, column: 9, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10221, file: !9238, line: 3434, column: 7)
!10227 = !DILocation(line: 3439, column: 21, scope: !10226)
!10228 = !DILocation(line: 3442, column: 9, scope: !10226)
!10229 = !DILocation(line: 3442, column: 15, scope: !10226)
!10230 = !DILocation(line: 3442, column: 51, scope: !10226)
!10231 = !DILocation(line: 3444, column: 15, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !9238, line: 3444, column: 14)
!10233 = distinct !DILexicalBlock(scope: !10226, file: !9238, line: 3443, column: 9)
!10234 = !DILocation(line: 3444, column: 29, scope: !10232)
!10235 = !DILocation(line: 3444, column: 43, scope: !10232)
!10236 = !DILocation(line: 3444, column: 14, scope: !10233)
!10237 = distinct !{!10237, !10228, !10238}
!10238 = !DILocation(line: 3448, column: 9, scope: !10226)
!10239 = !DILocation(line: 3456, column: 9, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10221, file: !9238, line: 3454, column: 7)
!10241 = !DILocation(line: 3459, column: 21, scope: !10240)
!10242 = !DILocation(line: 3462, column: 9, scope: !10240)
!10243 = !DILocation(line: 3462, column: 15, scope: !10240)
!10244 = !DILocation(line: 3464, column: 15, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !9238, line: 3464, column: 14)
!10246 = distinct !DILexicalBlock(scope: !10240, file: !9238, line: 3463, column: 9)
!10247 = !DILocation(line: 3464, column: 29, scope: !10245)
!10248 = !DILocation(line: 3464, column: 43, scope: !10245)
!10249 = !DILocation(line: 3464, column: 14, scope: !10246)
!10250 = distinct !{!10250, !10242, !10251}
!10251 = !DILocation(line: 3468, column: 9, scope: !10240)
!10252 = !DILocation(line: 0, scope: !10195)
!10253 = !DILocation(line: 3473, column: 27, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10076, file: !9238, line: 3473, column: 6)
!10255 = !DILocation(line: 3473, column: 43, scope: !10254)
!10256 = !DILocation(line: 3473, column: 69, scope: !10254)
!10257 = !DILocation(line: 3473, column: 6, scope: !10076)
!10258 = !DILocation(line: 3479, column: 28, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10260, file: !9238, line: 3479, column: 8)
!10260 = distinct !DILexicalBlock(scope: !10254, file: !9238, line: 3474, column: 3)
!10261 = !DILocation(line: 3479, column: 37, scope: !10259)
!10262 = !DILocation(line: 3479, column: 8, scope: !10260)
!10263 = !DILocation(line: 3482, column: 7, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10259, file: !9238, line: 3480, column: 5)
!10265 = !DILocation(line: 3485, column: 19, scope: !10264)
!10266 = !DILocation(line: 3488, column: 7, scope: !10264)
!10267 = !DILocation(line: 3488, column: 13, scope: !10264)
!10268 = !DILocation(line: 3488, column: 49, scope: !10264)
!10269 = !DILocation(line: 3490, column: 13, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !9238, line: 3490, column: 12)
!10271 = distinct !DILexicalBlock(scope: !10264, file: !9238, line: 3489, column: 7)
!10272 = !DILocation(line: 3490, column: 27, scope: !10270)
!10273 = !DILocation(line: 3490, column: 41, scope: !10270)
!10274 = !DILocation(line: 3490, column: 12, scope: !10271)
!10275 = distinct !{!10275, !10266, !10276}
!10276 = !DILocation(line: 3494, column: 7, scope: !10264)
!10277 = !DILocation(line: 3499, column: 7, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10259, file: !9238, line: 3497, column: 5)
!10279 = !DILocation(line: 3502, column: 19, scope: !10278)
!10280 = !DILocation(line: 3505, column: 7, scope: !10278)
!10281 = !DILocation(line: 3505, column: 13, scope: !10278)
!10282 = !DILocation(line: 3507, column: 13, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !9238, line: 3507, column: 12)
!10284 = distinct !DILexicalBlock(scope: !10278, file: !9238, line: 3506, column: 7)
!10285 = !DILocation(line: 3507, column: 27, scope: !10283)
!10286 = !DILocation(line: 3507, column: 41, scope: !10283)
!10287 = !DILocation(line: 3507, column: 12, scope: !10284)
!10288 = distinct !{!10288, !10280, !10289}
!10289 = !DILocation(line: 3511, column: 7, scope: !10278)
!10290 = !DILocation(line: 3515, column: 27, scope: !10107)
!10291 = !DILocation(line: 3515, column: 43, scope: !10107)
!10292 = !DILocation(line: 3515, column: 69, scope: !10107)
!10293 = !DILocation(line: 3515, column: 6, scope: !10076)
!10294 = !DILocation(line: 0, scope: !10106)
!10295 = !DILocation(line: 3524, column: 8, scope: !10112)
!10296 = !DILocation(line: 3524, column: 8, scope: !10106)
!10297 = !DILocation(line: 3526, column: 7, scope: !10110)
!10298 = !DILocation(line: 3526, column: 7, scope: !10111)
!10299 = !DILocation(line: 3528, column: 5, scope: !10111)
!10300 = !DILocation(line: 3530, column: 8, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10106, file: !9238, line: 3530, column: 8)
!10302 = !DILocation(line: 3530, column: 8, scope: !10106)
!10303 = !DILocation(line: 3533, column: 7, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10301, file: !9238, line: 3531, column: 5)
!10305 = !DILocation(line: 3536, column: 19, scope: !10304)
!10306 = !DILocation(line: 3538, column: 7, scope: !10304)
!10307 = !DILocation(line: 3538, column: 13, scope: !10304)
!10308 = !DILocation(line: 3540, column: 13, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !9238, line: 3540, column: 12)
!10310 = distinct !DILexicalBlock(scope: !10304, file: !9238, line: 3539, column: 7)
!10311 = !DILocation(line: 3540, column: 27, scope: !10309)
!10312 = !DILocation(line: 3540, column: 40, scope: !10309)
!10313 = !DILocation(line: 3540, column: 12, scope: !10310)
!10314 = distinct !{!10314, !10306, !10315}
!10315 = !DILocation(line: 3544, column: 7, scope: !10304)
!10316 = !DILocation(line: 3548, column: 5, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !9238, line: 3548, column: 5)
!10318 = distinct !DILexicalBlock(scope: !10106, file: !9238, line: 3548, column: 5)
!10319 = !DILocation(line: 3548, column: 5, scope: !10318)
!10320 = !DILocation(line: 3548, column: 5, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10317, file: !9238, line: 3548, column: 5)
!10322 = !DILocation(line: 3548, column: 5, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !9238, line: 3548, column: 5)
!10324 = distinct !DILexicalBlock(scope: !10317, file: !9238, line: 3548, column: 5)
!10325 = !DILocation(line: 3548, column: 5, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10324, file: !9238, line: 3548, column: 5)
!10327 = !DILocation(line: 0, scope: !10317)
!10328 = !DILocation(line: 3550, column: 28, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10106, file: !9238, line: 3550, column: 8)
!10330 = !DILocation(line: 3550, column: 38, scope: !10329)
!10331 = !DILocation(line: 0, scope: !10329)
!10332 = !DILocation(line: 3550, column: 8, scope: !10106)
!10333 = !DILocation(line: 3556, column: 13, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10329, file: !9238, line: 3551, column: 5)
!10335 = !DILocation(line: 3556, column: 49, scope: !10334)
!10336 = !DILocation(line: 3556, column: 7, scope: !10334)
!10337 = !DILocation(line: 3558, column: 13, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !9238, line: 3558, column: 12)
!10339 = distinct !DILexicalBlock(scope: !10334, file: !9238, line: 3557, column: 7)
!10340 = !DILocation(line: 3558, column: 27, scope: !10338)
!10341 = !DILocation(line: 3558, column: 41, scope: !10338)
!10342 = !DILocation(line: 3558, column: 12, scope: !10339)
!10343 = distinct !{!10343, !10336, !10344}
!10344 = !DILocation(line: 3562, column: 7, scope: !10334)
!10345 = !DILocation(line: 3570, column: 13, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10329, file: !9238, line: 3565, column: 5)
!10347 = !DILocation(line: 3570, column: 7, scope: !10346)
!10348 = !DILocation(line: 3572, column: 13, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !9238, line: 3572, column: 12)
!10350 = distinct !DILexicalBlock(scope: !10346, file: !9238, line: 3571, column: 7)
!10351 = !DILocation(line: 3572, column: 27, scope: !10349)
!10352 = !DILocation(line: 3572, column: 41, scope: !10349)
!10353 = !DILocation(line: 3572, column: 12, scope: !10350)
!10354 = distinct !{!10354, !10347, !10355}
!10355 = !DILocation(line: 3576, column: 7, scope: !10346)
!10356 = !DILocation(line: 3580, column: 8, scope: !10106)
!10357 = !DILocation(line: 3582, column: 7, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !9238, line: 3581, column: 5)
!10359 = distinct !DILexicalBlock(scope: !10106, file: !9238, line: 3580, column: 8)
!10360 = !DILocation(line: 3583, column: 5, scope: !10358)
!10361 = !DILocation(line: 3588, column: 31, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10076, file: !9238, line: 3588, column: 7)
!10363 = !DILocation(line: 3588, column: 41, scope: !10362)
!10364 = !DILocation(line: 3588, column: 7, scope: !10076)
!10365 = !DILocation(line: 3591, column: 8, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !9238, line: 3591, column: 8)
!10367 = distinct !DILexicalBlock(scope: !10362, file: !9238, line: 3589, column: 3)
!10368 = !DILocation(line: 3591, column: 38, scope: !10366)
!10369 = !DILocation(line: 3591, column: 8, scope: !10367)
!10370 = !DILocation(line: 3593, column: 44, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !9238, line: 3593, column: 10)
!10372 = distinct !DILexicalBlock(scope: !10366, file: !9238, line: 3592, column: 5)
!10373 = !DILocation(line: 0, scope: !10371)
!10374 = !DILocation(line: 3593, column: 10, scope: !10372)
!10375 = !DILocation(line: 3610, column: 15, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10371, file: !9238, line: 3594, column: 7)
!10377 = !DILocation(line: 3610, column: 9, scope: !10376)
!10378 = !DILocation(line: 3612, column: 15, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10380, file: !9238, line: 3612, column: 14)
!10380 = distinct !DILexicalBlock(scope: !10376, file: !9238, line: 3611, column: 9)
!10381 = !DILocation(line: 3612, column: 29, scope: !10379)
!10382 = !DILocation(line: 3612, column: 43, scope: !10379)
!10383 = !DILocation(line: 3612, column: 14, scope: !10380)
!10384 = distinct !{!10384, !10377, !10385}
!10385 = !DILocation(line: 3616, column: 9, scope: !10376)
!10386 = !DILocation(line: 3619, column: 9, scope: !10376)
!10387 = !DILocation(line: 3626, column: 9, scope: !10376)
!10388 = !DILocation(line: 3629, column: 21, scope: !10376)
!10389 = !DILocation(line: 3632, column: 9, scope: !10376)
!10390 = !DILocation(line: 3632, column: 15, scope: !10376)
!10391 = !DILocation(line: 3632, column: 51, scope: !10376)
!10392 = !DILocation(line: 3634, column: 15, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !9238, line: 3634, column: 14)
!10394 = distinct !DILexicalBlock(scope: !10376, file: !9238, line: 3633, column: 9)
!10395 = !DILocation(line: 3634, column: 29, scope: !10393)
!10396 = !DILocation(line: 3634, column: 43, scope: !10393)
!10397 = !DILocation(line: 3634, column: 14, scope: !10394)
!10398 = distinct !{!10398, !10389, !10399}
!10399 = !DILocation(line: 3638, column: 9, scope: !10376)
!10400 = !DILocation(line: 3649, column: 15, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10371, file: !9238, line: 3641, column: 7)
!10402 = !DILocation(line: 3649, column: 9, scope: !10401)
!10403 = !DILocation(line: 3651, column: 15, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !9238, line: 3651, column: 14)
!10405 = distinct !DILexicalBlock(scope: !10401, file: !9238, line: 3650, column: 9)
!10406 = !DILocation(line: 3651, column: 29, scope: !10404)
!10407 = !DILocation(line: 3651, column: 43, scope: !10404)
!10408 = !DILocation(line: 3651, column: 14, scope: !10405)
!10409 = distinct !{!10409, !10402, !10410}
!10410 = !DILocation(line: 3655, column: 9, scope: !10401)
!10411 = !DILocation(line: 3661, column: 44, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !9238, line: 3661, column: 10)
!10413 = distinct !DILexicalBlock(scope: !10366, file: !9238, line: 3659, column: 5)
!10414 = !DILocation(line: 3661, column: 10, scope: !10413)
!10415 = !DILocation(line: 3668, column: 27, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10412, file: !9238, line: 3666, column: 7)
!10417 = !DILocation(line: 3671, column: 14, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !9238, line: 3670, column: 13)
!10419 = !DILocation(line: 3671, column: 81, scope: !10418)
!10420 = !DILocation(line: 3671, column: 55, scope: !10418)
!10421 = !DILocation(line: 3671, column: 92, scope: !10418)
!10422 = !DILocation(line: 3672, column: 14, scope: !10418)
!10423 = !DILocation(line: 3672, column: 80, scope: !10418)
!10424 = !DILocation(line: 3672, column: 53, scope: !10418)
!10425 = !DILocation(line: 3672, column: 111, scope: !10418)
!10426 = !DILocation(line: 3673, column: 14, scope: !10418)
!10427 = !DILocation(line: 3673, column: 80, scope: !10418)
!10428 = !DILocation(line: 3673, column: 86, scope: !10418)
!10429 = !DILocation(line: 3673, column: 53, scope: !10418)
!10430 = !DILocation(line: 3673, column: 111, scope: !10418)
!10431 = !DILocation(line: 3674, column: 14, scope: !10418)
!10432 = !DILocation(line: 3674, column: 82, scope: !10418)
!10433 = !DILocation(line: 3674, column: 101, scope: !10418)
!10434 = !DILocation(line: 3674, column: 53, scope: !10418)
!10435 = !DILocation(line: 3674, column: 126, scope: !10418)
!10436 = !DILocation(line: 3675, column: 14, scope: !10418)
!10437 = !DILocation(line: 3675, column: 80, scope: !10418)
!10438 = !DILocation(line: 3675, column: 85, scope: !10418)
!10439 = !DILocation(line: 3675, column: 53, scope: !10418)
!10440 = !DILocation(line: 3675, column: 111, scope: !10418)
!10441 = !DILocation(line: 3676, column: 14, scope: !10418)
!10442 = !DILocation(line: 3676, column: 80, scope: !10418)
!10443 = !DILocation(line: 3676, column: 85, scope: !10418)
!10444 = !DILocation(line: 3676, column: 53, scope: !10418)
!10445 = !DILocation(line: 3670, column: 13, scope: !10416)
!10446 = !DILocation(line: 3691, column: 3, scope: !10076)
!10447 = !DILocation(line: 3692, column: 1, scope: !10076)
!10448 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9238, file: !9238, line: 3703, type: !10449, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !10451)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{null, !10079}
!10451 = !{!10452}
!10452 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10448, file: !9238, line: 3703, type: !10079)
!10453 = !DILocation(line: 0, scope: !10448)
!10454 = !DILocation(line: 3706, column: 22, scope: !10448)
!10455 = !DILocation(line: 3706, column: 37, scope: !10448)
!10456 = !DILocation(line: 3709, column: 12, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10448, file: !9238, line: 3709, column: 6)
!10458 = !DILocation(line: 3709, column: 15, scope: !10457)
!10459 = !DILocation(line: 3709, column: 31, scope: !10457)
!10460 = !DILocation(line: 3709, column: 6, scope: !10448)
!10461 = !DILocation(line: 3711, column: 24, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10457, file: !9238, line: 3710, column: 3)
!10463 = !DILocation(line: 3711, column: 33, scope: !10462)
!10464 = !DILocation(line: 3712, column: 3, scope: !10462)
!10465 = !DILocation(line: 3713, column: 17, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10457, file: !9238, line: 3713, column: 11)
!10467 = !DILocation(line: 3713, column: 20, scope: !10466)
!10468 = !DILocation(line: 3713, column: 35, scope: !10466)
!10469 = !DILocation(line: 0, scope: !10466)
!10470 = !DILocation(line: 3713, column: 11, scope: !10457)
!10471 = !DILocation(line: 3715, column: 33, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10466, file: !9238, line: 3714, column: 3)
!10473 = !DILocation(line: 3716, column: 3, scope: !10472)
!10474 = !DILocation(line: 3719, column: 33, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10466, file: !9238, line: 3718, column: 3)
!10476 = !DILocation(line: 3723, column: 12, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10448, file: !9238, line: 3723, column: 6)
!10478 = !DILocation(line: 3723, column: 15, scope: !10477)
!10479 = !DILocation(line: 3729, column: 24, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10477, file: !9238, line: 3728, column: 3)
!10481 = !DILocation(line: 3729, column: 33, scope: !10480)
!10482 = !DILocation(line: 3732, column: 61, scope: !10448)
!10483 = !DILocation(line: 3732, column: 81, scope: !10448)
!10484 = !DILocation(line: 3732, column: 22, scope: !10448)
!10485 = !DILocation(line: 3732, column: 42, scope: !10448)
!10486 = !DILocation(line: 3735, column: 12, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10448, file: !9238, line: 3735, column: 6)
!10488 = !DILocation(line: 3735, column: 17, scope: !10487)
!10489 = !DILocation(line: 3735, column: 35, scope: !10487)
!10490 = !DILocation(line: 3735, column: 6, scope: !10448)
!10491 = !DILocation(line: 3737, column: 24, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10487, file: !9238, line: 3736, column: 3)
!10493 = !DILocation(line: 3737, column: 33, scope: !10492)
!10494 = !DILocation(line: 3738, column: 3, scope: !10492)
!10495 = !DILocation(line: 3739, column: 17, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10487, file: !9238, line: 3739, column: 11)
!10497 = !DILocation(line: 3739, column: 22, scope: !10496)
!10498 = !DILocation(line: 3739, column: 39, scope: !10496)
!10499 = !DILocation(line: 0, scope: !10496)
!10500 = !DILocation(line: 3739, column: 11, scope: !10487)
!10501 = !DILocation(line: 3741, column: 33, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10496, file: !9238, line: 3740, column: 3)
!10503 = !DILocation(line: 3742, column: 3, scope: !10502)
!10504 = !DILocation(line: 3745, column: 33, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10496, file: !9238, line: 3744, column: 3)
!10506 = !DILocation(line: 3749, column: 12, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10448, file: !9238, line: 3749, column: 6)
!10508 = !DILocation(line: 3749, column: 16, scope: !10507)
!10509 = !DILocation(line: 3755, column: 24, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10507, file: !9238, line: 3754, column: 3)
!10511 = !DILocation(line: 3755, column: 33, scope: !10510)
!10512 = !DILocation(line: 3759, column: 12, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10448, file: !9238, line: 3759, column: 6)
!10514 = !DILocation(line: 3759, column: 15, scope: !10513)
!10515 = !DILocation(line: 3759, column: 30, scope: !10513)
!10516 = !DILocation(line: 3759, column: 6, scope: !10448)
!10517 = !DILocation(line: 3765, column: 28, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10513, file: !9238, line: 3764, column: 3)
!10519 = !DILocation(line: 3765, column: 37, scope: !10518)
!10520 = !DILocation(line: 3767, column: 54, scope: !10448)
!10521 = !DILocation(line: 3767, column: 62, scope: !10448)
!10522 = !DILocation(line: 3767, column: 26, scope: !10448)
!10523 = !DILocation(line: 3767, column: 36, scope: !10448)
!10524 = !DILocation(line: 3768, column: 49, scope: !10448)
!10525 = !DILocation(line: 3768, column: 57, scope: !10448)
!10526 = !DILocation(line: 3768, column: 26, scope: !10448)
!10527 = !DILocation(line: 3768, column: 31, scope: !10448)
!10528 = !DILocation(line: 3769, column: 50, scope: !10448)
!10529 = !DILocation(line: 3769, column: 78, scope: !10448)
!10530 = !DILocation(line: 3769, column: 26, scope: !10448)
!10531 = !DILocation(line: 3769, column: 31, scope: !10448)
!10532 = !DILocation(line: 3770, column: 52, scope: !10448)
!10533 = !DILocation(line: 3770, column: 102, scope: !10448)
!10534 = !DILocation(line: 3770, column: 109, scope: !10448)
!10535 = !DILocation(line: 3770, column: 26, scope: !10448)
!10536 = !DILocation(line: 3770, column: 31, scope: !10448)
!10537 = !DILocation(line: 3771, column: 50, scope: !10448)
!10538 = !DILocation(line: 3771, column: 78, scope: !10448)
!10539 = !DILocation(line: 3771, column: 26, scope: !10448)
!10540 = !DILocation(line: 3771, column: 31, scope: !10448)
!10541 = !DILocation(line: 3772, column: 50, scope: !10448)
!10542 = !DILocation(line: 3772, column: 78, scope: !10448)
!10543 = !DILocation(line: 3772, column: 26, scope: !10448)
!10544 = !DILocation(line: 3772, column: 31, scope: !10448)
!10545 = !DILocation(line: 3773, column: 1, scope: !10448)
!10546 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10547, file: !10547, line: 257, type: !5062, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10548)
!10547 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10548 = !{!10549}
!10549 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10546, file: !10547, line: 257, type: !106)
!10550 = !DILocation(line: 0, scope: !10546)
!10551 = !DILocation(line: 260, column: 3, scope: !10546)
!10552 = !DILocation(line: 261, column: 1, scope: !10546)
!10553 = distinct !DISubprogram(name: "LL_InitTick", scope: !10554, file: !10554, line: 260, type: !7668, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10555)
!10554 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10555 = !{!10556, !10557}
!10556 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10553, file: !10554, line: 260, type: !106)
!10557 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10553, file: !10554, line: 260, type: !106)
!10558 = !DILocation(line: 0, scope: !10553)
!10559 = !DILocation(line: 263, column: 46, scope: !10553)
!10560 = !DILocation(line: 263, column: 55, scope: !10553)
!10561 = !DILocation(line: 263, column: 18, scope: !10553)
!10562 = !DILocation(line: 264, column: 18, scope: !10553)
!10563 = !DILocation(line: 265, column: 18, scope: !10553)
!10564 = !DILocation(line: 267, column: 1, scope: !10553)
!10565 = distinct !DISubprogram(name: "LL_mDelay", scope: !10547, file: !10547, line: 273, type: !5062, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10566)
!10566 = !{!10567, !10568}
!10567 = !DILocalVariable(name: "Delay", arg: 1, scope: !10565, file: !10547, line: 273, type: !106)
!10568 = !DILocalVariable(name: "tmp", scope: !10565, file: !10547, line: 275, type: !127)
!10569 = !DILocation(line: 0, scope: !10565)
!10570 = !DILocation(line: 275, column: 3, scope: !10565)
!10571 = !DILocation(line: 275, column: 18, scope: !10565)
!10572 = !DILocation(line: 275, column: 33, scope: !10565)
!10573 = !DILocation(line: 277, column: 10, scope: !10565)
!10574 = !DILocation(line: 280, column: 12, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10565, file: !10547, line: 280, column: 6)
!10576 = !DILocation(line: 285, column: 3, scope: !10565)
!10577 = !DILocation(line: 287, column: 18, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !10547, line: 287, column: 8)
!10579 = distinct !DILexicalBlock(scope: !10565, file: !10547, line: 286, column: 3)
!10580 = !DILocation(line: 292, column: 1, scope: !10565)
!10581 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10547, file: !10547, line: 323, type: !5062, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10582)
!10582 = !{!10583}
!10583 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10581, file: !10547, line: 323, type: !106)
!10584 = !DILocation(line: 0, scope: !10581)
!10585 = !DILocation(line: 326, column: 19, scope: !10581)
!10586 = !DILocation(line: 327, column: 1, scope: !10581)
!10587 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10547, file: !10547, line: 338, type: !10588, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10591)
!10588 = !DISubroutineType(types: !10589)
!10589 = !{!10590, !106}
!10590 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !781, line: 201, baseType: !780)
!10591 = !{!10592, !10593, !10594, !10595, !10596}
!10592 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10587, file: !10547, line: 338, type: !106)
!10593 = !DILocalVariable(name: "timeout", scope: !10587, file: !10547, line: 340, type: !106)
!10594 = !DILocalVariable(name: "getlatency", scope: !10587, file: !10547, line: 341, type: !106)
!10595 = !DILocalVariable(name: "latency", scope: !10587, file: !10547, line: 342, type: !106)
!10596 = !DILocalVariable(name: "status", scope: !10587, file: !10547, line: 343, type: !10590)
!10597 = !DILocation(line: 0, scope: !10587)
!10598 = !DILocation(line: 347, column: 21, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10587, file: !10547, line: 347, column: 6)
!10600 = !DILocation(line: 347, column: 6, scope: !10587)
!10601 = !DILocation(line: 353, column: 8, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !10547, line: 353, column: 8)
!10603 = distinct !DILexicalBlock(scope: !10599, file: !10547, line: 352, column: 3)
!10604 = !DILocation(line: 353, column: 40, scope: !10602)
!10605 = !DILocation(line: 353, column: 8, scope: !10603)
!10606 = !DILocation(line: 356, column: 26, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !10547, line: 356, column: 10)
!10608 = distinct !DILexicalBlock(scope: !10602, file: !10547, line: 354, column: 5)
!10609 = !DILocation(line: 356, column: 55, scope: !10607)
!10610 = !DILocation(line: 362, column: 55, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10608, file: !10547, line: 362, column: 10)
!10612 = !DILocation(line: 368, column: 55, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10608, file: !10547, line: 368, column: 10)
!10614 = !DILocation(line: 374, column: 26, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10608, file: !10547, line: 374, column: 10)
!10616 = !DILocation(line: 374, column: 55, scope: !10615)
!10617 = !DILocation(line: 380, column: 28, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !10547, line: 380, column: 12)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !10547, line: 379, column: 7)
!10620 = !DILocation(line: 380, column: 57, scope: !10618)
!10621 = !DILocation(line: 387, column: 8, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10603, file: !10547, line: 387, column: 8)
!10623 = !DILocation(line: 387, column: 40, scope: !10622)
!10624 = !DILocation(line: 387, column: 8, scope: !10603)
!10625 = !DILocation(line: 390, column: 26, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !10547, line: 390, column: 10)
!10627 = distinct !DILexicalBlock(scope: !10622, file: !10547, line: 388, column: 5)
!10628 = !DILocation(line: 390, column: 55, scope: !10626)
!10629 = !DILocation(line: 396, column: 26, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10627, file: !10547, line: 396, column: 10)
!10631 = !DILocation(line: 396, column: 55, scope: !10630)
!10632 = !DILocation(line: 402, column: 26, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10627, file: !10547, line: 402, column: 10)
!10634 = !DILocation(line: 402, column: 55, scope: !10633)
!10635 = !DILocation(line: 407, column: 26, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10627, file: !10547, line: 407, column: 10)
!10637 = !DILocation(line: 407, column: 55, scope: !10636)
!10638 = !DILocation(line: 413, column: 28, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !10547, line: 413, column: 12)
!10640 = distinct !DILexicalBlock(scope: !10636, file: !10547, line: 412, column: 7)
!10641 = !DILocation(line: 413, column: 57, scope: !10639)
!10642 = !DILocation(line: 0, scope: !10603)
!10643 = !DILocation(line: 420, column: 8, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10603, file: !10547, line: 420, column: 8)
!10645 = !DILocation(line: 420, column: 40, scope: !10644)
!10646 = !DILocation(line: 420, column: 8, scope: !10603)
!10647 = !DILocation(line: 423, column: 26, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !10547, line: 423, column: 10)
!10649 = distinct !DILexicalBlock(scope: !10644, file: !10547, line: 421, column: 5)
!10650 = !DILocation(line: 423, column: 55, scope: !10648)
!10651 = !DILocation(line: 429, column: 26, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10649, file: !10547, line: 429, column: 10)
!10653 = !DILocation(line: 429, column: 55, scope: !10652)
!10654 = !DILocation(line: 435, column: 28, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10656, file: !10547, line: 435, column: 12)
!10656 = distinct !DILexicalBlock(scope: !10652, file: !10547, line: 434, column: 7)
!10657 = !DILocation(line: 435, column: 57, scope: !10655)
!10658 = !DILocation(line: 444, column: 5, scope: !10603)
!10659 = !DILocation(line: 448, column: 5, scope: !10603)
!10660 = !DILocation(line: 451, column: 18, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10603, file: !10547, line: 449, column: 5)
!10662 = !DILocation(line: 452, column: 12, scope: !10661)
!10663 = !DILocation(line: 453, column: 26, scope: !10603)
!10664 = !DILocation(line: 453, column: 38, scope: !10603)
!10665 = !DILocation(line: 453, column: 5, scope: !10661)
!10666 = distinct !{!10666, !10659, !10667}
!10667 = !DILocation(line: 453, column: 54, scope: !10603)
!10668 = !DILocation(line: 0, scope: !10599)
!10669 = !DILocation(line: 464, column: 3, scope: !10587)
!10670 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !4804, file: !4804, line: 519, type: !4808, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10671 = !DILocation(line: 521, column: 21, scope: !10670)
!10672 = !DILocation(line: 521, column: 3, scope: !10670)
!10673 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4745, file: !4745, line: 1543, type: !5062, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10674)
!10674 = !{!10675}
!10675 = !DILocalVariable(name: "Latency", arg: 1, scope: !10673, file: !4745, line: 1543, type: !106)
!10676 = !DILocation(line: 0, scope: !10673)
!10677 = !DILocation(line: 1545, column: 3, scope: !10673)
!10678 = !DILocation(line: 1546, column: 1, scope: !10673)
!10679 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4745, file: !4745, line: 1569, type: !4808, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10680 = !DILocation(line: 1571, column: 21, scope: !10679)
!10681 = !DILocation(line: 1571, column: 3, scope: !10679)
!10682 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10547, file: !10547, line: 483, type: !10683, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10699)
!10683 = !DISubroutineType(types: !10684)
!10684 = !{!10590, !10685, !10692}
!10685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10686, size: 32)
!10686 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10554, line: 114, baseType: !10687)
!10687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10554, line: 94, size: 96, elements: !10688)
!10688 = !{!10689, !10690, !10691}
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10687, file: !10554, line: 96, baseType: !106, size: 32)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10687, file: !10554, line: 102, baseType: !106, size: 32, offset: 32)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10687, file: !10554, line: 109, baseType: !106, size: 32, offset: 64)
!10692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10693, size: 32)
!10693 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10554, line: 139, baseType: !10694)
!10694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10554, line: 119, size: 96, elements: !10695)
!10695 = !{!10696, !10697, !10698}
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10694, file: !10554, line: 121, baseType: !106, size: 32)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10694, file: !10554, line: 127, baseType: !106, size: 32, offset: 32)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10694, file: !10554, line: 133, baseType: !106, size: 32, offset: 64)
!10699 = !{!10700, !10701, !10702, !10703}
!10700 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10682, file: !10547, line: 483, type: !10685)
!10701 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10682, file: !10547, line: 484, type: !10692)
!10702 = !DILocalVariable(name: "status", scope: !10682, file: !10547, line: 486, type: !10590)
!10703 = !DILocalVariable(name: "pllfreq", scope: !10682, file: !10547, line: 487, type: !106)
!10704 = !DILocation(line: 0, scope: !10682)
!10705 = !DILocation(line: 490, column: 6, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10682, file: !10547, line: 490, column: 6)
!10707 = !DILocation(line: 490, column: 25, scope: !10706)
!10708 = !DILocation(line: 490, column: 6, scope: !10682)
!10709 = !DILocation(line: 493, column: 15, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10706, file: !10547, line: 491, column: 3)
!10711 = !DILocation(line: 496, column: 8, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10710, file: !10547, line: 496, column: 8)
!10713 = !DILocation(line: 496, column: 29, scope: !10712)
!10714 = !DILocation(line: 496, column: 8, scope: !10710)
!10715 = !DILocation(line: 498, column: 7, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10712, file: !10547, line: 497, column: 5)
!10717 = !DILocation(line: 499, column: 7, scope: !10716)
!10718 = !DILocation(line: 499, column: 14, scope: !10716)
!10719 = !DILocation(line: 499, column: 35, scope: !10716)
!10720 = distinct !{!10720, !10717, !10721}
!10721 = !DILocation(line: 502, column: 7, scope: !10716)
!10722 = !DILocation(line: 506, column: 76, scope: !10710)
!10723 = !DILocation(line: 506, column: 103, scope: !10710)
!10724 = !DILocation(line: 507, column: 54, scope: !10710)
!10725 = !DILocation(line: 506, column: 5, scope: !10710)
!10726 = !DILocation(line: 510, column: 14, scope: !10710)
!10727 = !DILocation(line: 511, column: 3, scope: !10710)
!10728 = !DILocation(line: 0, scope: !10706)
!10729 = !DILocation(line: 518, column: 3, scope: !10682)
!10730 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10547, file: !10547, line: 642, type: !10731, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10733)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{!10590}
!10733 = !{!10734}
!10734 = !DILocalVariable(name: "status", scope: !10730, file: !10547, line: 644, type: !10590)
!10735 = !DILocation(line: 0, scope: !10730)
!10736 = !DILocation(line: 647, column: 6, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10730, file: !10547, line: 647, column: 6)
!10738 = !DILocation(line: 647, column: 27, scope: !10737)
!10739 = !DILocation(line: 655, column: 6, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10730, file: !10547, line: 655, column: 6)
!10741 = !DILocation(line: 655, column: 30, scope: !10740)
!10742 = !DILocation(line: 663, column: 6, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10730, file: !10547, line: 663, column: 6)
!10744 = !DILocation(line: 663, column: 30, scope: !10743)
!10745 = !DILocation(line: 663, column: 6, scope: !10730)
!10746 = !DILocation(line: 669, column: 3, scope: !10730)
!10747 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10547, file: !10547, line: 611, type: !10748, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10750)
!10748 = !DISubroutineType(types: !10749)
!10749 = !{!106, !106, !10685}
!10750 = !{!10751, !10752, !10753}
!10751 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10747, file: !10547, line: 611, type: !106)
!10752 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10747, file: !10547, line: 611, type: !10685)
!10753 = !DILocalVariable(name: "pllfreq", scope: !10747, file: !10547, line: 613, type: !106)
!10754 = !DILocation(line: 0, scope: !10747)
!10755 = !DILocation(line: 622, column: 56, scope: !10747)
!10756 = !DILocation(line: 622, column: 61, scope: !10747)
!10757 = !DILocation(line: 622, column: 32, scope: !10747)
!10758 = !DILocation(line: 626, column: 45, scope: !10747)
!10759 = !DILocation(line: 626, column: 50, scope: !10747)
!10760 = !DILocation(line: 626, column: 21, scope: !10747)
!10761 = !DILocation(line: 630, column: 47, scope: !10747)
!10762 = !DILocation(line: 630, column: 82, scope: !10747)
!10763 = !DILocation(line: 630, column: 21, scope: !10747)
!10764 = !DILocation(line: 633, column: 3, scope: !10747)
!10765 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7008, file: !7008, line: 3007, type: !4808, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10766 = !DILocation(line: 3009, column: 11, scope: !10765)
!10767 = !DILocation(line: 3009, column: 44, scope: !10765)
!10768 = !DILocation(line: 3009, column: 3, scope: !10765)
!10769 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7008, file: !7008, line: 2987, type: !2917, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10770 = !DILocation(line: 2989, column: 3, scope: !10769)
!10771 = !DILocation(line: 2990, column: 1, scope: !10769)
!10772 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7008, file: !7008, line: 4304, type: !7142, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10773)
!10773 = !{!10774, !10775, !10776, !10777}
!10774 = !DILocalVariable(name: "Source", arg: 1, scope: !10772, file: !7008, line: 4304, type: !106)
!10775 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10772, file: !7008, line: 4304, type: !106)
!10776 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10772, file: !7008, line: 4304, type: !106)
!10777 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10772, file: !7008, line: 4304, type: !106)
!10778 = !DILocation(line: 0, scope: !10772)
!10779 = !DILocation(line: 4306, column: 3, scope: !10772)
!10780 = !DILocation(line: 4308, column: 3, scope: !10772)
!10781 = !DILocation(line: 4310, column: 3, scope: !10772)
!10782 = !DILocation(line: 4312, column: 1, scope: !10772)
!10783 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10547, file: !10547, line: 681, type: !10784, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10786)
!10784 = !DISubroutineType(types: !10785)
!10785 = !{!10590, !106, !10692}
!10786 = !{!10787, !10788, !10789, !10790}
!10787 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10783, file: !10547, line: 681, type: !106)
!10788 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10783, file: !10547, line: 681, type: !10692)
!10789 = !DILocalVariable(name: "status", scope: !10783, file: !10547, line: 683, type: !10590)
!10790 = !DILocalVariable(name: "hclk_frequency", scope: !10783, file: !10547, line: 684, type: !106)
!10791 = !DILocation(line: 0, scope: !10783)
!10792 = !DILocation(line: 691, column: 20, scope: !10783)
!10793 = !DILocation(line: 694, column: 6, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10783, file: !10547, line: 694, column: 6)
!10795 = !DILocation(line: 694, column: 22, scope: !10794)
!10796 = !DILocation(line: 694, column: 6, scope: !10783)
!10797 = !DILocation(line: 697, column: 14, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10794, file: !10547, line: 695, column: 3)
!10799 = !DILocation(line: 701, column: 13, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10783, file: !10547, line: 701, column: 6)
!10801 = !DILocation(line: 701, column: 6, scope: !10783)
!10802 = !DILocation(line: 704, column: 5, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10800, file: !10547, line: 702, column: 3)
!10804 = !DILocation(line: 705, column: 5, scope: !10803)
!10805 = !DILocation(line: 705, column: 12, scope: !10803)
!10806 = !DILocation(line: 705, column: 33, scope: !10803)
!10807 = distinct !{!10807, !10804, !10808}
!10808 = !DILocation(line: 708, column: 5, scope: !10803)
!10809 = !DILocation(line: 711, column: 49, scope: !10803)
!10810 = !DILocation(line: 711, column: 5, scope: !10803)
!10811 = !DILocation(line: 712, column: 5, scope: !10803)
!10812 = !DILocation(line: 713, column: 5, scope: !10803)
!10813 = !DILocation(line: 713, column: 12, scope: !10803)
!10814 = !DILocation(line: 713, column: 37, scope: !10803)
!10815 = distinct !{!10815, !10812, !10816}
!10816 = !DILocation(line: 716, column: 5, scope: !10803)
!10817 = !DILocation(line: 719, column: 50, scope: !10803)
!10818 = !DILocation(line: 719, column: 5, scope: !10803)
!10819 = !DILocation(line: 720, column: 50, scope: !10803)
!10820 = !DILocation(line: 720, column: 5, scope: !10803)
!10821 = !DILocation(line: 721, column: 3, scope: !10803)
!10822 = !DILocation(line: 724, column: 6, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10783, file: !10547, line: 724, column: 6)
!10824 = !DILocation(line: 724, column: 22, scope: !10823)
!10825 = !DILocation(line: 724, column: 6, scope: !10783)
!10826 = !DILocation(line: 727, column: 14, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10823, file: !10547, line: 725, column: 3)
!10828 = !DILocation(line: 728, column: 3, scope: !10827)
!10829 = !DILocation(line: 731, column: 13, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10783, file: !10547, line: 731, column: 6)
!10831 = !DILocation(line: 731, column: 6, scope: !10783)
!10832 = !DILocation(line: 733, column: 5, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10830, file: !10547, line: 732, column: 3)
!10834 = !DILocation(line: 734, column: 3, scope: !10833)
!10835 = !DILocation(line: 736, column: 3, scope: !10783)
!10836 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7008, file: !7008, line: 4184, type: !2917, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10837 = !DILocation(line: 4186, column: 3, scope: !10836)
!10838 = !DILocation(line: 4187, column: 1, scope: !10836)
!10839 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7008, file: !7008, line: 4205, type: !4808, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10840 = !DILocation(line: 4207, column: 11, scope: !10839)
!10841 = !DILocation(line: 4207, column: 44, scope: !10839)
!10842 = !DILocation(line: 4207, column: 3, scope: !10839)
!10843 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7008, file: !7008, line: 3224, type: !5062, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10844)
!10844 = !{!10845}
!10845 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10843, file: !7008, line: 3224, type: !106)
!10846 = !DILocation(line: 0, scope: !10843)
!10847 = !DILocation(line: 3226, column: 3, scope: !10843)
!10848 = !DILocation(line: 3227, column: 1, scope: !10843)
!10849 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7008, file: !7008, line: 3188, type: !5062, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10850)
!10850 = !{!10851}
!10851 = !DILocalVariable(name: "Source", arg: 1, scope: !10849, file: !7008, line: 3188, type: !106)
!10852 = !DILocation(line: 0, scope: !10849)
!10853 = !DILocation(line: 3190, column: 3, scope: !10849)
!10854 = !DILocation(line: 3191, column: 1, scope: !10849)
!10855 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7008, file: !7008, line: 3204, type: !4808, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10856 = !DILocation(line: 3206, column: 21, scope: !10855)
!10857 = !DILocation(line: 3206, column: 3, scope: !10855)
!10858 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7008, file: !7008, line: 3240, type: !5062, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10859)
!10859 = !{!10860}
!10860 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10858, file: !7008, line: 3240, type: !106)
!10861 = !DILocation(line: 0, scope: !10858)
!10862 = !DILocation(line: 3242, column: 3, scope: !10858)
!10863 = !DILocation(line: 3243, column: 1, scope: !10858)
!10864 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7008, file: !7008, line: 3256, type: !5062, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10865)
!10865 = !{!10866}
!10866 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10864, file: !7008, line: 3256, type: !106)
!10867 = !DILocation(line: 0, scope: !10864)
!10868 = !DILocation(line: 3258, column: 3, scope: !10864)
!10869 = !DILocation(line: 3259, column: 1, scope: !10864)
!10870 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !7008, file: !7008, line: 5969, type: !4808, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10871 = !DILocation(line: 5971, column: 11, scope: !10870)
!10872 = !DILocation(line: 5971, column: 47, scope: !10870)
!10873 = !DILocation(line: 5971, column: 3, scope: !10870)
!10874 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7008, file: !7008, line: 5153, type: !4808, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10875 = !DILocation(line: 5155, column: 11, scope: !10874)
!10876 = !DILocation(line: 5155, column: 47, scope: !10874)
!10877 = !DILocation(line: 5155, column: 3, scope: !10874)
!10878 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10547, file: !10547, line: 540, type: !10879, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !10881)
!10879 = !DISubroutineType(types: !10880)
!10880 = !{!10590, !106, !106, !10685, !10692}
!10881 = !{!10882, !10883, !10884, !10885, !10886, !10887}
!10882 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10878, file: !10547, line: 540, type: !106)
!10883 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10878, file: !10547, line: 540, type: !106)
!10884 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10878, file: !10547, line: 541, type: !10685)
!10885 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10878, file: !10547, line: 541, type: !10692)
!10886 = !DILocalVariable(name: "status", scope: !10878, file: !10547, line: 543, type: !10590)
!10887 = !DILocalVariable(name: "pllfreq", scope: !10878, file: !10547, line: 544, type: !106)
!10888 = !DILocation(line: 0, scope: !10878)
!10889 = !DILocation(line: 551, column: 6, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10878, file: !10547, line: 551, column: 6)
!10891 = !DILocation(line: 551, column: 25, scope: !10890)
!10892 = !DILocation(line: 551, column: 6, scope: !10878)
!10893 = !DILocation(line: 554, column: 15, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !10547, line: 552, column: 3)
!10895 = !DILocation(line: 557, column: 8, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10894, file: !10547, line: 557, column: 8)
!10897 = !DILocation(line: 557, column: 29, scope: !10896)
!10898 = !DILocation(line: 557, column: 8, scope: !10894)
!10899 = !DILocation(line: 560, column: 20, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !10547, line: 560, column: 10)
!10901 = distinct !DILexicalBlock(scope: !10896, file: !10547, line: 558, column: 5)
!10902 = !DILocation(line: 560, column: 10, scope: !10901)
!10903 = !DILocation(line: 562, column: 9, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10900, file: !10547, line: 561, column: 7)
!10905 = !DILocation(line: 563, column: 7, scope: !10904)
!10906 = !DILocation(line: 566, column: 9, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10900, file: !10547, line: 565, column: 7)
!10908 = !DILocation(line: 570, column: 7, scope: !10901)
!10909 = !DILocation(line: 571, column: 7, scope: !10901)
!10910 = !DILocation(line: 571, column: 14, scope: !10901)
!10911 = !DILocation(line: 571, column: 35, scope: !10901)
!10912 = distinct !{!10912, !10909, !10913}
!10913 = !DILocation(line: 574, column: 7, scope: !10901)
!10914 = !DILocation(line: 578, column: 76, scope: !10894)
!10915 = !DILocation(line: 578, column: 103, scope: !10894)
!10916 = !DILocation(line: 579, column: 54, scope: !10894)
!10917 = !DILocation(line: 578, column: 5, scope: !10894)
!10918 = !DILocation(line: 582, column: 14, scope: !10894)
!10919 = !DILocation(line: 583, column: 3, scope: !10894)
!10920 = !DILocation(line: 0, scope: !10890)
!10921 = !DILocation(line: 590, column: 3, scope: !10878)
!10922 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7008, file: !7008, line: 2969, type: !4808, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10923 = !DILocation(line: 2971, column: 11, scope: !10922)
!10924 = !DILocation(line: 2971, column: 44, scope: !10922)
!10925 = !DILocation(line: 2971, column: 3, scope: !10922)
!10926 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7008, file: !7008, line: 2929, type: !2917, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10927 = !DILocation(line: 2931, column: 3, scope: !10926)
!10928 = !DILocation(line: 2932, column: 1, scope: !10926)
!10929 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7008, file: !7008, line: 2939, type: !2917, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10930 = !DILocation(line: 2941, column: 3, scope: !10929)
!10931 = !DILocation(line: 2942, column: 1, scope: !10929)
!10932 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7008, file: !7008, line: 2949, type: !2917, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !478)
!10933 = !DILocation(line: 2951, column: 3, scope: !10932)
!10934 = !DILocation(line: 2952, column: 1, scope: !10932)
!10935 = distinct !DISubprogram(name: "z_device_state_init", scope: !10936, file: !10936, line: 23, type: !2917, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !10937)
!10936 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10937 = !{!10938}
!10938 = !DILocalVariable(name: "dev", scope: !10935, file: !10936, line: 25, type: !10939)
!10939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10940, size: 32)
!10940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10941)
!10941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !147, line: 378, size: 192, elements: !10942)
!10942 = !{!10943, !10944, !10945, !10946, !10952, !10953}
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10941, file: !147, line: 380, baseType: !150, size: 32)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10941, file: !147, line: 382, baseType: !13, size: 32, offset: 32)
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10941, file: !147, line: 384, baseType: !13, size: 32, offset: 64)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10941, file: !147, line: 386, baseType: !10947, size: 32, offset: 96)
!10947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10948, size: 32)
!10948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !147, line: 351, size: 16, elements: !10949)
!10949 = !{!10950, !10951}
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10948, file: !147, line: 359, baseType: !160, size: 8)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10948, file: !147, line: 364, baseType: !163, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10941, file: !147, line: 388, baseType: !102, size: 32, offset: 128)
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10941, file: !147, line: 396, baseType: !166, size: 32, offset: 160)
!10954 = !DILocation(line: 0, scope: !10935)
!10955 = !DILocation(line: 31, column: 1, scope: !10935)
!10956 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10936, file: !10936, line: 33, type: !10957, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !10959)
!10957 = !DISubroutineType(types: !10958)
!10958 = !{!10939, !150}
!10959 = !{!10960, !10961}
!10960 = !DILocalVariable(name: "name", arg: 1, scope: !10956, file: !10936, line: 33, type: !150)
!10961 = !DILocalVariable(name: "dev", scope: !10956, file: !10936, line: 35, type: !10939)
!10962 = !DILocation(line: 0, scope: !10956)
!10963 = !DILocation(line: 40, column: 12, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10956, file: !10936, line: 40, column: 6)
!10965 = !DILocation(line: 40, column: 21, scope: !10964)
!10966 = !DILocation(line: 40, column: 25, scope: !10964)
!10967 = !DILocation(line: 40, column: 33, scope: !10964)
!10968 = !DILocation(line: 40, column: 6, scope: !10956)
!10969 = !DILocation(line: 55, column: 2, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10956, file: !10936, line: 55, column: 2)
!10971 = !DILocation(line: 50, column: 7, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !10936, line: 50, column: 7)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !10936, line: 49, column: 57)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !10936, line: 49, column: 2)
!10975 = distinct !DILexicalBlock(scope: !10956, file: !10936, line: 49, column: 2)
!10976 = !DILocation(line: 50, column: 30, scope: !10972)
!10977 = !DILocation(line: 50, column: 39, scope: !10972)
!10978 = !DILocation(line: 50, column: 44, scope: !10972)
!10979 = !DILocation(line: 50, column: 7, scope: !10973)
!10980 = !DILocation(line: 49, column: 53, scope: !10974)
!10981 = !DILocation(line: 49, column: 33, scope: !10974)
!10982 = !DILocation(line: 49, column: 2, scope: !10975)
!10983 = distinct !{!10983, !10982, !10984}
!10984 = !DILocation(line: 53, column: 2, scope: !10975)
!10985 = !DILocation(line: 56, column: 7, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !10936, line: 56, column: 7)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !10936, line: 55, column: 57)
!10988 = distinct !DILexicalBlock(scope: !10970, file: !10936, line: 55, column: 2)
!10989 = !DILocation(line: 56, column: 30, scope: !10986)
!10990 = !DILocation(line: 56, column: 52, scope: !10986)
!10991 = !DILocation(line: 56, column: 34, scope: !10986)
!10992 = !DILocation(line: 56, column: 58, scope: !10986)
!10993 = !DILocation(line: 56, column: 7, scope: !10987)
!10994 = !DILocation(line: 55, column: 53, scope: !10988)
!10995 = !DILocation(line: 55, column: 33, scope: !10988)
!10996 = distinct !{!10996, !10969, !10997}
!10997 = !DILocation(line: 59, column: 2, scope: !10970)
!10998 = !DILocation(line: 62, column: 1, scope: !10956)
!10999 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10936, file: !10936, line: 93, type: !11000, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11002)
!11000 = !DISubroutineType(types: !11001)
!11001 = !{!163, !10939}
!11002 = !{!11003}
!11003 = !DILocalVariable(name: "dev", arg: 1, scope: !10999, file: !10936, line: 93, type: !10939)
!11004 = !DILocation(line: 0, scope: !10999)
!11005 = !DILocation(line: 99, column: 10, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10999, file: !10936, line: 99, column: 6)
!11007 = !DILocation(line: 99, column: 6, scope: !10999)
!11008 = !DILocation(line: 103, column: 14, scope: !10999)
!11009 = !DILocation(line: 103, column: 21, scope: !10999)
!11010 = !DILocation(line: 103, column: 33, scope: !10999)
!11011 = !DILocation(line: 103, column: 49, scope: !10999)
!11012 = !DILocation(line: 103, column: 58, scope: !10999)
!11013 = !DILocation(line: 104, column: 1, scope: !10999)
!11014 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10936, file: !10936, line: 87, type: !11015, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11018)
!11015 = !DISubroutineType(types: !11016)
!11016 = !{!356, !11017}
!11017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10939, size: 32)
!11018 = !{!11019}
!11019 = !DILocalVariable(name: "devices", arg: 1, scope: !11014, file: !10936, line: 87, type: !11017)
!11020 = !DILocation(line: 0, scope: !11014)
!11021 = !DILocation(line: 89, column: 11, scope: !11014)
!11022 = !DILocation(line: 90, column: 2, scope: !11014)
!11023 = distinct !DISubprogram(name: "device_required_foreach", scope: !10936, file: !10936, line: 125, type: !11024, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11030)
!11024 = !DISubroutineType(types: !11025)
!11025 = !{!103, !10939, !11026, !102}
!11026 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !147, line: 471, baseType: !11027)
!11027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11028, size: 32)
!11028 = !DISubroutineType(types: !11029)
!11029 = !{!103, !10939, !102}
!11030 = !{!11031, !11032, !11033, !11034, !11035}
!11031 = !DILocalVariable(name: "dev", arg: 1, scope: !11023, file: !10936, line: 125, type: !10939)
!11032 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11023, file: !10936, line: 126, type: !11026)
!11033 = !DILocalVariable(name: "context", arg: 3, scope: !11023, file: !10936, line: 127, type: !102)
!11034 = !DILocalVariable(name: "handle_count", scope: !11023, file: !10936, line: 129, type: !356)
!11035 = !DILocalVariable(name: "handles", scope: !11023, file: !10936, line: 130, type: !166)
!11036 = !DILocation(line: 0, scope: !11023)
!11037 = !DILocation(line: 129, column: 2, scope: !11023)
!11038 = !DILocation(line: 129, column: 9, scope: !11023)
!11039 = !DILocation(line: 130, column: 35, scope: !11023)
!11040 = !DILocation(line: 132, column: 33, scope: !11023)
!11041 = !DILocation(line: 132, column: 9, scope: !11023)
!11042 = !DILocation(line: 133, column: 1, scope: !11023)
!11043 = !DILocation(line: 132, column: 2, scope: !11023)
!11044 = distinct !DISubprogram(name: "device_required_handles_get", scope: !147, file: !147, line: 493, type: !11045, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11047)
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!166, !10939, !2391}
!11047 = !{!11048, !11049, !11050, !11051}
!11048 = !DILocalVariable(name: "dev", arg: 1, scope: !11044, file: !147, line: 493, type: !10939)
!11049 = !DILocalVariable(name: "count", arg: 2, scope: !11044, file: !147, line: 493, type: !2391)
!11050 = !DILocalVariable(name: "rv", scope: !11044, file: !147, line: 495, type: !166)
!11051 = !DILocalVariable(name: "i", scope: !11052, file: !147, line: 498, type: !356)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !147, line: 497, column: 18)
!11053 = distinct !DILexicalBlock(scope: !11044, file: !147, line: 497, column: 6)
!11054 = !DILocation(line: 0, scope: !11044)
!11055 = !DILocation(line: 495, column: 35, scope: !11044)
!11056 = !DILocation(line: 497, column: 9, scope: !11053)
!11057 = !DILocation(line: 497, column: 6, scope: !11044)
!11058 = !DILocation(line: 0, scope: !11052)
!11059 = !DILocation(line: 500, column: 11, scope: !11052)
!11060 = !DILocation(line: 500, column: 40, scope: !11052)
!11061 = !DILocation(line: 502, column: 4, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11052, file: !147, line: 501, column: 40)
!11063 = distinct !{!11063, !11064, !11065}
!11064 = !DILocation(line: 500, column: 3, scope: !11052)
!11065 = !DILocation(line: 503, column: 3, scope: !11052)
!11066 = !DILocation(line: 504, column: 10, scope: !11052)
!11067 = !DILocation(line: 505, column: 2, scope: !11052)
!11068 = !DILocation(line: 507, column: 2, scope: !11044)
!11069 = distinct !DISubprogram(name: "device_visitor", scope: !10936, file: !10936, line: 106, type: !11070, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11072)
!11070 = !DISubroutineType(types: !11071)
!11071 = !{!103, !166, !356, !11026, !102}
!11072 = !{!11073, !11074, !11075, !11076, !11077, !11079, !11082, !11083}
!11073 = !DILocalVariable(name: "handles", arg: 1, scope: !11069, file: !10936, line: 106, type: !166)
!11074 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11069, file: !10936, line: 107, type: !356)
!11075 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11069, file: !10936, line: 108, type: !11026)
!11076 = !DILocalVariable(name: "context", arg: 4, scope: !11069, file: !10936, line: 109, type: !102)
!11077 = !DILocalVariable(name: "i", scope: !11078, file: !10936, line: 112, type: !356)
!11078 = distinct !DILexicalBlock(scope: !11069, file: !10936, line: 112, column: 2)
!11079 = !DILocalVariable(name: "dh", scope: !11080, file: !10936, line: 113, type: !168)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !10936, line: 112, column: 44)
!11081 = distinct !DILexicalBlock(scope: !11078, file: !10936, line: 112, column: 2)
!11082 = !DILocalVariable(name: "rdev", scope: !11080, file: !10936, line: 114, type: !10939)
!11083 = !DILocalVariable(name: "rc", scope: !11080, file: !10936, line: 115, type: !103)
!11084 = !DILocation(line: 0, scope: !11069)
!11085 = !DILocation(line: 0, scope: !11078)
!11086 = !DILocation(line: 112, column: 23, scope: !11081)
!11087 = !DILocation(line: 112, column: 2, scope: !11078)
!11088 = distinct !{!11088, !11087, !11089}
!11089 = !DILocation(line: 120, column: 2, scope: !11078)
!11090 = !DILocation(line: 113, column: 24, scope: !11080)
!11091 = !DILocation(line: 0, scope: !11080)
!11092 = !DILocation(line: 114, column: 31, scope: !11080)
!11093 = !DILocation(line: 115, column: 12, scope: !11080)
!11094 = !DILocation(line: 117, column: 10, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11080, file: !10936, line: 117, column: 7)
!11096 = !DILocation(line: 112, column: 39, scope: !11081)
!11097 = !DILocation(line: 123, column: 1, scope: !11069)
!11098 = distinct !DISubprogram(name: "device_from_handle", scope: !147, file: !147, line: 439, type: !11099, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11101)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!10939, !168}
!11101 = !{!11102, !11103, !11104}
!11102 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11098, file: !147, line: 439, type: !168)
!11103 = !DILocalVariable(name: "dev", scope: !11098, file: !147, line: 443, type: !10939)
!11104 = !DILocalVariable(name: "numdev", scope: !11098, file: !147, line: 444, type: !356)
!11105 = !DILocation(line: 0, scope: !11098)
!11106 = !DILocation(line: 446, column: 7, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11098, file: !147, line: 446, column: 6)
!11108 = !DILocation(line: 446, column: 18, scope: !11107)
!11109 = !DILocation(line: 446, column: 23, scope: !11107)
!11110 = !DILocation(line: 450, column: 2, scope: !11098)
!11111 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10936, file: !10936, line: 135, type: !11024, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11112)
!11112 = !{!11113, !11114, !11115, !11116, !11117}
!11113 = !DILocalVariable(name: "dev", arg: 1, scope: !11111, file: !10936, line: 135, type: !10939)
!11114 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11111, file: !10936, line: 136, type: !11026)
!11115 = !DILocalVariable(name: "context", arg: 3, scope: !11111, file: !10936, line: 137, type: !102)
!11116 = !DILocalVariable(name: "handle_count", scope: !11111, file: !10936, line: 139, type: !356)
!11117 = !DILocalVariable(name: "handles", scope: !11111, file: !10936, line: 140, type: !166)
!11118 = !DILocation(line: 0, scope: !11111)
!11119 = !DILocation(line: 139, column: 2, scope: !11111)
!11120 = !DILocation(line: 139, column: 9, scope: !11111)
!11121 = !DILocation(line: 140, column: 35, scope: !11111)
!11122 = !DILocation(line: 142, column: 33, scope: !11111)
!11123 = !DILocation(line: 142, column: 9, scope: !11111)
!11124 = !DILocation(line: 143, column: 1, scope: !11111)
!11125 = !DILocation(line: 142, column: 2, scope: !11111)
!11126 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !147, file: !147, line: 573, type: !11045, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !11127)
!11127 = !{!11128, !11129, !11130, !11131, !11132}
!11128 = !DILocalVariable(name: "dev", arg: 1, scope: !11126, file: !147, line: 573, type: !10939)
!11129 = !DILocalVariable(name: "count", arg: 2, scope: !11126, file: !147, line: 573, type: !2391)
!11130 = !DILocalVariable(name: "rv", scope: !11126, file: !147, line: 575, type: !166)
!11131 = !DILocalVariable(name: "region", scope: !11126, file: !147, line: 576, type: !356)
!11132 = !DILocalVariable(name: "i", scope: !11126, file: !147, line: 577, type: !356)
!11133 = !DILocation(line: 0, scope: !11126)
!11134 = !DILocation(line: 575, column: 35, scope: !11126)
!11135 = !DILocation(line: 579, column: 9, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11126, file: !147, line: 579, column: 6)
!11137 = !DILocation(line: 579, column: 6, scope: !11126)
!11138 = !DILocation(line: 582, column: 8, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !147, line: 582, column: 8)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !147, line: 581, column: 23)
!11141 = distinct !DILexicalBlock(scope: !11136, file: !147, line: 579, column: 18)
!11142 = !DILocation(line: 582, column: 12, scope: !11139)
!11143 = !DILocation(line: 585, column: 6, scope: !11140)
!11144 = !DILocation(line: 0, scope: !11141)
!11145 = !DILocation(line: 581, column: 17, scope: !11141)
!11146 = !DILocation(line: 581, column: 3, scope: !11141)
!11147 = !DILocation(line: 588, column: 10, scope: !11141)
!11148 = !DILocation(line: 588, column: 16, scope: !11141)
!11149 = !DILocation(line: 589, column: 4, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11141, file: !147, line: 588, column: 39)
!11151 = !DILocation(line: 588, column: 3, scope: !11141)
!11152 = distinct !{!11152, !11151, !11153}
!11153 = !DILocation(line: 590, column: 3, scope: !11141)
!11154 = !DILocation(line: 591, column: 10, scope: !11141)
!11155 = !DILocation(line: 592, column: 2, scope: !11141)
!11156 = !DILocation(line: 575, column: 25, scope: !11126)
!11157 = !DILocation(line: 594, column: 2, scope: !11126)
!11158 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1812, file: !1812, line: 49, type: !11159, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1809, retainedNodes: !478)
!11159 = !DISubroutineType(types: !11160)
!11160 = !{!2384}
!11161 = !DILocation(line: 51, column: 10, scope: !11158)
!11162 = !DILocation(line: 51, column: 20, scope: !11158)
!11163 = !DILocation(line: 51, column: 2, scope: !11158)
!11164 = distinct !DISubprogram(name: "coredump", scope: !2884, file: !2884, line: 209, type: !11165, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11311)
!11165 = !DISubroutineType(types: !11166)
!11166 = !{null, !32, !11167, !11211}
!11167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11168, size: 32)
!11168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11169)
!11169 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2516, line: 141, baseType: !11170)
!11170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2516, line: 97, size: 256, elements: !11171)
!11171 = !{!11172}
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11170, file: !2516, line: 107, baseType: !11173, size: 256)
!11173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2516, line: 98, size: 256, elements: !11174)
!11174 = !{!11175, !11180, !11185, !11190, !11195, !11200, !11205, !11210}
!11175 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 99, baseType: !11176, size: 32)
!11176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 99, size: 32, elements: !11177)
!11177 = !{!11178, !11179}
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11176, file: !2516, line: 99, baseType: !106, size: 32)
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11176, file: !2516, line: 99, baseType: !106, size: 32)
!11180 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 100, baseType: !11181, size: 32, offset: 32)
!11181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 100, size: 32, elements: !11182)
!11182 = !{!11183, !11184}
!11183 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11181, file: !2516, line: 100, baseType: !106, size: 32)
!11184 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11181, file: !2516, line: 100, baseType: !106, size: 32)
!11185 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 101, baseType: !11186, size: 32, offset: 64)
!11186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 101, size: 32, elements: !11187)
!11187 = !{!11188, !11189}
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11186, file: !2516, line: 101, baseType: !106, size: 32)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11186, file: !2516, line: 101, baseType: !106, size: 32)
!11190 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 102, baseType: !11191, size: 32, offset: 96)
!11191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 102, size: 32, elements: !11192)
!11192 = !{!11193, !11194}
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11191, file: !2516, line: 102, baseType: !106, size: 32)
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11191, file: !2516, line: 102, baseType: !106, size: 32)
!11195 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 103, baseType: !11196, size: 32, offset: 128)
!11196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 103, size: 32, elements: !11197)
!11197 = !{!11198, !11199}
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11196, file: !2516, line: 103, baseType: !106, size: 32)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11196, file: !2516, line: 103, baseType: !106, size: 32)
!11200 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 104, baseType: !11201, size: 32, offset: 160)
!11201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 104, size: 32, elements: !11202)
!11202 = !{!11203, !11204}
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11201, file: !2516, line: 104, baseType: !106, size: 32)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11201, file: !2516, line: 104, baseType: !106, size: 32)
!11205 = !DIDerivedType(tag: DW_TAG_member, scope: !11173, file: !2516, line: 105, baseType: !11206, size: 32, offset: 192)
!11206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11173, file: !2516, line: 105, size: 32, elements: !11207)
!11207 = !{!11208, !11209}
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11206, file: !2516, line: 105, baseType: !106, size: 32)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11206, file: !2516, line: 105, baseType: !106, size: 32)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11173, file: !2516, line: 106, baseType: !106, size: 32, offset: 224)
!11211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11212, size: 32)
!11212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !11213)
!11213 = !{!11214, !11272, !11284, !11285, !11286, !11287, !11293, !11306}
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11212, file: !367, line: 247, baseType: !11215, size: 384)
!11215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !11216)
!11216 = !{!11217, !11241, !11248, !11249, !11250, !11259, !11260, !11261}
!11217 = !DIDerivedType(tag: DW_TAG_member, scope: !11215, file: !367, line: 60, baseType: !11218, size: 64)
!11218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11215, file: !367, line: 60, size: 64, elements: !11219)
!11219 = !{!11220, !11235}
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11218, file: !367, line: 61, baseType: !11221, size: 64)
!11221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !377, line: 49, baseType: !11222)
!11222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !377, line: 37, size: 64, elements: !11223)
!11223 = !{!11224, !11230}
!11224 = !DIDerivedType(tag: DW_TAG_member, scope: !11222, file: !377, line: 38, baseType: !11225, size: 32)
!11225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11222, file: !377, line: 38, size: 32, elements: !11226)
!11226 = !{!11227, !11229}
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11225, file: !377, line: 39, baseType: !11228, size: 32)
!11228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11222, size: 32)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11225, file: !377, line: 40, baseType: !11228, size: 32)
!11230 = !DIDerivedType(tag: DW_TAG_member, scope: !11222, file: !377, line: 42, baseType: !11231, size: 32, offset: 32)
!11231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11222, file: !377, line: 42, size: 32, elements: !11232)
!11232 = !{!11233, !11234}
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11231, file: !377, line: 43, baseType: !11228, size: 32)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11231, file: !377, line: 44, baseType: !11228, size: 32)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11218, file: !367, line: 62, baseType: !11236, size: 64)
!11236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !11237)
!11237 = !{!11238}
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11236, file: !393, line: 50, baseType: !11239, size: 64)
!11239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11240, size: 64, elements: !398)
!11240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11236, size: 32)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11215, file: !367, line: 68, baseType: !11242, size: 32, offset: 64)
!11242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11243, size: 32)
!11243 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !403, line: 233, baseType: !11244)
!11244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !403, line: 231, size: 64, elements: !11245)
!11245 = !{!11246}
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11244, file: !403, line: 232, baseType: !11247, size: 64)
!11247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !377, line: 48, baseType: !11222)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11215, file: !367, line: 71, baseType: !160, size: 8, offset: 96)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11215, file: !367, line: 74, baseType: !160, size: 8, offset: 104)
!11250 = !DIDerivedType(tag: DW_TAG_member, scope: !11215, file: !367, line: 90, baseType: !11251, size: 16, offset: 112)
!11251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11215, file: !367, line: 90, size: 16, elements: !11252)
!11252 = !{!11253, !11258}
!11253 = !DIDerivedType(tag: DW_TAG_member, scope: !11251, file: !367, line: 91, baseType: !11254, size: 16)
!11254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11251, file: !367, line: 91, size: 16, elements: !11255)
!11255 = !{!11256, !11257}
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11254, file: !367, line: 96, baseType: !417, size: 8)
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11254, file: !367, line: 97, baseType: !160, size: 8, offset: 8)
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11251, file: !367, line: 100, baseType: !421, size: 16)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11215, file: !367, line: 107, baseType: !106, size: 32, offset: 128)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11215, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11215, file: !367, line: 131, baseType: !11262, size: 192, offset: 192)
!11262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !403, line: 244, size: 192, elements: !11263)
!11263 = !{!11264, !11265, !11271}
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11262, file: !403, line: 245, baseType: !11221, size: 64)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11262, file: !403, line: 246, baseType: !11266, size: 32, offset: 64)
!11266 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !403, line: 242, baseType: !11267)
!11267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11268, size: 32)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !11270}
!11270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11262, size: 32)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11262, file: !403, line: 249, baseType: !436, size: 64, offset: 128)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11212, file: !367, line: 250, baseType: !11273, size: 288, offset: 384)
!11273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !440, line: 25, size: 288, elements: !11274)
!11274 = !{!11275, !11276, !11277, !11278, !11279, !11280, !11281, !11282, !11283}
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11273, file: !440, line: 26, baseType: !106, size: 32)
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11273, file: !440, line: 27, baseType: !106, size: 32, offset: 32)
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11273, file: !440, line: 28, baseType: !106, size: 32, offset: 64)
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11273, file: !440, line: 29, baseType: !106, size: 32, offset: 96)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11273, file: !440, line: 30, baseType: !106, size: 32, offset: 128)
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11273, file: !440, line: 31, baseType: !106, size: 32, offset: 160)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11273, file: !440, line: 32, baseType: !106, size: 32, offset: 192)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11273, file: !440, line: 33, baseType: !106, size: 32, offset: 224)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11273, file: !440, line: 34, baseType: !106, size: 32, offset: 256)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11212, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11212, file: !367, line: 256, baseType: !11243, size: 64, offset: 704)
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11212, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11212, file: !367, line: 300, baseType: !11288, size: 96, offset: 800)
!11288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !11289)
!11289 = !{!11290, !11291, !11292}
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11288, file: !367, line: 153, baseType: !22, size: 32)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11288, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11288, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11212, file: !367, line: 325, baseType: !11294, size: 32, offset: 896)
!11294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11295, size: 32)
!11295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !463, line: 5073, size: 160, elements: !11296)
!11296 = !{!11297, !11303, !11304}
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11295, file: !463, line: 5074, baseType: !11298, size: 96)
!11298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !467, line: 56, size: 96, elements: !11299)
!11299 = !{!11300, !11301, !11302}
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11298, file: !467, line: 57, baseType: !470, size: 32)
!11301 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11298, file: !467, line: 58, baseType: !102, size: 32, offset: 32)
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11298, file: !467, line: 59, baseType: !356, size: 32, offset: 64)
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11295, file: !463, line: 5075, baseType: !11243, size: 64, offset: 96)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11295, file: !463, line: 5076, baseType: !11305, offset: 160)
!11305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !477, line: 43, elements: !478)
!11306 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11212, file: !367, line: 343, baseType: !11307, size: 64, offset: 928)
!11307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !440, line: 60, size: 64, elements: !11308)
!11308 = !{!11309, !11310}
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11307, file: !440, line: 63, baseType: !106, size: 32)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11307, file: !440, line: 66, baseType: !106, size: 32, offset: 32)
!11311 = !{!11312, !11313, !11314}
!11312 = !DILocalVariable(name: "reason", arg: 1, scope: !11164, file: !2884, line: 209, type: !32)
!11313 = !DILocalVariable(name: "esf", arg: 2, scope: !11164, file: !2884, line: 209, type: !11167)
!11314 = !DILocalVariable(name: "thread", arg: 3, scope: !11164, file: !2884, line: 210, type: !11211)
!11315 = !DILocation(line: 0, scope: !11164)
!11316 = !DILocation(line: 212, column: 1, scope: !11164)
!11317 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2884, file: !2884, line: 214, type: !11318, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11320)
!11318 = !DISubroutineType(types: !11319)
!11319 = !{null, !22, !22}
!11320 = !{!11321, !11322}
!11321 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11317, file: !2884, line: 214, type: !22)
!11322 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11317, file: !2884, line: 214, type: !22)
!11323 = !DILocation(line: 0, scope: !11317)
!11324 = !DILocation(line: 216, column: 1, scope: !11317)
!11325 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2884, file: !2884, line: 218, type: !11326, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11328)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{null, !1853, !356}
!11328 = !{!11329, !11330}
!11329 = !DILocalVariable(name: "buf", arg: 1, scope: !11325, file: !2884, line: 218, type: !1853)
!11330 = !DILocalVariable(name: "buflen", arg: 2, scope: !11325, file: !2884, line: 218, type: !356)
!11331 = !DILocation(line: 0, scope: !11325)
!11332 = !DILocation(line: 220, column: 1, scope: !11325)
!11333 = distinct !DISubprogram(name: "coredump_query", scope: !2884, file: !2884, line: 222, type: !11334, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11336)
!11334 = !DISubroutineType(types: !11335)
!11335 = !{!103, !2883, !102}
!11336 = !{!11337, !11338}
!11337 = !DILocalVariable(name: "query_id", arg: 1, scope: !11333, file: !2884, line: 222, type: !2883)
!11338 = !DILocalVariable(name: "arg", arg: 2, scope: !11333, file: !2884, line: 222, type: !102)
!11339 = !DILocation(line: 0, scope: !11333)
!11340 = !DILocation(line: 224, column: 2, scope: !11333)
!11341 = distinct !DISubprogram(name: "coredump_cmd", scope: !2884, file: !2884, line: 227, type: !11342, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11344)
!11342 = !DISubroutineType(types: !11343)
!11343 = !{!103, !2890, !102}
!11344 = !{!11345, !11346}
!11345 = !DILocalVariable(name: "query_id", arg: 1, scope: !11341, file: !2884, line: 227, type: !2890)
!11346 = !DILocalVariable(name: "arg", arg: 2, scope: !11341, file: !2884, line: 227, type: !102)
!11347 = !DILocation(line: 0, scope: !11341)
!11348 = !DILocation(line: 229, column: 2, scope: !11341)
!11349 = distinct !DISubprogram(name: "arch_system_halt", scope: !11350, file: !11350, line: 23, type: !4735, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11351)
!11350 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11351 = !{!11352}
!11352 = !DILocalVariable(name: "reason", arg: 1, scope: !11349, file: !11350, line: 23, type: !32)
!11353 = !DILocation(line: 0, scope: !11349)
!11354 = !DILocation(line: 55, column: 2, scope: !11355, inlinedAt: !11359)
!11355 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11356)
!11356 = !{!11357, !11358}
!11357 = !DILocalVariable(name: "key", scope: !11355, file: !4724, line: 44, type: !32)
!11358 = !DILocalVariable(name: "tmp", scope: !11355, file: !4724, line: 53, type: !32)
!11359 = distinct !DILocation(line: 31, column: 8, scope: !11349)
!11360 = !{i64 2279871}
!11361 = !DILocation(line: 0, scope: !11355, inlinedAt: !11359)
!11362 = !DILocation(line: 32, column: 2, scope: !11349)
!11363 = !DILocation(line: 32, column: 2, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !11350, line: 32, column: 2)
!11365 = distinct !DILexicalBlock(scope: !11349, file: !11350, line: 32, column: 2)
!11366 = distinct !{!11366, !11367, !11368}
!11367 = !DILocation(line: 32, column: 2, scope: !11365)
!11368 = !DILocation(line: 34, column: 2, scope: !11365)
!11369 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11350, file: !11350, line: 39, type: !11370, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11372)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{null, !32, !11167}
!11372 = !{!11373, !11374}
!11373 = !DILocalVariable(name: "reason", arg: 1, scope: !11369, file: !11350, line: 39, type: !32)
!11374 = !DILocalVariable(name: "esf", arg: 2, scope: !11369, file: !11350, line: 40, type: !11167)
!11375 = !DILocation(line: 0, scope: !11369)
!11376 = !DILocation(line: 46, column: 2, scope: !11369)
!11377 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11350, file: !11350, line: 81, type: !4735, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11378)
!11378 = !{!11379}
!11379 = !DILocalVariable(name: "reason", arg: 1, scope: !11377, file: !11350, line: 81, type: !32)
!11380 = !DILocation(line: 0, scope: !11377)
!11381 = !DILocation(line: 83, column: 2, scope: !11377)
!11382 = distinct !DISubprogram(name: "z_fatal_error", scope: !11350, file: !11350, line: 96, type: !11370, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11383)
!11383 = !{!11384, !11385, !11386, !11387}
!11384 = !DILocalVariable(name: "reason", arg: 1, scope: !11382, file: !11350, line: 96, type: !32)
!11385 = !DILocalVariable(name: "esf", arg: 2, scope: !11382, file: !11350, line: 96, type: !11167)
!11386 = !DILocalVariable(name: "key", scope: !11382, file: !11350, line: 102, type: !32)
!11387 = !DILocalVariable(name: "thread", scope: !11382, file: !11350, line: 103, type: !11211)
!11388 = !DILocation(line: 0, scope: !11382)
!11389 = !DILocation(line: 55, column: 2, scope: !11355, inlinedAt: !11390)
!11390 = distinct !DILocation(line: 102, column: 21, scope: !11382)
!11391 = !DILocation(line: 0, scope: !11355, inlinedAt: !11390)
!11392 = !DILocation(line: 119, column: 11, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11382, file: !11350, line: 119, column: 6)
!11394 = !DILocation(line: 119, column: 20, scope: !11393)
!11395 = !DILocation(line: 131, column: 2, scope: !11382)
!11396 = !DILocation(line: 151, column: 7, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11350, line: 146, column: 32)
!11398 = distinct !DILexicalBlock(scope: !11382, file: !11350, line: 146, column: 6)
!11399 = !DILocation(line: 151, column: 21, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11397, file: !11350, line: 151, column: 7)
!11401 = !DILocation(line: 104, column: 4, scope: !11382)
!11402 = !DILocalVariable(name: "key", arg: 1, scope: !11403, file: !4724, line: 84, type: !32)
!11403 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11404)
!11404 = !{!11402}
!11405 = !DILocation(line: 0, scope: !11403, inlinedAt: !11406)
!11406 = distinct !DILocation(line: 186, column: 2, scope: !11382)
!11407 = !DILocation(line: 95, column: 2, scope: !11403, inlinedAt: !11406)
!11408 = !{i64 2280688}
!11409 = !DILocation(line: 189, column: 3, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !11350, line: 188, column: 41)
!11411 = distinct !DILexicalBlock(scope: !11382, file: !11350, line: 188, column: 6)
!11412 = !DILocation(line: 191, column: 1, scope: !11382)
!11413 = distinct !DISubprogram(name: "k_current_get", scope: !463, file: !463, line: 530, type: !11414, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !478)
!11414 = !DISubroutineType(types: !11415)
!11415 = !{!11416}
!11416 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !11211)
!11417 = !DILocation(line: 535, column: 9, scope: !11413)
!11418 = !DILocation(line: 535, column: 2, scope: !11413)
!11419 = distinct !DISubprogram(name: "k_thread_abort", scope: !3345, file: !3345, line: 188, type: !11420, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !11422)
!11420 = !DISubroutineType(types: !11421)
!11421 = !{null, !11416}
!11422 = !{!11423}
!11423 = !DILocalVariable(name: "thread", arg: 1, scope: !11419, file: !3345, line: 188, type: !11416)
!11424 = !DILocation(line: 0, scope: !11419)
!11425 = !DILocation(line: 197, column: 2, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11419, file: !3345, line: 197, column: 2)
!11427 = !{i64 2155061442}
!11428 = !DILocation(line: 198, column: 2, scope: !11419)
!11429 = !DILocation(line: 199, column: 1, scope: !11419)
!11430 = distinct !DISubprogram(name: "z_current_get", scope: !3345, file: !3345, line: 173, type: !11414, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !478)
!11431 = !DILocation(line: 180, column: 2, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11430, file: !3345, line: 180, column: 2)
!11433 = !{i64 2155061374}
!11434 = !DILocation(line: 181, column: 9, scope: !11430)
!11435 = !DILocation(line: 181, column: 2, scope: !11430)
!11436 = distinct !DISubprogram(name: "z_early_memset", scope: !1820, file: !1820, line: 108, type: !11437, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11439)
!11437 = !DISubroutineType(types: !11438)
!11438 = !{null, !102, !103, !356}
!11439 = !{!11440, !11441, !11442}
!11440 = !DILocalVariable(name: "dst", arg: 1, scope: !11436, file: !1820, line: 108, type: !102)
!11441 = !DILocalVariable(name: "c", arg: 2, scope: !11436, file: !1820, line: 108, type: !103)
!11442 = !DILocalVariable(name: "n", arg: 3, scope: !11436, file: !1820, line: 108, type: !356)
!11443 = !DILocation(line: 0, scope: !11436)
!11444 = !DILocation(line: 110, column: 9, scope: !11436)
!11445 = !DILocation(line: 111, column: 1, scope: !11436)
!11446 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1820, file: !1820, line: 121, type: !11447, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11449)
!11447 = !DISubroutineType(types: !11448)
!11448 = !{null, !102, !13, !356}
!11449 = !{!11450, !11451, !11452}
!11450 = !DILocalVariable(name: "dst", arg: 1, scope: !11446, file: !1820, line: 121, type: !102)
!11451 = !DILocalVariable(name: "src", arg: 2, scope: !11446, file: !1820, line: 121, type: !13)
!11452 = !DILocalVariable(name: "n", arg: 3, scope: !11446, file: !1820, line: 121, type: !356)
!11453 = !DILocation(line: 0, scope: !11446)
!11454 = !DILocation(line: 123, column: 9, scope: !11446)
!11455 = !DILocation(line: 124, column: 1, scope: !11446)
!11456 = distinct !DISubprogram(name: "z_bss_zero", scope: !1820, file: !1820, line: 132, type: !2917, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !478)
!11457 = !DILocation(line: 143, column: 2, scope: !11456)
!11458 = !DILocation(line: 168, column: 1, scope: !11456)
!11459 = distinct !DISubprogram(name: "z_init_cpu", scope: !1820, file: !1820, line: 372, type: !6616, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11460)
!11460 = !{!11461}
!11461 = !DILocalVariable(name: "id", arg: 1, scope: !11459, file: !1820, line: 372, type: !103)
!11462 = !DILocation(line: 0, scope: !11459)
!11463 = !DILocation(line: 374, column: 2, scope: !11459)
!11464 = !DILocation(line: 375, column: 34, scope: !11459)
!11465 = !DILocation(line: 375, column: 19, scope: !11459)
!11466 = !DILocation(line: 375, column: 31, scope: !11459)
!11467 = !DILocation(line: 376, column: 24, scope: !11459)
!11468 = !DILocation(line: 376, column: 19, scope: !11459)
!11469 = !DILocation(line: 376, column: 22, scope: !11459)
!11470 = !DILocation(line: 378, column: 26, scope: !11459)
!11471 = !DILocation(line: 378, column: 4, scope: !11459)
!11472 = !DILocation(line: 378, column: 50, scope: !11459)
!11473 = !DILocation(line: 377, column: 19, scope: !11459)
!11474 = !DILocation(line: 377, column: 29, scope: !11459)
!11475 = !DILocation(line: 384, column: 1, scope: !11459)
!11476 = distinct !DISubprogram(name: "init_idle_thread", scope: !1820, file: !1820, line: 343, type: !6616, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11477)
!11477 = !{!11478, !11479, !11480, !11483}
!11478 = !DILocalVariable(name: "i", arg: 1, scope: !11476, file: !1820, line: 343, type: !103)
!11479 = !DILocalVariable(name: "thread", scope: !11476, file: !1820, line: 345, type: !1913)
!11480 = !DILocalVariable(name: "stack", scope: !11476, file: !1820, line: 346, type: !11481)
!11481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11482, size: 32)
!11482 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3224, line: 44, baseType: !2027)
!11483 = !DILocalVariable(name: "tname", scope: !11476, file: !1820, line: 358, type: !1099)
!11484 = !DILocation(line: 0, scope: !11476)
!11485 = !DILocation(line: 345, column: 29, scope: !11476)
!11486 = !DILocation(line: 346, column: 28, scope: !11476)
!11487 = !DILocation(line: 362, column: 37, scope: !11476)
!11488 = !DILocation(line: 362, column: 36, scope: !11476)
!11489 = !DILocation(line: 361, column: 2, scope: !11476)
!11490 = !DILocation(line: 365, column: 2, scope: !11476)
!11491 = !DILocation(line: 370, column: 1, scope: !11476)
!11492 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2028, file: !2028, line: 331, type: !11493, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11495)
!11493 = !DISubroutineType(types: !11494)
!11494 = !{!1099, !11481}
!11495 = !{!11496}
!11496 = !DILocalVariable(name: "sym", arg: 1, scope: !11492, file: !2028, line: 331, type: !11481)
!11497 = !DILocation(line: 0, scope: !11492)
!11498 = !DILocation(line: 333, column: 21, scope: !11492)
!11499 = !DILocation(line: 333, column: 2, scope: !11492)
!11500 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11501, file: !11501, line: 155, type: !11502, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11504)
!11501 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11502 = !DISubroutineType(types: !11503)
!11503 = !{null, !1913}
!11504 = !{!11505}
!11505 = !DILocalVariable(name: "thread", arg: 1, scope: !11500, file: !11501, line: 155, type: !1913)
!11506 = !DILocation(line: 0, scope: !11500)
!11507 = !DILocation(line: 157, column: 15, scope: !11500)
!11508 = !DILocation(line: 157, column: 28, scope: !11500)
!11509 = !DILocation(line: 158, column: 1, scope: !11500)
!11510 = distinct !DISubprogram(name: "z_cstart", scope: !1820, file: !1820, line: 501, type: !2917, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11511)
!11511 = !{!11512}
!11512 = !DILocalVariable(name: "dummy_thread", scope: !11510, file: !1820, line: 518, type: !1914)
!11513 = !DILocation(line: 507, column: 2, scope: !11510)
!11514 = !DILocation(line: 43, column: 14, scope: !11515, inlinedAt: !11519)
!11515 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11516, file: !11516, line: 40, type: !2917, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11517)
!11516 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11517 = !{!11518}
!11518 = !DILocalVariable(name: "msp", scope: !11515, file: !11516, line: 42, type: !106)
!11519 = distinct !DILocation(line: 44, column: 2, scope: !11520, inlinedAt: !11522)
!11520 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11521, file: !11521, line: 42, type: !2917, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !478)
!11521 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11522 = distinct !DILocation(line: 510, column: 2, scope: !11510)
!11523 = !DILocation(line: 43, column: 3, scope: !11515, inlinedAt: !11519)
!11524 = !DILocation(line: 43, column: 60, scope: !11515, inlinedAt: !11519)
!11525 = !DILocation(line: 0, scope: !11515, inlinedAt: !11519)
!11526 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11527, file: !4973, line: 1153, type: !106)
!11527 = distinct !DISubprogram(name: "__set_MSP", scope: !4973, file: !4973, line: 1153, type: !5062, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11528)
!11528 = !{!11526}
!11529 = !DILocation(line: 0, scope: !11527, inlinedAt: !11530)
!11530 = distinct !DILocation(line: 46, column: 2, scope: !11515, inlinedAt: !11519)
!11531 = !DILocation(line: 1155, column: 3, scope: !11527, inlinedAt: !11530)
!11532 = !{i64 3745810}
!11533 = !DILocation(line: 62, column: 11, scope: !11515, inlinedAt: !11519)
!11534 = !DILocation(line: 102, column: 2, scope: !11535, inlinedAt: !11536)
!11535 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5765, file: !5765, line: 97, type: !2917, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !478)
!11536 = distinct !DILocation(line: 45, column: 2, scope: !11520, inlinedAt: !11522)
!11537 = !DILocation(line: 108, column: 2, scope: !11535, inlinedAt: !11536)
!11538 = !DILocation(line: 112, column: 2, scope: !11535, inlinedAt: !11536)
!11539 = !DILocation(line: 113, column: 2, scope: !11535, inlinedAt: !11536)
!11540 = !DILocation(line: 114, column: 2, scope: !11535, inlinedAt: !11536)
!11541 = !DILocation(line: 116, column: 2, scope: !11535, inlinedAt: !11536)
!11542 = !DILocation(line: 123, column: 13, scope: !11535, inlinedAt: !11536)
!11543 = !DILocation(line: 46, column: 2, scope: !11520, inlinedAt: !11522)
!11544 = !DILocation(line: 47, column: 2, scope: !11520, inlinedAt: !11522)
!11545 = !DILocation(line: 174, column: 12, scope: !11546, inlinedAt: !11547)
!11546 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5765, file: !5765, line: 169, type: !2917, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !478)
!11547 = distinct !DILocation(line: 48, column: 2, scope: !11520, inlinedAt: !11522)
!11548 = !DILocation(line: 179, column: 12, scope: !11546, inlinedAt: !11547)
!11549 = !DILocation(line: 50, column: 2, scope: !11520, inlinedAt: !11522)
!11550 = !DILocation(line: 57, column: 2, scope: !11520, inlinedAt: !11522)
!11551 = !DILocation(line: 518, column: 2, scope: !11510)
!11552 = !DILocation(line: 518, column: 18, scope: !11510)
!11553 = !DILocation(line: 520, column: 2, scope: !11510)
!11554 = !DILocation(line: 523, column: 2, scope: !11510)
!11555 = !DILocation(line: 526, column: 2, scope: !11510)
!11556 = !DILocation(line: 527, column: 2, scope: !11510)
!11557 = !DILocation(line: 543, column: 24, scope: !11510)
!11558 = !DILocation(line: 543, column: 2, scope: !11510)
!11559 = !DILocation(line: 0, scope: !2047)
!11560 = !DILocation(line: 246, column: 15, scope: !2065)
!11561 = !DILocation(line: 246, column: 36, scope: !2064)
!11562 = !DILocation(line: 246, column: 2, scope: !2065)
!11563 = !DILocation(line: 247, column: 37, scope: !2063)
!11564 = !DILocation(line: 0, scope: !2063)
!11565 = !DILocation(line: 248, column: 19, scope: !2063)
!11566 = !DILocation(line: 248, column: 12, scope: !2063)
!11567 = !DILocation(line: 250, column: 11, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !2063, file: !1820, line: 250, column: 7)
!11569 = !DILocation(line: 250, column: 7, scope: !2063)
!11570 = !DILocation(line: 254, column: 11, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !1820, line: 254, column: 8)
!11572 = distinct !DILexicalBlock(scope: !11568, file: !1820, line: 250, column: 20)
!11573 = !DILocation(line: 254, column: 8, scope: !11572)
!11574 = !DILocation(line: 255, column: 9, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11571, file: !1820, line: 254, column: 17)
!11576 = !DILocation(line: 258, column: 9, scope: !11575)
!11577 = !DILocation(line: 261, column: 28, scope: !11575)
!11578 = !DILocation(line: 261, column: 10, scope: !11575)
!11579 = !DILocation(line: 261, column: 17, scope: !11575)
!11580 = !DILocation(line: 261, column: 26, scope: !11575)
!11581 = !DILocation(line: 262, column: 4, scope: !11575)
!11582 = !DILocation(line: 263, column: 9, scope: !11572)
!11583 = !DILocation(line: 263, column: 16, scope: !11572)
!11584 = !DILocation(line: 263, column: 28, scope: !11572)
!11585 = !DILocation(line: 264, column: 3, scope: !11572)
!11586 = !DILocation(line: 246, column: 60, scope: !2064)
!11587 = distinct !{!11587, !11562, !11588}
!11588 = !DILocation(line: 265, column: 2, scope: !2065)
!11589 = !DILocation(line: 266, column: 1, scope: !2047)
!11590 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !512, file: !512, line: 1814, type: !5007, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11591)
!11591 = !{!11592, !11593}
!11592 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11590, file: !512, line: 1814, type: !774)
!11593 = !DILocalVariable(name: "priority", arg: 2, scope: !11590, file: !512, line: 1814, type: !106)
!11594 = !DILocation(line: 0, scope: !11590)
!11595 = !DILocation(line: 1822, column: 48, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11597, file: !512, line: 1821, column: 3)
!11597 = distinct !DILexicalBlock(scope: !11590, file: !512, line: 1816, column: 7)
!11598 = !DILocation(line: 1822, column: 32, scope: !11596)
!11599 = !DILocation(line: 1822, column: 40, scope: !11596)
!11600 = !DILocation(line: 1822, column: 5, scope: !11596)
!11601 = !DILocation(line: 1822, column: 46, scope: !11596)
!11602 = !DILocation(line: 1824, column: 1, scope: !11590)
!11603 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11521, file: !11521, line: 32, type: !2917, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!11604 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11605, file: !11605, line: 215, type: !11502, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11606)
!11605 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11606 = !{!11607}
!11607 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11604, file: !11605, line: 215, type: !1913)
!11608 = !DILocation(line: 0, scope: !11604)
!11609 = !DILocation(line: 217, column: 21, scope: !11604)
!11610 = !DILocation(line: 217, column: 34, scope: !11604)
!11611 = !DILocation(line: 221, column: 21, scope: !11604)
!11612 = !DILocation(line: 221, column: 34, scope: !11604)
!11613 = !DILocation(line: 223, column: 27, scope: !11604)
!11614 = !DILocation(line: 223, column: 33, scope: !11604)
!11615 = !DILocation(line: 224, column: 27, scope: !11604)
!11616 = !DILocation(line: 224, column: 32, scope: !11604)
!11617 = !DILocation(line: 232, column: 16, scope: !11604)
!11618 = !DILocation(line: 232, column: 30, scope: !11604)
!11619 = !DILocation(line: 239, column: 24, scope: !11604)
!11620 = !DILocation(line: 240, column: 1, scope: !11604)
!11621 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1820, file: !1820, line: 399, type: !11622, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11624)
!11622 = !DISubroutineType(types: !11623)
!11623 = !{!1099}
!11624 = !{!11625}
!11625 = !DILocalVariable(name: "stack_ptr", scope: !11621, file: !1820, line: 401, type: !1099)
!11626 = !DILocation(line: 404, column: 2, scope: !11621)
!11627 = !DILocation(line: 416, column: 24, scope: !11621)
!11628 = !DILocation(line: 418, column: 14, scope: !11621)
!11629 = !DILocation(line: 0, scope: !11621)
!11630 = !DILocation(line: 423, column: 2, scope: !11621)
!11631 = !DILocation(line: 424, column: 2, scope: !11621)
!11632 = !DILocation(line: 426, column: 2, scope: !11621)
!11633 = !DILocation(line: 428, column: 2, scope: !11621)
!11634 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1820, file: !1820, line: 432, type: !11635, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11637)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{null, !1099}
!11637 = !{!11638}
!11638 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11634, file: !1820, line: 432, type: !1099)
!11639 = !DILocation(line: 0, scope: !11634)
!11640 = !DILocation(line: 435, column: 2, scope: !11634)
!11641 = !DILocation(line: 445, column: 2, scope: !11634)
!11642 = distinct !DISubprogram(name: "bg_thread_main", scope: !1820, file: !1820, line: 277, type: !3226, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !11643)
!11643 = !{!11644, !11645, !11646}
!11644 = !DILocalVariable(name: "unused1", arg: 1, scope: !11642, file: !1820, line: 277, type: !102)
!11645 = !DILocalVariable(name: "unused2", arg: 2, scope: !11642, file: !1820, line: 277, type: !102)
!11646 = !DILocalVariable(name: "unused3", arg: 3, scope: !11642, file: !1820, line: 277, type: !102)
!11647 = !DILocation(line: 0, scope: !11642)
!11648 = !DILocation(line: 291, column: 20, scope: !11642)
!11649 = !DILocation(line: 293, column: 2, scope: !11642)
!11650 = !DILocation(line: 297, column: 2, scope: !11642)
!11651 = !DILocation(line: 305, column: 2, scope: !11642)
!11652 = !DILocation(line: 307, column: 2, scope: !11642)
!11653 = !DILocation(line: 330, column: 8, scope: !11642)
!11654 = !DILocation(line: 333, column: 34, scope: !11642)
!11655 = !DILocation(line: 339, column: 1, scope: !11642)
!11656 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2076, file: !2076, line: 45, type: !11657, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11665)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{null, !11659, !102}
!11659 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !463, line: 103, baseType: !11660)
!11660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11661, size: 32)
!11661 = !DISubroutineType(types: !11662)
!11662 = !{null, !11663, !102}
!11663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11664, size: 32)
!11664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2081)
!11665 = !{!11666, !11667}
!11666 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11656, file: !2076, line: 45, type: !11659)
!11667 = !DILocalVariable(name: "user_data", arg: 2, scope: !11656, file: !2076, line: 45, type: !102)
!11668 = !DILocation(line: 0, scope: !11656)
!11669 = !DILocation(line: 71, column: 1, scope: !11656)
!11670 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2076, file: !2076, line: 73, type: !11657, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11671)
!11671 = !{!11672, !11673}
!11672 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11670, file: !2076, line: 73, type: !11659)
!11673 = !DILocalVariable(name: "user_data", arg: 2, scope: !11670, file: !2076, line: 73, type: !102)
!11674 = !DILocation(line: 0, scope: !11670)
!11675 = !DILocation(line: 95, column: 1, scope: !11670)
!11676 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2076, file: !2076, line: 97, type: !5766, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !478)
!11677 = !DILocation(line: 1031, column: 3, scope: !11678, inlinedAt: !11681)
!11678 = distinct !DISubprogram(name: "__get_IPSR", scope: !4973, file: !4973, line: 1027, type: !4808, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11679)
!11679 = !{!11680}
!11680 = !DILocalVariable(name: "result", scope: !11678, file: !4973, line: 1029, type: !106)
!11681 = distinct !DILocation(line: 48, column: 10, scope: !11682, inlinedAt: !11683)
!11682 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5765, file: !5765, line: 46, type: !5766, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !478)
!11683 = distinct !DILocation(line: 99, column: 9, scope: !11676)
!11684 = !{i64 3751461}
!11685 = !DILocation(line: 0, scope: !11678, inlinedAt: !11681)
!11686 = !DILocation(line: 48, column: 9, scope: !11682, inlinedAt: !11683)
!11687 = !DILocation(line: 99, column: 2, scope: !11676)
!11688 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2076, file: !2076, line: 106, type: !2917, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !478)
!11689 = !DILocation(line: 108, column: 2, scope: !11688)
!11690 = !DILocation(line: 108, column: 17, scope: !11688)
!11691 = !DILocation(line: 108, column: 30, scope: !11688)
!11692 = !DILocation(line: 109, column: 1, scope: !11688)
!11693 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2076, file: !2076, line: 116, type: !2917, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !478)
!11694 = !DILocation(line: 118, column: 2, scope: !11693)
!11695 = !DILocation(line: 118, column: 17, scope: !11693)
!11696 = !DILocation(line: 118, column: 30, scope: !11693)
!11697 = !DILocation(line: 119, column: 1, scope: !11693)
!11698 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2076, file: !2076, line: 126, type: !5766, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !478)
!11699 = !DILocation(line: 128, column: 10, scope: !11698)
!11700 = !DILocation(line: 128, column: 25, scope: !11698)
!11701 = !DILocation(line: 128, column: 38, scope: !11698)
!11702 = !DILocation(line: 128, column: 53, scope: !11698)
!11703 = !DILocation(line: 128, column: 2, scope: !11698)
!11704 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2076, file: !2076, line: 187, type: !11705, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11707)
!11705 = !DISubroutineType(types: !11706)
!11706 = !{!103, !2080, !150}
!11707 = !{!11708, !11709}
!11708 = !DILocalVariable(name: "thread", arg: 1, scope: !11704, file: !2076, line: 187, type: !2080)
!11709 = !DILocalVariable(name: "value", arg: 2, scope: !11704, file: !2076, line: 187, type: !150)
!11710 = !DILocation(line: 0, scope: !11704)
!11711 = !DILocation(line: 206, column: 2, scope: !11704)
!11712 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2076, file: !2076, line: 238, type: !11713, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11715)
!11713 = !DISubroutineType(types: !11714)
!11714 = !{!150, !2080}
!11715 = !{!11716}
!11716 = !DILocalVariable(name: "thread", arg: 1, scope: !11712, file: !2076, line: 238, type: !2080)
!11717 = !DILocation(line: 0, scope: !11712)
!11718 = !DILocation(line: 244, column: 2, scope: !11712)
!11719 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2076, file: !2076, line: 248, type: !11720, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11722)
!11720 = !DISubroutineType(types: !11721)
!11721 = !{!103, !2079, !1099, !356}
!11722 = !{!11723, !11724, !11725}
!11723 = !DILocalVariable(name: "thread", arg: 1, scope: !11719, file: !2076, line: 248, type: !2079)
!11724 = !DILocalVariable(name: "buf", arg: 2, scope: !11719, file: !2076, line: 248, type: !1099)
!11725 = !DILocalVariable(name: "size", arg: 3, scope: !11719, file: !2076, line: 248, type: !356)
!11726 = !DILocation(line: 0, scope: !11719)
!11727 = !DILocation(line: 257, column: 2, scope: !11719)
!11728 = !DILocation(line: 0, scope: !2075)
!11729 = !DILocation(line: 281, column: 11, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !2075, file: !2076, line: 281, column: 6)
!11731 = !DILocation(line: 281, column: 20, scope: !11730)
!11732 = !DILocation(line: 275, column: 45, scope: !2075)
!11733 = !DILocation(line: 285, column: 10, scope: !2075)
!11734 = !DILocation(line: 0, scope: !2196)
!11735 = !DILocation(line: 293, column: 39, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !2196, file: !2076, line: 293, column: 2)
!11737 = !DILocation(line: 293, column: 2, scope: !2196)
!11738 = !DILocation(line: 273, column: 14, scope: !2075)
!11739 = !DILocation(line: 309, column: 2, scope: !2075)
!11740 = !DILocation(line: 309, column: 11, scope: !2075)
!11741 = !DILocation(line: 311, column: 2, scope: !2075)
!11742 = !DILocation(line: 293, column: 26, scope: !11736)
!11743 = !DILocation(line: 294, column: 9, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11736, file: !2076, line: 293, column: 54)
!11745 = !DILocation(line: 295, column: 21, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11744, file: !2076, line: 295, column: 7)
!11747 = !DILocation(line: 295, column: 28, scope: !11746)
!11748 = !DILocation(line: 295, column: 7, scope: !11744)
!11749 = !DILocation(line: 299, column: 25, scope: !11744)
!11750 = !DILocation(line: 299, column: 41, scope: !11744)
!11751 = !DILocation(line: 300, column: 7, scope: !11744)
!11752 = !DILocation(line: 300, column: 26, scope: !11744)
!11753 = !DILocation(line: 299, column: 10, scope: !11744)
!11754 = !DILocation(line: 299, column: 7, scope: !11744)
!11755 = !DILocation(line: 302, column: 16, scope: !11744)
!11756 = !DILocation(line: 304, column: 20, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11744, file: !2076, line: 304, column: 7)
!11758 = !DILocation(line: 304, column: 7, scope: !11744)
!11759 = !DILocation(line: 305, column: 26, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !2076, line: 304, column: 26)
!11761 = !DILocation(line: 305, column: 42, scope: !11760)
!11762 = !DILocation(line: 305, column: 11, scope: !11760)
!11763 = !DILocation(line: 305, column: 8, scope: !11760)
!11764 = !DILocation(line: 306, column: 3, scope: !11760)
!11765 = !DILocation(line: 293, column: 50, scope: !11736)
!11766 = !DILocation(line: 312, column: 1, scope: !2075)
!11767 = distinct !DISubprogram(name: "copy_bytes", scope: !2076, file: !2076, line: 261, type: !11768, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11770)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!356, !1099, !356, !150, !356}
!11770 = !{!11771, !11772, !11773, !11774, !11775}
!11771 = !DILocalVariable(name: "dest", arg: 1, scope: !11767, file: !2076, line: 261, type: !1099)
!11772 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11767, file: !2076, line: 261, type: !356)
!11773 = !DILocalVariable(name: "src", arg: 3, scope: !11767, file: !2076, line: 261, type: !150)
!11774 = !DILocalVariable(name: "src_size", arg: 4, scope: !11767, file: !2076, line: 261, type: !356)
!11775 = !DILocalVariable(name: "bytes_to_copy", scope: !11767, file: !2076, line: 263, type: !356)
!11776 = !DILocation(line: 0, scope: !11767)
!11777 = !DILocation(line: 265, column: 18, scope: !11767)
!11778 = !DILocation(line: 266, column: 2, scope: !11767)
!11779 = !DILocation(line: 268, column: 2, scope: !11767)
!11780 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2076, file: !2076, line: 383, type: !11781, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11783)
!11781 = !DISubroutineType(types: !11782)
!11782 = !{null, !2080}
!11783 = !{!11784}
!11784 = !DILocalVariable(name: "thread", arg: 1, scope: !11780, file: !2076, line: 383, type: !2080)
!11785 = !DILocation(line: 0, scope: !11780)
!11786 = !DILocation(line: 387, column: 2, scope: !11780)
!11787 = !DILocation(line: 388, column: 1, scope: !11780)
!11788 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2076, file: !2076, line: 528, type: !11789, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11796)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{!1099, !2080, !11791, !356, !3223, !102, !102, !102, !103, !106, !150}
!11791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11792, size: 32)
!11792 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3224, line: 44, baseType: !11793)
!11793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2028, line: 47, size: 8, elements: !11794)
!11794 = !{!11795}
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11793, file: !2028, line: 48, baseType: !152, size: 8)
!11796 = !{!11797, !11798, !11799, !11800, !11801, !11802, !11803, !11804, !11805, !11806, !11807}
!11797 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11788, file: !2076, line: 528, type: !2080)
!11798 = !DILocalVariable(name: "stack", arg: 2, scope: !11788, file: !2076, line: 529, type: !11791)
!11799 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11788, file: !2076, line: 529, type: !356)
!11800 = !DILocalVariable(name: "entry", arg: 4, scope: !11788, file: !2076, line: 530, type: !3223)
!11801 = !DILocalVariable(name: "p1", arg: 5, scope: !11788, file: !2076, line: 531, type: !102)
!11802 = !DILocalVariable(name: "p2", arg: 6, scope: !11788, file: !2076, line: 531, type: !102)
!11803 = !DILocalVariable(name: "p3", arg: 7, scope: !11788, file: !2076, line: 531, type: !102)
!11804 = !DILocalVariable(name: "prio", arg: 8, scope: !11788, file: !2076, line: 532, type: !103)
!11805 = !DILocalVariable(name: "options", arg: 9, scope: !11788, file: !2076, line: 532, type: !106)
!11806 = !DILocalVariable(name: "name", arg: 10, scope: !11788, file: !2076, line: 532, type: !150)
!11807 = !DILocalVariable(name: "stack_ptr", scope: !11788, file: !2076, line: 534, type: !1099)
!11808 = !DILocation(line: 0, scope: !11788)
!11809 = !DILocation(line: 550, column: 28, scope: !11788)
!11810 = !DILocation(line: 550, column: 2, scope: !11788)
!11811 = !DILocation(line: 553, column: 34, scope: !11788)
!11812 = !DILocation(line: 553, column: 2, scope: !11788)
!11813 = !DILocation(line: 554, column: 14, scope: !11788)
!11814 = !DILocation(line: 564, column: 2, scope: !11788)
!11815 = !DILocation(line: 567, column: 14, scope: !11788)
!11816 = !DILocation(line: 567, column: 24, scope: !11788)
!11817 = !DILocation(line: 612, column: 7, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11788, file: !2076, line: 612, column: 6)
!11819 = !DILocation(line: 612, column: 6, scope: !11788)
!11820 = !DILocation(line: 627, column: 40, scope: !11788)
!11821 = !DILocation(line: 637, column: 2, scope: !11788)
!11822 = !DILocation(line: 613, column: 15, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11818, file: !2076, line: 612, column: 17)
!11824 = !DILocation(line: 613, column: 29, scope: !11823)
!11825 = !DILocation(line: 638, column: 1, scope: !11788)
!11826 = distinct !DISubprogram(name: "z_waitq_init", scope: !11827, file: !11827, line: 47, type: !11828, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11830)
!11827 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11828 = !DISubroutineType(types: !11829)
!11829 = !{null, !2111}
!11830 = !{!11831}
!11831 = !DILocalVariable(name: "w", arg: 1, scope: !11826, file: !11827, line: 47, type: !2111)
!11832 = !DILocation(line: 0, scope: !11826)
!11833 = !DILocation(line: 49, column: 21, scope: !11826)
!11834 = !DILocation(line: 49, column: 2, scope: !11826)
!11835 = !DILocation(line: 50, column: 1, scope: !11826)
!11836 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2076, file: !2076, line: 791, type: !11837, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11840)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{null, !11839, !103, !106, !32}
!11839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!11840 = !{!11841, !11842, !11843, !11844}
!11841 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11836, file: !2076, line: 791, type: !11839)
!11842 = !DILocalVariable(name: "priority", arg: 2, scope: !11836, file: !2076, line: 791, type: !103)
!11843 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11836, file: !2076, line: 792, type: !106)
!11844 = !DILocalVariable(name: "options", arg: 4, scope: !11836, file: !2076, line: 792, type: !32)
!11845 = !DILocation(line: 0, scope: !11836)
!11846 = !DILocation(line: 795, column: 15, scope: !11836)
!11847 = !DILocation(line: 795, column: 25, scope: !11836)
!11848 = !DILocation(line: 796, column: 30, scope: !11836)
!11849 = !DILocation(line: 796, column: 15, scope: !11836)
!11850 = !DILocation(line: 796, column: 28, scope: !11836)
!11851 = !DILocation(line: 797, column: 30, scope: !11836)
!11852 = !DILocation(line: 797, column: 15, scope: !11836)
!11853 = !DILocation(line: 797, column: 28, scope: !11836)
!11854 = !DILocation(line: 799, column: 22, scope: !11836)
!11855 = !DILocation(line: 799, column: 15, scope: !11836)
!11856 = !DILocation(line: 799, column: 20, scope: !11836)
!11857 = !DILocation(line: 801, column: 15, scope: !11836)
!11858 = !DILocation(line: 801, column: 28, scope: !11836)
!11859 = !DILocation(line: 814, column: 2, scope: !11836)
!11860 = !DILocation(line: 815, column: 1, scope: !11836)
!11861 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2076, file: !2076, line: 449, type: !11862, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11864)
!11862 = !DISubroutineType(types: !11863)
!11863 = !{!1099, !2080, !11791, !356}
!11864 = !{!11865, !11866, !11867, !11868, !11869, !11870, !11871, !11872}
!11865 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11861, file: !2076, line: 449, type: !2080)
!11866 = !DILocalVariable(name: "stack", arg: 2, scope: !11861, file: !2076, line: 450, type: !11791)
!11867 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11861, file: !2076, line: 450, type: !356)
!11868 = !DILocalVariable(name: "stack_obj_size", scope: !11861, file: !2076, line: 452, type: !356)
!11869 = !DILocalVariable(name: "stack_buf_size", scope: !11861, file: !2076, line: 452, type: !356)
!11870 = !DILocalVariable(name: "stack_ptr", scope: !11861, file: !2076, line: 453, type: !1099)
!11871 = !DILocalVariable(name: "stack_buf_start", scope: !11861, file: !2076, line: 453, type: !1099)
!11872 = !DILocalVariable(name: "delta", scope: !11861, file: !2076, line: 454, type: !356)
!11873 = !DILocation(line: 0, scope: !11861)
!11874 = !DILocation(line: 465, column: 20, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11861, file: !2076, line: 463, column: 2)
!11876 = !DILocation(line: 466, column: 21, scope: !11875)
!11877 = !DILocation(line: 473, column: 28, scope: !11861)
!11878 = !DILocation(line: 514, column: 33, scope: !11861)
!11879 = !DILocation(line: 514, column: 25, scope: !11861)
!11880 = !DILocation(line: 514, column: 31, scope: !11861)
!11881 = !DILocation(line: 515, column: 25, scope: !11861)
!11882 = !DILocation(line: 515, column: 30, scope: !11861)
!11883 = !DILocation(line: 516, column: 25, scope: !11861)
!11884 = !DILocation(line: 516, column: 31, scope: !11861)
!11885 = !DILocation(line: 520, column: 2, scope: !11861)
!11886 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2028, file: !2028, line: 331, type: !11887, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11889)
!11887 = !DISubroutineType(types: !11888)
!11888 = !{!1099, !11791}
!11889 = !{!11890}
!11890 = !DILocalVariable(name: "sym", arg: 1, scope: !11886, file: !2028, line: 331, type: !11791)
!11891 = !DILocation(line: 0, scope: !11886)
!11892 = !DILocation(line: 333, column: 21, scope: !11886)
!11893 = !DILocation(line: 333, column: 2, scope: !11886)
!11894 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11895, file: !11895, line: 40, type: !11896, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11898)
!11895 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11896 = !DISubroutineType(types: !11897)
!11897 = !{null, !11839}
!11898 = !{!11899}
!11899 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11894, file: !11895, line: 40, type: !11839)
!11900 = !DILocation(line: 0, scope: !11894)
!11901 = !DILocation(line: 42, column: 31, scope: !11894)
!11902 = !DILocation(line: 42, column: 2, scope: !11894)
!11903 = !DILocation(line: 43, column: 1, scope: !11894)
!11904 = distinct !DISubprogram(name: "z_init_timeout", scope: !11895, file: !11895, line: 25, type: !2137, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11905)
!11905 = !{!11906}
!11906 = !DILocalVariable(name: "to", arg: 1, scope: !11904, file: !11895, line: 25, type: !2139)
!11907 = !DILocation(line: 0, scope: !11904)
!11908 = !DILocation(line: 27, column: 22, scope: !11904)
!11909 = !DILocation(line: 27, column: 2, scope: !11904)
!11910 = !DILocation(line: 28, column: 1, scope: !11904)
!11911 = distinct !DISubprogram(name: "sys_dnode_init", scope: !377, file: !377, line: 211, type: !11912, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11914)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{null, !2183}
!11914 = !{!11915}
!11915 = !DILocalVariable(name: "node", arg: 1, scope: !11911, file: !377, line: 211, type: !2183)
!11916 = !DILocation(line: 0, scope: !11911)
!11917 = !DILocation(line: 213, column: 8, scope: !11911)
!11918 = !DILocation(line: 213, column: 13, scope: !11911)
!11919 = !DILocation(line: 214, column: 8, scope: !11911)
!11920 = !DILocation(line: 214, column: 13, scope: !11911)
!11921 = !DILocation(line: 215, column: 1, scope: !11911)
!11922 = distinct !DISubprogram(name: "sys_dlist_init", scope: !377, file: !377, line: 197, type: !11923, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11926)
!11923 = !DISubroutineType(types: !11924)
!11924 = !{null, !11925}
!11925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!11926 = !{!11927}
!11927 = !DILocalVariable(name: "list", arg: 1, scope: !11922, file: !377, line: 197, type: !11925)
!11928 = !DILocation(line: 0, scope: !11922)
!11929 = !DILocation(line: 199, column: 8, scope: !11922)
!11930 = !DILocation(line: 199, column: 13, scope: !11922)
!11931 = !DILocation(line: 200, column: 8, scope: !11922)
!11932 = !DILocation(line: 200, column: 13, scope: !11922)
!11933 = !DILocation(line: 201, column: 1, scope: !11922)
!11934 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2076, file: !2076, line: 641, type: !11935, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11941)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!2079, !2080, !11791, !356, !3223, !102, !102, !102, !103, !106, !11937}
!11937 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1557, line: 67, baseType: !11938)
!11938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1557, line: 65, size: 64, elements: !11939)
!11939 = !{!11940}
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11938, file: !1557, line: 66, baseType: !1556, size: 64)
!11941 = !{!11942, !11943, !11944, !11945, !11946, !11947, !11948, !11949, !11950, !11951}
!11942 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11934, file: !2076, line: 641, type: !2080)
!11943 = !DILocalVariable(name: "stack", arg: 2, scope: !11934, file: !2076, line: 642, type: !11791)
!11944 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11934, file: !2076, line: 643, type: !356)
!11945 = !DILocalVariable(name: "entry", arg: 4, scope: !11934, file: !2076, line: 643, type: !3223)
!11946 = !DILocalVariable(name: "p1", arg: 5, scope: !11934, file: !2076, line: 644, type: !102)
!11947 = !DILocalVariable(name: "p2", arg: 6, scope: !11934, file: !2076, line: 644, type: !102)
!11948 = !DILocalVariable(name: "p3", arg: 7, scope: !11934, file: !2076, line: 644, type: !102)
!11949 = !DILocalVariable(name: "prio", arg: 8, scope: !11934, file: !2076, line: 645, type: !103)
!11950 = !DILocalVariable(name: "options", arg: 9, scope: !11934, file: !2076, line: 645, type: !106)
!11951 = !DILocalVariable(name: "delay", arg: 10, scope: !11934, file: !2076, line: 645, type: !11937)
!11952 = !DILocation(line: 0, scope: !11934)
!11953 = !DILocation(line: 649, column: 2, scope: !11934)
!11954 = !DILocation(line: 652, column: 7, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11934, file: !2076, line: 652, column: 6)
!11956 = !DILocation(line: 652, column: 6, scope: !11934)
!11957 = !DILocation(line: 653, column: 3, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11955, file: !2076, line: 652, column: 39)
!11959 = !DILocation(line: 654, column: 2, scope: !11958)
!11960 = !DILocation(line: 656, column: 2, scope: !11934)
!11961 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2076, file: !2076, line: 401, type: !11962, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11964)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{null, !2080, !11937}
!11964 = !{!11965, !11966}
!11965 = !DILocalVariable(name: "thread", arg: 1, scope: !11961, file: !2076, line: 401, type: !2080)
!11966 = !DILocalVariable(name: "delay", arg: 2, scope: !11961, file: !2076, line: 401, type: !11937)
!11967 = !DILocation(line: 0, scope: !11961)
!11968 = !DILocation(line: 404, column: 6, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11961, file: !2076, line: 404, column: 6)
!11970 = !DILocation(line: 404, column: 6, scope: !11961)
!11971 = !DILocation(line: 405, column: 3, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11969, file: !2076, line: 404, column: 38)
!11973 = !DILocation(line: 406, column: 2, scope: !11972)
!11974 = !DILocation(line: 407, column: 3, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !2076, line: 406, column: 9)
!11976 = !DILocation(line: 413, column: 1, scope: !11961)
!11977 = distinct !DISubprogram(name: "k_thread_start", scope: !3345, file: !3345, line: 205, type: !11978, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11980)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{null, !2079}
!11980 = !{!11981}
!11981 = !DILocalVariable(name: "thread", arg: 1, scope: !11977, file: !3345, line: 205, type: !2079)
!11982 = !DILocation(line: 0, scope: !11977)
!11983 = !DILocation(line: 214, column: 2, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11977, file: !3345, line: 214, column: 2)
!11985 = !{i64 2155086666}
!11986 = !DILocation(line: 215, column: 2, scope: !11977)
!11987 = !DILocation(line: 216, column: 1, scope: !11977)
!11988 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11895, file: !11895, line: 47, type: !11962, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11989)
!11989 = !{!11990, !11991}
!11990 = !DILocalVariable(name: "thread", arg: 1, scope: !11988, file: !11895, line: 47, type: !2080)
!11991 = !DILocalVariable(name: "ticks", arg: 2, scope: !11988, file: !11895, line: 47, type: !11937)
!11992 = !DILocation(line: 0, scope: !11988)
!11993 = !DILocation(line: 49, column: 30, scope: !11988)
!11994 = !DILocation(line: 49, column: 2, scope: !11988)
!11995 = !DILocation(line: 50, column: 1, scope: !11988)
!11996 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2076, file: !2076, line: 748, type: !2917, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !11997)
!11997 = !{!11998, !12016}
!11998 = !DILocalVariable(name: "thread_data", scope: !11999, file: !2076, line: 750, type: !12000)
!11999 = distinct !DILexicalBlock(scope: !11996, file: !2076, line: 750, column: 2)
!12000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12001, size: 32)
!12001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !463, line: 620, size: 384, elements: !12002)
!12002 = !{!12003, !12004, !12005, !12006, !12007, !12008, !12009, !12010, !12011, !12012, !12013, !12015}
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12001, file: !463, line: 621, baseType: !2080, size: 32)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12001, file: !463, line: 622, baseType: !11791, size: 32, offset: 32)
!12005 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12001, file: !463, line: 623, baseType: !32, size: 32, offset: 64)
!12006 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12001, file: !463, line: 624, baseType: !3223, size: 32, offset: 96)
!12007 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12001, file: !463, line: 625, baseType: !102, size: 32, offset: 128)
!12008 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12001, file: !463, line: 626, baseType: !102, size: 32, offset: 160)
!12009 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12001, file: !463, line: 627, baseType: !102, size: 32, offset: 192)
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12001, file: !463, line: 628, baseType: !103, size: 32, offset: 224)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12001, file: !463, line: 629, baseType: !106, size: 32, offset: 256)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12001, file: !463, line: 630, baseType: !748, size: 32, offset: 288)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12001, file: !463, line: 631, baseType: !12014, size: 32, offset: 320)
!12014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12001, file: !463, line: 632, baseType: !150, size: 32, offset: 352)
!12016 = !DILocalVariable(name: "thread_data", scope: !12017, file: !2076, line: 781, type: !12000)
!12017 = distinct !DILexicalBlock(scope: !11996, file: !2076, line: 781, column: 2)
!12018 = !DILocation(line: 0, scope: !11999)
!12019 = !DILocation(line: 750, column: 2, scope: !11999)
!12020 = !DILocation(line: 780, column: 2, scope: !11996)
!12021 = !DILocation(line: 0, scope: !12017)
!12022 = !DILocation(line: 781, column: 2, scope: !12017)
!12023 = !DILocation(line: 752, column: 17, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !2076, line: 750, column: 38)
!12025 = distinct !DILexicalBlock(scope: !11999, file: !2076, line: 750, column: 2)
!12026 = !DILocation(line: 753, column: 17, scope: !12024)
!12027 = !DILocation(line: 754, column: 17, scope: !12024)
!12028 = !DILocation(line: 755, column: 17, scope: !12024)
!12029 = !DILocation(line: 756, column: 17, scope: !12024)
!12030 = !DILocation(line: 757, column: 17, scope: !12024)
!12031 = !DILocation(line: 758, column: 17, scope: !12024)
!12032 = !DILocation(line: 759, column: 17, scope: !12024)
!12033 = !DILocation(line: 760, column: 17, scope: !12024)
!12034 = !DILocation(line: 751, column: 3, scope: !12024)
!12035 = !DILocation(line: 763, column: 16, scope: !12024)
!12036 = !DILocation(line: 763, column: 29, scope: !12024)
!12037 = !DILocation(line: 763, column: 39, scope: !12024)
!12038 = !DILocation(line: 750, column: 2, scope: !12025)
!12039 = !DILocation(line: 750, column: 2, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12025, file: !2076, line: 750, column: 2)
!12041 = distinct !{!12041, !12019, !12042}
!12042 = !DILocation(line: 764, column: 2, scope: !11999)
!12043 = !DILocation(line: 787, column: 2, scope: !11996)
!12044 = !DILocation(line: 788, column: 1, scope: !11996)
!12045 = !DILocation(line: 782, column: 20, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12047, file: !2076, line: 782, column: 7)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !2076, line: 781, column: 38)
!12048 = distinct !DILexicalBlock(scope: !12017, file: !2076, line: 781, column: 2)
!12049 = !DILocation(line: 782, column: 31, scope: !12046)
!12050 = !DILocation(line: 782, column: 7, scope: !12047)
!12051 = !DILocation(line: 783, column: 37, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12046, file: !2076, line: 782, column: 51)
!12053 = !DILocation(line: 784, column: 10, scope: !12052)
!12054 = !DILocation(line: 783, column: 4, scope: !12052)
!12055 = !DILocation(line: 785, column: 3, scope: !12052)
!12056 = !DILocation(line: 781, column: 2, scope: !12048)
!12057 = !DILocation(line: 781, column: 2, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12048, file: !2076, line: 781, column: 2)
!12059 = distinct !{!12059, !12022, !12060}
!12060 = !DILocation(line: 786, column: 2, scope: !12017)
!12061 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12062, file: !12062, line: 403, type: !12063, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12065)
!12062 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12063 = !DISubroutineType(types: !12064)
!12064 = !{!1408, !1408}
!12065 = !{!12066}
!12066 = !DILocalVariable(name: "t", arg: 1, scope: !12061, file: !12062, line: 403, type: !1408)
!12067 = !DILocation(line: 0, scope: !12061)
!12068 = !DILocalVariable(name: "t", arg: 1, scope: !12069, file: !12062, line: 102, type: !1408)
!12069 = distinct !DISubprogram(name: "z_tmcvt", scope: !12062, file: !12062, line: 102, type: !12070, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12072)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!1408, !1408, !106, !106, !163, !163, !163, !163}
!12072 = !{!12068, !12073, !12074, !12075, !12076, !12077, !12078, !12079, !12080, !12081, !12082}
!12073 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12069, file: !12062, line: 102, type: !106)
!12074 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12069, file: !12062, line: 103, type: !106)
!12075 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12069, file: !12062, line: 103, type: !163)
!12076 = !DILocalVariable(name: "result32", arg: 5, scope: !12069, file: !12062, line: 104, type: !163)
!12077 = !DILocalVariable(name: "round_up", arg: 6, scope: !12069, file: !12062, line: 104, type: !163)
!12078 = !DILocalVariable(name: "round_off", arg: 7, scope: !12069, file: !12062, line: 105, type: !163)
!12079 = !DILocalVariable(name: "mul_ratio", scope: !12069, file: !12062, line: 107, type: !163)
!12080 = !DILocalVariable(name: "div_ratio", scope: !12069, file: !12062, line: 109, type: !163)
!12081 = !DILocalVariable(name: "off", scope: !12069, file: !12062, line: 116, type: !1408)
!12082 = !DILocalVariable(name: "rdivisor", scope: !12083, file: !12062, line: 119, type: !106)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !12062, line: 118, column: 18)
!12084 = distinct !DILexicalBlock(scope: !12069, file: !12062, line: 118, column: 6)
!12085 = !DILocation(line: 0, scope: !12069, inlinedAt: !12086)
!12086 = distinct !DILocation(line: 406, column: 9, scope: !12061)
!12087 = !DILocation(line: 145, column: 13, scope: !12088, inlinedAt: !12086)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !12062, line: 144, column: 10)
!12089 = distinct !DILexicalBlock(scope: !12090, file: !12062, line: 142, column: 7)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !12062, line: 141, column: 24)
!12091 = distinct !DILexicalBlock(scope: !12092, file: !12062, line: 141, column: 13)
!12092 = distinct !DILexicalBlock(scope: !12069, file: !12062, line: 134, column: 6)
!12093 = !DILocation(line: 406, column: 2, scope: !12061)
!12094 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2076, file: !2076, line: 817, type: !3221, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12095)
!12095 = !{!12096, !12097, !12098, !12099}
!12096 = !DILocalVariable(name: "entry", arg: 1, scope: !12094, file: !2076, line: 817, type: !3223)
!12097 = !DILocalVariable(name: "p1", arg: 2, scope: !12094, file: !2076, line: 818, type: !102)
!12098 = !DILocalVariable(name: "p2", arg: 3, scope: !12094, file: !2076, line: 818, type: !102)
!12099 = !DILocalVariable(name: "p3", arg: 4, scope: !12094, file: !2076, line: 818, type: !102)
!12100 = !DILocation(line: 0, scope: !12094)
!12101 = !DILocation(line: 822, column: 2, scope: !12094)
!12102 = !DILocation(line: 822, column: 17, scope: !12094)
!12103 = !DILocation(line: 822, column: 30, scope: !12094)
!12104 = !DILocation(line: 823, column: 2, scope: !12094)
!12105 = !DILocation(line: 845, column: 2, scope: !12094)
!12106 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2076, file: !2076, line: 888, type: !12107, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12109)
!12107 = !DISubroutineType(types: !12108)
!12108 = !{!103, !2080}
!12109 = !{!12110}
!12110 = !DILocalVariable(name: "thread", arg: 1, scope: !12106, file: !2076, line: 888, type: !2080)
!12111 = !DILocation(line: 0, scope: !12106)
!12112 = !DILocation(line: 893, column: 2, scope: !12106)
!12113 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2076, file: !2076, line: 897, type: !12114, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12116)
!12114 = !DISubroutineType(types: !12115)
!12115 = !{!103, !2080, !32}
!12116 = !{!12117, !12118}
!12117 = !DILocalVariable(name: "thread", arg: 1, scope: !12113, file: !2076, line: 897, type: !2080)
!12118 = !DILocalVariable(name: "options", arg: 2, scope: !12113, file: !2076, line: 897, type: !32)
!12119 = !DILocation(line: 0, scope: !12113)
!12120 = !DILocation(line: 902, column: 2, scope: !12113)
!12121 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2076, file: !2076, line: 1072, type: !12122, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12127)
!12122 = !DISubroutineType(types: !12123)
!12123 = !{!103, !2079, !12124}
!12124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12125, size: 32)
!12125 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !367, line: 234, baseType: !12126)
!12126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !367, line: 192, elements: !478)
!12127 = !{!12128, !12129}
!12128 = !DILocalVariable(name: "thread", arg: 1, scope: !12121, file: !2076, line: 1072, type: !2079)
!12129 = !DILocalVariable(name: "stats", arg: 2, scope: !12121, file: !2076, line: 1073, type: !12124)
!12130 = !DILocation(line: 0, scope: !12121)
!12131 = !DILocation(line: 1075, column: 14, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12121, file: !2076, line: 1075, column: 6)
!12133 = !DILocation(line: 1075, column: 23, scope: !12132)
!12134 = !DILocation(line: 1086, column: 1, scope: !12121)
!12135 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2076, file: !2076, line: 1088, type: !12136, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2180, retainedNodes: !12138)
!12136 = !DISubroutineType(types: !12137)
!12137 = !{!103, !12124}
!12138 = !{!12139}
!12139 = !DILocalVariable(name: "stats", arg: 1, scope: !12135, file: !2076, line: 1088, type: !12124)
!12140 = !DILocation(line: 0, scope: !12135)
!12141 = !DILocation(line: 1094, column: 12, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12135, file: !2076, line: 1094, column: 6)
!12143 = !DILocation(line: 1120, column: 1, scope: !12135)
!12144 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12145, file: !12145, line: 20, type: !2917, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !478)
!12145 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12146 = !DILocation(line: 30, column: 2, scope: !12144)
!12147 = !DILocation(line: 31, column: 1, scope: !12144)
!12148 = distinct !DISubprogram(name: "idle", scope: !12145, file: !12145, line: 33, type: !3226, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !12149)
!12149 = !{!12150, !12151, !12152}
!12150 = !DILocalVariable(name: "unused1", arg: 1, scope: !12148, file: !12145, line: 33, type: !102)
!12151 = !DILocalVariable(name: "unused2", arg: 2, scope: !12148, file: !12145, line: 33, type: !102)
!12152 = !DILocalVariable(name: "unused3", arg: 3, scope: !12148, file: !12145, line: 33, type: !102)
!12153 = !DILocation(line: 0, scope: !12148)
!12154 = !DILocation(line: 41, column: 2, scope: !12148)
!12155 = !DILocation(line: 55, column: 2, scope: !12156, inlinedAt: !12160)
!12156 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !12157)
!12157 = !{!12158, !12159}
!12158 = !DILocalVariable(name: "key", scope: !12156, file: !4724, line: 44, type: !32)
!12159 = !DILocalVariable(name: "tmp", scope: !12156, file: !4724, line: 53, type: !32)
!12160 = distinct !DILocation(line: 62, column: 10, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12148, file: !12145, line: 41, column: 15)
!12162 = !{i64 2278213}
!12163 = !DILocation(line: 0, scope: !12156, inlinedAt: !12160)
!12164 = !DILocation(line: 86, column: 3, scope: !12161)
!12165 = distinct !{!12165, !12154, !12166}
!12166 = !DILocation(line: 105, column: 2, scope: !12148)
!12167 = distinct !DISubprogram(name: "k_cpu_idle", scope: !463, file: !463, line: 5627, type: !2917, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !478)
!12168 = !DILocation(line: 5629, column: 2, scope: !12167)
!12169 = !DILocation(line: 5630, column: 1, scope: !12167)
!12170 = !DISubprogram(name: "arch_cpu_idle", scope: !3224, file: !3224, line: 167, type: !2917, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!12171 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2308, file: !2308, line: 93, type: !12172, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12174)
!12172 = !DISubroutineType(types: !12173)
!12173 = !{!748, !2203, !2203}
!12174 = !{!12175, !12176, !12177, !12178}
!12175 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12171, file: !2308, line: 93, type: !2203)
!12176 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12171, file: !2308, line: 94, type: !2203)
!12177 = !DILocalVariable(name: "b1", scope: !12171, file: !2308, line: 97, type: !748)
!12178 = !DILocalVariable(name: "b2", scope: !12171, file: !2308, line: 98, type: !748)
!12179 = !DILocation(line: 0, scope: !12171)
!12180 = !DILocation(line: 97, column: 30, scope: !12171)
!12181 = !DILocation(line: 98, column: 30, scope: !12171)
!12182 = !DILocation(line: 100, column: 9, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12171, file: !2308, line: 100, column: 6)
!12184 = !DILocation(line: 100, column: 6, scope: !12171)
!12185 = !DILocation(line: 125, column: 1, scope: !12171)
!12186 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2308, file: !2308, line: 428, type: !12187, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12189)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{null, !2203}
!12189 = !{!12190}
!12190 = !DILocalVariable(name: "curr", arg: 1, scope: !12186, file: !2308, line: 428, type: !2203)
!12191 = !DILocation(line: 0, scope: !12186)
!12192 = !DILocation(line: 434, column: 6, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12186, file: !2308, line: 434, column: 6)
!12194 = !DILocation(line: 434, column: 23, scope: !12193)
!12195 = !DILocation(line: 434, column: 6, scope: !12186)
!12196 = !DILocation(line: 435, column: 50, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12193, file: !2308, line: 434, column: 29)
!12198 = !DILocation(line: 435, column: 48, scope: !12197)
!12199 = !DILocation(line: 435, column: 29, scope: !12197)
!12200 = !DILocation(line: 436, column: 24, scope: !12197)
!12201 = !DILocation(line: 436, column: 3, scope: !12197)
!12202 = !DILocation(line: 437, column: 2, scope: !12197)
!12203 = !DILocation(line: 438, column: 1, scope: !12186)
!12204 = distinct !DISubprogram(name: "slice_time", scope: !2308, file: !2308, line: 407, type: !12205, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12207)
!12205 = !DISubroutineType(types: !12206)
!12206 = !{!103, !2203}
!12207 = !{!12208, !12209}
!12208 = !DILocalVariable(name: "curr", arg: 1, scope: !12204, file: !2308, line: 407, type: !2203)
!12209 = !DILocalVariable(name: "ret", scope: !12204, file: !2308, line: 409, type: !103)
!12210 = !DILocation(line: 0, scope: !12204)
!12211 = !DILocation(line: 409, column: 12, scope: !12204)
!12212 = !DILocation(line: 416, column: 2, scope: !12204)
!12213 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2308, file: !2308, line: 440, type: !12214, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12216)
!12214 = !DISubroutineType(types: !12215)
!12215 = !{null, !748, !103}
!12216 = !{!12217, !12218, !12219, !12225}
!12217 = !DILocalVariable(name: "slice", arg: 1, scope: !12213, file: !2308, line: 440, type: !748)
!12218 = !DILocalVariable(name: "prio", arg: 2, scope: !12213, file: !2308, line: 440, type: !103)
!12219 = !DILocalVariable(name: "__i", scope: !12220, file: !2308, line: 442, type: !12221)
!12220 = distinct !DILexicalBlock(scope: !12213, file: !2308, line: 442, column: 2)
!12221 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !477, line: 106, baseType: !12222)
!12222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !477, line: 32, size: 32, elements: !12223)
!12223 = !{!12224}
!12224 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12222, file: !477, line: 33, baseType: !103, size: 32)
!12225 = !DILocalVariable(name: "__key", scope: !12220, file: !2308, line: 442, type: !12221)
!12226 = !DILocation(line: 0, scope: !12213)
!12227 = !DILocation(line: 0, scope: !12220)
!12228 = !DILocalVariable(name: "l", arg: 1, scope: !12229, file: !477, line: 136, type: !12232)
!12229 = distinct !DISubprogram(name: "k_spin_lock", scope: !477, file: !477, line: 136, type: !12230, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12233)
!12230 = !DISubroutineType(types: !12231)
!12231 = !{!12221, !12232}
!12232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!12233 = !{!12228, !12234}
!12234 = !DILocalVariable(name: "k", scope: !12229, file: !477, line: 139, type: !12221)
!12235 = !DILocation(line: 0, scope: !12229, inlinedAt: !12236)
!12236 = distinct !DILocation(line: 442, column: 2, scope: !12220)
!12237 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12242)
!12238 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12239)
!12239 = !{!12240, !12241}
!12240 = !DILocalVariable(name: "key", scope: !12238, file: !4724, line: 44, type: !32)
!12241 = !DILocalVariable(name: "tmp", scope: !12238, file: !4724, line: 53, type: !32)
!12242 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12236)
!12243 = !{i64 2322184}
!12244 = !DILocation(line: 0, scope: !12238, inlinedAt: !12242)
!12245 = !DILocation(line: 443, column: 29, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !2308, line: 442, column: 26)
!12247 = distinct !DILexicalBlock(scope: !12220, file: !2308, line: 442, column: 2)
!12248 = !DILocation(line: 444, column: 17, scope: !12246)
!12249 = !DILocation(line: 445, column: 51, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12246, file: !2308, line: 445, column: 7)
!12251 = !DILocation(line: 445, column: 7, scope: !12246)
!12252 = !DILocation(line: 0, scope: !12246)
!12253 = !DILocation(line: 451, column: 18, scope: !12246)
!12254 = !DILocation(line: 452, column: 3, scope: !12246)
!12255 = !DILocalVariable(name: "key", arg: 2, scope: !12256, file: !477, line: 190, type: !12221)
!12256 = distinct !DISubprogram(name: "k_spin_unlock", scope: !477, file: !477, line: 189, type: !12257, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12259)
!12257 = !DISubroutineType(types: !12258)
!12258 = !{null, !12232, !12221}
!12259 = !{!12260, !12255}
!12260 = !DILocalVariable(name: "l", arg: 1, scope: !12256, file: !477, line: 189, type: !12232)
!12261 = !DILocation(line: 0, scope: !12256, inlinedAt: !12262)
!12262 = distinct !DILocation(line: 442, column: 2, scope: !12247)
!12263 = !DILocalVariable(name: "key", arg: 1, scope: !12264, file: !4724, line: 84, type: !32)
!12264 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12265)
!12265 = !{!12263}
!12266 = !DILocation(line: 0, scope: !12264, inlinedAt: !12267)
!12267 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12262)
!12268 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12267)
!12269 = !{i64 2323001}
!12270 = !DILocation(line: 454, column: 1, scope: !12213)
!12271 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12062, file: !12062, line: 389, type: !5979, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12272)
!12272 = !{!12273}
!12273 = !DILocalVariable(name: "t", arg: 1, scope: !12271, file: !12062, line: 389, type: !106)
!12274 = !DILocation(line: 0, scope: !12271)
!12275 = !DILocalVariable(name: "t", arg: 1, scope: !12276, file: !12062, line: 102, type: !1408)
!12276 = distinct !DISubprogram(name: "z_tmcvt", scope: !12062, file: !12062, line: 102, type: !12070, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12277)
!12277 = !{!12275, !12278, !12279, !12280, !12281, !12282, !12283, !12284, !12285, !12286, !12287}
!12278 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12276, file: !12062, line: 102, type: !106)
!12279 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12276, file: !12062, line: 103, type: !106)
!12280 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12276, file: !12062, line: 103, type: !163)
!12281 = !DILocalVariable(name: "result32", arg: 5, scope: !12276, file: !12062, line: 104, type: !163)
!12282 = !DILocalVariable(name: "round_up", arg: 6, scope: !12276, file: !12062, line: 104, type: !163)
!12283 = !DILocalVariable(name: "round_off", arg: 7, scope: !12276, file: !12062, line: 105, type: !163)
!12284 = !DILocalVariable(name: "mul_ratio", scope: !12276, file: !12062, line: 107, type: !163)
!12285 = !DILocalVariable(name: "div_ratio", scope: !12276, file: !12062, line: 109, type: !163)
!12286 = !DILocalVariable(name: "off", scope: !12276, file: !12062, line: 116, type: !1408)
!12287 = !DILocalVariable(name: "rdivisor", scope: !12288, file: !12062, line: 119, type: !106)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !12062, line: 118, column: 18)
!12289 = distinct !DILexicalBlock(scope: !12276, file: !12062, line: 118, column: 6)
!12290 = !DILocation(line: 0, scope: !12276, inlinedAt: !12291)
!12291 = distinct !DILocation(line: 392, column: 9, scope: !12271)
!12292 = !DILocation(line: 143, column: 25, scope: !12293, inlinedAt: !12291)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !12062, line: 142, column: 17)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !12062, line: 142, column: 7)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !12062, line: 141, column: 24)
!12296 = distinct !DILexicalBlock(scope: !12297, file: !12062, line: 141, column: 13)
!12297 = distinct !DILexicalBlock(scope: !12276, file: !12062, line: 134, column: 6)
!12298 = !DILocation(line: 392, column: 2, scope: !12271)
!12299 = distinct !DISubprogram(name: "z_time_slice", scope: !2308, file: !2308, line: 502, type: !6616, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12300)
!12300 = !{!12301, !12302}
!12301 = !DILocalVariable(name: "ticks", arg: 1, scope: !12299, file: !2308, line: 502, type: !103)
!12302 = !DILocalVariable(name: "key", scope: !12299, file: !2308, line: 511, type: !12221)
!12303 = !DILocation(line: 0, scope: !12299)
!12304 = !DILocation(line: 0, scope: !12229, inlinedAt: !12305)
!12305 = distinct !DILocation(line: 511, column: 25, scope: !12299)
!12306 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12307)
!12307 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12305)
!12308 = !DILocation(line: 0, scope: !12238, inlinedAt: !12307)
!12309 = !DILocation(line: 514, column: 6, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12299, file: !2308, line: 514, column: 6)
!12311 = !DILocation(line: 514, column: 25, scope: !12310)
!12312 = !DILocation(line: 514, column: 22, scope: !12310)
!12313 = !DILocation(line: 514, column: 6, scope: !12299)
!12314 = !DILocation(line: 515, column: 3, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12310, file: !2308, line: 514, column: 35)
!12316 = !DILocation(line: 0, scope: !12256, inlinedAt: !12317)
!12317 = distinct !DILocation(line: 516, column: 3, scope: !12315)
!12318 = !DILocation(line: 0, scope: !12264, inlinedAt: !12319)
!12319 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12317)
!12320 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12319)
!12321 = !DILocation(line: 517, column: 3, scope: !12315)
!12322 = !DILocation(line: 519, column: 18, scope: !12299)
!12323 = !DILocation(line: 522, column: 6, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12299, file: !2308, line: 522, column: 6)
!12325 = !DILocation(line: 522, column: 27, scope: !12324)
!12326 = !DILocation(line: 522, column: 30, scope: !12324)
!12327 = !DILocation(line: 522, column: 6, scope: !12299)
!12328 = !DILocation(line: 523, column: 30, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !2308, line: 523, column: 7)
!12330 = distinct !DILexicalBlock(scope: !12324, file: !2308, line: 522, column: 51)
!12331 = !DILocation(line: 523, column: 13, scope: !12329)
!12332 = !DILocation(line: 523, column: 7, scope: !12330)
!12333 = !DILocation(line: 530, column: 10, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12329, file: !2308, line: 523, column: 43)
!12335 = !DILocation(line: 531, column: 3, scope: !12334)
!12336 = !DILocation(line: 532, column: 30, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12329, file: !2308, line: 531, column: 10)
!12338 = !DILocation(line: 535, column: 29, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12324, file: !2308, line: 534, column: 9)
!12340 = !DILocation(line: 0, scope: !12256, inlinedAt: !12341)
!12341 = distinct !DILocation(line: 537, column: 2, scope: !12299)
!12342 = !DILocation(line: 0, scope: !12264, inlinedAt: !12343)
!12343 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12341)
!12344 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12343)
!12345 = !DILocation(line: 538, column: 1, scope: !12299)
!12346 = distinct !DISubprogram(name: "sliceable", scope: !2308, file: !2308, line: 468, type: !12347, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12349)
!12347 = !DISubroutineType(types: !12348)
!12348 = !{!163, !2203}
!12349 = !{!12350, !12351}
!12350 = !DILocalVariable(name: "thread", arg: 1, scope: !12346, file: !2308, line: 468, type: !2203)
!12351 = !DILocalVariable(name: "ret", scope: !12346, file: !2308, line: 470, type: !163)
!12352 = !DILocation(line: 0, scope: !12346)
!12353 = !DILocation(line: 470, column: 13, scope: !12346)
!12354 = !DILocation(line: 471, column: 3, scope: !12346)
!12355 = !DILocation(line: 471, column: 7, scope: !12346)
!12356 = !DILocation(line: 472, column: 3, scope: !12346)
!12357 = !DILocation(line: 472, column: 37, scope: !12346)
!12358 = !DILocation(line: 472, column: 24, scope: !12346)
!12359 = !DILocation(line: 472, column: 43, scope: !12346)
!12360 = !DILocation(line: 472, column: 7, scope: !12346)
!12361 = !DILocation(line: 473, column: 3, scope: !12346)
!12362 = !DILocation(line: 473, column: 7, scope: !12346)
!12363 = !DILocation(line: 473, column: 6, scope: !12346)
!12364 = !DILocation(line: 479, column: 2, scope: !12346)
!12365 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2308, file: !2308, line: 482, type: !12366, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12368)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!12221, !12221}
!12368 = !{!12369, !12370}
!12369 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12365, file: !2308, line: 482, type: !12221)
!12370 = !DILocalVariable(name: "curr", scope: !12365, file: !2308, line: 484, type: !2203)
!12371 = !DILocation(line: 0, scope: !12365)
!12372 = !DILocation(line: 484, column: 26, scope: !12365)
!12373 = !DILocation(line: 493, column: 7, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12365, file: !2308, line: 493, column: 6)
!12375 = !DILocation(line: 493, column: 6, scope: !12365)
!12376 = !DILocation(line: 494, column: 3, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12374, file: !2308, line: 493, column: 49)
!12378 = !DILocation(line: 495, column: 2, scope: !12377)
!12379 = !DILocation(line: 496, column: 2, scope: !12365)
!12380 = !DILocation(line: 499, column: 1, scope: !12365)
!12381 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11501, file: !11501, line: 106, type: !12347, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12382)
!12382 = !{!12383, !12384}
!12383 = !DILocalVariable(name: "thread", arg: 1, scope: !12381, file: !11501, line: 106, type: !2203)
!12384 = !DILocalVariable(name: "state", scope: !12381, file: !11501, line: 108, type: !160)
!12385 = !DILocation(line: 0, scope: !12381)
!12386 = !DILocation(line: 108, column: 31, scope: !12381)
!12387 = !DILocation(line: 110, column: 16, scope: !12381)
!12388 = !DILocation(line: 111, column: 41, scope: !12381)
!12389 = !DILocation(line: 110, column: 2, scope: !12381)
!12390 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2308, file: !2308, line: 393, type: !12187, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12391)
!12391 = !{!12392}
!12392 = !DILocalVariable(name: "thread", arg: 1, scope: !12390, file: !2308, line: 393, type: !2203)
!12393 = !DILocation(line: 0, scope: !12390)
!12394 = !DILocation(line: 395, column: 6, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12390, file: !2308, line: 395, column: 6)
!12396 = !DILocation(line: 395, column: 6, scope: !12390)
!12397 = !DILocalVariable(name: "thread", arg: 1, scope: !12398, file: !2308, line: 264, type: !2203)
!12398 = distinct !DISubprogram(name: "dequeue_thread", scope: !2308, file: !2308, line: 264, type: !12187, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12399)
!12399 = !{!12397}
!12400 = !DILocation(line: 0, scope: !12398, inlinedAt: !12401)
!12401 = distinct !DILocation(line: 396, column: 3, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12395, file: !2308, line: 395, column: 34)
!12403 = !DILocation(line: 266, column: 15, scope: !12398, inlinedAt: !12401)
!12404 = !DILocation(line: 266, column: 28, scope: !12398, inlinedAt: !12401)
!12405 = !DILocalVariable(name: "thread", arg: 1, scope: !12406, file: !2308, line: 232, type: !2203)
!12406 = distinct !DISubprogram(name: "runq_remove", scope: !2308, file: !2308, line: 232, type: !12187, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12407)
!12407 = !{!12405}
!12408 = !DILocation(line: 0, scope: !12406, inlinedAt: !12409)
!12409 = distinct !DILocation(line: 268, column: 3, scope: !12410, inlinedAt: !12401)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !2308, line: 267, column: 35)
!12411 = distinct !DILexicalBlock(scope: !12398, file: !2308, line: 267, column: 6)
!12412 = !DILocation(line: 234, column: 2, scope: !12406, inlinedAt: !12409)
!12413 = !DILocation(line: 397, column: 2, scope: !12402)
!12414 = !DILocalVariable(name: "thread", arg: 1, scope: !12415, file: !2308, line: 250, type: !2203)
!12415 = distinct !DISubprogram(name: "queue_thread", scope: !2308, file: !2308, line: 250, type: !12187, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12416)
!12416 = !{!12414}
!12417 = !DILocation(line: 0, scope: !12415, inlinedAt: !12418)
!12418 = distinct !DILocation(line: 398, column: 2, scope: !12390)
!12419 = !DILocation(line: 252, column: 15, scope: !12415, inlinedAt: !12418)
!12420 = !DILocation(line: 252, column: 28, scope: !12415, inlinedAt: !12418)
!12421 = !DILocalVariable(name: "thread", arg: 1, scope: !12422, file: !2308, line: 227, type: !2203)
!12422 = distinct !DISubprogram(name: "runq_add", scope: !2308, file: !2308, line: 227, type: !12187, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12423)
!12423 = !{!12421}
!12424 = !DILocation(line: 0, scope: !12422, inlinedAt: !12425)
!12425 = distinct !DILocation(line: 254, column: 3, scope: !12426, inlinedAt: !12418)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !2308, line: 253, column: 35)
!12427 = distinct !DILexicalBlock(scope: !12415, file: !2308, line: 253, column: 6)
!12428 = !DILocalVariable(name: "pq", arg: 1, scope: !12429, file: !2308, line: 181, type: !12432)
!12429 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2308, file: !2308, line: 181, type: !12430, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12433)
!12430 = !DISubroutineType(types: !12431)
!12431 = !{null, !12432, !2203}
!12432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!12433 = !{!12428, !12434, !12435}
!12434 = !DILocalVariable(name: "thread", arg: 2, scope: !12429, file: !2308, line: 182, type: !2203)
!12435 = !DILocalVariable(name: "t", scope: !12429, file: !2308, line: 184, type: !2203)
!12436 = !DILocation(line: 0, scope: !12429, inlinedAt: !12437)
!12437 = distinct !DILocation(line: 229, column: 2, scope: !12422, inlinedAt: !12425)
!12438 = !DILocation(line: 188, column: 2, scope: !12439, inlinedAt: !12437)
!12439 = distinct !DILexicalBlock(scope: !12429, file: !2308, line: 188, column: 2)
!12440 = !DILocation(line: 188, column: 2, scope: !12441, inlinedAt: !12437)
!12441 = distinct !DILexicalBlock(scope: !12439, file: !2308, line: 188, column: 2)
!12442 = !DILocation(line: 0, scope: !12439, inlinedAt: !12437)
!12443 = !DILocation(line: 189, column: 7, scope: !12444, inlinedAt: !12437)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !2308, line: 189, column: 7)
!12445 = distinct !DILexicalBlock(scope: !12441, file: !2308, line: 188, column: 56)
!12446 = !DILocation(line: 189, column: 35, scope: !12444, inlinedAt: !12437)
!12447 = !DILocation(line: 189, column: 7, scope: !12445, inlinedAt: !12437)
!12448 = !DILocation(line: 191, column: 21, scope: !12449, inlinedAt: !12437)
!12449 = distinct !DILexicalBlock(scope: !12444, file: !2308, line: 189, column: 40)
!12450 = !DILocation(line: 190, column: 4, scope: !12449, inlinedAt: !12437)
!12451 = !DILocation(line: 192, column: 4, scope: !12449, inlinedAt: !12437)
!12452 = distinct !{!12452, !12438, !12453}
!12453 = !DILocation(line: 194, column: 2, scope: !12439, inlinedAt: !12437)
!12454 = !DILocation(line: 196, column: 37, scope: !12429, inlinedAt: !12437)
!12455 = !DILocation(line: 196, column: 2, scope: !12429, inlinedAt: !12437)
!12456 = !DILocation(line: 197, column: 1, scope: !12429, inlinedAt: !12437)
!12457 = !DILocation(line: 399, column: 25, scope: !12390)
!12458 = !DILocation(line: 399, column: 22, scope: !12390)
!12459 = !DILocation(line: 399, column: 2, scope: !12390)
!12460 = !DILocation(line: 400, column: 1, scope: !12390)
!12461 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11501, file: !11501, line: 136, type: !12347, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12462)
!12462 = !{!12463}
!12463 = !DILocalVariable(name: "thread", arg: 1, scope: !12461, file: !11501, line: 136, type: !2203)
!12464 = !DILocation(line: 0, scope: !12461)
!12465 = !DILocation(line: 138, column: 9, scope: !12461)
!12466 = !DILocation(line: 138, column: 2, scope: !12461)
!12467 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2308, file: !2308, line: 1137, type: !12430, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12468)
!12468 = !{!12469, !12470}
!12469 = !DILocalVariable(name: "pq", arg: 1, scope: !12467, file: !2308, line: 1137, type: !12432)
!12470 = !DILocalVariable(name: "thread", arg: 2, scope: !12467, file: !2308, line: 1137, type: !2203)
!12471 = !DILocation(line: 0, scope: !12467)
!12472 = !DILocation(line: 1141, column: 33, scope: !12467)
!12473 = !DILocation(line: 1141, column: 2, scope: !12467)
!12474 = !DILocation(line: 1142, column: 1, scope: !12467)
!12475 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !377, file: !377, line: 294, type: !12476, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12478)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{!2304, !12432}
!12478 = !{!12479}
!12479 = !DILocalVariable(name: "list", arg: 1, scope: !12475, file: !377, line: 294, type: !12432)
!12480 = !DILocation(line: 0, scope: !12475)
!12481 = !DILocation(line: 296, column: 9, scope: !12475)
!12482 = !DILocation(line: 296, column: 49, scope: !12475)
!12483 = !DILocation(line: 296, column: 2, scope: !12475)
!12484 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !377, file: !377, line: 443, type: !12485, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12487)
!12485 = !DISubroutineType(types: !12486)
!12486 = !{null, !2304, !2304}
!12487 = !{!12488, !12489, !12490}
!12488 = !DILocalVariable(name: "successor", arg: 1, scope: !12484, file: !377, line: 443, type: !2304)
!12489 = !DILocalVariable(name: "node", arg: 2, scope: !12484, file: !377, line: 443, type: !2304)
!12490 = !DILocalVariable(name: "prev", scope: !12484, file: !377, line: 445, type: !12491)
!12491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2304)
!12492 = !DILocation(line: 0, scope: !12484)
!12493 = !DILocation(line: 445, column: 39, scope: !12484)
!12494 = !DILocation(line: 447, column: 8, scope: !12484)
!12495 = !DILocation(line: 447, column: 13, scope: !12484)
!12496 = !DILocation(line: 448, column: 8, scope: !12484)
!12497 = !DILocation(line: 448, column: 13, scope: !12484)
!12498 = !DILocation(line: 449, column: 8, scope: !12484)
!12499 = !DILocation(line: 449, column: 13, scope: !12484)
!12500 = !DILocation(line: 450, column: 18, scope: !12484)
!12501 = !DILocation(line: 451, column: 1, scope: !12484)
!12502 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !377, file: !377, line: 341, type: !12503, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12505)
!12503 = !DISubroutineType(types: !12504)
!12504 = !{!2304, !12432, !2304}
!12505 = !{!12506, !12507}
!12506 = !DILocalVariable(name: "list", arg: 1, scope: !12502, file: !377, line: 341, type: !12432)
!12507 = !DILocalVariable(name: "node", arg: 2, scope: !12502, file: !377, line: 342, type: !2304)
!12508 = !DILocation(line: 0, scope: !12502)
!12509 = !DILocation(line: 344, column: 15, scope: !12502)
!12510 = !DILocation(line: 344, column: 9, scope: !12502)
!12511 = !DILocation(line: 344, column: 26, scope: !12502)
!12512 = !DILocation(line: 344, column: 2, scope: !12502)
!12513 = distinct !DISubprogram(name: "sys_dlist_append", scope: !377, file: !377, line: 404, type: !12514, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12516)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{null, !12432, !2304}
!12516 = !{!12517, !12518, !12519}
!12517 = !DILocalVariable(name: "list", arg: 1, scope: !12513, file: !377, line: 404, type: !12432)
!12518 = !DILocalVariable(name: "node", arg: 2, scope: !12513, file: !377, line: 404, type: !2304)
!12519 = !DILocalVariable(name: "tail", scope: !12513, file: !377, line: 406, type: !12491)
!12520 = !DILocation(line: 0, scope: !12513)
!12521 = !DILocation(line: 406, column: 34, scope: !12513)
!12522 = !DILocation(line: 408, column: 8, scope: !12513)
!12523 = !DILocation(line: 408, column: 13, scope: !12513)
!12524 = !DILocation(line: 409, column: 8, scope: !12513)
!12525 = !DILocation(line: 409, column: 13, scope: !12513)
!12526 = !DILocation(line: 411, column: 8, scope: !12513)
!12527 = !DILocation(line: 411, column: 13, scope: !12513)
!12528 = !DILocation(line: 412, column: 13, scope: !12513)
!12529 = !DILocation(line: 413, column: 1, scope: !12513)
!12530 = distinct !DISubprogram(name: "update_cache", scope: !2308, file: !2308, line: 559, type: !6616, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12531)
!12531 = !{!12532, !12533}
!12532 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12530, file: !2308, line: 559, type: !103)
!12533 = !DILocalVariable(name: "thread", scope: !12530, file: !2308, line: 562, type: !2203)
!12534 = !DILocation(line: 0, scope: !12530)
!12535 = !DILocation(line: 239, column: 9, scope: !12536, inlinedAt: !12539)
!12536 = distinct !DISubprogram(name: "runq_best", scope: !2308, file: !2308, line: 237, type: !12537, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!12537 = !DISubroutineType(types: !12538)
!12538 = !{!2203}
!12539 = distinct !DILocation(line: 314, column: 28, scope: !12540, inlinedAt: !12543)
!12540 = distinct !DISubprogram(name: "next_up", scope: !2308, file: !2308, line: 312, type: !12537, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12541)
!12541 = !{!12542}
!12542 = !DILocalVariable(name: "thread", scope: !12540, file: !2308, line: 314, type: !2203)
!12543 = distinct !DILocation(line: 562, column: 28, scope: !12530)
!12544 = !DILocation(line: 0, scope: !12540, inlinedAt: !12543)
!12545 = !DILocation(line: 340, column: 17, scope: !12540, inlinedAt: !12543)
!12546 = !DILocation(line: 340, column: 9, scope: !12540, inlinedAt: !12543)
!12547 = !DILocalVariable(name: "thread", arg: 1, scope: !12548, file: !2308, line: 127, type: !2203)
!12548 = distinct !DISubprogram(name: "should_preempt", scope: !2308, file: !2308, line: 127, type: !12549, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12551)
!12549 = !DISubroutineType(types: !12550)
!12550 = !{!163, !2203, !103}
!12551 = !{!12547, !12552}
!12552 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12548, file: !2308, line: 128, type: !103)
!12553 = !DILocation(line: 0, scope: !12548, inlinedAt: !12554)
!12554 = distinct !DILocation(line: 564, column: 6, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12530, file: !2308, line: 564, column: 6)
!12556 = !DILocation(line: 133, column: 17, scope: !12557, inlinedAt: !12554)
!12557 = distinct !DILexicalBlock(scope: !12548, file: !2308, line: 133, column: 6)
!12558 = !DILocation(line: 0, scope: !12555)
!12559 = !DILocation(line: 133, column: 6, scope: !12548, inlinedAt: !12554)
!12560 = !DILocation(line: 140, column: 6, scope: !12561, inlinedAt: !12554)
!12561 = distinct !DILexicalBlock(scope: !12548, file: !2308, line: 140, column: 6)
!12562 = !DILocation(line: 140, column: 6, scope: !12548, inlinedAt: !12554)
!12563 = !DILocation(line: 150, column: 9, scope: !12564, inlinedAt: !12554)
!12564 = distinct !DILexicalBlock(scope: !12548, file: !2308, line: 149, column: 6)
!12565 = !DILocation(line: 149, column: 6, scope: !12548, inlinedAt: !12554)
!12566 = !DILocation(line: 157, column: 6, scope: !12567, inlinedAt: !12554)
!12567 = distinct !DILexicalBlock(scope: !12548, file: !2308, line: 157, column: 6)
!12568 = !DILocation(line: 564, column: 6, scope: !12530)
!12569 = !DILocation(line: 566, column: 14, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12571, file: !2308, line: 566, column: 7)
!12571 = distinct !DILexicalBlock(scope: !12555, file: !2308, line: 564, column: 42)
!12572 = !DILocation(line: 566, column: 7, scope: !12571)
!12573 = !DILocation(line: 567, column: 4, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12570, file: !2308, line: 566, column: 27)
!12575 = !DILocation(line: 568, column: 3, scope: !12574)
!12576 = !DILocation(line: 585, column: 1, scope: !12530)
!12577 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2308, file: !2308, line: 1144, type: !12578, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12580)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{!2203, !12432}
!12580 = !{!12581, !12582, !12583}
!12581 = !DILocalVariable(name: "pq", arg: 1, scope: !12577, file: !2308, line: 1144, type: !12432)
!12582 = !DILocalVariable(name: "thread", scope: !12577, file: !2308, line: 1146, type: !2203)
!12583 = !DILocalVariable(name: "n", scope: !12577, file: !2308, line: 1147, type: !2304)
!12584 = !DILocation(line: 0, scope: !12577)
!12585 = !DILocation(line: 1147, column: 19, scope: !12577)
!12586 = !DILocation(line: 1152, column: 2, scope: !12577)
!12587 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11501, file: !11501, line: 115, type: !12347, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12588)
!12588 = !{!12589}
!12589 = !DILocalVariable(name: "thread", arg: 1, scope: !12587, file: !11501, line: 115, type: !2203)
!12590 = !DILocation(line: 0, scope: !12587)
!12591 = !DILocation(line: 117, column: 46, scope: !12587)
!12592 = !DILocation(line: 117, column: 10, scope: !12587)
!12593 = !DILocation(line: 117, column: 9, scope: !12587)
!12594 = !DILocation(line: 117, column: 2, scope: !12587)
!12595 = distinct !DISubprogram(name: "is_preempt", scope: !2308, file: !2308, line: 62, type: !12205, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12596)
!12596 = !{!12597}
!12597 = !DILocalVariable(name: "thread", arg: 1, scope: !12595, file: !2308, line: 62, type: !2203)
!12598 = !DILocation(line: 0, scope: !12595)
!12599 = !DILocation(line: 65, column: 22, scope: !12595)
!12600 = !DILocation(line: 65, column: 30, scope: !12595)
!12601 = !DILocation(line: 65, column: 2, scope: !12595)
!12602 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11895, file: !11895, line: 35, type: !12603, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12607)
!12603 = !DISubroutineType(types: !12604)
!12604 = !{!163, !12605}
!12605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12606, size: 32)
!12606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2254)
!12607 = !{!12608}
!12608 = !DILocalVariable(name: "to", arg: 1, scope: !12602, file: !11895, line: 35, type: !12605)
!12609 = !DILocation(line: 0, scope: !12602)
!12610 = !DILocation(line: 37, column: 35, scope: !12602)
!12611 = !DILocation(line: 37, column: 10, scope: !12602)
!12612 = !DILocation(line: 37, column: 9, scope: !12602)
!12613 = !DILocation(line: 37, column: 2, scope: !12602)
!12614 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !377, file: !377, line: 225, type: !12615, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12619)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{!163, !12617}
!12617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12618, size: 32)
!12618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2213)
!12619 = !{!12620}
!12620 = !DILocalVariable(name: "node", arg: 1, scope: !12614, file: !377, line: 225, type: !12617)
!12621 = !DILocation(line: 0, scope: !12614)
!12622 = !DILocation(line: 227, column: 15, scope: !12614)
!12623 = !DILocation(line: 227, column: 20, scope: !12614)
!12624 = !DILocation(line: 227, column: 2, scope: !12614)
!12625 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !377, file: !377, line: 325, type: !12503, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12626)
!12626 = !{!12627, !12628}
!12627 = !DILocalVariable(name: "list", arg: 1, scope: !12625, file: !377, line: 325, type: !12432)
!12628 = !DILocalVariable(name: "node", arg: 2, scope: !12625, file: !377, line: 326, type: !2304)
!12629 = !DILocation(line: 0, scope: !12625)
!12630 = !DILocation(line: 328, column: 24, scope: !12625)
!12631 = !DILocation(line: 328, column: 15, scope: !12625)
!12632 = !DILocation(line: 328, column: 9, scope: !12625)
!12633 = !DILocation(line: 328, column: 45, scope: !12625)
!12634 = !DILocation(line: 328, column: 2, scope: !12625)
!12635 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !377, file: !377, line: 266, type: !12636, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12638)
!12636 = !DISubroutineType(types: !12637)
!12637 = !{!163, !12432}
!12638 = !{!12639}
!12639 = !DILocalVariable(name: "list", arg: 1, scope: !12635, file: !377, line: 266, type: !12432)
!12640 = !DILocation(line: 0, scope: !12635)
!12641 = !DILocation(line: 268, column: 15, scope: !12635)
!12642 = !DILocation(line: 268, column: 20, scope: !12635)
!12643 = !DILocation(line: 268, column: 2, scope: !12635)
!12644 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !377, file: !377, line: 496, type: !12645, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12647)
!12645 = !DISubroutineType(types: !12646)
!12646 = !{null, !2304}
!12647 = !{!12648, !12649, !12650}
!12648 = !DILocalVariable(name: "node", arg: 1, scope: !12644, file: !377, line: 496, type: !2304)
!12649 = !DILocalVariable(name: "prev", scope: !12644, file: !377, line: 498, type: !12491)
!12650 = !DILocalVariable(name: "next", scope: !12644, file: !377, line: 499, type: !12491)
!12651 = !DILocation(line: 0, scope: !12644)
!12652 = !DILocation(line: 498, column: 34, scope: !12644)
!12653 = !DILocation(line: 499, column: 34, scope: !12644)
!12654 = !DILocation(line: 501, column: 8, scope: !12644)
!12655 = !DILocation(line: 501, column: 13, scope: !12644)
!12656 = !DILocation(line: 502, column: 8, scope: !12644)
!12657 = !DILocation(line: 502, column: 13, scope: !12644)
!12658 = !DILocation(line: 503, column: 2, scope: !12644)
!12659 = !DILocation(line: 504, column: 1, scope: !12644)
!12660 = distinct !DISubprogram(name: "sys_dnode_init", scope: !377, file: !377, line: 211, type: !12645, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12661)
!12661 = !{!12662}
!12662 = !DILocalVariable(name: "node", arg: 1, scope: !12660, file: !377, line: 211, type: !2304)
!12663 = !DILocation(line: 0, scope: !12660)
!12664 = !DILocation(line: 213, column: 8, scope: !12660)
!12665 = !DILocation(line: 213, column: 13, scope: !12660)
!12666 = !DILocation(line: 214, column: 8, scope: !12660)
!12667 = !DILocation(line: 214, column: 13, scope: !12660)
!12668 = !DILocation(line: 215, column: 1, scope: !12660)
!12669 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11501, file: !11501, line: 131, type: !12670, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12672)
!12670 = !DISubroutineType(types: !12671)
!12671 = !{!163, !2203, !106}
!12672 = !{!12673, !12674}
!12673 = !DILocalVariable(name: "thread", arg: 1, scope: !12669, file: !11501, line: 131, type: !2203)
!12674 = !DILocalVariable(name: "state", arg: 2, scope: !12669, file: !11501, line: 131, type: !106)
!12675 = !DILocation(line: 0, scope: !12669)
!12676 = !DILocation(line: 133, column: 23, scope: !12669)
!12677 = !DILocation(line: 133, column: 45, scope: !12669)
!12678 = !DILocation(line: 133, column: 2, scope: !12669)
!12679 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11501, file: !11501, line: 211, type: !12680, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12682)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{!163, !103, !103}
!12682 = !{!12683, !12684}
!12683 = !DILocalVariable(name: "prio", arg: 1, scope: !12679, file: !11501, line: 211, type: !103)
!12684 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12679, file: !11501, line: 211, type: !103)
!12685 = !DILocation(line: 0, scope: !12679)
!12686 = !DILocation(line: 213, column: 9, scope: !12679)
!12687 = !DILocation(line: 213, column: 2, scope: !12679)
!12688 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11501, file: !11501, line: 83, type: !12347, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12689)
!12689 = !{!12690}
!12690 = !DILocalVariable(name: "thread", arg: 1, scope: !12688, file: !11501, line: 83, type: !2203)
!12691 = !DILocation(line: 0, scope: !12688)
!12692 = !DILocation(line: 89, column: 16, scope: !12688)
!12693 = !DILocation(line: 89, column: 2, scope: !12688)
!12694 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11501, file: !11501, line: 206, type: !12680, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12695)
!12695 = !{!12696, !12697}
!12696 = !DILocalVariable(name: "prio1", arg: 1, scope: !12694, file: !11501, line: 206, type: !103)
!12697 = !DILocalVariable(name: "prio2", arg: 2, scope: !12694, file: !11501, line: 206, type: !103)
!12698 = !DILocation(line: 0, scope: !12694)
!12699 = !DILocation(line: 208, column: 15, scope: !12694)
!12700 = !DILocation(line: 208, column: 2, scope: !12694)
!12701 = distinct !DISubprogram(name: "z_ready_thread", scope: !2308, file: !2308, line: 635, type: !12187, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12702)
!12702 = !{!12703, !12704, !12706}
!12703 = !DILocalVariable(name: "thread", arg: 1, scope: !12701, file: !2308, line: 635, type: !2203)
!12704 = !DILocalVariable(name: "__i", scope: !12705, file: !2308, line: 637, type: !12221)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !2308, line: 637, column: 2)
!12706 = !DILocalVariable(name: "__key", scope: !12705, file: !2308, line: 637, type: !12221)
!12707 = !DILocation(line: 0, scope: !12701)
!12708 = !DILocation(line: 0, scope: !12705)
!12709 = !DILocation(line: 0, scope: !12229, inlinedAt: !12710)
!12710 = distinct !DILocation(line: 637, column: 2, scope: !12705)
!12711 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12712)
!12712 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12710)
!12713 = !DILocation(line: 0, scope: !12238, inlinedAt: !12712)
!12714 = !DILocation(line: 639, column: 4, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !2308, line: 638, column: 41)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !2308, line: 638, column: 7)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !2308, line: 637, column: 26)
!12718 = distinct !DILexicalBlock(scope: !12705, file: !2308, line: 637, column: 2)
!12719 = !DILocation(line: 0, scope: !12256, inlinedAt: !12720)
!12720 = distinct !DILocation(line: 637, column: 2, scope: !12718)
!12721 = !DILocation(line: 0, scope: !12264, inlinedAt: !12722)
!12722 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12720)
!12723 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12722)
!12724 = !DILocation(line: 642, column: 1, scope: !12701)
!12725 = distinct !DISubprogram(name: "ready_thread", scope: !2308, file: !2308, line: 617, type: !12187, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12726)
!12726 = !{!12727}
!12727 = !DILocalVariable(name: "thread", arg: 1, scope: !12725, file: !2308, line: 617, type: !2203)
!12728 = !DILocation(line: 0, scope: !12725)
!12729 = !DILocation(line: 626, column: 7, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12725, file: !2308, line: 626, column: 6)
!12731 = !DILocation(line: 626, column: 34, scope: !12730)
!12732 = !DILocation(line: 626, column: 37, scope: !12730)
!12733 = !DILocation(line: 626, column: 6, scope: !12725)
!12734 = !DILocation(line: 0, scope: !12415, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 629, column: 3, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12730, file: !2308, line: 626, column: 64)
!12737 = !DILocation(line: 252, column: 15, scope: !12415, inlinedAt: !12735)
!12738 = !DILocation(line: 252, column: 28, scope: !12415, inlinedAt: !12735)
!12739 = !DILocation(line: 0, scope: !12422, inlinedAt: !12740)
!12740 = distinct !DILocation(line: 254, column: 3, scope: !12426, inlinedAt: !12735)
!12741 = !DILocation(line: 0, scope: !12429, inlinedAt: !12742)
!12742 = distinct !DILocation(line: 229, column: 2, scope: !12422, inlinedAt: !12740)
!12743 = !DILocation(line: 188, column: 2, scope: !12439, inlinedAt: !12742)
!12744 = !DILocation(line: 188, column: 2, scope: !12441, inlinedAt: !12742)
!12745 = !DILocation(line: 0, scope: !12439, inlinedAt: !12742)
!12746 = !DILocation(line: 189, column: 7, scope: !12444, inlinedAt: !12742)
!12747 = !DILocation(line: 189, column: 35, scope: !12444, inlinedAt: !12742)
!12748 = !DILocation(line: 189, column: 7, scope: !12445, inlinedAt: !12742)
!12749 = !DILocation(line: 191, column: 21, scope: !12449, inlinedAt: !12742)
!12750 = !DILocation(line: 190, column: 4, scope: !12449, inlinedAt: !12742)
!12751 = !DILocation(line: 192, column: 4, scope: !12449, inlinedAt: !12742)
!12752 = distinct !{!12752, !12743, !12753}
!12753 = !DILocation(line: 194, column: 2, scope: !12439, inlinedAt: !12742)
!12754 = !DILocation(line: 196, column: 37, scope: !12429, inlinedAt: !12742)
!12755 = !DILocation(line: 196, column: 2, scope: !12429, inlinedAt: !12742)
!12756 = !DILocation(line: 197, column: 1, scope: !12429, inlinedAt: !12742)
!12757 = !DILocation(line: 630, column: 3, scope: !12736)
!12758 = !DILocation(line: 632, column: 2, scope: !12736)
!12759 = !DILocation(line: 633, column: 1, scope: !12725)
!12760 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11501, file: !11501, line: 120, type: !12347, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12761)
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "thread", arg: 1, scope: !12760, file: !11501, line: 120, type: !2203)
!12763 = !DILocation(line: 0, scope: !12760)
!12764 = !DILocation(line: 122, column: 12, scope: !12760)
!12765 = !DILocation(line: 122, column: 62, scope: !12760)
!12766 = !DILocation(line: 123, column: 4, scope: !12760)
!12767 = !DILocation(line: 122, column: 2, scope: !12760)
!12768 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2308, file: !2308, line: 644, type: !12187, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12769)
!12769 = !{!12770, !12771, !12773}
!12770 = !DILocalVariable(name: "thread", arg: 1, scope: !12768, file: !2308, line: 644, type: !2203)
!12771 = !DILocalVariable(name: "__i", scope: !12772, file: !2308, line: 646, type: !12221)
!12772 = distinct !DILexicalBlock(scope: !12768, file: !2308, line: 646, column: 2)
!12773 = !DILocalVariable(name: "__key", scope: !12772, file: !2308, line: 646, type: !12221)
!12774 = !DILocation(line: 0, scope: !12768)
!12775 = !DILocation(line: 0, scope: !12772)
!12776 = !DILocation(line: 0, scope: !12229, inlinedAt: !12777)
!12777 = distinct !DILocation(line: 646, column: 2, scope: !12772)
!12778 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12779)
!12779 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12777)
!12780 = !DILocation(line: 0, scope: !12238, inlinedAt: !12779)
!12781 = !DILocation(line: 647, column: 3, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !2308, line: 646, column: 26)
!12783 = distinct !DILexicalBlock(scope: !12772, file: !2308, line: 646, column: 2)
!12784 = !DILocation(line: 0, scope: !12256, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 646, column: 2, scope: !12783)
!12786 = !DILocation(line: 0, scope: !12264, inlinedAt: !12787)
!12787 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12785)
!12788 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12787)
!12789 = !DILocation(line: 649, column: 1, scope: !12768)
!12790 = distinct !DISubprogram(name: "z_sched_start", scope: !2308, file: !2308, line: 651, type: !12187, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12791)
!12791 = !{!12792, !12793}
!12792 = !DILocalVariable(name: "thread", arg: 1, scope: !12790, file: !2308, line: 651, type: !2203)
!12793 = !DILocalVariable(name: "key", scope: !12790, file: !2308, line: 653, type: !12221)
!12794 = !DILocation(line: 0, scope: !12790)
!12795 = !DILocation(line: 0, scope: !12229, inlinedAt: !12796)
!12796 = distinct !DILocation(line: 653, column: 25, scope: !12790)
!12797 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12798)
!12798 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12796)
!12799 = !DILocation(line: 0, scope: !12238, inlinedAt: !12798)
!12800 = !DILocation(line: 655, column: 6, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12790, file: !2308, line: 655, column: 6)
!12802 = !DILocation(line: 655, column: 6, scope: !12790)
!12803 = !DILocation(line: 0, scope: !12256, inlinedAt: !12804)
!12804 = distinct !DILocation(line: 656, column: 3, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12801, file: !2308, line: 655, column: 36)
!12806 = !DILocation(line: 0, scope: !12264, inlinedAt: !12807)
!12807 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12804)
!12808 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12807)
!12809 = !DILocation(line: 657, column: 3, scope: !12805)
!12810 = !DILocation(line: 660, column: 2, scope: !12790)
!12811 = !DILocation(line: 661, column: 2, scope: !12790)
!12812 = !DILocation(line: 662, column: 2, scope: !12790)
!12813 = !DILocation(line: 663, column: 1, scope: !12790)
!12814 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11501, file: !11501, line: 126, type: !12347, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12815)
!12815 = !{!12816}
!12816 = !DILocalVariable(name: "thread", arg: 1, scope: !12814, file: !11501, line: 126, type: !2203)
!12817 = !DILocation(line: 0, scope: !12814)
!12818 = !DILocation(line: 128, column: 23, scope: !12814)
!12819 = !DILocation(line: 128, column: 36, scope: !12814)
!12820 = !DILocation(line: 128, column: 56, scope: !12814)
!12821 = !DILocation(line: 128, column: 2, scope: !12814)
!12822 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11501, file: !11501, line: 155, type: !12187, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12823)
!12823 = !{!12824}
!12824 = !DILocalVariable(name: "thread", arg: 1, scope: !12822, file: !11501, line: 155, type: !2203)
!12825 = !DILocation(line: 0, scope: !12822)
!12826 = !DILocation(line: 157, column: 15, scope: !12822)
!12827 = !DILocation(line: 157, column: 28, scope: !12822)
!12828 = !DILocation(line: 158, column: 1, scope: !12822)
!12829 = distinct !DISubprogram(name: "z_reschedule", scope: !2308, file: !2308, line: 967, type: !12257, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12830)
!12830 = !{!12831, !12832}
!12831 = !DILocalVariable(name: "lock", arg: 1, scope: !12829, file: !2308, line: 967, type: !12232)
!12832 = !DILocalVariable(name: "key", arg: 2, scope: !12829, file: !2308, line: 967, type: !12221)
!12833 = !DILocation(line: 0, scope: !12829)
!12834 = !DILocation(line: 969, column: 6, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12829, file: !2308, line: 969, column: 6)
!12836 = !DILocation(line: 969, column: 23, scope: !12835)
!12837 = !DILocation(line: 969, column: 26, scope: !12835)
!12838 = !DILocation(line: 969, column: 6, scope: !12829)
!12839 = !DILocalVariable(name: "key", arg: 2, scope: !12840, file: !11605, line: 193, type: !12221)
!12840 = distinct !DISubprogram(name: "z_swap", scope: !11605, file: !11605, line: 193, type: !12841, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12843)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{!103, !12232, !12221}
!12843 = !{!12844, !12839}
!12844 = !DILocalVariable(name: "lock", arg: 1, scope: !12840, file: !11605, line: 193, type: !12232)
!12845 = !DILocation(line: 0, scope: !12840, inlinedAt: !12846)
!12846 = distinct !DILocation(line: 970, column: 3, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12835, file: !2308, line: 969, column: 39)
!12848 = !DILocation(line: 196, column: 9, scope: !12840, inlinedAt: !12846)
!12849 = !DILocation(line: 971, column: 2, scope: !12847)
!12850 = !DILocation(line: 0, scope: !12256, inlinedAt: !12851)
!12851 = distinct !DILocation(line: 972, column: 3, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12835, file: !2308, line: 971, column: 9)
!12853 = !DILocation(line: 0, scope: !12264, inlinedAt: !12854)
!12854 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12851)
!12855 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12854)
!12856 = !DILocation(line: 975, column: 1, scope: !12829)
!12857 = distinct !DISubprogram(name: "resched", scope: !2308, file: !2308, line: 940, type: !12858, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12860)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!163, !106}
!12860 = !{!12861}
!12861 = !DILocalVariable(name: "key", arg: 1, scope: !12857, file: !2308, line: 940, type: !106)
!12862 = !DILocation(line: 0, scope: !12857)
!12863 = !DILocalVariable(name: "key", arg: 1, scope: !12864, file: !4724, line: 112, type: !32)
!12864 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4724, file: !4724, line: 112, type: !12865, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12867)
!12865 = !DISubroutineType(types: !12866)
!12866 = !{!163, !32}
!12867 = !{!12863}
!12868 = !DILocation(line: 0, scope: !12864, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 946, column: 9, scope: !12857)
!12870 = !DILocation(line: 115, column: 13, scope: !12864, inlinedAt: !12869)
!12871 = !DILocation(line: 946, column: 32, scope: !12857)
!12872 = !DILocation(line: 1031, column: 3, scope: !12873, inlinedAt: !12876)
!12873 = distinct !DISubprogram(name: "__get_IPSR", scope: !4973, file: !4973, line: 1027, type: !4808, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12874)
!12874 = !{!12875}
!12875 = !DILocalVariable(name: "result", scope: !12873, file: !4973, line: 1029, type: !106)
!12876 = distinct !DILocation(line: 48, column: 10, scope: !12877, inlinedAt: !12878)
!12877 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5765, file: !5765, line: 46, type: !5766, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!12878 = distinct !DILocation(line: 946, column: 36, scope: !12857)
!12879 = !{i64 3768618}
!12880 = !DILocation(line: 0, scope: !12873, inlinedAt: !12876)
!12881 = !DILocation(line: 48, column: 9, scope: !12877, inlinedAt: !12878)
!12882 = !DILocation(line: 946, column: 2, scope: !12857)
!12883 = distinct !DISubprogram(name: "need_swap", scope: !2308, file: !2308, line: 953, type: !5766, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12884)
!12884 = !{!12885}
!12885 = !DILocalVariable(name: "new_thread", scope: !12883, file: !2308, line: 959, type: !2203)
!12886 = !DILocation(line: 962, column: 31, scope: !12883)
!12887 = !DILocation(line: 0, scope: !12883)
!12888 = !DILocation(line: 963, column: 23, scope: !12883)
!12889 = !DILocation(line: 963, column: 20, scope: !12883)
!12890 = !DILocation(line: 963, column: 2, scope: !12883)
!12891 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11605, file: !11605, line: 181, type: !4983, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12892)
!12892 = !{!12893, !12894}
!12893 = !DILocalVariable(name: "key", arg: 1, scope: !12891, file: !11605, line: 181, type: !32)
!12894 = !DILocalVariable(name: "ret", scope: !12891, file: !11605, line: 183, type: !103)
!12895 = !DILocation(line: 0, scope: !12891)
!12896 = !DILocation(line: 185, column: 8, scope: !12891)
!12897 = !DILocation(line: 186, column: 2, scope: !12891)
!12898 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2308, file: !2308, line: 665, type: !12187, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12899)
!12899 = !{!12900, !12901, !12903}
!12900 = !DILocalVariable(name: "thread", arg: 1, scope: !12898, file: !2308, line: 665, type: !2203)
!12901 = !DILocalVariable(name: "__i", scope: !12902, file: !2308, line: 671, type: !12221)
!12902 = distinct !DILexicalBlock(scope: !12898, file: !2308, line: 671, column: 2)
!12903 = !DILocalVariable(name: "__key", scope: !12902, file: !2308, line: 671, type: !12221)
!12904 = !DILocation(line: 0, scope: !12898)
!12905 = !DILocation(line: 669, column: 8, scope: !12898)
!12906 = !DILocation(line: 0, scope: !12902)
!12907 = !DILocation(line: 0, scope: !12229, inlinedAt: !12908)
!12908 = distinct !DILocation(line: 671, column: 2, scope: !12902)
!12909 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12910)
!12910 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12908)
!12911 = !DILocation(line: 0, scope: !12238, inlinedAt: !12910)
!12912 = !DILocation(line: 672, column: 7, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !2308, line: 672, column: 7)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !2308, line: 671, column: 26)
!12915 = distinct !DILexicalBlock(scope: !12902, file: !2308, line: 671, column: 2)
!12916 = !DILocation(line: 672, column: 7, scope: !12914)
!12917 = !DILocation(line: 0, scope: !12398, inlinedAt: !12918)
!12918 = distinct !DILocation(line: 673, column: 4, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12913, file: !2308, line: 672, column: 35)
!12920 = !DILocation(line: 266, column: 15, scope: !12398, inlinedAt: !12918)
!12921 = !DILocation(line: 266, column: 28, scope: !12398, inlinedAt: !12918)
!12922 = !DILocation(line: 0, scope: !12406, inlinedAt: !12923)
!12923 = distinct !DILocation(line: 268, column: 3, scope: !12410, inlinedAt: !12918)
!12924 = !DILocation(line: 234, column: 2, scope: !12406, inlinedAt: !12923)
!12925 = !DILocation(line: 674, column: 3, scope: !12919)
!12926 = !DILocation(line: 675, column: 3, scope: !12914)
!12927 = !DILocation(line: 676, column: 26, scope: !12914)
!12928 = !DILocation(line: 676, column: 23, scope: !12914)
!12929 = !DILocation(line: 676, column: 3, scope: !12914)
!12930 = !DILocation(line: 0, scope: !12256, inlinedAt: !12931)
!12931 = distinct !DILocation(line: 671, column: 2, scope: !12915)
!12932 = !DILocation(line: 0, scope: !12264, inlinedAt: !12933)
!12933 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12931)
!12934 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12933)
!12935 = !DILocation(line: 679, column: 16, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12898, file: !2308, line: 679, column: 6)
!12937 = !DILocation(line: 679, column: 13, scope: !12936)
!12938 = !DILocation(line: 679, column: 6, scope: !12898)
!12939 = !DILocation(line: 680, column: 3, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12936, file: !2308, line: 679, column: 26)
!12941 = !DILocation(line: 681, column: 2, scope: !12940)
!12942 = !DILocation(line: 684, column: 1, scope: !12898)
!12943 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11895, file: !11895, line: 52, type: !12205, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12944)
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "thread", arg: 1, scope: !12943, file: !11895, line: 52, type: !2203)
!12946 = !DILocation(line: 0, scope: !12943)
!12947 = !DILocation(line: 54, column: 39, scope: !12943)
!12948 = !DILocation(line: 54, column: 9, scope: !12943)
!12949 = !DILocation(line: 54, column: 2, scope: !12943)
!12950 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11501, file: !11501, line: 141, type: !12187, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12951)
!12951 = !{!12952}
!12952 = !DILocalVariable(name: "thread", arg: 1, scope: !12950, file: !11501, line: 141, type: !2203)
!12953 = !DILocation(line: 0, scope: !12950)
!12954 = !DILocation(line: 143, column: 15, scope: !12950)
!12955 = !DILocation(line: 143, column: 28, scope: !12950)
!12956 = !DILocation(line: 146, column: 1, scope: !12950)
!12957 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11501, file: !11501, line: 73, type: !2917, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!12958 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12959)
!12959 = distinct !DILocation(line: 75, column: 30, scope: !12957)
!12960 = !DILocation(line: 0, scope: !12238, inlinedAt: !12959)
!12961 = !DILocation(line: 75, column: 9, scope: !12957)
!12962 = !DILocation(line: 76, column: 1, scope: !12957)
!12963 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2308, file: !2308, line: 977, type: !5062, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12964)
!12964 = !{!12965}
!12965 = !DILocalVariable(name: "key", arg: 1, scope: !12963, file: !2308, line: 977, type: !106)
!12966 = !DILocation(line: 0, scope: !12963)
!12967 = !DILocation(line: 979, column: 6, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12963, file: !2308, line: 979, column: 6)
!12969 = !DILocation(line: 979, column: 6, scope: !12963)
!12970 = !DILocation(line: 980, column: 3, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12968, file: !2308, line: 979, column: 20)
!12972 = !DILocation(line: 981, column: 2, scope: !12971)
!12973 = !DILocation(line: 0, scope: !12264, inlinedAt: !12974)
!12974 = distinct !DILocation(line: 982, column: 3, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12968, file: !2308, line: 981, column: 9)
!12976 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12974)
!12977 = !DILocation(line: 985, column: 1, scope: !12963)
!12978 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2308, file: !2308, line: 695, type: !12187, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !12979)
!12979 = !{!12980, !12981}
!12980 = !DILocalVariable(name: "thread", arg: 1, scope: !12978, file: !2308, line: 695, type: !2203)
!12981 = !DILocalVariable(name: "key", scope: !12978, file: !2308, line: 699, type: !12221)
!12982 = !DILocation(line: 0, scope: !12978)
!12983 = !DILocation(line: 0, scope: !12229, inlinedAt: !12984)
!12984 = distinct !DILocation(line: 699, column: 25, scope: !12978)
!12985 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !12986)
!12986 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !12984)
!12987 = !DILocation(line: 0, scope: !12238, inlinedAt: !12986)
!12988 = !DILocation(line: 702, column: 7, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12978, file: !2308, line: 702, column: 6)
!12990 = !DILocation(line: 702, column: 6, scope: !12978)
!12991 = !DILocation(line: 0, scope: !12256, inlinedAt: !12992)
!12992 = distinct !DILocation(line: 703, column: 3, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12989, file: !2308, line: 702, column: 38)
!12994 = !DILocation(line: 0, scope: !12264, inlinedAt: !12995)
!12995 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !12992)
!12996 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !12995)
!12997 = !DILocation(line: 704, column: 3, scope: !12993)
!12998 = !DILocation(line: 707, column: 2, scope: !12978)
!12999 = !DILocation(line: 708, column: 2, scope: !12978)
!13000 = !DILocation(line: 710, column: 2, scope: !12978)
!13001 = !DILocation(line: 713, column: 1, scope: !12978)
!13002 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11501, file: !11501, line: 96, type: !12347, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13003)
!13003 = !{!13004}
!13004 = !DILocalVariable(name: "thread", arg: 1, scope: !13002, file: !11501, line: 96, type: !2203)
!13005 = !DILocation(line: 0, scope: !13002)
!13006 = !DILocation(line: 98, column: 23, scope: !13002)
!13007 = !DILocation(line: 98, column: 36, scope: !13002)
!13008 = !DILocation(line: 98, column: 57, scope: !13002)
!13009 = !DILocation(line: 98, column: 2, scope: !13002)
!13010 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11501, file: !11501, line: 148, type: !12187, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13011)
!13011 = !{!13012}
!13012 = !DILocalVariable(name: "thread", arg: 1, scope: !13010, file: !11501, line: 148, type: !2203)
!13013 = !DILocation(line: 0, scope: !13010)
!13014 = !DILocation(line: 150, column: 15, scope: !13010)
!13015 = !DILocation(line: 150, column: 28, scope: !13010)
!13016 = !DILocation(line: 153, column: 1, scope: !13010)
!13017 = distinct !DISubprogram(name: "z_pend_thread", scope: !2308, file: !2308, line: 770, type: !13018, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13024)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{null, !2203, !2234, !13020}
!13020 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1557, line: 67, baseType: !13021)
!13021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1557, line: 65, size: 64, elements: !13022)
!13022 = !{!13023}
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13021, file: !1557, line: 66, baseType: !1556, size: 64)
!13024 = !{!13025, !13026, !13027, !13028, !13030}
!13025 = !DILocalVariable(name: "thread", arg: 1, scope: !13017, file: !2308, line: 770, type: !2203)
!13026 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13017, file: !2308, line: 770, type: !2234)
!13027 = !DILocalVariable(name: "timeout", arg: 3, scope: !13017, file: !2308, line: 771, type: !13020)
!13028 = !DILocalVariable(name: "__i", scope: !13029, file: !2308, line: 774, type: !12221)
!13029 = distinct !DILexicalBlock(scope: !13017, file: !2308, line: 774, column: 2)
!13030 = !DILocalVariable(name: "__key", scope: !13029, file: !2308, line: 774, type: !12221)
!13031 = !DILocation(line: 0, scope: !13017)
!13032 = !DILocation(line: 0, scope: !13029)
!13033 = !DILocation(line: 0, scope: !12229, inlinedAt: !13034)
!13034 = distinct !DILocation(line: 774, column: 2, scope: !13029)
!13035 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13036)
!13036 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13034)
!13037 = !DILocation(line: 0, scope: !12238, inlinedAt: !13036)
!13038 = !DILocation(line: 775, column: 3, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13040, file: !2308, line: 774, column: 26)
!13040 = distinct !DILexicalBlock(scope: !13029, file: !2308, line: 774, column: 2)
!13041 = !DILocation(line: 0, scope: !12256, inlinedAt: !13042)
!13042 = distinct !DILocation(line: 774, column: 2, scope: !13040)
!13043 = !DILocation(line: 0, scope: !12264, inlinedAt: !13044)
!13044 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13042)
!13045 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13044)
!13046 = !DILocation(line: 777, column: 1, scope: !13017)
!13047 = distinct !DISubprogram(name: "pend_locked", scope: !2308, file: !2308, line: 760, type: !13018, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13048)
!13048 = !{!13049, !13050, !13051}
!13049 = !DILocalVariable(name: "thread", arg: 1, scope: !13047, file: !2308, line: 760, type: !2203)
!13050 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13047, file: !2308, line: 760, type: !2234)
!13051 = !DILocalVariable(name: "timeout", arg: 3, scope: !13047, file: !2308, line: 761, type: !13020)
!13052 = !DILocation(line: 0, scope: !13047)
!13053 = !DILocation(line: 766, column: 2, scope: !13047)
!13054 = !DILocation(line: 767, column: 2, scope: !13047)
!13055 = !DILocation(line: 768, column: 1, scope: !13047)
!13056 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2308, file: !2308, line: 740, type: !13057, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13059)
!13057 = !DISubroutineType(types: !13058)
!13058 = !{null, !2203, !2234}
!13059 = !{!13060, !13061}
!13060 = !DILocalVariable(name: "thread", arg: 1, scope: !13056, file: !2308, line: 740, type: !2203)
!13061 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13056, file: !2308, line: 740, type: !2234)
!13062 = !DILocation(line: 0, scope: !13056)
!13063 = !DILocation(line: 742, column: 2, scope: !13056)
!13064 = !DILocation(line: 743, column: 2, scope: !13056)
!13065 = !DILocation(line: 747, column: 13, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13056, file: !2308, line: 747, column: 6)
!13067 = !DILocation(line: 747, column: 6, scope: !13056)
!13068 = !DILocation(line: 748, column: 16, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13066, file: !2308, line: 747, column: 22)
!13070 = !DILocation(line: 748, column: 26, scope: !13069)
!13071 = !DILocation(line: 749, column: 28, scope: !13069)
!13072 = !DILocation(line: 0, scope: !12429, inlinedAt: !13073)
!13073 = distinct !DILocation(line: 749, column: 3, scope: !13069)
!13074 = !DILocation(line: 188, column: 2, scope: !12439, inlinedAt: !13073)
!13075 = !DILocation(line: 188, column: 2, scope: !12441, inlinedAt: !13073)
!13076 = !DILocation(line: 0, scope: !12439, inlinedAt: !13073)
!13077 = !DILocation(line: 189, column: 7, scope: !12444, inlinedAt: !13073)
!13078 = !DILocation(line: 189, column: 35, scope: !12444, inlinedAt: !13073)
!13079 = !DILocation(line: 189, column: 7, scope: !12445, inlinedAt: !13073)
!13080 = !DILocation(line: 191, column: 21, scope: !12449, inlinedAt: !13073)
!13081 = !DILocation(line: 190, column: 4, scope: !12449, inlinedAt: !13073)
!13082 = !DILocation(line: 192, column: 4, scope: !12449, inlinedAt: !13073)
!13083 = distinct !{!13083, !13074, !13084}
!13084 = !DILocation(line: 194, column: 2, scope: !12439, inlinedAt: !13073)
!13085 = !DILocation(line: 196, column: 37, scope: !12429, inlinedAt: !13073)
!13086 = !DILocation(line: 196, column: 2, scope: !12429, inlinedAt: !13073)
!13087 = !DILocation(line: 197, column: 1, scope: !12429, inlinedAt: !13073)
!13088 = !DILocation(line: 751, column: 1, scope: !13056)
!13089 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2308, file: !2308, line: 753, type: !13090, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13092)
!13090 = !DISubroutineType(types: !13091)
!13091 = !{null, !2203, !13020}
!13092 = !{!13093, !13094}
!13093 = !DILocalVariable(name: "thread", arg: 1, scope: !13089, file: !2308, line: 753, type: !2203)
!13094 = !DILocalVariable(name: "timeout", arg: 2, scope: !13089, file: !2308, line: 753, type: !13020)
!13095 = !DILocation(line: 0, scope: !13089)
!13096 = !DILocation(line: 755, column: 7, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13089, file: !2308, line: 755, column: 6)
!13098 = !DILocation(line: 755, column: 6, scope: !13089)
!13099 = !DILocation(line: 756, column: 3, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13097, file: !2308, line: 755, column: 41)
!13101 = !DILocation(line: 757, column: 2, scope: !13100)
!13102 = !DILocation(line: 758, column: 1, scope: !13089)
!13103 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11895, file: !11895, line: 47, type: !13090, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13104)
!13104 = !{!13105, !13106}
!13105 = !DILocalVariable(name: "thread", arg: 1, scope: !13103, file: !11895, line: 47, type: !2203)
!13106 = !DILocalVariable(name: "ticks", arg: 2, scope: !13103, file: !11895, line: 47, type: !13020)
!13107 = !DILocation(line: 0, scope: !13103)
!13108 = !DILocation(line: 49, column: 30, scope: !13103)
!13109 = !DILocation(line: 49, column: 2, scope: !13103)
!13110 = !DILocation(line: 50, column: 1, scope: !13103)
!13111 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2308, file: !2308, line: 795, type: !2260, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13112)
!13112 = !{!13113, !13114, !13115, !13117, !13118}
!13113 = !DILocalVariable(name: "timeout", arg: 1, scope: !13111, file: !2308, line: 795, type: !2262)
!13114 = !DILocalVariable(name: "thread", scope: !13111, file: !2308, line: 797, type: !2203)
!13115 = !DILocalVariable(name: "__i", scope: !13116, file: !2308, line: 800, type: !12221)
!13116 = distinct !DILexicalBlock(scope: !13111, file: !2308, line: 800, column: 2)
!13117 = !DILocalVariable(name: "__key", scope: !13116, file: !2308, line: 800, type: !12221)
!13118 = !DILocalVariable(name: "killed", scope: !13119, file: !2308, line: 801, type: !163)
!13119 = distinct !DILexicalBlock(scope: !13120, file: !2308, line: 800, column: 26)
!13120 = distinct !DILexicalBlock(scope: !13116, file: !2308, line: 800, column: 2)
!13121 = !DILocation(line: 0, scope: !13111)
!13122 = !DILocation(line: 797, column: 28, scope: !13111)
!13123 = !DILocation(line: 0, scope: !13116)
!13124 = !DILocation(line: 0, scope: !12229, inlinedAt: !13125)
!13125 = distinct !DILocation(line: 800, column: 2, scope: !13116)
!13126 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13127)
!13127 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13125)
!13128 = !DILocation(line: 0, scope: !12238, inlinedAt: !13127)
!13129 = !DILocation(line: 801, column: 27, scope: !13119)
!13130 = !DILocation(line: 801, column: 32, scope: !13119)
!13131 = !DILocation(line: 801, column: 61, scope: !13119)
!13132 = !DILocation(line: 0, scope: !13119)
!13133 = !DILocation(line: 804, column: 7, scope: !13119)
!13134 = !DILocation(line: 805, column: 21, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !2308, line: 805, column: 8)
!13136 = distinct !DILexicalBlock(scope: !13137, file: !2308, line: 804, column: 16)
!13137 = distinct !DILexicalBlock(scope: !13119, file: !2308, line: 804, column: 7)
!13138 = !DILocation(line: 805, column: 31, scope: !13135)
!13139 = !DILocation(line: 805, column: 8, scope: !13136)
!13140 = !DILocation(line: 806, column: 5, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13135, file: !2308, line: 805, column: 40)
!13142 = !DILocation(line: 807, column: 4, scope: !13141)
!13143 = !DILocation(line: 808, column: 4, scope: !13136)
!13144 = !DILocation(line: 809, column: 4, scope: !13136)
!13145 = !DILocation(line: 810, column: 4, scope: !13136)
!13146 = !DILocation(line: 811, column: 3, scope: !13136)
!13147 = !DILocation(line: 0, scope: !12256, inlinedAt: !13148)
!13148 = distinct !DILocation(line: 800, column: 2, scope: !13120)
!13149 = !DILocation(line: 0, scope: !12264, inlinedAt: !13150)
!13150 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13148)
!13151 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13150)
!13152 = !DILocation(line: 813, column: 1, scope: !13111)
!13153 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2308, file: !2308, line: 779, type: !12187, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13154)
!13154 = !{!13155}
!13155 = !DILocalVariable(name: "thread", arg: 1, scope: !13153, file: !2308, line: 779, type: !2203)
!13156 = !DILocation(line: 0, scope: !13153)
!13157 = !DILocation(line: 781, column: 2, scope: !13153)
!13158 = !DILocation(line: 782, column: 2, scope: !13153)
!13159 = !DILocation(line: 783, column: 15, scope: !13153)
!13160 = !DILocation(line: 783, column: 25, scope: !13153)
!13161 = !DILocation(line: 784, column: 1, scope: !13153)
!13162 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11501, file: !11501, line: 165, type: !12187, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13163)
!13163 = !{!13164}
!13164 = !DILocalVariable(name: "thread", arg: 1, scope: !13162, file: !11501, line: 165, type: !2203)
!13165 = !DILocation(line: 0, scope: !13162)
!13166 = !DILocation(line: 167, column: 15, scope: !13162)
!13167 = !DILocation(line: 167, column: 28, scope: !13162)
!13168 = !DILocation(line: 168, column: 1, scope: !13162)
!13169 = distinct !DISubprogram(name: "unready_thread", scope: !2308, file: !2308, line: 731, type: !12187, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13170)
!13170 = !{!13171}
!13171 = !DILocalVariable(name: "thread", arg: 1, scope: !13169, file: !2308, line: 731, type: !2203)
!13172 = !DILocation(line: 0, scope: !13169)
!13173 = !DILocation(line: 733, column: 6, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13169, file: !2308, line: 733, column: 6)
!13175 = !DILocation(line: 733, column: 6, scope: !13169)
!13176 = !DILocation(line: 0, scope: !12398, inlinedAt: !13177)
!13177 = distinct !DILocation(line: 734, column: 3, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13174, file: !2308, line: 733, column: 34)
!13179 = !DILocation(line: 266, column: 15, scope: !12398, inlinedAt: !13177)
!13180 = !DILocation(line: 266, column: 28, scope: !12398, inlinedAt: !13177)
!13181 = !DILocation(line: 0, scope: !12406, inlinedAt: !13182)
!13182 = distinct !DILocation(line: 268, column: 3, scope: !12410, inlinedAt: !13177)
!13183 = !DILocation(line: 234, column: 2, scope: !12406, inlinedAt: !13182)
!13184 = !DILocation(line: 735, column: 2, scope: !13178)
!13185 = !DILocation(line: 736, column: 25, scope: !13169)
!13186 = !DILocation(line: 736, column: 22, scope: !13169)
!13187 = !DILocation(line: 736, column: 2, scope: !13169)
!13188 = !DILocation(line: 737, column: 1, scope: !13169)
!13189 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11501, file: !11501, line: 160, type: !12187, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13190)
!13190 = !{!13191}
!13191 = !DILocalVariable(name: "thread", arg: 1, scope: !13189, file: !11501, line: 160, type: !2203)
!13192 = !DILocation(line: 0, scope: !13189)
!13193 = !DILocation(line: 162, column: 15, scope: !13189)
!13194 = !DILocation(line: 162, column: 28, scope: !13189)
!13195 = !DILocation(line: 163, column: 1, scope: !13189)
!13196 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2308, file: !2308, line: 786, type: !12187, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13197)
!13197 = !{!13198, !13199, !13201}
!13198 = !DILocalVariable(name: "thread", arg: 1, scope: !13196, file: !2308, line: 786, type: !2203)
!13199 = !DILocalVariable(name: "__i", scope: !13200, file: !2308, line: 788, type: !12221)
!13200 = distinct !DILexicalBlock(scope: !13196, file: !2308, line: 788, column: 2)
!13201 = !DILocalVariable(name: "__key", scope: !13200, file: !2308, line: 788, type: !12221)
!13202 = !DILocation(line: 0, scope: !13196)
!13203 = !DILocation(line: 0, scope: !13200)
!13204 = !DILocation(line: 0, scope: !12229, inlinedAt: !13205)
!13205 = distinct !DILocation(line: 788, column: 2, scope: !13200)
!13206 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13207)
!13207 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13205)
!13208 = !DILocation(line: 0, scope: !12238, inlinedAt: !13207)
!13209 = !DILocation(line: 789, column: 3, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !2308, line: 788, column: 26)
!13211 = distinct !DILexicalBlock(scope: !13200, file: !2308, line: 788, column: 2)
!13212 = !DILocation(line: 0, scope: !12256, inlinedAt: !13213)
!13213 = distinct !DILocation(line: 788, column: 2, scope: !13211)
!13214 = !DILocation(line: 0, scope: !12264, inlinedAt: !13215)
!13215 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13213)
!13216 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13215)
!13217 = !DILocation(line: 791, column: 1, scope: !13196)
!13218 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2308, file: !2308, line: 816, type: !13219, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!103, !106, !2234, !13020}
!13221 = !{!13222, !13223, !13224, !13225, !13226, !13228}
!13222 = !DILocalVariable(name: "key", arg: 1, scope: !13218, file: !2308, line: 816, type: !106)
!13223 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13218, file: !2308, line: 816, type: !2234)
!13224 = !DILocalVariable(name: "timeout", arg: 3, scope: !13218, file: !2308, line: 816, type: !13020)
!13225 = !DILocalVariable(name: "ret", scope: !13218, file: !2308, line: 828, type: !103)
!13226 = !DILocalVariable(name: "__i", scope: !13227, file: !2308, line: 829, type: !12221)
!13227 = distinct !DILexicalBlock(scope: !13218, file: !2308, line: 829, column: 2)
!13228 = !DILocalVariable(name: "__key", scope: !13227, file: !2308, line: 829, type: !12221)
!13229 = !DILocation(line: 0, scope: !13218)
!13230 = !DILocation(line: 823, column: 14, scope: !13218)
!13231 = !DILocation(line: 823, column: 2, scope: !13218)
!13232 = !DILocation(line: 826, column: 20, scope: !13218)
!13233 = !DILocation(line: 826, column: 18, scope: !13218)
!13234 = !DILocation(line: 828, column: 12, scope: !13218)
!13235 = !DILocation(line: 0, scope: !13227)
!13236 = !DILocation(line: 0, scope: !12229, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 829, column: 2, scope: !13227)
!13238 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13239)
!13239 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13237)
!13240 = !DILocation(line: 0, scope: !12238, inlinedAt: !13239)
!13241 = !DILocation(line: 830, column: 7, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !2308, line: 830, column: 7)
!13243 = distinct !DILexicalBlock(scope: !13244, file: !2308, line: 829, column: 26)
!13244 = distinct !DILexicalBlock(scope: !13227, file: !2308, line: 829, column: 2)
!13245 = !DILocation(line: 830, column: 26, scope: !13242)
!13246 = !DILocation(line: 830, column: 23, scope: !13242)
!13247 = !DILocation(line: 830, column: 7, scope: !13243)
!13248 = !DILocation(line: 831, column: 20, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13242, file: !2308, line: 830, column: 36)
!13250 = !DILocation(line: 832, column: 3, scope: !13249)
!13251 = !DILocation(line: 0, scope: !12256, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 829, column: 2, scope: !13244)
!13253 = !DILocation(line: 0, scope: !12264, inlinedAt: !13254)
!13254 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13252)
!13255 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13254)
!13256 = !DILocation(line: 834, column: 2, scope: !13218)
!13257 = distinct !DISubprogram(name: "z_pend_curr", scope: !2308, file: !2308, line: 840, type: !13258, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13260)
!13258 = !DISubroutineType(types: !13259)
!13259 = !{!103, !12232, !12221, !2234, !13020}
!13260 = !{!13261, !13262, !13263, !13264}
!13261 = !DILocalVariable(name: "lock", arg: 1, scope: !13257, file: !2308, line: 840, type: !12232)
!13262 = !DILocalVariable(name: "key", arg: 2, scope: !13257, file: !2308, line: 840, type: !12221)
!13263 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13257, file: !2308, line: 841, type: !2234)
!13264 = !DILocalVariable(name: "timeout", arg: 4, scope: !13257, file: !2308, line: 841, type: !13020)
!13265 = !DILocation(line: 0, scope: !13257)
!13266 = !DILocation(line: 844, column: 20, scope: !13257)
!13267 = !DILocation(line: 844, column: 18, scope: !13257)
!13268 = !DILocation(line: 0, scope: !12229, inlinedAt: !13269)
!13269 = distinct !DILocation(line: 856, column: 9, scope: !13257)
!13270 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13271)
!13271 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13269)
!13272 = !DILocation(line: 0, scope: !12238, inlinedAt: !13271)
!13273 = !DILocation(line: 857, column: 14, scope: !13257)
!13274 = !DILocation(line: 857, column: 2, scope: !13257)
!13275 = !DILocation(line: 0, scope: !12840, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 859, column: 9, scope: !13257)
!13277 = !DILocation(line: 196, column: 9, scope: !12840, inlinedAt: !13276)
!13278 = !DILocation(line: 859, column: 2, scope: !13257)
!13279 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2308, file: !2308, line: 862, type: !13280, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13282)
!13280 = !DISubroutineType(types: !13281)
!13281 = !{!2203, !2234}
!13282 = !{!13283, !13284, !13285, !13287}
!13283 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13279, file: !2308, line: 862, type: !2234)
!13284 = !DILocalVariable(name: "thread", scope: !13279, file: !2308, line: 864, type: !2203)
!13285 = !DILocalVariable(name: "__i", scope: !13286, file: !2308, line: 866, type: !12221)
!13286 = distinct !DILexicalBlock(scope: !13279, file: !2308, line: 866, column: 2)
!13287 = !DILocalVariable(name: "__key", scope: !13286, file: !2308, line: 866, type: !12221)
!13288 = !DILocation(line: 0, scope: !13279)
!13289 = !DILocation(line: 0, scope: !13286)
!13290 = !DILocation(line: 0, scope: !12229, inlinedAt: !13291)
!13291 = distinct !DILocation(line: 866, column: 2, scope: !13286)
!13292 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13291)
!13294 = !DILocation(line: 0, scope: !12238, inlinedAt: !13293)
!13295 = !DILocation(line: 867, column: 12, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13297, file: !2308, line: 866, column: 26)
!13297 = distinct !DILexicalBlock(scope: !13286, file: !2308, line: 866, column: 2)
!13298 = !DILocation(line: 869, column: 14, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13296, file: !2308, line: 869, column: 7)
!13300 = !DILocation(line: 869, column: 7, scope: !13296)
!13301 = !DILocation(line: 870, column: 4, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13299, file: !2308, line: 869, column: 23)
!13303 = !DILocation(line: 871, column: 3, scope: !13302)
!13304 = !DILocation(line: 0, scope: !12256, inlinedAt: !13305)
!13305 = distinct !DILocation(line: 866, column: 2, scope: !13297)
!13306 = !DILocation(line: 0, scope: !12264, inlinedAt: !13307)
!13307 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13305)
!13308 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13307)
!13309 = !DILocation(line: 874, column: 2, scope: !13279)
!13310 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2308, file: !2308, line: 877, type: !13280, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13311)
!13311 = !{!13312, !13313, !13314, !13316}
!13312 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13310, file: !2308, line: 877, type: !2234)
!13313 = !DILocalVariable(name: "thread", scope: !13310, file: !2308, line: 879, type: !2203)
!13314 = !DILocalVariable(name: "__i", scope: !13315, file: !2308, line: 881, type: !12221)
!13315 = distinct !DILexicalBlock(scope: !13310, file: !2308, line: 881, column: 2)
!13316 = !DILocalVariable(name: "__key", scope: !13315, file: !2308, line: 881, type: !12221)
!13317 = !DILocation(line: 0, scope: !13310)
!13318 = !DILocation(line: 0, scope: !13315)
!13319 = !DILocation(line: 0, scope: !12229, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 881, column: 2, scope: !13315)
!13321 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13322)
!13322 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13320)
!13323 = !DILocation(line: 0, scope: !12238, inlinedAt: !13322)
!13324 = !DILocation(line: 882, column: 12, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13326, file: !2308, line: 881, column: 26)
!13326 = distinct !DILexicalBlock(scope: !13315, file: !2308, line: 881, column: 2)
!13327 = !DILocation(line: 884, column: 14, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13325, file: !2308, line: 884, column: 7)
!13329 = !DILocation(line: 884, column: 7, scope: !13325)
!13330 = !DILocation(line: 885, column: 4, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13328, file: !2308, line: 884, column: 23)
!13332 = !DILocation(line: 886, column: 10, scope: !13331)
!13333 = !DILocation(line: 887, column: 3, scope: !13331)
!13334 = !DILocation(line: 0, scope: !12256, inlinedAt: !13335)
!13335 = distinct !DILocation(line: 881, column: 2, scope: !13326)
!13336 = !DILocation(line: 0, scope: !12264, inlinedAt: !13337)
!13337 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13335)
!13338 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13337)
!13339 = !DILocation(line: 890, column: 2, scope: !13310)
!13340 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2308, file: !2308, line: 893, type: !12187, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13341)
!13341 = !{!13342}
!13342 = !DILocalVariable(name: "thread", arg: 1, scope: !13340, file: !2308, line: 893, type: !2203)
!13343 = !DILocation(line: 0, scope: !13340)
!13344 = !DILocation(line: 0, scope: !13196, inlinedAt: !13345)
!13345 = distinct !DILocation(line: 895, column: 2, scope: !13340)
!13346 = !DILocation(line: 0, scope: !13200, inlinedAt: !13345)
!13347 = !DILocation(line: 0, scope: !12229, inlinedAt: !13348)
!13348 = distinct !DILocation(line: 788, column: 2, scope: !13200, inlinedAt: !13345)
!13349 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13348)
!13351 = !DILocation(line: 0, scope: !12238, inlinedAt: !13350)
!13352 = !DILocation(line: 789, column: 3, scope: !13210, inlinedAt: !13345)
!13353 = !DILocation(line: 0, scope: !12256, inlinedAt: !13354)
!13354 = distinct !DILocation(line: 788, column: 2, scope: !13211, inlinedAt: !13345)
!13355 = !DILocation(line: 0, scope: !12264, inlinedAt: !13356)
!13356 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13354)
!13357 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13356)
!13358 = !DILocation(line: 896, column: 8, scope: !13340)
!13359 = !DILocation(line: 897, column: 1, scope: !13340)
!13360 = distinct !DISubprogram(name: "z_set_prio", scope: !2308, file: !2308, line: 902, type: !12549, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13361)
!13361 = !{!13362, !13363, !13364, !13365, !13367}
!13362 = !DILocalVariable(name: "thread", arg: 1, scope: !13360, file: !2308, line: 902, type: !2203)
!13363 = !DILocalVariable(name: "prio", arg: 2, scope: !13360, file: !2308, line: 902, type: !103)
!13364 = !DILocalVariable(name: "need_sched", scope: !13360, file: !2308, line: 904, type: !163)
!13365 = !DILocalVariable(name: "__i", scope: !13366, file: !2308, line: 906, type: !12221)
!13366 = distinct !DILexicalBlock(scope: !13360, file: !2308, line: 906, column: 2)
!13367 = !DILocalVariable(name: "__key", scope: !13366, file: !2308, line: 906, type: !12221)
!13368 = !DILocation(line: 0, scope: !13360)
!13369 = !DILocation(line: 0, scope: !13366)
!13370 = !DILocation(line: 0, scope: !12229, inlinedAt: !13371)
!13371 = distinct !DILocation(line: 906, column: 2, scope: !13366)
!13372 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13373)
!13373 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13371)
!13374 = !DILocation(line: 0, scope: !12238, inlinedAt: !13373)
!13375 = !DILocation(line: 907, column: 16, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !2308, line: 906, column: 26)
!13377 = distinct !DILexicalBlock(scope: !13366, file: !2308, line: 906, column: 2)
!13378 = !DILocation(line: 909, column: 7, scope: !13376)
!13379 = !DILocation(line: 0, scope: !12398, inlinedAt: !13380)
!13380 = distinct !DILocation(line: 912, column: 5, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !2308, line: 911, column: 63)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !2308, line: 911, column: 8)
!13383 = distinct !DILexicalBlock(scope: !13384, file: !2308, line: 909, column: 19)
!13384 = distinct !DILexicalBlock(scope: !13376, file: !2308, line: 909, column: 7)
!13385 = !DILocation(line: 266, column: 28, scope: !12398, inlinedAt: !13380)
!13386 = !DILocation(line: 0, scope: !12406, inlinedAt: !13387)
!13387 = distinct !DILocation(line: 268, column: 3, scope: !12410, inlinedAt: !13380)
!13388 = !DILocation(line: 234, column: 2, scope: !12406, inlinedAt: !13387)
!13389 = !DILocation(line: 913, column: 23, scope: !13381)
!13390 = !DILocation(line: 0, scope: !12415, inlinedAt: !13391)
!13391 = distinct !DILocation(line: 914, column: 5, scope: !13381)
!13392 = !DILocation(line: 252, column: 28, scope: !12415, inlinedAt: !13391)
!13393 = !DILocation(line: 0, scope: !12422, inlinedAt: !13394)
!13394 = distinct !DILocation(line: 254, column: 3, scope: !12426, inlinedAt: !13391)
!13395 = !DILocation(line: 0, scope: !12429, inlinedAt: !13396)
!13396 = distinct !DILocation(line: 229, column: 2, scope: !12422, inlinedAt: !13394)
!13397 = !DILocation(line: 188, column: 2, scope: !12439, inlinedAt: !13396)
!13398 = !DILocation(line: 188, column: 2, scope: !12441, inlinedAt: !13396)
!13399 = !DILocation(line: 0, scope: !12439, inlinedAt: !13396)
!13400 = !DILocation(line: 189, column: 7, scope: !12444, inlinedAt: !13396)
!13401 = !DILocation(line: 189, column: 35, scope: !12444, inlinedAt: !13396)
!13402 = !DILocation(line: 189, column: 7, scope: !12445, inlinedAt: !13396)
!13403 = !DILocation(line: 190, column: 4, scope: !12449, inlinedAt: !13396)
!13404 = !DILocation(line: 192, column: 4, scope: !12449, inlinedAt: !13396)
!13405 = distinct !{!13405, !13397, !13406}
!13406 = !DILocation(line: 194, column: 2, scope: !12439, inlinedAt: !13396)
!13407 = !DILocation(line: 196, column: 2, scope: !12429, inlinedAt: !13396)
!13408 = !DILocation(line: 197, column: 1, scope: !12429, inlinedAt: !13396)
!13409 = !DILocation(line: 918, column: 4, scope: !13383)
!13410 = !DILocation(line: 919, column: 3, scope: !13383)
!13411 = !DILocation(line: 920, column: 22, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13384, file: !2308, line: 919, column: 10)
!13413 = !DILocation(line: 0, scope: !12256, inlinedAt: !13414)
!13414 = distinct !DILocation(line: 906, column: 2, scope: !13377)
!13415 = !DILocation(line: 0, scope: !12264, inlinedAt: !13416)
!13416 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13414)
!13417 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13416)
!13418 = !DILocation(line: 926, column: 2, scope: !13360)
!13419 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2308, file: !2308, line: 929, type: !13420, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13422)
!13420 = !DISubroutineType(types: !13421)
!13421 = !{null, !2203, !103}
!13422 = !{!13423, !13424, !13425}
!13423 = !DILocalVariable(name: "thread", arg: 1, scope: !13419, file: !2308, line: 929, type: !2203)
!13424 = !DILocalVariable(name: "prio", arg: 2, scope: !13419, file: !2308, line: 929, type: !103)
!13425 = !DILocalVariable(name: "need_sched", scope: !13419, file: !2308, line: 931, type: !163)
!13426 = !DILocation(line: 0, scope: !13419)
!13427 = !DILocation(line: 931, column: 20, scope: !13419)
!13428 = !DILocation(line: 935, column: 17, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13419, file: !2308, line: 935, column: 6)
!13430 = !DILocation(line: 935, column: 20, scope: !13429)
!13431 = !DILocation(line: 935, column: 35, scope: !13429)
!13432 = !DILocation(line: 935, column: 48, scope: !13429)
!13433 = !DILocation(line: 935, column: 6, scope: !13419)
!13434 = !DILocation(line: 936, column: 3, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13429, file: !2308, line: 935, column: 55)
!13436 = !DILocation(line: 937, column: 2, scope: !13435)
!13437 = !DILocation(line: 938, column: 1, scope: !13419)
!13438 = distinct !DISubprogram(name: "k_sched_lock", scope: !2308, file: !2308, line: 987, type: !2917, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13439)
!13439 = !{!13440, !13442}
!13440 = !DILocalVariable(name: "__i", scope: !13441, file: !2308, line: 989, type: !12221)
!13441 = distinct !DILexicalBlock(scope: !13438, file: !2308, line: 989, column: 2)
!13442 = !DILocalVariable(name: "__key", scope: !13441, file: !2308, line: 989, type: !12221)
!13443 = !DILocation(line: 0, scope: !13441)
!13444 = !DILocation(line: 0, scope: !12229, inlinedAt: !13445)
!13445 = distinct !DILocation(line: 989, column: 2, scope: !13441)
!13446 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13447)
!13447 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13445)
!13448 = !DILocation(line: 0, scope: !12238, inlinedAt: !13447)
!13449 = !DILocation(line: 992, column: 3, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !2308, line: 989, column: 26)
!13451 = distinct !DILexicalBlock(scope: !13441, file: !2308, line: 989, column: 2)
!13452 = !DILocation(line: 0, scope: !12256, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 989, column: 2, scope: !13451)
!13454 = !DILocation(line: 0, scope: !12264, inlinedAt: !13455)
!13455 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13453)
!13456 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13455)
!13457 = !DILocation(line: 994, column: 1, scope: !13438)
!13458 = distinct !DISubprogram(name: "z_sched_lock", scope: !11501, file: !11501, line: 251, type: !2917, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13459 = !DILocation(line: 256, column: 4, scope: !13458)
!13460 = !DILocation(line: 256, column: 19, scope: !13458)
!13461 = !DILocation(line: 256, column: 2, scope: !13458)
!13462 = !DILocation(line: 258, column: 2, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13458, file: !11501, line: 258, column: 2)
!13464 = !{i64 2155185842}
!13465 = !DILocation(line: 259, column: 1, scope: !13458)
!13466 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2308, file: !2308, line: 996, type: !2917, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13467)
!13467 = !{!13468, !13470}
!13468 = !DILocalVariable(name: "__i", scope: !13469, file: !2308, line: 998, type: !12221)
!13469 = distinct !DILexicalBlock(scope: !13466, file: !2308, line: 998, column: 2)
!13470 = !DILocalVariable(name: "__key", scope: !13469, file: !2308, line: 998, type: !12221)
!13471 = !DILocation(line: 0, scope: !13469)
!13472 = !DILocation(line: 0, scope: !12229, inlinedAt: !13473)
!13473 = distinct !DILocation(line: 998, column: 2, scope: !13469)
!13474 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13473)
!13476 = !DILocation(line: 0, scope: !12238, inlinedAt: !13475)
!13477 = !DILocation(line: 1002, column: 5, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !2308, line: 998, column: 26)
!13479 = distinct !DILexicalBlock(scope: !13469, file: !2308, line: 998, column: 2)
!13480 = !DILocation(line: 1002, column: 20, scope: !13478)
!13481 = !DILocation(line: 1002, column: 3, scope: !13478)
!13482 = !DILocation(line: 1003, column: 3, scope: !13478)
!13483 = !DILocation(line: 0, scope: !12256, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 998, column: 2, scope: !13479)
!13485 = !DILocation(line: 0, scope: !12264, inlinedAt: !13486)
!13486 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13484)
!13487 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13486)
!13488 = !DILocation(line: 1011, column: 2, scope: !13466)
!13489 = !DILocation(line: 1012, column: 1, scope: !13466)
!13490 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2308, file: !2308, line: 1014, type: !12537, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13491 = !DILocation(line: 1028, column: 25, scope: !13490)
!13492 = !DILocation(line: 1028, column: 2, scope: !13490)
!13493 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2308, file: !2308, line: 1155, type: !13494, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13496)
!13494 = !DISubroutineType(types: !13495)
!13495 = !{!163, !2232, !2232}
!13496 = !{!13497, !13498, !13499, !13500, !13501}
!13497 = !DILocalVariable(name: "a", arg: 1, scope: !13493, file: !2308, line: 1155, type: !2232)
!13498 = !DILocalVariable(name: "b", arg: 2, scope: !13493, file: !2308, line: 1155, type: !2232)
!13499 = !DILocalVariable(name: "thread_a", scope: !13493, file: !2308, line: 1157, type: !2203)
!13500 = !DILocalVariable(name: "thread_b", scope: !13493, file: !2308, line: 1157, type: !2203)
!13501 = !DILocalVariable(name: "cmp", scope: !13493, file: !2308, line: 1158, type: !748)
!13502 = !DILocation(line: 0, scope: !13493)
!13503 = !DILocation(line: 1160, column: 13, scope: !13493)
!13504 = !DILocation(line: 1161, column: 13, scope: !13493)
!13505 = !DILocation(line: 1163, column: 8, scope: !13493)
!13506 = !DILocation(line: 1165, column: 10, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13493, file: !2308, line: 1165, column: 6)
!13508 = !DILocation(line: 1165, column: 6, scope: !13493)
!13509 = !DILocation(line: 1167, column: 17, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13507, file: !2308, line: 1167, column: 13)
!13511 = !DILocation(line: 1167, column: 13, scope: !13507)
!13512 = !DILocation(line: 1170, column: 25, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13510, file: !2308, line: 1169, column: 9)
!13514 = !DILocation(line: 1170, column: 52, scope: !13513)
!13515 = !DILocation(line: 1170, column: 35, scope: !13513)
!13516 = !DILocation(line: 1170, column: 3, scope: !13513)
!13517 = !DILocation(line: 0, scope: !13507)
!13518 = !DILocation(line: 1173, column: 1, scope: !13493)
!13519 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2308, file: !2308, line: 1175, type: !13520, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13535)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{null, !13522, !2203}
!13522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13523, size: 32)
!13523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13524, line: 37, size: 128, elements: !13525)
!13524 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13525 = !{!13526, !13534}
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13523, file: !13524, line: 38, baseType: !13527, size: 96)
!13527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !393, line: 83, size: 96, elements: !13528)
!13528 = !{!13529, !13530, !13533}
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13527, file: !393, line: 84, baseType: !2232, size: 32)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13527, file: !393, line: 85, baseType: !13531, size: 32, offset: 32)
!13531 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !393, line: 81, baseType: !13532)
!13532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13494, size: 32)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13527, file: !393, line: 86, baseType: !103, size: 32, offset: 64)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13523, file: !13524, line: 39, baseType: !103, size: 32, offset: 96)
!13535 = !{!13536, !13537, !13538, !13539, !13548}
!13536 = !DILocalVariable(name: "pq", arg: 1, scope: !13519, file: !2308, line: 1175, type: !13522)
!13537 = !DILocalVariable(name: "thread", arg: 2, scope: !13519, file: !2308, line: 1175, type: !2203)
!13538 = !DILocalVariable(name: "t", scope: !13519, file: !2308, line: 1177, type: !2203)
!13539 = !DILocalVariable(name: "__f", scope: !13540, file: !2308, line: 1190, type: !13543)
!13540 = distinct !DILexicalBlock(scope: !13541, file: !2308, line: 1190, column: 3)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !2308, line: 1189, column: 27)
!13542 = distinct !DILexicalBlock(scope: !13519, file: !2308, line: 1189, column: 6)
!13543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !393, line: 155, size: 96, elements: !13544)
!13544 = !{!13545, !13546, !13547}
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13543, file: !393, line: 156, baseType: !2303, size: 32)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13543, file: !393, line: 157, baseType: !1853, size: 32, offset: 32)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13543, file: !393, line: 158, baseType: !748, size: 32, offset: 64)
!13548 = !DILocalVariable(name: "n", scope: !13549, file: !2308, line: 1190, type: !2232)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !2308, line: 1190, column: 3)
!13550 = distinct !DILexicalBlock(scope: !13540, file: !2308, line: 1190, column: 3)
!13551 = !DILocation(line: 0, scope: !13519)
!13552 = !DILocation(line: 1181, column: 31, scope: !13519)
!13553 = !DILocation(line: 1181, column: 45, scope: !13519)
!13554 = !DILocation(line: 1181, column: 15, scope: !13519)
!13555 = !DILocation(line: 1181, column: 25, scope: !13519)
!13556 = !DILocation(line: 1189, column: 11, scope: !13542)
!13557 = !DILocation(line: 1189, column: 7, scope: !13542)
!13558 = !DILocation(line: 1189, column: 6, scope: !13519)
!13559 = !DILocation(line: 1190, column: 3, scope: !13540)
!13560 = !DILocation(line: 1190, column: 3, scope: !13549)
!13561 = !DILocation(line: 0, scope: !13549)
!13562 = !DILocation(line: 1190, column: 3, scope: !13550)
!13563 = !DILocation(line: 1193, column: 2, scope: !13541)
!13564 = !DILocation(line: 1191, column: 42, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13550, file: !2308, line: 1190, column: 54)
!13566 = !DILocation(line: 1191, column: 12, scope: !13565)
!13567 = !DILocation(line: 1191, column: 22, scope: !13565)
!13568 = distinct !{!13568, !13559, !13569}
!13569 = !DILocation(line: 1192, column: 3, scope: !13540)
!13570 = !DILocation(line: 1195, column: 17, scope: !13519)
!13571 = !DILocation(line: 1195, column: 37, scope: !13519)
!13572 = !DILocation(line: 1195, column: 2, scope: !13519)
!13573 = !DILocation(line: 1196, column: 1, scope: !13519)
!13574 = !DISubprogram(name: "z_rb_foreach_next", scope: !393, file: !393, line: 176, type: !13575, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{!2232, !13577, !13578}
!13577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13527, size: 32)
!13578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13543, size: 32)
!13579 = !DISubprogram(name: "rb_insert", scope: !393, file: !393, line: 105, type: !13580, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{null, !13577, !2232}
!13582 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2308, file: !2308, line: 1198, type: !13520, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13583)
!13583 = !{!13584, !13585}
!13584 = !DILocalVariable(name: "pq", arg: 1, scope: !13582, file: !2308, line: 1198, type: !13522)
!13585 = !DILocalVariable(name: "thread", arg: 2, scope: !13582, file: !2308, line: 1198, type: !2203)
!13586 = !DILocation(line: 0, scope: !13582)
!13587 = !DILocation(line: 1202, column: 17, scope: !13582)
!13588 = !DILocation(line: 1202, column: 37, scope: !13582)
!13589 = !DILocation(line: 1202, column: 2, scope: !13582)
!13590 = !DILocation(line: 1204, column: 16, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13582, file: !2308, line: 1204, column: 6)
!13592 = !DILocation(line: 1204, column: 7, scope: !13591)
!13593 = !DILocation(line: 1204, column: 6, scope: !13582)
!13594 = !DILocation(line: 1205, column: 7, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13591, file: !2308, line: 1204, column: 22)
!13596 = !DILocation(line: 1205, column: 22, scope: !13595)
!13597 = !DILocation(line: 1206, column: 2, scope: !13595)
!13598 = !DILocation(line: 1207, column: 1, scope: !13582)
!13599 = !DISubprogram(name: "rb_remove", scope: !393, file: !393, line: 110, type: !13580, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!13600 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2308, file: !2308, line: 1209, type: !13601, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13603)
!13601 = !DISubroutineType(types: !13602)
!13602 = !{!2203, !13522}
!13603 = !{!13604, !13605, !13606}
!13604 = !DILocalVariable(name: "pq", arg: 1, scope: !13600, file: !2308, line: 1209, type: !13522)
!13605 = !DILocalVariable(name: "thread", scope: !13600, file: !2308, line: 1211, type: !2203)
!13606 = !DILocalVariable(name: "n", scope: !13600, file: !2308, line: 1212, type: !2232)
!13607 = !DILocation(line: 0, scope: !13600)
!13608 = !DILocation(line: 1212, column: 37, scope: !13600)
!13609 = !DILocation(line: 1212, column: 21, scope: !13600)
!13610 = !DILocation(line: 1217, column: 2, scope: !13600)
!13611 = distinct !DISubprogram(name: "rb_get_min", scope: !393, file: !393, line: 115, type: !13612, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13614)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!2232, !13577}
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "tree", arg: 1, scope: !13611, file: !393, line: 115, type: !13577)
!13616 = !DILocation(line: 0, scope: !13611)
!13617 = !DILocation(line: 117, column: 9, scope: !13611)
!13618 = !DILocation(line: 117, column: 2, scope: !13611)
!13619 = !DISubprogram(name: "z_rb_get_minmax", scope: !393, file: !393, line: 100, type: !13620, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !478)
!13620 = !DISubroutineType(types: !13621)
!13621 = !{!2232, !13577, !160}
!13622 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2308, file: !2308, line: 1246, type: !13623, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13633)
!13623 = !DISubroutineType(types: !13624)
!13624 = !{!2203, !13625}
!13625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13626, size: 32)
!13626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13524, line: 53, size: 2080, elements: !13627)
!13627 = !{!13628, !13632}
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13626, file: !13524, line: 54, baseType: !13629, size: 2048)
!13629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2239, size: 2048, elements: !13630)
!13630 = !{!13631}
!13631 = !DISubrange(count: 32)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13626, file: !13524, line: 55, baseType: !32, size: 32, offset: 2048)
!13633 = !{!13634, !13635, !13636, !13637}
!13634 = !DILocalVariable(name: "pq", arg: 1, scope: !13622, file: !2308, line: 1246, type: !13625)
!13635 = !DILocalVariable(name: "thread", scope: !13622, file: !2308, line: 1252, type: !2203)
!13636 = !DILocalVariable(name: "l", scope: !13622, file: !2308, line: 1253, type: !12432)
!13637 = !DILocalVariable(name: "n", scope: !13622, file: !2308, line: 1254, type: !2304)
!13638 = !DILocation(line: 0, scope: !13622)
!13639 = !DILocation(line: 1248, column: 11, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13622, file: !2308, line: 1248, column: 6)
!13641 = !DILocation(line: 1248, column: 7, scope: !13640)
!13642 = !DILocation(line: 1248, column: 6, scope: !13622)
!13643 = !DILocation(line: 1253, column: 31, scope: !13622)
!13644 = !DILocation(line: 1253, column: 20, scope: !13622)
!13645 = !DILocation(line: 1254, column: 19, scope: !13622)
!13646 = !DILocation(line: 1260, column: 1, scope: !13622)
!13647 = distinct !DISubprogram(name: "z_unpend_all", scope: !2308, file: !2308, line: 1262, type: !13648, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13650)
!13648 = !DISubroutineType(types: !13649)
!13649 = !{!103, !2234}
!13650 = !{!13651, !13652, !13653}
!13651 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13647, file: !2308, line: 1262, type: !2234)
!13652 = !DILocalVariable(name: "need_sched", scope: !13647, file: !2308, line: 1264, type: !103)
!13653 = !DILocalVariable(name: "thread", scope: !13647, file: !2308, line: 1265, type: !2203)
!13654 = !DILocation(line: 0, scope: !13647)
!13655 = !DILocation(line: 1267, column: 19, scope: !13647)
!13656 = !DILocation(line: 1267, column: 41, scope: !13647)
!13657 = !DILocation(line: 1267, column: 2, scope: !13647)
!13658 = !DILocation(line: 1268, column: 3, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13647, file: !2308, line: 1267, column: 50)
!13660 = !DILocation(line: 1269, column: 3, scope: !13659)
!13661 = distinct !{!13661, !13657, !13662}
!13662 = !DILocation(line: 1271, column: 2, scope: !13647)
!13663 = !DILocation(line: 1273, column: 2, scope: !13647)
!13664 = distinct !DISubprogram(name: "z_waitq_head", scope: !11827, file: !11827, line: 52, type: !13280, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13665)
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "w", arg: 1, scope: !13664, file: !11827, line: 52, type: !2234)
!13667 = !DILocation(line: 0, scope: !13664)
!13668 = !DILocation(line: 54, column: 52, scope: !13664)
!13669 = !DILocation(line: 54, column: 28, scope: !13664)
!13670 = !DILocation(line: 54, column: 9, scope: !13664)
!13671 = !DILocation(line: 54, column: 2, scope: !13664)
!13672 = distinct !DISubprogram(name: "init_ready_q", scope: !2308, file: !2308, line: 1276, type: !13673, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13680)
!13673 = !DISubroutineType(types: !13674)
!13674 = !{null, !13675}
!13675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13676, size: 32)
!13676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !403, line: 83, size: 96, elements: !13677)
!13677 = !{!13678, !13679}
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13676, file: !403, line: 86, baseType: !2203, size: 32)
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13676, file: !403, line: 90, baseType: !2239, size: 64, offset: 32)
!13680 = !{!13681}
!13681 = !DILocalVariable(name: "rq", arg: 1, scope: !13672, file: !2308, line: 1276, type: !13675)
!13682 = !DILocation(line: 0, scope: !13672)
!13683 = !DILocation(line: 1289, column: 22, scope: !13672)
!13684 = !DILocation(line: 1289, column: 2, scope: !13672)
!13685 = !DILocation(line: 1291, column: 1, scope: !13672)
!13686 = distinct !DISubprogram(name: "sys_dlist_init", scope: !377, file: !377, line: 197, type: !13687, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{null, !12432}
!13689 = !{!13690}
!13690 = !DILocalVariable(name: "list", arg: 1, scope: !13686, file: !377, line: 197, type: !12432)
!13691 = !DILocation(line: 0, scope: !13686)
!13692 = !DILocation(line: 199, column: 8, scope: !13686)
!13693 = !DILocation(line: 199, column: 13, scope: !13686)
!13694 = !DILocation(line: 200, column: 8, scope: !13686)
!13695 = !DILocation(line: 200, column: 13, scope: !13686)
!13696 = !DILocation(line: 201, column: 1, scope: !13686)
!13697 = distinct !DISubprogram(name: "z_sched_init", scope: !2308, file: !2308, line: 1293, type: !2917, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13698 = !DILocation(line: 1302, column: 2, scope: !13697)
!13699 = !DILocation(line: 1306, column: 2, scope: !13697)
!13700 = !DILocation(line: 1309, column: 1, scope: !13697)
!13701 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2308, file: !2308, line: 1311, type: !13702, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13705)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{!103, !13704}
!13704 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2203)
!13705 = !{!13706}
!13706 = !DILocalVariable(name: "thread", arg: 1, scope: !13701, file: !2308, line: 1311, type: !13704)
!13707 = !DILocation(line: 0, scope: !13701)
!13708 = !DILocation(line: 1313, column: 22, scope: !13701)
!13709 = !DILocation(line: 1313, column: 9, scope: !13701)
!13710 = !DILocation(line: 1313, column: 2, scope: !13701)
!13711 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2308, file: !2308, line: 1325, type: !13712, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13714)
!13712 = !DISubroutineType(types: !13713)
!13713 = !{null, !13704, !103}
!13714 = !{!13715, !13716, !13717}
!13715 = !DILocalVariable(name: "thread", arg: 1, scope: !13711, file: !2308, line: 1325, type: !13704)
!13716 = !DILocalVariable(name: "prio", arg: 2, scope: !13711, file: !2308, line: 1325, type: !103)
!13717 = !DILocalVariable(name: "th", scope: !13711, file: !2308, line: 1334, type: !2203)
!13718 = !DILocation(line: 0, scope: !13711)
!13719 = !DILocation(line: 1336, column: 2, scope: !13711)
!13720 = !DILocation(line: 1337, column: 1, scope: !13711)
!13721 = distinct !DISubprogram(name: "k_can_yield", scope: !2308, file: !2308, line: 1384, type: !5766, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13722 = !DILocation(line: 1386, column: 11, scope: !13721)
!13723 = !DILocation(line: 1386, column: 29, scope: !13721)
!13724 = !DILocation(line: 1386, column: 32, scope: !13721)
!13725 = !DILocation(line: 1386, column: 46, scope: !13721)
!13726 = !DILocation(line: 1387, column: 28, scope: !13721)
!13727 = !DILocation(line: 1387, column: 4, scope: !13721)
!13728 = !DILocation(line: 1386, column: 2, scope: !13721)
!13729 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !463, file: !463, line: 989, type: !5766, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13730 = !DILocation(line: 993, column: 10, scope: !13729)
!13731 = !DILocation(line: 993, column: 2, scope: !13729)
!13732 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2308, file: !2308, line: 1390, type: !2917, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13733)
!13733 = !{!13734}
!13734 = !DILocalVariable(name: "key", scope: !13732, file: !2308, line: 1396, type: !12221)
!13735 = !DILocation(line: 0, scope: !12229, inlinedAt: !13736)
!13736 = distinct !DILocation(line: 1396, column: 25, scope: !13732)
!13737 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13738)
!13738 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13736)
!13739 = !DILocation(line: 0, scope: !12238, inlinedAt: !13738)
!13740 = !DILocation(line: 0, scope: !13732)
!13741 = !DILocation(line: 1400, column: 18, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !2308, line: 1399, column: 36)
!13743 = distinct !DILexicalBlock(scope: !13732, file: !2308, line: 1398, column: 6)
!13744 = !DILocation(line: 0, scope: !12398, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 1400, column: 3, scope: !13742)
!13746 = !DILocation(line: 266, column: 15, scope: !12398, inlinedAt: !13745)
!13747 = !DILocation(line: 266, column: 28, scope: !12398, inlinedAt: !13745)
!13748 = !DILocation(line: 0, scope: !12406, inlinedAt: !13749)
!13749 = distinct !DILocation(line: 268, column: 3, scope: !12410, inlinedAt: !13745)
!13750 = !DILocation(line: 234, column: 2, scope: !12406, inlinedAt: !13749)
!13751 = !DILocation(line: 1402, column: 15, scope: !13732)
!13752 = !DILocation(line: 0, scope: !12415, inlinedAt: !13753)
!13753 = distinct !DILocation(line: 1402, column: 2, scope: !13732)
!13754 = !DILocation(line: 252, column: 15, scope: !12415, inlinedAt: !13753)
!13755 = !DILocation(line: 252, column: 28, scope: !12415, inlinedAt: !13753)
!13756 = !DILocation(line: 0, scope: !12422, inlinedAt: !13757)
!13757 = distinct !DILocation(line: 254, column: 3, scope: !12426, inlinedAt: !13753)
!13758 = !DILocation(line: 0, scope: !12429, inlinedAt: !13759)
!13759 = distinct !DILocation(line: 229, column: 2, scope: !12422, inlinedAt: !13757)
!13760 = !DILocation(line: 188, column: 2, scope: !12439, inlinedAt: !13759)
!13761 = !DILocation(line: 188, column: 2, scope: !12441, inlinedAt: !13759)
!13762 = !DILocation(line: 0, scope: !12439, inlinedAt: !13759)
!13763 = !DILocation(line: 189, column: 7, scope: !12444, inlinedAt: !13759)
!13764 = !DILocation(line: 189, column: 35, scope: !12444, inlinedAt: !13759)
!13765 = !DILocation(line: 189, column: 7, scope: !12445, inlinedAt: !13759)
!13766 = !DILocation(line: 191, column: 21, scope: !12449, inlinedAt: !13759)
!13767 = !DILocation(line: 190, column: 4, scope: !12449, inlinedAt: !13759)
!13768 = !DILocation(line: 192, column: 4, scope: !12449, inlinedAt: !13759)
!13769 = distinct !{!13769, !13760, !13770}
!13770 = !DILocation(line: 194, column: 2, scope: !12439, inlinedAt: !13759)
!13771 = !DILocation(line: 196, column: 37, scope: !12429, inlinedAt: !13759)
!13772 = !DILocation(line: 196, column: 2, scope: !12429, inlinedAt: !13759)
!13773 = !DILocation(line: 197, column: 1, scope: !12429, inlinedAt: !13759)
!13774 = !DILocation(line: 1403, column: 2, scope: !13732)
!13775 = !DILocation(line: 0, scope: !12840, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 1404, column: 2, scope: !13732)
!13777 = !DILocation(line: 196, column: 9, scope: !12840, inlinedAt: !13776)
!13778 = !DILocation(line: 1405, column: 1, scope: !13732)
!13779 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2308, file: !2308, line: 1459, type: !13780, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13782)
!13780 = !DISubroutineType(types: !13781)
!13781 = !{!748, !13020}
!13782 = !{!13783, !13784, !13785}
!13783 = !DILocalVariable(name: "timeout", arg: 1, scope: !13779, file: !2308, line: 1459, type: !13020)
!13784 = !DILocalVariable(name: "ticks", scope: !13779, file: !2308, line: 1461, type: !1556)
!13785 = !DILocalVariable(name: "ret", scope: !13779, file: !2308, line: 1480, type: !748)
!13786 = !DILocation(line: 0, scope: !13779)
!13787 = !DILocation(line: 1468, column: 6, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13779, file: !2308, line: 1468, column: 6)
!13789 = !DILocation(line: 1468, column: 6, scope: !13779)
!13790 = !DILocation(line: 1469, column: 20, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13788, file: !2308, line: 1468, column: 40)
!13792 = !DILocation(line: 1469, column: 3, scope: !13791)
!13793 = !DILocation(line: 1473, column: 3, scope: !13791)
!13794 = !DILocation(line: 1478, column: 10, scope: !13779)
!13795 = !DILocation(line: 1480, column: 16, scope: !13779)
!13796 = !DILocation(line: 1485, column: 1, scope: !13779)
!13797 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3345, file: !3345, line: 310, type: !13798, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13800)
!13798 = !DISubroutineType(types: !13799)
!13799 = !{null, !13704}
!13800 = !{!13801}
!13801 = !DILocalVariable(name: "thread", arg: 1, scope: !13797, file: !3345, line: 310, type: !13704)
!13802 = !DILocation(line: 0, scope: !13797)
!13803 = !DILocation(line: 319, column: 2, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13797, file: !3345, line: 319, column: 2)
!13805 = !{i64 2155104231}
!13806 = !DILocation(line: 320, column: 2, scope: !13797)
!13807 = !DILocation(line: 321, column: 1, scope: !13797)
!13808 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2308, file: !2308, line: 1415, type: !13809, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13811)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{!748, !1556}
!13811 = !{!13812, !13813, !13814, !13815}
!13812 = !DILocalVariable(name: "ticks", arg: 1, scope: !13808, file: !2308, line: 1415, type: !1556)
!13813 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13808, file: !2308, line: 1418, type: !106)
!13814 = !DILocalVariable(name: "timeout", scope: !13808, file: !2308, line: 1430, type: !13020)
!13815 = !DILocalVariable(name: "key", scope: !13808, file: !2308, line: 1437, type: !12221)
!13816 = !DILocation(line: 0, scope: !13808)
!13817 = !DILocation(line: 1425, column: 12, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13808, file: !2308, line: 1425, column: 6)
!13819 = !DILocation(line: 1425, column: 6, scope: !13808)
!13820 = !DILocation(line: 1426, column: 3, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13818, file: !2308, line: 1425, column: 18)
!13822 = !DILocation(line: 1427, column: 3, scope: !13821)
!13823 = !DILocation(line: 1431, column: 24, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13808, file: !2308, line: 1431, column: 6)
!13825 = !DILocation(line: 1431, column: 6, scope: !13808)
!13826 = !DILocation(line: 1432, column: 35, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13824, file: !2308, line: 1431, column: 30)
!13828 = !DILocation(line: 1432, column: 27, scope: !13827)
!13829 = !DILocation(line: 1433, column: 2, scope: !13827)
!13830 = !DILocation(line: 1434, column: 27, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13824, file: !2308, line: 1433, column: 9)
!13832 = !DILocation(line: 0, scope: !13824)
!13833 = !DILocation(line: 0, scope: !12229, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 1437, column: 25, scope: !13808)
!13835 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13836)
!13836 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13834)
!13837 = !DILocation(line: 0, scope: !12238, inlinedAt: !13836)
!13838 = !DILocation(line: 1440, column: 20, scope: !13808)
!13839 = !DILocation(line: 1440, column: 18, scope: !13808)
!13840 = !DILocation(line: 1442, column: 2, scope: !13808)
!13841 = !DILocation(line: 1443, column: 23, scope: !13808)
!13842 = !DILocation(line: 1443, column: 2, scope: !13808)
!13843 = !DILocation(line: 1444, column: 29, scope: !13808)
!13844 = !DILocation(line: 1444, column: 2, scope: !13808)
!13845 = !DILocation(line: 0, scope: !12840, inlinedAt: !13846)
!13846 = distinct !DILocation(line: 1446, column: 8, scope: !13808)
!13847 = !DILocation(line: 196, column: 9, scope: !12840, inlinedAt: !13846)
!13848 = !DILocation(line: 1450, column: 10, scope: !13808)
!13849 = !DILocation(line: 1450, column: 45, scope: !13808)
!13850 = !DILocation(line: 1450, column: 43, scope: !13808)
!13851 = !DILocation(line: 1451, column: 6, scope: !13808)
!13852 = !DILocation(line: 1457, column: 1, scope: !13808)
!13853 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12062, file: !12062, line: 1103, type: !12063, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13854)
!13854 = !{!13855}
!13855 = !DILocalVariable(name: "t", arg: 1, scope: !13853, file: !12062, line: 1103, type: !1408)
!13856 = !DILocation(line: 0, scope: !13853)
!13857 = !DILocation(line: 0, scope: !12276, inlinedAt: !13858)
!13858 = distinct !DILocation(line: 1106, column: 9, scope: !13853)
!13859 = !DILocation(line: 139, column: 13, scope: !13860, inlinedAt: !13858)
!13860 = distinct !DILexicalBlock(scope: !13861, file: !12062, line: 138, column: 10)
!13861 = distinct !DILexicalBlock(scope: !13862, file: !12062, line: 136, column: 7)
!13862 = distinct !DILexicalBlock(scope: !12297, file: !12062, line: 134, column: 17)
!13863 = !DILocation(line: 1106, column: 2, scope: !13853)
!13864 = distinct !DISubprogram(name: "k_yield", scope: !3345, file: !3345, line: 140, type: !2917, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13865 = !DILocation(line: 148, column: 2, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13864, file: !3345, line: 148, column: 2)
!13867 = !{i64 2155103551}
!13868 = !DILocation(line: 149, column: 2, scope: !13864)
!13869 = !DILocation(line: 150, column: 1, scope: !13864)
!13870 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2308, file: !2308, line: 1495, type: !13871, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13873)
!13871 = !DISubroutineType(types: !13872)
!13872 = !{!748, !103}
!13873 = !{!13874, !13875}
!13874 = !DILocalVariable(name: "us", arg: 1, scope: !13870, file: !2308, line: 1495, type: !103)
!13875 = !DILocalVariable(name: "ticks", scope: !13870, file: !2308, line: 1497, type: !748)
!13876 = !DILocation(line: 0, scope: !13870)
!13877 = !DILocation(line: 1501, column: 31, scope: !13870)
!13878 = !DILocation(line: 1501, column: 10, scope: !13870)
!13879 = !DILocation(line: 1502, column: 23, scope: !13870)
!13880 = !DILocation(line: 1502, column: 10, scope: !13870)
!13881 = !DILocation(line: 1506, column: 31, scope: !13870)
!13882 = !DILocation(line: 1506, column: 9, scope: !13870)
!13883 = !DILocation(line: 1506, column: 2, scope: !13870)
!13884 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12062, file: !12062, line: 571, type: !12063, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13885)
!13885 = !{!13886}
!13886 = !DILocalVariable(name: "t", arg: 1, scope: !13884, file: !12062, line: 571, type: !1408)
!13887 = !DILocation(line: 0, scope: !13884)
!13888 = !DILocation(line: 0, scope: !12276, inlinedAt: !13889)
!13889 = distinct !DILocation(line: 574, column: 9, scope: !13884)
!13890 = !DILocation(line: 135, column: 5, scope: !13862, inlinedAt: !13889)
!13891 = !DILocation(line: 139, column: 13, scope: !13860, inlinedAt: !13889)
!13892 = !DILocation(line: 574, column: 2, scope: !13884)
!13893 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12062, file: !12062, line: 1187, type: !12063, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13894)
!13894 = !{!13895}
!13895 = !DILocalVariable(name: "t", arg: 1, scope: !13893, file: !12062, line: 1187, type: !1408)
!13896 = !DILocation(line: 0, scope: !13893)
!13897 = !DILocation(line: 0, scope: !12276, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 1190, column: 9, scope: !13893)
!13899 = !DILocation(line: 145, column: 13, scope: !13900, inlinedAt: !13898)
!13900 = distinct !DILexicalBlock(scope: !12294, file: !12062, line: 144, column: 10)
!13901 = !DILocation(line: 1190, column: 2, scope: !13893)
!13902 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2308, file: !2308, line: 1517, type: !13798, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13903)
!13903 = !{!13904}
!13904 = !DILocalVariable(name: "thread", arg: 1, scope: !13902, file: !2308, line: 1517, type: !13704)
!13905 = !DILocation(line: 0, scope: !13902)
!13906 = !DILocation(line: 1521, column: 6, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13902, file: !2308, line: 1521, column: 6)
!13908 = !DILocation(line: 1521, column: 6, scope: !13902)
!13909 = !DILocation(line: 1525, column: 6, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13902, file: !2308, line: 1525, column: 6)
!13911 = !DILocation(line: 1525, column: 37, scope: !13910)
!13912 = !DILocation(line: 1525, column: 6, scope: !13902)
!13913 = !DILocation(line: 1527, column: 20, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !2308, line: 1527, column: 7)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !2308, line: 1525, column: 42)
!13916 = !DILocation(line: 1527, column: 33, scope: !13914)
!13917 = !DILocation(line: 1527, column: 7, scope: !13915)
!13918 = !DILocation(line: 1532, column: 2, scope: !13902)
!13919 = !DILocation(line: 1533, column: 2, scope: !13902)
!13920 = !DILocation(line: 1031, column: 3, scope: !12873, inlinedAt: !13921)
!13921 = distinct !DILocation(line: 48, column: 10, scope: !12877, inlinedAt: !13922)
!13922 = distinct !DILocation(line: 1537, column: 7, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13902, file: !2308, line: 1537, column: 6)
!13924 = !DILocation(line: 0, scope: !12873, inlinedAt: !13921)
!13925 = !DILocation(line: 48, column: 9, scope: !12877, inlinedAt: !13922)
!13926 = !DILocation(line: 1537, column: 6, scope: !13902)
!13927 = !DILocation(line: 1538, column: 3, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13923, file: !2308, line: 1537, column: 25)
!13929 = !DILocation(line: 1539, column: 2, scope: !13928)
!13930 = !DILocation(line: 1540, column: 1, scope: !13902)
!13931 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11501, file: !11501, line: 101, type: !12347, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13932)
!13932 = !{!13933}
!13933 = !DILocalVariable(name: "thread", arg: 1, scope: !13931, file: !11501, line: 101, type: !2203)
!13934 = !DILocation(line: 0, scope: !13931)
!13935 = !DILocation(line: 103, column: 23, scope: !13931)
!13936 = !DILocation(line: 103, column: 36, scope: !13931)
!13937 = !DILocation(line: 103, column: 55, scope: !13931)
!13938 = !DILocation(line: 103, column: 2, scope: !13931)
!13939 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2308, file: !2308, line: 1567, type: !13940, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{!13704}
!13942 = !{!13943}
!13943 = !DILocalVariable(name: "ret", scope: !13939, file: !2308, line: 1577, type: !13704)
!13944 = !DILocation(line: 1577, column: 30, scope: !13939)
!13945 = !DILocation(line: 0, scope: !13939)
!13946 = !DILocation(line: 1582, column: 2, scope: !13939)
!13947 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2308, file: !2308, line: 1593, type: !6041, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !478)
!13948 = !DILocation(line: 1031, column: 3, scope: !12873, inlinedAt: !13949)
!13949 = distinct !DILocation(line: 48, column: 10, scope: !12877, inlinedAt: !13950)
!13950 = distinct !DILocation(line: 1595, column: 10, scope: !13947)
!13951 = !DILocation(line: 0, scope: !12873, inlinedAt: !13949)
!13952 = !DILocation(line: 48, column: 9, scope: !12877, inlinedAt: !13950)
!13953 = !DILocation(line: 1595, column: 27, scope: !13947)
!13954 = !DILocation(line: 1595, column: 41, scope: !13947)
!13955 = !DILocation(line: 1595, column: 30, scope: !13947)
!13956 = !DILocation(line: 1595, column: 2, scope: !13947)
!13957 = distinct !DISubprogram(name: "z_thread_abort", scope: !2308, file: !2308, line: 1725, type: !12187, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !13958)
!13958 = !{!13959, !13960}
!13959 = !DILocalVariable(name: "thread", arg: 1, scope: !13957, file: !2308, line: 1725, type: !2203)
!13960 = !DILocalVariable(name: "key", scope: !13957, file: !2308, line: 1727, type: !12221)
!13961 = !DILocation(line: 0, scope: !13957)
!13962 = !DILocation(line: 0, scope: !12229, inlinedAt: !13963)
!13963 = distinct !DILocation(line: 1727, column: 25, scope: !13957)
!13964 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !13965)
!13965 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !13963)
!13966 = !DILocation(line: 0, scope: !12238, inlinedAt: !13965)
!13967 = !DILocation(line: 1729, column: 20, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13957, file: !2308, line: 1729, column: 6)
!13969 = !DILocation(line: 1729, column: 33, scope: !13968)
!13970 = !DILocation(line: 1729, column: 48, scope: !13968)
!13971 = !DILocation(line: 1729, column: 6, scope: !13957)
!13972 = !DILocation(line: 0, scope: !12256, inlinedAt: !13973)
!13973 = distinct !DILocation(line: 1730, column: 3, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13968, file: !2308, line: 1729, column: 54)
!13975 = !DILocation(line: 0, scope: !12264, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13973)
!13977 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13976)
!13978 = !DILocation(line: 1732, column: 3, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13974, file: !2308, line: 1732, column: 3)
!13980 = !{i64 2155840961, i64 2155840977, i64 2155841003, i64 2155841031, i64 2155841051}
!13981 = !DILocation(line: 1733, column: 3, scope: !13974)
!13982 = !DILocation(line: 1736, column: 20, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13957, file: !2308, line: 1736, column: 6)
!13984 = !DILocation(line: 1736, column: 33, scope: !13983)
!13985 = !DILocation(line: 1736, column: 49, scope: !13983)
!13986 = !DILocation(line: 1736, column: 6, scope: !13957)
!13987 = !DILocation(line: 0, scope: !12256, inlinedAt: !13988)
!13988 = distinct !DILocation(line: 1737, column: 3, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13983, file: !2308, line: 1736, column: 56)
!13990 = !DILocation(line: 0, scope: !12264, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !13988)
!13992 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !13991)
!13993 = !DILocation(line: 1738, column: 3, scope: !13989)
!13994 = !DILocation(line: 1775, column: 2, scope: !13957)
!13995 = !DILocation(line: 1776, column: 16, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13957, file: !2308, line: 1776, column: 6)
!13997 = !DILocation(line: 1776, column: 13, scope: !13996)
!13998 = !DILocation(line: 1776, column: 25, scope: !13996)
!13999 = !DILocation(line: 1031, column: 3, scope: !12873, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 48, column: 10, scope: !12877, inlinedAt: !14001)
!14001 = distinct !DILocation(line: 1776, column: 29, scope: !13996)
!14002 = !DILocation(line: 0, scope: !12873, inlinedAt: !14000)
!14003 = !DILocation(line: 48, column: 9, scope: !12877, inlinedAt: !14001)
!14004 = !DILocation(line: 1776, column: 6, scope: !13957)
!14005 = !DILocation(line: 0, scope: !12840, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 1777, column: 3, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !13996, file: !2308, line: 1776, column: 47)
!14008 = !DILocation(line: 196, column: 9, scope: !12840, inlinedAt: !14006)
!14009 = !DILocation(line: 1779, column: 2, scope: !14007)
!14010 = !DILocation(line: 0, scope: !12256, inlinedAt: !14011)
!14011 = distinct !DILocation(line: 1780, column: 2, scope: !13957)
!14012 = !DILocation(line: 0, scope: !12264, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !14011)
!14014 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !14013)
!14015 = !DILocation(line: 1781, column: 1, scope: !13957)
!14016 = distinct !DISubprogram(name: "end_thread", scope: !2308, file: !2308, line: 1690, type: !12187, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14017)
!14017 = !{!14018}
!14018 = !DILocalVariable(name: "thread", arg: 1, scope: !14016, file: !2308, line: 1690, type: !2203)
!14019 = !DILocation(line: 0, scope: !14016)
!14020 = !DILocation(line: 1695, column: 20, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14016, file: !2308, line: 1695, column: 6)
!14022 = !DILocation(line: 1695, column: 33, scope: !14021)
!14023 = !DILocation(line: 1695, column: 49, scope: !14021)
!14024 = !DILocation(line: 1695, column: 6, scope: !14016)
!14025 = !DILocation(line: 1697, column: 29, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14021, file: !2308, line: 1695, column: 56)
!14027 = !DILocation(line: 1698, column: 7, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14026, file: !2308, line: 1698, column: 7)
!14029 = !DILocation(line: 1698, column: 7, scope: !14026)
!14030 = !DILocation(line: 0, scope: !12398, inlinedAt: !14031)
!14031 = distinct !DILocation(line: 1699, column: 4, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14028, file: !2308, line: 1698, column: 35)
!14033 = !DILocation(line: 266, column: 28, scope: !12398, inlinedAt: !14031)
!14034 = !DILocation(line: 0, scope: !12406, inlinedAt: !14035)
!14035 = distinct !DILocation(line: 268, column: 3, scope: !12410, inlinedAt: !14031)
!14036 = !DILocation(line: 234, column: 2, scope: !12406, inlinedAt: !14035)
!14037 = !DILocation(line: 1700, column: 3, scope: !14032)
!14038 = !DILocation(line: 1701, column: 20, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14026, file: !2308, line: 1701, column: 7)
!14040 = !DILocation(line: 1701, column: 30, scope: !14039)
!14041 = !DILocation(line: 1701, column: 7, scope: !14026)
!14042 = !DILocation(line: 1702, column: 4, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14039, file: !2308, line: 1701, column: 39)
!14044 = !DILocation(line: 1703, column: 3, scope: !14043)
!14045 = !DILocation(line: 1704, column: 9, scope: !14026)
!14046 = !DILocation(line: 1705, column: 23, scope: !14026)
!14047 = !DILocation(line: 1705, column: 3, scope: !14026)
!14048 = !DILocation(line: 1706, column: 3, scope: !14026)
!14049 = !DILocation(line: 1722, column: 2, scope: !14026)
!14050 = !DILocation(line: 1723, column: 1, scope: !14016)
!14051 = distinct !DISubprogram(name: "unpend_all", scope: !2308, file: !2308, line: 1674, type: !14052, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14054)
!14052 = !DISubroutineType(types: !14053)
!14053 = !{null, !2234}
!14054 = !{!14055, !14056}
!14055 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14051, file: !2308, line: 1674, type: !2234)
!14056 = !DILocalVariable(name: "thread", scope: !14051, file: !2308, line: 1676, type: !2203)
!14057 = !DILocation(line: 0, scope: !14051)
!14058 = !DILocation(line: 1678, column: 19, scope: !14051)
!14059 = !DILocation(line: 1678, column: 41, scope: !14051)
!14060 = !DILocation(line: 1678, column: 2, scope: !14051)
!14061 = !DILocation(line: 1679, column: 3, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14051, file: !2308, line: 1678, column: 50)
!14063 = !DILocation(line: 1680, column: 9, scope: !14062)
!14064 = !DILocalVariable(name: "thread", arg: 1, scope: !14065, file: !11521, line: 65, type: !2203)
!14065 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11521, file: !11521, line: 65, type: !14066, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14068)
!14066 = !DISubroutineType(types: !14067)
!14067 = !{null, !2203, !32}
!14068 = !{!14064, !14069}
!14069 = !DILocalVariable(name: "value", arg: 2, scope: !14065, file: !11521, line: 65, type: !32)
!14070 = !DILocation(line: 0, scope: !14065, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 1681, column: 3, scope: !14062)
!14072 = !DILocation(line: 67, column: 15, scope: !14065, inlinedAt: !14071)
!14073 = !DILocation(line: 67, column: 33, scope: !14065, inlinedAt: !14071)
!14074 = !DILocation(line: 1682, column: 3, scope: !14062)
!14075 = distinct !{!14075, !14060, !14076}
!14076 = !DILocation(line: 1683, column: 2, scope: !14051)
!14077 = !DILocation(line: 1684, column: 1, scope: !14051)
!14078 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2308, file: !2308, line: 1794, type: !14079, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14081)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{!103, !2203, !13020}
!14081 = !{!14082, !14083, !14084, !14085}
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14078, file: !2308, line: 1794, type: !2203)
!14083 = !DILocalVariable(name: "timeout", arg: 2, scope: !14078, file: !2308, line: 1794, type: !13020)
!14084 = !DILocalVariable(name: "key", scope: !14078, file: !2308, line: 1796, type: !12221)
!14085 = !DILocalVariable(name: "ret", scope: !14078, file: !2308, line: 1797, type: !103)
!14086 = !DILocation(line: 0, scope: !14078)
!14087 = !DILocation(line: 0, scope: !12229, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 1796, column: 25, scope: !14078)
!14089 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !14088)
!14091 = !DILocation(line: 0, scope: !12238, inlinedAt: !14090)
!14092 = !DILocation(line: 1801, column: 20, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14078, file: !2308, line: 1801, column: 6)
!14094 = !DILocation(line: 1801, column: 33, scope: !14093)
!14095 = !DILocation(line: 1801, column: 49, scope: !14093)
!14096 = !DILocation(line: 1801, column: 6, scope: !14078)
!14097 = !DILocation(line: 1803, column: 13, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14093, file: !2308, line: 1803, column: 13)
!14099 = !DILocation(line: 1803, column: 13, scope: !14093)
!14100 = !DILocation(line: 1805, column: 24, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14098, file: !2308, line: 1805, column: 13)
!14102 = !DILocation(line: 1805, column: 21, scope: !14101)
!14103 = !DILocation(line: 1805, column: 34, scope: !14101)
!14104 = !DILocation(line: 1806, column: 20, scope: !14101)
!14105 = !DILocation(line: 1806, column: 44, scope: !14101)
!14106 = !DILocation(line: 1806, column: 30, scope: !14101)
!14107 = !DILocation(line: 1805, column: 13, scope: !14098)
!14108 = !DILocation(line: 1810, column: 42, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14101, file: !2308, line: 1808, column: 9)
!14110 = !DILocation(line: 1810, column: 3, scope: !14109)
!14111 = !DILocation(line: 1811, column: 22, scope: !14109)
!14112 = !DILocation(line: 1811, column: 3, scope: !14109)
!14113 = !DILocation(line: 0, scope: !12840, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 1814, column: 9, scope: !14109)
!14115 = !DILocation(line: 196, column: 9, scope: !12840, inlinedAt: !14114)
!14116 = !DILocation(line: 1817, column: 3, scope: !14109)
!14117 = !DILocation(line: 0, scope: !14093)
!14118 = !DILocation(line: 0, scope: !12256, inlinedAt: !14119)
!14119 = distinct !DILocation(line: 1822, column: 2, scope: !14078)
!14120 = !DILocation(line: 0, scope: !12264, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !14119)
!14122 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !14121)
!14123 = !DILocation(line: 1823, column: 2, scope: !14078)
!14124 = !DILocation(line: 1824, column: 1, scope: !14078)
!14125 = distinct !DISubprogram(name: "z_sched_wake", scope: !2308, file: !2308, line: 1882, type: !14126, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14128)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!163, !2234, !103, !102}
!14128 = !{!14129, !14130, !14131, !14132, !14133, !14134, !14136}
!14129 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14125, file: !2308, line: 1882, type: !2234)
!14130 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14125, file: !2308, line: 1882, type: !103)
!14131 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14125, file: !2308, line: 1882, type: !102)
!14132 = !DILocalVariable(name: "thread", scope: !14125, file: !2308, line: 1884, type: !2203)
!14133 = !DILocalVariable(name: "ret", scope: !14125, file: !2308, line: 1885, type: !163)
!14134 = !DILocalVariable(name: "__i", scope: !14135, file: !2308, line: 1887, type: !12221)
!14135 = distinct !DILexicalBlock(scope: !14125, file: !2308, line: 1887, column: 2)
!14136 = !DILocalVariable(name: "__key", scope: !14135, file: !2308, line: 1887, type: !12221)
!14137 = !DILocation(line: 0, scope: !14125)
!14138 = !DILocation(line: 0, scope: !14135)
!14139 = !DILocation(line: 0, scope: !12229, inlinedAt: !14140)
!14140 = distinct !DILocation(line: 1887, column: 2, scope: !14135)
!14141 = !DILocation(line: 55, column: 2, scope: !12238, inlinedAt: !14142)
!14142 = distinct !DILocation(line: 145, column: 10, scope: !12229, inlinedAt: !14140)
!14143 = !DILocation(line: 0, scope: !12238, inlinedAt: !14142)
!14144 = !DILocation(line: 1888, column: 12, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !2308, line: 1887, column: 26)
!14146 = distinct !DILexicalBlock(scope: !14135, file: !2308, line: 1887, column: 2)
!14147 = !DILocation(line: 1890, column: 14, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14145, file: !2308, line: 1890, column: 7)
!14149 = !DILocation(line: 1890, column: 7, scope: !14145)
!14150 = !DILocalVariable(name: "thread", arg: 1, scope: !14151, file: !14152, line: 134, type: !2203)
!14151 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14152, file: !14152, line: 134, type: !14153, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14155)
!14152 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14153 = !DISubroutineType(types: !14154)
!14154 = !{null, !2203, !32, !102}
!14155 = !{!14150, !14156, !14157}
!14156 = !DILocalVariable(name: "value", arg: 2, scope: !14151, file: !14152, line: 135, type: !32)
!14157 = !DILocalVariable(name: "data", arg: 3, scope: !14151, file: !14152, line: 136, type: !102)
!14158 = !DILocation(line: 0, scope: !14151, inlinedAt: !14159)
!14159 = distinct !DILocation(line: 1891, column: 4, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14148, file: !2308, line: 1890, column: 23)
!14161 = !DILocation(line: 0, scope: !14065, inlinedAt: !14162)
!14162 = distinct !DILocation(line: 138, column: 2, scope: !14151, inlinedAt: !14159)
!14163 = !DILocation(line: 67, column: 15, scope: !14065, inlinedAt: !14162)
!14164 = !DILocation(line: 67, column: 33, scope: !14065, inlinedAt: !14162)
!14165 = !DILocation(line: 139, column: 15, scope: !14151, inlinedAt: !14159)
!14166 = !DILocation(line: 139, column: 25, scope: !14151, inlinedAt: !14159)
!14167 = !DILocation(line: 1894, column: 4, scope: !14160)
!14168 = !DILocation(line: 1895, column: 10, scope: !14160)
!14169 = !DILocation(line: 1896, column: 4, scope: !14160)
!14170 = !DILocation(line: 1898, column: 3, scope: !14160)
!14171 = !DILocation(line: 0, scope: !12256, inlinedAt: !14172)
!14172 = distinct !DILocation(line: 1887, column: 2, scope: !14146)
!14173 = !DILocation(line: 0, scope: !12264, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 215, column: 2, scope: !12256, inlinedAt: !14172)
!14175 = !DILocation(line: 95, column: 2, scope: !12264, inlinedAt: !14174)
!14176 = !DILocation(line: 1901, column: 2, scope: !14125)
!14177 = distinct !DISubprogram(name: "z_sched_wait", scope: !2308, file: !2308, line: 1904, type: !14178, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2200, retainedNodes: !14181)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!103, !12232, !12221, !2234, !13020, !14180}
!14180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14181 = !{!14182, !14183, !14184, !14185, !14186, !14187}
!14182 = !DILocalVariable(name: "lock", arg: 1, scope: !14177, file: !2308, line: 1904, type: !12232)
!14183 = !DILocalVariable(name: "key", arg: 2, scope: !14177, file: !2308, line: 1904, type: !12221)
!14184 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14177, file: !2308, line: 1905, type: !2234)
!14185 = !DILocalVariable(name: "timeout", arg: 4, scope: !14177, file: !2308, line: 1905, type: !13020)
!14186 = !DILocalVariable(name: "data", arg: 5, scope: !14177, file: !2308, line: 1905, type: !14180)
!14187 = !DILocalVariable(name: "ret", scope: !14177, file: !2308, line: 1907, type: !103)
!14188 = !DILocation(line: 0, scope: !14177)
!14189 = !DILocation(line: 1907, column: 12, scope: !14177)
!14190 = !DILocation(line: 1909, column: 11, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14177, file: !2308, line: 1909, column: 6)
!14192 = !DILocation(line: 1909, column: 6, scope: !14177)
!14193 = !DILocation(line: 1910, column: 11, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14191, file: !2308, line: 1909, column: 20)
!14195 = !DILocation(line: 1910, column: 26, scope: !14194)
!14196 = !DILocation(line: 1910, column: 9, scope: !14194)
!14197 = !DILocation(line: 1911, column: 2, scope: !14194)
!14198 = !DILocation(line: 1912, column: 2, scope: !14177)
!14199 = distinct !DISubprogram(name: "z_data_copy", scope: !14200, file: !14200, line: 22, type: !2917, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !478)
!14200 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14201 = !DILocation(line: 24, column: 2, scope: !14199)
!14202 = !DILocation(line: 27, column: 2, scope: !14199)
!14203 = !DILocation(line: 71, column: 1, scope: !14199)
!14204 = distinct !DISubprogram(name: "z_add_timeout", scope: !2345, file: !2345, line: 88, type: !14205, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14211)
!14205 = !DISubroutineType(types: !14206)
!14206 = !{null, !2318, !2337, !14207}
!14207 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1557, line: 67, baseType: !14208)
!14208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1557, line: 65, size: 64, elements: !14209)
!14209 = !{!14210}
!14210 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14208, file: !1557, line: 66, baseType: !1556, size: 64)
!14211 = !{!14212, !14213, !14214, !14215, !14221, !14222, !14225, !14228}
!14212 = !DILocalVariable(name: "to", arg: 1, scope: !14204, file: !2345, line: 88, type: !2318)
!14213 = !DILocalVariable(name: "fn", arg: 2, scope: !14204, file: !2345, line: 88, type: !2337)
!14214 = !DILocalVariable(name: "timeout", arg: 3, scope: !14204, file: !2345, line: 89, type: !14207)
!14215 = !DILocalVariable(name: "__i", scope: !14216, file: !2345, line: 102, type: !14217)
!14216 = distinct !DILexicalBlock(scope: !14204, file: !2345, line: 102, column: 2)
!14217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !477, line: 106, baseType: !14218)
!14218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !477, line: 32, size: 32, elements: !14219)
!14219 = !{!14220}
!14220 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14218, file: !477, line: 33, baseType: !103, size: 32)
!14221 = !DILocalVariable(name: "__key", scope: !14216, file: !2345, line: 102, type: !14217)
!14222 = !DILocalVariable(name: "t", scope: !14223, file: !2345, line: 103, type: !2318)
!14223 = distinct !DILexicalBlock(scope: !14224, file: !2345, line: 102, column: 24)
!14224 = distinct !DILexicalBlock(scope: !14216, file: !2345, line: 102, column: 2)
!14225 = !DILocalVariable(name: "ticks", scope: !14226, file: !2345, line: 107, type: !1556)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !2345, line: 106, column: 39)
!14227 = distinct !DILexicalBlock(scope: !14223, file: !2345, line: 105, column: 7)
!14228 = !DILocalVariable(name: "next_time", scope: !14229, file: !2345, line: 137, type: !748)
!14229 = distinct !DILexicalBlock(scope: !14230, file: !2345, line: 127, column: 22)
!14230 = distinct !DILexicalBlock(scope: !14223, file: !2345, line: 127, column: 7)
!14231 = !DILocation(line: 0, scope: !14204)
!14232 = !DILocation(line: 91, column: 6, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14204, file: !2345, line: 91, column: 6)
!14234 = !DILocation(line: 91, column: 6, scope: !14204)
!14235 = !DILocation(line: 100, column: 6, scope: !14204)
!14236 = !DILocation(line: 100, column: 9, scope: !14204)
!14237 = !DILocation(line: 0, scope: !14216)
!14238 = !DILocalVariable(name: "l", arg: 1, scope: !14239, file: !477, line: 136, type: !14242)
!14239 = distinct !DISubprogram(name: "k_spin_lock", scope: !477, file: !477, line: 136, type: !14240, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14243)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{!14217, !14242}
!14242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!14243 = !{!14238, !14244}
!14244 = !DILocalVariable(name: "k", scope: !14239, file: !477, line: 139, type: !14217)
!14245 = !DILocation(line: 0, scope: !14239, inlinedAt: !14246)
!14246 = distinct !DILocation(line: 102, column: 2, scope: !14216)
!14247 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14252)
!14248 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4724, file: !4724, line: 42, type: !4725, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14249)
!14249 = !{!14250, !14251}
!14250 = !DILocalVariable(name: "key", scope: !14248, file: !4724, line: 44, type: !32)
!14251 = !DILocalVariable(name: "tmp", scope: !14248, file: !4724, line: 53, type: !32)
!14252 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14246)
!14253 = !{i64 2283726}
!14254 = !DILocation(line: 0, scope: !14248, inlinedAt: !14252)
!14255 = !DILocation(line: 106, column: 33, scope: !14227)
!14256 = !DILocation(line: 105, column: 7, scope: !14223)
!14257 = !DILocation(line: 107, column: 50, scope: !14226)
!14258 = !DILocation(line: 107, column: 48, scope: !14226)
!14259 = !DILocation(line: 0, scope: !14226)
!14260 = !DILocation(line: 109, column: 17, scope: !14226)
!14261 = !DILocation(line: 110, column: 3, scope: !14226)
!14262 = !DILocation(line: 111, column: 31, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14227, file: !2345, line: 110, column: 10)
!14264 = !DILocation(line: 111, column: 37, scope: !14263)
!14265 = !DILocation(line: 111, column: 35, scope: !14263)
!14266 = !DILocation(line: 0, scope: !14227)
!14267 = !DILocation(line: 109, column: 8, scope: !14226)
!14268 = !DILocation(line: 109, column: 15, scope: !14226)
!14269 = !DILocation(line: 114, column: 12, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14223, file: !2345, line: 114, column: 3)
!14271 = !DILocation(line: 0, scope: !14223)
!14272 = !DILocation(line: 114, column: 3, scope: !14270)
!14273 = !DILocation(line: 115, column: 24, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14275, file: !2345, line: 115, column: 8)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !2345, line: 114, column: 45)
!14276 = distinct !DILexicalBlock(scope: !14270, file: !2345, line: 114, column: 3)
!14277 = !DILocation(line: 115, column: 11, scope: !14274)
!14278 = !DILocation(line: 115, column: 18, scope: !14274)
!14279 = !DILocation(line: 115, column: 8, scope: !14275)
!14280 = !DILocation(line: 116, column: 15, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14274, file: !2345, line: 115, column: 32)
!14282 = !DILocation(line: 117, column: 26, scope: !14281)
!14283 = !DILocation(line: 117, column: 37, scope: !14281)
!14284 = !DILocation(line: 117, column: 5, scope: !14281)
!14285 = !DILocation(line: 123, column: 7, scope: !14223)
!14286 = !DILocation(line: 120, column: 15, scope: !14275)
!14287 = !DILocation(line: 114, column: 36, scope: !14276)
!14288 = distinct !{!14288, !14272, !14289}
!14289 = !DILocation(line: 121, column: 3, scope: !14270)
!14290 = !DILocation(line: 124, column: 41, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !2345, line: 123, column: 18)
!14292 = distinct !DILexicalBlock(scope: !14223, file: !2345, line: 123, column: 7)
!14293 = !DILocation(line: 124, column: 4, scope: !14291)
!14294 = !DILocation(line: 125, column: 3, scope: !14291)
!14295 = !DILocation(line: 127, column: 13, scope: !14230)
!14296 = !DILocation(line: 127, column: 10, scope: !14230)
!14297 = !DILocation(line: 127, column: 7, scope: !14223)
!14298 = !DILocation(line: 137, column: 24, scope: !14229)
!14299 = !DILocation(line: 0, scope: !14229)
!14300 = !DILocation(line: 139, column: 18, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14229, file: !2345, line: 139, column: 8)
!14302 = !DILocation(line: 139, column: 23, scope: !14301)
!14303 = !DILocation(line: 141, column: 5, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14301, file: !2345, line: 140, column: 48)
!14305 = !DILocation(line: 142, column: 4, scope: !14304)
!14306 = !DILocalVariable(name: "key", arg: 2, scope: !14307, file: !477, line: 190, type: !14217)
!14307 = distinct !DISubprogram(name: "k_spin_unlock", scope: !477, file: !477, line: 189, type: !14308, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14310)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{null, !14242, !14217}
!14310 = !{!14311, !14306}
!14311 = !DILocalVariable(name: "l", arg: 1, scope: !14307, file: !477, line: 189, type: !14242)
!14312 = !DILocation(line: 0, scope: !14307, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 102, column: 2, scope: !14224)
!14314 = !DILocalVariable(name: "key", arg: 1, scope: !14315, file: !4724, line: 84, type: !32)
!14315 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4724, file: !4724, line: 84, type: !4735, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14316)
!14316 = !{!14314}
!14317 = !DILocation(line: 0, scope: !14315, inlinedAt: !14318)
!14318 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14313)
!14319 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14318)
!14320 = !{i64 2284543}
!14321 = !DILocation(line: 148, column: 1, scope: !14204)
!14322 = distinct !DISubprogram(name: "elapsed", scope: !2345, file: !2345, line: 62, type: !14323, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !478)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{!748}
!14325 = !DILocation(line: 64, column: 9, scope: !14322)
!14326 = !DILocation(line: 64, column: 28, scope: !14322)
!14327 = !DILocation(line: 64, column: 35, scope: !14322)
!14328 = !DILocation(line: 64, column: 2, scope: !14322)
!14329 = distinct !DISubprogram(name: "first", scope: !2345, file: !2345, line: 39, type: !14330, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14332)
!14330 = !DISubroutineType(types: !14331)
!14331 = !{!2318}
!14332 = !{!14333}
!14333 = !DILocalVariable(name: "t", scope: !14329, file: !2345, line: 41, type: !14334)
!14334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!14335 = !DILocation(line: 41, column: 19, scope: !14329)
!14336 = !DILocation(line: 0, scope: !14329)
!14337 = !DILocation(line: 43, column: 9, scope: !14329)
!14338 = !DILocation(line: 43, column: 2, scope: !14329)
!14339 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !377, file: !377, line: 443, type: !14340, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14342)
!14340 = !DISubroutineType(types: !14341)
!14341 = !{null, !14334, !14334}
!14342 = !{!14343, !14344, !14345}
!14343 = !DILocalVariable(name: "successor", arg: 1, scope: !14339, file: !377, line: 443, type: !14334)
!14344 = !DILocalVariable(name: "node", arg: 2, scope: !14339, file: !377, line: 443, type: !14334)
!14345 = !DILocalVariable(name: "prev", scope: !14339, file: !377, line: 445, type: !14346)
!14346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14334)
!14347 = !DILocation(line: 0, scope: !14339)
!14348 = !DILocation(line: 445, column: 39, scope: !14339)
!14349 = !DILocation(line: 447, column: 8, scope: !14339)
!14350 = !DILocation(line: 447, column: 13, scope: !14339)
!14351 = !DILocation(line: 448, column: 8, scope: !14339)
!14352 = !DILocation(line: 448, column: 13, scope: !14339)
!14353 = !DILocation(line: 449, column: 8, scope: !14339)
!14354 = !DILocation(line: 449, column: 13, scope: !14339)
!14355 = !DILocation(line: 450, column: 18, scope: !14339)
!14356 = !DILocation(line: 451, column: 1, scope: !14339)
!14357 = distinct !DISubprogram(name: "next", scope: !2345, file: !2345, line: 46, type: !14358, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14360)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{!2318, !2318}
!14360 = !{!14361, !14362}
!14361 = !DILocalVariable(name: "t", arg: 1, scope: !14357, file: !2345, line: 46, type: !2318)
!14362 = !DILocalVariable(name: "n", scope: !14357, file: !2345, line: 48, type: !14334)
!14363 = !DILocation(line: 0, scope: !14357)
!14364 = !DILocation(line: 48, column: 58, scope: !14357)
!14365 = !DILocation(line: 48, column: 19, scope: !14357)
!14366 = !DILocation(line: 50, column: 9, scope: !14357)
!14367 = !DILocation(line: 50, column: 2, scope: !14357)
!14368 = distinct !DISubprogram(name: "sys_dlist_append", scope: !377, file: !377, line: 404, type: !14369, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14372)
!14369 = !DISubroutineType(types: !14370)
!14370 = !{null, !14371, !14334}
!14371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!14372 = !{!14373, !14374, !14375}
!14373 = !DILocalVariable(name: "list", arg: 1, scope: !14368, file: !377, line: 404, type: !14371)
!14374 = !DILocalVariable(name: "node", arg: 2, scope: !14368, file: !377, line: 404, type: !14334)
!14375 = !DILocalVariable(name: "tail", scope: !14368, file: !377, line: 406, type: !14346)
!14376 = !DILocation(line: 0, scope: !14368)
!14377 = !DILocation(line: 406, column: 34, scope: !14368)
!14378 = !DILocation(line: 408, column: 8, scope: !14368)
!14379 = !DILocation(line: 408, column: 13, scope: !14368)
!14380 = !DILocation(line: 409, column: 8, scope: !14368)
!14381 = !DILocation(line: 409, column: 13, scope: !14368)
!14382 = !DILocation(line: 411, column: 8, scope: !14368)
!14383 = !DILocation(line: 411, column: 13, scope: !14368)
!14384 = !DILocation(line: 412, column: 13, scope: !14368)
!14385 = !DILocation(line: 413, column: 1, scope: !14368)
!14386 = distinct !DISubprogram(name: "next_timeout", scope: !2345, file: !2345, line: 67, type: !14323, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14387)
!14387 = !{!14388, !14389, !14390}
!14388 = !DILocalVariable(name: "to", scope: !14386, file: !2345, line: 69, type: !2318)
!14389 = !DILocalVariable(name: "ticks_elapsed", scope: !14386, file: !2345, line: 70, type: !748)
!14390 = !DILocalVariable(name: "ret", scope: !14386, file: !2345, line: 71, type: !748)
!14391 = !DILocation(line: 69, column: 24, scope: !14386)
!14392 = !DILocation(line: 0, scope: !14386)
!14393 = !DILocation(line: 70, column: 26, scope: !14386)
!14394 = !DILocation(line: 73, column: 10, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14386, file: !2345, line: 73, column: 6)
!14396 = !DILocation(line: 73, column: 19, scope: !14395)
!14397 = !DILocation(line: 74, column: 21, scope: !14395)
!14398 = !DILocation(line: 74, column: 30, scope: !14395)
!14399 = !DILocation(line: 74, column: 28, scope: !14395)
!14400 = !DILocation(line: 74, column: 45, scope: !14395)
!14401 = !DILocation(line: 73, column: 6, scope: !14386)
!14402 = !DILocation(line: 77, column: 9, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14395, file: !2345, line: 76, column: 9)
!14404 = !DILocation(line: 0, scope: !14395)
!14405 = !DILocation(line: 81, column: 20, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14386, file: !2345, line: 81, column: 6)
!14407 = !DILocation(line: 81, column: 6, scope: !14406)
!14408 = !DILocation(line: 81, column: 32, scope: !14406)
!14409 = !DILocation(line: 85, column: 2, scope: !14386)
!14410 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !377, file: !377, line: 341, type: !14411, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14413)
!14411 = !DISubroutineType(types: !14412)
!14412 = !{!14334, !14371, !14334}
!14413 = !{!14414, !14415}
!14414 = !DILocalVariable(name: "list", arg: 1, scope: !14410, file: !377, line: 341, type: !14371)
!14415 = !DILocalVariable(name: "node", arg: 2, scope: !14410, file: !377, line: 342, type: !14334)
!14416 = !DILocation(line: 0, scope: !14410)
!14417 = !DILocation(line: 344, column: 15, scope: !14410)
!14418 = !DILocation(line: 344, column: 9, scope: !14410)
!14419 = !DILocation(line: 344, column: 26, scope: !14410)
!14420 = !DILocation(line: 344, column: 2, scope: !14410)
!14421 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !377, file: !377, line: 325, type: !14411, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14422)
!14422 = !{!14423, !14424}
!14423 = !DILocalVariable(name: "list", arg: 1, scope: !14421, file: !377, line: 325, type: !14371)
!14424 = !DILocalVariable(name: "node", arg: 2, scope: !14421, file: !377, line: 326, type: !14334)
!14425 = !DILocation(line: 0, scope: !14421)
!14426 = !DILocation(line: 328, column: 24, scope: !14421)
!14427 = !DILocation(line: 328, column: 15, scope: !14421)
!14428 = !DILocation(line: 328, column: 9, scope: !14421)
!14429 = !DILocation(line: 328, column: 45, scope: !14421)
!14430 = !DILocation(line: 328, column: 2, scope: !14421)
!14431 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !377, file: !377, line: 294, type: !14432, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14434)
!14432 = !DISubroutineType(types: !14433)
!14433 = !{!14334, !14371}
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "list", arg: 1, scope: !14431, file: !377, line: 294, type: !14371)
!14436 = !DILocation(line: 0, scope: !14431)
!14437 = !DILocation(line: 296, column: 9, scope: !14431)
!14438 = !DILocation(line: 296, column: 2, scope: !14431)
!14439 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !377, file: !377, line: 266, type: !14440, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14442)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{!163, !14371}
!14442 = !{!14443}
!14443 = !DILocalVariable(name: "list", arg: 1, scope: !14439, file: !377, line: 266, type: !14371)
!14444 = !DILocation(line: 0, scope: !14439)
!14445 = !DILocation(line: 268, column: 15, scope: !14439)
!14446 = !DILocation(line: 268, column: 20, scope: !14439)
!14447 = !DILocation(line: 268, column: 2, scope: !14439)
!14448 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2345, file: !2345, line: 150, type: !14449, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14451)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{!103, !2318}
!14451 = !{!14452, !14453, !14454, !14456}
!14452 = !DILocalVariable(name: "to", arg: 1, scope: !14448, file: !2345, line: 150, type: !2318)
!14453 = !DILocalVariable(name: "ret", scope: !14448, file: !2345, line: 152, type: !103)
!14454 = !DILocalVariable(name: "__i", scope: !14455, file: !2345, line: 154, type: !14217)
!14455 = distinct !DILexicalBlock(scope: !14448, file: !2345, line: 154, column: 2)
!14456 = !DILocalVariable(name: "__key", scope: !14455, file: !2345, line: 154, type: !14217)
!14457 = !DILocation(line: 0, scope: !14448)
!14458 = !DILocation(line: 0, scope: !14455)
!14459 = !DILocation(line: 0, scope: !14239, inlinedAt: !14460)
!14460 = distinct !DILocation(line: 154, column: 2, scope: !14455)
!14461 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14462)
!14462 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14460)
!14463 = !DILocation(line: 0, scope: !14248, inlinedAt: !14462)
!14464 = !DILocation(line: 155, column: 7, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !2345, line: 155, column: 7)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !2345, line: 154, column: 24)
!14467 = distinct !DILexicalBlock(scope: !14455, file: !2345, line: 154, column: 2)
!14468 = !DILocation(line: 155, column: 7, scope: !14466)
!14469 = !DILocation(line: 156, column: 4, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14465, file: !2345, line: 155, column: 39)
!14471 = !DILocation(line: 158, column: 3, scope: !14470)
!14472 = !DILocation(line: 0, scope: !14307, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 154, column: 2, scope: !14467)
!14474 = !DILocation(line: 0, scope: !14315, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14473)
!14476 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14475)
!14477 = !DILocation(line: 161, column: 2, scope: !14448)
!14478 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !377, file: !377, line: 225, type: !14479, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14483)
!14479 = !DISubroutineType(types: !14480)
!14480 = !{!163, !14481}
!14481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14482, size: 32)
!14482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2322)
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "node", arg: 1, scope: !14478, file: !377, line: 225, type: !14481)
!14485 = !DILocation(line: 0, scope: !14478)
!14486 = !DILocation(line: 227, column: 15, scope: !14478)
!14487 = !DILocation(line: 227, column: 20, scope: !14478)
!14488 = !DILocation(line: 227, column: 2, scope: !14478)
!14489 = distinct !DISubprogram(name: "remove_timeout", scope: !2345, file: !2345, line: 53, type: !2339, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14490)
!14490 = !{!14491}
!14491 = !DILocalVariable(name: "t", arg: 1, scope: !14489, file: !2345, line: 53, type: !2318)
!14492 = !DILocation(line: 0, scope: !14489)
!14493 = !DILocation(line: 55, column: 6, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14489, file: !2345, line: 55, column: 6)
!14495 = !DILocation(line: 55, column: 14, scope: !14494)
!14496 = !DILocation(line: 55, column: 6, scope: !14489)
!14497 = !DILocation(line: 56, column: 25, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14494, file: !2345, line: 55, column: 23)
!14499 = !DILocation(line: 56, column: 12, scope: !14498)
!14500 = !DILocation(line: 56, column: 19, scope: !14498)
!14501 = !DILocation(line: 57, column: 2, scope: !14498)
!14502 = !DILocation(line: 59, column: 23, scope: !14489)
!14503 = !DILocation(line: 59, column: 2, scope: !14489)
!14504 = !DILocation(line: 60, column: 1, scope: !14489)
!14505 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !377, file: !377, line: 496, type: !14506, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14508)
!14506 = !DISubroutineType(types: !14507)
!14507 = !{null, !14334}
!14508 = !{!14509, !14510, !14511}
!14509 = !DILocalVariable(name: "node", arg: 1, scope: !14505, file: !377, line: 496, type: !14334)
!14510 = !DILocalVariable(name: "prev", scope: !14505, file: !377, line: 498, type: !14346)
!14511 = !DILocalVariable(name: "next", scope: !14505, file: !377, line: 499, type: !14346)
!14512 = !DILocation(line: 0, scope: !14505)
!14513 = !DILocation(line: 498, column: 34, scope: !14505)
!14514 = !DILocation(line: 499, column: 34, scope: !14505)
!14515 = !DILocation(line: 501, column: 8, scope: !14505)
!14516 = !DILocation(line: 501, column: 13, scope: !14505)
!14517 = !DILocation(line: 502, column: 8, scope: !14505)
!14518 = !DILocation(line: 502, column: 13, scope: !14505)
!14519 = !DILocation(line: 503, column: 2, scope: !14505)
!14520 = !DILocation(line: 504, column: 1, scope: !14505)
!14521 = distinct !DISubprogram(name: "sys_dnode_init", scope: !377, file: !377, line: 211, type: !14506, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14522)
!14522 = !{!14523}
!14523 = !DILocalVariable(name: "node", arg: 1, scope: !14521, file: !377, line: 211, type: !14334)
!14524 = !DILocation(line: 0, scope: !14521)
!14525 = !DILocation(line: 213, column: 8, scope: !14521)
!14526 = !DILocation(line: 213, column: 13, scope: !14521)
!14527 = !DILocation(line: 214, column: 8, scope: !14521)
!14528 = !DILocation(line: 214, column: 13, scope: !14521)
!14529 = !DILocation(line: 215, column: 1, scope: !14521)
!14530 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2345, file: !2345, line: 183, type: !14531, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14535)
!14531 = !DISubroutineType(types: !14532)
!14532 = !{!1556, !14533}
!14533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14534, size: 32)
!14534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2319)
!14535 = !{!14536, !14537, !14538, !14540}
!14536 = !DILocalVariable(name: "timeout", arg: 1, scope: !14530, file: !2345, line: 183, type: !14533)
!14537 = !DILocalVariable(name: "ticks", scope: !14530, file: !2345, line: 185, type: !1556)
!14538 = !DILocalVariable(name: "__i", scope: !14539, file: !2345, line: 187, type: !14217)
!14539 = distinct !DILexicalBlock(scope: !14530, file: !2345, line: 187, column: 2)
!14540 = !DILocalVariable(name: "__key", scope: !14539, file: !2345, line: 187, type: !14217)
!14541 = !DILocation(line: 0, scope: !14530)
!14542 = !DILocation(line: 0, scope: !14539)
!14543 = !DILocation(line: 0, scope: !14239, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 187, column: 2, scope: !14539)
!14545 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14546)
!14546 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14544)
!14547 = !DILocation(line: 0, scope: !14248, inlinedAt: !14546)
!14548 = !DILocation(line: 188, column: 11, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !2345, line: 187, column: 24)
!14550 = distinct !DILexicalBlock(scope: !14539, file: !2345, line: 187, column: 2)
!14551 = !DILocation(line: 0, scope: !14307, inlinedAt: !14552)
!14552 = distinct !DILocation(line: 187, column: 2, scope: !14550)
!14553 = !DILocation(line: 0, scope: !14315, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14552)
!14555 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14554)
!14556 = !DILocation(line: 191, column: 2, scope: !14530)
!14557 = distinct !DISubprogram(name: "timeout_rem", scope: !2345, file: !2345, line: 165, type: !14531, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14558)
!14558 = !{!14559, !14560, !14561}
!14559 = !DILocalVariable(name: "timeout", arg: 1, scope: !14557, file: !2345, line: 165, type: !14533)
!14560 = !DILocalVariable(name: "ticks", scope: !14557, file: !2345, line: 167, type: !1556)
!14561 = !DILocalVariable(name: "t", scope: !14562, file: !2345, line: 173, type: !2318)
!14562 = distinct !DILexicalBlock(scope: !14557, file: !2345, line: 173, column: 2)
!14563 = !DILocation(line: 0, scope: !14557)
!14564 = !DILocation(line: 169, column: 6, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14557, file: !2345, line: 169, column: 6)
!14566 = !DILocation(line: 169, column: 6, scope: !14557)
!14567 = !DILocation(line: 173, column: 28, scope: !14562)
!14568 = !DILocation(line: 0, scope: !14562)
!14569 = !DILocation(line: 173, column: 39, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14562, file: !2345, line: 173, column: 2)
!14571 = !DILocation(line: 173, column: 2, scope: !14562)
!14572 = !DILocation(line: 174, column: 15, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14570, file: !2345, line: 173, column: 61)
!14574 = !DILocation(line: 174, column: 9, scope: !14573)
!14575 = !DILocation(line: 175, column: 15, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14573, file: !2345, line: 175, column: 7)
!14577 = !DILocation(line: 175, column: 7, scope: !14573)
!14578 = !DILocation(line: 173, column: 52, scope: !14570)
!14579 = distinct !{!14579, !14571, !14580}
!14580 = !DILocation(line: 178, column: 2, scope: !14562)
!14581 = !DILocation(line: 180, column: 17, scope: !14557)
!14582 = !DILocation(line: 180, column: 15, scope: !14557)
!14583 = !DILocation(line: 180, column: 2, scope: !14557)
!14584 = !DILocation(line: 181, column: 1, scope: !14557)
!14585 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11895, file: !11895, line: 35, type: !14586, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14588)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{!163, !14533}
!14588 = !{!14589}
!14589 = !DILocalVariable(name: "to", arg: 1, scope: !14585, file: !11895, line: 35, type: !14533)
!14590 = !DILocation(line: 0, scope: !14585)
!14591 = !DILocation(line: 37, column: 35, scope: !14585)
!14592 = !DILocation(line: 37, column: 10, scope: !14585)
!14593 = !DILocation(line: 37, column: 9, scope: !14585)
!14594 = !DILocation(line: 37, column: 2, scope: !14585)
!14595 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2345, file: !2345, line: 194, type: !14531, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14596)
!14596 = !{!14597, !14598, !14599, !14601}
!14597 = !DILocalVariable(name: "timeout", arg: 1, scope: !14595, file: !2345, line: 194, type: !14533)
!14598 = !DILocalVariable(name: "ticks", scope: !14595, file: !2345, line: 196, type: !1556)
!14599 = !DILocalVariable(name: "__i", scope: !14600, file: !2345, line: 198, type: !14217)
!14600 = distinct !DILexicalBlock(scope: !14595, file: !2345, line: 198, column: 2)
!14601 = !DILocalVariable(name: "__key", scope: !14600, file: !2345, line: 198, type: !14217)
!14602 = !DILocation(line: 0, scope: !14595)
!14603 = !DILocation(line: 0, scope: !14600)
!14604 = !DILocation(line: 0, scope: !14239, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 198, column: 2, scope: !14600)
!14606 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14607)
!14607 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14605)
!14608 = !DILocation(line: 0, scope: !14248, inlinedAt: !14607)
!14609 = !DILocation(line: 199, column: 11, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14611, file: !2345, line: 198, column: 24)
!14611 = distinct !DILexicalBlock(scope: !14600, file: !2345, line: 198, column: 2)
!14612 = !DILocation(line: 199, column: 23, scope: !14610)
!14613 = !DILocation(line: 0, scope: !14307, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 198, column: 2, scope: !14611)
!14615 = !DILocation(line: 0, scope: !14315, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14614)
!14617 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14616)
!14618 = !DILocation(line: 199, column: 21, scope: !14610)
!14619 = !DILocation(line: 202, column: 2, scope: !14595)
!14620 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2345, file: !2345, line: 205, type: !14323, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14621)
!14621 = !{!14622, !14623, !14625}
!14622 = !DILocalVariable(name: "ret", scope: !14620, file: !2345, line: 207, type: !748)
!14623 = !DILocalVariable(name: "__i", scope: !14624, file: !2345, line: 209, type: !14217)
!14624 = distinct !DILexicalBlock(scope: !14620, file: !2345, line: 209, column: 2)
!14625 = !DILocalVariable(name: "__key", scope: !14624, file: !2345, line: 209, type: !14217)
!14626 = !DILocation(line: 0, scope: !14620)
!14627 = !DILocation(line: 0, scope: !14624)
!14628 = !DILocation(line: 0, scope: !14239, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 209, column: 2, scope: !14624)
!14630 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14629)
!14632 = !DILocation(line: 0, scope: !14248, inlinedAt: !14631)
!14633 = !DILocation(line: 210, column: 9, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !2345, line: 209, column: 24)
!14635 = distinct !DILexicalBlock(scope: !14624, file: !2345, line: 209, column: 2)
!14636 = !DILocation(line: 0, scope: !14307, inlinedAt: !14637)
!14637 = distinct !DILocation(line: 209, column: 2, scope: !14635)
!14638 = !DILocation(line: 0, scope: !14315, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14637)
!14640 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14639)
!14641 = !DILocation(line: 212, column: 2, scope: !14620)
!14642 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2345, file: !2345, line: 215, type: !8924, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14643)
!14643 = !{!14644, !14645, !14646, !14648, !14649, !14652, !14653}
!14644 = !DILocalVariable(name: "ticks", arg: 1, scope: !14642, file: !2345, line: 215, type: !748)
!14645 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14642, file: !2345, line: 215, type: !163)
!14646 = !DILocalVariable(name: "__i", scope: !14647, file: !2345, line: 217, type: !14217)
!14647 = distinct !DILexicalBlock(scope: !14642, file: !2345, line: 217, column: 2)
!14648 = !DILocalVariable(name: "__key", scope: !14647, file: !2345, line: 217, type: !14217)
!14649 = !DILocalVariable(name: "next_to", scope: !14650, file: !2345, line: 218, type: !103)
!14650 = distinct !DILexicalBlock(scope: !14651, file: !2345, line: 217, column: 24)
!14651 = distinct !DILexicalBlock(scope: !14647, file: !2345, line: 217, column: 2)
!14652 = !DILocalVariable(name: "sooner", scope: !14650, file: !2345, line: 219, type: !163)
!14653 = !DILocalVariable(name: "imminent", scope: !14650, file: !2345, line: 221, type: !163)
!14654 = !DILocation(line: 0, scope: !14642)
!14655 = !DILocation(line: 0, scope: !14647)
!14656 = !DILocation(line: 0, scope: !14239, inlinedAt: !14657)
!14657 = distinct !DILocation(line: 217, column: 2, scope: !14647)
!14658 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14657)
!14660 = !DILocation(line: 0, scope: !14248, inlinedAt: !14659)
!14661 = !DILocation(line: 218, column: 17, scope: !14650)
!14662 = !DILocation(line: 0, scope: !14650)
!14663 = !DILocation(line: 221, column: 27, scope: !14650)
!14664 = !DILocation(line: 233, column: 17, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14650, file: !2345, line: 233, column: 7)
!14666 = !DILocation(line: 234, column: 26, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14665, file: !2345, line: 233, column: 56)
!14668 = !DILocation(line: 234, column: 4, scope: !14667)
!14669 = !DILocation(line: 235, column: 3, scope: !14667)
!14670 = !DILocation(line: 0, scope: !14307, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 217, column: 2, scope: !14651)
!14672 = !DILocation(line: 0, scope: !14315, inlinedAt: !14673)
!14673 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14671)
!14674 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14673)
!14675 = !DILocation(line: 237, column: 1, scope: !14642)
!14676 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2345, file: !2345, line: 239, type: !14677, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{null, !748}
!14679 = !{!14680, !14681, !14682, !14684}
!14680 = !DILocalVariable(name: "ticks", arg: 1, scope: !14676, file: !2345, line: 239, type: !748)
!14681 = !DILocalVariable(name: "key", scope: !14676, file: !2345, line: 245, type: !14217)
!14682 = !DILocalVariable(name: "t", scope: !14683, file: !2345, line: 262, type: !2318)
!14683 = distinct !DILexicalBlock(scope: !14676, file: !2345, line: 261, column: 67)
!14684 = !DILocalVariable(name: "dt", scope: !14683, file: !2345, line: 263, type: !103)
!14685 = !DILocation(line: 0, scope: !14676)
!14686 = !DILocation(line: 242, column: 2, scope: !14676)
!14687 = !DILocation(line: 0, scope: !14239, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 245, column: 25, scope: !14676)
!14689 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14688)
!14691 = !DILocation(line: 0, scope: !14248, inlinedAt: !14690)
!14692 = !DILocation(line: 261, column: 9, scope: !14676)
!14693 = !DILocation(line: 261, column: 17, scope: !14676)
!14694 = !DILocation(line: 261, column: 25, scope: !14676)
!14695 = !DILocation(line: 261, column: 37, scope: !14676)
!14696 = !DILocation(line: 261, column: 47, scope: !14676)
!14697 = !DILocation(line: 261, column: 44, scope: !14676)
!14698 = !DILocation(line: 261, column: 2, scope: !14676)
!14699 = !DILocation(line: 0, scope: !14683)
!14700 = !DILocation(line: 263, column: 12, scope: !14683)
!14701 = !DILocation(line: 265, column: 16, scope: !14683)
!14702 = !DILocation(line: 265, column: 13, scope: !14683)
!14703 = !DILocation(line: 266, column: 13, scope: !14683)
!14704 = !DILocation(line: 267, column: 3, scope: !14683)
!14705 = !DILocation(line: 0, scope: !14307, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 269, column: 3, scope: !14683)
!14707 = !DILocation(line: 0, scope: !14315, inlinedAt: !14708)
!14708 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14706)
!14709 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14708)
!14710 = !DILocation(line: 270, column: 6, scope: !14683)
!14711 = !DILocation(line: 270, column: 3, scope: !14683)
!14712 = !DILocation(line: 0, scope: !14239, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 271, column: 9, scope: !14683)
!14714 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14713)
!14716 = !DILocation(line: 0, scope: !14248, inlinedAt: !14715)
!14717 = !DILocation(line: 272, column: 22, scope: !14683)
!14718 = distinct !{!14718, !14698, !14719}
!14719 = !DILocation(line: 273, column: 2, scope: !14676)
!14720 = !DILocation(line: 276, column: 19, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14722, file: !2345, line: 275, column: 23)
!14722 = distinct !DILexicalBlock(scope: !14676, file: !2345, line: 275, column: 6)
!14723 = !DILocation(line: 277, column: 2, scope: !14721)
!14724 = !DILocation(line: 279, column: 15, scope: !14676)
!14725 = !DILocation(line: 279, column: 12, scope: !14676)
!14726 = !DILocation(line: 280, column: 21, scope: !14676)
!14727 = !DILocation(line: 282, column: 24, scope: !14676)
!14728 = !DILocation(line: 282, column: 2, scope: !14676)
!14729 = !DILocation(line: 0, scope: !14307, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 284, column: 2, scope: !14676)
!14731 = !DILocation(line: 0, scope: !14315, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14730)
!14733 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14732)
!14734 = !DILocation(line: 285, column: 1, scope: !14676)
!14735 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2345, file: !2345, line: 287, type: !14736, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14738)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{!436}
!14738 = !{!14739, !14740, !14742}
!14739 = !DILocalVariable(name: "t", scope: !14735, file: !2345, line: 289, type: !1408)
!14740 = !DILocalVariable(name: "__i", scope: !14741, file: !2345, line: 291, type: !14217)
!14741 = distinct !DILexicalBlock(scope: !14735, file: !2345, line: 291, column: 2)
!14742 = !DILocalVariable(name: "__key", scope: !14741, file: !2345, line: 291, type: !14217)
!14743 = !DILocation(line: 0, scope: !14735)
!14744 = !DILocation(line: 0, scope: !14741)
!14745 = !DILocation(line: 0, scope: !14239, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 291, column: 2, scope: !14741)
!14747 = !DILocation(line: 55, column: 2, scope: !14248, inlinedAt: !14748)
!14748 = distinct !DILocation(line: 145, column: 10, scope: !14239, inlinedAt: !14746)
!14749 = !DILocation(line: 0, scope: !14248, inlinedAt: !14748)
!14750 = !DILocation(line: 292, column: 7, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !2345, line: 291, column: 24)
!14752 = distinct !DILexicalBlock(scope: !14741, file: !2345, line: 291, column: 2)
!14753 = !DILocation(line: 292, column: 19, scope: !14751)
!14754 = !DILocation(line: 0, scope: !14307, inlinedAt: !14755)
!14755 = distinct !DILocation(line: 291, column: 2, scope: !14752)
!14756 = !DILocation(line: 0, scope: !14315, inlinedAt: !14757)
!14757 = distinct !DILocation(line: 215, column: 2, scope: !14307, inlinedAt: !14755)
!14758 = !DILocation(line: 95, column: 2, scope: !14315, inlinedAt: !14757)
!14759 = !DILocation(line: 292, column: 17, scope: !14751)
!14760 = !DILocation(line: 294, column: 2, scope: !14735)
!14761 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2345, file: !2345, line: 297, type: !4808, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !478)
!14762 = !DILocation(line: 300, column: 19, scope: !14761)
!14763 = !DILocation(line: 300, column: 9, scope: !14761)
!14764 = !DILocation(line: 300, column: 2, scope: !14761)
!14765 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2345, file: !2345, line: 306, type: !14736, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !478)
!14766 = !DILocation(line: 308, column: 9, scope: !14765)
!14767 = !DILocation(line: 308, column: 2, scope: !14765)
!14768 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2345, file: !2345, line: 319, type: !5062, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14769)
!14769 = !{!14770, !14771, !14772, !14773}
!14770 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14768, file: !2345, line: 319, type: !106)
!14771 = !DILocalVariable(name: "start_cycles", scope: !14768, file: !2345, line: 328, type: !106)
!14772 = !DILocalVariable(name: "cycles_to_wait", scope: !14768, file: !2345, line: 331, type: !106)
!14773 = !DILocalVariable(name: "current_cycles", scope: !14774, file: !2345, line: 338, type: !106)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !2345, line: 337, column: 11)
!14775 = distinct !DILexicalBlock(scope: !14776, file: !2345, line: 337, column: 2)
!14776 = distinct !DILexicalBlock(scope: !14768, file: !2345, line: 337, column: 2)
!14777 = !DILocation(line: 0, scope: !14768)
!14778 = !DILocation(line: 322, column: 19, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14768, file: !2345, line: 322, column: 6)
!14780 = !DILocation(line: 322, column: 6, scope: !14768)
!14781 = !DILocation(line: 328, column: 26, scope: !14768)
!14782 = !DILocation(line: 333, column: 43, scope: !14768)
!14783 = !DILocation(line: 337, column: 2, scope: !14768)
!14784 = !DILocation(line: 338, column: 29, scope: !14774)
!14785 = !DILocation(line: 0, scope: !14774)
!14786 = !DILocation(line: 341, column: 23, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14774, file: !2345, line: 341, column: 7)
!14788 = !DILocation(line: 341, column: 39, scope: !14787)
!14789 = !DILocation(line: 349, column: 1, scope: !14768)
!14790 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !463, file: !463, line: 1675, type: !4808, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !478)
!14791 = !DILocation(line: 1677, column: 9, scope: !14790)
!14792 = !DILocation(line: 1677, column: 2, scope: !14790)
!14793 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14794, file: !14794, line: 24, type: !4808, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !478)
!14794 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14795 = !DILocation(line: 26, column: 9, scope: !14793)
!14796 = !DILocation(line: 26, column: 2, scope: !14793)
!14797 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2345, file: !2345, line: 364, type: !14798, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{!1408, !14207}
!14800 = !{!14801, !14802}
!14801 = !DILocalVariable(name: "timeout", arg: 1, scope: !14797, file: !2345, line: 364, type: !14207)
!14802 = !DILocalVariable(name: "dt", scope: !14797, file: !2345, line: 366, type: !1556)
!14803 = !DILocation(line: 0, scope: !14797)
!14804 = !DILocation(line: 368, column: 6, scope: !14797)
!14805 = !DILocation(line: 371, column: 10, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !2345, line: 370, column: 47)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !2345, line: 370, column: 13)
!14808 = distinct !DILexicalBlock(scope: !14797, file: !2345, line: 368, column: 6)
!14809 = !DILocation(line: 371, column: 3, scope: !14806)
!14810 = !DILocation(line: 376, column: 58, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14812, file: !2345, line: 376, column: 7)
!14812 = distinct !DILexicalBlock(scope: !14807, file: !2345, line: 372, column: 9)
!14813 = !DILocation(line: 376, column: 7, scope: !14812)
!14814 = !DILocation(line: 376, column: 43, scope: !14811)
!14815 = !DILocation(line: 377, column: 4, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14811, file: !2345, line: 376, column: 64)
!14817 = !DILocation(line: 379, column: 10, scope: !14812)
!14818 = !DILocation(line: 379, column: 33, scope: !14812)
!14819 = !DILocation(line: 379, column: 31, scope: !14812)
!14820 = !DILocation(line: 379, column: 3, scope: !14812)
!14821 = !DILocation(line: 0, scope: !14808)
!14822 = !DILocation(line: 381, column: 1, scope: !14797)
!14823 = distinct !DISubprogram(name: "boot_banner", scope: !14824, file: !14824, line: 26, type: !2917, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2903, retainedNodes: !478)
!14824 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14825 = !DILocation(line: 34, column: 2, scope: !14823)
!14826 = !DILocation(line: 36, column: 1, scope: !14823)
