; ModuleID = 'build/96b_stm32_sensor_mez/hello_world/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228247 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228237 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228317 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228307 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228287 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230140 to i8*), void (i8*)* inttoptr (i32 134228257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [17 x i8] c"Hello World! %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"96b_stm32_sensor_mez\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), %union.anon.1 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.29, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.28 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.29 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !622
@.str.30 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !583
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !566
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !539
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !555
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !585
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !599
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !601
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !603
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !605
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !607
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !609
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !611
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !613
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !615
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !617
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !627
@.str.32 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !660
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !758
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !747
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !799
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !647
@.str.41 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !865
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1144
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1114
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1100
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1045
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !645
@.str.1.42 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1146
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1118
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1116
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1059
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !643
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1159
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1122
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1120
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1065
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !641
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1161
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1126
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1124
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1074
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !639
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1163
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1130
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1128
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1080
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !637
@.str.5.43 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1165
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1134
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1132
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !635
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1167
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1138
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1136
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1092
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !633
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1169
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1142
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1140
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1098
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !655
@.str.47 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1171
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1390
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1345
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1392
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1318
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1320
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !653
@.str.1.48 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1399
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1347
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1424
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.48, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1329
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1331
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !651
@.str.2.49 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1426
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1349
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1436
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.49, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1335
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1337
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !649
@.str.3.52 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1438
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1351
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1448
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.52, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1341
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1343
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1353
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1361
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1384
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1387
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !731
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1416
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1418
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1420
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1422
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1428
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1430
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1432
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1434
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1440
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1442
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1444
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1446
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1450
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1561
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1563
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1559
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1530
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1565
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1043
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.42, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1057
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1063
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1072
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1078
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.43, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1084
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1090
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1096
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1655
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1699
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1702
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1709
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1716
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1926
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1935
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1942
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1947
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.102 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.105, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.106, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.107, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.108, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.109, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.103, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.110, i32 0, i32 0)], align 4, !dbg !1975
@.str.104 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.105 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.106 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.107 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.108 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.109 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.103 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.110 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2087
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2100
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2208
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2211
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2213
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1940
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1937
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2215
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2251
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1804
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2249
@.str.163 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2819 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2823, !srcloc !2824
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2825, !srcloc !2826
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2827, !srcloc !2828
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2829, !srcloc !2830
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2831, !srcloc !2832
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2833, !srcloc !2834
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2835, !srcloc !2836
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2837, !srcloc !2838
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2839, !srcloc !2840
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2841, !srcloc !2842
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2843, !srcloc !2844
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2845, !srcloc !2846
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2847, !srcloc !2848
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2849, !srcloc !2850
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2851, !srcloc !2852
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2853, !srcloc !2854
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2855, !srcloc !2856
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2857, !srcloc !2858
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2859, !srcloc !2860
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2861, !srcloc !2862
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2863, !srcloc !2864
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2865, !srcloc !2866
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2867, !srcloc !2868
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2869, !srcloc !2870
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2871, !srcloc !2872
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2873, !srcloc !2874
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2875, !srcloc !2876
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2877, !srcloc !2880
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2881, !srcloc !2882
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2883, !srcloc !2884
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2885, !srcloc !2886
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2887, !srcloc !2888
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2889, !srcloc !2890
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2891, !srcloc !2892
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2893, !srcloc !2894
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2895, !srcloc !2896
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2897, !srcloc !2898
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2899, !srcloc !2900
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2901, !srcloc !2902
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2903, !srcloc !2904
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2905, !srcloc !2906
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2907, !srcloc !2908
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2909, !srcloc !2910
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2927, !srcloc !2928
  ret void, !dbg !2929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2932 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !2934
  ret void, !dbg !2935
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2938, metadata !DIExpression()), !dbg !2939
  ret i32 0, !dbg !2940
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !2941 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2945, metadata !DIExpression()), !dbg !2946
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2947
  ret void, !dbg !2948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !2949 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2952
  ret i8* %1, !dbg !2953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2954 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2966, metadata !DIExpression()), !dbg !2977
  call void @llvm.dbg.value(metadata i8* %0, metadata !2965, metadata !DIExpression()), !dbg !2977
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !2978
  ret void, !dbg !2980
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2985, metadata !DIExpression()), !dbg !2987
  call void @llvm.dbg.value(metadata i8* %1, metadata !2986, metadata !DIExpression()), !dbg !2987
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2988
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !2988
  ret i32 %4, !dbg !2989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2990 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3002, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2999, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.value(metadata i8* %1, metadata !3000, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.value(metadata i8* %2, metadata !3001, metadata !DIExpression()), !dbg !3003
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3004
  ret void, !dbg !3005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3010, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.value(metadata i32 %1, metadata !3011, metadata !DIExpression()), !dbg !3013
  call void @llvm.dbg.value(metadata i32 0, metadata !3012, metadata !DIExpression()), !dbg !3013
  %3 = icmp eq i32 %1, 0, !dbg !3014
  br i1 %3, label %13, label %4, !dbg !3017

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3012, metadata !DIExpression()), !dbg !3013
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3018
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3020
  %8 = load i8, i8* %7, align 1, !dbg !3020
  %9 = zext i8 %8 to i32, !dbg !3020
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3018
  %11 = add nuw i32 %5, 1, !dbg !3021
  call void @llvm.dbg.value(metadata i32 %11, metadata !3012, metadata !DIExpression()), !dbg !3013
  %12 = icmp eq i32 %11, %1, !dbg !3014
  br i1 %12, label %13, label %4, !dbg !3017, !llvm.loop !3022

13:                                               ; preds = %4, %2
  ret void, !dbg !3024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3025 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3029, metadata !DIExpression()), !dbg !3031
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3032
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3032
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3030, metadata !DIExpression()), !dbg !3033
  call void @llvm.va_start(i8* nonnull %3), !dbg !3034
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3035
  %5 = load i32, i32* %4, align 4, !dbg !3035
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3035
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3035
  call void @llvm.va_end(i8* nonnull %3), !dbg !3036
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3037
  ret void, !dbg !3037
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3038 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3042, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.value(metadata i32 %1, metadata !3043, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.value(metadata i8* %2, metadata !3044, metadata !DIExpression()), !dbg !3047
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3048
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3048
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3045, metadata !DIExpression()), !dbg !3049
  call void @llvm.va_start(i8* nonnull %5), !dbg !3050
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3051
  %7 = load i32, i32* %6, align 4, !dbg !3051
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3051
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %9, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.va_end(i8* nonnull %5), !dbg !3052
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3053
  ret i32 %9, !dbg !3054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3055 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3062, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.value(metadata i8* %0, metadata !3059, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.value(metadata i32 %1, metadata !3060, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.value(metadata i8* %2, metadata !3061, metadata !DIExpression()), !dbg !3069
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3070
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3070
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3063, metadata !DIExpression()), !dbg !3071
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3072
  store i8* %0, i8** %7, align 4, !dbg !3072
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3072
  store i32 %1, i32* %8, align 4, !dbg !3072
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3072
  store i32 0, i32* %9, align 4, !dbg !3072
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3073
  %10 = load i32, i32* %9, align 4, !dbg !3074
  %11 = load i32, i32* %8, align 4, !dbg !3076
  %12 = icmp slt i32 %10, %11, !dbg !3077
  br i1 %12, label %13, label %15, !dbg !3078

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3079
  store i8 0, i8* %14, align 1, !dbg !3081
  br label %15, !dbg !3082

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3083
  ret i32 %10, !dbg !3084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3090, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3091, metadata !DIExpression()), !dbg !3092
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3093
  %4 = load i8*, i8** %3, align 4, !dbg !3093
  %5 = icmp eq i8* %4, null, !dbg !3095
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3096
  br i1 %5, label %12, label %8, !dbg !3097

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3098
  %10 = load i32, i32* %9, align 4, !dbg !3098
  %11 = icmp slt i32 %7, %10, !dbg !3099
  br i1 %11, label %15, label %12, !dbg !3100

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3101
  %14 = add nsw i32 %7, 1, !dbg !3103
  store i32 %14, i32* %13, align 4, !dbg !3103
  br label %25, !dbg !3104

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3105
  %17 = icmp eq i32 %7, %16, !dbg !3107
  br i1 %17, label %18, label %21, !dbg !3108

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3109
  store i32 %19, i32* %6, align 4, !dbg !3109
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3111
  store i8 0, i8* %20, align 1, !dbg !3112
  br label %25, !dbg !3113

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3114
  %23 = add nsw i32 %7, 1, !dbg !3116
  store i32 %23, i32* %6, align 4, !dbg !3116
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3117
  store i8 %22, i8* %24, align 1, !dbg !3118
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3119
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3120 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3130, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata i8* %1, metadata !3131, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata i8* %2, metadata !3132, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata i8* %3, metadata !3133, metadata !DIExpression()), !dbg !3134
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3135
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3136
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3137
  unreachable, !dbg !3138
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3139 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3243
  ret %struct.k_thread* %1, !dbg !3244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3250, metadata !DIExpression()), !dbg !3251
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3252, !srcloc !3254
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3255
  ret void, !dbg !3256
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3257 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3258, !srcloc !3260
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3261
  ret %struct.k_thread* %1, !dbg !3262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3263 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3276, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3273, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8* %1, metadata !3274, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8* %2, metadata !3275, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %4, metadata !3277, metadata !DIExpression()), !dbg !3404
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3405
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3405
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3278, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 0, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i1 undef, metadata !3284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3404
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3407

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3407

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3408
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3276, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8* %30, metadata !3275, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %29, metadata !3282, metadata !DIExpression()), !dbg !3404
  %31 = load i8, i8* %30, align 1, !dbg !3409
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3407

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3409
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3410
  call void @llvm.dbg.value(metadata i8* %34, metadata !3275, metadata !DIExpression()), !dbg !3404
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %35, metadata !3286, metadata !DIExpression()), !dbg !3411
  %36 = icmp slt i32 %35, 0, !dbg !3412
  %37 = add i32 %29, 1, !dbg !3410
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %36, label %365, label %28, !llvm.loop !3414

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3416
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3291, metadata !DIExpression()), !dbg !3417
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3417
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3336, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3339, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* %30, metadata !3342, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 -1, metadata !3343, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 -1, metadata !3344, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* null, metadata !3345, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* %14, metadata !3346, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8 0, metadata !3347, metadata !DIExpression()), !dbg !3418
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !3419
  call void @llvm.dbg.value(metadata i8* %39, metadata !3275, metadata !DIExpression()), !dbg !3404
  %40 = load i24, i24* %15, align 8, !dbg !3420
  %41 = and i24 %40, 256, !dbg !3420
  %42 = icmp eq i24 %41, 0, !dbg !3420
  br i1 %42, label %51, label %43, !dbg !3422

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3423
  call void @llvm.dbg.value(metadata i8* %44, metadata !3276, metadata !DIExpression()), !dbg !3404
  %45 = bitcast i8* %27 to i32*, !dbg !3423
  %46 = load i32, i32* %45, align 4, !dbg !3423
  call void @llvm.dbg.value(metadata i32 %46, metadata !3343, metadata !DIExpression()), !dbg !3418
  %47 = icmp slt i32 %46, 0, !dbg !3425
  br i1 %47, label %48, label %56, !dbg !3427

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3428
  store i24 %49, i24* %15, align 8, !dbg !3428
  %50 = sub nsw i32 0, %46, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %50, metadata !3343, metadata !DIExpression()), !dbg !3418
  br label %56, !dbg !3431

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3432
  %53 = icmp eq i24 %52, 0, !dbg !3432
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3434
  br label %56, !dbg !3434

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3435
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3418
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3276, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %58, metadata !3343, metadata !DIExpression()), !dbg !3418
  %60 = and i24 %57, 1024, !dbg !3435
  %61 = icmp eq i24 %60, 0, !dbg !3435
  br i1 %61, label %69, label %62, !dbg !3436

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3437
  call void @llvm.dbg.value(metadata i8* %63, metadata !3276, metadata !DIExpression()), !dbg !3404
  %64 = bitcast i8* %59 to i32*, !dbg !3437
  %65 = load i32, i32* %64, align 4, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %65, metadata !3348, metadata !DIExpression()), !dbg !3438
  %66 = icmp slt i32 %65, 0, !dbg !3439
  br i1 %66, label %67, label %74, !dbg !3441

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3442
  store i24 %68, i24* %15, align 8, !dbg !3442
  br label %74, !dbg !3444

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3445
  %71 = icmp eq i24 %70, 0, !dbg !3445
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3447
  br label %74, !dbg !3447

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3448
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3418
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3418
  call void @llvm.dbg.value(metadata i8* %77, metadata !3276, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %76, metadata !3344, metadata !DIExpression()), !dbg !3418
  store i32 0, i32* %16, align 4, !dbg !3449
  store i32 0, i32* %17, align 8, !dbg !3450
  %78 = lshr i24 %75, 16, !dbg !3448
  call void @llvm.dbg.value(metadata i24 %78, metadata !3351, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3418
  %79 = lshr i24 %75, 11, !dbg !3451
  %80 = and i24 %79, 15, !dbg !3451
  %81 = zext i24 %80 to i32, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %81, metadata !3352, metadata !DIExpression()), !dbg !3418
  %82 = trunc i24 %78 to i3, !dbg !3452
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3452

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3453

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %85, metadata !3276, metadata !DIExpression()), !dbg !3404
  %86 = bitcast i8* %77 to i32*, !dbg !3456
  %87 = load i32, i32* %86, align 4, !dbg !3456
  %88 = sext i32 %87 to i64, !dbg !3456
  store i64 %88, i64* %20, align 8, !dbg !3458
  br label %115, !dbg !3459

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3460
  call void @llvm.dbg.value(metadata i8* %90, metadata !3276, metadata !DIExpression()), !dbg !3404
  %91 = bitcast i8* %77 to i32*, !dbg !3460
  %92 = load i32, i32* %91, align 4, !dbg !3460
  %93 = sext i32 %92 to i64, !dbg !3460
  store i64 %93, i64* %20, align 8, !dbg !3463
  br label %115, !dbg !3464

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3465
  %96 = add i32 %95, 7, !dbg !3465
  %97 = and i32 %96, -8, !dbg !3465
  %98 = inttoptr i32 %97 to i8*, !dbg !3465
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3465
  call void @llvm.dbg.value(metadata i8* %99, metadata !3276, metadata !DIExpression()), !dbg !3404
  %100 = inttoptr i32 %97 to i64*, !dbg !3465
  %101 = load i64, i64* %100, align 8, !dbg !3465
  store i64 %101, i64* %20, align 8, !dbg !3466
  br label %115, !dbg !3467

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3468
  %104 = add i32 %103, 7, !dbg !3468
  %105 = and i32 %104, -8, !dbg !3468
  %106 = inttoptr i32 %105 to i8*, !dbg !3468
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3468
  call void @llvm.dbg.value(metadata i8* %107, metadata !3276, metadata !DIExpression()), !dbg !3404
  %108 = inttoptr i32 %105 to i64*, !dbg !3468
  %109 = load i64, i64* %108, align 8, !dbg !3468
  store i64 %109, i64* %20, align 8, !dbg !3469
  br label %115, !dbg !3470

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3471
  call void @llvm.dbg.value(metadata i8* %111, metadata !3276, metadata !DIExpression()), !dbg !3404
  %112 = bitcast i8* %77 to i32*, !dbg !3471
  %113 = load i32, i32* %112, align 4, !dbg !3471
  %114 = sext i32 %113 to i64, !dbg !3472
  store i64 %114, i64* %20, align 8, !dbg !3473
  br label %115, !dbg !3474

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3475
  call void @llvm.dbg.value(metadata i8* %117, metadata !3276, metadata !DIExpression()), !dbg !3404
  %118 = trunc i24 %79 to i4, !dbg !3476
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3476

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3477
  %121 = ashr exact i64 %120, 56, !dbg !3477
  store i64 %121, i64* %20, align 8, !dbg !3480
  br label %177, !dbg !3481

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3482
  %124 = ashr exact i64 %123, 48, !dbg !3482
  store i64 %124, i64* %20, align 8, !dbg !3485
  br label %177, !dbg !3486

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3487

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3490
  call void @llvm.dbg.value(metadata i8* %127, metadata !3276, metadata !DIExpression()), !dbg !3404
  %128 = bitcast i8* %77 to i32*, !dbg !3490
  %129 = load i32, i32* %128, align 4, !dbg !3490
  %130 = zext i32 %129 to i64, !dbg !3490
  store i64 %130, i64* %20, align 8, !dbg !3492
  br label %157, !dbg !3493

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %132, metadata !3276, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8* %132, metadata !3276, metadata !DIExpression()), !dbg !3404
  %133 = bitcast i8* %77 to i32*, !dbg !3494
  %134 = load i32, i32* %133, align 4, !dbg !3494
  %135 = zext i32 %134 to i64, !dbg !3494
  store i64 %135, i64* %20, align 8, !dbg !3494
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3496
  %138 = add i32 %137, 7, !dbg !3496
  %139 = and i32 %138, -8, !dbg !3496
  %140 = inttoptr i32 %139 to i8*, !dbg !3496
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3496
  call void @llvm.dbg.value(metadata i8* %141, metadata !3276, metadata !DIExpression()), !dbg !3404
  %142 = inttoptr i32 %139 to i64*, !dbg !3496
  %143 = load i64, i64* %142, align 8, !dbg !3496
  store i64 %143, i64* %20, align 8, !dbg !3497
  br label %157, !dbg !3498

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3499
  %146 = add i32 %145, 7, !dbg !3499
  %147 = and i32 %146, -8, !dbg !3499
  %148 = inttoptr i32 %147 to i8*, !dbg !3499
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3499
  call void @llvm.dbg.value(metadata i8* %149, metadata !3276, metadata !DIExpression()), !dbg !3404
  %150 = inttoptr i32 %147 to i64*, !dbg !3499
  %151 = load i64, i64* %150, align 8, !dbg !3499
  store i64 %151, i64* %20, align 8, !dbg !3500
  br label %157, !dbg !3501

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %153, metadata !3276, metadata !DIExpression()), !dbg !3404
  %154 = bitcast i8* %77 to i32*, !dbg !3502
  %155 = load i32, i32* %154, align 4, !dbg !3502
  %156 = zext i32 %155 to i64, !dbg !3503
  store i64 %156, i64* %20, align 8, !dbg !3504
  br label %157, !dbg !3505

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3506
  call void @llvm.dbg.value(metadata i8* %159, metadata !3276, metadata !DIExpression()), !dbg !3404
  %160 = trunc i24 %79 to i4, !dbg !3507
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3507

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3508
  store i64 %162, i64* %20, align 8, !dbg !3511
  br label %177, !dbg !3512

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3513
  store i64 %164, i64* %20, align 8, !dbg !3516
  br label %177, !dbg !3517

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3518
  %167 = add i32 %166, 7, !dbg !3518
  %168 = and i32 %167, -8, !dbg !3518
  %169 = inttoptr i32 %168 to i8*, !dbg !3518
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3518
  call void @llvm.dbg.value(metadata i8* %170, metadata !3276, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8* %170, metadata !3276, metadata !DIExpression()), !dbg !3404
  %171 = inttoptr i32 %168 to double*, !dbg !3518
  %172 = load double, double* %171, align 8, !dbg !3518
  store double %172, double* %19, align 8, !dbg !3518
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3522
  call void @llvm.dbg.value(metadata i8* %174, metadata !3276, metadata !DIExpression()), !dbg !3404
  %175 = bitcast i8* %77 to i8**, !dbg !3522
  %176 = load i8*, i8** %175, align 4, !dbg !3522
  store i8* %176, i8** %18, align 8, !dbg !3525
  br label %177, !dbg !3526

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3418
  call void @llvm.dbg.value(metadata i8* %178, metadata !3276, metadata !DIExpression()), !dbg !3404
  %179 = and i24 %75, 3, !dbg !3527
  %180 = icmp eq i24 %179, 0, !dbg !3527
  br i1 %180, label %185, label %181, !dbg !3527

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %182, metadata !3353, metadata !DIExpression()), !dbg !3529
  %183 = icmp slt i32 %182, 0, !dbg !3530
  %184 = add i32 %182, %29, !dbg !3528
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3532
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3533

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %188, metadata !3357, metadata !DIExpression()), !dbg !3535
  %189 = icmp slt i32 %188, 0, !dbg !3536
  %190 = add i32 %29, 1, !dbg !3534
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3538
  call void @llvm.dbg.value(metadata i8* %192, metadata !3345, metadata !DIExpression()), !dbg !3418
  %193 = icmp sgt i32 %76, -1, !dbg !3539
  br i1 %193, label %194, label %196, !dbg !3541

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !3542
  call void @llvm.dbg.value(metadata i32 %195, metadata !3360, metadata !DIExpression()), !dbg !3544
  br label %241, !dbg !3545

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %197, metadata !3360, metadata !DIExpression()), !dbg !3544
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3345, metadata !DIExpression()), !dbg !3418
  %199 = load i64, i64* %20, align 8, !dbg !3548
  %200 = trunc i64 %199 to i8, !dbg !3549
  store i8 %200, i8* %10, align 1, !dbg !3550
  call void @llvm.dbg.value(metadata i8* %23, metadata !3346, metadata !DIExpression()), !dbg !3418
  br label %245, !dbg !3551

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3552
  %203 = icmp eq i24 %202, 0, !dbg !3552
  %204 = trunc i24 %75 to i8, !dbg !3554
  %205 = shl i8 %204, 1, !dbg !3554
  %206 = and i8 %205, 32, !dbg !3554
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3554
  call void @llvm.dbg.value(metadata i8 %207, metadata !3347, metadata !DIExpression()), !dbg !3418
  %208 = load i64, i64* %20, align 8, !dbg !3555
  call void @llvm.dbg.value(metadata i64 %208, metadata !3283, metadata !DIExpression()), !dbg !3404
  %209 = icmp slt i64 %208, 0, !dbg !3556
  br i1 %209, label %210, label %212, !dbg !3558

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3347, metadata !DIExpression()), !dbg !3418
  %211 = sub nsw i64 0, %208, !dbg !3559
  store i64 %211, i64* %20, align 8, !dbg !3561
  br label %212, !dbg !3562

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3418
  call void @llvm.dbg.value(metadata i8 %213, metadata !3347, metadata !DIExpression()), !dbg !3418
  %214 = load i64, i64* %20, align 8, !dbg !3563
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3564
  call void @llvm.dbg.value(metadata i8* %215, metadata !3345, metadata !DIExpression()), !dbg !3418
  br label %216, !dbg !3565

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3566
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3567
  call void @llvm.dbg.value(metadata i8* %218, metadata !3345, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8 %217, metadata !3347, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.label(metadata !3403), !dbg !3568
  %219 = icmp sgt i32 %76, -1, !dbg !3569
  br i1 %219, label %222, label %220, !dbg !3570

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3571
  br label %245, !dbg !3570

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3573
  %224 = sub i32 %22, %223, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %224, metadata !3362, metadata !DIExpression()), !dbg !3574
  %225 = load i24, i24* %15, align 8, !dbg !3575
  %226 = and i24 %225, -65, !dbg !3575
  store i24 %226, i24* %15, align 8, !dbg !3575
  %227 = icmp ugt i32 %76, %224, !dbg !3576
  br i1 %227, label %228, label %245, !dbg !3578

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3579
  store i32 %229, i32* %16, align 4, !dbg !3581
  br label %245, !dbg !3582

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3583
  %232 = icmp eq i8* %231, null, !dbg !3585
  br i1 %232, label %245, label %233, !dbg !3586

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3587
  %235 = zext i32 %234 to i64, !dbg !3587
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3589
  call void @llvm.dbg.value(metadata i8* %236, metadata !3345, metadata !DIExpression()), !dbg !3418
  %237 = load i24, i24* %15, align 8, !dbg !3590
  %238 = or i24 %237, 1048576, !dbg !3590
  store i24 %238, i24* %15, align 8, !dbg !3590
  store i8 120, i8* %21, align 1, !dbg !3591
  br label %216, !dbg !3592

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3593
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !3596
  br label %363, !dbg !3597

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3598
  call void @llvm.dbg.value(metadata i32 %242, metadata !3360, metadata !DIExpression()), !dbg !3544
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3599
  call void @llvm.dbg.value(metadata i32 -1, metadata !3344, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 %29, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8* %192, metadata !3345, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8* %243, metadata !3346, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8 0, metadata !3347, metadata !DIExpression()), !dbg !3418
  %244 = icmp eq i8* %192, null, !dbg !3600
  br i1 %244, label %363, label %245, !dbg !3602, !llvm.loop !3414

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3571
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata i32 0, metadata !3366, metadata !DIExpression()), !dbg !3418
  %250 = zext i8 %249 to i32, !dbg !3603
  %251 = icmp eq i8 %249, 0, !dbg !3605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata i32 undef, metadata !3365, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata i32 undef, metadata !3365, metadata !DIExpression()), !dbg !3418
  %252 = icmp sgt i32 %58, 0, !dbg !3606
  br i1 %252, label %253, label %302, !dbg !3607

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3571
  %255 = icmp eq i24 %254, 0, !dbg !3571
  %256 = ptrtoint i8* %248 to i32, !dbg !3608
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  %257 = ptrtoint i8* %247 to i32, !dbg !3608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  %258 = xor i1 %251, true, !dbg !3609
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  %259 = sext i1 %258 to i32, !dbg !3609
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  %260 = lshr i24 %246, 19, !dbg !3610
  %261 = and i24 %260, 1, !dbg !3610
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3610
  %263 = zext i24 %262 to i32, !dbg !3610
  %264 = add i32 %257, %259, !dbg !3610
  %265 = add i32 %256, %263, !dbg !3610
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  %266 = and i24 %246, 4194304, !dbg !3611
  %267 = icmp eq i24 %266, 0, !dbg !3611
  %268 = load i32, i32* %16, align 4, !dbg !3613
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3365, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3418
  call void @llvm.dbg.value(metadata i32 undef, metadata !3365, metadata !DIExpression()), !dbg !3418
  %269 = load i32, i32* %17, align 8, !dbg !3614
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3614
  call void @llvm.dbg.value(metadata i32 undef, metadata !3365, metadata !DIExpression()), !dbg !3418
  %271 = add i32 %264, %58, !dbg !3614
  %272 = add i32 %265, %268, !dbg !3614
  %273 = add i32 %272, %270, !dbg !3615
  %274 = sub i32 %271, %273, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %274, metadata !3343, metadata !DIExpression()), !dbg !3418
  %275 = and i24 %246, 4, !dbg !3616
  %276 = icmp eq i24 %275, 0, !dbg !3616
  br i1 %276, label %277, label %302, !dbg !3617

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3367, metadata !DIExpression()), !dbg !3618
  %278 = and i24 %246, 64, !dbg !3619
  %279 = icmp eq i24 %278, 0, !dbg !3619
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3620
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3620
  %282 = select i1 %279, i32 32, i32 48, !dbg !3620
  br i1 %280, label %287, label %283, !dbg !3620

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %284, metadata !3372, metadata !DIExpression()), !dbg !3622
  %285 = icmp slt i32 %284, 0, !dbg !3623
  %286 = add i32 %29, 1, !dbg !3621
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3418
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %290, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i8 undef, metadata !3367, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i8 %288, metadata !3347, metadata !DIExpression()), !dbg !3418
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3625
  %292 = add i32 %291, -1, !dbg !3625
  br label %293, !dbg !3625

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3626
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %295, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %294, metadata !3343, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i32 %294, metadata !3343, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3418
  %296 = icmp sgt i32 %294, 0, !dbg !3627
  br i1 %296, label %297, label %302, !dbg !3625

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %298, metadata !3343, metadata !DIExpression()), !dbg !3418
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %299, metadata !3378, metadata !DIExpression()), !dbg !3630
  %300 = icmp slt i32 %299, 0, !dbg !3631
  %301 = add i32 %295, 1, !dbg !3629
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %300, label %361, label %293, !llvm.loop !3633

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3418
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3418
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %305, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %304, metadata !3343, metadata !DIExpression()), !dbg !3418
  call void @llvm.dbg.value(metadata i8 %303, metadata !3347, metadata !DIExpression()), !dbg !3418
  %306 = icmp eq i8 %303, 0, !dbg !3635
  br i1 %306, label %312, label %307, !dbg !3636

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3637
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !3638
  call void @llvm.dbg.value(metadata i32 %309, metadata !3381, metadata !DIExpression()), !dbg !3639
  %310 = icmp slt i32 %309, 0, !dbg !3640
  %311 = add i32 %305, 1, !dbg !3638
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %313, metadata !3282, metadata !DIExpression()), !dbg !3404
  %314 = lshr i24 %246, 20, !dbg !3642
  %315 = lshr i24 %246, 19, !dbg !3643
  %316 = or i24 %314, %315, !dbg !3644
  %317 = and i24 %316, 1, !dbg !3644
  %318 = icmp eq i24 %317, 0, !dbg !3644
  br i1 %318, label %323, label %319, !dbg !3645

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %320, metadata !3385, metadata !DIExpression()), !dbg !3647
  %321 = icmp slt i32 %320, 0, !dbg !3648
  %322 = add i32 %313, 1, !dbg !3646
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %324, metadata !3282, metadata !DIExpression()), !dbg !3404
  %325 = and i24 %246, 1048576, !dbg !3650
  %326 = icmp eq i24 %325, 0, !dbg !3650
  br i1 %326, label %333, label %327, !dbg !3651

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3652
  %329 = zext i8 %328 to i32, !dbg !3652
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %330, metadata !3391, metadata !DIExpression()), !dbg !3653
  %331 = icmp slt i32 %330, 0, !dbg !3654
  %332 = add i32 %324, 1, !dbg !3652
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %334, metadata !3282, metadata !DIExpression()), !dbg !3404
  %335 = load i32, i32* %16, align 4, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %335, metadata !3366, metadata !DIExpression()), !dbg !3418
  br label %336, !dbg !3657

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3658
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %338, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %337, metadata !3366, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3418
  %339 = icmp sgt i32 %337, 0, !dbg !3659
  br i1 %339, label %340, label %345, !dbg !3657

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %341, metadata !3366, metadata !DIExpression()), !dbg !3418
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %342, metadata !3395, metadata !DIExpression()), !dbg !3662
  %343 = icmp slt i32 %342, 0, !dbg !3663
  %344 = add i32 %338, 1, !dbg !3661
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %343, label %361, label %336, !llvm.loop !3665

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %346, metadata !3398, metadata !DIExpression()), !dbg !3668
  %347 = icmp slt i32 %346, 0, !dbg !3669
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %349, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %304, metadata !3343, metadata !DIExpression()), !dbg !3418
  %350 = icmp sgt i32 %304, 0, !dbg !3671
  br i1 %350, label %351, label %363, !dbg !3672

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3672
  %353 = add i32 %352, %338, !dbg !3672
  br label %354, !dbg !3672

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %355, metadata !3343, metadata !DIExpression()), !dbg !3418
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %356, metadata !3400, metadata !DIExpression()), !dbg !3674
  %357 = icmp slt i32 %356, 0, !dbg !3675
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3677
  call void @llvm.dbg.value(metadata i32 undef, metadata !3282, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %359, metadata !3343, metadata !DIExpression()), !dbg !3418
  %360 = icmp sgt i32 %355, 1, !dbg !3671
  br i1 %360, label %354, label %363, !dbg !3672, !llvm.loop !3678

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3415
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %364, metadata !3282, metadata !DIExpression()), !dbg !3404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3415
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3404
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3680
  ret i32 %366, !dbg !3680
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3681 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3685, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i8* %1, metadata !3686, metadata !DIExpression()), !dbg !3687
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3688
  store i24 0, i24* %3, align 4, !dbg !3688
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3688
  store i8 0, i8* %4, align 1, !dbg !3688
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3688
  store i32 0, i32* %5, align 4, !dbg !3688
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3688
  store i32 0, i32* %6, align 4, !dbg !3688
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3689
  call void @llvm.dbg.value(metadata i8* %7, metadata !3686, metadata !DIExpression()), !dbg !3687
  %8 = load i8, i8* %7, align 1, !dbg !3690
  %9 = icmp eq i8 %8, 37, !dbg !3692
  br i1 %9, label %10, label %12, !dbg !3693

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3694
  call void @llvm.dbg.value(metadata i8* %11, metadata !3686, metadata !DIExpression()), !dbg !3687
  store i8 37, i8* %4, align 1, !dbg !3696
  br label %18, !dbg !3697

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !3698
  call void @llvm.dbg.value(metadata i8* %13, metadata !3686, metadata !DIExpression()), !dbg !3687
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !3699
  call void @llvm.dbg.value(metadata i8* %14, metadata !3686, metadata !DIExpression()), !dbg !3687
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !3700
  call void @llvm.dbg.value(metadata i8* %15, metadata !3686, metadata !DIExpression()), !dbg !3687
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !3701
  call void @llvm.dbg.value(metadata i8* %16, metadata !3686, metadata !DIExpression()), !dbg !3687
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !3702
  call void @llvm.dbg.value(metadata i8* %17, metadata !3686, metadata !DIExpression()), !dbg !3687
  br label %18, !dbg !3703

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3687
  ret i8* %19, !dbg !3704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3705 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3709, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i8* %1, metadata !3710, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i8* %2, metadata !3711, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i8* %3, metadata !3712, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i32 0, metadata !3713, metadata !DIExpression()), !dbg !3716
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3717

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3718
  call void @llvm.dbg.value(metadata i32 %9, metadata !3713, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i8* %8, metadata !3711, metadata !DIExpression()), !dbg !3716
  %10 = icmp ult i8* %8, %3, !dbg !3719
  br i1 %10, label %11, label %13, !dbg !3720

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3721
  br label %17, !dbg !3720

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3722

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3723
  %16 = icmp eq i8 %15, 0, !dbg !3722
  br i1 %16, label %24, label %17, !dbg !3717

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3721
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3724
  call void @llvm.dbg.value(metadata i8* %19, metadata !3711, metadata !DIExpression()), !dbg !3716
  %20 = zext i8 %18 to i32, !dbg !3725
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !3726
  call void @llvm.dbg.value(metadata i32 %21, metadata !3714, metadata !DIExpression()), !dbg !3727
  %22 = icmp slt i32 %21, 0, !dbg !3728
  %23 = add i32 %9, 1, !dbg !3730
  call void @llvm.dbg.value(metadata i32 undef, metadata !3713, metadata !DIExpression()), !dbg !3716
  br i1 %22, label %24, label %7, !llvm.loop !3731

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3716
  ret i32 %25, !dbg !3733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3734 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3738, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3739, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i8* %2, metadata !3740, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i8* %3, metadata !3741, metadata !DIExpression()), !dbg !3748
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3749
  %6 = load i8, i8* %5, align 1, !dbg !3749
  %7 = zext i8 %6 to i32, !dbg !3750
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !3751
  %9 = icmp eq i32 %8, 0, !dbg !3751
  call void @llvm.dbg.value(metadata i1 %9, metadata !3742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3748
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !3752
  call void @llvm.dbg.value(metadata i32 %10, metadata !3743, metadata !DIExpression()), !dbg !3748
  %11 = ptrtoint i8* %3 to i32, !dbg !3753
  %12 = ptrtoint i8* %2 to i32, !dbg !3753
  %13 = sub i32 %11, %12, !dbg !3753
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3754
  call void @llvm.dbg.value(metadata i8* %14, metadata !3745, metadata !DIExpression()), !dbg !3748
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3755

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3748
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3738, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i8* %18, metadata !3745, metadata !DIExpression()), !dbg !3748
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3756
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3757
  call void @llvm.dbg.value(metadata i32 %25, metadata !3746, metadata !DIExpression()), !dbg !3758
  %26 = icmp ult i32 %25, 10, !dbg !3759
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3760
  %28 = add i32 %27, %25, !dbg !3758
  %29 = trunc i32 %28 to i8, !dbg !3760
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3761
  call void @llvm.dbg.value(metadata i8* %30, metadata !3745, metadata !DIExpression()), !dbg !3748
  store i8 %29, i8* %30, align 1, !dbg !3762
  call void @llvm.dbg.value(metadata i64 %22, metadata !3738, metadata !DIExpression()), !dbg !3748
  %31 = icmp uge i64 %19, %15, !dbg !3763
  %32 = icmp ugt i8* %30, %2, !dbg !3764
  %33 = and i1 %31, %32, !dbg !3764
  br i1 %33, label %17, label %34, !dbg !3765, !llvm.loop !3766

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3768
  %36 = load i24, i24* %35, align 4, !dbg !3768
  %37 = and i24 %36, 32, !dbg !3768
  %38 = icmp eq i24 %37, 0, !dbg !3768
  br i1 %38, label %44, label %39, !dbg !3770

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3771

40:                                               ; preds = %39
  br label %41, !dbg !3773

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3777
  store i24 %43, i24* %35, align 4, !dbg !3777
  br label %44, !dbg !3778

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3778
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !3779 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3785, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %1, metadata !3786, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %2, metadata !3787, metadata !DIExpression()), !dbg !3788
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3789
  %5 = load i24, i24* %4, align 4, !dbg !3789
  %6 = lshr i24 %5, 11, !dbg !3789
  %7 = and i24 %6, 15, !dbg !3789
  %8 = zext i24 %7 to i32, !dbg !3789
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3790

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3791
  store i32 %2, i32* %10, align 4, !dbg !3793
  br label %28, !dbg !3794

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3795
  store i8 %12, i8* %1, align 1, !dbg !3796
  br label %28, !dbg !3797

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3798
  %15 = bitcast i8* %1 to i16*, !dbg !3799
  store i16 %14, i16* %15, align 2, !dbg !3800
  br label %28, !dbg !3801

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3802
  store i32 %2, i32* %17, align 4, !dbg !3803
  br label %28, !dbg !3804

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3805
  %20 = bitcast i8* %1 to i64*, !dbg !3806
  store i64 %19, i64* %20, align 8, !dbg !3807
  br label %28, !dbg !3808

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3809
  %23 = bitcast i8* %1 to i64*, !dbg !3810
  store i64 %22, i64* %23, align 8, !dbg !3811
  br label %28, !dbg !3812

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3813
  store i32 %2, i32* %25, align 4, !dbg !3814
  br label %28, !dbg !3815

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3816
  store i32 %2, i32* %27, align 4, !dbg !3817
  br label %28, !dbg !3818

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3819
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3823, metadata !DIExpression()), !dbg !3824
  %2 = add i32 %0, -65, !dbg !3825
  %3 = icmp ult i32 %2, 26, !dbg !3826
  %4 = zext i1 %3 to i32, !dbg !3826
  ret i32 %4, !dbg !3827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3828 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3832, metadata !DIExpression()), !dbg !3833
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3834

2:                                                ; preds = %1
  br label %4, !dbg !3835

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3837

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3838
  ret i32 %5, !dbg !3839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3840 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3842, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i8* %1, metadata !3843, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i8 1, metadata !3844, metadata !DIExpression()), !dbg !3845
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3846

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3844, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i8* %5, metadata !3843, metadata !DIExpression()), !dbg !3845
  %6 = load i8, i8* %5, align 1, !dbg !3847
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3849

7:                                                ; preds = %4
  br label %11, !dbg !3850

8:                                                ; preds = %4
  br label %11, !dbg !3852

9:                                                ; preds = %4
  br label %11, !dbg !3853

10:                                               ; preds = %4
  br label %11, !dbg !3854

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3855
  %14 = or i24 %13, %12, !dbg !3855
  store i24 %14, i24* %3, align 4, !dbg !3855
  call void @llvm.dbg.value(metadata i8 poison, metadata !3844, metadata !DIExpression()), !dbg !3845
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3843, metadata !DIExpression()), !dbg !3845
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3844, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i8* %15, metadata !3843, metadata !DIExpression()), !dbg !3845
  %17 = load i24, i24* %3, align 4, !dbg !3856
  %18 = and i24 %17, 68, !dbg !3858
  %19 = icmp eq i24 %18, 68, !dbg !3858
  br i1 %19, label %20, label %22, !dbg !3858

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3859
  store i24 %21, i24* %3, align 4, !dbg !3859
  br label %22, !dbg !3861

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3862
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3863 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3865, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8* %1, metadata !3866, metadata !DIExpression()), !dbg !3869
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3870
  %5 = load i24, i24* %4, align 4, !dbg !3871
  %6 = or i24 %5, 128, !dbg !3871
  store i24 %6, i24* %4, align 4, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %1, metadata !3866, metadata !DIExpression()), !dbg !3869
  %7 = load i8, i8* %1, align 1, !dbg !3872
  %8 = icmp eq i8 %7, 42, !dbg !3874
  br i1 %8, label %9, label %12, !dbg !3875

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3876
  store i24 %10, i24* %4, align 4, !dbg !3876
  call void @llvm.dbg.value(metadata i8* %1, metadata !3866, metadata !DIExpression()), !dbg !3869
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3878
  call void @llvm.dbg.value(metadata i8* %11, metadata !3866, metadata !DIExpression()), !dbg !3869
  store i8* %11, i8** %3, align 4, !dbg !3878
  br label %29, !dbg !3879

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3867, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8** %3, metadata !3866, metadata !DIExpression(DW_OP_deref)), !dbg !3869
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %13, metadata !3868, metadata !DIExpression()), !dbg !3869
  %14 = load i8*, i8** %3, align 4, !dbg !3881
  call void @llvm.dbg.value(metadata i8* %14, metadata !3866, metadata !DIExpression()), !dbg !3869
  %15 = icmp eq i8* %14, %1, !dbg !3883
  br i1 %15, label %29, label %16, !dbg !3884

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3885
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3887
  store i32 %13, i32* %18, align 4, !dbg !3888
  %19 = lshr i32 %13, 31, !dbg !3889
  %20 = lshr i24 %17, 1, !dbg !3890
  %21 = and i24 %20, 1, !dbg !3890
  %22 = zext i24 %21 to i32, !dbg !3890
  %23 = or i32 %19, %22, !dbg !3890
  %24 = trunc i32 %23 to i24, !dbg !3890
  %25 = shl nuw nsw i24 %24, 1, !dbg !3890
  %26 = and i24 %17, -131, !dbg !3890
  %27 = or i24 %26, 128, !dbg !3890
  %28 = or i24 %25, %27, !dbg !3890
  store i24 %28, i24* %4, align 4, !dbg !3890
  br label %29, !dbg !3891

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3869
  ret i8* %30, !dbg !3892
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3893 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3895, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i8* %1, metadata !3896, metadata !DIExpression()), !dbg !3898
  %4 = load i8, i8* %1, align 1, !dbg !3899
  %5 = icmp eq i8 %4, 46, !dbg !3900
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !3901
  %7 = load i24, i24* %6, align 4, !dbg !3902
  %8 = select i1 %5, i24 512, i24 0, !dbg !3902
  %9 = and i24 %7, -513, !dbg !3902
  %10 = or i24 %9, %8, !dbg !3902
  store i24 %10, i24* %6, align 4, !dbg !3902
  br i1 %5, label %11, label %32, !dbg !3903

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3896, metadata !DIExpression()), !dbg !3898
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3904
  call void @llvm.dbg.value(metadata i8* %12, metadata !3896, metadata !DIExpression()), !dbg !3898
  store i8* %12, i8** %3, align 4, !dbg !3904
  %13 = load i8, i8* %12, align 1, !dbg !3905
  %14 = icmp eq i8 %13, 42, !dbg !3907
  br i1 %14, label %15, label %18, !dbg !3908

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !3909
  store i24 %16, i24* %6, align 4, !dbg !3909
  call void @llvm.dbg.value(metadata i8* %12, metadata !3896, metadata !DIExpression()), !dbg !3898
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3911
  call void @llvm.dbg.value(metadata i8* %17, metadata !3896, metadata !DIExpression()), !dbg !3898
  store i8* %17, i8** %3, align 4, !dbg !3911
  br label %32, !dbg !3912

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !3896, metadata !DIExpression(DW_OP_deref)), !dbg !3898
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %19, metadata !3897, metadata !DIExpression()), !dbg !3898
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3914
  store i32 %19, i32* %20, align 4, !dbg !3915
  %21 = lshr i32 %19, 31, !dbg !3916
  %22 = load i24, i24* %6, align 4, !dbg !3917
  %23 = lshr i24 %22, 1, !dbg !3917
  %24 = and i24 %23, 1, !dbg !3917
  %25 = zext i24 %24 to i32, !dbg !3917
  %26 = or i32 %21, %25, !dbg !3917
  %27 = trunc i32 %26 to i24, !dbg !3917
  %28 = shl nuw nsw i24 %27, 1, !dbg !3917
  %29 = and i24 %22, -3, !dbg !3917
  %30 = or i24 %28, %29, !dbg !3917
  store i24 %30, i24* %6, align 4, !dbg !3917
  %31 = load i8*, i8** %3, align 4, !dbg !3918
  call void @llvm.dbg.value(metadata i8* %31, metadata !3896, metadata !DIExpression()), !dbg !3898
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !3898
  ret i8* %33, !dbg !3919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !3920 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3922, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata i8* %1, metadata !3923, metadata !DIExpression()), !dbg !3924
  %3 = load i8, i8* %1, align 1, !dbg !3925
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !3926

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3927
  call void @llvm.dbg.value(metadata i8* %5, metadata !3923, metadata !DIExpression()), !dbg !3924
  %6 = load i8, i8* %5, align 1, !dbg !3930
  %7 = icmp eq i8 %6, 104, !dbg !3931
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3932
  %9 = load i24, i24* %8, align 4, !dbg !3932
  %10 = and i24 %9, -30721, !dbg !3932
  br i1 %7, label %11, label %14, !dbg !3933

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !3934
  store i24 %12, i24* %8, align 4, !dbg !3934
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %13, metadata !3923, metadata !DIExpression()), !dbg !3924
  br label %56, !dbg !3937

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !3938
  store i24 %15, i24* %8, align 4, !dbg !3938
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3940
  call void @llvm.dbg.value(metadata i8* %17, metadata !3923, metadata !DIExpression()), !dbg !3924
  %18 = load i8, i8* %17, align 1, !dbg !3942
  %19 = icmp eq i8 %18, 108, !dbg !3943
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !3944
  %21 = load i24, i24* %20, align 4, !dbg !3944
  %22 = and i24 %21, -30721, !dbg !3944
  br i1 %19, label %23, label %26, !dbg !3945

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !3946
  store i24 %24, i24* %20, align 4, !dbg !3946
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3948
  call void @llvm.dbg.value(metadata i8* %25, metadata !3923, metadata !DIExpression()), !dbg !3924
  br label %56, !dbg !3949

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !3950
  store i24 %27, i24* %20, align 4, !dbg !3950
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !3952
  %30 = load i24, i24* %29, align 4, !dbg !3953
  %31 = and i24 %30, -30721, !dbg !3953
  %32 = or i24 %31, 10240, !dbg !3953
  store i24 %32, i24* %29, align 4, !dbg !3953
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3954
  call void @llvm.dbg.value(metadata i8* %33, metadata !3923, metadata !DIExpression()), !dbg !3924
  br label %56, !dbg !3955

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !3956
  %36 = load i24, i24* %35, align 4, !dbg !3957
  %37 = and i24 %36, -30721, !dbg !3957
  %38 = or i24 %37, 12288, !dbg !3957
  store i24 %38, i24* %35, align 4, !dbg !3957
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %39, metadata !3923, metadata !DIExpression()), !dbg !3924
  br label %56, !dbg !3959

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !3960
  %42 = load i24, i24* %41, align 4, !dbg !3961
  %43 = and i24 %42, -30721, !dbg !3961
  %44 = or i24 %43, 14336, !dbg !3961
  store i24 %44, i24* %41, align 4, !dbg !3961
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3962
  call void @llvm.dbg.value(metadata i8* %45, metadata !3923, metadata !DIExpression()), !dbg !3924
  br label %56, !dbg !3963

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !3964
  %48 = load i24, i24* %47, align 4, !dbg !3965
  %49 = and i24 %48, -30723, !dbg !3965
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3966
  call void @llvm.dbg.value(metadata i8* %50, metadata !3923, metadata !DIExpression()), !dbg !3924
  %51 = or i24 %49, 16386, !dbg !3967
  store i24 %51, i24* %47, align 4, !dbg !3967
  br label %56, !dbg !3968

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !3969
  %54 = load i24, i24* %53, align 4, !dbg !3970
  %55 = and i24 %54, -30721, !dbg !3970
  store i24 %55, i24* %53, align 4, !dbg !3970
  br label %56, !dbg !3971

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !3923, metadata !DIExpression()), !dbg !3924
  ret i8* %57, !dbg !3972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !3973 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3975, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i8* %1, metadata !3976, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i8 0, metadata !3977, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i8* %1, metadata !3976, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3980
  %3 = load i8, i8* %1, align 1, !dbg !3981
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3982
  store i8 %3, i8* %4, align 1, !dbg !3983
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !3984

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !3985

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3986
  %9 = load i24, i24* %8, align 4, !dbg !3986
  %10 = and i24 %9, -458753, !dbg !3986
  %11 = or i24 %10, %7, !dbg !3986
  call void @llvm.dbg.label(metadata !3978), !dbg !3987
  %12 = and i24 %9, 30720, !dbg !3988
  %13 = icmp eq i24 %12, 16384, !dbg !3988
  %14 = zext i1 %13 to i24, !dbg !3990
  %15 = or i24 %11, %14, !dbg !3990
  %16 = icmp eq i8 %3, 99, !dbg !3991
  br i1 %16, label %17, label %43, !dbg !3993

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !3994
  %19 = icmp ne i24 %18, 0, !dbg !3994
  call void @llvm.dbg.value(metadata i1 %19, metadata !3977, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3980
  br label %43, !dbg !3996

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !3997
  %22 = load i24, i24* %21, align 4, !dbg !3998
  %23 = and i24 %22, -458753, !dbg !3998
  %24 = or i24 %23, 262144, !dbg !3998
  call void @llvm.dbg.value(metadata i8 1, metadata !3977, metadata !DIExpression()), !dbg !3980
  br label %43, !dbg !3999

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4002
  %27 = load i24, i24* %26, align 4, !dbg !4003
  %28 = and i24 %27, -458753, !dbg !4003
  %29 = or i24 %28, 196608, !dbg !4003
  %30 = and i24 %27, 30720, !dbg !4004
  %31 = icmp eq i24 %30, 16384, !dbg !4004
  br label %43, !dbg !4006

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4007
  %34 = load i24, i24* %33, align 4, !dbg !4008
  %35 = and i24 %34, -458753, !dbg !4008
  %36 = or i24 %35, 196608, !dbg !4008
  %37 = and i24 %34, 30720, !dbg !4009
  %38 = icmp ne i24 %37, 0, !dbg !4009
  br label %43, !dbg !4011

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4012
  %41 = load i24, i24* %40, align 4, !dbg !4013
  %42 = or i24 %41, 1, !dbg !4013
  br label %43, !dbg !4014

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4015
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4016
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4017
  call void @llvm.dbg.value(metadata i8* %48, metadata !3976, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i8 poison, metadata !3977, metadata !DIExpression()), !dbg !3980
  %49 = lshr i24 %44, 1, !dbg !4015
  %50 = and i24 %49, 1, !dbg !4015
  %51 = zext i24 %50 to i32, !dbg !4015
  %52 = or i32 %51, %47, !dbg !4015
  %53 = trunc i32 %52 to i24, !dbg !4015
  %54 = shl nuw nsw i24 %53, 1, !dbg !4015
  %55 = and i24 %44, -3, !dbg !4015
  %56 = or i24 %54, %55, !dbg !4015
  store i24 %56, i24* %46, align 4, !dbg !4015
  ret i8* %48, !dbg !4018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4019 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4024, metadata !DIExpression()), !dbg !4027
  %2 = load i8*, i8** %0, align 4, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %2, metadata !4025, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i32 0, metadata !4026, metadata !DIExpression()), !dbg !4027
  %3 = load i8, i8* %2, align 1, !dbg !4029
  %4 = zext i8 %3 to i32, !dbg !4030
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4031
  %6 = icmp eq i32 %5, 0, !dbg !4032
  br i1 %6, label %19, label %7, !dbg !4032

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4026, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i8* %10, metadata !4025, metadata !DIExpression()), !dbg !4027
  %11 = mul i32 %9, 10, !dbg !4033
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4035
  call void @llvm.dbg.value(metadata i8* %12, metadata !4025, metadata !DIExpression()), !dbg !4027
  %13 = add i32 %11, -48, !dbg !4036
  %14 = add i32 %13, %8, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %14, metadata !4026, metadata !DIExpression()), !dbg !4027
  %15 = load i8, i8* %12, align 1, !dbg !4029
  %16 = zext i8 %15 to i32, !dbg !4030
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4031
  %18 = icmp eq i32 %17, 0, !dbg !4032
  br i1 %18, label %19, label %7, !dbg !4032, !llvm.loop !4038

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4027
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4027
  store i8* %20, i8** %0, align 4, !dbg !4040
  ret i32 %21, !dbg !4041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4044, metadata !DIExpression()), !dbg !4045
  %2 = add i32 %0, -48, !dbg !4046
  %3 = icmp ult i32 %2, 10, !dbg !4047
  %4 = zext i1 %3 to i32, !dbg !4047
  ret i32 %4, !dbg !4048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4049 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4051, !srcloc !4052
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4053, !srcloc !4054
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4055, !srcloc !4056
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4057, !srcloc !4058
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4059, !srcloc !4060
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4061, !srcloc !4062
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4063, !srcloc !4064
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4065, !srcloc !4066
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4067, !srcloc !4068
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4069, !srcloc !4070
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4071, !srcloc !4072
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4073, !srcloc !4074
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4075, !srcloc !4076
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4077, !srcloc !4078
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4079, !srcloc !4080
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4081, !srcloc !4082
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4083, !srcloc !4084
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4085, !srcloc !4086
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4087, !srcloc !4088
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4089, !srcloc !4090
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4091, !srcloc !4092
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4093, !srcloc !4094
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4095, !srcloc !4096
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4097, !srcloc !4098
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4099, !srcloc !4100
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4101, !srcloc !4102
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4103, !srcloc !4104
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4105, !srcloc !4106
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4107, !srcloc !4108
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4109, !srcloc !4110
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4111, !srcloc !4112
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4113, !srcloc !4114
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4115, !srcloc !4116
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !4117, !srcloc !4118
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4119, !srcloc !4120
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4121, !srcloc !4122
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4123, !srcloc !4124
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4125, !srcloc !4126
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4127, !srcloc !4128
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4129, !srcloc !4130
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4131, !srcloc !4132
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4133, !srcloc !4134
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4135, !srcloc !4136
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4137, !srcloc !4138
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4139, !srcloc !4140
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !4141, !srcloc !4142
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4143, !srcloc !4144
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4145, !srcloc !4146
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4147, !srcloc !4148
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !4149, !srcloc !4150
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4151, !srcloc !4152
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4153, !srcloc !4154
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4155, !srcloc !4156
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4157, !srcloc !4158
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4159, !srcloc !4160
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4161, !srcloc !4162
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4163, !srcloc !4164
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4165, !srcloc !4166
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4167, !srcloc !4168
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4169, !srcloc !4170
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4171, !srcloc !4172
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4173, !srcloc !4174
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4175, !srcloc !4176
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4177, !srcloc !4178
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4179, !srcloc !4180
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4181, !srcloc !4182
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4183, !srcloc !4184
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4185, !srcloc !4186
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4187, !srcloc !4188
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4189, !srcloc !4190
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4191, !srcloc !4192
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4193, !srcloc !4194
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4195, !srcloc !4196
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4197, !srcloc !4198
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4199, !srcloc !4200
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4201, !srcloc !4202
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4203, !srcloc !4204
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4205, !srcloc !4206
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4207, !srcloc !4208
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4209, !srcloc !4210
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4211, !srcloc !4212
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4213, !srcloc !4214
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4215, !srcloc !4216
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4217, !srcloc !4218
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4219, !srcloc !4220
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4221, !srcloc !4222
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4223, !srcloc !4224
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4225, !srcloc !4226
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !4227, !srcloc !4228
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4229, !srcloc !4230
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4231, !srcloc !4232
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4233, !srcloc !4234
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4235, !srcloc !4236
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4237, !srcloc !4238
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !4239, !srcloc !4240
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4241, !srcloc !4242
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4243, !srcloc !4244
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4245, !srcloc !4246
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4247, !srcloc !4248
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4249, !srcloc !4250
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4251, !srcloc !4252
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4253, !srcloc !4254
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4255, !srcloc !4256
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4257, !srcloc !4258
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4259, !srcloc !4260
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4261, !srcloc !4262
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4263, !srcloc !4264
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4265, !srcloc !4266
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4267, !srcloc !4268
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4269, !srcloc !4270
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4271, !srcloc !4272
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4273, !srcloc !4274
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4275, !srcloc !4276
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4277, !srcloc !4278
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4279, !srcloc !4280
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4281, !srcloc !4282
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4283, !srcloc !4284
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4285, !srcloc !4286
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4287, !srcloc !4288
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4289, !srcloc !4290
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4291, !srcloc !4292
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4293, !srcloc !4294
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4295, !srcloc !4296
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4297, !srcloc !4298
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4299, !srcloc !4300
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4301, !srcloc !4302
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4303, !srcloc !4304
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4305, !srcloc !4306
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4307, !srcloc !4308
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4309, !srcloc !4310
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4311, !srcloc !4312
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4313, !srcloc !4314
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4315, !srcloc !4316
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4317, !srcloc !4318
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4319, !srcloc !4320
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4321, !srcloc !4322
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4323, !srcloc !4324
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4325, !srcloc !4326
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4327, !srcloc !4328
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4329, !srcloc !4330
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4331, !srcloc !4332
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4333, !srcloc !4334
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4335, !srcloc !4336
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4337, !srcloc !4338
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4339, !srcloc !4340
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4341, !srcloc !4342
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4343, !srcloc !4344
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4345, !srcloc !4346
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4347, !srcloc !4348
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4349, !srcloc !4350
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4351, !srcloc !4352
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4353, !srcloc !4354
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4355, !srcloc !4356
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4357, !srcloc !4358
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4359, !srcloc !4360
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4361, !srcloc !4362
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4363, !srcloc !4364
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4365, !srcloc !4366
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4367, !srcloc !4368
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4369, !srcloc !4370
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4371, !srcloc !4372
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4373, !srcloc !4374
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4375, !srcloc !4376
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4611, !srcloc !4612
  ret void, !dbg !4613
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4616, metadata !DIExpression()), !dbg !4618
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !4619
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !4620
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4621, !srcloc !4630
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %3, metadata !4627, metadata !DIExpression()) #23, !dbg !4631
  call void @llvm.dbg.value(metadata i32 undef, metadata !4628, metadata !DIExpression()) #23, !dbg !4631
  call void @llvm.dbg.value(metadata i32 %3, metadata !4617, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.value(metadata i32 %3, metadata !4632, metadata !DIExpression()) #23, !dbg !4637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4639, !srcloc !4640
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4641
  ret i32 0, !dbg !4642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4643 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4645
  %2 = or i32 %1, 512, !dbg !4645
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4645
  ret void, !dbg !4646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4647 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4648
  %2 = or i32 %1, 1024, !dbg !4648
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4648
  ret void, !dbg !4649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4652, metadata !DIExpression()), !dbg !4653
  ret i32 0, !dbg !4654
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4704, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4705, metadata !DIExpression()), !dbg !4706
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !4707
  ret void, !dbg !4708
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4709 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4726, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4727, metadata !DIExpression()), !dbg !4729
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4730
  %4 = load i32, i32* %3, align 4, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %4, metadata !4728, metadata !DIExpression()), !dbg !4729
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !4731
  ret void, !dbg !4732
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4733 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4737, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i8* %0, metadata !4738, metadata !DIExpression()), !dbg !4740
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4741
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4741
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4739, metadata !DIExpression()), !dbg !4742
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4742
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4743
  %5 = bitcast i8* %4 to i32*, !dbg !4743
  %6 = load i32, i32* %5, align 4, !dbg !4743
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4744
  store i32 %6, i32* %7, align 4, !dbg !4745
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !4746
  unreachable, !dbg !4747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4751, metadata !DIExpression()), !dbg !4752
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !4753
  ret void, !dbg !4754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4759, metadata !DIExpression()), !dbg !4760
  %2 = icmp sgt i32 %0, -1, !dbg !4761
  br i1 %2, label %3, label %8, !dbg !4763

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4764, !srcloc !4766
  %4 = and i32 %0, 31, !dbg !4767
  %5 = shl nuw i32 1, %4, !dbg !4768
  %6 = lshr i32 %0, 5, !dbg !4769
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4770
  store volatile i32 %5, i32* %7, align 4, !dbg !4771
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4772, !srcloc !4773
  br label %8, !dbg !4774

8:                                                ; preds = %3, %1
  ret void, !dbg !4775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4778, metadata !DIExpression()), !dbg !4779
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !4780
  ret void, !dbg !4781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4784, metadata !DIExpression()), !dbg !4785
  %2 = icmp sgt i32 %0, -1, !dbg !4786
  br i1 %2, label %3, label %8, !dbg !4788

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4789
  %5 = shl nuw i32 1, %4, !dbg !4791
  %6 = lshr i32 %0, 5, !dbg !4792
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4793
  store volatile i32 %5, i32* %7, align 4, !dbg !4794
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4795, !srcloc !4799
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4800, !srcloc !4803
  br label %8, !dbg !4804

8:                                                ; preds = %3, %1
  ret void, !dbg !4805
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4810, metadata !DIExpression()), !dbg !4811
  %2 = lshr i32 %0, 5, !dbg !4812
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4813
  %4 = load volatile i32, i32* %3, align 4, !dbg !4813
  %5 = and i32 %0, 31, !dbg !4814
  %6 = shl nuw i32 1, %5, !dbg !4814
  %7 = and i32 %4, %6, !dbg !4815
  ret i32 %7, !dbg !4816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4821, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32 %1, metadata !4822, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32 %2, metadata !4823, metadata !DIExpression()), !dbg !4824
  %4 = add i32 %1, 1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %4, metadata !4822, metadata !DIExpression()), !dbg !4824
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !4828
  ret void, !dbg !4829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4834, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 %1, metadata !4835, metadata !DIExpression()), !dbg !4836
  %3 = trunc i32 %1 to i8, !dbg !4837
  %4 = shl i8 %3, 4, !dbg !4837
  %5 = and i32 %0, 15, !dbg !4839
  %6 = add nsw i32 %5, -4, !dbg !4839
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4839
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4839
  %9 = icmp slt i32 %0, 0, !dbg !4839
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4839
  store volatile i8 %4, i8* %10, align 1, !dbg !4837
  ret void, !dbg !4840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4843, metadata !DIExpression()), !dbg !4844
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !4845
  ret void, !dbg !4846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4847 {
  tail call void @z_SysNmiOnReset() #24, !dbg !4849
  tail call void @z_arm_int_exit() #24, !dbg !4850
  ret void, !dbg !4851
}

; Function Attrs: optsize
declare !dbg !4852 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4853 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !4855 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !4857
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !4858
  tail call void @z_bss_zero() #24, !dbg !4859
  tail call void @z_data_copy() #24, !dbg !4860
  tail call void @z_arm_interrupt_init() #24, !dbg !4861
  tail call void @z_cstart() #27, !dbg !4862
  unreachable, !dbg !4862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4863 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4864
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4865, !srcloc !4868
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4869, !srcloc !4872
  ret void, !dbg !4873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !4874 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4875
  %2 = and i32 %1, -15728641, !dbg !4875
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4875
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !4876, !srcloc !4883
  call void @llvm.dbg.value(metadata i32 %3, metadata !4881, metadata !DIExpression()) #23, !dbg !4884
  %4 = and i32 %3, -5, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %4, metadata !4886, metadata !DIExpression()) #23, !dbg !4891
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !4893, !srcloc !4894
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4895, !srcloc !4872
  ret void, !dbg !4897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !4898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4901, metadata !DIExpression()), !dbg !4902
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4903
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !4904
  store i32 %0, i32* %3, align 4, !dbg !4905
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !4906
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !4907
  store i32 %4, i32* %5, align 4, !dbg !4908
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4909
  %7 = or i32 %6, 268435456, !dbg !4909
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4909
  call void @llvm.dbg.value(metadata i32 0, metadata !4910, metadata !DIExpression()) #23, !dbg !4913
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !4915, !srcloc !4916
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4917
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !4918
  %10 = load i32, i32* %9, align 4, !dbg !4918
  ret i32 %10, !dbg !4919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #3 !dbg !4920 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5030, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5031, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %2, metadata !5032, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5033, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %4, metadata !5034, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %5, metadata !5035, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.value(metadata i8* %6, metadata !5036, metadata !DIExpression()), !dbg !5038
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %8, metadata !5037, metadata !DIExpression()), !dbg !5038
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5040
  %10 = bitcast i8* %9 to i32*, !dbg !5040
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5041
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5042
  %12 = bitcast i8* %8 to i32*, !dbg !5043
  store i32 %11, i32* %12, align 4, !dbg !5044
  %13 = ptrtoint i8* %4 to i32, !dbg !5045
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5046
  %15 = bitcast i8* %14 to i32*, !dbg !5046
  store i32 %13, i32* %15, align 4, !dbg !5047
  %16 = ptrtoint i8* %5 to i32, !dbg !5048
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5049
  %18 = bitcast i8* %17 to i32*, !dbg !5049
  store i32 %16, i32* %18, align 4, !dbg !5050
  %19 = ptrtoint i8* %6 to i32, !dbg !5051
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5052
  %21 = bitcast i8* %20 to i32*, !dbg !5052
  store i32 %19, i32* %21, align 4, !dbg !5053
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5054
  %23 = bitcast i8* %22 to i32*, !dbg !5054
  store i32 16777216, i32* %23, align 4, !dbg !5055
  %24 = ptrtoint i8* %8 to i32, !dbg !5056
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5057
  store i32 %24, i32* %25, align 8, !dbg !5058
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5059
  store i32 0, i32* %26, align 4, !dbg !5060
  ret void, !dbg !5061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5067, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i32 %1, metadata !5068, metadata !DIExpression()), !dbg !5073
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5074
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5069, metadata !DIExpression()), !dbg !5073
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5075
  br i1 %4, label %19, label %5, !dbg !5077

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5072, metadata !DIExpression()), !dbg !5073
  %6 = icmp eq i32 %0, -22, !dbg !5078
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5078
  %8 = load i32, i32* %7, align 4, !dbg !5078
  br i1 %6, label %16, label %9, !dbg !5080

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5078
  %11 = icmp ule i32 %10, %0, !dbg !5078
  %12 = icmp ugt i32 %8, %0, !dbg !5078
  %13 = and i1 %12, %11, !dbg !5078
  %14 = icmp ugt i32 %8, %1, !dbg !5078
  %15 = and i1 %14, %13, !dbg !5078
  br i1 %15, label %18, label %19, !dbg !5078

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5078
  br i1 %17, label %18, label %19, !dbg !5080

18:                                               ; preds = %9, %16
  br label %19, !dbg !5081

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5073
  ret i32 %20, !dbg !5083
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5088, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata i8* %1, metadata !5089, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5090, metadata !DIExpression()), !dbg !5091
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5092
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5093
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5094, !srcloc !5095
  unreachable, !dbg !5096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5097 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5115, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i32 %1, metadata !5116, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i32 %2, metadata !5117, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5118, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i32 0, metadata !5119, metadata !DIExpression()), !dbg !5125
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5126
  %9 = and i32 %8, 511, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %9, metadata !5120, metadata !DIExpression()), !dbg !5125
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5128
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5128
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5129
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5129
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5124, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.value(metadata i32 0, metadata !5131, metadata !DIExpression()) #23, !dbg !5134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5136, !srcloc !5137
  call void @llvm.dbg.value(metadata i8* %6, metadata !5122, metadata !DIExpression(DW_OP_deref)), !dbg !5125
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5138
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5123, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %5, metadata !5121, metadata !DIExpression(DW_OP_deref)), !dbg !5125
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5139
  call void @llvm.dbg.value(metadata i32 %12, metadata !5119, metadata !DIExpression()), !dbg !5125
  %13 = load i8, i8* %5, align 1, !dbg !5140, !range !5142
  call void @llvm.dbg.value(metadata i8 %13, metadata !5121, metadata !DIExpression()), !dbg !5125
  %14 = icmp eq i8 %13, 0, !dbg !5140
  br i1 %14, label %15, label %32, !dbg !5143

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5144
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5145
  %18 = load i8, i8* %6, align 1, !dbg !5146, !range !5142
  call void @llvm.dbg.value(metadata i8 %18, metadata !5122, metadata !DIExpression()), !dbg !5125
  %19 = icmp eq i8 %18, 0, !dbg !5146
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5148
  %21 = load i32, i32* %20, align 4, !dbg !5148
  br i1 %19, label %27, label %22, !dbg !5149

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5150
  %24 = icmp eq i32 %23, 0, !dbg !5153
  br i1 %24, label %25, label %31, !dbg !5154

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5155
  br label %29, !dbg !5157

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5158
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5148
  br label %31, !dbg !5160

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5160
  br label %32, !dbg !5161

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5161
  ret void, !dbg !5161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #3 !dbg !5162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5167, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 %1, metadata !5168, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 %2, metadata !5169, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8* %3, metadata !5170, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8 0, metadata !5171, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5172, metadata !DIExpression()), !dbg !5173
  store i8 0, i8* %3, align 1, !dbg !5174
  %5 = icmp ult i32 %2, -16777216, !dbg !5175
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5177
  br i1 %8, label %16, label %9, !dbg !5177

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5178
  %11 = icmp eq i32 %10, 0, !dbg !5178
  br i1 %11, label %12, label %13, !dbg !5180

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5172, metadata !DIExpression()), !dbg !5173
  store i8 1, i8* %3, align 1, !dbg !5183
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5173
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5172, metadata !DIExpression()), !dbg !5173
  br label %16, !dbg !5186

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5173
  ret %struct.__esf* %17, !dbg !5187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5188 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5192, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i32 %1, metadata !5193, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i8* %2, metadata !5194, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i32 0, metadata !5195, metadata !DIExpression()), !dbg !5196
  store i8 0, i8* %2, align 1, !dbg !5197
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5198

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5199
  call void @llvm.dbg.value(metadata i32 %5, metadata !5195, metadata !DIExpression()), !dbg !5196
  br label %11, !dbg !5201

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5202
  call void @llvm.dbg.value(metadata i32 %7, metadata !5195, metadata !DIExpression()), !dbg !5196
  br label %11, !dbg !5203

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5204
  call void @llvm.dbg.value(metadata i32 0, metadata !5195, metadata !DIExpression()), !dbg !5196
  br label %11, !dbg !5205

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5206
  call void @llvm.dbg.value(metadata i32 0, metadata !5195, metadata !DIExpression()), !dbg !5196
  br label %11, !dbg !5207

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5208
  br label %11, !dbg !5209

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5211 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5215, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %1, metadata !5216, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i32 0, metadata !5217, metadata !DIExpression()), !dbg !5218
  store i8 0, i8* %1, align 1, !dbg !5219
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5220
  %4 = and i32 %3, 2, !dbg !5222
  %5 = icmp eq i32 %4, 0, !dbg !5223
  br i1 %5, label %6, label %33, !dbg !5224

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5225
  %8 = icmp sgt i32 %7, -1, !dbg !5227
  br i1 %8, label %9, label %33, !dbg !5228

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5229
  %11 = and i32 %10, 1073741824, !dbg !5231
  %12 = icmp eq i32 %11, 0, !dbg !5232
  br i1 %12, label %33, label %13, !dbg !5233

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5234
  br i1 %14, label %15, label %18, !dbg !5237

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5238
  %17 = load i32, i32* %16, align 4, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %17, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %33, !dbg !5240

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5241
  %20 = and i32 %19, 255, !dbg !5243
  %21 = icmp eq i32 %20, 0, !dbg !5244
  br i1 %21, label %24, label %22, !dbg !5245

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5246
  call void @llvm.dbg.value(metadata i32 %23, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %33, !dbg !5248

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5249
  %26 = and i32 %25, 65280, !dbg !5251
  %27 = icmp eq i32 %26, 0, !dbg !5252
  br i1 %27, label %29, label %28, !dbg !5253

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5254
  call void @llvm.dbg.value(metadata i32 0, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %33, !dbg !5256

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5257
  %31 = icmp ult i32 %30, 65536, !dbg !5259
  br i1 %31, label %33, label %32, !dbg !5260

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5261
  call void @llvm.dbg.value(metadata i32 0, metadata !5217, metadata !DIExpression()), !dbg !5218
  br label %33, !dbg !5263

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5218
  call void @llvm.dbg.value(metadata i32 %34, metadata !5217, metadata !DIExpression()), !dbg !5218
  ret i32 %34, !dbg !5264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5265 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5267, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata i32 %1, metadata !5268, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata i8* %2, metadata !5269, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata i32 0, metadata !5270, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata i32 -22, metadata !5271, metadata !DIExpression()), !dbg !5280
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5281
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5283
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5285
  %7 = and i32 %6, 2, !dbg !5286
  %8 = icmp eq i32 %7, 0, !dbg !5287
  br i1 %8, label %19, label %9, !dbg !5288

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %10, metadata !5272, metadata !DIExpression()), !dbg !5290
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5291
  %12 = and i32 %11, 128, !dbg !5293
  %13 = icmp eq i32 %12, 0, !dbg !5294
  br i1 %13, label %19, label %14, !dbg !5295

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5271, metadata !DIExpression()), !dbg !5280
  %15 = icmp eq i32 %1, 0, !dbg !5296
  br i1 %15, label %19, label %16, !dbg !5299

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5300
  %18 = and i32 %17, -129, !dbg !5300
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5300
  br label %19, !dbg !5302

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5280
  call void @llvm.dbg.value(metadata i32 %20, metadata !5271, metadata !DIExpression()), !dbg !5280
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5303
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5305
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5307
  %24 = and i32 %23, 16, !dbg !5308
  %25 = icmp eq i32 %24, 0, !dbg !5308
  br i1 %25, label %26, label %30, !dbg !5309

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5310
  %28 = and i32 %27, 2, !dbg !5311
  %29 = icmp eq i32 %28, 0, !dbg !5311
  br i1 %29, label %39, label %30, !dbg !5312

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5313
  %32 = and i32 %31, 2048, !dbg !5314
  %33 = icmp eq i32 %32, 0, !dbg !5314
  br i1 %33, label %39, label %34, !dbg !5315

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5316
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %36, metadata !5275, metadata !DIExpression()), !dbg !5318
  %37 = icmp eq i32 %36, 0, !dbg !5319
  br i1 %37, label %39, label %38, !dbg !5321

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5322, metadata !DIExpression()) #23, !dbg !5325
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5328, !srcloc !5329
  call void @llvm.dbg.value(metadata i32 2, metadata !5270, metadata !DIExpression()), !dbg !5280
  br label %39, !dbg !5330

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5280
  call void @llvm.dbg.value(metadata i32 %40, metadata !5270, metadata !DIExpression()), !dbg !5280
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5331
  %42 = and i32 %41, 32, !dbg !5333
  %43 = icmp eq i32 %42, 0, !dbg !5334
  br i1 %43, label %47, label %44, !dbg !5335

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5336
  %46 = and i32 %45, -8193, !dbg !5336
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5336
  br label %47, !dbg !5338

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5339
  %49 = or i32 %48, 255, !dbg !5339
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5339
  store i8 0, i8* %2, align 1, !dbg !5340
  ret i32 %40, !dbg !5341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5342 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5346, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i32 %0, metadata !5347, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i8* %1, metadata !5348, metadata !DIExpression()), !dbg !5353
  call void @llvm.dbg.value(metadata i32 0, metadata !5349, metadata !DIExpression()), !dbg !5353
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5354
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5356
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5358
  %6 = and i32 %5, 512, !dbg !5359
  %7 = icmp eq i32 %6, 0, !dbg !5359
  br i1 %7, label %18, label %8, !dbg !5360

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %9, metadata !5350, metadata !DIExpression()), !dbg !5362
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5363
  %11 = and i32 %10, 32768, !dbg !5365
  %12 = icmp ne i32 %11, 0, !dbg !5366
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5367
  br i1 %14, label %15, label %18, !dbg !5367

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5368
  %17 = and i32 %16, -32769, !dbg !5368
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5368
  br label %18, !dbg !5372

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5373
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5375
  %21 = and i32 %20, 256, !dbg !5377
  %22 = icmp eq i32 %21, 0, !dbg !5378
  br i1 %22, label %23, label %25, !dbg !5379

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5380
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5382
  %27 = or i32 %26, 65280, !dbg !5382
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5382
  store i8 0, i8* %1, align 1, !dbg !5383
  ret void, !dbg !5384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5385 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5391, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.value(metadata i32 0, metadata !5392, metadata !DIExpression()), !dbg !5393
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5394
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5396
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5398
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5400
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5402
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5404
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5406
  %8 = or i32 %7, -65536, !dbg !5406
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5406
  ret void, !dbg !5407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !5408 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5412, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata i8* %0, metadata !5413, metadata !DIExpression()), !dbg !5414
  store i8 0, i8* %0, align 1, !dbg !5415
  ret void, !dbg !5416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5417 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5421, metadata !DIExpression()), !dbg !5424
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5425
  %3 = load i32, i32* %2, align 4, !dbg !5425
  %4 = inttoptr i32 %3 to i16*, !dbg !5426
  call void @llvm.dbg.value(metadata i16* %4, metadata !5422, metadata !DIExpression()), !dbg !5424
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5427
  %6 = or i32 %5, 256, !dbg !5427
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5427
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5428, !srcloc !5431
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5432, !srcloc !5435
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5436
  %8 = load i16, i16* %7, align 2, !dbg !5437
  call void @llvm.dbg.value(metadata i16 %8, metadata !5423, metadata !DIExpression()), !dbg !5424
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5438
  %10 = and i32 %9, -257, !dbg !5438
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5438
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5439, !srcloc !5431
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5441, !srcloc !5435
  %11 = icmp eq i16 %8, -8446, !dbg !5443
  ret i1 %11, !dbg !5445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5446 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5447
  %2 = or i32 %1, 16, !dbg !5447
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5447
  ret void, !dbg !5448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5449 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5452, metadata !DIExpression()), !dbg !5453
  br label %1, !dbg !5454

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5452, metadata !DIExpression()), !dbg !5453
  tail call fastcc void @__NVIC_SetPriority.11(i32 noundef %2) #25, !dbg !5456
  %3 = add nuw nsw i32 %2, 1, !dbg !5459
  call void @llvm.dbg.value(metadata i32 %3, metadata !5452, metadata !DIExpression()), !dbg !5453
  %4 = icmp eq i32 %3, 97, !dbg !5460
  br i1 %4, label %5, label %1, !dbg !5454, !llvm.loop !5461

5:                                                ; preds = %1
  ret void, !dbg !5463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.11(i32 noundef %0) unnamed_addr #13 !dbg !5464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5466, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata i32 1, metadata !5467, metadata !DIExpression()), !dbg !5468
  %2 = and i32 %0, 15, !dbg !5469
  %3 = add nsw i32 %2, -4, !dbg !5469
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5469
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5469
  %6 = icmp slt i32 %0, 0, !dbg !5469
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5469
  store volatile i8 16, i8* %7, align 1, !dbg !5470
  ret void, !dbg !5472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5579, metadata !DIExpression()), !dbg !5580
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5581
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5583
  br i1 %3, label %4, label %12, !dbg !5584

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5585, !srcloc !5597
  call void @llvm.dbg.value(metadata i32 %5, metadata !5588, metadata !DIExpression()) #23, !dbg !5598
  %6 = icmp eq i32 %5, 0, !dbg !5599
  br i1 %6, label %12, label %7, !dbg !5600

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5601
  %9 = or i32 %8, 268435456, !dbg !5601
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5601
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5603
  %11 = and i32 %10, -32769, !dbg !5603
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5603
  br label %12, !dbg !5604

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5605
  ret void, !dbg !5606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5607 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !5608
  ret void, !dbg !5609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !5610
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5611
  %3 = load i32, i32* %2, align 4, !dbg !5611
  %4 = add i32 %3, -64, !dbg !5613
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !5610
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5614
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5615
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5616
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !5610
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !5617
  ret void, !dbg !5618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5619 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5620
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5621, !srcloc !5624
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5625, !srcloc !5628
  ret void, !dbg !5629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5630 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5631, !srcloc !5634
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5635
  ret void, !dbg !5636
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5637 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5652, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.value(metadata i8 %1, metadata !5653, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.value(metadata i32 %2, metadata !5654, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.value(metadata i32 %3, metadata !5655, metadata !DIExpression()), !dbg !5656
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5657
  ret void, !dbg !5659
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5660 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5665, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i8 %1, metadata !5666, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i32 undef, metadata !5667, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i32 undef, metadata !5668, metadata !DIExpression()), !dbg !5670
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5671
  call void @llvm.dbg.value(metadata i8 %3, metadata !5669, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5670
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !5672
  call void @llvm.dbg.value(metadata i32 %4, metadata !5669, metadata !DIExpression()), !dbg !5670
  %5 = trunc i32 %4 to i8, !dbg !5673
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5674
  ret void, !dbg !5675
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5676 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5680, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i8 %1, metadata !5681, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i8 %2, metadata !5682, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i1 %3, metadata !5683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5686
  %5 = zext i8 %2 to i32, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %5, metadata !5685, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 0, metadata !5684, metadata !DIExpression()), !dbg !5686
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5685, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 0, metadata !5684, metadata !DIExpression()), !dbg !5686
  %7 = icmp eq i8 %1, 0, !dbg !5688
  br i1 %7, label %29, label %8, !dbg !5691

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5685, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i32 %10, metadata !5684, metadata !DIExpression()), !dbg !5686
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5692
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5695
  %13 = load i32, i32* %12, align 4, !dbg !5695
  %14 = icmp eq i32 %13, 0, !dbg !5696
  br i1 %14, label %25, label %15, !dbg !5697

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5698

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5700
  %18 = icmp eq i32 %17, 0, !dbg !5700
  br i1 %18, label %29, label %19, !dbg !5701

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5702
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5703
  call void @llvm.dbg.value(metadata i32 %21, metadata !5685, metadata !DIExpression()), !dbg !5686
  %22 = icmp eq i32 %21, -22, !dbg !5704
  br i1 %22, label %29, label %23, !dbg !5706

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5707
  call void @llvm.dbg.value(metadata i32 %24, metadata !5685, metadata !DIExpression()), !dbg !5686
  br label %25, !dbg !5708

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5686
  call void @llvm.dbg.value(metadata i32 %26, metadata !5685, metadata !DIExpression()), !dbg !5686
  %27 = add nuw nsw i32 %10, 1, !dbg !5709
  call void @llvm.dbg.value(metadata i32 %27, metadata !5684, metadata !DIExpression()), !dbg !5686
  %28 = icmp eq i32 %27, %6, !dbg !5688
  br i1 %28, label %29, label %8, !dbg !5691, !llvm.loop !5710

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5686
  ret i32 %30, !dbg !5712
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5713 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5717, metadata !DIExpression()), !dbg !5719
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5720
  %3 = load i32, i32* %2, align 4, !dbg !5720
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5721, !range !5722
  %5 = icmp ult i32 %4, 2, !dbg !5721
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5723
  br i1 %7, label %8, label %15, !dbg !5723

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5724
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5725
  %11 = load i32, i32* %10, align 4, !dbg !5725
  %12 = and i32 %11, %9, !dbg !5726
  %13 = icmp eq i32 %12, 0, !dbg !5727
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5718, metadata !DIExpression()), !dbg !5719
  ret i32 %16, !dbg !5728
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5729 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5733, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5734, metadata !DIExpression()), !dbg !5736
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5737
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5737
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5735, metadata !DIExpression()), !dbg !5738
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5739
  %6 = load i32, i32* %5, align 4, !dbg !5739
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5740
  store i32 %6, i32* %7, align 4, !dbg !5741
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5742
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5743
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5744
  %11 = load i32, i32* %10, align 4, !dbg !5744
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !5745
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !5746
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5747
  ret i32 %12, !dbg !5748
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5749 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5756, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5757, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.value(metadata i32 undef, metadata !5758, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.value(metadata i32 %2, metadata !5759, metadata !DIExpression()), !dbg !5760
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5761
  %5 = load i32, i32* %4, align 4, !dbg !5761
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !5762
  %7 = or i32 %6, %5, !dbg !5763
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5764
  store i32 %7, i32* %8, align 4, !dbg !5765
  ret void, !dbg !5766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5767 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5771, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5772, metadata !DIExpression()), !dbg !5773
  %3 = zext i8 %0 to i32, !dbg !5774
  %4 = icmp ugt i8 %0, 7, !dbg !5776
  br i1 %4, label %6, label %5, !dbg !5777

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !5778
  br label %6, !dbg !5779

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5773
  ret i32 %7, !dbg !5780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5785, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5786, metadata !DIExpression()), !dbg !5787
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !5788
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5789
  %4 = load i32, i32* %3, align 4, !dbg !5789
  %5 = and i32 %4, -32, !dbg !5790
  %6 = or i32 %5, %0, !dbg !5791
  %7 = or i32 %6, 16, !dbg !5791
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5792
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5793
  %9 = load i32, i32* %8, align 4, !dbg !5793
  %10 = or i32 %9, 1, !dbg !5794
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5795
  ret void, !dbg !5796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5800, metadata !DIExpression()), !dbg !5801
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5802
  ret void, !dbg !5803
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5808, metadata !DIExpression()), !dbg !5809
  %2 = icmp ult i32 %0, 33, !dbg !5810
  br i1 %2, label %11, label %3, !dbg !5812

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5813
  br i1 %4, label %11, label %5, !dbg !5815

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5816
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5817, !range !5722
  %8 = mul nsw i32 %7, -2, !dbg !5818
  %9 = add nsw i32 %8, 62, !dbg !5818
  %10 = and i32 %9, 62, !dbg !5819
  br label %11, !dbg !5820

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5809
  ret i32 %12, !dbg !5821
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5822 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5826, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.value(metadata i8 %1, metadata !5827, metadata !DIExpression()), !dbg !5828
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5829
  ret void, !dbg !5831
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5832 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5836, metadata !DIExpression()), !dbg !5843
  call void @llvm.dbg.value(metadata i8 %1, metadata !5837, metadata !DIExpression()), !dbg !5843
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5844
  call void @llvm.dbg.value(metadata i8 %3, metadata !5838, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5843
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %4, metadata !5838, metadata !DIExpression()), !dbg !5843
  %5 = icmp ne i32 %4, -22, !dbg !5846
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %4, metadata !5839, metadata !DIExpression()), !dbg !5848
  br i1 %7, label %8, label %12, !dbg !5847

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5839, metadata !DIExpression()), !dbg !5848
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !5849
  %10 = add i32 %9, 1, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %10, metadata !5839, metadata !DIExpression()), !dbg !5848
  %11 = icmp eq i32 %10, 8, !dbg !5853
  br i1 %11, label %12, label %8, !dbg !5854, !llvm.loop !5855

12:                                               ; preds = %8, %2
  ret void, !dbg !5857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !5858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5861, metadata !DIExpression()), !dbg !5862
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5863
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5864
  ret void, !dbg !5865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !5866 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !5871
  %2 = icmp ugt i32 %1, 8, !dbg !5873
  br i1 %2, label %14, label %3, !dbg !5874

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !5875
  call void @llvm.dbg.value(metadata i32 0, metadata !5870, metadata !DIExpression()), !dbg !5876
  %4 = icmp eq i32 %1, 0, !dbg !5877
  br i1 %4, label %12, label %5, !dbg !5880

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !5880

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5870, metadata !DIExpression()), !dbg !5876
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !5881
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !5883
  %10 = add nuw i32 %8, 1, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %10, metadata !5870, metadata !DIExpression()), !dbg !5876
  %11 = icmp eq i32 %10, %1, !dbg !5877
  br i1 %11, label %12, label %7, !dbg !5880, !llvm.loop !5885

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !5887
  store i8 %13, i8* @static_regions_num, align 1, !dbg !5888
  tail call void @arm_core_mpu_enable() #25, !dbg !5889
  br label %14, !dbg !5890

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !5876
  ret i32 %15, !dbg !5891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !5892 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5899, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i8* %1, metadata !5900, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i8* %0, metadata !5901, metadata !DIExpression()), !dbg !5902
  %3 = load i8, i8* %1, align 1, !dbg !5903
  %4 = icmp eq i8 %3, 0, !dbg !5904
  br i1 %4, label %13, label %5, !dbg !5905

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !5899, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.value(metadata i8* %8, metadata !5900, metadata !DIExpression()), !dbg !5902
  store i8 %6, i8* %7, align 1, !dbg !5906
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5908
  call void @llvm.dbg.value(metadata i8* %9, metadata !5899, metadata !DIExpression()), !dbg !5902
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5909
  call void @llvm.dbg.value(metadata i8* %10, metadata !5900, metadata !DIExpression()), !dbg !5902
  %11 = load i8, i8* %10, align 1, !dbg !5903
  %12 = icmp eq i8 %11, 0, !dbg !5904
  br i1 %12, label %13, label %5, !dbg !5905, !llvm.loop !5910

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !5912
  ret i8* %0, !dbg !5913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !5914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5918, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i8* %1, metadata !5919, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %2, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i8* %0, metadata !5921, metadata !DIExpression()), !dbg !5922
  %4 = icmp eq i32 %2, 0, !dbg !5923
  br i1 %4, label %22, label %5, !dbg !5924

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !5918, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %7, metadata !5920, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i8* %8, metadata !5919, metadata !DIExpression()), !dbg !5922
  %9 = load i8, i8* %8, align 1, !dbg !5925
  %10 = icmp eq i8 %9, 0, !dbg !5926
  br i1 %10, label %16, label %11, !dbg !5927

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !5928
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5930
  call void @llvm.dbg.value(metadata i8* %12, metadata !5919, metadata !DIExpression()), !dbg !5922
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5931
  call void @llvm.dbg.value(metadata i8* %13, metadata !5918, metadata !DIExpression()), !dbg !5922
  %14 = add i32 %7, -1, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %14, metadata !5920, metadata !DIExpression()), !dbg !5922
  %15 = icmp eq i32 %14, 0, !dbg !5923
  br i1 %15, label %22, label %5, !dbg !5924, !llvm.loop !5933

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !5918, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.value(metadata i32 %18, metadata !5920, metadata !DIExpression()), !dbg !5922
  store i8 0, i8* %17, align 1, !dbg !5935
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !5937
  call void @llvm.dbg.value(metadata i8* %19, metadata !5918, metadata !DIExpression()), !dbg !5922
  %20 = add i32 %18, -1, !dbg !5938
  call void @llvm.dbg.value(metadata i32 %20, metadata !5920, metadata !DIExpression()), !dbg !5922
  %21 = icmp eq i32 %20, 0, !dbg !5939
  br i1 %21, label %22, label %16, !dbg !5940, !llvm.loop !5941

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !5943
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5948, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.value(metadata i32 %1, metadata !5949, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.value(metadata i32 %1, metadata !5950, metadata !DIExpression()), !dbg !5951
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5952

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !5948, metadata !DIExpression()), !dbg !5951
  %6 = load i8, i8* %5, align 1, !dbg !5953
  %7 = icmp eq i8 %6, %3, !dbg !5954
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !5955
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %10, metadata !5948, metadata !DIExpression()), !dbg !5951
  br i1 %9, label %11, label %4, !dbg !5955, !llvm.loop !5958

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !5960
  ret i8* %12, !dbg !5961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5964, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i32 %1, metadata !5965, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8* null, metadata !5966, metadata !DIExpression()), !dbg !5967
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5968

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !5967
  call void @llvm.dbg.value(metadata i8* %6, metadata !5966, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8* %5, metadata !5964, metadata !DIExpression()), !dbg !5967
  %7 = load i8, i8* %5, align 1, !dbg !5969
  %8 = icmp eq i8 %7, %3, !dbg !5972
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !5973
  call void @llvm.dbg.value(metadata i8* %9, metadata !5966, metadata !DIExpression()), !dbg !5967
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5974
  call void @llvm.dbg.value(metadata i8* %10, metadata !5964, metadata !DIExpression()), !dbg !5967
  %11 = icmp eq i8 %7, 0, !dbg !5975
  br i1 %11, label %12, label %4, !dbg !5975, !llvm.loop !5976

12:                                               ; preds = %4
  ret i8* %9, !dbg !5978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !5979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5983, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i32 0, metadata !5984, metadata !DIExpression()), !dbg !5985
  %2 = load i8, i8* %0, align 1, !dbg !5986
  %3 = icmp eq i8 %2, 0, !dbg !5987
  br i1 %3, label %11, label %4, !dbg !5988

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5984, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata i8* %6, metadata !5983, metadata !DIExpression()), !dbg !5985
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5989
  call void @llvm.dbg.value(metadata i8* %7, metadata !5983, metadata !DIExpression()), !dbg !5985
  %8 = add i32 %5, 1, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %8, metadata !5984, metadata !DIExpression()), !dbg !5985
  %9 = load i8, i8* %7, align 1, !dbg !5986
  %10 = icmp eq i8 %9, 0, !dbg !5987
  br i1 %10, label %11, label %4, !dbg !5988, !llvm.loop !5992

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !5985
  ret i32 %12, !dbg !5994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5999, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 %1, metadata !6000, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i32 0, metadata !6001, metadata !DIExpression()), !dbg !6002
  %3 = load i8, i8* %0, align 1, !dbg !6003
  %4 = icmp ne i8 %3, 0, !dbg !6004
  %5 = icmp ne i32 %1, 0, !dbg !6005
  %6 = and i1 %4, %5, !dbg !6005
  br i1 %6, label %7, label %16, !dbg !6006

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6001, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.value(metadata i8* %9, metadata !5999, metadata !DIExpression()), !dbg !6002
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6007
  call void @llvm.dbg.value(metadata i8* %10, metadata !5999, metadata !DIExpression()), !dbg !6002
  %11 = add nuw i32 %8, 1, !dbg !6009
  call void @llvm.dbg.value(metadata i32 %11, metadata !6001, metadata !DIExpression()), !dbg !6002
  %12 = load i8, i8* %10, align 1, !dbg !6003
  %13 = icmp ne i8 %12, 0, !dbg !6004
  %14 = icmp ult i32 %11, %1, !dbg !6005
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6005
  br i1 %15, label %7, label %16, !dbg !6006, !llvm.loop !6010

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6002
  ret i32 %17, !dbg !6012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6017, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.value(metadata i8* %1, metadata !6018, metadata !DIExpression()), !dbg !6019
  %3 = load i8, i8* %0, align 1, !dbg !6020
  %4 = load i8, i8* %1, align 1, !dbg !6021
  %5 = icmp ne i8 %3, %4, !dbg !6022
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6023
  br i1 %7, label %18, label %8, !dbg !6023

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6018, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.value(metadata i8* %10, metadata !6017, metadata !DIExpression()), !dbg !6019
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6024
  call void @llvm.dbg.value(metadata i8* %11, metadata !6017, metadata !DIExpression()), !dbg !6019
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6026
  call void @llvm.dbg.value(metadata i8* %12, metadata !6018, metadata !DIExpression()), !dbg !6019
  %13 = load i8, i8* %11, align 1, !dbg !6020
  %14 = load i8, i8* %12, align 1, !dbg !6021
  %15 = icmp ne i8 %13, %14, !dbg !6022
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6023
  br i1 %17, label %18, label %8, !dbg !6023, !llvm.loop !6027

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6020
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6021
  %21 = zext i8 %19 to i32, !dbg !6030
  %22 = zext i8 %20 to i32, !dbg !6031
  %23 = sub nsw i32 %21, %22, !dbg !6032
  ret i32 %23, !dbg !6033
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6034 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6038, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i8* %1, metadata !6039, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i32 %2, metadata !6040, metadata !DIExpression()), !dbg !6041
  %4 = icmp eq i32 %2, 0, !dbg !6042
  br i1 %4, label %23, label %5, !dbg !6042

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6040, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i8* %7, metadata !6039, metadata !DIExpression()), !dbg !6041
  call void @llvm.dbg.value(metadata i8* %8, metadata !6038, metadata !DIExpression()), !dbg !6041
  %9 = load i8, i8* %8, align 1, !dbg !6043
  %10 = load i8, i8* %7, align 1, !dbg !6044
  %11 = icmp ne i8 %9, %10, !dbg !6045
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6046
  br i1 %13, label %19, label %14, !dbg !6046

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6047
  call void @llvm.dbg.value(metadata i8* %15, metadata !6038, metadata !DIExpression()), !dbg !6041
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6049
  call void @llvm.dbg.value(metadata i8* %16, metadata !6039, metadata !DIExpression()), !dbg !6041
  %17 = add i32 %6, -1, !dbg !6050
  call void @llvm.dbg.value(metadata i32 %17, metadata !6040, metadata !DIExpression()), !dbg !6041
  %18 = icmp eq i32 %17, 0, !dbg !6042
  br i1 %18, label %23, label %5, !dbg !6042, !llvm.loop !6051

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6054
  %21 = zext i8 %10 to i32, !dbg !6055
  %22 = sub nsw i32 %20, %21, !dbg !6056
  br label %23, !dbg !6057

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6057
  ret i32 %24, !dbg !6058
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6059 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6064, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %1, metadata !6065, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8** %2, metadata !6066, metadata !DIExpression()), !dbg !6069
  %4 = icmp eq i8* %0, null, !dbg !6070
  br i1 %4, label %5, label %7, !dbg !6070

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6071
  br label %7, !dbg !6070

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6070
  call void @llvm.dbg.value(metadata i8* %8, metadata !6067, metadata !DIExpression()), !dbg !6069
  %9 = load i8, i8* %8, align 1, !dbg !6072
  %10 = icmp eq i8 %9, 0, !dbg !6072
  br i1 %10, label %33, label %11, !dbg !6073

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6067, metadata !DIExpression()), !dbg !6069
  %14 = zext i8 %12 to i32, !dbg !6072
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6074
  %16 = icmp eq i8* %15, null, !dbg !6073
  br i1 %16, label %21, label %17, !dbg !6075

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6076
  call void @llvm.dbg.value(metadata i8* %18, metadata !6067, metadata !DIExpression()), !dbg !6069
  %19 = load i8, i8* %18, align 1, !dbg !6072
  %20 = icmp eq i8 %19, 0, !dbg !6072
  br i1 %20, label %33, label %11, !dbg !6073, !llvm.loop !6078

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6068, metadata !DIExpression()), !dbg !6069
  %24 = zext i8 %22 to i32, !dbg !6080
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6081
  %26 = icmp eq i8* %25, null, !dbg !6082
  br i1 %26, label %27, label %31, !dbg !6083

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6084
  call void @llvm.dbg.value(metadata i8* %28, metadata !6068, metadata !DIExpression()), !dbg !6069
  %29 = load i8, i8* %28, align 1, !dbg !6080
  %30 = icmp eq i8 %29, 0, !dbg !6080
  br i1 %30, label %33, label %21, !dbg !6086, !llvm.loop !6087

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6089
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6092
  br label %33, !dbg !6093

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6069
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6069
  store i8* %34, i8** %2, align 4, !dbg !6069
  ret i8* %35, !dbg !6094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6097, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.value(metadata i8* %1, metadata !6098, metadata !DIExpression()), !dbg !6099
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6100
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6101
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6102
  ret i8* %0, !dbg !6103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6106, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8* %1, metadata !6107, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %2, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8* %0, metadata !6109, metadata !DIExpression()), !dbg !6111
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6112
  call void @llvm.dbg.value(metadata i32 %4, metadata !6110, metadata !DIExpression()), !dbg !6111
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6113
  call void @llvm.dbg.value(metadata i8* %5, metadata !6106, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8* %1, metadata !6107, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %2, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %2, metadata !6108, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6111
  %6 = icmp eq i32 %2, 0, !dbg !6114
  br i1 %6, label %18, label %7, !dbg !6115

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6116
  call void @llvm.dbg.value(metadata i8* %9, metadata !6106, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i8* %10, metadata !6107, metadata !DIExpression()), !dbg !6111
  %12 = load i8, i8* %10, align 1, !dbg !6117
  %13 = icmp eq i8 %12, 0, !dbg !6118
  br i1 %13, label %18, label %14, !dbg !6119

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6120
  call void @llvm.dbg.value(metadata i8* %15, metadata !6107, metadata !DIExpression()), !dbg !6111
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6122
  call void @llvm.dbg.value(metadata i8* %16, metadata !6106, metadata !DIExpression()), !dbg !6111
  store i8 %12, i8* %9, align 1, !dbg !6123
  call void @llvm.dbg.value(metadata i32 %11, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %11, metadata !6108, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6111
  %17 = icmp eq i32 %11, 0, !dbg !6114
  br i1 %17, label %18, label %7, !dbg !6115, !llvm.loop !6124

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6111
  store i8 0, i8* %19, align 1, !dbg !6126
  ret i8* %0, !dbg !6127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6132, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %1, metadata !6133, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %2, metadata !6134, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %0, metadata !6135, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %1, metadata !6136, metadata !DIExpression()), !dbg !6137
  %4 = icmp eq i32 %2, 0, !dbg !6138
  br i1 %4, label %31, label %5, !dbg !6140

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %0, metadata !6135, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %2, metadata !6134, metadata !DIExpression()), !dbg !6137
  %6 = add i32 %2, -1, !dbg !6141
  call void @llvm.dbg.value(metadata i32 %6, metadata !6134, metadata !DIExpression()), !dbg !6137
  %7 = icmp eq i32 %6, 0, !dbg !6142
  br i1 %7, label %23, label %8, !dbg !6143

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6144
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6144
  br label %11, !dbg !6144

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %14, metadata !6135, metadata !DIExpression()), !dbg !6137
  %15 = load i8, i8* %14, align 1, !dbg !6145
  %16 = load i8, i8* %13, align 1, !dbg !6146
  %17 = icmp eq i8 %15, %16, !dbg !6147
  br i1 %17, label %18, label %23, !dbg !6144

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6148
  call void @llvm.dbg.value(metadata i8* %19, metadata !6135, metadata !DIExpression()), !dbg !6137
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6150
  call void @llvm.dbg.value(metadata i8* %20, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %12, metadata !6134, metadata !DIExpression()), !dbg !6137
  %21 = add i32 %12, -1, !dbg !6141
  call void @llvm.dbg.value(metadata i32 %21, metadata !6134, metadata !DIExpression()), !dbg !6137
  %22 = icmp eq i32 %21, 0, !dbg !6142
  br i1 %22, label %23, label %11, !dbg !6143, !llvm.loop !6151

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6137
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6137
  %26 = load i8, i8* %24, align 1, !dbg !6153
  %27 = zext i8 %26 to i32, !dbg !6153
  %28 = load i8, i8* %25, align 1, !dbg !6154
  %29 = zext i8 %28 to i32, !dbg !6154
  %30 = sub nsw i32 %27, %29, !dbg !6155
  br label %31, !dbg !6156

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6137
  ret i32 %32, !dbg !6157
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6162, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %1, metadata !6163, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %2, metadata !6164, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %0, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %1, metadata !6166, metadata !DIExpression()), !dbg !6167
  %4 = ptrtoint i8* %0 to i32, !dbg !6168
  %5 = ptrtoint i8* %1 to i32, !dbg !6168
  %6 = sub i32 %4, %5, !dbg !6168
  %7 = icmp ult i32 %6, %2, !dbg !6170
  br i1 %7, label %10, label %8, !dbg !6171

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %0, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %2, metadata !6164, metadata !DIExpression()), !dbg !6167
  %9 = icmp eq i32 %2, 0, !dbg !6172
  br i1 %9, label %26, label %17, !dbg !6174

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6164, metadata !DIExpression()), !dbg !6167
  %12 = add i32 %11, -1, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %12, metadata !6164, metadata !DIExpression()), !dbg !6167
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6178
  %14 = load i8, i8* %13, align 1, !dbg !6178
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6179
  store i8 %14, i8* %15, align 1, !dbg !6180
  %16 = icmp eq i32 %12, 0, !dbg !6181
  br i1 %16, label %26, label %10, !dbg !6182, !llvm.loop !6183

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %19, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %20, metadata !6164, metadata !DIExpression()), !dbg !6167
  %21 = load i8, i8* %18, align 1, !dbg !6185
  store i8 %21, i8* %19, align 1, !dbg !6187
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6188
  call void @llvm.dbg.value(metadata i8* %22, metadata !6165, metadata !DIExpression()), !dbg !6167
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %23, metadata !6166, metadata !DIExpression()), !dbg !6167
  %24 = add i32 %20, -1, !dbg !6190
  call void @llvm.dbg.value(metadata i32 %24, metadata !6164, metadata !DIExpression()), !dbg !6167
  %25 = icmp eq i32 %24, 0, !dbg !6172
  br i1 %25, label %26, label %17, !dbg !6174, !llvm.loop !6191

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6193
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6200, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i8* %1, metadata !6201, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i32 %2, metadata !6202, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i8* %0, metadata !6203, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i8* %1, metadata !6204, metadata !DIExpression()), !dbg !6205
  %4 = icmp eq i32 %2, 0, !dbg !6206
  br i1 %4, label %14, label %5, !dbg !6207

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6204, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i8* %7, metadata !6203, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.value(metadata i32 %8, metadata !6202, metadata !DIExpression()), !dbg !6205
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6208
  call void @llvm.dbg.value(metadata i8* %9, metadata !6204, metadata !DIExpression()), !dbg !6205
  %10 = load i8, i8* %6, align 1, !dbg !6210
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6211
  call void @llvm.dbg.value(metadata i8* %11, metadata !6203, metadata !DIExpression()), !dbg !6205
  store i8 %10, i8* %7, align 1, !dbg !6212
  %12 = add i32 %8, -1, !dbg !6213
  call void @llvm.dbg.value(metadata i32 %12, metadata !6202, metadata !DIExpression()), !dbg !6205
  %13 = icmp eq i32 %12, 0, !dbg !6206
  br i1 %13, label %14, label %5, !dbg !6207, !llvm.loop !6214

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6216
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6221, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %1, metadata !6222, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %2, metadata !6223, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8* %0, metadata !6224, metadata !DIExpression()), !dbg !6226
  %4 = trunc i32 %1 to i8, !dbg !6227
  call void @llvm.dbg.value(metadata i8 %4, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %2, metadata !6223, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8* %0, metadata !6224, metadata !DIExpression()), !dbg !6226
  %5 = icmp eq i32 %2, 0, !dbg !6228
  br i1 %5, label %12, label %6, !dbg !6229

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6223, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8* %8, metadata !6224, metadata !DIExpression()), !dbg !6226
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6230
  call void @llvm.dbg.value(metadata i8* %9, metadata !6224, metadata !DIExpression()), !dbg !6226
  store i8 %4, i8* %8, align 1, !dbg !6232
  %10 = add i32 %7, -1, !dbg !6233
  call void @llvm.dbg.value(metadata i32 %10, metadata !6223, metadata !DIExpression()), !dbg !6226
  %11 = icmp eq i32 %10, 0, !dbg !6228
  br i1 %11, label %12, label %6, !dbg !6229, !llvm.loop !6234

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6236
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6237 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6241, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %1, metadata !6242, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 %2, metadata !6243, metadata !DIExpression()), !dbg !6247
  %4 = icmp eq i32 %2, 0, !dbg !6248
  br i1 %4, label %17, label %5, !dbg !6249

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6250

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6251
  call void @llvm.dbg.value(metadata i8* %9, metadata !6244, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i32 %8, metadata !6243, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i8* %9, metadata !6244, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6251
  %10 = load i8, i8* %9, align 1, !dbg !6252
  %11 = icmp eq i8 %10, %6, !dbg !6255
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6256
  call void @llvm.dbg.value(metadata i8* %12, metadata !6244, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i32 %13, metadata !6243, metadata !DIExpression()), !dbg !6247
  br i1 %15, label %16, label %7, !dbg !6256, !llvm.loop !6257

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6259

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6247
  ret i8* %19, !dbg !6260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !6261 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6263, metadata !DIExpression()), !dbg !6264
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6265
  ret void, !dbg !6266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6269, metadata !DIExpression()), !dbg !6270
  ret i32 -1, !dbg !6271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32* %1, metadata !6277, metadata !DIExpression()), !dbg !6278
  %3 = ptrtoint i32* %1 to i32, !dbg !6279
  %4 = and i32 %3, -2, !dbg !6279
  %5 = icmp eq i32 %4, 2, !dbg !6279
  br i1 %5, label %6, label %9, !dbg !6279

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6280
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6280
  br label %9, !dbg !6281

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6281
  ret i32 %10, !dbg !6282
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6285, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32* %1, metadata !6286, metadata !DIExpression()), !dbg !6287
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6288
  ret i32 %3, !dbg !6289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6293, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata i32* %1, metadata !6294, metadata !DIExpression()), !dbg !6295
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6296, !srcloc !6298
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6299
  ret i32 %3, !dbg !6300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6301 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6306, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata i32* %1, metadata !6307, metadata !DIExpression()), !dbg !6310
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %3, metadata !6308, metadata !DIExpression()), !dbg !6310
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6312
  call void @llvm.dbg.value(metadata i32 %4, metadata !6309, metadata !DIExpression()), !dbg !6310
  %5 = icmp ne i32 %3, %4, !dbg !6313
  %6 = sext i1 %5 to i32, !dbg !6314
  ret i32 %6, !dbg !6315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6316 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6320, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i32 %1, metadata !6321, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i32 %2, metadata !6322, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i32* %3, metadata !6323, metadata !DIExpression()), !dbg !6324
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6325
  ret i32 %5, !dbg !6326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6329, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i32 %1, metadata !6330, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i32 %2, metadata !6331, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i32* %3, metadata !6332, metadata !DIExpression()), !dbg !6333
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6334, !srcloc !6336
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6337
  ret i32 %5, !dbg !6338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6339 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6341, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %1, metadata !6342, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %2, metadata !6343, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32* %3, metadata !6344, metadata !DIExpression()), !dbg !6349
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6350
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6352
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6352
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6352
  br i1 %11, label %33, label %12, !dbg !6352

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6349
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6349
  call void @llvm.dbg.value(metadata i8* %14, metadata !6347, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %13, metadata !6345, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %1, metadata !6346, metadata !DIExpression()), !dbg !6349
  br label %15, !dbg !6353

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6355
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6349
  call void @llvm.dbg.value(metadata i8* %17, metadata !6347, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata i32 %16, metadata !6346, metadata !DIExpression()), !dbg !6349
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6356
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6359
  call void @llvm.dbg.value(metadata i8* %19, metadata !6347, metadata !DIExpression()), !dbg !6349
  %20 = load i8, i8* %17, align 1, !dbg !6360
  %21 = zext i8 %20 to i32, !dbg !6361
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6356
  %23 = icmp eq i32 %22, -1, !dbg !6362
  br i1 %23, label %30, label %24, !dbg !6363

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6364
  call void @llvm.dbg.value(metadata i32 %25, metadata !6346, metadata !DIExpression()), !dbg !6349
  %26 = icmp eq i32 %25, 0, !dbg !6365
  br i1 %26, label %27, label %15, !dbg !6366, !llvm.loop !6367

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6369
  call void @llvm.dbg.value(metadata i32 %28, metadata !6345, metadata !DIExpression()), !dbg !6349
  %29 = icmp eq i32 %28, 0, !dbg !6370
  br i1 %29, label %30, label %12, !dbg !6371, !llvm.loop !6372

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6349
  call void @llvm.dbg.value(metadata i32 %31, metadata !6345, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.label(metadata !6348), !dbg !6375
  %32 = sub i32 %2, %31, !dbg !6376
  br label %33, !dbg !6377

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6349
  ret i32 %34, !dbg !6378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6379 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6383, metadata !DIExpression()), !dbg !6384
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6385
  %3 = icmp eq i32 %2, -1, !dbg !6387
  br i1 %3, label %8, label %4, !dbg !6388

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6389
  %6 = icmp eq i32 %5, -1, !dbg !6390
  %7 = sext i1 %6 to i32, !dbg !6389
  br label %8, !dbg !6391

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6384
  ret i32 %9, !dbg !6392
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6395, metadata !DIExpression()), !dbg !6396
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !6397
  ret void, !dbg !6398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %1, metadata !6404, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6405, metadata !DIExpression()), !dbg !6409
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6410
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6410
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6410
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6406, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6409
  %7 = icmp slt i32 %0, %1, !dbg !6411
  br i1 %7, label %8, label %22, !dbg !6414

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6408, metadata !DIExpression()), !dbg !6409
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !6415
  %11 = icmp eq i32 %10, 0, !dbg !6415
  br i1 %11, label %19, label %12, !dbg !6418

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !6419
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6421
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6421
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6423
  br i1 %15, label %19, label %16, !dbg !6424

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6425
  %18 = load i8*, i8** %17, align 4, !dbg !6425
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !6426
  br label %19, !dbg !6427

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6428
  call void @llvm.dbg.value(metadata i32 %20, metadata !6408, metadata !DIExpression()), !dbg !6409
  %21 = icmp eq i32 %20, %1, !dbg !6411
  br i1 %21, label %22, label %8, !dbg !6414, !llvm.loop !6429

22:                                               ; preds = %19, %3
  ret void, !dbg !6431
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6434, metadata !DIExpression()), !dbg !6435
  %2 = shl nuw i32 1, %0, !dbg !6436
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !6439
  ret i32 %3, !dbg !6440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6445, metadata !DIExpression()), !dbg !6446
  %2 = shl nuw i32 1, %0, !dbg !6447
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !6450
  ret void, !dbg !6451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6455, metadata !DIExpression()), !dbg !6456
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6457
  ret void, !dbg !6458
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6461, metadata !DIExpression()), !dbg !6462
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6463
  %3 = and i32 %2, %0, !dbg !6463
  %4 = icmp eq i32 %3, %0, !dbg !6464
  %5 = zext i1 %4 to i32, !dbg !6464
  ret i32 %5, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6466 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6468, metadata !DIExpression()), !dbg !6469
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !6470
  ret void, !dbg !6471
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6474, metadata !DIExpression()), !dbg !6475
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !6476
  ret void, !dbg !6477
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6480, metadata !DIExpression()), !dbg !6481
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !6482
  ret void, !dbg !6483
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6486, metadata !DIExpression()), !dbg !6487
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6490 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6492, metadata !DIExpression()), !dbg !6493
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !6494
  ret void, !dbg !6495
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6498, metadata !DIExpression()), !dbg !6499
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !6500
  ret void, !dbg !6501
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6504, metadata !DIExpression()), !dbg !6505
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !6506
  ret void, !dbg !6507
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6510, metadata !DIExpression()), !dbg !6511
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !6512
  ret void, !dbg !6513
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6516, metadata !DIExpression()), !dbg !6517
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !6518
  ret void, !dbg !6519
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6522, metadata !DIExpression()), !dbg !6523
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !6524
  ret void, !dbg !6525
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6526 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6528, metadata !DIExpression()), !dbg !6529
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !6530
  ret i32 0, !dbg !6531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !587 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !591, metadata !DIExpression()), !dbg !6532
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !6533
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !6535
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !6537
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !6539
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !6541
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !6543
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !6545
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !6547
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !6549
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !6551
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !6553
  ret void, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i32 0, metadata !6559, metadata !DIExpression()), !dbg !6560
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6561
  %3 = load i32, i32* %2, align 4, !dbg !6561
  call void @llvm.dbg.value(metadata i32 %3, metadata !6559, metadata !DIExpression()), !dbg !6560
  %4 = shl nuw i32 1, %0, !dbg !6562
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !6563
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !6564
  ret void, !dbg !6565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6568, metadata !DIExpression()), !dbg !6569
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6570
  %3 = or i32 %2, %0, !dbg !6570
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6570
  ret void, !dbg !6571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6574, metadata !DIExpression()), !dbg !6575
  %2 = icmp slt i32 %0, 32, !dbg !6576
  br i1 %2, label %3, label %5, !dbg !6578

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6579
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !6581
  br label %5, !dbg !6582

5:                                                ; preds = %1, %3
  ret void, !dbg !6583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6586, metadata !DIExpression()), !dbg !6587
  %2 = xor i32 %0, -1, !dbg !6588
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6588
  %4 = and i32 %3, %2, !dbg !6588
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6588
  ret void, !dbg !6589
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6594, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.value(metadata i32 %1, metadata !6595, metadata !DIExpression()), !dbg !6596
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6597

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6598
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !6600
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !6601
  br label %11, !dbg !6602

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6603
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !6604
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !6605
  br label %11, !dbg !6606

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6607
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !6608
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !6609
  br label %11, !dbg !6610

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6611
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !6612
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !6613
  br label %11, !dbg !6614

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6618, metadata !DIExpression()), !dbg !6619
  %2 = xor i32 %0, -1, !dbg !6620
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6620
  %4 = and i32 %3, %2, !dbg !6620
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6620
  ret void, !dbg !6621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6624, metadata !DIExpression()), !dbg !6625
  %2 = xor i32 %0, -1, !dbg !6626
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6626
  %4 = and i32 %3, %2, !dbg !6626
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6626
  ret void, !dbg !6627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6630, metadata !DIExpression()), !dbg !6631
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6632
  %3 = or i32 %2, %0, !dbg !6632
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6632
  ret void, !dbg !6633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6636, metadata !DIExpression()), !dbg !6637
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6638
  %3 = or i32 %2, %0, !dbg !6638
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6638
  ret void, !dbg !6639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6644, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6645, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i8* %2, metadata !6646, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6647, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6649, metadata !DIExpression()), !dbg !6650
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6651
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6651
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6653
  br i1 %6, label %7, label %9, !dbg !6654

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6655
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6656
  store i8* %2, i8** %8, align 4, !dbg !6657
  br label %9, !dbg !6658

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6650
  ret i32 %10, !dbg !6659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #3 !dbg !6660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6662, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6663, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6664, metadata !DIExpression()), !dbg !6665
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6666
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6667
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6668
  store i8* null, i8** %3, align 4, !dbg !6669
  ret void, !dbg !6670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6673, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i8* %1, metadata !6674, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i8* %1, metadata !6675, metadata !DIExpression()), !dbg !6678
  %3 = bitcast i8* %1 to i32*, !dbg !6679
  %4 = load i32, i32* %3, align 4, !dbg !6679
  %5 = add i32 %4, -169, !dbg !6679
  %6 = icmp ult i32 %5, -121, !dbg !6679
  br i1 %6, label %15, label %7, !dbg !6681

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6682
  %9 = inttoptr i32 %8 to i32*, !dbg !6683
  call void @llvm.dbg.value(metadata i32* %9, metadata !6676, metadata !DIExpression()), !dbg !6678
  %10 = load volatile i32, i32* %9, align 4, !dbg !6684
  call void @llvm.dbg.value(metadata i32 %10, metadata !6677, metadata !DIExpression()), !dbg !6678
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6685
  %12 = bitcast i8* %11 to i32*, !dbg !6685
  %13 = load i32, i32* %12, align 4, !dbg !6685
  %14 = or i32 %13, %10, !dbg !6686
  call void @llvm.dbg.value(metadata i32 %14, metadata !6677, metadata !DIExpression()), !dbg !6678
  store volatile i32 %14, i32* %9, align 4, !dbg !6687
  br label %15, !dbg !6688

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6678
  ret i32 %16, !dbg !6689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6692, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6693, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6694, metadata !DIExpression()), !dbg !6697
  %3 = bitcast i8* %1 to i32*, !dbg !6698
  %4 = load i32, i32* %3, align 4, !dbg !6698
  %5 = add i32 %4, -169, !dbg !6698
  %6 = icmp ult i32 %5, -121, !dbg !6698
  br i1 %6, label %16, label %7, !dbg !6700

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6701
  %9 = inttoptr i32 %8 to i32*, !dbg !6702
  call void @llvm.dbg.value(metadata i32* %9, metadata !6695, metadata !DIExpression()), !dbg !6697
  %10 = load volatile i32, i32* %9, align 4, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %10, metadata !6696, metadata !DIExpression()), !dbg !6697
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6704
  %12 = bitcast i8* %11 to i32*, !dbg !6704
  %13 = load i32, i32* %12, align 4, !dbg !6704
  %14 = xor i32 %13, -1, !dbg !6705
  %15 = and i32 %10, %14, !dbg !6706
  call void @llvm.dbg.value(metadata i32 %15, metadata !6696, metadata !DIExpression()), !dbg !6697
  store volatile i32 %15, i32* %9, align 4, !dbg !6707
  br label %16, !dbg !6708

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6697
  ret i32 %17, !dbg !6709
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6710 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6712, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %1, metadata !6713, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32* %2, metadata !6714, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %1, metadata !6715, metadata !DIExpression()), !dbg !6720
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6721
  call void @llvm.dbg.value(metadata i32 %4, metadata !6716, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 undef, metadata !6717, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 undef, metadata !6718, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 %4, metadata !6719, metadata !DIExpression()), !dbg !6720
  %5 = bitcast i8* %1 to i32*, !dbg !6722
  %6 = load i32, i32* %5, align 4, !dbg !6722
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !6723

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !6724
  call void @llvm.dbg.value(metadata i32 %8, metadata !6717, metadata !DIExpression()), !dbg !6720
  br label %19, !dbg !6725

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %10, metadata !6718, metadata !DIExpression()), !dbg !6720
  br label %19, !dbg !6728

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6729
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !6730
  br label %19, !dbg !6731

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6732
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #25, !dbg !6733
  br label %19, !dbg !6734

17:                                               ; preds = %3
  br label %19, !dbg !6735

18:                                               ; preds = %3
  br label %19, !dbg !6736

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !6737
  br label %21, !dbg !6738

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !6720
  ret i32 %22, !dbg !6738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6741, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i8* %1, metadata !6742, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i8* %2, metadata !6743, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i8* %1, metadata !6744, metadata !DIExpression()), !dbg !6749
  %4 = bitcast i8* %1 to i32*, !dbg !6750
  %5 = load i32, i32* %4, align 4, !dbg !6750
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !6751
  call void @llvm.dbg.value(metadata i32 %6, metadata !6748, metadata !DIExpression()), !dbg !6749
  %7 = icmp slt i32 %6, 0, !dbg !6752
  br i1 %7, label %22, label %8, !dbg !6754

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6744, metadata !DIExpression()), !dbg !6749
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6755
  %10 = bitcast i8* %9 to i32*, !dbg !6755
  %11 = load i32, i32* %10, align 4, !dbg !6755
  %12 = lshr i32 %11, 16, !dbg !6755
  %13 = and i32 %12, 7, !dbg !6755
  %14 = lshr i32 %11, 8, !dbg !6756
  %15 = and i32 %14, 31, !dbg !6756
  %16 = shl i32 %13, %15, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %16, metadata !6747, metadata !DIExpression()), !dbg !6749
  %17 = and i32 %11, 255, !dbg !6758
  %18 = or i32 %17, 1073887232, !dbg !6759
  %19 = inttoptr i32 %18 to i32*, !dbg !6760
  call void @llvm.dbg.value(metadata i32* %19, metadata !6745, metadata !DIExpression()), !dbg !6749
  %20 = load volatile i32, i32* %19, align 4, !dbg !6761
  call void @llvm.dbg.value(metadata i32 %20, metadata !6746, metadata !DIExpression()), !dbg !6749
  %21 = or i32 %16, %20, !dbg !6762
  call void @llvm.dbg.value(metadata i32 %21, metadata !6746, metadata !DIExpression()), !dbg !6749
  store volatile i32 %21, i32* %19, align 4, !dbg !6763
  br label %22, !dbg !6764

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6749
  ret i32 %23, !dbg !6765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6770, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.value(metadata i32 0, metadata !6771, metadata !DIExpression()), !dbg !6772
  %2 = add i32 %0, -1, !dbg !6773
  %3 = icmp ult i32 %2, 6, !dbg !6773
  br i1 %3, label %4, label %7, !dbg !6773

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6773
  %6 = load i32, i32* %5, align 4, !dbg !6773
  call void @llvm.dbg.value(metadata i32 %6, metadata !6771, metadata !DIExpression()), !dbg !6772
  br label %7, !dbg !6774

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6772
  ret i32 %8, !dbg !6775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6780, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.value(metadata i32 %1, metadata !6781, metadata !DIExpression()), !dbg !6782
  %3 = udiv i32 %0, %1, !dbg !6783
  ret i32 %3, !dbg !6784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6789, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32 8, metadata !6790, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32 84, metadata !6791, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32 %1, metadata !6792, metadata !DIExpression()), !dbg !6793
  %3 = mul i32 %0, 84, !dbg !6794
  %4 = shl nsw i32 %1, 3, !dbg !6795
  %5 = udiv i32 %3, %4, !dbg !6796
  ret i32 %5, !dbg !6797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6798 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6800, metadata !DIExpression()), !dbg !6803
  tail call void @config_enable_default_clocks() #24, !dbg !6804
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !6805
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !6805
  %4 = lshr i32 %3, 4, !dbg !6805
  %5 = and i32 %4, 15, !dbg !6805
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6805
  %7 = load i8, i8* %6, align 1, !dbg !6805
  %8 = zext i8 %7 to i32, !dbg !6805
  %9 = lshr i32 %2, %8, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %9, metadata !6801, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6803
  %10 = icmp ult i32 %9, 84000000, !dbg !6806
  br i1 %10, label %11, label %13, !dbg !6808

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6809
  br label %13, !dbg !6811

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !6812
  tail call fastcc void @set_up_plls() #25, !dbg !6813
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6814
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !6817
  br label %14, !dbg !6818

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6819
  %16 = icmp eq i32 %15, 8, !dbg !6820
  br i1 %16, label %17, label %14, !dbg !6818, !llvm.loop !6821

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6823
  br i1 %18, label %19, label %21, !dbg !6825

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6826
  br label %21, !dbg !6828

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !6829
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !6830
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !6831
  ret i32 0, !dbg !6832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6833 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6835
  %2 = and i32 %1, 240, !dbg !6835
  ret i32 %2, !dbg !6836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6837 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !6838
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !6843
  br label %1, !dbg !6844

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !6845
  %3 = icmp eq i32 %2, 1, !dbg !6846
  br i1 %3, label %4, label %1, !dbg !6844, !llvm.loop !6847

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !6849
  br label %5, !dbg !6852

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !6853
  %7 = icmp eq i32 %6, 1, !dbg !6854
  br i1 %7, label %8, label %5, !dbg !6852, !llvm.loop !6855

8:                                                ; preds = %5
  ret void, !dbg !6857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6858 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6859
  %2 = icmp eq i32 %1, 8, !dbg !6861
  br i1 %2, label %3, label %4, !dbg !6862

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6863
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !6865
  br label %4, !dbg !6866

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !6867
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6868
  %6 = and i32 %5, -196609, !dbg !6868
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6868
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6869
  %8 = and i32 %7, -251658241, !dbg !6869
  %9 = or i32 %8, 134217728, !dbg !6869
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6869
  tail call void @config_pll_sysclock() #24, !dbg !6870
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !6871
  br label %10, !dbg !6872

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !6873
  %12 = icmp eq i32 %11, 1, !dbg !6874
  br i1 %12, label %13, label %10, !dbg !6872, !llvm.loop !6875

13:                                               ; preds = %10
  ret void, !dbg !6877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !6878 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6880, metadata !DIExpression()), !dbg !6881
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6882
  %2 = and i32 %1, -241, !dbg !6882
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6882
  ret void, !dbg !6883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !6884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6886, metadata !DIExpression()), !dbg !6887
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6888
  %3 = and i32 %2, -4, !dbg !6888
  %4 = or i32 %3, %0, !dbg !6888
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6888
  ret void, !dbg !6889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !6890 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6891
  %2 = and i32 %1, 12, !dbg !6891
  ret i32 %2, !dbg !6892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !6893 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !6895, metadata !DIExpression()), !dbg !6896
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6897
  %2 = and i32 %1, -7169, !dbg !6897
  %3 = or i32 %2, 4096, !dbg !6897
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6897
  ret void, !dbg !6898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !6899 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6901, metadata !DIExpression()), !dbg !6902
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6903
  %2 = and i32 %1, -57345, !dbg !6903
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6903
  ret void, !dbg !6904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !6905 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6906
  %2 = icmp eq i32 %1, 1, !dbg !6908
  br i1 %2, label %7, label %3, !dbg !6909

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !6910
  br label %4, !dbg !6912

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6913
  %6 = icmp eq i32 %5, 1, !dbg !6914
  br i1 %6, label %7, label %4, !dbg !6912, !llvm.loop !6915

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !6917
  br label %8, !dbg !6918

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6919
  %10 = icmp eq i32 %9, 0, !dbg !6920
  br i1 %10, label %11, label %8, !dbg !6918, !llvm.loop !6921

11:                                               ; preds = %8
  ret void, !dbg !6923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !6924 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6925
  %2 = and i32 %1, -16777217, !dbg !6925
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6925
  ret void, !dbg !6926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !6927 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6928
  %2 = or i32 %1, 16777216, !dbg !6928
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6928
  ret void, !dbg !6929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !6930 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6931
  %2 = lshr i32 %1, 25, !dbg !6932
  %3 = and i32 %2, 1, !dbg !6932
  ret i32 %3, !dbg !6933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !6934 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6935
  %2 = lshr i32 %1, 1, !dbg !6936
  %3 = and i32 %2, 1, !dbg !6936
  ret i32 %3, !dbg !6937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !6938 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6939
  %2 = or i32 %1, 1, !dbg !6939
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !6941 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6942
  %2 = and i32 %1, -262145, !dbg !6942
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6942
  ret void, !dbg !6943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !6944 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6945
  %2 = or i32 %1, 65536, !dbg !6945
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6945
  ret void, !dbg !6946
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !6947 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6948
  %2 = lshr i32 %1, 17, !dbg !6949
  %3 = and i32 %2, 1, !dbg !6949
  ret i32 %3, !dbg !6950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !6951 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6952
  %2 = or i32 %1, 1, !dbg !6952
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6952
  ret void, !dbg !6953
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !6954 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !6955
  %2 = lshr i32 %1, 1, !dbg !6956
  %3 = and i32 %2, 1, !dbg !6956
  ret i32 %3, !dbg !6957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !6958 {
  ret i32 16000000, !dbg !6960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !6964 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !6965
  ret void, !dbg !6966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !6967 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !6971, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i32 8, metadata !6972, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i32 84, metadata !6973, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.value(metadata i32 0, metadata !6974, metadata !DIExpression()), !dbg !6975
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6976
  %2 = and i32 %1, -4227072, !dbg !6976
  %3 = or i32 %2, 4199688, !dbg !6976
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6976
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6977
  %5 = and i32 %4, -196609, !dbg !6977
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6977
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6978
  %7 = and i32 %6, -1879048193, !dbg !6978
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !6978
  ret void, !dbg !6979
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !6980 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !6981
  ret void, !dbg !6982
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !6983 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6986, metadata !DIExpression()), !dbg !6988
  %2 = bitcast i32* %1 to i8*, !dbg !6989
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6989
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6987, metadata !DIExpression()), !dbg !6990
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6991
  %4 = or i32 %3, 268435456, !dbg !6991
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6991
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !6992
  %6 = and i32 %5, 268435456, !dbg !6992
  store volatile i32 %6, i32* %1, align 4, !dbg !6993
  %7 = load volatile i32, i32* %1, align 4, !dbg !6994
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6995
  ret void, !dbg !6995
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6998, metadata !DIExpression()), !dbg !6999
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !7000
  br i1 %2, label %3, label %4, !dbg !7002

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7003
  br label %4, !dbg !7004

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !6999
  ret i32 %5, !dbg !7005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7006 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7011, metadata !DIExpression()), !dbg !7012
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7013, !srcloc !7015
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !7016
  ret i1 %1, !dbg !7017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7018 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7019
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7020
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7024, metadata !DIExpression()), !dbg !7025
  %2 = icmp eq i32 %0, 10, !dbg !7026
  br i1 %2, label %3, label %4, !dbg !7028

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7029
  br label %4, !dbg !7031

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7032
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7033
  ret i32 %0, !dbg !7034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7035 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7038, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i8 %0, metadata !7039, metadata !DIExpression()), !dbg !7040
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7041, !srcloc !7043
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7044
  ret void, !dbg !7045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7046 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7048, metadata !DIExpression()), !dbg !7051
  call void @llvm.dbg.value(metadata i8 %0, metadata !7049, metadata !DIExpression()), !dbg !7051
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7052
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7050, metadata !DIExpression()), !dbg !7051
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7053
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7053
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #24, !dbg !7054
  ret void, !dbg !7055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7056 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7058, metadata !DIExpression()), !dbg !7059
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #24, !dbg !7060
  ret i1 %1, !dbg !7061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7062 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7110, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7111, metadata !DIExpression()), !dbg !7112
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7114 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7116, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i8 %1, metadata !7117, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i32 %2, metadata !7118, metadata !DIExpression()), !dbg !7121
  %5 = bitcast i32* %4 to i8*, !dbg !7122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7122
  call void @llvm.dbg.value(metadata i32* %4, metadata !7120, metadata !DIExpression(DW_OP_deref)), !dbg !7121
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7123
  call void @llvm.dbg.value(metadata i32 %6, metadata !7119, metadata !DIExpression()), !dbg !7121
  %7 = icmp eq i32 %6, 0, !dbg !7124
  br i1 %7, label %8, label %31, !dbg !7126

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7119, metadata !DIExpression()), !dbg !7121
  %9 = and i32 %2, 131072, !dbg !7127
  %10 = icmp eq i32 %9, 0, !dbg !7129
  br i1 %10, label %28, label %11, !dbg !7130

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7131
  %13 = icmp eq i32 %12, 0, !dbg !7134
  br i1 %13, label %18, label %14, !dbg !7135

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7136
  %16 = shl nuw i32 1, %15, !dbg !7136
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7138
  br label %25, !dbg !7139

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7140
  %20 = icmp eq i32 %19, 0, !dbg !7142
  %21 = zext i8 %1 to i32, !dbg !7121
  br i1 %20, label %25, label %22, !dbg !7143

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7144
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7146
  br label %25, !dbg !7147

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7148
  %27 = load i32, i32* %4, align 4, !dbg !7149
  call void @llvm.dbg.value(metadata i32 %30, metadata !7120, metadata !DIExpression()), !dbg !7121
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7150
  br label %31, !dbg !7151

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7148
  %30 = load i32, i32* %4, align 4, !dbg !7149
  call void @llvm.dbg.value(metadata i32 %30, metadata !7120, metadata !DIExpression()), !dbg !7121
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7150
  call void @llvm.dbg.value(metadata i32 0, metadata !7119, metadata !DIExpression()), !dbg !7121
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7152
  ret i32 %6, !dbg !7152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7153 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7157, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i32* %1, metadata !7158, metadata !DIExpression()), !dbg !7162
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7163
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7163
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7159, metadata !DIExpression()), !dbg !7162
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7164
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7164
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7164
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7161, metadata !DIExpression()), !dbg !7162
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7165
  store i32 %9, i32* %1, align 4, !dbg !7166
  ret i32 0, !dbg !7167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7168 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7170, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 %1, metadata !7171, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 %2, metadata !7172, metadata !DIExpression()), !dbg !7176
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7177
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7177
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7177
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7173, metadata !DIExpression()), !dbg !7176
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7178
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7178
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7178
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7174, metadata !DIExpression()), !dbg !7176
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7179
  call void @llvm.dbg.value(metadata i32 %10, metadata !7175, metadata !DIExpression()), !dbg !7176
  %11 = xor i32 %1, -1, !dbg !7180
  %12 = and i32 %10, %11, !dbg !7181
  %13 = and i32 %2, %1, !dbg !7182
  %14 = or i32 %12, %13, !dbg !7183
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7184
  ret i32 0, !dbg !7185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7188, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i32 %1, metadata !7189, metadata !DIExpression()), !dbg !7192
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7193
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7193
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7193
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7190, metadata !DIExpression()), !dbg !7192
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7194
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7194
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7194
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7191, metadata !DIExpression()), !dbg !7192
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7195
  store volatile i32 %1, i32* %9, align 4, !dbg !7195
  ret i32 0, !dbg !7196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7197 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7199, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %1, metadata !7200, metadata !DIExpression()), !dbg !7203
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7204
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7204
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7204
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7201, metadata !DIExpression()), !dbg !7203
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7205
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7205
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7205
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7202, metadata !DIExpression()), !dbg !7203
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7206
  ret i32 0, !dbg !7207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7210, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.value(metadata i32 %1, metadata !7211, metadata !DIExpression()), !dbg !7214
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7215
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7215
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7215
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7212, metadata !DIExpression()), !dbg !7214
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7216
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7216
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7216
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7213, metadata !DIExpression()), !dbg !7214
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7217
  %10 = load volatile i32, i32* %9, align 4, !dbg !7217
  %11 = xor i32 %10, %1, !dbg !7217
  store volatile i32 %11, i32* %9, align 4, !dbg !7217
  ret i32 0, !dbg !7218
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7219 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7221, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i8 %1, metadata !7222, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i32 %2, metadata !7223, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i32 %3, metadata !7224, metadata !DIExpression()), !dbg !7231
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7232
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7232
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7232
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7225, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i8* undef, metadata !7226, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i32 0, metadata !7228, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i32 0, metadata !7229, metadata !DIExpression()), !dbg !7231
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7233

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7234
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7238
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7239
  %12 = load i32, i32* %11, align 4, !dbg !7239
  %13 = icmp eq i32 %10, %12, !dbg !7240
  br i1 %13, label %14, label %29, !dbg !7241

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7242
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7244
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7245
  br label %29, !dbg !7246

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7247
  %17 = load i8*, i8** %16, align 4, !dbg !7247
  call void @llvm.dbg.value(metadata i8* %17, metadata !7226, metadata !DIExpression()), !dbg !7231
  %18 = zext i8 %1 to i32, !dbg !7248
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7250
  %20 = icmp eq i32 %19, 0, !dbg !7251
  br i1 %20, label %21, label %29, !dbg !7252

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7253
  %23 = load i32, i32* %22, align 4, !dbg !7253
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7254
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7255

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7228, metadata !DIExpression()), !dbg !7231
  br label %27, !dbg !7256

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7228, metadata !DIExpression()), !dbg !7231
  br label %27, !dbg !7258

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7228, metadata !DIExpression()), !dbg !7231
  br label %27, !dbg !7259

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7231
  call void @llvm.dbg.value(metadata i32 %28, metadata !7228, metadata !DIExpression()), !dbg !7231
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7260
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7261
  br label %29, !dbg !7261

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7231
  call void @llvm.dbg.value(metadata i32 %30, metadata !7229, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.label(metadata !7230), !dbg !7262
  ret i32 %30, !dbg !7263
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7264 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7266, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7267, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.value(metadata i1 %2, metadata !7268, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7270
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7271
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7271
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7271
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7269, metadata !DIExpression()), !dbg !7270
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7272
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7273
  ret i32 %8, !dbg !7274
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7275 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7281, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7282, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.value(metadata i1 %2, metadata !7283, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7284
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7285
  br i1 %4, label %10, label %5, !dbg !7287

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7288
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7291
  %8 = or i1 %7, %2, !dbg !7292
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7292
  br i1 %2, label %11, label %13, !dbg !7292

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7293

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7294
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7297
  br label %13, !dbg !7298

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7284
  ret i32 %14, !dbg !7299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7300 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7304, metadata !DIExpression()), !dbg !7305
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7306
  %3 = icmp eq %struct._snode* %2, null, !dbg !7306
  ret i1 %3, !dbg !7306
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7307 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7311, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7312, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7313, metadata !DIExpression()), !dbg !7315
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7316
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7313, metadata !DIExpression()), !dbg !7315
  %4 = icmp eq %struct._snode* %3, null, !dbg !7318
  br i1 %4, label %15, label %5, !dbg !7316

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7313, metadata !DIExpression()), !dbg !7315
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7320
  br i1 %6, label %9, label %11, !dbg !7323

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7313, metadata !DIExpression()), !dbg !7315
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7320
  br i1 %8, label %9, label %11, !dbg !7323, !llvm.loop !7324

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7325
  br label %15, !dbg !7325

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7313, metadata !DIExpression()), !dbg !7315
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7318
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7314, metadata !DIExpression()), !dbg !7315
  %14 = icmp eq %struct._snode* %13, null, !dbg !7318
  br i1 %14, label %15, label %7, !dbg !7316, !llvm.loop !7324

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7328 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7332, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7333, metadata !DIExpression()), !dbg !7334
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7335
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7335
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7335
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7336
  %5 = icmp eq %struct._snode* %4, null, !dbg !7336
  br i1 %5, label %6, label %8, !dbg !7335

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7338
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7338
  br label %8, !dbg !7338

8:                                                ; preds = %6, %2
  ret void, !dbg !7335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7340 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7344, metadata !DIExpression()), !dbg !7345
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7346
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7346
  ret %struct._snode* %3, !dbg !7347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7348 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7353, metadata !DIExpression()), !dbg !7354
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7355
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7356
  ret void, !dbg !7357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7358 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7360, metadata !DIExpression()), !dbg !7362
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7361, metadata !DIExpression()), !dbg !7362
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7363
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7364
  ret void, !dbg !7365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7366 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7368, metadata !DIExpression()), !dbg !7369
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7370
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7370
  ret %struct._snode* %3, !dbg !7371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7372 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7374, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7375, metadata !DIExpression()), !dbg !7376
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7377
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7380 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7384, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7385, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7386, metadata !DIExpression()), !dbg !7387
  %4 = icmp eq %struct._snode* %1, null, !dbg !7388
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7390
  br i1 %4, label %6, label %11, !dbg !7391

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7392
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7394
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7394
  br i1 %8, label %9, label %15, !dbg !7392

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7396
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7396
  br label %15, !dbg !7396

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7398
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7400
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7400
  br i1 %13, label %14, label %15, !dbg !7398

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7402
  br label %15, !dbg !7402

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7391
  ret void, !dbg !7391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !7404 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7408, metadata !DIExpression()), !dbg !7409
  %2 = icmp eq %struct._snode* %0, null, !dbg !7410
  br i1 %2, label %5, label %3, !dbg !7410

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7410
  br label %5, !dbg !7410

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7410
  ret %struct._snode* %6, !dbg !7410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7411 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7413, metadata !DIExpression()), !dbg !7414
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7415
  ret %struct._snode* %2, !dbg !7415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7416 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7418, metadata !DIExpression()), !dbg !7419
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7420
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7420
  ret %struct._snode* %3, !dbg !7421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7424, metadata !DIExpression()), !dbg !7427
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !7428, !range !7429
  call void @llvm.dbg.value(metadata i32 %2, metadata !7425, metadata !DIExpression()), !dbg !7427
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %3, metadata !7426, metadata !DIExpression()), !dbg !7427
  ret i32 %3, !dbg !7431
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7434, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %1, metadata !7435, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i8* %1, metadata !7436, metadata !DIExpression()), !dbg !7437
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7438
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7438
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7439
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7439
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7439
  %8 = shl nuw i32 1, %0, !dbg !7440
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !7441
  ret void, !dbg !7442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7443 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7447, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 %1, metadata !7448, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7449, metadata !DIExpression()), !dbg !7453
  %4 = bitcast i64* %3 to i8*, !dbg !7454
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7454
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7451, metadata !DIExpression()), !dbg !7453
  store i64 70368744177732, i64* %3, align 8, !dbg !7455
  call void @llvm.dbg.value(metadata i64* %3, metadata !7451, metadata !DIExpression(DW_OP_deref)), !dbg !7453
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !7456
  call void @llvm.dbg.value(metadata i32 %5, metadata !7452, metadata !DIExpression()), !dbg !7453
  %6 = icmp eq i32 %5, 0, !dbg !7457
  br i1 %6, label %7, label %8, !dbg !7459

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !7460
  br label %8, !dbg !7461

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7462
  ret void, !dbg !7462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7463 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7465, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i8* %0, metadata !7466, metadata !DIExpression()), !dbg !7468
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7469
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7467, metadata !DIExpression()), !dbg !7468
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7470
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7470
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !7471
  ret i32 %5, !dbg !7472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7475, metadata !DIExpression()), !dbg !7478
  call void @llvm.dbg.value(metadata i32 %1, metadata !7476, metadata !DIExpression()), !dbg !7478
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !7479
  call void @llvm.dbg.value(metadata i32 %3, metadata !7477, metadata !DIExpression()), !dbg !7478
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !7480
  ret void, !dbg !7481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7486, metadata !DIExpression()), !dbg !7487
  %2 = sdiv i32 %0, 4, !dbg !7488
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7489
  %6 = add nsw i32 %5, 16, !dbg !7490
  %7 = shl i32 15, %6, !dbg !7491
  %8 = or i32 %7, %2, !dbg !7492
  ret i32 %8, !dbg !7493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7498, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32 %1, metadata !7499, metadata !DIExpression()), !dbg !7500
  %3 = and i32 %1, 255, !dbg !7501
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7501
  %5 = load volatile i32, i32* %4, align 4, !dbg !7501
  %6 = lshr i32 %1, 16, !dbg !7501
  %7 = xor i32 %6, -1, !dbg !7501
  %8 = and i32 %5, %7, !dbg !7501
  call void @llvm.dbg.value(metadata i32 %6, metadata !7502, metadata !DIExpression()) #23, !dbg !7506
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7508, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %9, metadata !7505, metadata !DIExpression()) #23, !dbg !7506
  call void @llvm.dbg.value(metadata i32 %9, metadata !7510, metadata !DIExpression()) #23, !dbg !7515
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7517, !range !5722
  %11 = shl i32 %0, %10, !dbg !7501
  %12 = or i32 %11, %8, !dbg !7501
  store volatile i32 %12, i32* %4, align 4, !dbg !7501
  ret void, !dbg !7518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7519 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7523, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7524, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata i32 %2, metadata !7525, metadata !DIExpression()), !dbg !7528
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7529
  %5 = icmp eq %struct._snode* %4, null, !dbg !7529
  br i1 %5, label %21, label %6, !dbg !7529

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7531
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7526, metadata !DIExpression()), !dbg !7528
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7532
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7532
  %11 = load i32, i32* %10, align 4, !dbg !7532
  %12 = and i32 %11, %2, !dbg !7536
  %13 = icmp eq i32 %12, 0, !dbg !7536
  br i1 %13, label %19, label %14, !dbg !7537

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7526, metadata !DIExpression()), !dbg !7528
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7538
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7538
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7538
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !7540
  br label %19, !dbg !7541

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7526, metadata !DIExpression()), !dbg !7528
  %20 = icmp eq %struct._snode* %8, null, !dbg !7542
  br i1 %20, label %21, label %6, !dbg !7542

21:                                               ; preds = %19, %3
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7546, metadata !DIExpression()), !dbg !7547
  %2 = and i32 %0, 255, !dbg !7548
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7548
  %4 = load volatile i32, i32* %3, align 4, !dbg !7548
  %5 = lshr i32 %0, 16, !dbg !7548
  %6 = and i32 %4, %5, !dbg !7548
  call void @llvm.dbg.value(metadata i32 %5, metadata !7502, metadata !DIExpression()) #23, !dbg !7549
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7551, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %7, metadata !7505, metadata !DIExpression()) #23, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %7, metadata !7510, metadata !DIExpression()) #23, !dbg !7552
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7554, !range !5722
  %9 = lshr i32 %6, %8, !dbg !7555
  ret i32 %9, !dbg !7556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7557 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7562, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.value(metadata i32 %1, metadata !7563, metadata !DIExpression()), !dbg !7564
  %3 = shl i32 %1, 16, !dbg !7565
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7565
  store volatile i32 %3, i32* %4, align 4, !dbg !7565
  ret void, !dbg !7566
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7567 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7571, metadata !DIExpression()), !dbg !7572
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7573
  %3 = load volatile i32, i32* %2, align 4, !dbg !7573
  ret i32 %3, !dbg !7574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7575 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7577, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 %1, metadata !7578, metadata !DIExpression()), !dbg !7579
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7580
  store volatile i32 %1, i32* %3, align 4, !dbg !7580
  ret void, !dbg !7581
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7582 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7584, metadata !DIExpression()), !dbg !7585
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7586
  %3 = load volatile i32, i32* %2, align 4, !dbg !7586
  ret i32 %3, !dbg !7587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !7588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7592, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i32* %1, metadata !7593, metadata !DIExpression()), !dbg !7594
  %3 = and i32 %0, 131072, !dbg !7595
  %4 = icmp eq i32 %3, 0, !dbg !7597
  br i1 %4, label %22, label %5, !dbg !7598

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7599
  %6 = and i32 %0, 2, !dbg !7601
  %7 = icmp eq i32 %6, 0, !dbg !7603
  br i1 %7, label %11, label %8, !dbg !7604

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7605
  %10 = icmp eq i32 %9, 0, !dbg !7605
  br i1 %10, label %33, label %11, !dbg !7608

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7609
  store i32 %12, i32* %1, align 4, !dbg !7609
  %13 = and i32 %0, 16, !dbg !7610
  %14 = icmp eq i32 %13, 0, !dbg !7612
  br i1 %14, label %17, label %15, !dbg !7613

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7614
  br label %31, !dbg !7616

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7617
  %19 = icmp eq i32 %18, 0, !dbg !7619
  br i1 %19, label %33, label %20, !dbg !7620

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7621
  br label %31, !dbg !7623

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7624
  %24 = icmp eq i32 %23, 0, !dbg !7626
  br i1 %24, label %31, label %25, !dbg !7627

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7628
  %27 = icmp eq i32 %26, 0, !dbg !7631
  br i1 %27, label %28, label %31, !dbg !7632

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7633
  br label %33, !dbg !7634

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7594
  ret i32 %34, !dbg !7634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7639, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %1, metadata !7640, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %3, metadata !7642, metadata !DIExpression()), !dbg !7650
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7651
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7651
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7651
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7643, metadata !DIExpression()), !dbg !7650
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7652
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7652
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7644, metadata !DIExpression()), !dbg !7650
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %11, metadata !7645, metadata !DIExpression()), !dbg !7650
  %12 = and i32 %2, 48, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %12, metadata !7646, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %2, metadata !7647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %2, metadata !7648, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7650
  call void @llvm.dbg.value(metadata i32 %2, metadata !7649, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7650
  %13 = lshr i32 %2, 6, !dbg !7655
  %14 = and i32 %13, 1, !dbg !7655
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !7656
  %15 = lshr i32 %2, 7, !dbg !7657
  %16 = and i32 %15, 3, !dbg !7657
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !7658
  %17 = lshr i32 %2, 9, !dbg !7659
  %18 = and i32 %17, 3, !dbg !7659
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !7660
  %19 = icmp eq i32 %12, 32, !dbg !7661
  br i1 %19, label %20, label %24, !dbg !7663

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7664
  br i1 %21, label %22, label %23, !dbg !7667

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7668
  br label %24, !dbg !7670

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7671
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7673
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7678, metadata !DIExpression()), !dbg !7680
  %2 = shl nuw i32 1, %0, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %2, metadata !7679, metadata !DIExpression()), !dbg !7680
  ret i32 %2, !dbg !7682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7683 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7687, metadata !DIExpression()), !dbg !7690
  call void @llvm.dbg.value(metadata i32 %1, metadata !7688, metadata !DIExpression()), !dbg !7690
  call void @llvm.dbg.value(metadata i32 %2, metadata !7689, metadata !DIExpression()), !dbg !7690
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7691
  %5 = load volatile i32, i32* %4, align 4, !dbg !7691
  %6 = xor i32 %1, -1, !dbg !7691
  %7 = and i32 %5, %6, !dbg !7691
  %8 = mul i32 %2, %1, !dbg !7691
  %9 = or i32 %7, %8, !dbg !7691
  store volatile i32 %9, i32* %4, align 4, !dbg !7691
  ret void, !dbg !7692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7693 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7695, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 %1, metadata !7696, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 %2, metadata !7697, metadata !DIExpression()), !dbg !7698
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7699
  %5 = load volatile i32, i32* %4, align 4, !dbg !7699
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7700
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7702, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7700
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7703
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7705, !range !5722
  %8 = shl nuw nsw i32 %7, 1, !dbg !7699
  %9 = shl i32 3, %8, !dbg !7699
  %10 = xor i32 %9, -1, !dbg !7699
  %11 = and i32 %5, %10, !dbg !7699
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7706
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7706
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7708
  %12 = shl i32 %2, %8, !dbg !7699
  %13 = or i32 %11, %12, !dbg !7699
  store volatile i32 %13, i32* %4, align 4, !dbg !7699
  ret void, !dbg !7710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7711 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7713, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i32 %1, metadata !7714, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i32 %2, metadata !7715, metadata !DIExpression()), !dbg !7716
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7717
  %5 = load volatile i32, i32* %4, align 4, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7718
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7720, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7721
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7723, !range !5722
  %8 = shl nuw nsw i32 %7, 1, !dbg !7717
  %9 = shl i32 3, %8, !dbg !7717
  %10 = xor i32 %9, -1, !dbg !7717
  %11 = and i32 %5, %10, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7726
  %12 = shl i32 %2, %8, !dbg !7717
  %13 = or i32 %11, %12, !dbg !7717
  store volatile i32 %13, i32* %4, align 4, !dbg !7717
  ret void, !dbg !7728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7729 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7731, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %1, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %2, metadata !7733, metadata !DIExpression()), !dbg !7734
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7735
  %5 = load volatile i32, i32* %4, align 4, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7736
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7738, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7739
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7741, !range !5722
  %8 = shl nuw nsw i32 %7, 2, !dbg !7735
  %9 = shl i32 15, %8, !dbg !7735
  %10 = xor i32 %9, -1, !dbg !7735
  %11 = and i32 %5, %10, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7744
  %12 = shl i32 %2, %8, !dbg !7735
  %13 = or i32 %11, %12, !dbg !7735
  store volatile i32 %13, i32* %4, align 4, !dbg !7735
  ret void, !dbg !7746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7747 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7749, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %1, metadata !7750, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %2, metadata !7751, metadata !DIExpression()), !dbg !7752
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7753
  %5 = load volatile i32, i32* %4, align 4, !dbg !7753
  %6 = lshr i32 %1, 8, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %6, metadata !7502, metadata !DIExpression()) #23, !dbg !7754
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7756, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %7, metadata !7505, metadata !DIExpression()) #23, !dbg !7754
  call void @llvm.dbg.value(metadata i32 %7, metadata !7510, metadata !DIExpression()) #23, !dbg !7757
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7759, !range !5722
  %9 = shl nuw nsw i32 %8, 2, !dbg !7753
  %10 = shl i32 15, %9, !dbg !7753
  %11 = xor i32 %10, -1, !dbg !7753
  %12 = and i32 %5, %11, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %6, metadata !7502, metadata !DIExpression()) #23, !dbg !7760
  call void @llvm.dbg.value(metadata i32 %7, metadata !7505, metadata !DIExpression()) #23, !dbg !7760
  call void @llvm.dbg.value(metadata i32 %7, metadata !7510, metadata !DIExpression()) #23, !dbg !7762
  %13 = shl i32 %2, %9, !dbg !7753
  %14 = or i32 %12, %13, !dbg !7753
  store volatile i32 %14, i32* %4, align 4, !dbg !7753
  ret void, !dbg !7764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7765 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7767, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.value(metadata i32 %1, metadata !7768, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.value(metadata i32 %2, metadata !7769, metadata !DIExpression()), !dbg !7770
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7771
  %5 = load volatile i32, i32* %4, align 4, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7772
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7774, !srcloc !7509
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7775
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7777, !range !5722
  %8 = shl nuw nsw i32 %7, 1, !dbg !7771
  %9 = shl i32 3, %8, !dbg !7771
  %10 = xor i32 %9, -1, !dbg !7771
  %11 = and i32 %5, %10, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()) #23, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %6, metadata !7505, metadata !DIExpression()) #23, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %6, metadata !7510, metadata !DIExpression()) #23, !dbg !7780
  %12 = shl i32 %2, %8, !dbg !7771
  %13 = or i32 %11, %12, !dbg !7771
  store volatile i32 %13, i32* %4, align 4, !dbg !7771
  ret void, !dbg !7782
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7785, metadata !DIExpression()), !dbg !7788
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7789
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7789
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7789
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7786, metadata !DIExpression()), !dbg !7788
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7790
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7791
  %6 = tail call fastcc zeroext i1 @device_is_ready.45() #25, !dbg !7792
  br i1 %6, label %7, label %11, !dbg !7794

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !7795
  call void @llvm.dbg.value(metadata i32 %8, metadata !7787, metadata !DIExpression()), !dbg !7788
  %9 = icmp slt i32 %8, 0, !dbg !7796
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7798
  br label %11, !dbg !7798

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7788
  ret i32 %12, !dbg !7799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !7800 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7804, metadata !DIExpression()), !dbg !7805
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7806, !srcloc !7808
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.46() #25, !dbg !7809
  ret i1 %1, !dbg !7810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7815, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i8 1, metadata !7816, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7817, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 0, metadata !7818, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7819, metadata !DIExpression()), !dbg !7820
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7821
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7821
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7821
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7817, metadata !DIExpression()), !dbg !7820
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7822
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7825
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %7, metadata !7818, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 %7, metadata !7818, metadata !DIExpression()), !dbg !7820
  ret i32 %7, !dbg !7827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.46() unnamed_addr #1 !dbg !7828 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7830, metadata !DIExpression()), !dbg !7831
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !7832
  ret i1 %1, !dbg !7833
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7838, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %1, metadata !7839, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %2, metadata !7840, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %3, metadata !7841, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 0, metadata !7842, metadata !DIExpression()), !dbg !7846
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !7847
  %5 = icmp eq i32 %3, 17, !dbg !7848
  br i1 %5, label %6, label %14, !dbg !7849

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7850
  call void @llvm.dbg.value(metadata i32 %7, metadata !7843, metadata !DIExpression()), !dbg !7851
  %8 = icmp eq i32 %7, 0, !dbg !7852
  %9 = shl nuw i32 1, %1, !dbg !7854
  br i1 %8, label %12, label %10, !dbg !7855

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7856
  br label %14, !dbg !7858

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7859
  br label %14, !dbg !7862

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7863
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !7864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7866, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i8* %1, metadata !7867, metadata !DIExpression()), !dbg !7870
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7871
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7871
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7871
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7868, metadata !DIExpression()), !dbg !7870
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7872
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7872
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !7874
  %9 = icmp eq i32 %8, 0, !dbg !7874
  br i1 %9, label %12, label %10, !dbg !7875

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7876
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !7878
  br label %12, !dbg !7879

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7880
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !7882
  %15 = icmp eq i32 %14, 0, !dbg !7882
  br i1 %15, label %19, label %16, !dbg !7883

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7884
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !7885
  store i8 %18, i8* %1, align 1, !dbg !7886
  br label %19, !dbg !7887

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7870
  ret i32 %20, !dbg !7888
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !7889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7891, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8 %1, metadata !7892, metadata !DIExpression()), !dbg !7895
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7896
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7896
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7896
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7893, metadata !DIExpression()), !dbg !7895
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !7897

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7898
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !7901
  %10 = icmp eq i32 %9, 0, !dbg !7901
  br i1 %10, label %18, label %11, !dbg !7902

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7903, !srcloc !7910
  call void @llvm.dbg.value(metadata i32 undef, metadata !7906, metadata !DIExpression()) #23, !dbg !7911
  call void @llvm.dbg.value(metadata i32 undef, metadata !7907, metadata !DIExpression()) #23, !dbg !7911
  call void @llvm.dbg.value(metadata i32 undef, metadata !7894, metadata !DIExpression()), !dbg !7895
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7912
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !7914
  %15 = icmp eq i32 %14, 0, !dbg !7914
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !7903
  br i1 %15, label %17, label %19, !dbg !7915

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !7906, metadata !DIExpression()) #23, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %16, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 undef, metadata !7916, metadata !DIExpression()) #23, !dbg !7919
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !7921, !srcloc !7922
  br label %18, !dbg !7923

18:                                               ; preds = %17, %7
  br label %7, !dbg !7898, !llvm.loop !7924

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !7903
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7926
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %20, metadata !7916, metadata !DIExpression()) #23, !dbg !7928
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !7930, !srcloc !7922
  ret void, !dbg !7931
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !7932 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7934, metadata !DIExpression()), !dbg !7937
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7938
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !7938
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !7938
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !7935, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32 0, metadata !7936, metadata !DIExpression()), !dbg !7937
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !7939
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7939
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !7941
  %8 = icmp ne i32 %7, 0, !dbg !7941
  %9 = zext i1 %8 to i32, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %9, metadata !7936, metadata !DIExpression()), !dbg !7937
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7943
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !7945
  %12 = icmp eq i32 %11, 0, !dbg !7945
  %13 = or i32 %9, 2, !dbg !7946
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !7946
  call void @llvm.dbg.value(metadata i32 %14, metadata !7936, metadata !DIExpression()), !dbg !7937
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7947
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !7949
  %17 = icmp eq i32 %16, 0, !dbg !7949
  %18 = or i32 %14, 4, !dbg !7950
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !7950
  call void @llvm.dbg.value(metadata i32 %19, metadata !7936, metadata !DIExpression()), !dbg !7937
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7951
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !7953
  %22 = icmp eq i32 %21, 0, !dbg !7953
  %23 = or i32 %19, 8, !dbg !7954
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !7954
  call void @llvm.dbg.value(metadata i32 %24, metadata !7936, metadata !DIExpression()), !dbg !7937
  %25 = and i32 %24, 8, !dbg !7955
  %26 = icmp eq i32 %25, 0, !dbg !7955
  br i1 %26, label %29, label %27, !dbg !7957

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7958
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !7960
  br label %29, !dbg !7961

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !7962
  %31 = icmp eq i32 %30, 0, !dbg !7962
  br i1 %31, label %34, label %32, !dbg !7964

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7965
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !7967
  br label %34, !dbg !7968

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !7969
  %36 = icmp eq i32 %35, 0, !dbg !7969
  br i1 %36, label %39, label %37, !dbg !7971

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7972
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !7974
  br label %39, !dbg !7975

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !7976
  %41 = icmp eq i32 %40, 0, !dbg !7976
  br i1 %41, label %44, label %42, !dbg !7978

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7979
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !7981
  br label %44, !dbg !7982

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7983
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !7984
  ret i32 %24, !dbg !7985
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !7986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7988, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7989, metadata !DIExpression()), !dbg !7997
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7998
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7998
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7998
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7990, metadata !DIExpression()), !dbg !7997
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7999
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !7999
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !7999
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !7991, metadata !DIExpression()), !dbg !7997
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8000
  %10 = load i8, i8* %9, align 4, !dbg !8000
  %11 = zext i8 %10 to i32, !dbg !8001
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8002
  call void @llvm.dbg.value(metadata i32 %12, metadata !7993, metadata !DIExpression()), !dbg !7997
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8003
  %14 = load i8, i8* %13, align 1, !dbg !8003
  %15 = zext i8 %14 to i32, !dbg !8004
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8005
  call void @llvm.dbg.value(metadata i32 %16, metadata !7994, metadata !DIExpression()), !dbg !7997
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8006
  %18 = load i8, i8* %17, align 2, !dbg !8006
  %19 = zext i8 %18 to i32, !dbg !8007
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %20, metadata !7995, metadata !DIExpression()), !dbg !7997
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8009
  %22 = load i8, i8* %21, align 1, !dbg !8009
  %23 = zext i8 %22 to i32, !dbg !8010
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8011
  call void @llvm.dbg.value(metadata i32 %24, metadata !7996, metadata !DIExpression()), !dbg !7997
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8012

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8014
  br i1 %26, label %69, label %27, !dbg !8016

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8017

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8018
  br i1 %29, label %65, label %30, !dbg !8018

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8020
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !7997
  br i1 %31, label %38, label %34, !dbg !8022

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8023
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !8023

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8026
  br i1 %37, label %38, label %69, !dbg !8027

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8028
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8029
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8030
  %41 = icmp eq i32 %12, %40, !dbg !8032
  br i1 %41, label %43, label %42, !dbg !8033

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8034
  br label %43, !dbg !8036

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8037
  %45 = icmp eq i32 %16, %44, !dbg !8039
  br i1 %45, label %47, label %46, !dbg !8040

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8041
  br label %47, !dbg !8043

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8044
  %49 = icmp eq i32 %20, %48, !dbg !8046
  br i1 %49, label %51, label %50, !dbg !8047

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8048
  br label %51, !dbg !8050

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8051
  %53 = icmp eq i32 %24, %52, !dbg !8053
  br i1 %53, label %55, label %54, !dbg !8054

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8055
  br label %55, !dbg !8057

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8058
  %57 = load i32, i32* %56, align 4, !dbg !8058
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8060
  %59 = load i32, i32* %58, align 4, !dbg !8060
  %60 = icmp eq i32 %57, %59, !dbg !8061
  br i1 %60, label %63, label %61, !dbg !8062

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8063
  %62 = load i32, i32* %56, align 4, !dbg !8065
  store i32 %62, i32* %58, align 4, !dbg !8066
  br label %63, !dbg !8067

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8068
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8069
  br label %69, !dbg !8070

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8018
  %67 = and i8 %66, 1, !dbg !8018
  %68 = icmp eq i8 %67, 0, !dbg !8018
  br i1 %68, label %30, label %69, !dbg !8018

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !7997
  ret i32 %70, !dbg !8071
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8074, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8075, metadata !DIExpression()), !dbg !8077
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8078
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8078
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8078
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8076, metadata !DIExpression()), !dbg !8077
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8079
  %7 = load i32, i32* %6, align 4, !dbg !8079
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8080
  store i32 %7, i32* %8, align 4, !dbg !8081
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8082, !range !8083
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8084
  %11 = trunc i32 %10 to i8, !dbg !8084
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8085
  store i8 %11, i8* %12, align 4, !dbg !8086
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8087, !range !8088
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8089
  %15 = trunc i32 %14 to i8, !dbg !8089
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8090
  store i8 %15, i8* %16, align 1, !dbg !8091
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8092
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8093, !range !8083
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8094
  %20 = trunc i32 %19 to i8, !dbg !8094
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8095
  store i8 %20, i8* %21, align 2, !dbg !8096
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8097, !range !8098
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8099
  %24 = trunc i32 %23 to i8, !dbg !8099
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8100
  store i8 %24, i8* %25, align 1, !dbg !8101
  ret i32 0, !dbg !8102
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8107, metadata !DIExpression()), !dbg !8109
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8110
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8110
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8110
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8108, metadata !DIExpression()), !dbg !8109
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8111
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8111
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8112
  ret i32 %7, !dbg !8113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8118, metadata !DIExpression()), !dbg !8119
  %2 = icmp eq i32 %0, 1024, !dbg !8120
  %3 = select i1 %2, i32 2, i32 0, !dbg !8120
  %4 = icmp eq i32 %0, 1536, !dbg !8120
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8120
  ret i32 %5, !dbg !8121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8122 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8124, metadata !DIExpression()), !dbg !8126
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8127
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8127
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8127
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8125, metadata !DIExpression()), !dbg !8126
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8128
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8128
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8129
  ret i32 %7, !dbg !8130
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8135, metadata !DIExpression()), !dbg !8136
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8137
  %3 = icmp ult i32 %2, 4, !dbg !8137
  br i1 %3, label %4, label %7, !dbg !8137

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8137
  %6 = load i32, i32* %5, align 4, !dbg !8137
  br label %7, !dbg !8137

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8138
  ret i32 %8, !dbg !8140
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8143, metadata !DIExpression()), !dbg !8145
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8146
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8146
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8146
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8144, metadata !DIExpression()), !dbg !8145
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8147
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8147
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8148
  ret i32 %7, !dbg !8149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8154, metadata !DIExpression()), !dbg !8156
  call void @llvm.dbg.value(metadata i32 %1, metadata !8155, metadata !DIExpression()), !dbg !8156
  %3 = icmp eq i32 %0, 4096, !dbg !8157
  %4 = icmp eq i32 %1, 0, !dbg !8157
  %5 = select i1 %4, i32 4, i32 3, !dbg !8157
  %6 = select i1 %4, i32 3, i32 2, !dbg !8157
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8157
  ret i32 %7, !dbg !8158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8161, metadata !DIExpression()), !dbg !8163
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8164
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8164
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8164
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8162, metadata !DIExpression()), !dbg !8163
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8165
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8165
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8166
  ret i32 %7, !dbg !8167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8172, metadata !DIExpression()), !dbg !8173
  %2 = icmp eq i32 %0, 768, !dbg !8174
  %3 = zext i1 %2 to i32, !dbg !8173
  ret i32 %3, !dbg !8176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8177 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8182, metadata !DIExpression()), !dbg !8183
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8184
  %3 = load volatile i32, i32* %2, align 4, !dbg !8184
  %4 = and i32 %3, 768, !dbg !8184
  ret i32 %4, !dbg !8185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8188, metadata !DIExpression()), !dbg !8189
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8190
  %3 = load volatile i32, i32* %2, align 4, !dbg !8190
  %4 = and i32 %3, 4096, !dbg !8190
  ret i32 %4, !dbg !8191
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8192 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8194, metadata !DIExpression()), !dbg !8195
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8196
  %3 = load volatile i32, i32* %2, align 4, !dbg !8196
  %4 = and i32 %3, 12288, !dbg !8196
  ret i32 %4, !dbg !8197
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8198 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8200, metadata !DIExpression()), !dbg !8201
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8202
  %3 = load volatile i32, i32* %2, align 4, !dbg !8202
  %4 = and i32 %3, 1536, !dbg !8202
  ret i32 %4, !dbg !8203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8208, metadata !DIExpression()), !dbg !8209
  %2 = icmp eq i32 %0, 2, !dbg !8210
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8210
  %4 = icmp eq i32 %0, 1, !dbg !8210
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8210
  ret i32 %5, !dbg !8211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8216, metadata !DIExpression()), !dbg !8217
  %2 = icmp ult i32 %0, 3, !dbg !8218
  br i1 %2, label %3, label %6, !dbg !8218

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8218
  %5 = load i32, i32* %4, align 4, !dbg !8218
  br label %6, !dbg !8218

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8219
  ret i32 %7, !dbg !8221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8226, metadata !DIExpression()), !dbg !8228
  call void @llvm.dbg.value(metadata i32 %1, metadata !8227, metadata !DIExpression()), !dbg !8228
  %3 = icmp eq i32 %0, 4, !dbg !8229
  %4 = icmp eq i32 %1, 0, !dbg !8229
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8229
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8229
  ret i32 %6, !dbg !8230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8235, metadata !DIExpression()), !dbg !8236
  %2 = icmp eq i32 %0, 1, !dbg !8237
  %3 = select i1 %2, i32 768, i32 0, !dbg !8236
  ret i32 %3, !dbg !8239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8240 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8244, metadata !DIExpression()), !dbg !8245
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8246
  %3 = load volatile i32, i32* %2, align 4, !dbg !8246
  %4 = and i32 %3, -8193, !dbg !8246
  store volatile i32 %4, i32* %2, align 4, !dbg !8246
  ret void, !dbg !8247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8252, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i32 %1, metadata !8253, metadata !DIExpression()), !dbg !8255
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8256
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8256
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8256
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8254, metadata !DIExpression()), !dbg !8255
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8257
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8257
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8258
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8262, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %1, metadata !8263, metadata !DIExpression()), !dbg !8265
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8266
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8266
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8266
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8264, metadata !DIExpression()), !dbg !8265
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8267
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8267
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8268
  ret void, !dbg !8269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8272, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()), !dbg !8275
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8276
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8276
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8276
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8274, metadata !DIExpression()), !dbg !8275
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8277
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8277
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8282, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i32 %1, metadata !8283, metadata !DIExpression()), !dbg !8285
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8286
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8286
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8286
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8284, metadata !DIExpression()), !dbg !8285
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8287
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8287
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8288
  ret void, !dbg !8289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8290 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8292, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %1, metadata !8293, metadata !DIExpression()), !dbg !8297
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8298
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8298
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8298
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8294, metadata !DIExpression()), !dbg !8297
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8299
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8299
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8299
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8295, metadata !DIExpression()), !dbg !8297
  %10 = bitcast i32* %3 to i8*, !dbg !8300
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8300
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8301
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8301
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8305
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8305
  %15 = load i8*, i8** %14, align 4, !dbg !8305
  call void @llvm.dbg.value(metadata i32* %3, metadata !8296, metadata !DIExpression(DW_OP_deref)), !dbg !8297
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !8306
  %17 = icmp slt i32 %16, 0, !dbg !8307
  br i1 %17, label %23, label %18, !dbg !8308

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8309
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8309
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !8310
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8311
  %22 = load i32, i32* %3, align 4, !dbg !8312
  call void @llvm.dbg.value(metadata i32 %22, metadata !8296, metadata !DIExpression()), !dbg !8297
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !8313
  br label %23, !dbg !8314

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8314
  ret void, !dbg !8314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8315 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8317, metadata !DIExpression()), !dbg !8318
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8319
  %3 = load volatile i32, i32* %2, align 4, !dbg !8319
  %4 = or i32 %3, 8192, !dbg !8319
  store volatile i32 %4, i32* %2, align 4, !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8323, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i8* %1, metadata !8324, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32* %2, metadata !8325, metadata !DIExpression()), !dbg !8327
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8328
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8328
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8328
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8326, metadata !DIExpression()), !dbg !8327
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8329
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8329
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8331
  br i1 %9, label %12, label %10, !dbg !8332

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !8333
  br label %12, !dbg !8334

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8327
  ret i32 %13, !dbg !8335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8336 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8340, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.value(metadata i32 0, metadata !8341, metadata !DIExpression()), !dbg !8342
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8343
  %3 = load volatile i32, i32* %2, align 4, !dbg !8343
  %4 = and i32 %3, -32769, !dbg !8343
  store volatile i32 %4, i32* %2, align 4, !dbg !8343
  ret void, !dbg !8344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8345 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8349, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.value(metadata i32 %1, metadata !8350, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.value(metadata i32 0, metadata !8351, metadata !DIExpression()), !dbg !8353
  call void @llvm.dbg.value(metadata i32 %2, metadata !8352, metadata !DIExpression()), !dbg !8353
  %4 = zext i32 %1 to i64, !dbg !8354
  %5 = mul nuw nsw i64 %4, 25, !dbg !8354
  %6 = zext i32 %2 to i64, !dbg !8354
  %7 = shl nuw nsw i64 %6, 2, !dbg !8354
  %8 = udiv i64 %5, %7, !dbg !8354
  %9 = trunc i64 %8 to i32, !dbg !8354
  %10 = udiv i32 %9, 100, !dbg !8354
  %11 = shl nuw nsw i32 %10, 4, !dbg !8354
  %12 = mul i32 %10, -100, !dbg !8354
  %13 = add i32 %12, %9, !dbg !8354
  %14 = shl i32 %13, 4, !dbg !8354
  %15 = add i32 %14, 50, !dbg !8354
  %16 = udiv i32 %15, 100, !dbg !8354
  %17 = and i32 %16, 240, !dbg !8354
  %18 = add nuw nsw i32 %17, %11, !dbg !8354
  %19 = and i32 %16, 15, !dbg !8354
  %20 = and i32 %18, 65520, !dbg !8357
  %21 = or i32 %20, %19, !dbg !8357
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8358
  store volatile i32 %21, i32* %22, align 4, !dbg !8359
  ret void, !dbg !8360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8361 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8363, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata i32 %1, metadata !8364, metadata !DIExpression()), !dbg !8365
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8366
  %4 = load volatile i32, i32* %3, align 4, !dbg !8366
  %5 = and i32 %4, -769, !dbg !8366
  %6 = or i32 %5, %1, !dbg !8366
  store volatile i32 %6, i32* %3, align 4, !dbg !8366
  ret void, !dbg !8367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8368 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8370, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 %1, metadata !8371, metadata !DIExpression()), !dbg !8372
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8373
  %4 = load volatile i32, i32* %3, align 4, !dbg !8373
  %5 = and i32 %4, -4097, !dbg !8373
  %6 = or i32 %5, %1, !dbg !8373
  store volatile i32 %6, i32* %3, align 4, !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8375 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8377, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.value(metadata i32 %1, metadata !8378, metadata !DIExpression()), !dbg !8379
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8380
  %4 = load volatile i32, i32* %3, align 4, !dbg !8380
  %5 = and i32 %4, -12289, !dbg !8380
  %6 = or i32 %5, %1, !dbg !8380
  store volatile i32 %6, i32* %3, align 4, !dbg !8380
  ret void, !dbg !8381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8382 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %1, metadata !8385, metadata !DIExpression()), !dbg !8386
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8387
  %4 = load volatile i32, i32* %3, align 4, !dbg !8387
  %5 = and i32 %4, -1537, !dbg !8387
  %6 = or i32 %5, %1, !dbg !8387
  store volatile i32 %6, i32* %3, align 4, !dbg !8387
  ret void, !dbg !8388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8389 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8391, metadata !DIExpression()), !dbg !8392
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8393
  %3 = load volatile i32, i32* %2, align 4, !dbg !8393
  %4 = lshr i32 %3, 3, !dbg !8394
  %5 = and i32 %4, 1, !dbg !8394
  ret i32 %5, !dbg !8395
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8396 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8398, metadata !DIExpression()), !dbg !8399
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8400
  %3 = load volatile i32, i32* %2, align 4, !dbg !8400
  %4 = and i32 %3, 1, !dbg !8400
  ret i32 %4, !dbg !8401
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8402 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8404, metadata !DIExpression()), !dbg !8405
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8406
  %3 = load volatile i32, i32* %2, align 4, !dbg !8406
  %4 = lshr i32 %3, 1, !dbg !8407
  %5 = and i32 %4, 1, !dbg !8407
  ret i32 %5, !dbg !8408
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8409 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8411, metadata !DIExpression()), !dbg !8412
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8413
  %3 = load volatile i32, i32* %2, align 4, !dbg !8413
  %4 = lshr i32 %3, 8, !dbg !8414
  %5 = and i32 %4, 1, !dbg !8414
  ret i32 %5, !dbg !8415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8416 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8418, metadata !DIExpression()), !dbg !8419
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8420
  store volatile i32 -257, i32* %2, align 4, !dbg !8420
  ret void, !dbg !8421
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8422 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8424, metadata !DIExpression()), !dbg !8426
  %3 = bitcast i32* %2 to i8*, !dbg !8427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8425, metadata !DIExpression()), !dbg !8428
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8429
  %5 = load volatile i32, i32* %4, align 4, !dbg !8429
  store volatile i32 %5, i32* %2, align 4, !dbg !8430
  %6 = load volatile i32, i32* %2, align 4, !dbg !8431
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8432
  %8 = load volatile i32, i32* %7, align 4, !dbg !8432
  store volatile i32 %8, i32* %2, align 4, !dbg !8433
  %9 = load volatile i32, i32* %2, align 4, !dbg !8434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8435
  ret void, !dbg !8435
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8436 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8438, metadata !DIExpression()), !dbg !8440
  %3 = bitcast i32* %2 to i8*, !dbg !8441
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8439, metadata !DIExpression()), !dbg !8442
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8443
  %5 = load volatile i32, i32* %4, align 4, !dbg !8443
  store volatile i32 %5, i32* %2, align 4, !dbg !8444
  %6 = load volatile i32, i32* %2, align 4, !dbg !8445
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8446
  %8 = load volatile i32, i32* %7, align 4, !dbg !8446
  store volatile i32 %8, i32* %2, align 4, !dbg !8447
  %9 = load volatile i32, i32* %2, align 4, !dbg !8448
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8449
  ret void, !dbg !8449
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8450 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8452, metadata !DIExpression()), !dbg !8454
  %3 = bitcast i32* %2 to i8*, !dbg !8455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8453, metadata !DIExpression()), !dbg !8456
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8457
  %5 = load volatile i32, i32* %4, align 4, !dbg !8457
  store volatile i32 %5, i32* %2, align 4, !dbg !8458
  %6 = load volatile i32, i32* %2, align 4, !dbg !8459
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8460
  %8 = load volatile i32, i32* %7, align 4, !dbg !8460
  store volatile i32 %8, i32* %2, align 4, !dbg !8461
  %9 = load volatile i32, i32* %2, align 4, !dbg !8462
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8463
  ret void, !dbg !8463
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8464 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8466, metadata !DIExpression()), !dbg !8468
  %3 = bitcast i32* %2 to i8*, !dbg !8469
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8469
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8467, metadata !DIExpression()), !dbg !8470
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8471
  %5 = load volatile i32, i32* %4, align 4, !dbg !8471
  store volatile i32 %5, i32* %2, align 4, !dbg !8472
  %6 = load volatile i32, i32* %2, align 4, !dbg !8473
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8474
  %8 = load volatile i32, i32* %7, align 4, !dbg !8474
  store volatile i32 %8, i32* %2, align 4, !dbg !8475
  %9 = load volatile i32, i32* %2, align 4, !dbg !8476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8477
  ret void, !dbg !8477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8478 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8480, metadata !DIExpression()), !dbg !8481
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8482
  %3 = load volatile i32, i32* %2, align 4, !dbg !8482
  %4 = lshr i32 %3, 7, !dbg !8483
  %5 = and i32 %4, 1, !dbg !8483
  ret i32 %5, !dbg !8484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8485 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8489, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.value(metadata i8 %1, metadata !8490, metadata !DIExpression()), !dbg !8491
  %3 = zext i8 %1 to i32, !dbg !8492
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8493
  store volatile i32 %3, i32* %4, align 4, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8496 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8500
  %3 = load volatile i32, i32* %2, align 4, !dbg !8500
  %4 = lshr i32 %3, 5, !dbg !8501
  %5 = and i32 %4, 1, !dbg !8501
  ret i32 %5, !dbg !8502
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8503 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8507, metadata !DIExpression()), !dbg !8508
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8509
  %3 = load volatile i32, i32* %2, align 4, !dbg !8509
  %4 = trunc i32 %3 to i8, !dbg !8510
  ret i8 %4, !dbg !8511
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8514, metadata !DIExpression()), !dbg !8520
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8521
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8521
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8521
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8515, metadata !DIExpression()), !dbg !8520
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8522
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8522
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8516, metadata !DIExpression()), !dbg !8520
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !8523
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8524
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8524
  %10 = tail call fastcc zeroext i1 @device_is_ready.54(%struct.device* noundef %9) #25, !dbg !8526
  br i1 %10, label %11, label %49, !dbg !8527

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8528
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8529
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8529
  %15 = load i8*, i8** %14, align 4, !dbg !8529
  %16 = tail call fastcc i32 @clock_control_on.55(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !8530
  call void @llvm.dbg.value(metadata i32 %16, metadata !8519, metadata !DIExpression()), !dbg !8520
  %17 = icmp eq i32 %16, 0, !dbg !8531
  br i1 %17, label %18, label %49, !dbg !8533

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8534
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8534
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !8535
  call void @llvm.dbg.value(metadata i32 %21, metadata !8519, metadata !DIExpression()), !dbg !8520
  %22 = icmp slt i32 %21, 0, !dbg !8536
  br i1 %22, label %49, label %23, !dbg !8538

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8539
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8539
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !8540
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8541
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !8542
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8543
  %28 = load i32, i32* %27, align 4, !dbg !8543
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8545

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8517, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 4096, metadata !8518, metadata !DIExpression()), !dbg !8520
  br label %31, !dbg !8546

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8517, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 0, metadata !8518, metadata !DIExpression()), !dbg !8520
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8549
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8549
  call void @llvm.dbg.value(metadata i32 %33, metadata !8518, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 %32, metadata !8517, metadata !DIExpression()), !dbg !8520
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8550
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !8551
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8552
  %36 = load i8, i8* %35, align 4, !dbg !8552, !range !5142
  %37 = icmp eq i8 %36, 0, !dbg !8552
  br i1 %37, label %39, label %38, !dbg !8554

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !8555
  br label %39, !dbg !8557

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8558
  %41 = load i32, i32* %40, align 4, !dbg !8558
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !8559
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8560
  %43 = load i8, i8* %42, align 4, !dbg !8560, !range !5142
  %44 = icmp eq i8 %43, 0, !dbg !8560
  br i1 %44, label %47, label %45, !dbg !8562

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8563
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !8565
  br label %47, !dbg !8566

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8567
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !8568
  br label %49, !dbg !8569

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8520
  ret i32 %50, !dbg !8570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8571 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8575, metadata !DIExpression()), !dbg !8579
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8580
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8580
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8580
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8576, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8577, metadata !DIExpression()), !dbg !8579
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8581
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8582
  ret void, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.54(%struct.device* noundef %0) unnamed_addr #1 !dbg !8584 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8588, metadata !DIExpression()), !dbg !8589
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8590, !srcloc !8592
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.56(%struct.device* noundef %0) #25, !dbg !8593
  ret i1 %2, !dbg !8594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.55(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8597, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i8* %1, metadata !8598, metadata !DIExpression()), !dbg !8600
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8601
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8601
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8601
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8599, metadata !DIExpression()), !dbg !8600
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8602
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8602
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !8603
  ret i32 %8, !dbg !8604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8605 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8609, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8 0, metadata !8610, metadata !DIExpression()), !dbg !8613
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8614
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8612, metadata !DIExpression(DW_OP_deref)), !dbg !8613
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8615
  call void @llvm.dbg.value(metadata i32 %4, metadata !8611, metadata !DIExpression()), !dbg !8613
  %5 = icmp slt i32 %4, 0, !dbg !8616
  br i1 %5, label %9, label %6, !dbg !8618

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8619
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8612, metadata !DIExpression()), !dbg !8613
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8620
  br label %9, !dbg !8621

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8613
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8622
  ret i32 %10, !dbg !8622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8625, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 12, metadata !8626, metadata !DIExpression()), !dbg !8629
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8630

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8631, metadata !DIExpression()) #23, !dbg !8637
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8640, !srcloc !8641
  call void @llvm.dbg.value(metadata i32 %4, metadata !8636, metadata !DIExpression()) #23, !dbg !8637
  %5 = or i32 %4, 12, !dbg !8642
  call void @llvm.dbg.value(metadata i32 %5, metadata !8627, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %5, metadata !8644, metadata !DIExpression()) #23, !dbg !8651
  call void @llvm.dbg.value(metadata i32* %2, metadata !8649, metadata !DIExpression()) #23, !dbg !8651
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8653, !srcloc !8654
  call void @llvm.dbg.value(metadata i32 %6, metadata !8650, metadata !DIExpression()) #23, !dbg !8651
  %7 = icmp eq i32 %6, 0, !dbg !8630
  br i1 %7, label %8, label %3, !dbg !8642, !llvm.loop !8655

8:                                                ; preds = %3
  ret void, !dbg !8656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8657 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8659, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 %1, metadata !8660, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 %2, metadata !8661, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 0, metadata !8662, metadata !DIExpression()), !dbg !8663
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8664
  %5 = load volatile i32, i32* %4, align 4, !dbg !8664
  %6 = and i32 %5, -5633, !dbg !8664
  %7 = or i32 %2, %1, !dbg !8664
  %8 = or i32 %7, %6, !dbg !8664
  store volatile i32 %8, i32* %4, align 4, !dbg !8664
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8665
  %10 = load volatile i32, i32* %9, align 4, !dbg !8665
  %11 = and i32 %10, -12289, !dbg !8665
  store volatile i32 %11, i32* %9, align 4, !dbg !8665
  ret void, !dbg !8666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8669, metadata !DIExpression()), !dbg !8670
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8671
  %3 = load volatile i32, i32* %2, align 4, !dbg !8671
  %4 = or i32 %3, 8, !dbg !8671
  store volatile i32 %4, i32* %2, align 4, !dbg !8671
  ret void, !dbg !8672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8673 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8677, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8678, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 0, metadata !8679, metadata !DIExpression()), !dbg !8680
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8681
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8681
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8682
  %5 = load i8, i8* %4, align 4, !dbg !8682
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8683
  ret i32 %6, !dbg !8684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.56(%struct.device* noundef %0) unnamed_addr #1 !dbg !8685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8687, metadata !DIExpression()), !dbg !8688
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8689
  ret i1 %2, !dbg !8690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8691 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8693, metadata !DIExpression()), !dbg !8694
  tail call fastcc void @__NVIC_SetPriority.58() #25, !dbg !8695
  store i32 8399, i32* @last_load, align 4, !dbg !8696
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8697
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8698
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8699
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8700
  %3 = or i32 %2, 7, !dbg !8700
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8700
  ret i32 0, !dbg !8701
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58() unnamed_addr #13 !dbg !8702 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8704, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i32 1, metadata !8705, metadata !DIExpression()), !dbg !8706
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8707
  ret void, !dbg !8710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8711 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8713, metadata !DIExpression()), !dbg !8715
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8716
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8717
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8718
  %5 = add i32 %4, %3, !dbg !8718
  store i32 %5, i32* @cycle_count, align 4, !dbg !8718
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8719
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8720
  %7 = sub i32 %5, %6, !dbg !8723
  %8 = udiv i32 %7, 8400, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %8, metadata !8714, metadata !DIExpression()), !dbg !8715
  %9 = mul nuw i32 %8, 8400, !dbg !8725
  %10 = add i32 %9, %6, !dbg !8726
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8726
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8727
  tail call void @z_arm_int_exit() #24, !dbg !8728
  ret void, !dbg !8729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8730 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8735
  call void @llvm.dbg.value(metadata i32 %1, metadata !8732, metadata !DIExpression()), !dbg !8736
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8737
  call void @llvm.dbg.value(metadata i32 %2, metadata !8733, metadata !DIExpression()), !dbg !8736
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8738
  call void @llvm.dbg.value(metadata i32 %3, metadata !8734, metadata !DIExpression()), !dbg !8736
  %4 = and i32 %2, 65536, !dbg !8739
  %5 = icmp ne i32 %4, 0, !dbg !8739
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8741
  %8 = load i32, i32* @last_load, align 4, !dbg !8736
  br i1 %7, label %9, label %13, !dbg !8741

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8742
  %11 = add i32 %10, %8, !dbg !8742
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8742
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8744
  br label %13, !dbg !8745

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8746
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8747
  %16 = add i32 %14, %15, !dbg !8748
  ret i32 %16, !dbg !8749
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8754, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i1 %1, metadata !8755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8767
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8768
  br i1 %4, label %5, label %8, !dbg !8768

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8770
  %7 = and i32 %6, -2, !dbg !8770
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8770
  store i32 -16777216, i32* @last_load, align 4, !dbg !8772
  br label %54, !dbg !8773

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8774
  call void @llvm.dbg.value(metadata i32 %9, metadata !8759, metadata !DIExpression()), !dbg !8767
  br i1 %3, label %18, label %10, !dbg !8775

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8775
  call void @llvm.dbg.value(metadata i32 undef, metadata !8754, metadata !DIExpression()), !dbg !8767
  %12 = icmp slt i32 %11, 1, !dbg !8776
  br i1 %12, label %18, label %13, !dbg !8776

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8776
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8776
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8776
  %17 = add nuw nsw i32 %16, 8399, !dbg !8776
  br label %18, !dbg !8776

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8754, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8777, metadata !DIExpression()) #23, !dbg !8784
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8786, !srcloc !8792
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %21, metadata !8789, metadata !DIExpression()) #23, !dbg !8793
  call void @llvm.dbg.value(metadata i32 undef, metadata !8790, metadata !DIExpression()) #23, !dbg !8793
  call void @llvm.dbg.value(metadata i32 %21, metadata !8783, metadata !DIExpression()) #23, !dbg !8784
  call void @llvm.dbg.value(metadata i32 %21, metadata !8760, metadata !DIExpression()), !dbg !8767
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %22, metadata !8765, metadata !DIExpression()), !dbg !8767
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8795
  call void @llvm.dbg.value(metadata i32 %23, metadata !8757, metadata !DIExpression()), !dbg !8767
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8796
  %25 = add i32 %24, %22, !dbg !8796
  store i32 %25, i32* @cycle_count, align 4, !dbg !8796
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8797
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8798
  %27 = sub i32 %25, %26, !dbg !8799
  call void @llvm.dbg.value(metadata i32 %27, metadata !8766, metadata !DIExpression()), !dbg !8767
  %28 = icmp slt i32 %27, 0, !dbg !8800
  br i1 %28, label %38, label %29, !dbg !8802

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8756, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i32 undef, metadata !8756, metadata !DIExpression()), !dbg !8767
  %30 = add nuw i32 %19, %27, !dbg !8803
  %31 = urem i32 %30, 8400, !dbg !8805
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8756, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8767
  %32 = sub nuw nsw i32 %19, %31, !dbg !8806
  call void @llvm.dbg.value(metadata i32 %32, metadata !8756, metadata !DIExpression()), !dbg !8767
  %33 = icmp ugt i32 %32, 1024, !dbg !8807
  br i1 %33, label %34, label %36, !dbg !8807

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8756, metadata !DIExpression()), !dbg !8767
  %35 = icmp ugt i32 %32, 16766400, !dbg !8808
  br i1 %35, label %38, label %36, !dbg !8810

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8811
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8812
  call void @llvm.dbg.value(metadata i32 %40, metadata !8758, metadata !DIExpression()), !dbg !8767
  %41 = add nsw i32 %39, -1, !dbg !8813
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8814
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8815
  %42 = icmp ult i32 %23, %40, !dbg !8816
  br i1 %42, label %43, label %48, !dbg !8818

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8819
  %45 = add i32 %23, %9, !dbg !8821
  %46 = sub i32 %45, %40, !dbg !8822
  %47 = add i32 %46, %44, !dbg !8819
  br label %52, !dbg !8823

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8824
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8826
  %51 = add i32 %49, %50, !dbg !8826
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8827
  store i32 %53, i32* @cycle_count, align 4, !dbg !8827
  call void @llvm.dbg.value(metadata i32 %21, metadata !8828, metadata !DIExpression()) #23, !dbg !8834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8833, metadata !DIExpression()) #23, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %21, metadata !8836, metadata !DIExpression()) #23, !dbg !8839
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8841, !srcloc !8842
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8843
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8844 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8777, metadata !DIExpression()) #23, !dbg !8848
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8850, !srcloc !8792
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8850
  call void @llvm.dbg.value(metadata i32 %2, metadata !8789, metadata !DIExpression()) #23, !dbg !8852
  call void @llvm.dbg.value(metadata i32 undef, metadata !8790, metadata !DIExpression()) #23, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %2, metadata !8783, metadata !DIExpression()) #23, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %2, metadata !8846, metadata !DIExpression()), !dbg !8853
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8854
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8855
  %5 = add i32 %4, %3, !dbg !8856
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8857
  %7 = sub i32 %5, %6, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %7, metadata !8847, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.value(metadata i32 %2, metadata !8828, metadata !DIExpression()) #23, !dbg !8859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8833, metadata !DIExpression()) #23, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %2, metadata !8836, metadata !DIExpression()) #23, !dbg !8861
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8863, !srcloc !8842
  %8 = udiv i32 %7, 8400, !dbg !8864
  ret i32 %8, !dbg !8865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8866 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8777, metadata !DIExpression()) #23, !dbg !8870
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8872, !srcloc !8792
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %2, metadata !8789, metadata !DIExpression()) #23, !dbg !8874
  call void @llvm.dbg.value(metadata i32 undef, metadata !8790, metadata !DIExpression()) #23, !dbg !8874
  call void @llvm.dbg.value(metadata i32 %2, metadata !8783, metadata !DIExpression()) #23, !dbg !8870
  call void @llvm.dbg.value(metadata i32 %2, metadata !8868, metadata !DIExpression()), !dbg !8875
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8876
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8877
  %5 = add i32 %4, %3, !dbg !8878
  call void @llvm.dbg.value(metadata i32 %5, metadata !8869, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %2, metadata !8828, metadata !DIExpression()) #23, !dbg !8879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8833, metadata !DIExpression()) #23, !dbg !8879
  call void @llvm.dbg.value(metadata i32 %2, metadata !8836, metadata !DIExpression()) #23, !dbg !8881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8883, !srcloc !8842
  ret i32 %5, !dbg !8884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !8885 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8886
  %2 = icmp eq i32 %1, -16777216, !dbg !8888
  br i1 %2, label %3, label %6, !dbg !8889

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8890
  %5 = or i32 %4, 1, !dbg !8890
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8890
  br label %6, !dbg !8892

6:                                                ; preds = %3, %0
  ret void, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !8894 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8895
  %2 = and i32 %1, -2, !dbg !8895
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !8897 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8923, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata i8 %1, metadata !8924, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8925, metadata !DIExpression()), !dbg !8926
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8927
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8927
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8926
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8928
  %8 = load i8, i8* %6, align 4, !dbg !8929
  %9 = zext i8 %8 to i32, !dbg !8930
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8930
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8931
  br i1 %11, label %18, label %24, !dbg !8932

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8926
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8928
  %14 = load i8, i8* %6, align 4, !dbg !8929
  %15 = zext i8 %14 to i32, !dbg !8930
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8930
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8931
  br i1 %17, label %18, label %24, !dbg !8932, !llvm.loop !8933

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8935
  %21 = load i8, i8* %20, align 1, !dbg !8935
  %22 = icmp eq i8 %21, %1, !dbg !8938
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8939
  br i1 %22, label %24, label %12, !dbg !8940

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8926
  ret i32 %25, !dbg !8941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8942 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !8953, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i8 %1, metadata !8954, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 %2, metadata !8955, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 0, metadata !8958, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i32 0, metadata !8959, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i8 0, metadata !8960, metadata !DIExpression()), !dbg !8970
  %4 = icmp eq i8 %1, 0, !dbg !8971
  br i1 %4, label %35, label %5, !dbg !8972

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8971
  br label %9, !dbg !8972

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !8960, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.value(metadata i32 %29, metadata !8958, metadata !DIExpression()), !dbg !8969
  %8 = icmp eq i32 %34, %6, !dbg !8971
  br i1 %8, label %35, label %9, !dbg !8972, !llvm.loop !8973

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8960, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.value(metadata i32 %11, metadata !8958, metadata !DIExpression()), !dbg !8969
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !8975
  %13 = load i32, i32* %12, align 4, !dbg !8975
  call void @llvm.dbg.value(metadata i32 %13, metadata !8957, metadata !DIExpression()), !dbg !8969
  %14 = and i32 %13, 31, !dbg !8976
  %15 = icmp ult i32 %14, 16, !dbg !8977
  br i1 %15, label %16, label %20, !dbg !8978

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8979
  %18 = load i32, i32* %17, align 4, !dbg !8979
  %19 = or i32 %18, 32, !dbg !8981
  call void @llvm.dbg.value(metadata i32 %19, metadata !8958, metadata !DIExpression()), !dbg !8969
  br label %28, !dbg !8982

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !8983

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8984
  %23 = load i32, i32* %22, align 4, !dbg !8984
  call void @llvm.dbg.value(metadata i32 %23, metadata !8962, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !8985
  %24 = lshr i32 %23, 7, !dbg !8986
  %25 = and i32 %24, 16, !dbg !8986
  %26 = or i32 %25, %23, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %26, metadata !8958, metadata !DIExpression()), !dbg !8969
  br label %28, !dbg !8987

27:                                               ; preds = %20
  br label %28, !dbg !8988

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !8969
  call void @llvm.dbg.value(metadata i32 %29, metadata !8958, metadata !DIExpression()), !dbg !8969
  %30 = lshr i32 %13, 5, !dbg !8988
  %31 = and i32 %30, 255, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %31, metadata !8956, metadata !DIExpression()), !dbg !8969
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %32, metadata !8959, metadata !DIExpression()), !dbg !8969
  %33 = icmp slt i32 %32, 0, !dbg !8990
  %34 = add nuw nsw i32 %10, 1, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %34, metadata !8960, metadata !DIExpression()), !dbg !8970
  br i1 %33, label %35, label %7, !dbg !8993

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !8994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8999, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32 %1, metadata !9000, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32 %2, metadata !9001, metadata !DIExpression()), !dbg !9003
  %4 = icmp ugt i32 %0, 175, !dbg !9004
  br i1 %4, label %16, label %5, !dbg !9006

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9007
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9008
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9008
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9002, metadata !DIExpression()), !dbg !9003
  %9 = add nsw i32 %6, -8, !dbg !9009
  %10 = icmp ult i32 %9, 3, !dbg !9009
  br i1 %10, label %16, label %11, !dbg !9011

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.63(%struct.device* noundef %8) #25, !dbg !9012
  br i1 %12, label %13, label %16, !dbg !9013

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9014
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9015
  br label %16, !dbg !9016

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9003
  ret i32 %17, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.63(%struct.device* noundef %0) unnamed_addr #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9022, metadata !DIExpression()), !dbg !9023
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9024, !srcloc !9026
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.64(%struct.device* noundef %0) #25, !dbg !9027
  ret i1 %2, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.64(%struct.device* noundef %0) unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9031, metadata !DIExpression()), !dbg !9032
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9033
  ret i1 %2, !dbg !9034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9035 {
  ret void, !dbg !9036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9037 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9039, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 0, metadata !9040, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 2, metadata !9041, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 0, metadata !9042, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 2, metadata !9043, metadata !DIExpression()), !dbg !9044
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9045
  %2 = and i32 %1, 12, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %2, metadata !9039, metadata !DIExpression()), !dbg !9044
  %3 = icmp eq i32 %2, 8, !dbg !9047
  br i1 %3, label %4, label %18, !dbg !9047

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %5, metadata !9042, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9044
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9050
  %7 = and i32 %6, 63, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %7, metadata !9043, metadata !DIExpression()), !dbg !9044
  %8 = udiv i32 16000000, %7, !dbg !9052
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9052
  %10 = lshr i32 %9, 6, !dbg !9052
  %11 = and i32 %10, 511, !dbg !9052
  %12 = mul i32 %11, %8, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %12, metadata !9040, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 %12, metadata !9040, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 %12, metadata !9040, metadata !DIExpression()), !dbg !9044
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9054
  %14 = lshr i32 %13, 15, !dbg !9055
  %15 = and i32 %14, 6, !dbg !9055
  %16 = add nuw nsw i32 %15, 2, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %16, metadata !9041, metadata !DIExpression()), !dbg !9044
  %17 = udiv i32 %12, %16, !dbg !9056
  br label %18, !dbg !9057

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9058
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9059
  %21 = lshr i32 %20, 4, !dbg !9060
  %22 = and i32 %21, 15, !dbg !9060
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9061
  %24 = load i8, i8* %23, align 1, !dbg !9061
  %25 = zext i8 %24 to i32, !dbg !9061
  call void @llvm.dbg.value(metadata i32 %25, metadata !9039, metadata !DIExpression()), !dbg !9044
  %26 = lshr i32 %19, %25, !dbg !9062
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9062
  ret void, !dbg !9063
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9064 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9106, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9107, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9108, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9109, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9110, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9111, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9112, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9113, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9114, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 0, metadata !9115, metadata !DIExpression()), !dbg !9120
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9121
  %4 = load i32, i32* %3, align 4, !dbg !9121
  %5 = and i32 %4, 1, !dbg !9123
  %6 = icmp eq i32 %5, 0, !dbg !9124
  br i1 %6, label %17, label %7, !dbg !9125

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9126
  %9 = and i32 %8, -100663297, !dbg !9126
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9126
  %11 = load i32, i32* %10, align 4, !dbg !9126
  %12 = or i32 %9, %11, !dbg !9126
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9126
  %13 = load i32, i32* %10, align 4, !dbg !9128
  %14 = icmp eq i32 %13, 0, !dbg !9130
  %15 = zext i1 %14 to i32, !dbg !9131
  %16 = load i32, i32* %3, align 4, !dbg !9132
  br label %17, !dbg !9131

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !9132
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %19, metadata !9114, metadata !DIExpression()), !dbg !9120
  %20 = and i32 %18, 2, !dbg !9134
  %21 = icmp eq i32 %20, 0, !dbg !9135
  br i1 %21, label %32, label %22, !dbg !9136

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9137
  %24 = and i32 %23, -402653185, !dbg !9137
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9137
  %26 = load i32, i32* %25, align 4, !dbg !9137
  %27 = or i32 %24, %26, !dbg !9137
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9137
  %28 = load i32, i32* %25, align 4, !dbg !9139
  %29 = icmp eq i32 %28, 0, !dbg !9141
  %30 = select i1 %29, i32 1, i32 %19, !dbg !9142
  %31 = load i32, i32* %3, align 4, !dbg !9143
  br label %32, !dbg !9142

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !9143
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %34, metadata !9114, metadata !DIExpression()), !dbg !9120
  %35 = and i32 %33, 4, !dbg !9145
  %36 = icmp eq i32 %35, 0, !dbg !9146
  br i1 %36, label %49, label %37, !dbg !9147

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9148
  %39 = and i32 %38, -3145729, !dbg !9148
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9148
  %41 = load i32, i32* %40, align 4, !dbg !9148
  %42 = or i32 %39, %41, !dbg !9148
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9148
  %43 = load i32, i32* %40, align 4, !dbg !9150
  %44 = icmp eq i32 %43, 1048576, !dbg !9152
  %45 = select i1 %44, i32 1, i32 %34, !dbg !9153
  call void @llvm.dbg.value(metadata i32 %45, metadata !9114, metadata !DIExpression()), !dbg !9120
  %46 = icmp eq i32 %43, 0, !dbg !9154
  %47 = zext i1 %46 to i32, !dbg !9156
  %48 = load i32, i32* %3, align 4, !dbg !9157
  br label %49, !dbg !9156

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !9157
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !9120
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %52, metadata !9115, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %51, metadata !9114, metadata !DIExpression()), !dbg !9120
  %53 = and i32 %50, 8, !dbg !9159
  %54 = icmp eq i32 %53, 0, !dbg !9160
  br i1 %54, label %67, label %55, !dbg !9161

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9162
  %57 = and i32 %56, -12582913, !dbg !9162
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9162
  %59 = load i32, i32* %58, align 4, !dbg !9162
  %60 = or i32 %57, %59, !dbg !9162
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9162
  %61 = load i32, i32* %58, align 4, !dbg !9164
  %62 = icmp eq i32 %61, 4194304, !dbg !9166
  %63 = select i1 %62, i32 1, i32 %51, !dbg !9167
  call void @llvm.dbg.value(metadata i32 %63, metadata !9114, metadata !DIExpression()), !dbg !9120
  %64 = icmp eq i32 %61, 0, !dbg !9168
  %65 = select i1 %64, i32 1, i32 %52, !dbg !9170
  %66 = load i32, i32* %3, align 4, !dbg !9171
  br label %67, !dbg !9170

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !9171
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !9120
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %70, metadata !9115, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %69, metadata !9114, metadata !DIExpression()), !dbg !9120
  %71 = and i32 %68, 32, !dbg !9172
  %72 = icmp eq i32 %71, 0, !dbg !9173
  br i1 %72, label %131, label %73, !dbg !9174

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !9175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !9175
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9116, metadata !DIExpression()), !dbg !9175
  store volatile i32 0, i32* %2, align 4, !dbg !9175
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9175
  %76 = or i32 %75, 268435456, !dbg !9175
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9175
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9175
  %78 = and i32 %77, 268435456, !dbg !9175
  store volatile i32 %78, i32* %2, align 4, !dbg !9175
  %79 = load volatile i32, i32* %2, align 4, !dbg !9175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !9176
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9177
  %81 = or i32 %80, 256, !dbg !9177
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9177
  %82 = tail call i32 @HAL_GetTick() #24, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %82, metadata !9107, metadata !DIExpression()), !dbg !9120
  br label %83, !dbg !9179

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9180
  %85 = and i32 %84, 256, !dbg !9181
  %86 = icmp eq i32 %85, 0, !dbg !9182
  br i1 %86, label %87, label %91, !dbg !9179

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #24, !dbg !9183
  %89 = sub i32 %88, %82, !dbg !9186
  %90 = icmp ugt i32 %89, 2, !dbg !9187
  br i1 %90, label %439, label %83, !dbg !9188, !llvm.loop !9189

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9191
  %93 = and i32 %92, 768, !dbg !9192
  call void @llvm.dbg.value(metadata i32 %93, metadata !9108, metadata !DIExpression()), !dbg !9120
  %94 = icmp eq i32 %93, 0, !dbg !9193
  br i1 %94, label %116, label %95, !dbg !9195

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9196
  %97 = load i32, i32* %96, align 4, !dbg !9196
  %98 = and i32 %97, 768, !dbg !9197
  %99 = icmp eq i32 %93, %98, !dbg !9198
  br i1 %99, label %116, label %100, !dbg !9199

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9200
  %102 = and i32 %101, -769, !dbg !9202
  call void @llvm.dbg.value(metadata i32 %102, metadata !9108, metadata !DIExpression()), !dbg !9120
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9203
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9204
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9205
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9206
  %104 = and i32 %103, 1, !dbg !9206
  %105 = icmp eq i32 %104, 0, !dbg !9206
  br i1 %105, label %116, label %106, !dbg !9208

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #24, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %107, metadata !9107, metadata !DIExpression()), !dbg !9120
  br label %108, !dbg !9211

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9212
  %110 = and i32 %109, 2, !dbg !9213
  %111 = icmp eq i32 %110, 0, !dbg !9213
  br i1 %111, label %112, label %116, !dbg !9211

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #24, !dbg !9214
  %114 = sub i32 %113, %107, !dbg !9217
  %115 = icmp ugt i32 %114, 5000, !dbg !9218
  br i1 %115, label %439, label %108, !dbg !9219, !llvm.loop !9220

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9222
  %118 = load i32, i32* %117, align 4, !dbg !9222
  %119 = and i32 %118, 768, !dbg !9222
  %120 = icmp eq i32 %119, 768, !dbg !9222
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9222
  %122 = and i32 %121, -2031617, !dbg !9222
  %123 = and i32 %118, 268434687, !dbg !9222
  %124 = select i1 %120, i32 %123, i32 0, !dbg !9222
  %125 = or i32 %122, %124, !dbg !9222
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9222
  %126 = load i32, i32* %117, align 4, !dbg !9222
  %127 = and i32 %126, 4095, !dbg !9222
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9222
  %129 = or i32 %128, %127, !dbg !9222
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9222
  %130 = load i32, i32* %3, align 4, !dbg !9224
  br label %131, !dbg !9226

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !9224
  %133 = and i32 %132, 16, !dbg !9227
  %134 = icmp eq i32 %133, 0, !dbg !9228
  br i1 %134, label %140, label %135, !dbg !9229

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9230
  %137 = load i8, i8* %136, align 4, !dbg !9230
  %138 = zext i8 %137 to i32, !dbg !9230
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !9230
  %139 = load i32, i32* %3, align 4, !dbg !9232
  br label %140, !dbg !9234

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !9232
  %142 = and i32 %141, 128, !dbg !9235
  %143 = icmp eq i32 %142, 0, !dbg !9236
  br i1 %143, label %151, label %144, !dbg !9237

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9238
  %146 = and i32 %145, -12582913, !dbg !9238
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9238
  %148 = load i32, i32* %147, align 4, !dbg !9238
  %149 = or i32 %146, %148, !dbg !9238
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9238
  %150 = load i32, i32* %3, align 4, !dbg !9240
  br label %151, !dbg !9242

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !9240
  %153 = and i32 %152, 64, !dbg !9243
  %154 = icmp eq i32 %153, 0, !dbg !9244
  br i1 %154, label %162, label %155, !dbg !9245

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9246
  %157 = and i32 %156, -67108865, !dbg !9246
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9246
  %159 = load i32, i32* %158, align 4, !dbg !9246
  %160 = or i32 %157, %159, !dbg !9246
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9246
  %161 = load i32, i32* %3, align 4, !dbg !9248
  br label %162, !dbg !9250

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !9248
  %164 = and i32 %163, 256, !dbg !9251
  %165 = icmp eq i32 %164, 0, !dbg !9252
  br i1 %165, label %176, label %166, !dbg !9253

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9254
  %168 = and i32 %167, -134217729, !dbg !9254
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9254
  %170 = load i32, i32* %169, align 4, !dbg !9254
  %171 = or i32 %168, %170, !dbg !9254
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9254
  %172 = load i32, i32* %169, align 4, !dbg !9256
  %173 = icmp eq i32 %172, 134217728, !dbg !9258
  %174 = select i1 %173, i32 1, i32 %70, !dbg !9259
  %175 = load i32, i32* %3, align 4, !dbg !9260
  br label %176, !dbg !9259

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !9260
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !9120
  call void @llvm.dbg.value(metadata i32 %178, metadata !9115, metadata !DIExpression()), !dbg !9120
  %179 = and i32 %177, 512, !dbg !9262
  %180 = icmp eq i32 %179, 0, !dbg !9263
  br i1 %180, label %188, label %181, !dbg !9264

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9265
  %183 = and i32 %182, -268435457, !dbg !9265
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9265
  %185 = load i32, i32* %184, align 4, !dbg !9265
  %186 = or i32 %183, %185, !dbg !9265
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9265
  %187 = load i32, i32* %3, align 4, !dbg !9267
  br label %188, !dbg !9269

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !9267
  %190 = and i32 %189, 1024, !dbg !9270
  %191 = icmp eq i32 %190, 0, !dbg !9271
  br i1 %191, label %204, label %192, !dbg !9272

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9273
  %194 = and i32 %193, -536870913, !dbg !9273
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9273
  %196 = load i32, i32* %195, align 4, !dbg !9273
  %197 = or i32 %194, %196, !dbg !9273
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9273
  %198 = load i32, i32* %195, align 4, !dbg !9275
  %199 = icmp eq i32 %198, 536870912, !dbg !9277
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %69, metadata !9114, metadata !DIExpression()), !dbg !9120
  br i1 %201, label %209, label %202, !dbg !9278

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !9279
  br label %206, !dbg !9278

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !9114, metadata !DIExpression()), !dbg !9120
  %205 = icmp eq i32 %69, 1, !dbg !9281
  br i1 %205, label %209, label %206, !dbg !9282

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !9279
  %208 = icmp eq i32 %207, 2048, !dbg !9283
  br i1 %208, label %209, label %356, !dbg !9284

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9285
  %210 = tail call i32 @HAL_GetTick() #24, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %210, metadata !9107, metadata !DIExpression()), !dbg !9120
  br label %211, !dbg !9288

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9289
  %213 = and i32 %212, 134217728, !dbg !9289
  %214 = icmp eq i32 %213, 0, !dbg !9289
  br i1 %214, label %219, label %215, !dbg !9288

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !9290
  %217 = sub i32 %216, %210, !dbg !9293
  %218 = icmp ugt i32 %217, 2, !dbg !9294
  br i1 %218, label %439, label %211, !dbg !9295, !llvm.loop !9296

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !9298
  %221 = and i32 %220, 1, !dbg !9300
  %222 = icmp eq i32 %221, 0, !dbg !9301
  br i1 %222, label %227, label %223, !dbg !9302

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9303
  %225 = load i32, i32* %224, align 4, !dbg !9303
  %226 = icmp eq i32 %225, 0, !dbg !9304
  br i1 %226, label %234, label %227, !dbg !9305

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !9306
  %229 = icmp eq i32 %228, 0, !dbg !9307
  br i1 %229, label %252, label %230, !dbg !9308

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9309
  %232 = load i32, i32* %231, align 4, !dbg !9309
  %233 = icmp eq i32 %232, 0, !dbg !9310
  br i1 %233, label %234, label %252, !dbg !9311

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9312
  %236 = and i32 %235, 196608, !dbg !9314
  call void @llvm.dbg.value(metadata i32 %236, metadata !9109, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9120
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9315
  %238 = and i32 %237, 251658240, !dbg !9316
  call void @llvm.dbg.value(metadata i32 %238, metadata !9110, metadata !DIExpression()), !dbg !9120
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9317
  %240 = load i32, i32* %239, align 4, !dbg !9317
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9317
  %242 = load i32, i32* %241, align 4, !dbg !9317
  %243 = shl i32 %242, 6, !dbg !9317
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9317
  %245 = load i32, i32* %244, align 4, !dbg !9317
  %246 = shl i32 %245, 28, !dbg !9317
  %247 = or i32 %240, %236, !dbg !9317
  %248 = or i32 %247, %238, !dbg !9317
  %249 = or i32 %248, %243, !dbg !9317
  %250 = or i32 %249, %246, !dbg !9317
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9317
  %251 = load i32, i32* %3, align 4, !dbg !9318
  br label %252, !dbg !9320

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !9318
  %254 = and i32 %253, 4, !dbg !9321
  %255 = icmp eq i32 %254, 0, !dbg !9322
  br i1 %255, label %260, label %256, !dbg !9323

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9324
  %258 = load i32, i32* %257, align 4, !dbg !9324
  %259 = icmp eq i32 %258, 1048576, !dbg !9325
  br i1 %259, label %267, label %260, !dbg !9326

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !9327
  %262 = icmp eq i32 %261, 0, !dbg !9328
  br i1 %262, label %291, label %263, !dbg !9329

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9330
  %265 = load i32, i32* %264, align 4, !dbg !9330
  %266 = icmp eq i32 %265, 4194304, !dbg !9331
  br i1 %266, label %267, label %291, !dbg !9332

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9333
  %269 = and i32 %268, 196608, !dbg !9335
  call void @llvm.dbg.value(metadata i32 %269, metadata !9109, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9120
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9336
  %271 = and i32 %270, 1879048192, !dbg !9337
  call void @llvm.dbg.value(metadata i32 %271, metadata !9111, metadata !DIExpression()), !dbg !9120
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9338
  %273 = load i32, i32* %272, align 4, !dbg !9338
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9338
  %275 = load i32, i32* %274, align 4, !dbg !9338
  %276 = shl i32 %275, 6, !dbg !9338
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9338
  %278 = load i32, i32* %277, align 4, !dbg !9338
  %279 = shl i32 %278, 24, !dbg !9338
  %280 = or i32 %273, %269, !dbg !9338
  %281 = or i32 %280, %271, !dbg !9338
  %282 = or i32 %281, %276, !dbg !9338
  %283 = or i32 %282, %279, !dbg !9338
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9338
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9339
  %285 = and i32 %284, -32, !dbg !9339
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9339
  %287 = load i32, i32* %286, align 4, !dbg !9339
  %288 = add i32 %287, -1, !dbg !9339
  %289 = or i32 %288, %285, !dbg !9339
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9339
  %290 = load i32, i32* %3, align 4, !dbg !9340
  br label %291, !dbg !9342

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !9340
  %293 = and i32 %292, 1024, !dbg !9343
  %294 = icmp eq i32 %293, 0, !dbg !9344
  br i1 %294, label %321, label %295, !dbg !9345

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9346
  %297 = load i32, i32* %296, align 4, !dbg !9346
  %298 = icmp eq i32 %297, 536870912, !dbg !9347
  br i1 %298, label %299, label %321, !dbg !9348

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9349
  call void @llvm.dbg.value(metadata i32 %300, metadata !9110, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9120
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9351
  %302 = and i32 %301, 1879048192, !dbg !9352
  call void @llvm.dbg.value(metadata i32 %302, metadata !9111, metadata !DIExpression()), !dbg !9120
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9353
  %304 = load i32, i32* %303, align 4, !dbg !9353
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9353
  %306 = load i32, i32* %305, align 4, !dbg !9353
  %307 = shl i32 %306, 6, !dbg !9353
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9353
  %309 = load i32, i32* %308, align 4, !dbg !9353
  %310 = shl i32 %309, 15, !dbg !9353
  %311 = add i32 %310, -65536, !dbg !9353
  %312 = and i32 %311, -65536, !dbg !9353
  %313 = shl i32 %300, 9, !dbg !9353
  %314 = and i32 %313, 100663296, !dbg !9353
  %315 = add nuw nsw i32 %314, 33554432, !dbg !9353
  %316 = or i32 %302, %304, !dbg !9353
  %317 = or i32 %316, %315, !dbg !9353
  %318 = or i32 %317, %307, !dbg !9353
  %319 = or i32 %318, %312, !dbg !9353
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9353
  %320 = load i32, i32* %3, align 4, !dbg !9354
  br label %321, !dbg !9356

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !9354
  %323 = and i32 %322, 2048, !dbg !9357
  %324 = icmp eq i32 %323, 0, !dbg !9358
  br i1 %324, label %346, label %325, !dbg !9359

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9360
  %327 = load i32, i32* %326, align 4, !dbg !9360
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9360
  %329 = load i32, i32* %328, align 4, !dbg !9360
  %330 = shl i32 %329, 6, !dbg !9360
  %331 = or i32 %330, %327, !dbg !9360
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9360
  %333 = load i32, i32* %332, align 4, !dbg !9360
  %334 = shl i32 %333, 15, !dbg !9360
  %335 = add i32 %334, -65536, !dbg !9360
  %336 = and i32 %335, -65536, !dbg !9360
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9360
  %338 = load i32, i32* %337, align 4, !dbg !9360
  %339 = shl i32 %338, 24, !dbg !9360
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9360
  %341 = load i32, i32* %340, align 4, !dbg !9360
  %342 = shl i32 %341, 28, !dbg !9360
  %343 = or i32 %331, %339, !dbg !9360
  %344 = or i32 %343, %336, !dbg !9360
  %345 = or i32 %344, %342, !dbg !9360
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9360
  br label %346, !dbg !9362

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9363
  %347 = tail call i32 @HAL_GetTick() #24, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %347, metadata !9107, metadata !DIExpression()), !dbg !9120
  br label %348, !dbg !9365

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9366
  %350 = and i32 %349, 134217728, !dbg !9367
  %351 = icmp eq i32 %350, 0, !dbg !9367
  br i1 %351, label %352, label %356, !dbg !9365

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #24, !dbg !9368
  %354 = sub i32 %353, %347, !dbg !9371
  %355 = icmp ugt i32 %354, 2, !dbg !9372
  br i1 %355, label %439, label %348, !dbg !9373, !llvm.loop !9374

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !9376
  br i1 %357, label %358, label %439, !dbg !9378

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9379
  %359 = tail call i32 @HAL_GetTick() #24, !dbg !9381
  call void @llvm.dbg.value(metadata i32 %359, metadata !9107, metadata !DIExpression()), !dbg !9120
  br label %360, !dbg !9382

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9383
  %362 = and i32 %361, 536870912, !dbg !9383
  %363 = icmp eq i32 %362, 0, !dbg !9383
  br i1 %363, label %368, label %364, !dbg !9382

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #24, !dbg !9384
  %366 = sub i32 %365, %359, !dbg !9387
  %367 = icmp ugt i32 %366, 2, !dbg !9388
  br i1 %367, label %439, label %360, !dbg !9389, !llvm.loop !9390

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !9392
  %370 = and i32 %369, 4, !dbg !9394
  %371 = icmp eq i32 %370, 0, !dbg !9395
  br i1 %371, label %376, label %372, !dbg !9396

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9397
  %374 = load i32, i32* %373, align 4, !dbg !9397
  %375 = icmp eq i32 %374, 0, !dbg !9398
  br i1 %375, label %383, label %376, !dbg !9399

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !9400
  %378 = icmp eq i32 %377, 0, !dbg !9401
  br i1 %378, label %405, label %379, !dbg !9402

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9403
  %381 = load i32, i32* %380, align 4, !dbg !9403
  %382 = icmp eq i32 %381, 0, !dbg !9404
  br i1 %382, label %383, label %405, !dbg !9405

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9406
  %385 = and i32 %384, 196608, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %385, metadata !9112, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9120
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9409
  %387 = load i32, i32* %386, align 4, !dbg !9409
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9409
  %389 = load i32, i32* %388, align 4, !dbg !9409
  %390 = shl i32 %389, 6, !dbg !9409
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9409
  %392 = load i32, i32* %391, align 4, !dbg !9409
  %393 = shl i32 %392, 24, !dbg !9409
  %394 = or i32 %385, %387, !dbg !9409
  %395 = or i32 %394, %390, !dbg !9409
  %396 = or i32 %395, %393, !dbg !9409
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9409
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9410
  %398 = and i32 %397, -7937, !dbg !9410
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9410
  %400 = load i32, i32* %399, align 4, !dbg !9410
  %401 = shl i32 %400, 8, !dbg !9410
  %402 = add i32 %401, -256, !dbg !9410
  %403 = or i32 %402, %398, !dbg !9410
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9410
  %404 = load i32, i32* %3, align 4, !dbg !9411
  br label %405, !dbg !9413

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !9411
  %407 = and i32 %406, 256, !dbg !9414
  %408 = icmp eq i32 %407, 0, !dbg !9415
  br i1 %408, label %429, label %409, !dbg !9416

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9417
  %411 = load i32, i32* %410, align 4, !dbg !9417
  %412 = icmp eq i32 %411, 134217728, !dbg !9418
  br i1 %412, label %413, label %429, !dbg !9419

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9420
  %415 = and i32 %414, 251658240, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %415, metadata !9113, metadata !DIExpression()), !dbg !9120
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9423
  %417 = load i32, i32* %416, align 4, !dbg !9423
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9423
  %419 = load i32, i32* %418, align 4, !dbg !9423
  %420 = shl i32 %419, 6, !dbg !9423
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9423
  %422 = load i32, i32* %421, align 4, !dbg !9423
  %423 = shl i32 %422, 15, !dbg !9423
  %424 = add i32 %423, -65536, !dbg !9423
  %425 = and i32 %424, -65536, !dbg !9423
  %426 = or i32 %415, %417, !dbg !9423
  %427 = or i32 %426, %420, !dbg !9423
  %428 = or i32 %427, %425, !dbg !9423
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9423
  br label %429, !dbg !9424

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9425
  %430 = tail call i32 @HAL_GetTick() #24, !dbg !9426
  call void @llvm.dbg.value(metadata i32 %430, metadata !9107, metadata !DIExpression()), !dbg !9120
  br label %431, !dbg !9427

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9428
  %433 = and i32 %432, 536870912, !dbg !9429
  %434 = icmp eq i32 %433, 0, !dbg !9429
  br i1 %434, label %435, label %439, !dbg !9427

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #24, !dbg !9430
  %437 = sub i32 %436, %430, !dbg !9433
  %438 = icmp ugt i32 %437, 2, !dbg !9434
  br i1 %438, label %439, label %431, !dbg !9435, !llvm.loop !9436

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !9120
  ret i32 %440, !dbg !9438
}

; Function Attrs: optsize
declare !dbg !9439 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #14 !dbg !9441 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9445, metadata !DIExpression()), !dbg !9447
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9448
  store i32 2047, i32* %2, align 4, !dbg !9449
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9450
  %4 = and i32 %3, 63, !dbg !9451
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9452
  store i32 %4, i32* %5, align 4, !dbg !9453
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9454
  %7 = lshr i32 %6, 6, !dbg !9455
  %8 = and i32 %7, 511, !dbg !9455
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9456
  store i32 %8, i32* %9, align 4, !dbg !9457
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9458
  %11 = lshr i32 %10, 15, !dbg !9459
  %12 = and i32 %11, 6, !dbg !9459
  %13 = add nuw nsw i32 %12, 2, !dbg !9459
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9460
  store i32 %13, i32* %14, align 4, !dbg !9461
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9462
  %16 = lshr i32 %15, 24, !dbg !9463
  %17 = and i32 %16, 15, !dbg !9463
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9464
  store i32 %17, i32* %18, align 4, !dbg !9465
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9466
  %20 = lshr i32 %19, 28, !dbg !9467
  %21 = and i32 %20, 7, !dbg !9467
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9468
  store i32 %21, i32* %22, align 4, !dbg !9469
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9470
  %24 = and i32 %23, 63, !dbg !9471
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9472
  store i32 %24, i32* %25, align 4, !dbg !9473
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9474
  %27 = lshr i32 %26, 6, !dbg !9475
  %28 = and i32 %27, 511, !dbg !9475
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9476
  store i32 %28, i32* %29, align 4, !dbg !9477
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9478
  %31 = lshr i32 %30, 15, !dbg !9479
  %32 = and i32 %31, 6, !dbg !9479
  %33 = add nuw nsw i32 %32, 2, !dbg !9479
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9480
  store i32 %33, i32* %34, align 4, !dbg !9481
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9482
  %36 = lshr i32 %35, 24, !dbg !9483
  %37 = and i32 %36, 15, !dbg !9483
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9484
  store i32 %37, i32* %38, align 4, !dbg !9485
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9486
  %40 = and i32 %39, 31, !dbg !9487
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9488
  store i32 %40, i32* %41, align 4, !dbg !9489
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9490
  %43 = lshr i32 %42, 8, !dbg !9491
  %44 = and i32 %43, 31, !dbg !9491
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9492
  store i32 %44, i32* %45, align 4, !dbg !9493
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9494
  %47 = and i32 %46, 3145728, !dbg !9494
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9495
  store i32 %47, i32* %48, align 4, !dbg !9496
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9497
  %50 = and i32 %49, 12582912, !dbg !9497
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9498
  store i32 %50, i32* %51, align 4, !dbg !9499
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9500
  %53 = and i32 %52, 100663296, !dbg !9500
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9501
  store i32 %53, i32* %54, align 4, !dbg !9502
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9503
  %56 = and i32 %55, 402653184, !dbg !9503
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9504
  store i32 %56, i32* %57, align 4, !dbg !9505
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9506
  %59 = and i32 %58, 2031616, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %59, metadata !9446, metadata !DIExpression()), !dbg !9447
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9508
  %61 = and i32 %60, 768, !dbg !9509
  %62 = or i32 %61, %59, !dbg !9510
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9511
  store i32 %62, i32* %63, align 4, !dbg !9512
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9513
  %65 = and i32 %64, 67108864, !dbg !9513
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9514
  store i32 %65, i32* %66, align 4, !dbg !9515
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9516
  %68 = and i32 %67, 12582912, !dbg !9516
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9517
  store i32 %68, i32* %69, align 4, !dbg !9518
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9519
  %71 = and i32 %70, 134217728, !dbg !9519
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9520
  store i32 %71, i32* %72, align 4, !dbg !9521
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9522
  %74 = and i32 %73, 268435456, !dbg !9522
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9523
  store i32 %74, i32* %75, align 4, !dbg !9524
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9525
  %77 = and i32 %76, 536870912, !dbg !9525
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9526
  store i32 %77, i32* %78, align 4, !dbg !9527
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9528
  %80 = lshr i32 %79, 24, !dbg !9530
  %81 = trunc i32 %80 to i8, !dbg !9530
  %82 = and i8 %81, 1, !dbg !9530
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9531
  store i8 %82, i8* %83, align 4, !dbg !9533
  ret void, !dbg !9534
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #14 !dbg !9535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9537, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 0, metadata !9538, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 0, metadata !9539, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 0, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 0, metadata !9541, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 0, metadata !9542, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 0, metadata !9543, metadata !DIExpression()), !dbg !9544
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !9545

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9546
  call void @llvm.dbg.value(metadata i32 %3, metadata !9541, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 %3, metadata !9541, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !9544
  %4 = lshr i32 %3, 20, !dbg !9549
  %5 = and i32 %4, 15, !dbg !9549
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !9549

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9550
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9554
  %9 = and i32 %8, 63, !dbg !9554
  %10 = udiv i32 16000000, %9, !dbg !9554
  call void @llvm.dbg.value(metadata i32 %10, metadata !9540, metadata !DIExpression()), !dbg !9544
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9555
  %12 = lshr i32 %11, 24, !dbg !9556
  %13 = and i32 %12, 15, !dbg !9556
  call void @llvm.dbg.value(metadata i32 %13, metadata !9538, metadata !DIExpression()), !dbg !9544
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9557
  %15 = lshr i32 %14, 6, !dbg !9558
  %16 = and i32 %15, 511, !dbg !9558
  %17 = mul i32 %16, %10, !dbg !9559
  %18 = udiv i32 %17, %13, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %18, metadata !9539, metadata !DIExpression()), !dbg !9544
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9561
  %20 = lshr i32 %19, 8, !dbg !9562
  %21 = and i32 %20, 31, !dbg !9562
  %22 = add nuw nsw i32 %21, 1, !dbg !9563
  call void @llvm.dbg.value(metadata i32 %22, metadata !9538, metadata !DIExpression()), !dbg !9544
  %23 = udiv i32 %18, %22, !dbg !9564
  call void @llvm.dbg.value(metadata i32 %23, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9565

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9566
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9569
  %27 = and i32 %26, 63, !dbg !9569
  %28 = udiv i32 16000000, %27, !dbg !9569
  call void @llvm.dbg.value(metadata i32 %28, metadata !9540, metadata !DIExpression()), !dbg !9544
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9570
  %30 = lshr i32 %29, 24, !dbg !9571
  %31 = and i32 %30, 15, !dbg !9571
  call void @llvm.dbg.value(metadata i32 %31, metadata !9538, metadata !DIExpression()), !dbg !9544
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9572
  %33 = lshr i32 %32, 6, !dbg !9573
  %34 = and i32 %33, 511, !dbg !9573
  %35 = mul i32 %34, %28, !dbg !9574
  %36 = udiv i32 %35, %31, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %36, metadata !9539, metadata !DIExpression()), !dbg !9544
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9576
  %38 = and i32 %37, 31, !dbg !9577
  %39 = add nuw nsw i32 %38, 1, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %39, metadata !9538, metadata !DIExpression()), !dbg !9544
  %40 = udiv i32 %36, %39, !dbg !9579
  call void @llvm.dbg.value(metadata i32 %40, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9580

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9581
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9584
  %44 = and i32 %43, 63, !dbg !9584
  %45 = udiv i32 16000000, %44, !dbg !9584
  call void @llvm.dbg.value(metadata i32 %45, metadata !9540, metadata !DIExpression()), !dbg !9544
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9585
  %47 = lshr i32 %46, 28, !dbg !9586
  %48 = and i32 %47, 7, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %48, metadata !9538, metadata !DIExpression()), !dbg !9544
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9587
  %50 = lshr i32 %49, 6, !dbg !9588
  %51 = and i32 %50, 511, !dbg !9588
  %52 = mul i32 %51, %45, !dbg !9589
  %53 = udiv i32 %52, %48, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %53, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9591

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9592

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9594
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9539, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %58, metadata !9542, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !9544
  %59 = lshr i32 %58, 25, !dbg !9599
  %60 = and i32 %59, 3, !dbg !9599
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !9599

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9600
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9604
  %64 = and i32 %63, 63, !dbg !9604
  %65 = udiv i32 16000000, %64, !dbg !9604
  call void @llvm.dbg.value(metadata i32 %65, metadata !9540, metadata !DIExpression()), !dbg !9544
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9605
  %67 = lshr i32 %66, 6, !dbg !9606
  %68 = and i32 %67, 511, !dbg !9606
  %69 = mul i32 %68, %65, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %69, metadata !9543, metadata !DIExpression()), !dbg !9544
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9608
  %71 = lshr i32 %70, 28, !dbg !9609
  %72 = and i32 %71, 7, !dbg !9609
  %73 = udiv i32 %69, %72, !dbg !9610
  call void @llvm.dbg.value(metadata i32 %73, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9611

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9612
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9615
  %77 = and i32 %76, 63, !dbg !9615
  %78 = udiv i32 16000000, %77, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %78, metadata !9540, metadata !DIExpression()), !dbg !9544
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9616
  %80 = lshr i32 %79, 6, !dbg !9617
  %81 = and i32 %80, 511, !dbg !9617
  %82 = mul i32 %81, %78, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %82, metadata !9543, metadata !DIExpression()), !dbg !9544
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9619
  %84 = lshr i32 %83, 28, !dbg !9620
  %85 = and i32 %84, 7, !dbg !9620
  %86 = udiv i32 %82, %85, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %86, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9622

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9623
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9539, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %91, metadata !9542, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !9544
  %92 = lshr i32 %91, 27, !dbg !9628
  %93 = and i32 %92, 3, !dbg !9628
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !9628

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9629
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9633
  %97 = and i32 %96, 63, !dbg !9633
  %98 = udiv i32 16000000, %97, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %98, metadata !9540, metadata !DIExpression()), !dbg !9544
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9634
  %100 = lshr i32 %99, 6, !dbg !9635
  %101 = and i32 %100, 511, !dbg !9635
  %102 = mul i32 %101, %98, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %102, metadata !9543, metadata !DIExpression()), !dbg !9544
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9637
  %104 = lshr i32 %103, 28, !dbg !9638
  %105 = and i32 %104, 7, !dbg !9638
  %106 = udiv i32 %102, %105, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %106, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9640

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9641
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 undef, metadata !9540, metadata !DIExpression()), !dbg !9544
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9644
  %110 = and i32 %109, 63, !dbg !9644
  %111 = udiv i32 16000000, %110, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %111, metadata !9540, metadata !DIExpression()), !dbg !9544
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9645
  %113 = lshr i32 %112, 6, !dbg !9646
  %114 = and i32 %113, 511, !dbg !9646
  %115 = mul i32 %114, %111, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %115, metadata !9543, metadata !DIExpression()), !dbg !9544
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9648
  %117 = lshr i32 %116, 28, !dbg !9649
  %118 = and i32 %117, 7, !dbg !9649
  %119 = udiv i32 %115, %118, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %119, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123, !dbg !9651

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9652
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9539, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9539, metadata !DIExpression()), !dbg !9544
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !9544
  call void @llvm.dbg.value(metadata i32 %124, metadata !9539, metadata !DIExpression()), !dbg !9544
  ret i32 %124, !dbg !9655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !9656 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  %2 = icmp eq i8 %0, 1, !dbg !9662
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9664
  %4 = and i32 %3, -9, !dbg !9665
  %5 = select i1 %2, i32 8, i32 0, !dbg !9665
  %6 = or i32 %4, %5, !dbg !9665
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9664
  ret void, !dbg !9666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9667 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !9672, metadata !DIExpression()), !dbg !9674
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9675
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %2, metadata !9673, metadata !DIExpression()), !dbg !9674
  br label %3, !dbg !9677

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9678
  %5 = and i32 %4, 134217728, !dbg !9678
  %6 = icmp eq i32 %5, 0, !dbg !9678
  br i1 %6, label %11, label %7, !dbg !9677

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !9679
  %9 = sub i32 %8, %2, !dbg !9682
  %10 = icmp ugt i32 %9, 2, !dbg !9683
  br i1 %10, label %41, label %3, !dbg !9684, !llvm.loop !9685

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !9687
  %13 = load i32, i32* %12, align 4, !dbg !9687
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !9687
  %15 = load i32, i32* %14, align 4, !dbg !9687
  %16 = shl i32 %15, 6, !dbg !9687
  %17 = or i32 %16, %13, !dbg !9687
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !9687
  %19 = load i32, i32* %18, align 4, !dbg !9687
  %20 = shl i32 %19, 15, !dbg !9687
  %21 = add i32 %20, -65536, !dbg !9687
  %22 = and i32 %21, -65536, !dbg !9687
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !9687
  %24 = load i32, i32* %23, align 4, !dbg !9687
  %25 = shl i32 %24, 24, !dbg !9687
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !9687
  %27 = load i32, i32* %26, align 4, !dbg !9687
  %28 = shl i32 %27, 28, !dbg !9687
  %29 = or i32 %17, %25, !dbg !9687
  %30 = or i32 %29, %22, !dbg !9687
  %31 = or i32 %30, %28, !dbg !9687
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9687
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9688
  %32 = tail call i32 @HAL_GetTick() #24, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %32, metadata !9673, metadata !DIExpression()), !dbg !9674
  br label %33, !dbg !9690

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9691
  %35 = and i32 %34, 134217728, !dbg !9692
  %36 = icmp eq i32 %35, 0, !dbg !9692
  br i1 %36, label %37, label %41, !dbg !9690

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #24, !dbg !9693
  %39 = sub i32 %38, %32, !dbg !9696
  %40 = icmp ugt i32 %39, 2, !dbg !9697
  br i1 %40, label %41, label %33, !dbg !9698, !llvm.loop !9699

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !9674
  ret i32 %42, !dbg !9701
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !9702 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9707
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %1, metadata !9706, metadata !DIExpression()), !dbg !9709
  br label %2, !dbg !9710

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9711
  %4 = and i32 %3, 134217728, !dbg !9711
  %5 = icmp eq i32 %4, 0, !dbg !9712
  br i1 %5, label %10, label %6, !dbg !9710

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !9713
  %8 = sub i32 %7, %1, !dbg !9716
  %9 = icmp ugt i32 %8, 2, !dbg !9717
  br i1 %9, label %10, label %2, !dbg !9718, !llvm.loop !9719

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9709
  ret i32 %11, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !9727, metadata !DIExpression()), !dbg !9729
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9730
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %2, metadata !9728, metadata !DIExpression()), !dbg !9729
  br label %3, !dbg !9732

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9733
  %5 = and i32 %4, 536870912, !dbg !9733
  %6 = icmp eq i32 %5, 0, !dbg !9733
  br i1 %6, label %11, label %7, !dbg !9732

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !9734
  %9 = sub i32 %8, %2, !dbg !9737
  %10 = icmp ugt i32 %9, 2, !dbg !9738
  br i1 %10, label %37, label %3, !dbg !9739, !llvm.loop !9740

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !9742
  %13 = load i32, i32* %12, align 4, !dbg !9742
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !9742
  %15 = load i32, i32* %14, align 4, !dbg !9742
  %16 = shl i32 %15, 6, !dbg !9742
  %17 = or i32 %16, %13, !dbg !9742
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !9742
  %19 = load i32, i32* %18, align 4, !dbg !9742
  %20 = shl i32 %19, 15, !dbg !9742
  %21 = add i32 %20, -65536, !dbg !9742
  %22 = and i32 %21, -65536, !dbg !9742
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !9742
  %24 = load i32, i32* %23, align 4, !dbg !9742
  %25 = shl i32 %24, 24, !dbg !9742
  %26 = or i32 %17, %25, !dbg !9742
  %27 = or i32 %26, %22, !dbg !9742
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9742
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9743
  %28 = tail call i32 @HAL_GetTick() #24, !dbg !9744
  call void @llvm.dbg.value(metadata i32 %28, metadata !9728, metadata !DIExpression()), !dbg !9729
  br label %29, !dbg !9745

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9746
  %31 = and i32 %30, 536870912, !dbg !9747
  %32 = icmp eq i32 %31, 0, !dbg !9747
  br i1 %32, label %33, label %37, !dbg !9745

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #24, !dbg !9748
  %35 = sub i32 %34, %28, !dbg !9751
  %36 = icmp ugt i32 %35, 2, !dbg !9752
  br i1 %36, label %37, label %29, !dbg !9753, !llvm.loop !9754

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !9729
  ret i32 %38, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !9757 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9760
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %1, metadata !9759, metadata !DIExpression()), !dbg !9762
  br label %2, !dbg !9763

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9764
  %4 = and i32 %3, 536870912, !dbg !9764
  %5 = icmp eq i32 %4, 0, !dbg !9764
  br i1 %5, label %10, label %6, !dbg !9763

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !9765
  %8 = sub i32 %7, %1, !dbg !9768
  %9 = icmp ugt i32 %8, 2, !dbg !9769
  br i1 %9, label %10, label %2, !dbg !9770, !llvm.loop !9771

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9762
  ret i32 %11, !dbg !9773
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9776, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 0, metadata !9777, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 0, metadata !9778, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 0, metadata !9779, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 0, metadata !9780, metadata !DIExpression()), !dbg !9781
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9782
  %2 = lshr i32 %1, 2, !dbg !9783
  %3 = and i32 %2, 3, !dbg !9783
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !9783

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9784
  %6 = and i32 %5, 63, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %6, metadata !9776, metadata !DIExpression()), !dbg !9781
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9788
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9790
  %9 = lshr i32 %8, 6, !dbg !9790
  %10 = and i32 %9, 511, !dbg !9790
  %11 = zext i32 %10 to i64, !dbg !9790
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !9790
  %13 = zext i32 %6 to i64, !dbg !9790
  %14 = udiv i64 %12, %13, !dbg !9790
  %15 = trunc i64 %14 to i32, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %15, metadata !9777, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 %15, metadata !9777, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 %15, metadata !9777, metadata !DIExpression()), !dbg !9781
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9791
  %17 = lshr i32 %16, 15, !dbg !9792
  %18 = and i32 %17, 6, !dbg !9792
  %19 = add nuw nsw i32 %18, 2, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %19, metadata !9778, metadata !DIExpression()), !dbg !9781
  %20 = udiv i32 %15, %19, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %20, metadata !9780, metadata !DIExpression()), !dbg !9781
  br label %38, !dbg !9794

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9795
  %23 = and i32 %22, 63, !dbg !9797
  call void @llvm.dbg.value(metadata i32 %23, metadata !9776, metadata !DIExpression()), !dbg !9781
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9798
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9800
  %26 = lshr i32 %25, 6, !dbg !9800
  %27 = and i32 %26, 511, !dbg !9800
  %28 = zext i32 %27 to i64, !dbg !9800
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !9800
  %30 = zext i32 %23 to i64, !dbg !9800
  %31 = udiv i64 %29, %30, !dbg !9800
  %32 = trunc i64 %31 to i32, !dbg !9800
  call void @llvm.dbg.value(metadata i32 %32, metadata !9777, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 %32, metadata !9777, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 %32, metadata !9777, metadata !DIExpression()), !dbg !9781
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9801
  %34 = lshr i32 %33, 28, !dbg !9802
  %35 = and i32 %34, 7, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %35, metadata !9779, metadata !DIExpression()), !dbg !9781
  %36 = udiv i32 %32, %35, !dbg !9803
  call void @llvm.dbg.value(metadata i32 %36, metadata !9780, metadata !DIExpression()), !dbg !9781
  br label %38, !dbg !9804

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !9805
  call void @llvm.dbg.value(metadata i32 %39, metadata !9780, metadata !DIExpression()), !dbg !9781
  ret i32 %39, !dbg !9806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9807 {
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !9810
  call void @llvm.dbg.value(metadata i32 %1, metadata !9809, metadata !DIExpression()), !dbg !9811
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9812
  %3 = or i32 %2, 1, !dbg !9812
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9812
  br label %4, !dbg !9813

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9814
  %6 = and i32 %5, 2, !dbg !9814
  %7 = icmp eq i32 %6, 0, !dbg !9815
  br i1 %7, label %8, label %12, !dbg !9813

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #24, !dbg !9816
  %10 = sub i32 %9, %1, !dbg !9819
  %11 = icmp ugt i32 %10, 2, !dbg !9820
  br i1 %11, label %89, label %4, !dbg !9821, !llvm.loop !9822

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9824
  %14 = or i32 %13, 128, !dbg !9824
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9824
  %15 = tail call i32 @HAL_GetTick() #24, !dbg !9825
  call void @llvm.dbg.value(metadata i32 %15, metadata !9809, metadata !DIExpression()), !dbg !9811
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9826
  br label %16, !dbg !9827

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9828
  %18 = and i32 %17, 12, !dbg !9828
  %19 = icmp eq i32 %18, 0, !dbg !9829
  %20 = tail call i32 @HAL_GetTick() #24, !dbg !9811
  br i1 %19, label %24, label %21, !dbg !9827

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !9830
  %23 = icmp ugt i32 %22, 5000, !dbg !9833
  br i1 %23, label %89, label %16, !dbg !9834, !llvm.loop !9835

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !9809, metadata !DIExpression()), !dbg !9811
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9837
  %26 = and i32 %25, -851969, !dbg !9837
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9837
  br label %27, !dbg !9838

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9839
  %29 = and i32 %28, 131072, !dbg !9839
  %30 = icmp eq i32 %29, 0, !dbg !9840
  %31 = tail call i32 @HAL_GetTick() #24, !dbg !9811
  br i1 %30, label %35, label %32, !dbg !9838

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !9841
  %34 = icmp ugt i32 %33, 100, !dbg !9844
  br i1 %34, label %89, label %27, !dbg !9845, !llvm.loop !9846

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !9809, metadata !DIExpression()), !dbg !9811
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9848
  %37 = and i32 %36, -16777217, !dbg !9848
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9848
  br label %38, !dbg !9849

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9850
  %40 = and i32 %39, 33554432, !dbg !9850
  %41 = icmp eq i32 %40, 0, !dbg !9851
  %42 = tail call i32 @HAL_GetTick() #24, !dbg !9811
  br i1 %41, label %46, label %43, !dbg !9849

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !9852
  %45 = icmp ugt i32 %44, 2, !dbg !9855
  br i1 %45, label %89, label %38, !dbg !9856, !llvm.loop !9857

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !9809, metadata !DIExpression()), !dbg !9811
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9859
  %48 = and i32 %47, -67108865, !dbg !9859
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9859
  br label %49, !dbg !9860

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9861
  %51 = and i32 %50, 134217728, !dbg !9861
  %52 = icmp eq i32 %51, 0, !dbg !9862
  %53 = tail call i32 @HAL_GetTick() #24, !dbg !9811
  br i1 %52, label %57, label %54, !dbg !9860

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !9863
  %56 = icmp ugt i32 %55, 2, !dbg !9866
  br i1 %56, label %89, label %49, !dbg !9867, !llvm.loop !9868

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !9809, metadata !DIExpression()), !dbg !9811
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9870
  %59 = and i32 %58, -268435457, !dbg !9870
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9870
  br label %60, !dbg !9871

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9872
  %62 = and i32 %61, 536870912, !dbg !9872
  %63 = icmp eq i32 %62, 0, !dbg !9873
  br i1 %63, label %68, label %64, !dbg !9871

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #24, !dbg !9874
  %66 = sub i32 %65, %53, !dbg !9877
  %67 = icmp ugt i32 %66, 2, !dbg !9878
  br i1 %67, label %89, label %60, !dbg !9879, !llvm.loop !9880

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9882
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9883
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9884
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9885
  %70 = and i32 %69, -7937, !dbg !9885
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9885
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9886
  %72 = and i32 %71, -8193, !dbg !9886
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9886
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9887
  %74 = and i32 %73, -16385, !dbg !9887
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9887
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9888
  %76 = or i32 %75, 10420224, !dbg !9888
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9888
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9889
  %78 = or i32 %77, 2097152, !dbg !9889
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9889
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9890
  %80 = or i32 %79, 4194304, !dbg !9890
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9890
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9891
  %82 = and i32 %81, -2, !dbg !9891
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9891
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9892
  %84 = or i32 %83, 16777216, !dbg !9892
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9892
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !9893
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !9894
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #24, !dbg !9896
  %87 = icmp ne i32 %86, 0, !dbg !9897
  %88 = zext i1 %87 to i32, !dbg !9898
  br label %89, !dbg !9898

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !9811
  ret i32 %90, !dbg !9899
}

; Function Attrs: optsize
declare !dbg !9900 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9903 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9929, metadata !DIExpression()), !dbg !9940
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9941
  br i1 %3, label %337, label %4, !dbg !9943

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9944
  %6 = load i32, i32* %5, align 4, !dbg !9944
  %7 = and i32 %6, 1, !dbg !9946
  %8 = icmp eq i32 %7, 0, !dbg !9947
  br i1 %8, label %74, label %9, !dbg !9948

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9949
  %11 = and i32 %10, 12, !dbg !9949
  %12 = icmp eq i32 %11, 4, !dbg !9952
  br i1 %12, label %29, label %13, !dbg !9953

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9954
  %15 = and i32 %14, 12, !dbg !9954
  %16 = icmp eq i32 %15, 8, !dbg !9955
  br i1 %16, label %17, label %21, !dbg !9956

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9957
  %19 = and i32 %18, 4194304, !dbg !9958
  %20 = icmp eq i32 %19, 0, !dbg !9959
  br i1 %20, label %21, label %29, !dbg !9960

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9961
  %23 = and i32 %22, 12, !dbg !9961
  %24 = icmp eq i32 %23, 12, !dbg !9962
  br i1 %24, label %25, label %37, !dbg !9963

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9964
  %27 = and i32 %26, 4194304, !dbg !9965
  %28 = icmp eq i32 %27, 0, !dbg !9966
  br i1 %28, label %37, label %29, !dbg !9967

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9968
  %31 = and i32 %30, 131072, !dbg !9968
  %32 = icmp eq i32 %31, 0, !dbg !9968
  br i1 %32, label %74, label %33, !dbg !9971

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9972
  %35 = load i32, i32* %34, align 4, !dbg !9972
  %36 = icmp eq i32 %35, 0, !dbg !9973
  br i1 %36, label %337, label %74, !dbg !9974

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9975
  %39 = load i32, i32* %38, align 4, !dbg !9975
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !9979

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9980
  %42 = or i32 %41, 65536, !dbg !9980
  br label %53, !dbg !9980

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9982
  %45 = or i32 %44, 262144, !dbg !9982
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9982
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9982
  %47 = or i32 %46, 65536, !dbg !9982
  br label %53, !dbg !9982

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9985
  %50 = and i32 %49, -65537, !dbg !9985
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9985
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9985
  %52 = and i32 %51, -262145, !dbg !9985
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9987
  %55 = load i32, i32* %38, align 4, !dbg !9988
  %56 = icmp eq i32 %55, 0, !dbg !9990
  %57 = tail call i32 @HAL_GetTick() #24, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %57, metadata !9930, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.value(metadata i32 %57, metadata !9930, metadata !DIExpression()), !dbg !9940
  br i1 %56, label %66, label %58, !dbg !9992

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9993
  %60 = and i32 %59, 131072, !dbg !9995
  %61 = icmp eq i32 %60, 0, !dbg !9995
  br i1 %61, label %62, label %74, !dbg !9996

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !9997
  %64 = sub i32 %63, %57, !dbg !10000
  %65 = icmp ugt i32 %64, 100, !dbg !10001
  br i1 %65, label %337, label %58, !dbg !10002, !llvm.loop !10003

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10005
  %68 = and i32 %67, 131072, !dbg !10005
  %69 = icmp eq i32 %68, 0, !dbg !10005
  br i1 %69, label %74, label %70, !dbg !10007

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #24, !dbg !10008
  %72 = sub i32 %71, %57, !dbg !10011
  %73 = icmp ugt i32 %72, 100, !dbg !10012
  br i1 %73, label %337, label %66, !dbg !10013, !llvm.loop !10014

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !10016
  %76 = and i32 %75, 2, !dbg !10018
  %77 = icmp eq i32 %76, 0, !dbg !10019
  br i1 %77, label %137, label %78, !dbg !10020

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10021
  %80 = and i32 %79, 12, !dbg !10021
  %81 = icmp eq i32 %80, 0, !dbg !10024
  br i1 %81, label %98, label %82, !dbg !10025

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10026
  %84 = and i32 %83, 12, !dbg !10026
  %85 = icmp eq i32 %84, 8, !dbg !10027
  br i1 %85, label %86, label %90, !dbg !10028

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10029
  %88 = and i32 %87, 4194304, !dbg !10030
  %89 = icmp eq i32 %88, 0, !dbg !10031
  br i1 %89, label %98, label %90, !dbg !10032

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10033
  %92 = and i32 %91, 12, !dbg !10033
  %93 = icmp eq i32 %92, 12, !dbg !10034
  br i1 %93, label %94, label %106, !dbg !10035

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10036
  %96 = and i32 %95, 4194304, !dbg !10037
  %97 = icmp eq i32 %96, 0, !dbg !10038
  br i1 %97, label %98, label %106, !dbg !10039

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10040
  %100 = and i32 %99, 2, !dbg !10040
  %101 = icmp eq i32 %100, 0, !dbg !10040
  br i1 %101, label %130, label %102, !dbg !10043

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10044
  %104 = load i32, i32* %103, align 4, !dbg !10044
  %105 = icmp eq i32 %104, 1, !dbg !10045
  br i1 %105, label %130, label %337, !dbg !10046

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10047
  %108 = load i32, i32* %107, align 4, !dbg !10047
  %109 = icmp eq i32 %108, 0, !dbg !10050
  br i1 %109, label %120, label %110, !dbg !10051

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10052
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !10054
  call void @llvm.dbg.value(metadata i32 %111, metadata !9930, metadata !DIExpression()), !dbg !9940
  br label %112, !dbg !10055

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10056
  %114 = and i32 %113, 2, !dbg !10057
  %115 = icmp eq i32 %114, 0, !dbg !10057
  br i1 %115, label %116, label %130, !dbg !10055

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #24, !dbg !10058
  %118 = sub i32 %117, %111, !dbg !10061
  %119 = icmp ugt i32 %118, 2, !dbg !10062
  br i1 %119, label %337, label %112, !dbg !10063, !llvm.loop !10064

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10066
  %121 = tail call i32 @HAL_GetTick() #24, !dbg !10068
  call void @llvm.dbg.value(metadata i32 %121, metadata !9930, metadata !DIExpression()), !dbg !9940
  br label %122, !dbg !10069

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10070
  %124 = and i32 %123, 2, !dbg !10070
  %125 = icmp eq i32 %124, 0, !dbg !10070
  br i1 %125, label %137, label %126, !dbg !10069

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #24, !dbg !10071
  %128 = sub i32 %127, %121, !dbg !10074
  %129 = icmp ugt i32 %128, 2, !dbg !10075
  br i1 %129, label %337, label %122, !dbg !10076, !llvm.loop !10077

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  %132 = and i32 %131, -249, !dbg !10079
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10079
  %134 = load i32, i32* %133, align 4, !dbg !10079
  %135 = shl i32 %134, 3, !dbg !10079
  %136 = or i32 %135, %132, !dbg !10079
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  br label %137, !dbg !10080

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !10080
  %139 = and i32 %138, 8, !dbg !10082
  %140 = icmp eq i32 %139, 0, !dbg !10083
  br i1 %140, label %165, label %141, !dbg !10084

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10085
  %143 = load i32, i32* %142, align 4, !dbg !10085
  %144 = icmp eq i32 %143, 0, !dbg !10088
  br i1 %144, label %155, label %145, !dbg !10089

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10090
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !10092
  call void @llvm.dbg.value(metadata i32 %146, metadata !9930, metadata !DIExpression()), !dbg !9940
  br label %147, !dbg !10093

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10094
  %149 = and i32 %148, 2, !dbg !10095
  %150 = icmp eq i32 %149, 0, !dbg !10095
  br i1 %150, label %151, label %165, !dbg !10093

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #24, !dbg !10096
  %153 = sub i32 %152, %146, !dbg !10099
  %154 = icmp ugt i32 %153, 2, !dbg !10100
  br i1 %154, label %337, label %147, !dbg !10101, !llvm.loop !10102

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10104
  %156 = tail call i32 @HAL_GetTick() #24, !dbg !10106
  call void @llvm.dbg.value(metadata i32 %156, metadata !9930, metadata !DIExpression()), !dbg !9940
  br label %157, !dbg !10107

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10108
  %159 = and i32 %158, 2, !dbg !10108
  %160 = icmp eq i32 %159, 0, !dbg !10108
  br i1 %160, label %165, label %161, !dbg !10107

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #24, !dbg !10109
  %163 = sub i32 %162, %156, !dbg !10112
  %164 = icmp ugt i32 %163, 2, !dbg !10113
  br i1 %164, label %337, label %157, !dbg !10114, !llvm.loop !10115

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !10117
  %167 = and i32 %166, 4, !dbg !10118
  %168 = icmp eq i32 %167, 0, !dbg !10119
  br i1 %168, label %237, label %169, !dbg !10120

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !9932, metadata !DIExpression()), !dbg !10121
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10122
  %171 = and i32 %170, 268435456, !dbg !10122
  %172 = icmp eq i32 %171, 0, !dbg !10122
  br i1 %172, label %173, label %180, !dbg !10123

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !10124
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !10124
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9936, metadata !DIExpression()), !dbg !10124
  store volatile i32 0, i32* %2, align 4, !dbg !10124
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10124
  %176 = or i32 %175, 268435456, !dbg !10124
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10124
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10124
  %178 = and i32 %177, 268435456, !dbg !10124
  store volatile i32 %178, i32* %2, align 4, !dbg !10124
  %179 = load volatile i32, i32* %2, align 4, !dbg !10124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !10125
  call void @llvm.dbg.value(metadata i32 1, metadata !9932, metadata !DIExpression()), !dbg !10121
  br label %180, !dbg !10126

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !9932, metadata !DIExpression()), !dbg !10121
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10127
  %182 = and i32 %181, 256, !dbg !10127
  %183 = icmp eq i32 %182, 0, !dbg !10127
  br i1 %183, label %184, label %196, !dbg !10129

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10130
  %186 = or i32 %185, 256, !dbg !10130
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10130
  %187 = tail call i32 @HAL_GetTick() #24, !dbg !10132
  call void @llvm.dbg.value(metadata i32 %187, metadata !9930, metadata !DIExpression()), !dbg !9940
  br label %188, !dbg !10133

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10134
  %190 = and i32 %189, 256, !dbg !10134
  %191 = icmp eq i32 %190, 0, !dbg !10134
  br i1 %191, label %192, label %196, !dbg !10133

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #24, !dbg !10135
  %194 = sub i32 %193, %187, !dbg !10138
  %195 = icmp ugt i32 %194, 2, !dbg !10139
  br i1 %195, label %337, label %188, !dbg !10140, !llvm.loop !10141

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10143
  %198 = load i32, i32* %197, align 4, !dbg !10143
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !10146

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10147
  %201 = or i32 %200, 1, !dbg !10147
  br label %212, !dbg !10147

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10149
  %204 = or i32 %203, 4, !dbg !10149
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10149
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10149
  %206 = or i32 %205, 1, !dbg !10149
  br label %212, !dbg !10149

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10152
  %209 = and i32 %208, -2, !dbg !10152
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10152
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10152
  %211 = and i32 %210, -5, !dbg !10152
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10154
  %214 = load i32, i32* %197, align 4, !dbg !10155
  %215 = icmp eq i32 %214, 0, !dbg !10157
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !10158
  call void @llvm.dbg.value(metadata i32 %216, metadata !9930, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.value(metadata i32 %216, metadata !9930, metadata !DIExpression()), !dbg !9940
  br i1 %215, label %225, label %217, !dbg !10159

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10160
  %219 = and i32 %218, 2, !dbg !10162
  %220 = icmp eq i32 %219, 0, !dbg !10162
  br i1 %220, label %221, label %233, !dbg !10163

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #24, !dbg !10164
  %223 = sub i32 %222, %216, !dbg !10167
  %224 = icmp ugt i32 %223, 5000, !dbg !10168
  br i1 %224, label %337, label %217, !dbg !10169, !llvm.loop !10170

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10172
  %227 = and i32 %226, 2, !dbg !10172
  %228 = icmp eq i32 %227, 0, !dbg !10172
  br i1 %228, label %233, label %229, !dbg !10174

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #24, !dbg !10175
  %231 = sub i32 %230, %216, !dbg !10178
  %232 = icmp ugt i32 %231, 5000, !dbg !10179
  br i1 %232, label %337, label %225, !dbg !10180, !llvm.loop !10181

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !10183

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10184
  %236 = and i32 %235, -268435457, !dbg !10184
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10184
  br label %237, !dbg !10187

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10188
  %239 = load i32, i32* %238, align 4, !dbg !10188
  %240 = icmp eq i32 %239, 0, !dbg !10190
  br i1 %240, label %336, label %241, !dbg !10191

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10192
  %243 = and i32 %242, 12, !dbg !10192
  %244 = icmp eq i32 %243, 8, !dbg !10195
  br i1 %244, label %297, label %245, !dbg !10196

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !10197
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10200
  %247 = tail call i32 @HAL_GetTick() #24, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %247, metadata !9930, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.value(metadata i32 %247, metadata !9930, metadata !DIExpression()), !dbg !9940
  br i1 %246, label %248, label %289, !dbg !10201

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10202
  %250 = and i32 %249, 33554432, !dbg !10202
  %251 = icmp eq i32 %250, 0, !dbg !10202
  br i1 %251, label %256, label %252, !dbg !10204

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #24, !dbg !10205
  %254 = sub i32 %253, %247, !dbg !10208
  %255 = icmp ugt i32 %254, 2, !dbg !10209
  br i1 %255, label %337, label %248, !dbg !10210, !llvm.loop !10211

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10213
  %258 = load i32, i32* %257, align 4, !dbg !10213
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10213
  %260 = load i32, i32* %259, align 4, !dbg !10213
  %261 = or i32 %260, %258, !dbg !10213
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10213
  %263 = load i32, i32* %262, align 4, !dbg !10213
  %264 = shl i32 %263, 6, !dbg !10213
  %265 = or i32 %261, %264, !dbg !10213
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10213
  %267 = load i32, i32* %266, align 4, !dbg !10213
  %268 = shl i32 %267, 15, !dbg !10213
  %269 = add i32 %268, -65536, !dbg !10213
  %270 = and i32 %269, -65536, !dbg !10213
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10213
  %272 = load i32, i32* %271, align 4, !dbg !10213
  %273 = shl i32 %272, 24, !dbg !10213
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10213
  %275 = load i32, i32* %274, align 4, !dbg !10213
  %276 = shl i32 %275, 28, !dbg !10213
  %277 = or i32 %265, %273, !dbg !10213
  %278 = or i32 %277, %270, !dbg !10213
  %279 = or i32 %278, %276, !dbg !10213
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10213
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10214
  %280 = tail call i32 @HAL_GetTick() #24, !dbg !10215
  call void @llvm.dbg.value(metadata i32 %280, metadata !9930, metadata !DIExpression()), !dbg !9940
  br label %281, !dbg !10216

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10217
  %283 = and i32 %282, 33554432, !dbg !10218
  %284 = icmp eq i32 %283, 0, !dbg !10218
  br i1 %284, label %285, label %336, !dbg !10216

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #24, !dbg !10219
  %287 = sub i32 %286, %280, !dbg !10222
  %288 = icmp ugt i32 %287, 2, !dbg !10223
  br i1 %288, label %337, label %281, !dbg !10224, !llvm.loop !10225

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10227
  %291 = and i32 %290, 33554432, !dbg !10227
  %292 = icmp eq i32 %291, 0, !dbg !10227
  br i1 %292, label %336, label %293, !dbg !10229

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #24, !dbg !10230
  %295 = sub i32 %294, %247, !dbg !10233
  %296 = icmp ugt i32 %295, 2, !dbg !10234
  br i1 %296, label %337, label %289, !dbg !10235, !llvm.loop !10236

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !10238
  br i1 %298, label %337, label %299, !dbg !10241

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10242
  call void @llvm.dbg.value(metadata i32 %300, metadata !9931, metadata !DIExpression()), !dbg !9940
  %301 = and i32 %300, 4194304, !dbg !10244
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10246
  %303 = load i32, i32* %302, align 4, !dbg !10246
  %304 = icmp eq i32 %301, %303, !dbg !10247
  br i1 %304, label %305, label %337, !dbg !10248

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !10249
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10250
  %308 = load i32, i32* %307, align 4, !dbg !10250
  %309 = icmp eq i32 %306, %308, !dbg !10251
  br i1 %309, label %310, label %337, !dbg !10252

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !10253
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10254
  %313 = load i32, i32* %312, align 4, !dbg !10254
  %314 = shl i32 %313, 6, !dbg !10255
  %315 = icmp eq i32 %311, %314, !dbg !10256
  br i1 %315, label %316, label %337, !dbg !10257

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !10258
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10259
  %319 = load i32, i32* %318, align 4, !dbg !10259
  %320 = shl i32 %319, 15, !dbg !10260
  %321 = add i32 %320, -65536, !dbg !10260
  %322 = and i32 %321, -65536, !dbg !10260
  %323 = icmp eq i32 %317, %322, !dbg !10261
  br i1 %323, label %324, label %337, !dbg !10262

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !10263
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10264
  %327 = load i32, i32* %326, align 4, !dbg !10264
  %328 = shl i32 %327, 24, !dbg !10265
  %329 = icmp eq i32 %325, %328, !dbg !10266
  br i1 %329, label %330, label %337, !dbg !10267

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !10268
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10269
  %333 = load i32, i32* %332, align 4, !dbg !10269
  %334 = shl i32 %333, 28, !dbg !10270
  %335 = icmp eq i32 %331, %334, !dbg !10271
  br i1 %335, label %336, label %337, !dbg !10272

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !10273

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !9940
  ret i32 %338, !dbg !10274
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10279, metadata !DIExpression()), !dbg !10280
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10281
  store i32 15, i32* %2, align 4, !dbg !10282
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10283
  %4 = and i32 %3, 262144, !dbg !10285
  %5 = icmp eq i32 %4, 0, !dbg !10286
  br i1 %5, label %8, label %6, !dbg !10287

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10288
  store i32 327680, i32* %7, align 4, !dbg !10290
  br label %15, !dbg !10291

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10292
  %10 = and i32 %9, 65536, !dbg !10294
  %11 = icmp eq i32 %10, 0, !dbg !10295
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10296
  br i1 %11, label %14, label %13, !dbg !10297

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10298
  br label %15, !dbg !10300

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10301
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10303
  %17 = and i32 %16, 1, !dbg !10305
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10306
  store i32 %17, i32* %18, align 4, !dbg !10308
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10309
  %20 = lshr i32 %19, 3, !dbg !10310
  %21 = and i32 %20, 31, !dbg !10310
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10311
  store i32 %21, i32* %22, align 4, !dbg !10312
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10313
  %24 = and i32 %23, 4, !dbg !10315
  %25 = icmp eq i32 %24, 0, !dbg !10316
  br i1 %25, label %28, label %26, !dbg !10317

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10318
  store i32 5, i32* %27, align 4, !dbg !10320
  br label %35, !dbg !10321

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10322
  %30 = and i32 %29, 1, !dbg !10324
  %31 = icmp eq i32 %30, 0, !dbg !10325
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10326
  br i1 %31, label %34, label %33, !dbg !10327

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10328
  br label %35, !dbg !10330

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10331
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10333
  %37 = and i32 %36, 1, !dbg !10335
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10336
  store i32 %37, i32* %38, align 4, !dbg !10338
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10339
  %40 = and i32 %39, 16777216, !dbg !10341
  %41 = icmp eq i32 %40, 0, !dbg !10342
  %42 = select i1 %41, i32 1, i32 2, !dbg !10343
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10344
  store i32 %42, i32* %43, align 4, !dbg !10346
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10347
  %45 = and i32 %44, 4194304, !dbg !10348
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10349
  store i32 %45, i32* %46, align 4, !dbg !10350
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10351
  %48 = and i32 %47, 63, !dbg !10352
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10353
  store i32 %48, i32* %49, align 4, !dbg !10354
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10355
  %51 = lshr i32 %50, 6, !dbg !10356
  %52 = and i32 %51, 511, !dbg !10356
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10357
  store i32 %52, i32* %53, align 4, !dbg !10358
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10359
  %55 = shl i32 %54, 1, !dbg !10360
  %56 = and i32 %55, 393216, !dbg !10360
  %57 = add nuw nsw i32 %56, 131072, !dbg !10360
  %58 = lshr exact i32 %57, 16, !dbg !10361
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10362
  store i32 %58, i32* %59, align 4, !dbg !10363
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10364
  %61 = lshr i32 %60, 24, !dbg !10365
  %62 = and i32 %61, 15, !dbg !10365
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10366
  store i32 %62, i32* %63, align 4, !dbg !10367
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10368
  %65 = lshr i32 %64, 28, !dbg !10369
  %66 = and i32 %65, 7, !dbg !10369
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10370
  store i32 %66, i32* %67, align 4, !dbg !10371
  ret void, !dbg !10372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10376, metadata !DIExpression()), !dbg !10377
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !10378
  ret void, !dbg !10379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10383, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata i32 1000, metadata !10384, metadata !DIExpression()), !dbg !10385
  %2 = udiv i32 %0, 1000, !dbg !10386
  %3 = add nsw i32 %2, -1, !dbg !10387
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10388
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10389
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10392 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10394, metadata !DIExpression()), !dbg !10396
  %3 = bitcast i32* %2 to i8*, !dbg !10397
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10397
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10395, metadata !DIExpression()), !dbg !10398
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10399
  store volatile i32 %4, i32* %2, align 4, !dbg !10398
  %5 = load volatile i32, i32* %2, align 4, !dbg !10400
  %6 = icmp eq i32 %0, -1, !dbg !10401
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()), !dbg !10396
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10396
  call void @llvm.dbg.value(metadata i32 %8, metadata !10394, metadata !DIExpression()), !dbg !10396
  br label %9, !dbg !10403

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10394, metadata !DIExpression()), !dbg !10396
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10404
  call void @llvm.dbg.value(metadata i32 undef, metadata !10394, metadata !DIExpression()), !dbg !10396
  %12 = shl i32 %11, 15, !dbg !10396
  %13 = ashr i32 %12, 31, !dbg !10396
  %14 = add i32 %13, %10, !dbg !10396
  call void @llvm.dbg.value(metadata i32 %14, metadata !10394, metadata !DIExpression()), !dbg !10396
  %15 = icmp eq i32 %14, 0, !dbg !10403
  br i1 %15, label %16, label %9, !dbg !10403

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10407
  ret void, !dbg !10407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #3 !dbg !10408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10410, metadata !DIExpression()), !dbg !10411
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10412
  ret void, !dbg !10413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10419, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.value(metadata i32 0, metadata !10422, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.value(metadata i32 0, metadata !10423, metadata !DIExpression()), !dbg !10424
  %2 = icmp eq i32 %0, 0, !dbg !10425
  br i1 %2, label %72, label %3, !dbg !10427

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10428
  %5 = icmp eq i32 %4, 49152, !dbg !10431
  br i1 %5, label %6, label %21, !dbg !10432

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10433
  %8 = select i1 %7, i32 0, i32 5, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %8, metadata !10422, metadata !DIExpression()), !dbg !10424
  %9 = add i32 %0, -120000001, !dbg !10437
  %10 = icmp ult i32 %9, 30000000, !dbg !10437
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %11, metadata !10422, metadata !DIExpression()), !dbg !10424
  %12 = icmp ult i32 %9, -30000000, !dbg !10439
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %13, metadata !10422, metadata !DIExpression()), !dbg !10424
  %14 = icmp ugt i32 %0, 60000000, !dbg !10441
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10443
  br i1 %16, label %21, label %17, !dbg !10443

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10444
  %19 = and i1 %18, %15, !dbg !10447
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10447
  br label %21, !dbg !10447

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10424
  call void @llvm.dbg.value(metadata i32 %22, metadata !10422, metadata !DIExpression()), !dbg !10424
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10448
  %24 = icmp eq i32 %23, 32768, !dbg !10450
  br i1 %24, label %25, label %45, !dbg !10451

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !10452
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10455
  %29 = select i1 %28, i32 5, i32 %22, !dbg !10455
  call void @llvm.dbg.value(metadata i32 %29, metadata !10422, metadata !DIExpression()), !dbg !10424
  %30 = icmp ugt i32 %0, 12000000, !dbg !10456
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10458
  %33 = select i1 %32, i32 4, i32 %29, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %33, metadata !10422, metadata !DIExpression()), !dbg !10424
  %34 = icmp ugt i32 %0, 90000000, !dbg !10459
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10461
  %37 = select i1 %36, i32 3, i32 %33, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %37, metadata !10422, metadata !DIExpression()), !dbg !10424
  %38 = icmp ugt i32 %0, 60000000, !dbg !10462
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !10464
  br i1 %40, label %45, label %41, !dbg !10464

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !10465
  %43 = select i1 %42, i1 %39, i1 false, !dbg !10468
  %44 = select i1 %43, i32 1, i32 %37, !dbg !10468
  br label %45, !dbg !10468

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %46, metadata !10422, metadata !DIExpression()), !dbg !10424
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10470
  %48 = icmp eq i32 %47, 16384, !dbg !10472
  br i1 %48, label %49, label %61, !dbg !10473

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !10474
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !10477
  %53 = select i1 %52, i32 3, i32 %46, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %53, metadata !10422, metadata !DIExpression()), !dbg !10424
  %54 = icmp ugt i32 %0, 60000000, !dbg !10478
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !10480
  br i1 %56, label %61, label %57, !dbg !10480

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !10481
  %59 = select i1 %58, i1 %55, i1 false, !dbg !10484
  %60 = select i1 %59, i32 1, i32 %53, !dbg !10484
  br label %61, !dbg !10484

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %62, metadata !10422, metadata !DIExpression()), !dbg !10424
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #25, !dbg !10485
  call void @llvm.dbg.value(metadata i32 2, metadata !10420, metadata !DIExpression()), !dbg !10424
  br label %63, !dbg !10486

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %64, metadata !10420, metadata !DIExpression()), !dbg !10424
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %65, metadata !10421, metadata !DIExpression()), !dbg !10424
  %66 = add nsw i32 %64, -1, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %66, metadata !10420, metadata !DIExpression()), !dbg !10424
  %67 = icmp ne i32 %65, %62, !dbg !10490
  %68 = icmp ne i32 %66, 0, !dbg !10491
  %69 = select i1 %67, i1 %68, i1 false, !dbg !10491
  br i1 %69, label %63, label %70, !dbg !10492, !llvm.loop !10493

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !10495
  call void @llvm.dbg.value(metadata i32 %73, metadata !10423, metadata !DIExpression()), !dbg !10424
  ret i32 %73, !dbg !10496
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10497 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10499
  %2 = and i32 %1, 49152, !dbg !10499
  ret i32 %2, !dbg !10500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10503, metadata !DIExpression()), !dbg !10504
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10505
  %3 = and i32 %2, -16, !dbg !10505
  %4 = or i32 %3, %0, !dbg !10505
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10505
  ret void, !dbg !10506
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10507 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10508
  %2 = and i32 %1, 15, !dbg !10508
  ret i32 %2, !dbg !10509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10528, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10529, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i32 0, metadata !10530, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i32 0, metadata !10531, metadata !DIExpression()), !dbg !10532
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10533
  %4 = icmp eq i32 %3, 0, !dbg !10535
  br i1 %4, label %5, label %21, !dbg !10536

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %6, metadata !10531, metadata !DIExpression()), !dbg !10532
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.73() #25, !dbg !10539
  %8 = icmp eq i32 %7, 1, !dbg !10541
  br i1 %8, label %13, label %9, !dbg !10542

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.74() #25, !dbg !10543
  br label %10, !dbg !10545

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.73() #25, !dbg !10546
  %12 = icmp eq i32 %11, 1, !dbg !10547
  br i1 %12, label %13, label %10, !dbg !10545, !llvm.loop !10548

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10550
  %15 = load i32, i32* %14, align 4, !dbg !10550
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10551
  %17 = load i32, i32* %16, align 4, !dbg !10551
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10552
  %19 = load i32, i32* %18, align 4, !dbg !10552
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.75(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10553
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10554
  call void @llvm.dbg.value(metadata i32 %20, metadata !10530, metadata !DIExpression()), !dbg !10532
  br label %21, !dbg !10555

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10556
  call void @llvm.dbg.value(metadata i32 %22, metadata !10530, metadata !DIExpression()), !dbg !10532
  ret i32 %22, !dbg !10557
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10558 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10562, metadata !DIExpression()), !dbg !10563
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.77() #25, !dbg !10564
  %2 = icmp ne i32 %1, 0, !dbg !10566
  call void @llvm.dbg.value(metadata i1 %2, metadata !10562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10563
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #25, !dbg !10567
  %4 = icmp ne i32 %3, 0, !dbg !10569
  call void @llvm.dbg.value(metadata i1 undef, metadata !10562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10563
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10570
  %6 = icmp ne i32 %5, 0, !dbg !10572
  %7 = select i1 %6, i1 true, i1 %4, !dbg !10573
  %8 = select i1 %7, i1 true, i1 %2, !dbg !10573
  %9 = zext i1 %8 to i32, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %9, metadata !10562, metadata !DIExpression()), !dbg !10563
  ret i32 %9, !dbg !10574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10579, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10580, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i32 0, metadata !10581, metadata !DIExpression()), !dbg !10582
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10583
  %4 = load i32, i32* %3, align 4, !dbg !10583
  %5 = and i32 %4, 63, !dbg !10584
  %6 = udiv i32 %0, %5, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %6, metadata !10581, metadata !DIExpression()), !dbg !10582
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10586
  %8 = load i32, i32* %7, align 4, !dbg !10586
  %9 = and i32 %8, 511, !dbg !10587
  %10 = mul i32 %9, %6, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %10, metadata !10581, metadata !DIExpression()), !dbg !10582
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10589
  %12 = load i32, i32* %11, align 4, !dbg !10589
  %13 = lshr i32 %12, 15, !dbg !10590
  %14 = and i32 %13, 131070, !dbg !10590
  %15 = add nuw nsw i32 %14, 2, !dbg !10590
  %16 = udiv i32 %10, %15, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %16, metadata !10581, metadata !DIExpression()), !dbg !10582
  ret i32 %16, !dbg !10592
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.73() unnamed_addr #14 !dbg !10593 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10594
  %2 = lshr i32 %1, 1, !dbg !10595
  %3 = and i32 %2, 1, !dbg !10595
  ret i32 %3, !dbg !10596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.74() unnamed_addr #13 !dbg !10597 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10598
  %2 = or i32 %1, 1, !dbg !10598
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10598
  ret void, !dbg !10599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.75(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10602, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 %1, metadata !10603, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 %2, metadata !10604, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 %3, metadata !10605, metadata !DIExpression()), !dbg !10606
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10607
  %6 = and i32 %5, -4227072, !dbg !10607
  %7 = or i32 %1, %0, !dbg !10607
  %8 = shl i32 %2, 6, !dbg !10607
  %9 = or i32 %7, %8, !dbg !10607
  %10 = or i32 %9, %6, !dbg !10607
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10607
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10608
  %12 = and i32 %11, -196609, !dbg !10608
  %13 = or i32 %12, %3, !dbg !10608
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10608
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10609
  %15 = and i32 %14, -1879048193, !dbg !10609
  %16 = or i32 %15, %3, !dbg !10609
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10609
  ret void, !dbg !10610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10615, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10616, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.value(metadata i32 0, metadata !10617, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.value(metadata i32 0, metadata !10618, metadata !DIExpression()), !dbg !10619
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10620
  %4 = load i32, i32* %3, align 4, !dbg !10620
  %5 = lshr i32 %4, 4, !dbg !10620
  %6 = and i32 %5, 15, !dbg !10620
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10620
  %8 = load i8, i8* %7, align 1, !dbg !10620
  %9 = zext i8 %8 to i32, !dbg !10620
  %10 = lshr i32 %0, %9, !dbg !10620
  call void @llvm.dbg.value(metadata i32 %10, metadata !10618, metadata !DIExpression()), !dbg !10619
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10621
  %12 = icmp ult i32 %11, %10, !dbg !10623
  br i1 %12, label %13, label %16, !dbg !10624

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10625
  call void @llvm.dbg.value(metadata i32 %14, metadata !10617, metadata !DIExpression()), !dbg !10619
  %15 = icmp eq i32 %14, 0, !dbg !10627
  br i1 %15, label %16, label %30, !dbg !10629

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.76() #25, !dbg !10630
  br label %17, !dbg !10632

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.77() #25, !dbg !10633
  %19 = icmp eq i32 %18, 1, !dbg !10634
  br i1 %19, label %20, label %17, !dbg !10632, !llvm.loop !10635

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10637
  tail call fastcc void @LL_RCC_SetAHBPrescaler.78(i32 noundef %21) #25, !dbg !10638
  tail call fastcc void @LL_RCC_SetSysClkSource.79() #25, !dbg !10639
  br label %22, !dbg !10640

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.80() #25, !dbg !10641
  %24 = icmp eq i32 %23, 8, !dbg !10642
  br i1 %24, label %25, label %22, !dbg !10640, !llvm.loop !10643

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10645
  %27 = load i32, i32* %26, align 4, !dbg !10645
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.81(i32 noundef %27) #25, !dbg !10646
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10647
  %29 = load i32, i32* %28, align 4, !dbg !10647
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.82(i32 noundef %29) #25, !dbg !10648
  br label %30, !dbg !10649

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10650
  %33 = icmp ugt i32 %32, %10, !dbg !10652
  br i1 %33, label %34, label %36, !dbg !10653

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10654
  call void @llvm.dbg.value(metadata i32 %35, metadata !10617, metadata !DIExpression()), !dbg !10619
  br label %36, !dbg !10656

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10619
  call void @llvm.dbg.value(metadata i32 %37, metadata !10617, metadata !DIExpression()), !dbg !10619
  %38 = icmp eq i32 %37, 0, !dbg !10657
  br i1 %38, label %39, label %40, !dbg !10659

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10660
  br label %40, !dbg !10662

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.76() unnamed_addr #13 !dbg !10664 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10665
  %2 = or i32 %1, 16777216, !dbg !10665
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10665
  ret void, !dbg !10666
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.77() unnamed_addr #14 !dbg !10667 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10668
  %2 = lshr i32 %1, 25, !dbg !10669
  %3 = and i32 %2, 1, !dbg !10669
  ret i32 %3, !dbg !10670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.78(i32 noundef %0) unnamed_addr #13 !dbg !10671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10673, metadata !DIExpression()), !dbg !10674
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10675
  %3 = and i32 %2, -241, !dbg !10675
  %4 = or i32 %3, %0, !dbg !10675
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10675
  ret void, !dbg !10676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.79() unnamed_addr #13 !dbg !10677 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10679, metadata !DIExpression()), !dbg !10680
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10681
  %2 = and i32 %1, -4, !dbg !10681
  %3 = or i32 %2, 2, !dbg !10681
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10681
  ret void, !dbg !10682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.80() unnamed_addr #14 !dbg !10683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10684
  %2 = and i32 %1, 12, !dbg !10684
  ret i32 %2, !dbg !10685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.81(i32 noundef %0) unnamed_addr #13 !dbg !10686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10688, metadata !DIExpression()), !dbg !10689
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10690
  %3 = and i32 %2, -7169, !dbg !10690
  %4 = or i32 %3, %0, !dbg !10690
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10690
  ret void, !dbg !10691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.82(i32 noundef %0) unnamed_addr #13 !dbg !10692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10694, metadata !DIExpression()), !dbg !10695
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10696
  %3 = and i32 %2, -57345, !dbg !10696
  %4 = or i32 %3, %0, !dbg !10696
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10696
  ret void, !dbg !10697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #14 !dbg !10698 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10699
  %2 = lshr i32 %1, 29, !dbg !10700
  %3 = and i32 %2, 1, !dbg !10700
  ret i32 %3, !dbg !10701
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10702 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10703
  %2 = lshr i32 %1, 27, !dbg !10704
  %3 = and i32 %2, 1, !dbg !10704
  ret i32 %3, !dbg !10705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10710, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 %1, metadata !10711, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10712, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10713, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 0, metadata !10714, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 0, metadata !10715, metadata !DIExpression()), !dbg !10716
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10717
  %6 = icmp eq i32 %5, 0, !dbg !10719
  br i1 %6, label %7, label %27, !dbg !10720

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %8, metadata !10715, metadata !DIExpression()), !dbg !10716
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.83() #25, !dbg !10723
  %10 = icmp eq i32 %9, 1, !dbg !10725
  br i1 %10, label %19, label %11, !dbg !10726

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10727
  br i1 %12, label %13, label %14, !dbg !10730

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10731
  br label %15, !dbg !10733

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.84() #25, !dbg !10734
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.85() #25, !dbg !10736
  br label %16, !dbg !10737

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.83() #25, !dbg !10738
  %18 = icmp eq i32 %17, 1, !dbg !10739
  br i1 %18, label %19, label %16, !dbg !10737, !llvm.loop !10740

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10742
  %21 = load i32, i32* %20, align 4, !dbg !10742
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10743
  %23 = load i32, i32* %22, align 4, !dbg !10743
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10744
  %25 = load i32, i32* %24, align 4, !dbg !10744
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.75(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10745
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %26, metadata !10714, metadata !DIExpression()), !dbg !10716
  br label %27, !dbg !10747

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10748
  call void @llvm.dbg.value(metadata i32 %28, metadata !10714, metadata !DIExpression()), !dbg !10716
  ret i32 %28, !dbg !10749
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.83() unnamed_addr #14 !dbg !10750 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10751
  %2 = lshr i32 %1, 17, !dbg !10752
  %3 = and i32 %2, 1, !dbg !10752
  ret i32 %3, !dbg !10753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10754 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10755
  %2 = or i32 %1, 262144, !dbg !10755
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10755
  ret void, !dbg !10756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.84() unnamed_addr #13 !dbg !10757 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10758
  %2 = and i32 %1, -262145, !dbg !10758
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10758
  ret void, !dbg !10759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.85() unnamed_addr #13 !dbg !10760 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10761
  %2 = or i32 %1, 65536, !dbg !10761
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10761
  ret void, !dbg !10762
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10763 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10766, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.value(metadata i32 undef, metadata !10766, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.value(metadata i32 undef, metadata !10766, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10782
  ret void, !dbg !10783
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10788, metadata !DIExpression()), !dbg !10790
  %2 = icmp eq i8* %0, null, !dbg !10791
  br i1 %2, label %29, label %3, !dbg !10793

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10794
  %5 = icmp eq i8 %4, 0, !dbg !10795
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10796
  br i1 %6, label %29, label %8, !dbg !10796

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10789, metadata !DIExpression()), !dbg !10790
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10797

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10789, metadata !DIExpression()), !dbg !10790
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10799
  br i1 %10, label %11, label %15, !dbg !10804

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10805
  %13 = load i8*, i8** %12, align 4, !dbg !10805
  %14 = icmp eq i8* %13, %0, !dbg !10806
  br i1 %14, label %29, label %15, !dbg !10807

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10808
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10789, metadata !DIExpression()), !dbg !10790
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10809
  br i1 %17, label %7, label %8, !dbg !10810, !llvm.loop !10811

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10789, metadata !DIExpression()), !dbg !10790
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10813
  br i1 %20, label %21, label %26, !dbg !10817

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10818
  %23 = load i8*, i8** %22, align 4, !dbg !10818
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10819
  %25 = icmp eq i32 %24, 0, !dbg !10820
  br i1 %25, label %29, label %26, !dbg !10821

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10822
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10789, metadata !DIExpression()), !dbg !10790
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10823
  br i1 %28, label %29, label %18, !dbg !10797, !llvm.loop !10824

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10790
  ret %struct.device* %30, !dbg !10826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !10827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10831, metadata !DIExpression()), !dbg !10832
  %2 = icmp eq %struct.device* %0, null, !dbg !10833
  br i1 %2, label %14, label %3, !dbg !10835

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10836
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10836
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10837
  %7 = load i8, i8* %6, align 1, !dbg !10837
  %8 = and i8 %7, 1, !dbg !10837
  %9 = icmp eq i8 %8, 0, !dbg !10837
  br i1 %9, label %14, label %10, !dbg !10838

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10839
  %12 = load i8, i8* %11, align 1, !dbg !10839
  %13 = icmp eq i8 %12, 0, !dbg !10840
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10832
  ret i1 %15, !dbg !10841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !10842 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10847, metadata !DIExpression()), !dbg !10848
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10849
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10851 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10859, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10860, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i8* %2, metadata !10861, metadata !DIExpression()), !dbg !10864
  %5 = bitcast i32* %4 to i8*, !dbg !10865
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10865
  call void @llvm.dbg.value(metadata i32 0, metadata !10862, metadata !DIExpression()), !dbg !10864
  store i32 0, i32* %4, align 4, !dbg !10866
  call void @llvm.dbg.value(metadata i32* %4, metadata !10862, metadata !DIExpression(DW_OP_deref)), !dbg !10864
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10867
  call void @llvm.dbg.value(metadata i16* %6, metadata !10863, metadata !DIExpression()), !dbg !10864
  %7 = load i32, i32* %4, align 4, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %7, metadata !10862, metadata !DIExpression()), !dbg !10864
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10869
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10870
  ret i32 %8, !dbg !10871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10876, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32* %1, metadata !10877, metadata !DIExpression()), !dbg !10882
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10883
  %4 = load i16*, i16** %3, align 4, !dbg !10883
  call void @llvm.dbg.value(metadata i16* %4, metadata !10878, metadata !DIExpression()), !dbg !10882
  %5 = icmp eq i16* %4, null, !dbg !10884
  br i1 %5, label %14, label %6, !dbg !10885

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10886
  call void @llvm.dbg.value(metadata i32 %7, metadata !10879, metadata !DIExpression()), !dbg !10886
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10887
  %9 = load i16, i16* %8, align 2, !dbg !10887
  %10 = add i16 %9, -32767, !dbg !10888
  %11 = icmp ult i16 %10, 2, !dbg !10888
  %12 = add i32 %7, 1, !dbg !10889
  call void @llvm.dbg.value(metadata i32 %12, metadata !10879, metadata !DIExpression()), !dbg !10886
  br i1 %11, label %13, label %6, !dbg !10888, !llvm.loop !10891

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10894
  br label %14, !dbg !10895

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10897 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10901, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i32 %1, metadata !10902, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10903, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i8* %3, metadata !10904, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.value(metadata i32 0, metadata !10905, metadata !DIExpression()), !dbg !10913
  %5 = icmp eq i32 %1, 0, !dbg !10914
  br i1 %5, label %16, label %8, !dbg !10915

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10905, metadata !DIExpression()), !dbg !10913
  %7 = icmp eq i32 %15, %1, !dbg !10914
  br i1 %7, label %16, label %8, !dbg !10915, !llvm.loop !10916

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10905, metadata !DIExpression()), !dbg !10913
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10918
  %11 = load i16, i16* %10, align 2, !dbg !10918
  call void @llvm.dbg.value(metadata i16 %11, metadata !10907, metadata !DIExpression()), !dbg !10919
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !10920
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10910, metadata !DIExpression()), !dbg !10919
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !10921
  call void @llvm.dbg.value(metadata i32 %13, metadata !10911, metadata !DIExpression()), !dbg !10919
  %14 = icmp slt i32 %13, 0, !dbg !10922
  %15 = add nuw i32 %9, 1, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %15, metadata !10905, metadata !DIExpression()), !dbg !10913
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !10926 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10930, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10932, metadata !DIExpression()), !dbg !10933
  %2 = sext i16 %0 to i32, !dbg !10934
  %3 = icmp slt i16 %0, 1, !dbg !10936
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10937
  %6 = add nsw i32 %2, -1, !dbg !10937
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10937
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10937
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10931, metadata !DIExpression()), !dbg !10933
  ret %struct.device* %8, !dbg !10938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10939 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10941, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10942, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i8* %2, metadata !10943, metadata !DIExpression()), !dbg !10946
  %5 = bitcast i32* %4 to i8*, !dbg !10947
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10947
  call void @llvm.dbg.value(metadata i32 0, metadata !10944, metadata !DIExpression()), !dbg !10946
  store i32 0, i32* %4, align 4, !dbg !10948
  call void @llvm.dbg.value(metadata i32* %4, metadata !10944, metadata !DIExpression(DW_OP_deref)), !dbg !10946
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10949
  call void @llvm.dbg.value(metadata i16* %6, metadata !10945, metadata !DIExpression()), !dbg !10946
  %7 = load i32, i32* %4, align 4, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %7, metadata !10944, metadata !DIExpression()), !dbg !10946
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10952
  ret i32 %8, !dbg !10953
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10956, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32* %1, metadata !10957, metadata !DIExpression()), !dbg !10961
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10962
  %4 = load i16*, i16** %3, align 4, !dbg !10962
  call void @llvm.dbg.value(metadata i16* %4, metadata !10958, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32 0, metadata !10959, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32 0, metadata !10960, metadata !DIExpression()), !dbg !10961
  %5 = icmp eq i16* %4, null, !dbg !10963
  br i1 %5, label %22, label %6, !dbg !10965

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10959, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i16* %8, metadata !10958, metadata !DIExpression()), !dbg !10961
  %9 = load i16, i16* %8, align 2, !dbg !10966
  %10 = icmp eq i16 %9, -32768, !dbg !10970
  call void @llvm.dbg.value(metadata i32 undef, metadata !10959, metadata !DIExpression()), !dbg !10961
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10971
  call void @llvm.dbg.value(metadata i16* %11, metadata !10958, metadata !DIExpression()), !dbg !10961
  %12 = zext i1 %10 to i32, !dbg !10972
  %13 = add i32 %7, %12, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %13, metadata !10959, metadata !DIExpression()), !dbg !10961
  %14 = icmp eq i32 %13, 2, !dbg !10973
  br i1 %14, label %15, label %6, !dbg !10974

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10961
  call void @llvm.dbg.value(metadata i32 %16, metadata !10960, metadata !DIExpression()), !dbg !10961
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10975
  %18 = load i16, i16* %17, align 2, !dbg !10975
  %19 = icmp eq i16 %18, 32767, !dbg !10976
  %20 = add i32 %16, 1, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %20, metadata !10960, metadata !DIExpression()), !dbg !10961
  br i1 %19, label %21, label %15, !dbg !10979, !llvm.loop !10980

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10982
  br label %22, !dbg !10983

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10984
  call void @llvm.dbg.value(metadata i16* %23, metadata !10958, metadata !DIExpression()), !dbg !10961
  ret i16* %23, !dbg !10985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !10986 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10989
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10990
  ret i32* %2, !dbg !10991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !10992 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11140, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11142, metadata !DIExpression()), !dbg !11143
  ret void, !dbg !11144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11149, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 %1, metadata !11150, metadata !DIExpression()), !dbg !11151
  ret void, !dbg !11152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11157, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 %1, metadata !11158, metadata !DIExpression()), !dbg !11159
  ret void, !dbg !11160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11165, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata i8* %1, metadata !11166, metadata !DIExpression()), !dbg !11167
  ret i32 -134, !dbg !11168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11173, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.value(metadata i8* %1, metadata !11174, metadata !DIExpression()), !dbg !11175
  ret i32 -134, !dbg !11176
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11180, metadata !DIExpression()), !dbg !11181
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11182, !srcloc !11188
  call void @llvm.dbg.value(metadata i32 undef, metadata !11185, metadata !DIExpression()) #23, !dbg !11189
  call void @llvm.dbg.value(metadata i32 undef, metadata !11186, metadata !DIExpression()) #23, !dbg !11189
  br label %3, !dbg !11190

3:                                                ; preds = %3, %1
  br label %3, !dbg !11191, !llvm.loop !11194
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11201, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11202, metadata !DIExpression()), !dbg !11203
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11204
  unreachable, !dbg !11204
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11207, metadata !DIExpression()), !dbg !11208
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11209
  unreachable, !dbg !11209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11212, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11213, metadata !DIExpression()), !dbg !11216
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11217, !srcloc !11188
  call void @llvm.dbg.value(metadata i32 undef, metadata !11185, metadata !DIExpression()) #23, !dbg !11219
  call void @llvm.dbg.value(metadata i32 undef, metadata !11186, metadata !DIExpression()) #23, !dbg !11219
  call void @llvm.dbg.value(metadata i32 undef, metadata !11214, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11215, metadata !DIExpression()), !dbg !11216
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11220
  br i1 %4, label %6, label %5, !dbg !11222

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !11223
  br label %7, !dbg !11224

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !11223
  br label %7, !dbg !11227

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %8, metadata !11185, metadata !DIExpression()) #23, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %8, metadata !11214, metadata !DIExpression()), !dbg !11216
  %9 = tail call fastcc %struct.k_thread* @k_current_get.92() #26, !dbg !11229
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11215, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 undef, metadata !11230, metadata !DIExpression()) #23, !dbg !11233
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11235, !srcloc !11236
  tail call fastcc void @k_thread_abort.93(%struct.k_thread* noundef %9) #25, !dbg !11237
  ret void, !dbg !11240
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.92() unnamed_addr #9 !dbg !11241 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.94() #26, !dbg !11245
  ret %struct.k_thread* %1, !dbg !11246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.93(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11251, metadata !DIExpression()), !dbg !11252
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11253, !srcloc !11255
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !11256
  ret void, !dbg !11257
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.94() unnamed_addr #9 !dbg !11258 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11259, !srcloc !11261
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !11262
  ret %struct.k_thread* %1, !dbg !11263
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11268, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.value(metadata i32 %1, metadata !11269, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.value(metadata i32 %2, metadata !11270, metadata !DIExpression()), !dbg !11271
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !11272
  ret void, !dbg !11273
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11274 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11278, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i8* %1, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 %2, metadata !11280, metadata !DIExpression()), !dbg !11281
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !11282
  ret void, !dbg !11283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11284 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !11285
  ret void, !dbg !11286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11289, metadata !DIExpression()), !dbg !11290
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !11291
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11292
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11293
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11294
  %4 = trunc i32 %0 to i8, !dbg !11295
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11296
  store i8 %4, i8* %5, align 4, !dbg !11297
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11298
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !11299
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11300
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11301
  store i8* %8, i8** %9, align 4, !dbg !11302
  ret void, !dbg !11303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11306, metadata !DIExpression()), !dbg !11312
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11313
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11307, metadata !DIExpression()), !dbg !11312
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11314
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11308, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i8* null, metadata !11311, metadata !DIExpression()), !dbg !11312
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11315
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11316
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !11317
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !11318
  ret void, !dbg !11319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11320 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11326
  ret i8* %2, !dbg !11327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11333, metadata !DIExpression()), !dbg !11334
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11335
  %3 = load i8, i8* %2, align 1, !dbg !11336
  %4 = and i8 %3, -5, !dbg !11336
  store i8 %4, i8* %2, align 1, !dbg !11336
  ret void, !dbg !11337
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !11338 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !11341
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !11342
  %3 = ptrtoint i8* %2 to i32, !dbg !11351
  %4 = add i32 %3, 2048, !dbg !11352
  call void @llvm.dbg.value(metadata i32 %4, metadata !11346, metadata !DIExpression()) #23, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %4, metadata !11354, metadata !DIExpression()) #23, !dbg !11357
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11359, !srcloc !11360
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11361
  %6 = or i32 %5, 512, !dbg !11361
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11361
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -2, i32 noundef 255) #24, !dbg !11362
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -5, i32 noundef 0) #24, !dbg !11365
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -12, i32 noundef 0) #24, !dbg !11366
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -11, i32 noundef 0) #24, !dbg !11367
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -10, i32 noundef 0) #24, !dbg !11368
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -4, i32 noundef 0) #24, !dbg !11369
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11370
  %8 = or i32 %7, 458752, !dbg !11370
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11370
  tail call void @z_arm_fault_init() #24, !dbg !11371
  tail call void @z_arm_cpu_idle_init() #24, !dbg !11372
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11373
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11376
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !11377
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !11378
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11379
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11379
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11340, metadata !DIExpression()), !dbg !11380
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !11381
  call void @z_device_state_init() #24, !dbg !11382
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !11383
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !11384
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !11385
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11386
  unreachable, !dbg !11386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1953, metadata !DIExpression()), !dbg !11387
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11388
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11388
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11387
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11387
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11389
  br i1 %7, label %8, label %35, !dbg !11390

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1954, metadata !DIExpression()), !dbg !11387
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11391
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11391
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1964, metadata !DIExpression()), !dbg !11392
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11393
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11393
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !11394
  call void @llvm.dbg.value(metadata i32 %14, metadata !1968, metadata !DIExpression()), !dbg !11392
  %15 = icmp eq %struct.device* %11, null, !dbg !11395
  br i1 %15, label %32, label %16, !dbg !11397

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11398
  br i1 %17, label %26, label %18, !dbg !11401

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11402
  call void @llvm.dbg.value(metadata i32 %19, metadata !1968, metadata !DIExpression()), !dbg !11392
  %20 = icmp ult i32 %19, 255, !dbg !11404
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %21, metadata !1968, metadata !DIExpression()), !dbg !11392
  %22 = trunc i32 %21 to i8, !dbg !11405
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11406
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11406
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11407
  store i8 %22, i8* %25, align 1, !dbg !11408
  br label %26, !dbg !11409

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11410
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11410
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11411
  %30 = load i8, i8* %29, align 1, !dbg !11412
  %31 = or i8 %30, 1, !dbg !11412
  store i8 %31, i8* %29, align 1, !dbg !11412
  br label %32, !dbg !11413

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11414
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1954, metadata !DIExpression()), !dbg !11387
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11389
  br i1 %34, label %8, label %35, !dbg !11390, !llvm.loop !11415

35:                                               ; preds = %32, %1
  ret void, !dbg !11417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.101(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 %1, metadata !11421, metadata !DIExpression()), !dbg !11422
  %3 = trunc i32 %1 to i8, !dbg !11423
  %4 = shl i8 %3, 4, !dbg !11423
  %5 = and i32 %0, 15, !dbg !11426
  %6 = add nsw i32 %5, -4, !dbg !11427
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11428
  store volatile i8 %4, i8* %7, align 1, !dbg !11429
  ret void, !dbg !11430
}

; Function Attrs: optsize
declare !dbg !11431 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !11432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11435, metadata !DIExpression()), !dbg !11436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11437
  store i8 1, i8* %2, align 1, !dbg !11438
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11439
  store i8 1, i8* %3, align 4, !dbg !11440
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11441
  store i32 0, i32* %4, align 4, !dbg !11442
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11443
  store i32 0, i32* %5, align 4, !dbg !11444
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11445
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11446
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11447
  ret void, !dbg !11448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11449 {
  tail call void @z_sched_init() #24, !dbg !11454
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11455
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i32 0, i32 0)) #24, !dbg !11456
  call void @llvm.dbg.value(metadata i8* %1, metadata !11453, metadata !DIExpression()), !dbg !11457
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11458
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11459
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !11460
  ret i8* %1, !dbg !11461
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !11462 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11466, metadata !DIExpression()), !dbg !11467
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !11468
  unreachable, !dbg !11469
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11472, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %1, metadata !11473, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %2, metadata !11474, metadata !DIExpression()), !dbg !11475
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11476
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !11477
  tail call void @boot_banner() #24, !dbg !11478
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !11479
  tail call void @z_init_static_threads() #24, !dbg !11480
  tail call void @main() #24, !dbg !11481
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11482
  %5 = and i8 %4, -2, !dbg !11482
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11482
  ret void, !dbg !11483
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11484 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11494, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i8* %1, metadata !11495, metadata !DIExpression()), !dbg !11496
  ret void, !dbg !11497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11498 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11500, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i8* %1, metadata !11501, metadata !DIExpression()), !dbg !11502
  ret void, !dbg !11503
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11504 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11505, !srcloc !11512
  call void @llvm.dbg.value(metadata i32 %1, metadata !11508, metadata !DIExpression()) #23, !dbg !11513
  %2 = icmp ne i32 %1, 0, !dbg !11514
  ret i1 %2, !dbg !11515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11516 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11517
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11518
  %3 = load i8, i8* %2, align 4, !dbg !11519
  %4 = or i8 %3, 1, !dbg !11519
  store i8 %4, i8* %2, align 4, !dbg !11519
  ret void, !dbg !11520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11521 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11522
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11523
  %3 = load i8, i8* %2, align 4, !dbg !11524
  %4 = and i8 %3, -2, !dbg !11524
  store i8 %4, i8* %2, align 4, !dbg !11524
  ret void, !dbg !11525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11526 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11527
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11528
  %3 = load i8, i8* %2, align 4, !dbg !11528
  %4 = and i8 %3, 1, !dbg !11529
  %5 = icmp ne i8 %4, 0, !dbg !11530
  ret i1 %5, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11536, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i8* %1, metadata !11537, metadata !DIExpression()), !dbg !11538
  ret i32 -88, !dbg !11539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11540 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11544, metadata !DIExpression()), !dbg !11545
  ret i8* null, !dbg !11546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11551, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i8* %1, metadata !11552, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32 %2, metadata !11553, metadata !DIExpression()), !dbg !11554
  ret i32 -88, !dbg !11555
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2091, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i8* %1, metadata !2092, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 %2, metadata !2093, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 0, metadata !2094, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i8 undef, metadata !2096, metadata !DIExpression()), !dbg !11556
  %4 = icmp eq i8* %1, null, !dbg !11557
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11559
  br i1 %6, label %46, label %7, !dbg !11559

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11560
  %9 = load i8, i8* %8, align 1, !dbg !11560
  call void @llvm.dbg.value(metadata i8 %9, metadata !2096, metadata !DIExpression()), !dbg !11556
  %10 = add i32 %2, -1, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %10, metadata !2093, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i8 0, metadata !2097, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.value(metadata i8 %9, metadata !2096, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 0, metadata !2094, metadata !DIExpression()), !dbg !11556
  %11 = icmp eq i8 %9, 0, !dbg !11563
  br i1 %11, label %12, label %15, !dbg !11565

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11566
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11567
  store i8 0, i8* %14, align 1, !dbg !11568
  br label %46, !dbg !11569

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2097, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.value(metadata i8 %17, metadata !2096, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 %18, metadata !2094, metadata !DIExpression()), !dbg !11556
  %19 = zext i8 %17 to i32, !dbg !11570
  %20 = zext i8 %16 to i32, !dbg !11571
  %21 = shl nuw i32 1, %20, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %21, metadata !2095, metadata !DIExpression()), !dbg !11556
  %22 = and i32 %21, %19, !dbg !11573
  %23 = icmp eq i32 %22, 0, !dbg !11575
  br i1 %23, label %42, label %24, !dbg !11576

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11577
  %26 = sub i32 %10, %18, !dbg !11578
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11579
  %28 = load i8*, i8** %27, align 4, !dbg !11579
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11580
  %30 = load i32, i32* %29, align 4, !dbg !11580
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11581
  %32 = add i32 %31, %18, !dbg !11582
  call void @llvm.dbg.value(metadata i32 %32, metadata !2094, metadata !DIExpression()), !dbg !11556
  %33 = trunc i32 %21 to i8, !dbg !11583
  %34 = xor i8 %33, -1, !dbg !11583
  %35 = and i8 %17, %34, !dbg !11583
  call void @llvm.dbg.value(metadata i8 %35, metadata !2096, metadata !DIExpression()), !dbg !11556
  %36 = icmp eq i8 %35, 0, !dbg !11584
  br i1 %36, label %12, label %37, !dbg !11586

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11587
  %39 = sub i32 %10, %32, !dbg !11589
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !11590
  %41 = add i32 %40, %32, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %41, metadata !2094, metadata !DIExpression()), !dbg !11556
  br label %42, !dbg !11592

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11556
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11556
  call void @llvm.dbg.value(metadata i8 %44, metadata !2096, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 %43, metadata !2094, metadata !DIExpression()), !dbg !11556
  %45 = add i8 %16, 1, !dbg !11593
  call void @llvm.dbg.value(metadata i8 %45, metadata !2097, metadata !DIExpression()), !dbg !11562
  br label %15, !dbg !11565

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.103, i32 0, i32 0), %3 ], !dbg !11556
  ret i8* %47, !dbg !11594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11595 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11599, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i32 %1, metadata !11600, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i8* %2, metadata !11601, metadata !DIExpression()), !dbg !11604
  call void @llvm.dbg.value(metadata i32 %3, metadata !11602, metadata !DIExpression()), !dbg !11604
  %5 = icmp ult i32 %1, %3, !dbg !11605
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11605
  call void @llvm.dbg.value(metadata i32 %6, metadata !11603, metadata !DIExpression()), !dbg !11604
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11606
  ret i32 %6, !dbg !11607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11612, metadata !DIExpression()), !dbg !11613
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11614
  ret void, !dbg !11615
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11625, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11626, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i32 %2, metadata !11627, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11628, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8* %4, metadata !11629, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8* %5, metadata !11630, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8* %6, metadata !11631, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i32 %7, metadata !11632, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i32 %8, metadata !11633, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8* undef, metadata !11634, metadata !DIExpression()), !dbg !11636
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11637
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11638
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11639
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11640
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11641
  call void @llvm.dbg.value(metadata i8* %13, metadata !11635, metadata !DIExpression()), !dbg !11636
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11642
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11643
  store i8* null, i8** %14, align 4, !dbg !11644
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11645
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11645
  br i1 %16, label %20, label %17, !dbg !11647

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11648
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11648
  br label %20, !dbg !11649

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11636
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11650
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11652
  ret i8* %13, !dbg !11653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #3 !dbg !11654 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11659, metadata !DIExpression()), !dbg !11660
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11661
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11662
  ret void, !dbg !11663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11664 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %1, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %2, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %3, metadata !11672, metadata !DIExpression()), !dbg !11673
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11674
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11675
  %6 = trunc i32 %3 to i8, !dbg !11676
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11677
  store i8 %6, i8* %7, align 4, !dbg !11678
  %8 = trunc i32 %2 to i8, !dbg !11679
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11680
  store i8 %8, i8* %9, align 1, !dbg !11681
  %10 = trunc i32 %1 to i8, !dbg !11682
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11683
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11683
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11683
  store i8 %10, i8* %13, align 2, !dbg !11684
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11685
  store i8 0, i8* %14, align 1, !dbg !11686
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11687
  ret void, !dbg !11688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !11689 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11693, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11694, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %2, metadata !11695, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 0, metadata !11700, metadata !DIExpression()), !dbg !11701
  %4 = add i32 %2, 7, !dbg !11702
  %5 = and i32 %4, -8, !dbg !11702
  %6 = add i32 %5, 64, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %6, metadata !11696, metadata !DIExpression()), !dbg !11701
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.113(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11704
  call void @llvm.dbg.value(metadata i8* %7, metadata !11699, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %5, metadata !11697, metadata !DIExpression()), !dbg !11701
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11705
  call void @llvm.dbg.value(metadata i8* %8, metadata !11698, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 0, metadata !11700, metadata !DIExpression()), !dbg !11701
  %9 = ptrtoint i8* %7 to i32, !dbg !11706
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11707
  store i32 %9, i32* %10, align 4, !dbg !11708
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11709
  store i32 %5, i32* %11, align 4, !dbg !11710
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11711
  store i32 0, i32* %12, align 4, !dbg !11712
  call void @llvm.dbg.value(metadata i8* %8, metadata !11698, metadata !DIExpression()), !dbg !11701
  ret i8* %8, !dbg !11713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.113(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11714 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11718, metadata !DIExpression()), !dbg !11719
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11720
  ret i8* %2, !dbg !11721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11722 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11727, metadata !DIExpression()), !dbg !11728
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11729
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11730
  ret void, !dbg !11731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11732 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11734, metadata !DIExpression()), !dbg !11735
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11736
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11737
  ret void, !dbg !11738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11739 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11743, metadata !DIExpression()), !dbg !11744
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11745
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11746
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11747
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11748
  ret void, !dbg !11749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !11750 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11755, metadata !DIExpression()), !dbg !11756
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11757
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11758
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11759
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11760
  ret void, !dbg !11761
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11762 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11779, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11770, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11771, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 %2, metadata !11772, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11773, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %4, metadata !11774, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %5, metadata !11775, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i8* %6, metadata !11776, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 %7, metadata !11777, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 %8, metadata !11778, metadata !DIExpression()), !dbg !11780
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11781
  %13 = icmp eq i64 %11, -1, !dbg !11782
  br i1 %13, label %15, label %14, !dbg !11784

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11785
  br label %15, !dbg !11787

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11789 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11794, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11793, metadata !DIExpression()), !dbg !11795
  %4 = icmp eq i64 %3, 0, !dbg !11796
  br i1 %4, label %5, label %6, !dbg !11798

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11799
  br label %7, !dbg !11801

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11802
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11809, metadata !DIExpression()), !dbg !11810
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11811, !srcloc !11813
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11814
  ret void, !dbg !11815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11816 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11819, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11818, metadata !DIExpression()), !dbg !11820
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11821
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11824 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11826, metadata !DIExpression()), !dbg !11846
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11847

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11848
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11844, metadata !DIExpression()), !dbg !11849
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11850

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11826, metadata !DIExpression()), !dbg !11846
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11851
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11851
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11854
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11854
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11855
  %9 = load i32, i32* %8, align 4, !dbg !11855
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11856
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11856
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11857
  %13 = load i8*, i8** %12, align 4, !dbg !11857
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11858
  %15 = load i8*, i8** %14, align 4, !dbg !11858
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11859
  %17 = load i8*, i8** %16, align 4, !dbg !11859
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11860
  %19 = load i32, i32* %18, align 4, !dbg !11860
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11861
  %21 = load i32, i32* %20, align 4, !dbg !11861
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !11862
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11863
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11864
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11865
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11865
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11866
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11826, metadata !DIExpression()), !dbg !11846
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11867
  br i1 %27, label %2, label %1, !dbg !11847, !llvm.loop !11869

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11848
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11844, metadata !DIExpression()), !dbg !11849
  br label %29, !dbg !11850

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !11871
  ret void, !dbg !11872

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11844, metadata !DIExpression()), !dbg !11849
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11873
  %33 = load i32, i32* %32, align 4, !dbg !11873
  %34 = icmp eq i32 %33, -1, !dbg !11877
  br i1 %34, label %43, label %35, !dbg !11878

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11879
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11879
  %38 = icmp sgt i32 %33, 0, !dbg !11881
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11881
  %40 = zext i32 %39 to i64, !dbg !11881
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !11881
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11882
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !11882
  br label %43, !dbg !11883

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11884
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11844, metadata !DIExpression()), !dbg !11849
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11885
  br i1 %45, label %30, label %29, !dbg !11850, !llvm.loop !11887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !11889 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11894, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i64 %0, metadata !11896, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 1000, metadata !11901, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 10000, metadata !11902, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8 1, metadata !11903, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8 0, metadata !11904, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8 1, metadata !11905, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8 0, metadata !11906, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8 1, metadata !11907, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i8 0, metadata !11908, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i64 0, metadata !11909, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i64 0, metadata !11909, metadata !DIExpression()), !dbg !11913
  %2 = mul i64 %0, 10, !dbg !11915
  ret i64 %2, !dbg !11921
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !11922 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11924, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i8* %1, metadata !11925, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i8* %2, metadata !11926, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.value(metadata i8* %3, metadata !11927, metadata !DIExpression()), !dbg !11928
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11929
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11930
  %7 = load i8, i8* %6, align 4, !dbg !11931
  %8 = or i8 %7, 4, !dbg !11931
  store i8 %8, i8* %6, align 4, !dbg !11931
  tail call void @z_thread_essential_clear() #25, !dbg !11932
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11933
  unreachable, !dbg !11933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11934 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11938, metadata !DIExpression()), !dbg !11939
  ret i32 -134, !dbg !11940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11945, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 %1, metadata !11946, metadata !DIExpression()), !dbg !11947
  ret i32 -134, !dbg !11948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !11949 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11956, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11957, metadata !DIExpression()), !dbg !11958
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11959
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11961
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11958
  ret i32 %6, !dbg !11962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !11963 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11967, metadata !DIExpression()), !dbg !11968
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11969
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11968
  ret i32 %3, !dbg !11971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11972 {
  tail call void @sys_clock_idle_exit() #24, !dbg !11974
  ret void, !dbg !11975
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !11976 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11978, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i8* %1, metadata !11979, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i8* %2, metadata !11980, metadata !DIExpression()), !dbg !11981
  br label %4, !dbg !11982

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11983, !srcloc !11990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11986, metadata !DIExpression()) #23, !dbg !11991
  call void @llvm.dbg.value(metadata i32 undef, metadata !11987, metadata !DIExpression()) #23, !dbg !11991
  tail call fastcc void @k_cpu_idle() #25, !dbg !11992
  br label %4, !dbg !11982, !llvm.loop !11993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11995 {
  tail call void @arch_cpu_idle() #24, !dbg !11996
  ret void, !dbg !11997
}

; Function Attrs: optsize
declare !dbg !11998 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !11999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12003, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12004, metadata !DIExpression()), !dbg !12007
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12008
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12008
  %5 = load i8, i8* %4, align 2, !dbg !12008
  call void @llvm.dbg.value(metadata i8 %5, metadata !12005, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12007
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12009
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12009
  %8 = load i8, i8* %7, align 2, !dbg !12009
  call void @llvm.dbg.value(metadata i8 %8, metadata !12006, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12007
  %9 = icmp eq i8 %8, %5, !dbg !12010
  %10 = sext i8 %5 to i32, !dbg !12012
  %11 = sext i8 %8 to i32, !dbg !12012
  %12 = sub nsw i32 %11, %10, !dbg !12012
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12012
  ret i32 %13, !dbg !12013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12018, metadata !DIExpression()), !dbg !12019
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !12020
  %3 = icmp eq i32 %2, 0, !dbg !12022
  br i1 %3, label %8, label %4, !dbg !12023

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !12024
  %6 = add i32 %5, %2, !dbg !12026
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12027
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !12028
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !12029
  br label %8, !dbg !12030

8:                                                ; preds = %4, %1
  ret void, !dbg !12031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !12032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12036, metadata !DIExpression()), !dbg !12038
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %1, metadata !12037, metadata !DIExpression()), !dbg !12038
  ret i32 %1, !dbg !12040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12045, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %1, metadata !12046, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12047, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12063
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12065, !srcloc !12071
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %4, metadata !12068, metadata !DIExpression()) #23, !dbg !12072
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12072
  call void @llvm.dbg.value(metadata i32 %4, metadata !12062, metadata !DIExpression()) #23, !dbg !12063
  call void @llvm.dbg.value(metadata i32 %4, metadata !12053, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata i32 undef, metadata !12047, metadata !DIExpression()), !dbg !12055
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12073
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !12076
  %6 = icmp sgt i32 %0, 0, !dbg !12077
  %7 = icmp sgt i32 %5, 2, !dbg !12079
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12079
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12079
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12080
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12081
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %4, metadata !12083, metadata !DIExpression()) #23, !dbg !12089
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %4, metadata !12091, metadata !DIExpression()) #23, !dbg !12094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12096, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !12047, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata i32 undef, metadata !12047, metadata !DIExpression()), !dbg !12055
  ret void, !dbg !12098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12101, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.value(metadata i32 %0, metadata !12103, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12118
  call void @llvm.dbg.value(metadata i32 1000, metadata !12106, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i32 10000, metadata !12107, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i8 1, metadata !12108, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i1 true, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12118
  call void @llvm.dbg.value(metadata i1 true, metadata !12110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12118
  call void @llvm.dbg.value(metadata i8 0, metadata !12111, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i1 true, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12118
  call void @llvm.dbg.value(metadata i1 false, metadata !12113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12118
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !12118
  %2 = mul i32 %0, 10, !dbg !12120
  ret i32 %2, !dbg !12126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12129, metadata !DIExpression()), !dbg !12131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12132
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12134, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !12136
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %3, metadata !12130, metadata !DIExpression()), !dbg !12131
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12137
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12139
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12140
  br i1 %6, label %7, label %8, !dbg !12141

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !12144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !12146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12148, !srcloc !12097
  br label %24, !dbg !12149

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12150
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !12151
  %10 = icmp eq i32 %9, 0, !dbg !12151
  br i1 %10, label %21, label %11, !dbg !12153

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !12154
  br i1 %12, label %13, label %21, !dbg !12155

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12156
  %15 = icmp sgt i32 %14, %0, !dbg !12159
  br i1 %15, label %19, label %16, !dbg !12160

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12161
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %18, metadata !12130, metadata !DIExpression()), !dbg !12131
  br label %22, !dbg !12163

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12164
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12164
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12166
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12131
  call void @llvm.dbg.value(metadata i32 %23, metadata !12130, metadata !DIExpression()), !dbg !12131
  call void @llvm.dbg.value(metadata i32 %23, metadata !12083, metadata !DIExpression()) #23, !dbg !12168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %23, metadata !12091, metadata !DIExpression()) #23, !dbg !12170
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12172, !srcloc !12097
  br label %24, !dbg !12173

24:                                               ; preds = %22, %7
  ret void, !dbg !12173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12178, metadata !DIExpression()), !dbg !12180
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !12181
  %3 = icmp eq i32 %2, 0, !dbg !12181
  br i1 %3, label %16, label %4, !dbg !12182

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12183
  br i1 %5, label %16, label %6, !dbg !12184

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12185
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12185
  %9 = load i8, i8* %8, align 2, !dbg !12185
  %10 = sext i8 %9 to i32, !dbg !12186
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12187
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !12188
  br i1 %12, label %16, label %13, !dbg !12189

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !12190
  %15 = xor i1 %14, true, !dbg !12191
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12180
  call void @llvm.dbg.value(metadata i1 %17, metadata !12179, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12180
  ret i1 %17, !dbg !12192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12193 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12197, metadata !DIExpression()), !dbg !12199
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12200
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12198, metadata !DIExpression()), !dbg !12199
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !12201
  br i1 %3, label %5, label %4, !dbg !12203

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !12204
  br label %5, !dbg !12206

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12197, metadata !DIExpression()), !dbg !12199
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12207
  ret i32 %6, !dbg !12208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12211, metadata !DIExpression()), !dbg !12213
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12214
  %3 = load i8, i8* %2, align 1, !dbg !12214
  call void @llvm.dbg.value(metadata i8 %3, metadata !12212, metadata !DIExpression()), !dbg !12213
  %4 = and i8 %3, 31, !dbg !12215
  %5 = icmp ne i8 %4, 0, !dbg !12216
  ret i1 %5, !dbg !12217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12220, metadata !DIExpression()), !dbg !12221
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12222
  br i1 %2, label %3, label %7, !dbg !12224

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12225, metadata !DIExpression()) #23, !dbg !12228
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12231
  %5 = load i8, i8* %4, align 1, !dbg !12232
  %6 = and i8 %5, 127, !dbg !12232
  store i8 %6, i8* %4, align 1, !dbg !12232
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12233, metadata !DIExpression()) #23, !dbg !12236
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12240
  br label %7, !dbg !12241

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12242, metadata !DIExpression()) #23, !dbg !12245
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12247
  %9 = load i8, i8* %8, align 1, !dbg !12248
  %10 = or i8 %9, -128, !dbg !12248
  store i8 %10, i8* %8, align 1, !dbg !12248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12249, metadata !DIExpression()) #23, !dbg !12252
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12256, metadata !DIExpression()) #23, !dbg !12264
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12262, metadata !DIExpression()) #23, !dbg !12264
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12266
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12263, metadata !DIExpression()) #23, !dbg !12264
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12268
  br i1 %12, label %23, label %13, !dbg !12266

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12263, metadata !DIExpression()) #23, !dbg !12264
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12270
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12263, metadata !DIExpression()) #23, !dbg !12264
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !12271
  %17 = icmp sgt i32 %16, 0, !dbg !12274
  br i1 %17, label %18, label %20, !dbg !12275

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12276
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !12278
  br label %25, !dbg !12279

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !12268
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12263, metadata !DIExpression()) #23, !dbg !12264
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12268
  br i1 %22, label %23, label %13, !dbg !12266, !llvm.loop !12280

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12282
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !12283
  br label %25, !dbg !12284

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12285
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12286
  %28 = zext i1 %27 to i32, !dbg !12286
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !12287
  ret void, !dbg !12288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12289 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12291, metadata !DIExpression()), !dbg !12292
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !12293
  ret i1 %2, !dbg !12294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !12295 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12297, metadata !DIExpression()), !dbg !12299
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12298, metadata !DIExpression()), !dbg !12299
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12300
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !12301
  ret void, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12303 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12307, metadata !DIExpression()), !dbg !12308
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !12309
  br i1 %2, label %6, label %3, !dbg !12309

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12310
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12310
  br label %6, !dbg !12309

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12309
  ret %struct._dnode* %7, !dbg !12311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12312 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12316, metadata !DIExpression()), !dbg !12320
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12317, metadata !DIExpression()), !dbg !12320
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12321
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12321
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12318, metadata !DIExpression()), !dbg !12320
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12322
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12323
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12324
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12325
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12326
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12327
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12328
  ret void, !dbg !12329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12330 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12334, metadata !DIExpression()), !dbg !12336
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12335, metadata !DIExpression()), !dbg !12336
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12337
  br i1 %3, label %6, label %4, !dbg !12338

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !12339
  br label %6, !dbg !12338

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12338
  ret %struct._dnode* %7, !dbg !12340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12341 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12345, metadata !DIExpression()), !dbg !12348
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12346, metadata !DIExpression()), !dbg !12348
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12349
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12349
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12347, metadata !DIExpression()), !dbg !12348
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12350
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12351
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12352
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12353
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12354
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12355
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12356
  ret void, !dbg !12357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12360, metadata !DIExpression()), !dbg !12362
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12363
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12370, metadata !DIExpression()) #23, !dbg !12372
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12373
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12374
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12374
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12361, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12375, metadata !DIExpression()) #23, !dbg !12381
  call void @llvm.dbg.value(metadata i32 %0, metadata !12380, metadata !DIExpression()) #23, !dbg !12381
  %6 = icmp eq i32 %0, 0, !dbg !12384
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12386
  br i1 %6, label %8, label %15, !dbg !12387

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !12388
  br i1 %9, label %15, label %10, !dbg !12390

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !12391
  br i1 %11, label %15, label %12, !dbg !12393

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !12394
  %14 = icmp eq i32 %13, 0, !dbg !12394
  br i1 %14, label %18, label %15, !dbg !12396

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12397
  br i1 %16, label %18, label %17, !dbg !12400

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12401
  br label %18, !dbg !12403

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12386
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12386
  ret void, !dbg !12404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !12405 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12409, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12410, metadata !DIExpression()), !dbg !12412
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !12413
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12411, metadata !DIExpression()), !dbg !12412
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12410, metadata !DIExpression()), !dbg !12412
  ret %struct.k_thread* %3, !dbg !12414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12417, metadata !DIExpression()), !dbg !12418
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12419
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12420
  %4 = xor i1 %3, true, !dbg !12421
  ret i1 %4, !dbg !12422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12425, metadata !DIExpression()), !dbg !12426
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12427
  %3 = load i16, i16* %2, align 2, !dbg !12427
  %4 = icmp ult i16 %3, 128, !dbg !12428
  %5 = zext i1 %4 to i32, !dbg !12428
  ret i32 %5, !dbg !12429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12430 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12436, metadata !DIExpression()), !dbg !12437
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12438
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !12439
  %4 = xor i1 %3, true, !dbg !12440
  ret i1 %4, !dbg !12441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12442 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12448, metadata !DIExpression()), !dbg !12449
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12450
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12450
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12451
  ret i1 %4, !dbg !12452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12453 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12455, metadata !DIExpression()), !dbg !12457
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12456, metadata !DIExpression()), !dbg !12457
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12458
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12458
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12459
  br i1 %5, label %9, label %6, !dbg !12460

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12461
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12461
  br label %9, !dbg !12460

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12460
  ret %struct._dnode* %10, !dbg !12462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12463 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12467, metadata !DIExpression()), !dbg !12468
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12469
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12469
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12470
  ret i1 %4, !dbg !12471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !12472 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12476, metadata !DIExpression()), !dbg !12479
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12480
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12480
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12477, metadata !DIExpression()), !dbg !12479
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12481
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12481
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12478, metadata !DIExpression()), !dbg !12479
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12482
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12483
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12484
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12485
  tail call fastcc void @sys_dnode_init.118(%struct._dnode* noundef %0) #25, !dbg !12486
  ret void, !dbg !12487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.118(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !12488 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12490, metadata !DIExpression()), !dbg !12491
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12492
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12493
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12494
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12495
  ret void, !dbg !12496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12501, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata i32 128, metadata !12502, metadata !DIExpression()), !dbg !12503
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12504
  %3 = load i8, i8* %2, align 1, !dbg !12504
  %4 = icmp slt i8 %3, 0, !dbg !12505
  ret i1 %4, !dbg !12506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12511, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %1, metadata !12512, metadata !DIExpression()), !dbg !12513
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12514
  ret i1 %3, !dbg !12515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12518, metadata !DIExpression()), !dbg !12519
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12520
  ret i1 %2, !dbg !12521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12524, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i32 %1, metadata !12525, metadata !DIExpression()), !dbg !12526
  %3 = icmp slt i32 %0, %1, !dbg !12527
  ret i1 %3, !dbg !12528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12531, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 0, metadata !12532, metadata !DIExpression()), !dbg !12536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12537
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12539, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12539
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !12541
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12541
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !12537
  call void @llvm.dbg.value(metadata i32 %3, metadata !12534, metadata !DIExpression()), !dbg !12536
  call void @llvm.dbg.value(metadata i32 undef, metadata !12532, metadata !DIExpression()), !dbg !12536
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12542
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !12547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12547
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !12549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12551, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !12532, metadata !DIExpression()), !dbg !12536
  call void @llvm.dbg.value(metadata i32 undef, metadata !12532, metadata !DIExpression()), !dbg !12536
  ret void, !dbg !12552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12555, metadata !DIExpression()), !dbg !12556
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12557
  br i1 %2, label %24, label %3, !dbg !12559

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12560
  br i1 %4, label %5, label %24, !dbg !12561

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12242, metadata !DIExpression()) #23, !dbg !12562
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12565
  %7 = load i8, i8* %6, align 1, !dbg !12566
  %8 = or i8 %7, -128, !dbg !12566
  store i8 %8, i8* %6, align 1, !dbg !12566
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12249, metadata !DIExpression()) #23, !dbg !12567
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12256, metadata !DIExpression()) #23, !dbg !12569
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12262, metadata !DIExpression()) #23, !dbg !12569
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12571
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12263, metadata !DIExpression()) #23, !dbg !12569
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12572
  br i1 %10, label %21, label %11, !dbg !12571

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12263, metadata !DIExpression()) #23, !dbg !12569
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12573
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12263, metadata !DIExpression()) #23, !dbg !12569
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12574
  %15 = icmp sgt i32 %14, 0, !dbg !12575
  br i1 %15, label %16, label %18, !dbg !12576

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12577
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12578
  br label %23, !dbg !12579

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12572
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12263, metadata !DIExpression()) #23, !dbg !12569
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12572
  br i1 %20, label %21, label %11, !dbg !12571, !llvm.loop !12580

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12582
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12583
  br label %23, !dbg !12584

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12585
  br label %24, !dbg !12586

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12588 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12590, metadata !DIExpression()), !dbg !12591
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12592
  br i1 %2, label %6, label %3, !dbg !12593

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12594
  %5 = xor i1 %4, true, !dbg !12593
  br label %6, !dbg !12593

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12596 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12598, metadata !DIExpression()), !dbg !12602
  call void @llvm.dbg.value(metadata i32 0, metadata !12599, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12604
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12606, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12606
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !12608
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %3, metadata !12601, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata i32 undef, metadata !12599, metadata !DIExpression()), !dbg !12603
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12609
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !12614
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12616, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !12599, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata i32 undef, metadata !12599, metadata !DIExpression()), !dbg !12603
  ret void, !dbg !12617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12620, metadata !DIExpression()), !dbg !12622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12623
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12625, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12625
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !12627
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !12623
  call void @llvm.dbg.value(metadata i32 %3, metadata !12621, metadata !DIExpression()), !dbg !12622
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12628
  br i1 %4, label %5, label %6, !dbg !12630

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !12631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12631
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !12634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12636, !srcloc !12097
  br label %8, !dbg !12637

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.123(%struct.k_thread* noundef %0) #25, !dbg !12638
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12639
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12640
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12640
  br label %8, !dbg !12641

8:                                                ; preds = %6, %5
  ret void, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12644, metadata !DIExpression()), !dbg !12645
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12646
  %3 = load i8, i8* %2, align 1, !dbg !12646
  %4 = and i8 %3, 4, !dbg !12647
  %5 = icmp eq i8 %4, 0, !dbg !12648
  ret i1 %5, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.123(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12652, metadata !DIExpression()), !dbg !12653
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12654
  %3 = load i8, i8* %2, align 1, !dbg !12655
  %4 = and i8 %3, -5, !dbg !12655
  store i8 %4, i8* %2, align 1, !dbg !12655
  ret void, !dbg !12656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12657 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12660, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12659, metadata !DIExpression()), !dbg !12661
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12662
  br i1 %4, label %5, label %9, !dbg !12664

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12665
  br i1 %6, label %7, label %9, !dbg !12666

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12667, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12672, metadata !DIExpression()) #23, !dbg !12673
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12676
  br label %10, !dbg !12677

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !12678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12678
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !12681
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12683, !srcloc !12097
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12689, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 %0, metadata !12691, metadata !DIExpression()), !dbg !12696
  %2 = icmp eq i32 %0, 0, !dbg !12698
  br i1 %2, label %3, label %6, !dbg !12699

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12700, !srcloc !12707
  call void @llvm.dbg.value(metadata i32 %4, metadata !12703, metadata !DIExpression()) #23, !dbg !12708
  %5 = icmp eq i32 %4, 0, !dbg !12709
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12690
  ret i1 %7, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12711 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12714
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12713, metadata !DIExpression()), !dbg !12715
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12716
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12717
  ret i1 %3, !dbg !12718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12721, metadata !DIExpression()), !dbg !12723
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %2, metadata !12722, metadata !DIExpression()), !dbg !12723
  ret i32 %2, !dbg !12725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12728, metadata !DIExpression()), !dbg !12732
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12733
  call void @llvm.dbg.value(metadata i32 0, metadata !12729, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12735
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12737, !srcloc !12071
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12737
  call void @llvm.dbg.value(metadata i32 %4, metadata !12068, metadata !DIExpression()) #23, !dbg !12739
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %4, metadata !12062, metadata !DIExpression()) #23, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %4, metadata !12731, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()), !dbg !12734
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12740
  br i1 %5, label %6, label %10, !dbg !12744

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12225, metadata !DIExpression()) #23, !dbg !12745
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12748
  %8 = load i8, i8* %7, align 1, !dbg !12749
  %9 = and i8 %8, 127, !dbg !12749
  store i8 %9, i8* %7, align 1, !dbg !12749
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12233, metadata !DIExpression()) #23, !dbg !12750
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12752
  br label %10, !dbg !12753

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12754
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12755
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12756
  %13 = zext i1 %12 to i32, !dbg !12756
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %4, metadata !12083, metadata !DIExpression()) #23, !dbg !12758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12758
  call void @llvm.dbg.value(metadata i32 %4, metadata !12091, metadata !DIExpression()) #23, !dbg !12760
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12762, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !12729, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i32 undef, metadata !12729, metadata !DIExpression()), !dbg !12734
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12763
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12765
  br i1 %15, label %16, label %17, !dbg !12766

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12767
  br label %17, !dbg !12769

17:                                               ; preds = %16, %10
  ret void, !dbg !12770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12773, metadata !DIExpression()), !dbg !12774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12775
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12776
  ret i32 %3, !dbg !12777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12778 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12780, metadata !DIExpression()), !dbg !12781
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12782
  %3 = load i8, i8* %2, align 1, !dbg !12783
  %4 = or i8 %3, 16, !dbg !12783
  store i8 %4, i8* %2, align 1, !dbg !12783
  ret void, !dbg !12784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12785 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12786, !srcloc !12071
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %2, metadata !12068, metadata !DIExpression()) #23, !dbg !12788
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12788
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12789
  ret void, !dbg !12790
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12793, metadata !DIExpression()), !dbg !12794
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12795
  br i1 %2, label %3, label %5, !dbg !12797

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12798
  br label %6, !dbg !12800

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12091, metadata !DIExpression()) #23, !dbg !12801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12804, !srcloc !12097
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12808, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12811
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12813, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12813
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !12815
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12815
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %3, metadata !12809, metadata !DIExpression()), !dbg !12810
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12816
  br i1 %4, label %6, label %5, !dbg !12818

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !12819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12819
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !12822
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12824, !srcloc !12097
  br label %8, !dbg !12825

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12826
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12827
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12828
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12828
  br label %8, !dbg !12829

8:                                                ; preds = %6, %5
  ret void, !dbg !12829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12832, metadata !DIExpression()), !dbg !12833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12834
  %3 = load i8, i8* %2, align 1, !dbg !12834
  %4 = and i8 %3, 16, !dbg !12835
  %5 = icmp ne i8 %4, 0, !dbg !12836
  ret i1 %5, !dbg !12837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12838 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12840, metadata !DIExpression()), !dbg !12841
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12842
  %3 = load i8, i8* %2, align 1, !dbg !12843
  %4 = and i8 %3, -17, !dbg !12843
  store i8 %4, i8* %2, align 1, !dbg !12843
  ret void, !dbg !12844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12845 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12855, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12853, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12854, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 0, metadata !12856, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12861
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12863, !srcloc !12071
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %5, metadata !12068, metadata !DIExpression()) #23, !dbg !12865
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %5, metadata !12062, metadata !DIExpression()) #23, !dbg !12861
  call void @llvm.dbg.value(metadata i32 %5, metadata !12858, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata i32 undef, metadata !12856, metadata !DIExpression()), !dbg !12860
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12866
  call void @llvm.dbg.value(metadata i32 %5, metadata !12083, metadata !DIExpression()) #23, !dbg !12869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12869
  call void @llvm.dbg.value(metadata i32 %5, metadata !12091, metadata !DIExpression()) #23, !dbg !12871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12873, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !12856, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata i32 undef, metadata !12856, metadata !DIExpression()), !dbg !12860
  ret void, !dbg !12874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12875 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12879, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12877, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12878, metadata !DIExpression()), !dbg !12880
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12881
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12888, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12889, metadata !DIExpression()), !dbg !12890
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !12891
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !12892
  %3 = icmp eq %union.anon* %1, null, !dbg !12893
  br i1 %3, label %21, label %4, !dbg !12895

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12896
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12898
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12899
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12256, metadata !DIExpression()) #23, !dbg !12900
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12262, metadata !DIExpression()) #23, !dbg !12900
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !12902
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12263, metadata !DIExpression()) #23, !dbg !12900
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12903
  br i1 %8, label %19, label %9, !dbg !12902

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12263, metadata !DIExpression()) #23, !dbg !12900
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12904
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12263, metadata !DIExpression()) #23, !dbg !12900
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !12905
  %13 = icmp sgt i32 %12, 0, !dbg !12906
  br i1 %13, label %14, label %16, !dbg !12907

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12908
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !12909
  br label %21, !dbg !12910

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !12903
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12263, metadata !DIExpression()) #23, !dbg !12900
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12903
  br i1 %18, label %19, label %9, !dbg !12902, !llvm.loop !12911

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12913
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !12914
  br label %21, !dbg !12915

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12917 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12922, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12921, metadata !DIExpression()), !dbg !12923
  %4 = icmp eq i64 %3, -1, !dbg !12924
  br i1 %4, label %6, label %5, !dbg !12926

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.124(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12927
  br label %6, !dbg !12929

6:                                                ; preds = %5, %2
  ret void, !dbg !12930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.124(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12931 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12934, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12933, metadata !DIExpression()), !dbg !12935
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12936
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12937
  ret void, !dbg !12938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12939 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12941, metadata !DIExpression()), !dbg !12949
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12950
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12950
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12942, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.value(metadata i32 0, metadata !12943, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !12952
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12954, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !12956
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !12956
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !12952
  call void @llvm.dbg.value(metadata i32 undef, metadata !12945, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12943, metadata !DIExpression()), !dbg !12951
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12957
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12958
  %7 = load i8, i8* %6, align 1, !dbg !12958
  %8 = and i8 %7, 40, !dbg !12959
  %9 = icmp eq i8 %8, 0, !dbg !12959
  call void @llvm.dbg.value(metadata i1 %9, metadata !12946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12960
  br i1 %9, label %10, label %17, !dbg !12961

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12962
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12962
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12962
  %14 = icmp eq %union.anon* %13, null, !dbg !12966
  br i1 %14, label %16, label %15, !dbg !12967

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !12968
  br label %16, !dbg !12970

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.123(%struct.k_thread* noundef nonnull %3) #25, !dbg !12971
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !12972
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !12973
  br label %17, !dbg !12974

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12954
  call void @llvm.dbg.value(metadata i32 %18, metadata !12068, metadata !DIExpression()) #23, !dbg !12956
  call void @llvm.dbg.value(metadata i32 %18, metadata !12062, metadata !DIExpression()) #23, !dbg !12952
  call void @llvm.dbg.value(metadata i32 %18, metadata !12945, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !12975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !12975
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #23, !dbg !12977
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12979, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !12943, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12943, metadata !DIExpression()), !dbg !12951
  ret void, !dbg !12980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12981 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12983, metadata !DIExpression()), !dbg !12984
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12985
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !12986
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12987
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12988
  ret void, !dbg !12989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12992, metadata !DIExpression()), !dbg !12993
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12994
  %3 = load i8, i8* %2, align 1, !dbg !12995
  %4 = and i8 %3, -3, !dbg !12995
  store i8 %4, i8* %2, align 1, !dbg !12995
  ret void, !dbg !12996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12997 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12999, metadata !DIExpression()), !dbg !13000
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13001
  br i1 %2, label %3, label %7, !dbg !13003

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12225, metadata !DIExpression()) #23, !dbg !13004
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13007
  %5 = load i8, i8* %4, align 1, !dbg !13008
  %6 = and i8 %5, 127, !dbg !13008
  store i8 %6, i8* %4, align 1, !dbg !13008
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12233, metadata !DIExpression()) #23, !dbg !13009
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13011
  br label %7, !dbg !13012

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13013
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13014
  %10 = zext i1 %9 to i32, !dbg !13014
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !13015
  ret void, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13019, metadata !DIExpression()), !dbg !13020
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13021
  %3 = load i8, i8* %2, align 1, !dbg !13022
  %4 = or i8 %3, 2, !dbg !13022
  store i8 %4, i8* %2, align 1, !dbg !13022
  ret void, !dbg !13023
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 0, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13032
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13034, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13034
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !13036
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %3, metadata !13029, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()), !dbg !13031
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13040
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !13042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13044, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()), !dbg !13031
  ret void, !dbg !13045
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13046 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13052, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 %0, metadata !13050, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13051, metadata !DIExpression()), !dbg !13057
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13058
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13059
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13060
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13061
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !13062
  call void @llvm.dbg.value(metadata i32 %6, metadata !13053, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 0, metadata !13054, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13064
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13066, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13068
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13068
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13064
  call void @llvm.dbg.value(metadata i32 undef, metadata !13056, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata i32 undef, metadata !13054, metadata !DIExpression()), !dbg !13063
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13069
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13073
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13074
  br i1 %10, label %11, label %12, !dbg !13075

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13076
  br label %12, !dbg !13078

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13066
  call void @llvm.dbg.value(metadata i32 %13, metadata !12068, metadata !DIExpression()) #23, !dbg !13068
  call void @llvm.dbg.value(metadata i32 %13, metadata !12062, metadata !DIExpression()) #23, !dbg !13064
  call void @llvm.dbg.value(metadata i32 %13, metadata !13056, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #23, !dbg !13081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13083, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !13054, metadata !DIExpression()), !dbg !13063
  call void @llvm.dbg.value(metadata i32 undef, metadata !13054, metadata !DIExpression()), !dbg !13063
  ret i32 %6, !dbg !13084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13085 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13090, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i64 undef, metadata !13092, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13089, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13091, metadata !DIExpression()), !dbg !13093
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13094
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13096
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13098, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13100
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13096
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13101
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13102
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12667, metadata !DIExpression()) #23, !dbg !13103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12672, metadata !DIExpression()) #23, !dbg !13103
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !13105
  ret i32 %9, !dbg !13106
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13107 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13111, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13112, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 0, metadata !13113, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13118
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13120, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13122
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13122
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata i32 undef, metadata !13115, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13112, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13113, metadata !DIExpression()), !dbg !13117
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13123
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13112, metadata !DIExpression()), !dbg !13116
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13126
  br i1 %5, label %7, label %6, !dbg !13128

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13129
  br label %7, !dbg !13131

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13120
  call void @llvm.dbg.value(metadata i32 %8, metadata !12068, metadata !DIExpression()) #23, !dbg !13122
  call void @llvm.dbg.value(metadata i32 %8, metadata !12062, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %8, metadata !13115, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13132
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #23, !dbg !13134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13136, !srcloc !12097
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13112, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13113, metadata !DIExpression()), !dbg !13117
  ret %struct.k_thread* %4, !dbg !13137
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13138 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13140, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13141, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 0, metadata !13142, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13147
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13149, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !13144, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13141, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 undef, metadata !13142, metadata !DIExpression()), !dbg !13146
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13152
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13141, metadata !DIExpression()), !dbg !13145
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13155
  br i1 %5, label %8, label %6, !dbg !13157

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13158
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13160
  br label %8, !dbg !13161

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13149
  call void @llvm.dbg.value(metadata i32 %9, metadata !12068, metadata !DIExpression()) #23, !dbg !13151
  call void @llvm.dbg.value(metadata i32 %9, metadata !12062, metadata !DIExpression()) #23, !dbg !13147
  call void @llvm.dbg.value(metadata i32 %9, metadata !13144, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13162
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #23, !dbg !13164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13166, !srcloc !12097
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13141, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 undef, metadata !13142, metadata !DIExpression()), !dbg !13146
  ret %struct.k_thread* %4, !dbg !13167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13170, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13026, metadata !DIExpression()) #23, !dbg !13172
  call void @llvm.dbg.value(metadata i32 0, metadata !13027, metadata !DIExpression()) #23, !dbg !13174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13175
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13177, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !13175
  call void @llvm.dbg.value(metadata i32 %3, metadata !13029, metadata !DIExpression()) #23, !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()) #23, !dbg !13174
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13180
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !13183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13185, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !13027, metadata !DIExpression()) #23, !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()) #23, !dbg !13174
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13186
  ret void, !dbg !13187
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13190, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 %1, metadata !13191, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i8 0, metadata !13192, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 0, metadata !13193, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13198
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13200, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13202
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13202
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13198
  call void @llvm.dbg.value(metadata i32 undef, metadata !13195, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata i8 poison, metadata !13192, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 undef, metadata !13193, metadata !DIExpression()), !dbg !13197
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !13203
  call void @llvm.dbg.value(metadata i1 %6, metadata !13192, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13196
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13206

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12225, metadata !DIExpression()) #23, !dbg !13207
  %11 = load i8, i8* %4, align 1, !dbg !13213
  %12 = and i8 %11, 127, !dbg !13213
  store i8 %12, i8* %4, align 1, !dbg !13213
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12233, metadata !DIExpression()) #23, !dbg !13214
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13216
  store i8 %9, i8* %8, align 2, !dbg !13217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12242, metadata !DIExpression()) #23, !dbg !13218
  %13 = load i8, i8* %4, align 1, !dbg !13220
  %14 = or i8 %13, -128, !dbg !13220
  store i8 %14, i8* %4, align 1, !dbg !13220
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12249, metadata !DIExpression()) #23, !dbg !13221
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12256, metadata !DIExpression()) #23, !dbg !13223
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12262, metadata !DIExpression()) #23, !dbg !13223
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13225
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12263, metadata !DIExpression()) #23, !dbg !13223
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13226
  br i1 %16, label %26, label %17, !dbg !13225

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12263, metadata !DIExpression()) #23, !dbg !13223
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13227
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12263, metadata !DIExpression()) #23, !dbg !13223
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !13228
  %21 = icmp sgt i32 %20, 0, !dbg !13229
  br i1 %21, label %22, label %23, !dbg !13230

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !13231
  br label %27, !dbg !13232

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !13226
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12263, metadata !DIExpression()) #23, !dbg !13223
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13226
  br i1 %25, label %26, label %17, !dbg !13225, !llvm.loop !13233

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !13235
  br label %27, !dbg !13236

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13237
  br label %29, !dbg !13238

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13239
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13200
  call void @llvm.dbg.value(metadata i32 %30, metadata !12068, metadata !DIExpression()) #23, !dbg !13202
  call void @llvm.dbg.value(metadata i32 %30, metadata !12062, metadata !DIExpression()) #23, !dbg !13198
  call void @llvm.dbg.value(metadata i32 %30, metadata !13195, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #23, !dbg !13243
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13245, !srcloc !12097
  call void @llvm.dbg.value(metadata i8 poison, metadata !13192, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 undef, metadata !13193, metadata !DIExpression()), !dbg !13197
  ret i1 %6, !dbg !13246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13251, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.value(metadata i32 %1, metadata !13252, metadata !DIExpression()), !dbg !13254
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13255
  call void @llvm.dbg.value(metadata i1 %3, metadata !13253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13254
  br i1 %3, label %4, label %12, !dbg !13256

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13258
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13259
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13259
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13259
  %9 = load i8, i8* %8, align 1, !dbg !13259
  %10 = icmp eq i8 %9, 0, !dbg !13260
  br i1 %10, label %11, label %12, !dbg !13261

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13262
  br label %12, !dbg !13264

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13266 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13268, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13272
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13274, !srcloc !12071
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %2, metadata !12068, metadata !DIExpression()) #23, !dbg !13276
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %2, metadata !12062, metadata !DIExpression()) #23, !dbg !13272
  call void @llvm.dbg.value(metadata i32 %2, metadata !13270, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()), !dbg !13271
  tail call fastcc void @z_sched_lock() #25, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %2, metadata !12083, metadata !DIExpression()) #23, !dbg !13280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13280
  call void @llvm.dbg.value(metadata i32 %2, metadata !12091, metadata !DIExpression()) #23, !dbg !13282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13284, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !13268, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()), !dbg !13271
  ret void, !dbg !13285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13286 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13287
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13288
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13288
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13288
  %5 = load i8, i8* %4, align 1, !dbg !13289
  %6 = add i8 %5, -1, !dbg !13289
  store i8 %6, i8* %4, align 1, !dbg !13289
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13290, !srcloc !13292
  ret void, !dbg !13293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13294 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13296, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13300
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13302, !srcloc !12071
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13302
  call void @llvm.dbg.value(metadata i32 %2, metadata !12068, metadata !DIExpression()) #23, !dbg !13304
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %2, metadata !12062, metadata !DIExpression()) #23, !dbg !13300
  call void @llvm.dbg.value(metadata i32 %2, metadata !13298, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 undef, metadata !13296, metadata !DIExpression()), !dbg !13299
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13305
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13308
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13308
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13308
  %7 = load i8, i8* %6, align 1, !dbg !13309
  %8 = add i8 %7, 1, !dbg !13309
  store i8 %8, i8* %6, align 1, !dbg !13309
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %2, metadata !12083, metadata !DIExpression()) #23, !dbg !13311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13311
  call void @llvm.dbg.value(metadata i32 %2, metadata !12091, metadata !DIExpression()) #23, !dbg !13313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13315, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 1, metadata !13296, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 undef, metadata !13296, metadata !DIExpression()), !dbg !13299
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13316
  ret void, !dbg !13317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !13318 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13319
  ret %struct.k_thread* %1, !dbg !13320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !13321 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13325, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13326, metadata !DIExpression()), !dbg !13330
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13331
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13327, metadata !DIExpression()), !dbg !13330
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13332
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13328, metadata !DIExpression()), !dbg !13330
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !13333
  call void @llvm.dbg.value(metadata i32 %5, metadata !13329, metadata !DIExpression()), !dbg !13330
  %6 = icmp sgt i32 %5, 0, !dbg !13334
  br i1 %6, label %17, label %7, !dbg !13336

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13337
  br i1 %8, label %17, label %9, !dbg !13339

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13340
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13340
  %12 = load i32, i32* %11, align 8, !dbg !13340
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13342
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13342
  %15 = load i32, i32* %14, align 8, !dbg !13342
  %16 = icmp ult i32 %12, %15, !dbg !13343
  br label %17, !dbg !13344

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13345
  ret i1 %18, !dbg !13346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13347 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13364, metadata !DIExpression()), !dbg !13379
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13365, metadata !DIExpression()), !dbg !13379
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13380
  %5 = load i32, i32* %4, align 4, !dbg !13381
  %6 = add nsw i32 %5, 1, !dbg !13381
  store i32 %6, i32* %4, align 4, !dbg !13381
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13382
  store i32 %5, i32* %7, align 8, !dbg !13383
  %8 = load i32, i32* %4, align 4, !dbg !13384
  %9 = icmp eq i32 %8, 0, !dbg !13385
  br i1 %9, label %10, label %32, !dbg !13386

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13387
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13387
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13367, metadata !DIExpression()), !dbg !13387
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13387
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13387
  %14 = load i32, i32* %13, align 4, !dbg !13387
  %15 = shl i32 %14, 2, !dbg !13387
  %16 = alloca i8, i32 %15, align 8, !dbg !13387
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13387
  store i8* %16, i8** %17, align 4, !dbg !13387
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13387
  %19 = alloca i8, i32 %14, align 8, !dbg !13387
  store i8* %19, i8** %18, align 4, !dbg !13387
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13387
  store i32 -1, i32* %20, align 4, !dbg !13387
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13388
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13376, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13366, metadata !DIExpression()), !dbg !13379
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13390
  br i1 %22, label %23, label %24, !dbg !13387

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13390
  br label %32, !dbg !13391

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13366, metadata !DIExpression()), !dbg !13379
  %26 = load i32, i32* %4, align 4, !dbg !13392
  %27 = add nsw i32 %26, 1, !dbg !13392
  store i32 %27, i32* %4, align 4, !dbg !13392
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13394
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13394
  store i32 %26, i32* %29, align 8, !dbg !13395
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13388
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13376, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13366, metadata !DIExpression()), !dbg !13379
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13390
  br i1 %31, label %23, label %24, !dbg !13387, !llvm.loop !13396

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13398
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13399
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !13400
  ret void, !dbg !13401
}

; Function Attrs: optsize
declare !dbg !13402 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13407 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13410 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13412, metadata !DIExpression()), !dbg !13414
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13413, metadata !DIExpression()), !dbg !13414
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13415
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13416
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !13417
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13418
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13418
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13420
  br i1 %7, label %8, label %10, !dbg !13421

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13422
  store i32 0, i32* %9, align 4, !dbg !13424
  br label %10, !dbg !13425

10:                                               ; preds = %8, %2
  ret void, !dbg !13426
}

; Function Attrs: optsize
declare !dbg !13427 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13428 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13432, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13433, metadata !DIExpression()), !dbg !13435
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13436
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !13437
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13434, metadata !DIExpression()), !dbg !13435
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13433, metadata !DIExpression()), !dbg !13435
  ret %struct.k_thread* %4, !dbg !13438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13439 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13443, metadata !DIExpression()), !dbg !13444
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !13445
  ret %struct.rbnode* %2, !dbg !13446
}

; Function Attrs: optsize
declare !dbg !13447 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13450 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13462, metadata !DIExpression()), !dbg !13466
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13467
  %3 = load i32, i32* %2, align 4, !dbg !13467
  %4 = icmp eq i32 %3, 0, !dbg !13469
  br i1 %4, label %10, label %5, !dbg !13470

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13463, metadata !DIExpression()), !dbg !13466
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13471, !range !5722
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13472
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13464, metadata !DIExpression()), !dbg !13466
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13473
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13465, metadata !DIExpression()), !dbg !13466
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13463, metadata !DIExpression()), !dbg !13466
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13466
  ret %struct.k_thread* %11, !dbg !13474
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13475 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13479, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i32 0, metadata !13480, metadata !DIExpression()), !dbg !13482
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13483
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13481, metadata !DIExpression()), !dbg !13482
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13484
  br i1 %3, label %8, label %4, !dbg !13485

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13486
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13488
  call void @llvm.dbg.value(metadata i32 1, metadata !13480, metadata !DIExpression()), !dbg !13482
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13483
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13481, metadata !DIExpression()), !dbg !13482
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13484
  br i1 %7, label %8, label %4, !dbg !13485, !llvm.loop !13489

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13482
  ret i32 %9, !dbg !13491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13492 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13494, metadata !DIExpression()), !dbg !13495
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13496
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13497
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13498
  ret %struct.k_thread* %4, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #3 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13509, metadata !DIExpression()), !dbg !13510
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13511
  tail call fastcc void @sys_dlist_init.131(%struct._dnode* noundef nonnull %2) #25, !dbg !13512
  ret void, !dbg !13513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.131(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !13514 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13518, metadata !DIExpression()), !dbg !13519
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13520
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13521
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13522
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13523
  ret void, !dbg !13524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13525 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13526
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13534, metadata !DIExpression()), !dbg !13535
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13536
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13536
  %4 = load i8, i8* %3, align 2, !dbg !13536
  %5 = sext i8 %4 to i32, !dbg !13537
  ret i32 %5, !dbg !13538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13543, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i32 %1, metadata !13544, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13545, metadata !DIExpression()), !dbg !13546
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13547
  ret void, !dbg !13548
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13549 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13550
  br i1 %1, label %8, label %2, !dbg !13551

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13552
  br i1 %3, label %8, label %4, !dbg !13553

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13554
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13555
  %7 = xor i1 %6, true, !dbg !13553
  br label %8, !dbg !13553

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13557 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13558, !range !5142
  %2 = icmp eq i8 %1, 0, !dbg !13558
  ret i1 %2, !dbg !13559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13560 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13563
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13565, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13567
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13567
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()), !dbg !13568
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13569
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12225, metadata !DIExpression()) #23, !dbg !13572
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13574
  %4 = load i8, i8* %3, align 1, !dbg !13575
  %5 = and i8 %4, 127, !dbg !13575
  store i8 %5, i8* %3, align 1, !dbg !13575
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12233, metadata !DIExpression()) #23, !dbg !13576
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13578
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13579
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12242, metadata !DIExpression()) #23, !dbg !13580
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13582
  %8 = load i8, i8* %7, align 1, !dbg !13583
  %9 = or i8 %8, -128, !dbg !13583
  store i8 %9, i8* %7, align 1, !dbg !13583
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12249, metadata !DIExpression()) #23, !dbg !13584
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12256, metadata !DIExpression()) #23, !dbg !13586
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12262, metadata !DIExpression()) #23, !dbg !13586
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13588
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12263, metadata !DIExpression()) #23, !dbg !13586
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13589
  br i1 %11, label %22, label %12, !dbg !13588

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12263, metadata !DIExpression()) #23, !dbg !13586
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13590
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12263, metadata !DIExpression()) #23, !dbg !13586
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13591
  %16 = icmp sgt i32 %15, 0, !dbg !13592
  br i1 %16, label %17, label %19, !dbg !13593

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13594
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13595
  br label %24, !dbg !13596

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13589
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12263, metadata !DIExpression()) #23, !dbg !13586
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13589
  br i1 %21, label %22, label %12, !dbg !13588, !llvm.loop !13597

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13599
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13600
  br label %24, !dbg !13601

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13565
  call void @llvm.dbg.value(metadata i32 %25, metadata !12068, metadata !DIExpression()) #23, !dbg !13567
  call void @llvm.dbg.value(metadata i32 %25, metadata !12062, metadata !DIExpression()) #23, !dbg !13563
  call void @llvm.dbg.value(metadata i32 %25, metadata !13562, metadata !DIExpression()), !dbg !13568
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13602
  call void @llvm.dbg.value(metadata i32 undef, metadata !12667, metadata !DIExpression()) #23, !dbg !13603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12672, metadata !DIExpression()) #23, !dbg !13603
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13605
  ret void, !dbg !13606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13607 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13611, metadata !DIExpression()), !dbg !13614
  %3 = icmp eq i64 %2, -1, !dbg !13615
  br i1 %3, label %4, label %6, !dbg !13617

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13618
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13620
  br label %11, !dbg !13621

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13612, metadata !DIExpression()), !dbg !13614
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13622
  %8 = sext i32 %7 to i64, !dbg !13622
  call void @llvm.dbg.value(metadata i64 %8, metadata !13612, metadata !DIExpression()), !dbg !13614
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13623
  %10 = trunc i64 %9 to i32, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %10, metadata !13613, metadata !DIExpression()), !dbg !13614
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13614
  ret i32 %12, !dbg !13624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13629, metadata !DIExpression()), !dbg !13630
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13631, !srcloc !13633
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13636 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13640, metadata !DIExpression()), !dbg !13644
  %2 = icmp eq i64 %0, 0, !dbg !13645
  br i1 %2, label %3, label %4, !dbg !13647

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13648
  br label %29, !dbg !13650

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13642, metadata !DIExpression()), !dbg !13644
  %5 = icmp sgt i64 %0, -3, !dbg !13651
  br i1 %5, label %6, label %10, !dbg !13653

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13654
  %8 = trunc i64 %0 to i32, !dbg !13656
  %9 = add i32 %7, %8, !dbg !13656
  call void @llvm.dbg.value(metadata i32 %9, metadata !13641, metadata !DIExpression()), !dbg !13644
  br label %13, !dbg !13657

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13658
  %12 = sub i32 -2, %11, !dbg !13658
  call void @llvm.dbg.value(metadata i32 %12, metadata !13641, metadata !DIExpression()), !dbg !13644
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13660
  call void @llvm.dbg.value(metadata i32 %14, metadata !13641, metadata !DIExpression()), !dbg !13644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13661
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13663, !srcloc !12071
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %16, metadata !12068, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %16, metadata !12062, metadata !DIExpression()) #23, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %16, metadata !13643, metadata !DIExpression()), !dbg !13644
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13666
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13667
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13668
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13669
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13670
  tail call fastcc void @z_add_thread_timeout.124(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13670
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13671
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13672
  call void @llvm.dbg.value(metadata i32 %16, metadata !12667, metadata !DIExpression()) #23, !dbg !13673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12672, metadata !DIExpression()) #23, !dbg !13673
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13675
  %22 = zext i32 %14 to i64, !dbg !13676
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13677
  %24 = zext i32 %23 to i64, !dbg !13677
  %25 = sub nsw i64 %22, %24, !dbg !13678
  call void @llvm.dbg.value(metadata i64 %25, metadata !13640, metadata !DIExpression()), !dbg !13644
  %26 = icmp sgt i64 %25, 0, !dbg !13679
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13679
  %28 = trunc i64 %27 to i32, !dbg !13679
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13644
  ret i32 %30, !dbg !13680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13681 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13683, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i64 %0, metadata !12103, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 10000, metadata !12106, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 1000, metadata !12107, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i8 1, metadata !12108, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i1 false, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i1 false, metadata !12110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i8 0, metadata !12111, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i1 false, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i1 true, metadata !12113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13685
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i64 %0, metadata !12103, metadata !DIExpression()), !dbg !13685
  %2 = udiv i64 %0, 10, !dbg !13687
  ret i64 %2, !dbg !13691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13692 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13693, !srcloc !13695
  tail call void @z_impl_k_yield() #25, !dbg !13696
  ret void, !dbg !13697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13702, metadata !DIExpression()), !dbg !13704
  %2 = sext i32 %0 to i64, !dbg !13705
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13706
  call void @llvm.dbg.value(metadata i64 %3, metadata !13703, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13704
  %4 = shl i64 %3, 32, !dbg !13707
  %5 = ashr exact i64 %4, 32, !dbg !13707
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13708
  call void @llvm.dbg.value(metadata i32 %6, metadata !13703, metadata !DIExpression()), !dbg !13704
  %7 = sext i32 %6 to i64, !dbg !13709
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13710
  %9 = trunc i64 %8 to i32, !dbg !13710
  ret i32 %9, !dbg !13711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13712 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13714, metadata !DIExpression()), !dbg !13715
  call void @llvm.dbg.value(metadata i64 %0, metadata !12103, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12106, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i32 10000, metadata !12107, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i8 1, metadata !12108, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i1 false, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13716
  call void @llvm.dbg.value(metadata i1 true, metadata !12110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13716
  call void @llvm.dbg.value(metadata i8 0, metadata !12111, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i1 false, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13716
  call void @llvm.dbg.value(metadata i1 true, metadata !12113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13716
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !13716
  %2 = add i64 %0, 99, !dbg !13718
  call void @llvm.dbg.value(metadata i64 %2, metadata !12103, metadata !DIExpression()), !dbg !13716
  %3 = udiv i64 %2, 100, !dbg !13719
  ret i64 %3, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13721 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13723, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i64 %0, metadata !12103, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 10000, metadata !12106, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12107, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i8 1, metadata !12108, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i1 false, metadata !12109, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13725
  call void @llvm.dbg.value(metadata i1 false, metadata !12110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13725
  call void @llvm.dbg.value(metadata i8 0, metadata !12111, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i1 true, metadata !12112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13725
  call void @llvm.dbg.value(metadata i1 false, metadata !12113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13725
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i64 0, metadata !12114, metadata !DIExpression()), !dbg !13725
  %2 = mul i64 %0, 100, !dbg !13727
  ret i64 %2, !dbg !13729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13732, metadata !DIExpression()), !dbg !13733
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13734
  br i1 %2, label %14, label %3, !dbg !13736

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13737
  %5 = icmp slt i32 %4, 0, !dbg !13739
  br i1 %5, label %6, label %10, !dbg !13740

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13741
  %8 = load i8, i8* %7, align 1, !dbg !13741
  %9 = icmp eq i8 %8, 16, !dbg !13744
  br i1 %9, label %10, label %14, !dbg !13745

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13746
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13747
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13748, !srcloc !12707
  call void @llvm.dbg.value(metadata i32 %11, metadata !12703, metadata !DIExpression()) #23, !dbg !13752
  %12 = icmp eq i32 %11, 0, !dbg !13753
  br i1 %12, label %13, label %14, !dbg !13754

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13755
  br label %14, !dbg !13757

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13761, metadata !DIExpression()), !dbg !13762
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13763
  %3 = load i8, i8* %2, align 1, !dbg !13763
  %4 = and i8 %3, 2, !dbg !13764
  %5 = icmp ne i8 %4, 0, !dbg !13765
  ret i1 %5, !dbg !13766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13767 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13772
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13771, metadata !DIExpression()), !dbg !13773
  ret %struct.k_thread* %1, !dbg !13774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13775 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13776, !srcloc !12707
  call void @llvm.dbg.value(metadata i32 %1, metadata !12703, metadata !DIExpression()) #23, !dbg !13779
  %2 = icmp eq i32 %1, 0, !dbg !13780
  br i1 %2, label %3, label %8, !dbg !13781

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13782
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13783
  %6 = icmp ne i32 %5, 0, !dbg !13781
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13787, metadata !DIExpression()), !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13790
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13792, !srcloc !12071
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13792
  call void @llvm.dbg.value(metadata i32 %3, metadata !12068, metadata !DIExpression()) #23, !dbg !13794
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13794
  call void @llvm.dbg.value(metadata i32 %3, metadata !12062, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %3, metadata !13788, metadata !DIExpression()), !dbg !13789
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13795
  %5 = load i8, i8* %4, align 4, !dbg !13795
  %6 = and i8 %5, 1, !dbg !13797
  %7 = icmp eq i8 %6, 0, !dbg !13798
  br i1 %7, label %9, label %8, !dbg !13799

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13800
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !13803
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13805, !srcloc !12097
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13806, !srcloc !13808
  br label %24, !dbg !13809

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13810
  %11 = load i8, i8* %10, align 1, !dbg !13810
  %12 = and i8 %11, 8, !dbg !13812
  %13 = icmp eq i8 %12, 0, !dbg !13813
  br i1 %13, label %15, label %14, !dbg !13814

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !13815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13815
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !13818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13820, !srcloc !12097
  br label %24, !dbg !13821

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13822
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13823
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13825
  br i1 %17, label %18, label %23, !dbg !13826

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13827, !srcloc !12707
  call void @llvm.dbg.value(metadata i32 %19, metadata !12703, metadata !DIExpression()) #23, !dbg !13830
  %20 = icmp eq i32 %19, 0, !dbg !13831
  br i1 %20, label %21, label %23, !dbg !13832

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12667, metadata !DIExpression()) #23, !dbg !13833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12672, metadata !DIExpression()) #23, !dbg !13833
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13836
  br label %23, !dbg !13837

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12083, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %3, metadata !12091, metadata !DIExpression()) #23, !dbg !13840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13842, !srcloc !12097
  br label %24, !dbg !13843

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13846, metadata !DIExpression()), !dbg !13847
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13848
  %3 = load i8, i8* %2, align 1, !dbg !13848
  %4 = and i8 %3, 8, !dbg !13850
  %5 = icmp eq i8 %4, 0, !dbg !13851
  br i1 %5, label %6, label %20, !dbg !13852

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13853
  %8 = or i8 %7, 8, !dbg !13853
  store i8 %8, i8* %2, align 1, !dbg !13853
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13855
  br i1 %9, label %10, label %12, !dbg !13857

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12225, metadata !DIExpression()) #23, !dbg !13858
  %11 = and i8 %8, 95, !dbg !13861
  store i8 %11, i8* %2, align 1, !dbg !13861
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12233, metadata !DIExpression()) #23, !dbg !13862
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13864
  br label %12, !dbg !13865

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13866
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13866
  %15 = icmp eq %union.anon* %14, null, !dbg !13868
  br i1 %15, label %17, label %16, !dbg !13869

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13870
  br label %17, !dbg !13872

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13873
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13874
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13875
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13876
  br label %20, !dbg !13877

20:                                               ; preds = %17, %1
  ret void, !dbg !13878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13879 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13883, metadata !DIExpression()), !dbg !13885
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13886
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13884, metadata !DIExpression()), !dbg !13885
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13887
  br i1 %3, label %10, label %4, !dbg !13888

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13889
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13891
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13892, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 0, metadata !13897, metadata !DIExpression()), !dbg !13898
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13900
  store i32 0, i32* %7, align 4, !dbg !13901
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13902
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13886
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13884, metadata !DIExpression()), !dbg !13885
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13887
  br i1 %9, label %10, label %4, !dbg !13888, !llvm.loop !13903

10:                                               ; preds = %4, %1
  ret void, !dbg !13905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13906 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13911, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13910, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13915
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13917, !srcloc !12071
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13917
  call void @llvm.dbg.value(metadata i32 %4, metadata !12068, metadata !DIExpression()) #23, !dbg !13919
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13919
  call void @llvm.dbg.value(metadata i32 %4, metadata !12062, metadata !DIExpression()) #23, !dbg !13915
  call void @llvm.dbg.value(metadata i32 %4, metadata !13912, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 0, metadata !13913, metadata !DIExpression()), !dbg !13914
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13920
  %6 = load i8, i8* %5, align 1, !dbg !13920
  %7 = and i8 %6, 8, !dbg !13922
  %8 = icmp eq i8 %7, 0, !dbg !13923
  br i1 %8, label %9, label %24, !dbg !13924

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13911, metadata !DIExpression()), !dbg !13914
  %11 = icmp eq i64 %10, 0, !dbg !13925
  br i1 %11, label %24, label %12, !dbg !13927

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13928
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13930
  br i1 %14, label %24, label %15, !dbg !13931

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13932
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13932
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13933
  %19 = icmp eq %union.anon* %17, %18, !dbg !13934
  br i1 %19, label %24, label %20, !dbg !13935

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13936
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !13938
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13939
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !13940
  call void @llvm.dbg.value(metadata i32 %4, metadata !12667, metadata !DIExpression()) #23, !dbg !13941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12672, metadata !DIExpression()) #23, !dbg !13941
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !13943
  call void @llvm.dbg.value(metadata i32 %23, metadata !13913, metadata !DIExpression()), !dbg !13914
  br label %26, !dbg !13944

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13945
  call void @llvm.dbg.value(metadata i32 %25, metadata !13913, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 %4, metadata !12083, metadata !DIExpression()) #23, !dbg !13946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %4, metadata !12091, metadata !DIExpression()) #23, !dbg !13948
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13950, !srcloc !12097
  br label %26, !dbg !13951

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13914
  ret i32 %27, !dbg !13952
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13953 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13957, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i32 %1, metadata !13958, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i8* %2, metadata !13959, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i8 0, metadata !13961, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i32 0, metadata !13962, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12056, metadata !DIExpression()) #23, !dbg !13967
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13969, !srcloc !12071
  call void @llvm.dbg.value(metadata i32 undef, metadata !12068, metadata !DIExpression()) #23, !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !12069, metadata !DIExpression()) #23, !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !12062, metadata !DIExpression()) #23, !dbg !13967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13964, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata i8 poison, metadata !13961, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()), !dbg !13966
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !13972
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13960, metadata !DIExpression()), !dbg !13965
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13975
  br i1 %7, label %12, label %8, !dbg !13977

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13978, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.value(metadata i32 %1, metadata !13984, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.value(metadata i8* %2, metadata !13985, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13892, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i32 %1, metadata !13897, metadata !DIExpression()), !dbg !13989
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13991
  store i32 %1, i32* %9, align 4, !dbg !13992
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13993
  store i8* %2, i8** %10, align 4, !dbg !13994
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13995
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13996
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !13997
  call void @llvm.dbg.value(metadata i8 1, metadata !13961, metadata !DIExpression()), !dbg !13965
  br label %12, !dbg !13998

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13969
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %14, metadata !12068, metadata !DIExpression()) #23, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %14, metadata !12062, metadata !DIExpression()) #23, !dbg !13967
  call void @llvm.dbg.value(metadata i32 %14, metadata !13964, metadata !DIExpression()), !dbg !13966
  call void @llvm.dbg.value(metadata i8 poison, metadata !13961, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #23, !dbg !13999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12088, metadata !DIExpression()) #23, !dbg !13999
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #23, !dbg !14001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14003, !srcloc !12097
  call void @llvm.dbg.value(metadata i32 undef, metadata !13962, metadata !DIExpression()), !dbg !13966
  ret i1 %13, !dbg !14004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14005 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i64 undef, metadata !14013, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14010, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14012, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i8** %4, metadata !14014, metadata !DIExpression()), !dbg !14016
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()), !dbg !14016
  %7 = icmp eq i8** %4, null, !dbg !14018
  br i1 %7, label %12, label %8, !dbg !14020

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14021
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14023
  %11 = load i8*, i8** %10, align 4, !dbg !14023
  store i8* %11, i8** %4, align 4, !dbg !14024
  br label %12, !dbg !14025

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14027 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !14029
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !14030
  ret void, !dbg !14031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14032 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14042, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14040, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14041, metadata !DIExpression()), !dbg !14059
  %5 = icmp eq i64 %4, -1, !dbg !14060
  br i1 %5, label %55, label %6, !dbg !14062

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14063
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14064
  call void @llvm.dbg.value(metadata i32 0, metadata !14043, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14073
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14075, !srcloc !14081
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14075
  call void @llvm.dbg.value(metadata i32 %9, metadata !14078, metadata !DIExpression()) #23, !dbg !14082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %9, metadata !14072, metadata !DIExpression()) #23, !dbg !14073
  call void @llvm.dbg.value(metadata i32 %9, metadata !14049, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()), !dbg !14065
  %10 = icmp slt i64 %4, -1, !dbg !14083
  br i1 %10, label %11, label %17, !dbg !14084

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14085
  %13 = add i64 %4, %12, !dbg !14086
  %14 = sub i64 -2, %13, !dbg !14086
  call void @llvm.dbg.value(metadata i64 %14, metadata !14053, metadata !DIExpression()), !dbg !14087
  %15 = icmp sgt i64 %14, 1, !dbg !14088
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14088
  br label %22, !dbg !14089

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14090
  %19 = tail call fastcc i32 @elapsed.142() #25, !dbg !14092
  %20 = sext i32 %19 to i64, !dbg !14092
  %21 = add nsw i64 %18, %20, !dbg !14093
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14094
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14095
  store i64 %23, i64* %24, align 8, !dbg !14096
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !14097
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14050, metadata !DIExpression()), !dbg !14099
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14100
  br i1 %26, label %42, label %27, !dbg !14100

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14101
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14050, metadata !DIExpression()), !dbg !14099
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14105
  %31 = load i64, i64* %30, align 8, !dbg !14105
  %32 = icmp slt i64 %28, %31, !dbg !14106
  br i1 %32, label %33, label %38, !dbg !14107

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14105
  %35 = sub nsw i64 %31, %28, !dbg !14108
  store i64 %35, i64* %34, align 8, !dbg !14108
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14110
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14111
  tail call fastcc void @sys_dlist_insert.143(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !14112
  br label %44, !dbg !14113

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14114
  store i64 %39, i64* %24, align 8, !dbg !14114
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !14115
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14050, metadata !DIExpression()), !dbg !14099
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14100
  br i1 %41, label %42, label %27, !dbg !14100, !llvm.loop !14116

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14118
  tail call fastcc void @sys_dlist_append.144(%struct._dnode* noundef %43) #25, !dbg !14121
  br label %44, !dbg !14122

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !14123
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14124
  br i1 %46, label %47, label %54, !dbg !14125

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !14126
  call void @llvm.dbg.value(metadata i32 %48, metadata !14056, metadata !DIExpression()), !dbg !14127
  %49 = icmp ne i32 %48, 0, !dbg !14128
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14130
  br i1 %52, label %54, label %53, !dbg !14130

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !14131
  br label %54, !dbg !14133

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14134, metadata !DIExpression()) #23, !dbg !14140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14140
  call void @llvm.dbg.value(metadata i32 %9, metadata !14142, metadata !DIExpression()) #23, !dbg !14145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14147, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14043, metadata !DIExpression()), !dbg !14065
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.142() unnamed_addr #1 !dbg !14150 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14153
  %2 = icmp eq i32 %1, 0, !dbg !14154
  br i1 %2, label %3, label %5, !dbg !14153

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !14155
  br label %5, !dbg !14153

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14153
  ret i32 %6, !dbg !14156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !14157 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147() #25, !dbg !14163
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14161, metadata !DIExpression()), !dbg !14164
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14165
  ret %struct._timeout* %2, !dbg !14166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.143(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14167 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14171, metadata !DIExpression()), !dbg !14175
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14172, metadata !DIExpression()), !dbg !14175
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14176
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14176
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14173, metadata !DIExpression()), !dbg !14175
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14177
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14178
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14179
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14180
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14181
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14182
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14183
  ret void, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !14185 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14189, metadata !DIExpression()), !dbg !14191
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14192
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.145(%struct._dnode* noundef %2) #25, !dbg !14193
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14190, metadata !DIExpression()), !dbg !14191
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14194
  ret %struct._timeout* %4, !dbg !14195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.144(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14196 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14201, metadata !DIExpression()), !dbg !14204
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14202, metadata !DIExpression()), !dbg !14204
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14205
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14203, metadata !DIExpression()), !dbg !14204
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14206
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14207
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14208
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14209
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14210
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14211
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14212
  ret void, !dbg !14213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14214 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !14219
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14216, metadata !DIExpression()), !dbg !14220
  %2 = tail call fastcc i32 @elapsed.142() #25, !dbg !14221
  call void @llvm.dbg.value(metadata i32 %2, metadata !14217, metadata !DIExpression()), !dbg !14220
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14222
  br i1 %3, label %14, label %4, !dbg !14224

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14225
  %6 = load i64, i64* %5, align 8, !dbg !14225
  %7 = sext i32 %2 to i64, !dbg !14226
  %8 = sub nsw i64 %6, %7, !dbg !14227
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14228
  br i1 %9, label %14, label %10, !dbg !14229

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14230
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14230
  %13 = trunc i64 %12 to i32, !dbg !14230
  call void @llvm.dbg.value(metadata i32 %13, metadata !14218, metadata !DIExpression()), !dbg !14220
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14232
  call void @llvm.dbg.value(metadata i32 %15, metadata !14218, metadata !DIExpression()), !dbg !14220
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14233
  %17 = icmp ne i32 %16, 0, !dbg !14235
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14236
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %20, metadata !14218, metadata !DIExpression()), !dbg !14220
  ret i32 %20, !dbg !14237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.145(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14238 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14242, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14243, metadata !DIExpression()), !dbg !14244
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14245
  br i1 %2, label %5, label %3, !dbg !14246

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.146(%struct._dnode* noundef nonnull %0) #25, !dbg !14247
  br label %5, !dbg !14246

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14246
  ret %struct._dnode* %6, !dbg !14248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.146(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14249 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14251, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14252, metadata !DIExpression()), !dbg !14253
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14254
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14255
  br i1 %3, label %7, label %4, !dbg !14256

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14257
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14257
  br label %7, !dbg !14256

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14256
  ret %struct._dnode* %8, !dbg !14258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.147() unnamed_addr #4 !dbg !14259 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14263, metadata !DIExpression()), !dbg !14264
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.148() #25, !dbg !14265
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14265
  ret %struct._dnode* %3, !dbg !14266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.148() unnamed_addr #4 !dbg !14267 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14271, metadata !DIExpression()), !dbg !14272
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14273
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14274
  ret i1 %2, !dbg !14275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14276 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14280, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 -22, metadata !14281, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 0, metadata !14282, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14287
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14289, !srcloc !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14072, metadata !DIExpression()) #23, !dbg !14287
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i32 -22, metadata !14281, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14282, metadata !DIExpression()), !dbg !14286
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14281, metadata !DIExpression()), !dbg !14285
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.151(%struct._dnode* noundef %3) #25, !dbg !14292
  br i1 %4, label %5, label %6, !dbg !14296

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !14297
  call void @llvm.dbg.value(metadata i32 0, metadata !14281, metadata !DIExpression()), !dbg !14285
  br label %6, !dbg !14299

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14285
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14289
  call void @llvm.dbg.value(metadata i32 %8, metadata !14078, metadata !DIExpression()) #23, !dbg !14291
  call void @llvm.dbg.value(metadata i32 %8, metadata !14072, metadata !DIExpression()) #23, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %8, metadata !14284, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i32 %7, metadata !14281, metadata !DIExpression()), !dbg !14285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14134, metadata !DIExpression()) #23, !dbg !14300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14142, metadata !DIExpression()) #23, !dbg !14302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14304, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14282, metadata !DIExpression()), !dbg !14286
  ret i32 %7, !dbg !14305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.151(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14306 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14312, metadata !DIExpression()), !dbg !14313
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14314
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14314
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14315
  ret i1 %4, !dbg !14316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !14317 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14319, metadata !DIExpression()), !dbg !14320
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !14321
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14323
  br i1 %3, label %10, label %4, !dbg !14324

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14325
  %6 = load i64, i64* %5, align 8, !dbg !14325
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14327
  %8 = load i64, i64* %7, align 8, !dbg !14328
  %9 = add nsw i64 %8, %6, !dbg !14328
  store i64 %9, i64* %7, align 8, !dbg !14328
  br label %10, !dbg !14329

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14330
  tail call fastcc void @sys_dlist_remove.152(%struct._dnode* noundef %11) #25, !dbg !14331
  ret void, !dbg !14332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.152(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14333 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14337, metadata !DIExpression()), !dbg !14340
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14341
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14341
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14338, metadata !DIExpression()), !dbg !14340
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14342
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14342
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14339, metadata !DIExpression()), !dbg !14340
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14343
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14344
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14345
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14346
  tail call fastcc void @sys_dnode_init.153(%struct._dnode* noundef %0) #25, !dbg !14347
  ret void, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.153(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14351, metadata !DIExpression()), !dbg !14352
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14353
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14354
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14355
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14356
  ret void, !dbg !14357
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14358 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14364, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i64 0, metadata !14365, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 0, metadata !14366, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14371
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14373, !srcloc !14081
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14373
  call void @llvm.dbg.value(metadata i32 %3, metadata !14078, metadata !DIExpression()) #23, !dbg !14375
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14375
  call void @llvm.dbg.value(metadata i32 %3, metadata !14072, metadata !DIExpression()) #23, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata i64 0, metadata !14365, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 undef, metadata !14366, metadata !DIExpression()), !dbg !14370
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14376
  call void @llvm.dbg.value(metadata i64 %4, metadata !14365, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata i32 %3, metadata !14134, metadata !DIExpression()) #23, !dbg !14379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14379
  call void @llvm.dbg.value(metadata i32 %3, metadata !14142, metadata !DIExpression()) #23, !dbg !14381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14383, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14366, metadata !DIExpression()), !dbg !14370
  ret i64 %4, !dbg !14384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14385 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14387, metadata !DIExpression()), !dbg !14391
  call void @llvm.dbg.value(metadata i64 0, metadata !14388, metadata !DIExpression()), !dbg !14391
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.154(%struct._timeout* noundef %0) #25, !dbg !14392
  br i1 %2, label %21, label %3, !dbg !14394

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !14395
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14389, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i64 0, metadata !14388, metadata !DIExpression()), !dbg !14391
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14397
  br i1 %5, label %16, label %6, !dbg !14399

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14389, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i64 %8, metadata !14388, metadata !DIExpression()), !dbg !14391
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14400
  %10 = load i64, i64* %9, align 8, !dbg !14400
  %11 = add nsw i64 %10, %8, !dbg !14402
  call void @llvm.dbg.value(metadata i64 %11, metadata !14388, metadata !DIExpression()), !dbg !14391
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14403
  br i1 %12, label %16, label %13, !dbg !14405

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !14406
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14389, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i64 %11, metadata !14388, metadata !DIExpression()), !dbg !14391
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14397
  br i1 %15, label %16, label %6, !dbg !14399, !llvm.loop !14407

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14391
  call void @llvm.dbg.value(metadata i64 %17, metadata !14388, metadata !DIExpression()), !dbg !14391
  %18 = tail call fastcc i32 @elapsed.142() #25, !dbg !14409
  %19 = sext i32 %18 to i64, !dbg !14409
  %20 = sub nsw i64 %17, %19, !dbg !14410
  br label %21, !dbg !14411

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14391
  ret i64 %22, !dbg !14412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.154(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14413 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14417, metadata !DIExpression()), !dbg !14418
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14419
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.151(%struct._dnode* noundef %2) #25, !dbg !14420
  %4 = xor i1 %3, true, !dbg !14421
  ret i1 %4, !dbg !14422
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14423 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14425, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i64 0, metadata !14426, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i32 0, metadata !14427, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14432
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14434, !srcloc !14081
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14434
  call void @llvm.dbg.value(metadata i32 %3, metadata !14078, metadata !DIExpression()) #23, !dbg !14436
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14436
  call void @llvm.dbg.value(metadata i32 %3, metadata !14072, metadata !DIExpression()) #23, !dbg !14432
  call void @llvm.dbg.value(metadata i32 %3, metadata !14429, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata i64 0, metadata !14426, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i32 undef, metadata !14427, metadata !DIExpression()), !dbg !14431
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14437
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14440
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14426, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14430
  call void @llvm.dbg.value(metadata i32 %3, metadata !14134, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata i32 %3, metadata !14142, metadata !DIExpression()) #23, !dbg !14443
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14445, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14427, metadata !DIExpression()), !dbg !14431
  %6 = add i64 %5, %4, !dbg !14446
  ret i64 %6, !dbg !14447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14448 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 0, metadata !14451, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14456
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14458, !srcloc !14081
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %2, metadata !14078, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %2, metadata !14072, metadata !DIExpression()) #23, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %2, metadata !14453, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata i32 -1, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()), !dbg !14455
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14461
  call void @llvm.dbg.value(metadata i32 %3, metadata !14450, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 %2, metadata !14134, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %2, metadata !14142, metadata !DIExpression()) #23, !dbg !14466
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14468, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()), !dbg !14455
  ret i32 %3, !dbg !14469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14472, metadata !DIExpression()), !dbg !14482
  call void @llvm.dbg.value(metadata i1 %1, metadata !14473, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14482
  call void @llvm.dbg.value(metadata i32 0, metadata !14474, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14484
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14486, !srcloc !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14072, metadata !DIExpression()) #23, !dbg !14484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14476, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14474, metadata !DIExpression()), !dbg !14483
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14489
  call void @llvm.dbg.value(metadata i32 %4, metadata !14477, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.value(metadata i1 undef, metadata !14480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14490
  %5 = icmp slt i32 %4, 2, !dbg !14491
  call void @llvm.dbg.value(metadata i1 %5, metadata !14481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14490
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14492
  call void @llvm.dbg.value(metadata i1 %6, metadata !14480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14490
  br i1 %7, label %11, label %8, !dbg !14492

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14494
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14494
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14496
  br label %11, !dbg !14497

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14486
  call void @llvm.dbg.value(metadata i32 %12, metadata !14078, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata i32 %12, metadata !14072, metadata !DIExpression()) #23, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %12, metadata !14476, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14134, metadata !DIExpression()) #23, !dbg !14498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14142, metadata !DIExpression()) #23, !dbg !14500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14502, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 1, metadata !14474, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14474, metadata !DIExpression()), !dbg !14483
  ret void, !dbg !14503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14508, metadata !DIExpression()), !dbg !14513
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14515
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14517, !srcloc !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14072, metadata !DIExpression()) #23, !dbg !14515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14509, metadata !DIExpression()), !dbg !14513
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14513
  call void @llvm.dbg.value(metadata i32 undef, metadata !14509, metadata !DIExpression()), !dbg !14513
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14520
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14521
  br i1 %4, label %28, label %5, !dbg !14522

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14523
  %10 = load i64, i64* %9, align 8, !dbg !14523
  %11 = sext i32 %8 to i64, !dbg !14524
  %12 = icmp sgt i64 %10, %11, !dbg !14525
  br i1 %12, label %26, label %13, !dbg !14526

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14513
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14510, metadata !DIExpression()), !dbg !14527
  %15 = trunc i64 %10 to i32, !dbg !14528
  call void @llvm.dbg.value(metadata i32 %15, metadata !14512, metadata !DIExpression()), !dbg !14527
  %16 = sext i32 %15 to i64, !dbg !14529
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14530
  %18 = add i64 %17, %16, !dbg !14530
  store i64 %18, i64* @curr_tick, align 8, !dbg !14530
  store i64 0, i64* %9, align 8, !dbg !14531
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %14, metadata !14134, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata i32 %14, metadata !14142, metadata !DIExpression()) #23, !dbg !14535
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14537, !srcloc !14148
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14538
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14538
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14540
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14542, !srcloc !14081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14078, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14072, metadata !DIExpression()) #23, !dbg !14540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14509, metadata !DIExpression()), !dbg !14513
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14545
  %23 = sub nsw i32 %22, %15, !dbg !14545
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14513
  call void @llvm.dbg.value(metadata i32 undef, metadata !14509, metadata !DIExpression()), !dbg !14513
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14520
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14521
  br i1 %25, label %28, label %5, !dbg !14522, !llvm.loop !14546

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14548
  store i64 %27, i64* %9, align 8, !dbg !14548
  br label %32, !dbg !14551

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14513
  %31 = sext i32 %30 to i64, !dbg !14552
  br label %32, !dbg !14552

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14552
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14513
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14553
  %37 = add i64 %36, %33, !dbg !14553
  store i64 %37, i64* @curr_tick, align 8, !dbg !14553
  store i32 0, i32* @announce_remaining, align 4, !dbg !14554
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14555
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %35, metadata !14134, metadata !DIExpression()) #23, !dbg !14557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14557
  call void @llvm.dbg.value(metadata i32 %35, metadata !14142, metadata !DIExpression()) #23, !dbg !14559
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14561, !srcloc !14148
  ret void, !dbg !14562
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14563 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i32 0, metadata !14568, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14573
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14575, !srcloc !14081
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %2, metadata !14078, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !14079, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata i32 %2, metadata !14072, metadata !DIExpression()) #23, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %2, metadata !14570, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i64 0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14568, metadata !DIExpression()), !dbg !14572
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14578
  %4 = tail call fastcc i32 @elapsed.142() #25, !dbg !14581
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14567, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14571
  call void @llvm.dbg.value(metadata i32 %2, metadata !14134, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14139, metadata !DIExpression()) #23, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %2, metadata !14142, metadata !DIExpression()) #23, !dbg !14584
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14586, !srcloc !14148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14568, metadata !DIExpression()), !dbg !14572
  %5 = sext i32 %4 to i64, !dbg !14581
  %6 = add i64 %3, %5, !dbg !14587
  ret i64 %6, !dbg !14588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14589 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14590
  %2 = trunc i64 %1 to i32, !dbg !14591
  ret i32 %2, !dbg !14592
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14593 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14594
  ret i64 %1, !dbg !14595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14598, metadata !DIExpression()), !dbg !14605
  %2 = icmp eq i32 %0, 0, !dbg !14606
  br i1 %2, label %10, label %3, !dbg !14608

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %4, metadata !14599, metadata !DIExpression()), !dbg !14605
  %5 = mul i32 %0, 84, !dbg !14610
  call void @llvm.dbg.value(metadata i32 %5, metadata !14600, metadata !DIExpression()), !dbg !14605
  br label %6, !dbg !14611

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %7, metadata !14601, metadata !DIExpression()), !dbg !14613
  %8 = sub i32 %7, %4, !dbg !14614
  %9 = icmp ult i32 %8, %5, !dbg !14616
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14618 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14619
  ret i32 %1, !dbg !14620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14621 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14623
  ret i32 %1, !dbg !14624
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14625 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14629, metadata !DIExpression()), !dbg !14631
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14632

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14633
  br label %14, !dbg !14637

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14630, metadata !DIExpression()), !dbg !14631
  %6 = icmp slt i64 %2, -1, !dbg !14638
  br i1 %6, label %7, label %9, !dbg !14641

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14642
  br label %14, !dbg !14643

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14645
  %11 = icmp ugt i64 %2, 1, !dbg !14646
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14646
  %13 = add nsw i64 %10, %12, !dbg !14647
  br label %14, !dbg !14648

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14649
  ret i64 %15, !dbg !14650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14651 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.163, i32 0, i32 0)) #24, !dbg !14653
  ret void, !dbg !14654
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!624, !2, !2254, !2256, !27, !2258, !2260, !2298, !111, !168, !2300, !2311, !2357, !2359, !2387, !2415, !2458, !2530, !2575, !197, !351, !2603, !387, !397, !422, !662, !2608, !801, !867, !1173, !1452, !2649, !1567, !1657, !2651, !2714, !2781, !1711, !2784, !1718, !2082, !2802, !2102, !2804, !2217, !2807}
!llvm.ident = !{!2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809, !2809}
!llvm.module.flags = !{!2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 400, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !535, line: 72, type: !619, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !521, globals: !532, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!455 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!456 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!457 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!458 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!459 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!460 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!461 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!462 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!463 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!464 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!465 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!466 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!467 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!468 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!469 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!470 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!471 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!472 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!473 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!474 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!475 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!476 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!477 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!478 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!479 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!480 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!481 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!482 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!483 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!484 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!485 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!486 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!487 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!488 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!489 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!490 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!491 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!492 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!493 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!494 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!495 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!496 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!497 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!498 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!499 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!500 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!501 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!502 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!503 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!504 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!505 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!506 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!507 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!508 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!509 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!510 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!511 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!512 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!513 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!514 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!515 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!516 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!517 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!518 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!519 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!520 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!521 = !{!200, !103, !102, !522}
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 392, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 384, size: 192, elements: !525)
!525 = !{!526, !527, !528, !529, !530, !531}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !524, file: !116, line: 386, baseType: !120, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !524, file: !116, line: 387, baseType: !120, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !524, file: !116, line: 388, baseType: !120, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !524, file: !116, line: 389, baseType: !120, size: 32, offset: 96)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !524, file: !116, line: 390, baseType: !120, size: 32, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !524, file: !116, line: 391, baseType: !120, size: 32, offset: 160)
!532 = !{!533, !539, !555, !566, !583, !420, !585, !599, !601, !603, !605, !607, !609, !611, !613, !615, !617}
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !422, file: !535, line: 424, type: !536, isLocal: false, isDefinition: true, align: 16)
!535 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !537)
!537 = !{!538}
!538 = !DISubrange(count: 4)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !422, file: !535, line: 424, type: !541, isLocal: false, isDefinition: true, align: 32)
!541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !543)
!543 = !{!544, !545, !546, !547, !553, !554}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !542, file: !141, line: 380, baseType: !144, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !542, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !542, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !542, file: !141, line: 386, baseType: !548, size: 32, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !550)
!550 = !{!551, !552}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !549, file: !141, line: 359, baseType: !154, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !549, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !542, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !542, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!555 = !DIGlobalVariableExpression(var: !556, expr: !DIExpression())
!556 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !422, file: !535, line: 424, type: !557, isLocal: true, isDefinition: true, align: 32)
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !559)
!559 = !{!560, !565}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !558, file: !132, line: 60, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{!103, !564}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !558, file: !132, line: 65, baseType: !564, size: 32, offset: 32)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !535, line: 423, type: !568, isLocal: true, isDefinition: true)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !535, line: 107, size: 1472, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !568, file: !535, line: 109, baseType: !571, size: 1472)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 1472, elements: !581)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !535, line: 101, size: 64, elements: !573)
!573 = !{!574, !580}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !572, file: !535, line: 102, baseType: !575, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !576, line: 63, baseType: !577)
!576 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!578 = !DISubroutineType(types: !579)
!579 = !{null, !103, !102}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !572, file: !535, line: 103, baseType: !102, size: 32, offset: 32)
!581 = !{!582}
!582 = !DISubrange(count: 23)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !422, file: !535, line: 424, type: !549, isLocal: true, isDefinition: true, align: 8)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !587, file: !535, line: 493, type: !592, isLocal: true, isDefinition: true, align: 32)
!587 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !535, file: !535, line: 460, type: !588, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !590)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !564}
!590 = !{!591}
!591 = !DILocalVariable(name: "dev", arg: 1, scope: !587, file: !535, line: 460, type: !564)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !593)
!593 = !{!594, !596, !597, !598}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !592, file: !10, line: 55, baseType: !595, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !592, file: !10, line: 57, baseType: !595, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !592, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !592, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !587, file: !535, line: 497, type: !592, isLocal: true, isDefinition: true, align: 32)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !587, file: !535, line: 507, type: !592, isLocal: true, isDefinition: true, align: 32)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !587, file: !535, line: 512, type: !592, isLocal: true, isDefinition: true, align: 32)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !587, file: !535, line: 516, type: !592, isLocal: true, isDefinition: true, align: 32)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !587, file: !535, line: 523, type: !592, isLocal: true, isDefinition: true, align: 32)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !587, file: !535, line: 527, type: !592, isLocal: true, isDefinition: true, align: 32)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !587, file: !535, line: 581, type: !592, isLocal: true, isDefinition: true, align: 32)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !587, file: !535, line: 586, type: !592, isLocal: true, isDefinition: true, align: 32)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !587, file: !535, line: 591, type: !592, isLocal: true, isDefinition: true, align: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !587, file: !535, line: 595, type: !592, isLocal: true, isDefinition: true, align: 32)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 736, elements: !581)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 163, baseType: !425)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !624, file: !629, line: 25, type: !657, isLocal: false, isDefinition: true, align: 16)
!624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !626, splitDebugInlining: false, nameTableKind: None)
!625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!626 = !{!627, !622, !633, !635, !637, !639, !641, !643, !645, !647, !649, !651, !653, !655}
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !624, file: !629, line: 20, type: !630, isLocal: false, isDefinition: true, align: 16)
!629 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 240, elements: !631)
!631 = !{!632}
!632 = !DISubrange(count: 15)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !624, file: !629, line: 32, type: !536, isLocal: false, isDefinition: true, align: 16)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !624, file: !629, line: 39, type: !536, isLocal: false, isDefinition: true, align: 16)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !624, file: !629, line: 46, type: !536, isLocal: false, isDefinition: true, align: 16)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !624, file: !629, line: 53, type: !536, isLocal: false, isDefinition: true, align: 16)
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !624, file: !629, line: 60, type: !536, isLocal: false, isDefinition: true, align: 16)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !624, file: !629, line: 67, type: !536, isLocal: false, isDefinition: true, align: 16)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !624, file: !629, line: 74, type: !536, isLocal: false, isDefinition: true, align: 16)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !624, file: !629, line: 81, type: !536, isLocal: false, isDefinition: true, align: 16)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !624, file: !629, line: 88, type: !536, isLocal: false, isDefinition: true, align: 16)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !624, file: !629, line: 95, type: !536, isLocal: false, isDefinition: true, align: 16)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !624, file: !629, line: 102, type: !536, isLocal: false, isDefinition: true, align: 16)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !624, file: !629, line: 109, type: !536, isLocal: false, isDefinition: true, align: 16)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !658)
!658 = !{!659}
!659 = !DISubrange(count: 3)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !662, file: !727, line: 398, type: !760, isLocal: true, isDefinition: true)
!662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !664, retainedTypes: !677, globals: !724, splitDebugInlining: false, nameTableKind: None)
!663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!664 = !{!665, !30, !670}
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 197, baseType: !32, size: 32, elements: !667)
!666 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!667 = !{!668, !669}
!668 = !DIEnumerator(name: "SUCCESS", value: 0)
!669 = !DIEnumerator(name: "ERROR", value: 1)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !671, line: 44, baseType: !32, size: 32, elements: !672)
!671 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!672 = !{!673, !674, !675, !676}
!673 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!674 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!675 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!676 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!677 = !{!102, !103, !121, !678, !717, !723}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !680, file: !116, line: 552, baseType: !120, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !680, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !680, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !680, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !680, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !680, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !680, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !680, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !680, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !680, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !680, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !680, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !680, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !680, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !680, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !680, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !680, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !680, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !680, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !680, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !680, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !680, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !680, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !680, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !680, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !680, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !680, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !680, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !680, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !680, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !680, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !680, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !680, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !680, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !720)
!719 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !718, file: !719, line: 344, baseType: !121, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !718, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!724 = !{!725, !731, !747, !758, !660}
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !662, file: !727, line: 752, type: !728, isLocal: false, isDefinition: true, align: 16)
!727 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 800, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 50)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !662, file: !727, line: 752, type: !733, isLocal: false, isDefinition: true, align: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !735)
!735 = !{!736, !737, !738, !739, !745, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !141, line: 380, baseType: !144, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !734, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !734, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !734, file: !141, line: 386, baseType: !740, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !742)
!742 = !{!743, !744}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !741, file: !141, line: 359, baseType: !154, size: 8)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !741, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !734, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !734, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !662, file: !727, line: 752, type: !749, isLocal: true, isDefinition: true, align: 32)
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !751)
!751 = !{!752, !757}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !750, file: !132, line: 60, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DISubroutineType(types: !755)
!755 = !{!103, !756}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !750, file: !132, line: 65, baseType: !756, size: 32, offset: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !662, file: !727, line: 752, type: !741, isLocal: true, isDefinition: true, align: 8)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !761)
!761 = !{!762, !768, !769, !778, !783, !788, !794}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !760, file: !671, line: 101, baseType: !763, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !764)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DISubroutineType(types: !766)
!766 = !{!103, !756, !767}
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !671, line: 56, baseType: !102)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !760, file: !671, line: 102, baseType: !763, size: 32, offset: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !760, file: !671, line: 103, baseType: !770, size: 32, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DISubroutineType(types: !773)
!773 = !{!103, !756, !767, !774, !102}
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !756, !767, !102}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !760, file: !671, line: 104, baseType: !779, size: 32, offset: 96)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !756, !767, !723}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !760, file: !671, line: 105, baseType: !784, size: 32, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !785)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!670, !756, !767}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !760, file: !671, line: 106, baseType: !789, size: 32, offset: 160)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DISubroutineType(types: !792)
!792 = !{!103, !756, !767, !793}
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !671, line: 64, baseType: !102)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !760, file: !671, line: 107, baseType: !795, size: 32, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{!103, !756, !767, !102}
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !801, file: !858, line: 603, type: !860, isLocal: true, isDefinition: true, align: 32)
!801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !803, globals: !855, splitDebugInlining: false, nameTableKind: None)
!802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!803 = !{!102, !103, !804}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !806)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !807, line: 336, size: 160, elements: !808)
!807 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!808 = !{!809, !829, !833, !837, !850}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !806, file: !807, line: 365, baseType: !810, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DISubroutineType(types: !812)
!812 = !{!103, !813, !828}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !816)
!816 = !{!817, !818, !819, !820, !826, !827}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !815, file: !141, line: 380, baseType: !144, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !815, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !815, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !815, file: !141, line: 386, baseType: !821, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 32)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !822, file: !141, line: 359, baseType: !154, size: 8)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !822, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !815, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !815, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !806, file: !807, line: 366, baseType: !830, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !813, !155}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !806, file: !807, line: 374, baseType: !834, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{!103, !813}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !806, file: !807, line: 377, baseType: !838, size: 32, offset: 96)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DISubroutineType(types: !840)
!840 = !{!103, !813, !841}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !807, line: 122, size: 64, elements: !844)
!844 = !{!845, !846, !847, !848, !849}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !843, file: !807, line: 123, baseType: !121, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !843, file: !807, line: 124, baseType: !154, size: 8, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !843, file: !807, line: 125, baseType: !154, size: 8, offset: 40)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !843, file: !807, line: 126, baseType: !154, size: 8, offset: 48)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !843, file: !807, line: 127, baseType: !154, size: 8, offset: 56)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !806, file: !807, line: 379, baseType: !851, size: 32, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = !DISubroutineType(types: !853)
!853 = !{!103, !813, !854}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!855 = !{!799, !856}
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !801, file: !858, line: 38, type: !859, isLocal: true, isDefinition: true)
!858 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !861, file: !132, line: 60, baseType: !834, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !861, file: !132, line: 65, baseType: !813, size: 32, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !867, file: !1039, line: 762, type: !1148, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !887, globals: !1036, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!869 = !{!30, !870, !876, !881, !670}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !871, line: 506, baseType: !32, size: 32, elements: !872)
!871 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!873, !874, !875}
!873 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!874 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!875 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!876 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !871, line: 512, baseType: !32, size: 32, elements: !877)
!877 = !{!878, !879, !880}
!878 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!879 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!880 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !576, line: 43, baseType: !32, size: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!884 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!885 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!886 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!887 = !{!102, !103, !888, !958, !963, !923, !876, !870, !968, !969, !121, !983, !938, !995, !996, !997}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !891)
!891 = !{!892, !913, !919, !924, !928, !929, !930, !934, !954}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !890, file: !871, line: 524, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!103, !896, !911, !912}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !899)
!899 = !{!900, !901, !902, !903, !909, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !898, file: !141, line: 380, baseType: !144, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !898, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !898, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !898, file: !141, line: 386, baseType: !904, size: 32, offset: 96)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !906)
!906 = !{!907, !908}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !905, file: !141, line: 359, baseType: !154, size: 8)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !905, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !898, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !898, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !871, line: 237, baseType: !154)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !871, line: 257, baseType: !121)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !890, file: !871, line: 530, baseType: !914, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !896, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !871, line: 229, baseType: !121)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !890, file: !871, line: 532, baseType: !920, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{!103, !896, !923, !918}
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !871, line: 216, baseType: !121)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !890, file: !871, line: 535, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!103, !896, !923}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !890, file: !871, line: 537, baseType: !925, size: 32, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !890, file: !871, line: 539, baseType: !925, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !890, file: !871, line: 541, baseType: !931, size: 32, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!103, !896, !911, !870, !876}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !890, file: !871, line: 544, baseType: !935, size: 32, offset: 224)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{!103, !896, !938, !157}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !940)
!940 = !{!941, !948, !953}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !939, file: !871, line: 482, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !944)
!943 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !945)
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !944, file: !943, line: 30, baseType: !947, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !939, file: !871, line: 485, baseType: !949, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !896, !938, !923}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !939, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !890, file: !871, line: 547, baseType: !955, size: 32, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!121, !896}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !961)
!961 = !{!962}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !960, file: !871, line: 434, baseType: !923, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !966)
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !965, file: !871, line: 447, baseType: !923, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 469, baseType: !971)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 458, size: 320, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980, !981}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !971, file: !116, line: 460, baseType: !120, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !971, file: !116, line: 461, baseType: !120, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !971, file: !116, line: 462, baseType: !120, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !971, file: !116, line: 463, baseType: !120, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !971, file: !116, line: 464, baseType: !120, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !971, file: !116, line: 465, baseType: !120, size: 32, offset: 160)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !971, file: !116, line: 466, baseType: !120, size: 32, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !971, file: !116, line: 467, baseType: !120, size: 32, offset: 224)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !971, file: !116, line: 468, baseType: !982, size: 64, offset: 256)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 484, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 475, size: 384, elements: !986)
!986 = !{!987, !988, !989, !991, !992, !993, !994}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !985, file: !116, line: 477, baseType: !120, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !985, file: !116, line: 478, baseType: !120, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !985, file: !116, line: 479, baseType: !990, size: 128, offset: 64)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !537)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !985, file: !116, line: 480, baseType: !693, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !985, file: !116, line: 481, baseType: !120, size: 32, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !985, file: !116, line: 482, baseType: !693, size: 64, offset: 288)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !985, file: !116, line: 483, baseType: !120, size: 32, offset: 352)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !1000)
!1000 = !{!1001, !1006, !1007, !1016, !1021, !1026, !1031}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !999, file: !671, line: 101, baseType: !1002, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!103, !896, !767}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !999, file: !671, line: 102, baseType: !1002, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !999, file: !671, line: 103, baseType: !1008, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!103, !896, !767, !1012, !102}
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !896, !767, !102}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !999, file: !671, line: 104, baseType: !1017, size: 32, offset: 96)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !896, !767, !723}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !999, file: !671, line: 105, baseType: !1022, size: 32, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!670, !896, !767}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !999, file: !671, line: 106, baseType: !1027, size: 32, offset: 160)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!103, !896, !767, !793}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !999, file: !671, line: 107, baseType: !1032, size: 32, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !896, !767, !102}
!1036 = !{!1037, !1043, !1045, !1055, !1057, !1059, !1061, !1063, !1065, !1067, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !865, !1144, !1146, !1159, !1161, !1163, !1165, !1167, !1169}
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !867, file: !1039, line: 762, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1039 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1041)
!1041 = !{!1042}
!1042 = !DISubrange(count: 5)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !867, file: !1039, line: 762, type: !897, isLocal: false, isDefinition: true, align: 32)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !867, file: !1039, line: 762, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1049)
!1049 = !{!1050, !1054}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1048, file: !132, line: 60, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!103, !896}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1048, file: !132, line: 65, baseType: !896, size: 32, offset: 32)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !867, file: !1039, line: 766, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !867, file: !1039, line: 766, type: !897, isLocal: false, isDefinition: true, align: 32)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !867, file: !1039, line: 766, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !867, file: !1039, line: 770, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !867, file: !1039, line: 770, type: !897, isLocal: false, isDefinition: true, align: 32)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !867, file: !1039, line: 770, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !867, file: !1039, line: 774, type: !1069, isLocal: false, isDefinition: true, align: 16)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 144, elements: !1070)
!1070 = !{!1071}
!1071 = !DISubrange(count: 9)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !867, file: !1039, line: 774, type: !897, isLocal: false, isDefinition: true, align: 32)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !867, file: !1039, line: 774, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !867, file: !1039, line: 778, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !867, file: !1039, line: 778, type: !897, isLocal: false, isDefinition: true, align: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !867, file: !1039, line: 778, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !867, file: !1039, line: 782, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !867, file: !1039, line: 782, type: !897, isLocal: false, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !867, file: !1039, line: 782, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !867, file: !1039, line: 786, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !867, file: !1039, line: 786, type: !897, isLocal: false, isDefinition: true, align: 32)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !867, file: !1039, line: 786, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !867, file: !1039, line: 790, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !867, file: !1039, line: 790, type: !897, isLocal: false, isDefinition: true, align: 32)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !867, file: !1039, line: 790, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !867, file: !1039, line: 762, type: !1102, isLocal: true, isDefinition: true)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1103, line: 237, size: 128, elements: !1104)
!1103 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !1103, line: 239, baseType: !965, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1102, file: !1103, line: 241, baseType: !896, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1102, file: !1103, line: 243, baseType: !1108, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !943, line: 40, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !943, line: 35, size: 64, elements: !1110)
!1110 = !{!1111, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1109, file: !943, line: 36, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1109, file: !943, line: 37, baseType: !1112, size: 32, offset: 32)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !867, file: !1039, line: 762, type: !905, isLocal: true, isDefinition: true, align: 8)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !867, file: !1039, line: 766, type: !1102, isLocal: true, isDefinition: true)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !867, file: !1039, line: 766, type: !905, isLocal: true, isDefinition: true, align: 8)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !867, file: !1039, line: 770, type: !1102, isLocal: true, isDefinition: true)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !867, file: !1039, line: 770, type: !905, isLocal: true, isDefinition: true, align: 8)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !867, file: !1039, line: 774, type: !1102, isLocal: true, isDefinition: true)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !867, file: !1039, line: 774, type: !905, isLocal: true, isDefinition: true, align: 8)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !867, file: !1039, line: 778, type: !1102, isLocal: true, isDefinition: true)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !867, file: !1039, line: 778, type: !905, isLocal: true, isDefinition: true, align: 8)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !867, file: !1039, line: 782, type: !1102, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !867, file: !1039, line: 782, type: !905, isLocal: true, isDefinition: true, align: 8)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !867, file: !1039, line: 786, type: !1102, isLocal: true, isDefinition: true)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !867, file: !1039, line: 786, type: !905, isLocal: true, isDefinition: true, align: 8)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !867, file: !1039, line: 790, type: !1102, isLocal: true, isDefinition: true)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !867, file: !1039, line: 790, type: !905, isLocal: true, isDefinition: true, align: 8)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !867, file: !1039, line: 656, type: !889, isLocal: true, isDefinition: true)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !867, file: !1039, line: 766, type: !1148, isLocal: true, isDefinition: true)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1103, line: 224, size: 160, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1149, file: !1103, line: 226, baseType: !960, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1149, file: !1103, line: 228, baseType: !723, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1149, file: !1103, line: 230, baseType: !103, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1149, file: !1103, line: 231, baseType: !1155, size: 64, offset: 96)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !1156)
!1156 = !{!1157, !1158}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1155, file: !719, line: 344, baseType: !121, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1155, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !867, file: !1039, line: 770, type: !1148, isLocal: true, isDefinition: true)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !867, file: !1039, line: 774, type: !1148, isLocal: true, isDefinition: true)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !867, file: !1039, line: 778, type: !1148, isLocal: true, isDefinition: true)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !867, file: !1039, line: 782, type: !1148, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !867, file: !1039, line: 786, type: !1148, isLocal: true, isDefinition: true)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !867, file: !1039, line: 790, type: !1148, isLocal: true, isDefinition: true)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1175, retainedTypes: !1208, globals: !1311, splitDebugInlining: false, nameTableKind: None)
!1174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!1175 = !{!30, !1176, !1183, !1190, !1197, !1203, !670}
!1176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !807, line: 47, baseType: !32, size: 32, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182}
!1178 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1179 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1180 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1181 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1182 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !807, line: 75, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1186 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1187 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1188 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1189 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !807, line: 92, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196}
!1192 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1193 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1194 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1195 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1196 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !807, line: 84, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202}
!1199 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1200 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1201 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1202 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !807, line: 107, baseType: !32, size: 32, elements: !1204)
!1204 = !{!1205, !1206, !1207}
!1205 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1206 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1207 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1208 = !{!102, !103, !1209, !155, !154, !1258, !121, !767, !1269, !265, !1308, !1310}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !807, line: 336, size: 160, elements: !1212)
!1212 = !{!1213, !1232, !1236, !1240, !1253}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1211, file: !807, line: 365, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!103, !1217, !828}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1230, !1231}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1219, file: !141, line: 380, baseType: !144, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1219, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1219, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1219, file: !141, line: 386, baseType: !1225, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1227)
!1227 = !{!1228, !1229}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1226, file: !141, line: 359, baseType: !154, size: 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1226, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1219, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1219, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1211, file: !807, line: 366, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{null, !1217, !155}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1211, file: !807, line: 374, baseType: !1237, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1217}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1211, file: !807, line: 377, baseType: !1241, size: 32, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!103, !1217, !1244}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !807, line: 122, size: 64, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1246, file: !807, line: 123, baseType: !121, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1246, file: !807, line: 124, baseType: !154, size: 8, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1246, file: !807, line: 125, baseType: !154, size: 8, offset: 40)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1246, file: !807, line: 126, baseType: !154, size: 8, offset: 48)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1246, file: !807, line: 127, baseType: !154, size: 8, offset: 56)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1211, file: !807, line: 379, baseType: !1254, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!103, !1217, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 783, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 774, size: 224, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1260, file: !116, line: 776, baseType: !120, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1260, file: !116, line: 777, baseType: !120, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1260, file: !116, line: 778, baseType: !120, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1260, file: !116, line: 779, baseType: !120, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1260, file: !116, line: 780, baseType: !120, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1260, file: !116, line: 781, baseType: !120, size: 32, offset: 160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1260, file: !116, line: 782, baseType: !120, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !1272)
!1272 = !{!1273, !1278, !1279, !1288, !1293, !1298, !1303}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1271, file: !671, line: 101, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1217, !767}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1271, file: !671, line: 102, baseType: !1274, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1271, file: !671, line: 103, baseType: !1280, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!103, !1217, !767, !1284, !102}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{null, !1217, !767, !102}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1271, file: !671, line: 104, baseType: !1289, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!103, !1217, !767, !723}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1271, file: !671, line: 105, baseType: !1294, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!670, !1217, !767}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1271, file: !671, line: 106, baseType: !1299, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1217, !767, !793}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1271, file: !671, line: 107, baseType: !1304, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1217, !767, !102}
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1309)
!1309 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1311 = !{!1312, !1318, !1320, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1171, !1353, !1361, !1384, !1387, !1390, !1392, !1399, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1448}
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1314 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1316)
!1316 = !{!1317}
!1317 = !DISubrange(count: 8)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1323, file: !132, line: 60, baseType: !1237, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1323, file: !132, line: 65, baseType: !1217, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 64, elements: !345)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1357, file: !719, line: 344, baseType: !121, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1357, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1365, line: 60, size: 64, elements: !1366)
!1365 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1366 = !{!1367, !1383}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1364, file: !1365, line: 69, baseType: !1368, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1365, line: 50, size: 64, elements: !1371)
!1371 = !{!1372, !1381, !1382}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1370, file: !1365, line: 52, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !1377)
!1376 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1377, file: !1376, line: 34, baseType: !121, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1377, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1370, file: !1365, line: 54, baseType: !154, size: 8, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1370, file: !1365, line: 56, baseType: !154, size: 8, offset: 40)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1364, file: !1365, line: 71, baseType: !154, size: 8, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 64, elements: !345)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 128, elements: !242)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1173, file: !1314, line: 1539, type: !1210, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1395, line: 74, size: 64, elements: !1396)
!1395 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1394, file: !1395, line: 76, baseType: !121, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1394, file: !1395, line: 78, baseType: !1217, size: 32, offset: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1395, line: 22, size: 224, elements: !1403)
!1403 = !{!1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1402, file: !1395, line: 24, baseType: !1258, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1402, file: !1395, line: 26, baseType: !1406, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1402, file: !1395, line: 28, baseType: !200, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1402, file: !1395, line: 30, baseType: !157, size: 8, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1402, file: !1395, line: 32, baseType: !103, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1402, file: !1395, line: 34, baseType: !157, size: 8, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1402, file: !1395, line: 36, baseType: !157, size: 8, offset: 168)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1402, file: !1395, line: 38, baseType: !157, size: 8, offset: 176)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1402, file: !1395, line: 40, baseType: !157, size: 8, offset: 184)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1402, file: !1395, line: 41, baseType: !1415, size: 32, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1452, file: !1532, line: 65, type: !120, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1455, globals: !1529, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!1454 = !{!425}
!1455 = !{!1456, !1458, !595, !154, !121, !1466, !1497}
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1457, line: 46, baseType: !280)
!1457 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1460, file: !356, line: 766, baseType: !120, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1460, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1460, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1460, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1469)
!1469 = !{!1470, !1472, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1487, !1492, !1496}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1468, file: !356, line: 413, baseType: !1471, size: 256)
!1471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1316)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1468, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1474)
!1474 = !{!1475}
!1475 = !DISubrange(count: 24)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1468, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1468, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1468, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1468, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1468, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1468, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1468, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1468, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1485)
!1485 = !{!1486}
!1486 = !DISubrange(count: 56)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1468, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 1920, elements: !1490)
!1489 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1490 = !{!1491}
!1491 = !DISubrange(count: 240)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1468, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1494)
!1494 = !{!1495}
!1495 = !DISubrange(count: 644)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1468, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506, !1507, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1520, !1521, !1522, !1524, !1526, !1528}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1499, file: !356, line: 447, baseType: !360, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1499, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1499, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1499, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1499, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1499, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1499, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 96, elements: !1509)
!1509 = !{!1510}
!1510 = !DISubrange(count: 12)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1499, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1499, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1499, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1499, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1499, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1499, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1499, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1499, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1499, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1499, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1499, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !537)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1499, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1041)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1499, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1041)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1499, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1529 = !{!1530, !1556, !1559, !1561, !1563, !1450}
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1452, file: !1532, line: 285, type: !1533, isLocal: true, isDefinition: true, align: 32)
!1532 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1535)
!1535 = !{!1536, !1555}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1534, file: !132, line: 60, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1540}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1553, !1554}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1542, file: !141, line: 380, baseType: !144, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1542, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1542, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1542, file: !141, line: 386, baseType: !1548, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1549, file: !141, line: 359, baseType: !154, size: 8)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1549, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1542, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1542, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1534, file: !132, line: 65, baseType: !1540, size: 32, offset: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "lock", scope: !1452, file: !1532, line: 34, type: !1558, isLocal: true, isDefinition: true)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "last_load", scope: !1452, file: !1532, line: 36, type: !121, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1452, file: !1532, line: 48, type: !121, isLocal: true, isDefinition: true)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1452, file: !1532, line: 54, type: !121, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1567, file: !1649, line: 22, type: !1651, isLocal: true, isDefinition: true)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !1570, globals: !1646, splitDebugInlining: false, nameTableKind: None)
!1568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!1569 = !{!870, !876}
!1570 = !{!1571, !1635, !1640, !923, !876, !870, !1645, !102}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !1574)
!1574 = !{!1575, !1594, !1598, !1602, !1606, !1607, !1608, !1612, !1631}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1573, file: !871, line: 524, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!103, !1579, !911, !912}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1592, !1593}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1581, file: !141, line: 380, baseType: !144, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1581, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1581, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1581, file: !141, line: 386, baseType: !1587, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1588, file: !141, line: 359, baseType: !154, size: 8)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1588, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1581, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1581, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1573, file: !871, line: 530, baseType: !1595, size: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!103, !1579, !917}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1573, file: !871, line: 532, baseType: !1599, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!103, !1579, !923, !918}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1573, file: !871, line: 535, baseType: !1603, size: 32, offset: 96)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1579, !923}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1573, file: !871, line: 537, baseType: !1603, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1573, file: !871, line: 539, baseType: !1603, size: 32, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1573, file: !871, line: 541, baseType: !1609, size: 32, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!103, !1579, !911, !870, !876}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1573, file: !871, line: 544, baseType: !1613, size: 32, offset: 224)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!103, !1579, !1616, !157}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !1618)
!1618 = !{!1619, !1625, !1630}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1617, file: !871, line: 482, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1621, file: !943, line: 30, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1617, file: !871, line: 485, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !1579, !1616, !923}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1617, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1573, file: !871, line: 547, baseType: !1632, size: 32, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!121, !1579}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1637, file: !871, line: 434, baseType: !923, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !1643)
!1643 = !{!1644}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1642, file: !871, line: 447, baseType: !923, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1646 = !{!1647, !1565}
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1648 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1567, file: !1649, line: 37, type: !1650, isLocal: true, isDefinition: true)
!1649 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 352, elements: !1653)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1653 = !{!1654}
!1654 = !DISubrange(count: 11)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1657, file: !1701, line: 139, type: !1708, isLocal: false, isDefinition: true)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1659, globals: !1698, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!1659 = !{!1660}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1662, file: !116, line: 552, baseType: !120, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1662, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1662, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1662, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1662, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1662, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1662, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1662, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1662, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1662, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1662, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1662, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1662, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1662, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1662, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1662, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1662, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1662, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1662, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1662, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1662, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1662, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1662, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1662, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1662, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1662, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1662, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1662, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1662, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1662, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1662, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1662, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1662, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1662, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!1698 = !{!1699, !1702, !1655}
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1657, file: !1701, line: 137, type: !121, isLocal: false, isDefinition: true)
!1701 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1657, file: !1701, line: 138, type: !1704, isLocal: false, isDefinition: true)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 128, elements: !1706)
!1705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1706 = !{!1707}
!1707 = !DISubrange(count: 16)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 64, elements: !1316)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1711, file: !1714, line: 23, type: !1715, isLocal: false, isDefinition: true)
!1711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1713, splitDebugInlining: false, nameTableKind: None)
!1712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!1713 = !{!1709}
!1714 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1718, file: !1722, line: 86, type: !1972, isLocal: false, isDefinition: true, align: 512)
!1718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1720, retainedTypes: !1729, globals: !1803, splitDebugInlining: false, nameTableKind: None)
!1719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!1720 = !{!1721, !30, !425}
!1721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1722, line: 63, baseType: !32, size: 32, elements: !1723)
!1722 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1723 = !{!1724, !1725, !1726, !1727, !1728}
!1724 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1725 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1726 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1727 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1728 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1729 = !{!200, !102, !103, !1730, !995, !121, !1761, !595, !154, !1786}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1733, line: 51, size: 64, elements: !1734)
!1733 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1734 = !{!1735, !1756}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1732, file: !1733, line: 52, baseType: !1736, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1733, line: 38, baseType: !1737)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!103, !1740, !1755, !265}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1753, !1754}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1742, file: !141, line: 380, baseType: !144, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1742, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1742, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1742, file: !141, line: 386, baseType: !1748, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1750)
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1749, file: !141, line: 359, baseType: !154, size: 8)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1749, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1742, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1742, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1732, file: !1733, line: 53, baseType: !1757, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1733, line: 47, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!103, !1740, !1755, !265, !121}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1763, file: !356, line: 447, baseType: !360, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1763, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1763, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1763, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1763, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1763, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1763, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1763, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1763, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1763, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1763, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1763, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1763, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1763, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1763, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1763, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1763, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1763, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1763, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1763, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1763, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1788, file: !356, line: 413, baseType: !1471, size: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1788, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1788, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1788, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1788, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1788, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1788, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1788, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1788, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1788, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1788, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1788, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1788, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1803 = !{!1804, !1926, !1935, !1937, !1716, !1940, !1942, !1947}
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "_kernel", scope: !1718, file: !1722, line: 40, type: !1806, isLocal: false, isDefinition: true)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1807)
!1807 = !{!1808, !1921}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1806, file: !247, line: 159, baseType: !1809, size: 192)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 192, elements: !345)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1915, !1916, !1917, !1918}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1810, file: !247, line: 102, baseType: !121, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1810, file: !247, line: 105, baseType: !995, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1810, file: !247, line: 108, baseType: !1815, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1817)
!1817 = !{!1818, !1876, !1888, !1889, !1890, !1891, !1897, !1910}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1816, file: !211, line: 247, baseType: !1819, size: 384)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1820)
!1820 = !{!1821, !1845, !1852, !1853, !1854, !1863, !1864, !1865}
!1821 = !DIDerivedType(tag: DW_TAG_member, scope: !1819, file: !211, line: 60, baseType: !1822, size: 64)
!1822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1819, file: !211, line: 60, size: 64, elements: !1823)
!1823 = !{!1824, !1839}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1822, file: !211, line: 61, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1827)
!1827 = !{!1828, !1834}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !221, line: 38, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !221, line: 38, size: 32, elements: !1830)
!1830 = !{!1831, !1833}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1829, file: !221, line: 39, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1829, file: !221, line: 40, baseType: !1832, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !221, line: 42, baseType: !1835, size: 32, offset: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !221, line: 42, size: 32, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1835, file: !221, line: 43, baseType: !1832, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1835, file: !221, line: 44, baseType: !1832, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1822, file: !211, line: 62, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1841)
!1841 = !{!1842}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1840, file: !237, line: 50, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 64, elements: !242)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1819, file: !211, line: 68, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1849)
!1849 = !{!1850}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1848, file: !247, line: 232, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1826)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1819, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1819, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1819, file: !211, line: 90, baseType: !1855, size: 16, offset: 112)
!1855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1819, file: !211, line: 90, size: 16, elements: !1856)
!1856 = !{!1857, !1862}
!1857 = !DIDerivedType(tag: DW_TAG_member, scope: !1855, file: !211, line: 91, baseType: !1858, size: 16)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1855, file: !211, line: 91, size: 16, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1858, file: !211, line: 96, baseType: !261, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1858, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1855, file: !211, line: 100, baseType: !265, size: 16)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1819, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1819, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1819, file: !211, line: 131, baseType: !1866, size: 192, offset: 192)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1867)
!1867 = !{!1868, !1869, !1875}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1866, file: !247, line: 245, baseType: !1825, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1866, file: !247, line: 246, baseType: !1870, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !1874}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1866, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1816, file: !211, line: 250, baseType: !1877, size: 288, offset: 384)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1877, file: !284, line: 26, baseType: !121, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1877, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1877, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1877, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1877, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1877, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1877, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1877, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1877, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1816, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1816, file: !211, line: 256, baseType: !1847, size: 64, offset: 704)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1816, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1816, file: !211, line: 300, baseType: !1892, size: 96, offset: 800)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1893)
!1893 = !{!1894, !1895, !1896}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1892, file: !211, line: 153, baseType: !22, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1892, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1892, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1816, file: !211, line: 325, baseType: !1898, size: 32, offset: 896)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1900)
!1900 = !{!1901, !1907, !1908}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1899, file: !307, line: 5074, baseType: !1902, size: 96)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1903)
!1903 = !{!1904, !1905, !1906}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1902, file: !311, line: 57, baseType: !314, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1902, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1902, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1899, file: !307, line: 5075, baseType: !1847, size: 64, offset: 96)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1899, file: !307, line: 5076, baseType: !1909, offset: 160)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1816, file: !211, line: 343, baseType: !1911, size: 64, offset: 928)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1911, file: !284, line: 63, baseType: !121, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1911, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1810, file: !247, line: 111, baseType: !1815, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1810, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1810, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1810, file: !247, line: 153, baseType: !1919, offset: 168)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1920, line: 33, elements: !322)
!1920 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1806, file: !247, line: 170, baseType: !1922, size: 96, offset: 192)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1923)
!1923 = !{!1924, !1925}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1922, file: !247, line: 86, baseType: !1815, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1922, file: !247, line: 90, baseType: !1851, size: 64, offset: 32)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1718, file: !1722, line: 43, type: !1928, isLocal: false, isDefinition: true, align: 512)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 8704, elements: !1933)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !1931)
!1930 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1929, file: !1930, line: 48, baseType: !146, size: 8)
!1933 = !{!1934}
!1934 = !DISubrange(count: 1088)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1718, file: !1722, line: 44, type: !1816, isLocal: false, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1718, file: !1722, line: 48, type: !1939, isLocal: false, isDefinition: true)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 1024, elements: !345)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1718, file: !1722, line: 217, type: !157, isLocal: false, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1718, file: !1722, line: 50, type: !1944, isLocal: true, isDefinition: true, align: 512)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 3072, elements: !1945)
!1945 = !{!346, !1946}
!1946 = !DISubrange(count: 384)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "levels", scope: !1949, file: !1722, line: 232, type: !1969, isLocal: true, isDefinition: true)
!1949 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1722, file: !1722, line: 230, type: !1950, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !1952)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1721}
!1952 = !{!1953, !1954, !1964, !1968}
!1953 = !DILocalVariable(name: "level", arg: 1, scope: !1949, file: !1722, line: 230, type: !1721)
!1954 = !DILocalVariable(name: "entry", scope: !1949, file: !1722, line: 244, type: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1958)
!1958 = !{!1959, !1963}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1957, file: !132, line: 60, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!103, !1740}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1957, file: !132, line: 65, baseType: !1740, size: 32, offset: 32)
!1964 = !DILocalVariable(name: "dev", scope: !1965, file: !1722, line: 247, type: !1740)
!1965 = distinct !DILexicalBlock(scope: !1966, file: !1722, line: 246, column: 64)
!1966 = distinct !DILexicalBlock(scope: !1967, file: !1722, line: 246, column: 2)
!1967 = distinct !DILexicalBlock(scope: !1949, file: !1722, line: 246, column: 2)
!1968 = !DILocalVariable(name: "rc", scope: !1965, file: !1722, line: 248, type: !103)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 192, elements: !1970)
!1970 = !{!1971}
!1971 = !DISubrange(count: 6)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 16896, elements: !1973)
!1973 = !{!346, !1974}
!1974 = !DISubrange(count: 2112)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "states_str", scope: !1977, file: !1978, line: 276, type: !2099, isLocal: true, isDefinition: true)
!1977 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1978, file: !1978, line: 271, type: !1979, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !2090)
!1978 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!144, !1981, !995, !200}
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1984)
!1984 = !{!1985, !2043, !2055, !2056, !2057, !2058, !2064, !2077}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1983, file: !211, line: 247, baseType: !1986, size: 384)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1987)
!1987 = !{!1988, !2012, !2019, !2020, !2021, !2030, !2031, !2032}
!1988 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !211, line: 60, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !211, line: 60, size: 64, elements: !1990)
!1990 = !{!1991, !2006}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1989, file: !211, line: 61, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1994)
!1994 = !{!1995, !2001}
!1995 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !221, line: 38, baseType: !1996, size: 32)
!1996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !221, line: 38, size: 32, elements: !1997)
!1997 = !{!1998, !2000}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1996, file: !221, line: 39, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1996, file: !221, line: 40, baseType: !1999, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !221, line: 42, baseType: !2002, size: 32, offset: 32)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !221, line: 42, size: 32, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2002, file: !221, line: 43, baseType: !1999, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2002, file: !221, line: 44, baseType: !1999, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1989, file: !211, line: 62, baseType: !2007, size: 64)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2008)
!2008 = !{!2009}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2007, file: !237, line: 50, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 64, elements: !242)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1986, file: !211, line: 68, baseType: !2013, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2015, file: !247, line: 232, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1993)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1986, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1986, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !211, line: 90, baseType: !2022, size: 16, offset: 112)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !211, line: 90, size: 16, elements: !2023)
!2023 = !{!2024, !2029}
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !211, line: 91, baseType: !2025, size: 16)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !211, line: 91, size: 16, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2025, file: !211, line: 96, baseType: !261, size: 8)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2025, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2022, file: !211, line: 100, baseType: !265, size: 16)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1986, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1986, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1986, file: !211, line: 131, baseType: !2033, size: 192, offset: 192)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2042}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2033, file: !247, line: 245, baseType: !1992, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2033, file: !247, line: 246, baseType: !2037, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2033, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1983, file: !211, line: 250, baseType: !2044, size: 288, offset: 384)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2044, file: !284, line: 26, baseType: !121, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2044, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2044, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2044, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2044, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2044, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2044, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2044, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2044, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1983, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1983, file: !211, line: 256, baseType: !2014, size: 64, offset: 704)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1983, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1983, file: !211, line: 300, baseType: !2059, size: 96, offset: 800)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2060)
!2060 = !{!2061, !2062, !2063}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2059, file: !211, line: 153, baseType: !22, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2059, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2059, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1983, file: !211, line: 325, baseType: !2065, size: 32, offset: 896)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2067)
!2067 = !{!2068, !2074, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2066, file: !307, line: 5074, baseType: !2069, size: 96)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2070)
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2069, file: !311, line: 57, baseType: !314, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2069, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2069, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2066, file: !307, line: 5075, baseType: !2014, size: 64, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2066, file: !307, line: 5076, baseType: !2076, offset: 160)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1983, file: !211, line: 343, baseType: !2078, size: 64, offset: 928)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2078, file: !284, line: 63, baseType: !121, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2078, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2084, globals: !2086, splitDebugInlining: false, nameTableKind: None)
!2083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2084 = !{!102, !144, !1456, !154, !103, !2085, !24, !200, !995, !22, !121, !1308}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2086 = !{!1975, !2087}
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "states_sz", scope: !1977, file: !1978, line: 279, type: !2089, isLocal: true, isDefinition: true)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1650, size: 256, elements: !1316)
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2091 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1977, file: !1978, line: 271, type: !1981)
!2092 = !DILocalVariable(name: "buf", arg: 2, scope: !1977, file: !1978, line: 271, type: !995)
!2093 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1977, file: !1978, line: 271, type: !200)
!2094 = !DILocalVariable(name: "off", scope: !1977, file: !1978, line: 273, type: !200)
!2095 = !DILocalVariable(name: "bit", scope: !1977, file: !1978, line: 274, type: !154)
!2096 = !DILocalVariable(name: "thread_state", scope: !1977, file: !1978, line: 275, type: !154)
!2097 = !DILocalVariable(name: "index", scope: !2098, file: !1978, line: 293, type: !154)
!2098 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 293, column: 2)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1316)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2102, file: !2210, line: 56, type: !2199, isLocal: false, isDefinition: true)
!2102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2103, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2104, globals: !2207, splitDebugInlining: false, nameTableKind: None)
!2103 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2104 = !{!2105, !995, !102, !2205, !1755, !1456, !595, !103, !121, !1308, !2206}
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2107)
!2107 = !{!2108, !2166, !2178, !2179, !2180, !2181, !2187, !2200}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2106, file: !211, line: 247, baseType: !2109, size: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2110)
!2110 = !{!2111, !2135, !2142, !2143, !2144, !2153, !2154, !2155}
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !211, line: 60, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !211, line: 60, size: 64, elements: !2113)
!2113 = !{!2114, !2129}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2112, file: !211, line: 61, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2117)
!2117 = !{!2118, !2124}
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !221, line: 38, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !221, line: 38, size: 32, elements: !2120)
!2120 = !{!2121, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2119, file: !221, line: 39, baseType: !2122, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2119, file: !221, line: 40, baseType: !2122, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !221, line: 42, baseType: !2125, size: 32, offset: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !221, line: 42, size: 32, elements: !2126)
!2126 = !{!2127, !2128}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2125, file: !221, line: 43, baseType: !2122, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2125, file: !221, line: 44, baseType: !2122, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2112, file: !211, line: 62, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2131)
!2131 = !{!2132}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2130, file: !237, line: 50, baseType: !2133, size: 64)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2134, size: 64, elements: !242)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2109, file: !211, line: 68, baseType: !2136, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2139)
!2139 = !{!2140}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2138, file: !247, line: 232, baseType: !2141, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2116)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2109, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2109, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2144 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !211, line: 90, baseType: !2145, size: 16, offset: 112)
!2145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !211, line: 90, size: 16, elements: !2146)
!2146 = !{!2147, !2152}
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !211, line: 91, baseType: !2148, size: 16)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2145, file: !211, line: 91, size: 16, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2148, file: !211, line: 96, baseType: !261, size: 8)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2148, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2145, file: !211, line: 100, baseType: !265, size: 16)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2109, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2109, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2109, file: !211, line: 131, baseType: !2156, size: 192, offset: 192)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2157)
!2157 = !{!2158, !2159, !2165}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2156, file: !247, line: 245, baseType: !2115, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2156, file: !247, line: 246, baseType: !2160, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !2164}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2156, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2106, file: !211, line: 250, baseType: !2167, size: 288, offset: 384)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2167, file: !284, line: 26, baseType: !121, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2167, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2167, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2167, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2167, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2167, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2167, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2167, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2167, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2106, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2106, file: !211, line: 256, baseType: !2137, size: 64, offset: 704)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2106, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2106, file: !211, line: 300, baseType: !2182, size: 96, offset: 800)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2183)
!2183 = !{!2184, !2185, !2186}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2182, file: !211, line: 153, baseType: !22, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2182, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2182, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2106, file: !211, line: 325, baseType: !2188, size: 32, offset: 896)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2190)
!2190 = !{!2191, !2197, !2198}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2189, file: !307, line: 5074, baseType: !2192, size: 96)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2192, file: !311, line: 57, baseType: !314, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2192, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2192, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2189, file: !307, line: 5075, baseType: !2137, size: 64, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2189, file: !307, line: 5076, baseType: !2199, offset: 160)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2106, file: !211, line: 343, baseType: !2201, size: 64, offset: 928)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2201, file: !284, line: 63, baseType: !121, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2201, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2207 = !{!2100, !2208, !2211, !2213}
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2102, file: !2210, line: 404, type: !103, isLocal: true, isDefinition: true)
!2210 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2102, file: !2210, line: 405, type: !103, isLocal: true, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "pending_current", scope: !2102, file: !2210, line: 425, type: !2105, isLocal: true, isDefinition: true)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2217, file: !2247, line: 15, type: !1308, isLocal: true, isDefinition: true)
!2217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2219, globals: !2244, splitDebugInlining: false, nameTableKind: None)
!2218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2219 = !{!1456, !102, !595, !121, !1308, !103, !2220, !995, !280}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2222)
!2222 = !{!2223, !2238, !2243}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2221, file: !247, line: 245, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2226)
!2226 = !{!2227, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !221, line: 38, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !221, line: 38, size: 32, elements: !2229)
!2229 = !{!2230, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2228, file: !221, line: 39, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2228, file: !221, line: 40, baseType: !2231, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !221, line: 42, baseType: !2234, size: 32, offset: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !221, line: 42, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2234, file: !221, line: 43, baseType: !2231, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2234, file: !221, line: 44, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2221, file: !247, line: 246, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{null, !2220}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2221, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2244 = !{!2215, !2245, !2249, !2251}
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2217, file: !2247, line: 19, type: !2248, isLocal: true, isDefinition: true)
!2247 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2217, file: !2247, line: 25, type: !103, isLocal: true, isDefinition: true)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2217, file: !2247, line: 17, type: !2253, isLocal: true, isDefinition: true)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2225)
!2254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2255, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2255 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2257, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2259, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2259 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2262, retainedTypes: !2282, splitDebugInlining: false, nameTableKind: None)
!2261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2262 = !{!2263, !2271}
!2263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2264, line: 69, baseType: !32, size: 32, elements: !2265)
!2264 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2265 = !{!2266, !2267, !2268, !2269, !2270}
!2266 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2267 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2268 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2269 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2270 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2264, line: 56, baseType: !32, size: 32, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281}
!2273 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2274 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2275 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2276 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2277 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2278 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2279 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2280 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2281 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2282 = !{!103, !2263, !2271, !2283, !262, !164, !2285, !2286, !155, !266, !144, !200, !102, !22, !32, !2288, !2289, !2290, !2291, !2292, !281, !2293, !2284, !2294, !2295, !2296, !2297}
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2264, line: 31, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2264, line: 32, baseType: !2287)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1309)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2291 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2299, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2299 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2301, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2302, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2301 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2302 = !{!2303, !30}
!2303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2304, line: 27, baseType: !32, size: 32, elements: !2305)
!2304 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2305 = !{!2306, !2307, !2308, !2309, !2310}
!2306 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2307 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2308 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2309 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2310 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2313, retainedTypes: !2314, splitDebugInlining: false, nameTableKind: None)
!2312 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2313 = !{!425, !2303, !30}
!2314 = !{!621, !2315, !102, !103, !595, !121, !154, !2332}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2317, file: !356, line: 413, baseType: !1471, size: 256)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2317, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2317, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2317, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2317, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2317, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2317, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2317, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2317, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2317, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2317, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2317, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2317, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2334)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2335)
!2335 = !{!2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2334, file: !356, line: 447, baseType: !360, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2334, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2334, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2334, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2334, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2334, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2334, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2334, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2334, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2334, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2334, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2334, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2334, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2334, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2334, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2334, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2334, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2334, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2334, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2334, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2334, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2358 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2361, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2361 = !{!102, !103, !22, !2362}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2364, file: !356, line: 447, baseType: !360, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2364, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2364, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2364, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2364, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2364, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2364, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2364, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2364, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2364, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2364, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2364, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2364, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2364, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2364, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2364, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2364, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2364, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2364, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2364, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2364, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2389, splitDebugInlining: false, nameTableKind: None)
!2388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2389 = !{!2390, !102, !103}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2392, file: !356, line: 447, baseType: !360, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2392, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2392, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2392, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2392, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2392, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2392, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2392, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2392, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2392, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2392, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2392, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2392, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2392, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2392, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2392, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2392, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2392, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2392, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2392, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2392, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2417, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2417 = !{!2418, !121, !102, !103}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !2421)
!2420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2421 = !{!2422, !2427, !2432, !2437, !2442, !2447, !2452, !2457}
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 99, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 99, size: 32, elements: !2424)
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2423, file: !2420, line: 99, baseType: !121, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2423, file: !2420, line: 99, baseType: !121, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 100, baseType: !2428, size: 32, offset: 32)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 100, size: 32, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2428, file: !2420, line: 100, baseType: !121, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2428, file: !2420, line: 100, baseType: !121, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 101, baseType: !2433, size: 32, offset: 64)
!2433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 101, size: 32, elements: !2434)
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2433, file: !2420, line: 101, baseType: !121, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2433, file: !2420, line: 101, baseType: !121, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 102, baseType: !2438, size: 32, offset: 96)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 102, size: 32, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2438, file: !2420, line: 102, baseType: !121, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2438, file: !2420, line: 102, baseType: !121, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 103, baseType: !2443, size: 32, offset: 128)
!2443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 103, size: 32, elements: !2444)
!2444 = !{!2445, !2446}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2443, file: !2420, line: 103, baseType: !121, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2443, file: !2420, line: 103, baseType: !121, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 104, baseType: !2448, size: 32, offset: 160)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 104, size: 32, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2448, file: !2420, line: 104, baseType: !121, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2448, file: !2420, line: 104, baseType: !121, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !2420, line: 105, baseType: !2453, size: 32, offset: 192)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !2420, line: 105, size: 32, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2453, file: !2420, line: 105, baseType: !121, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2453, file: !2420, line: 105, baseType: !121, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2419, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!2458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2302, retainedTypes: !2460, splitDebugInlining: false, nameTableKind: None)
!2459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2460 = !{!2461, !102, !103, !2486, !2529, !121}
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2463)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2464)
!2464 = !{!2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2463, file: !356, line: 447, baseType: !360, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2463, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2463, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2463, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2463, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2463, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2463, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2463, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2463, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2463, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2463, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2463, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2463, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2463, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2463, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2463, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2463, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2463, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2463, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2463, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2463, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2420, line: 141, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2420, line: 97, size: 256, elements: !2489)
!2489 = !{!2490}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2488, file: !2420, line: 107, baseType: !2491, size: 256)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !2492)
!2492 = !{!2493, !2498, !2503, !2508, !2513, !2518, !2523, !2528}
!2493 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 99, baseType: !2494, size: 32)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 99, size: 32, elements: !2495)
!2495 = !{!2496, !2497}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2494, file: !2420, line: 99, baseType: !121, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2494, file: !2420, line: 99, baseType: !121, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 100, baseType: !2499, size: 32, offset: 32)
!2499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 100, size: 32, elements: !2500)
!2500 = !{!2501, !2502}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2499, file: !2420, line: 100, baseType: !121, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2499, file: !2420, line: 100, baseType: !121, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 101, baseType: !2504, size: 32, offset: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 101, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2504, file: !2420, line: 101, baseType: !121, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2504, file: !2420, line: 101, baseType: !121, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 102, baseType: !2509, size: 32, offset: 96)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 102, size: 32, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2509, file: !2420, line: 102, baseType: !121, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2509, file: !2420, line: 102, baseType: !121, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 103, baseType: !2514, size: 32, offset: 128)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 103, size: 32, elements: !2515)
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2514, file: !2420, line: 103, baseType: !121, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2514, file: !2420, line: 103, baseType: !121, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 104, baseType: !2519, size: 32, offset: 160)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 104, size: 32, elements: !2520)
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2519, file: !2420, line: 104, baseType: !121, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2519, file: !2420, line: 104, baseType: !121, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !2420, line: 105, baseType: !2524, size: 32, offset: 192)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !2420, line: 105, size: 32, elements: !2525)
!2525 = !{!2526, !2527}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2524, file: !2420, line: 105, baseType: !121, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2524, file: !2420, line: 105, baseType: !121, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2491, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !2532, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2532 = !{!621, !595, !154, !121, !2533, !2550}
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2536)
!2536 = !{!2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2535, file: !356, line: 413, baseType: !1471, size: 256)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2535, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2535, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2535, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2535, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2535, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2535, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2535, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2535, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2535, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2535, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2535, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2535, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2552, file: !356, line: 447, baseType: !360, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2552, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2552, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2552, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2552, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2552, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2552, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2552, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2552, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2552, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2552, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2552, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2552, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2552, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2552, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2552, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2552, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2552, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2552, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2552, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2552, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2577, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2577 = !{!2578, !102, !103}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2580, file: !356, line: 447, baseType: !360, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2580, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2580, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2580, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2580, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2580, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2580, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2580, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2580, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2580, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2580, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2580, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2580, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2580, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2580, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2580, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2580, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2580, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2580, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2580, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2580, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2605, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2605 = !{!146, !995, !200, !828, !2606, !155, !102}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2609, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2610, splitDebugInlining: false, nameTableKind: None)
!2609 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2610 = !{!2611}
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2613)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2613, file: !116, line: 552, baseType: !120, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2613, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2613, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2613, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2613, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2613, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2613, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2613, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2613, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2613, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2613, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2613, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2613, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2613, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2613, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2613, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2613, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2613, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2613, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2613, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2613, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2613, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2613, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2613, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2613, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2613, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2613, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2613, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2613, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2613, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2613, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2613, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2613, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2613, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2649 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2650, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2650 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2653, retainedTypes: !2669, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2653 = !{!2654, !2661, !2665}
!2654 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2655, line: 38, baseType: !32, size: 32, elements: !2656)
!2655 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2656 = !{!2657, !2658, !2659, !2660}
!2657 = !DIEnumerator(name: "HAL_OK", value: 0)
!2658 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2659 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2660 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2661 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 184, baseType: !32, size: 32, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIEnumerator(name: "RESET", value: 0)
!2664 = !DIEnumerator(name: "SET", value: 1)
!2665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 190, baseType: !32, size: 32, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIEnumerator(name: "DISABLE", value: 0)
!2668 = !DIEnumerator(name: "ENABLE", value: 1)
!2669 = !{!2670, !121, !2708, !1310, !154, !1308, !102}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2672, file: !116, line: 552, baseType: !120, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2672, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2672, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2672, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2672, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2672, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2672, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2672, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2672, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2672, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2672, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2672, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2672, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2672, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2672, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2672, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2672, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2672, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2672, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2672, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2672, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2672, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2672, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2672, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2672, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2672, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2672, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2672, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2672, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2672, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2672, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2672, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2672, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2672, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2710, file: !116, line: 542, baseType: !120, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2710, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!2714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2716, retainedTypes: !2717, splitDebugInlining: false, nameTableKind: None)
!2715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2716 = !{!665}
!2717 = !{!2718, !121, !2726, !2732, !2743}
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2721)
!2721 = !{!2722, !2723, !2724, !2725}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2720, file: !356, line: 766, baseType: !120, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2720, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2720, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2720, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2728, file: !116, line: 542, baseType: !120, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2728, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !2735)
!2735 = !{!2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2734, file: !116, line: 400, baseType: !120, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2734, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2734, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2734, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2734, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2734, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2734, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2745)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2745, file: !116, line: 552, baseType: !120, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2745, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2745, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2745, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2745, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2745, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2745, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2745, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2745, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2745, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2745, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2745, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2745, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2745, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2745, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2745, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2745, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2745, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2745, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2745, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2745, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2745, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2745, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2745, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2745, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2745, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2745, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2745, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2745, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2745, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2745, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2745, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2745, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2745, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2783, splitDebugInlining: false, nameTableKind: None)
!2782 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2783 = !{!102, !200}
!2784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2786, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2786 = !{!2787, !2794, !30}
!2787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2788, line: 14, baseType: !32, size: 32, elements: !2789)
!2788 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2789 = !{!2790, !2791, !2792, !2793}
!2790 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2791 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2792 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2793 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2794 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2788, line: 42, baseType: !32, size: 32, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801}
!2796 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2797 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2798 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2799 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2800 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2801 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2806, splitDebugInlining: false, nameTableKind: None)
!2805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2806 = !{!22, !102, !103}
!2807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!2809 = !{!"Ubuntu clang version 14.0.6"}
!2810 = !{i32 7, !"Dwarf Version", i32 4}
!2811 = !{i32 2, !"Debug Info Version", i32 3}
!2812 = !{i32 1, !"wchar_size", i32 4}
!2813 = !{i32 1, !"min_enum_size", i32 4}
!2814 = !{i32 1, !"branch-target-enforcement", i32 0}
!2815 = !{i32 1, !"sign-return-address", i32 0}
!2816 = !{i32 1, !"sign-return-address-all", i32 0}
!2817 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2818 = !{i32 7, !"frame-pointer", i32 2}
!2819 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2820, file: !2820, line: 26, type: !2821, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2254, retainedNodes: !322)
!2820 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2821 = !DISubroutineType(types: !2822)
!2822 = !{null}
!2823 = !DILocation(line: 28, column: 1, scope: !2819)
!2824 = !{i64 2155360463, i64 2155360483, i64 2155360546}
!2825 = !DILocation(line: 29, column: 1, scope: !2819)
!2826 = !{i64 2155360878, i64 2155360898, i64 2155360961}
!2827 = !DILocation(line: 30, column: 1, scope: !2819)
!2828 = !{i64 2155361297, i64 2155361317, i64 2155361380}
!2829 = !DILocation(line: 31, column: 1, scope: !2819)
!2830 = !{i64 2155361716, i64 2155361736, i64 2155361799}
!2831 = !DILocation(line: 33, column: 1, scope: !2819)
!2832 = !{i64 2155362008, i64 2155362028, i64 2155362091}
!2833 = !DILocation(line: 35, column: 1, scope: !2819)
!2834 = !{i64 2155362333, i64 2155362353, i64 2155362416}
!2835 = !DILocation(line: 50, column: 1, scope: !2819)
!2836 = !{i64 2155362760, i64 2155362780, i64 2155362843}
!2837 = !DILocation(line: 54, column: 1, scope: !2819)
!2838 = !{i64 2155367260, i64 2155367280, i64 2155367343}
!2839 = !DILocation(line: 61, column: 1, scope: !2819)
!2840 = !{i64 2155367577, i64 2155367597, i64 2155367660}
!2841 = !DILocation(line: 63, column: 1, scope: !2819)
!2842 = !{i64 2155367957, i64 2155367977, i64 2155368040}
!2843 = !DILocation(line: 64, column: 1, scope: !2819)
!2844 = !{i64 2155368479, i64 2155368499, i64 2155368562}
!2845 = !DILocation(line: 65, column: 1, scope: !2819)
!2846 = !{i64 2155368977, i64 2155368997, i64 2155369060}
!2847 = !DILocation(line: 66, column: 1, scope: !2819)
!2848 = !{i64 2155369459, i64 2155369479, i64 2155369542}
!2849 = !DILocation(line: 67, column: 1, scope: !2819)
!2850 = !{i64 2155369966, i64 2155369986, i64 2155370049}
!2851 = !DILocation(line: 68, column: 1, scope: !2819)
!2852 = !{i64 2155370454, i64 2155370474, i64 2155370537}
!2853 = !DILocation(line: 70, column: 1, scope: !2819)
!2854 = !{i64 2155370922, i64 2155370942, i64 2155371005}
!2855 = !DILocation(line: 71, column: 1, scope: !2819)
!2856 = !{i64 2155371364, i64 2155371384, i64 2155371447}
!2857 = !DILocation(line: 72, column: 1, scope: !2819)
!2858 = !{i64 2155371822, i64 2155371842, i64 2155371905}
!2859 = !DILocation(line: 79, column: 1, scope: !2819)
!2860 = !{i64 2155372276, i64 2155372296, i64 2155372359}
!2861 = !DILocation(line: 80, column: 1, scope: !2819)
!2862 = !{i64 2155372787, i64 2155372807, i64 2155372870}
!2863 = !DILocation(line: 82, column: 1, scope: !2819)
!2864 = !{i64 2155373278, i64 2155373298, i64 2155373361}
!2865 = !DILocation(line: 97, column: 1, scope: !2819)
!2866 = !{i64 2155373615, i64 2155373635, i64 2155373698}
!2867 = !DILocation(line: 99, column: 1, scope: !2819)
!2868 = !{i64 2155373833, i64 2155373853, i64 2155373916}
!2869 = !DILocation(line: 102, column: 1, scope: !2819)
!2870 = !{i64 2155374090, i64 2155374110, i64 2155374173}
!2871 = !DILocation(line: 105, column: 1, scope: !2819)
!2872 = !{i64 2155374330, i64 2155374350, i64 2155374413}
!2873 = !DILocation(line: 115, column: 1, scope: !2819)
!2874 = !{i64 2155374669, i64 2155374689, i64 2155374752}
!2875 = !DILocation(line: 118, column: 1, scope: !2819)
!2876 = !{i64 2155375013, i64 2155375033, i64 2155375096}
!2877 = !DILocation(line: 32, column: 1, scope: !2878)
!2878 = !DILexicalBlockFile(scope: !2819, file: !2879, discriminator: 0)
!2879 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2880 = !{i64 2155375369, i64 2155375389, i64 2155375452}
!2881 = !DILocation(line: 33, column: 1, scope: !2878)
!2882 = !{i64 2155375881, i64 2155375901, i64 2155375964}
!2883 = !DILocation(line: 53, column: 1, scope: !2878)
!2884 = !{i64 2155376389, i64 2155376409, i64 2155376472}
!2885 = !DILocation(line: 54, column: 1, scope: !2878)
!2886 = !{i64 2155380868, i64 2155380888, i64 2155380951}
!2887 = !DILocation(line: 55, column: 1, scope: !2878)
!2888 = !{i64 2155381286, i64 2155381306, i64 2155381369}
!2889 = !DILocation(line: 56, column: 1, scope: !2878)
!2890 = !{i64 2155381704, i64 2155381724, i64 2155381787}
!2891 = !DILocation(line: 57, column: 1, scope: !2878)
!2892 = !{i64 2155382122, i64 2155382142, i64 2155382205}
!2893 = !DILocation(line: 58, column: 1, scope: !2878)
!2894 = !{i64 2155382540, i64 2155382560, i64 2155382623}
!2895 = !DILocation(line: 59, column: 1, scope: !2878)
!2896 = !{i64 2155382958, i64 2155382978, i64 2155383041}
!2897 = !DILocation(line: 60, column: 1, scope: !2878)
!2898 = !{i64 2155383382, i64 2155383402, i64 2155383465}
!2899 = !DILocation(line: 61, column: 1, scope: !2878)
!2900 = !{i64 2155383699, i64 2155383719, i64 2155383782}
!2901 = !DILocation(line: 70, column: 1, scope: !2878)
!2902 = !{i64 2155383928, i64 2155383948, i64 2155384011}
!2903 = !DILocation(line: 72, column: 1, scope: !2878)
!2904 = !{i64 2155384260, i64 2155384280, i64 2155384343}
!2905 = !DILocation(line: 73, column: 1, scope: !2878)
!2906 = !{i64 2155384710, i64 2155384730, i64 2155384793}
!2907 = !DILocation(line: 74, column: 1, scope: !2878)
!2908 = !{i64 2155385160, i64 2155385180, i64 2155385243}
!2909 = !DILocation(line: 75, column: 1, scope: !2878)
!2910 = !{i64 2155385610, i64 2155385630, i64 2155385693}
!2911 = !DILocation(line: 76, column: 1, scope: !2878)
!2912 = !{i64 2155386060, i64 2155386080, i64 2155386143}
!2913 = !DILocation(line: 77, column: 1, scope: !2878)
!2914 = !{i64 2155386510, i64 2155386530, i64 2155386593}
!2915 = !DILocation(line: 78, column: 1, scope: !2878)
!2916 = !{i64 2155386960, i64 2155386980, i64 2155387043}
!2917 = !DILocation(line: 79, column: 1, scope: !2878)
!2918 = !{i64 2155387410, i64 2155387430, i64 2155387493}
!2919 = !DILocation(line: 80, column: 1, scope: !2878)
!2920 = !{i64 2155387863, i64 2155387883, i64 2155387946}
!2921 = !DILocation(line: 84, column: 1, scope: !2878)
!2922 = !{i64 2155388195, i64 2155388215, i64 2155388278}
!2923 = !DILocation(line: 91, column: 1, scope: !2878)
!2924 = !{i64 2155388592, i64 2155388612, i64 2155388675}
!2925 = !DILocation(line: 93, column: 1, scope: !2878)
!2926 = !{i64 2155388959, i64 2155388979, i64 2155389042}
!2927 = !DILocation(line: 106, column: 1, scope: !2878)
!2928 = !{i64 2155389229, i64 2155389249, i64 2155389312}
!2929 = !DILocation(line: 11, column: 1, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !2819, file: !2931, discriminator: 0)
!2931 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2932 = distinct !DISubprogram(name: "main", scope: !2933, file: !2933, line: 9, type: !2821, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !322)
!2933 = !DIFile(filename: "zephyr/samples/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2934 = !DILocation(line: 11, column: 2, scope: !2932)
!2935 = !DILocation(line: 12, column: 1, scope: !2932)
!2936 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2937)
!2937 = !{!2938}
!2938 = !DILocalVariable(name: "c", arg: 1, scope: !2936, file: !105, line: 45, type: !103)
!2939 = !DILocation(line: 0, scope: !2936)
!2940 = !DILocation(line: 50, column: 2, scope: !2936)
!2941 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !2942, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2944)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{null, !106}
!2944 = !{!2945}
!2945 = !DILocalVariable(name: "fn", arg: 1, scope: !2941, file: !105, line: 63, type: !106)
!2946 = !DILocation(line: 0, scope: !2941)
!2947 = !DILocation(line: 65, column: 12, scope: !2941)
!2948 = !DILocation(line: 66, column: 1, scope: !2941)
!2949 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !2950, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!102}
!2952 = !DILocation(line: 78, column: 9, scope: !2949)
!2953 = !DILocation(line: 78, column: 2, scope: !2949)
!2954 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !2955, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2964)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{null, !144, !2957}
!2957 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2958, line: 99, baseType: !2959)
!2958 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2958, line: 40, baseType: !2960)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2962)
!2962 = !{!2963}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2961, file: !105, line: 79, baseType: !102, size: 32)
!2964 = !{!2965, !2966, !2967}
!2965 = !DILocalVariable(name: "fmt", arg: 1, scope: !2954, file: !105, line: 113, type: !144)
!2966 = !DILocalVariable(name: "ap", arg: 2, scope: !2954, file: !105, line: 113, type: !2957)
!2967 = !DILocalVariable(name: "ctx", scope: !2968, file: !105, line: 121, type: !2970)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !105, line: 120, column: 27)
!2969 = distinct !DILexicalBlock(scope: !2954, file: !105, line: 120, column: 6)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2970, file: !105, line: 85, baseType: !32, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2970, file: !105, line: 86, baseType: !2974, offset: 32)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2975)
!2975 = !{!2976}
!2976 = !DISubrange(count: 0)
!2977 = !DILocation(line: 0, scope: !2954)
!2978 = !DILocation(line: 148, column: 3, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2969, file: !105, line: 138, column: 9)
!2980 = !DILocation(line: 155, column: 1, scope: !2954)
!2981 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !2982, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2984)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!103, !103, !102}
!2984 = !{!2985, !2986}
!2985 = !DILocalVariable(name: "c", arg: 1, scope: !2981, file: !105, line: 107, type: !103)
!2986 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2981, file: !105, line: 107, type: !102)
!2987 = !DILocation(line: 0, scope: !2981)
!2988 = !DILocation(line: 110, column: 9, scope: !2981)
!2989 = !DILocation(line: 110, column: 2, scope: !2981)
!2990 = distinct !DISubprogram(name: "cbvprintf", scope: !2991, file: !2991, line: 739, type: !2992, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2998)
!2991 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!103, !2994, !102, !144, !2957}
!2994 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2991, line: 297, baseType: !2995)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!103, null}
!2998 = !{!2999, !3000, !3001, !3002}
!2999 = !DILocalVariable(name: "out", arg: 1, scope: !2990, file: !2991, line: 739, type: !2994)
!3000 = !DILocalVariable(name: "ctx", arg: 2, scope: !2990, file: !2991, line: 739, type: !102)
!3001 = !DILocalVariable(name: "format", arg: 3, scope: !2990, file: !2991, line: 739, type: !144)
!3002 = !DILocalVariable(name: "ap", arg: 4, scope: !2990, file: !2991, line: 739, type: !2957)
!3003 = !DILocation(line: 0, scope: !2990)
!3004 = !DILocation(line: 741, column: 9, scope: !2990)
!3005 = !DILocation(line: 741, column: 2, scope: !2990)
!3006 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3007, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3009)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{null, !995, !200}
!3009 = !{!3010, !3011, !3012}
!3010 = !DILocalVariable(name: "c", arg: 1, scope: !3006, file: !105, line: 157, type: !995)
!3011 = !DILocalVariable(name: "n", arg: 2, scope: !3006, file: !105, line: 157, type: !200)
!3012 = !DILocalVariable(name: "i", scope: !3006, file: !105, line: 159, type: !200)
!3013 = !DILocation(line: 0, scope: !3006)
!3014 = !DILocation(line: 164, column: 16, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !105, line: 164, column: 2)
!3016 = distinct !DILexicalBlock(scope: !3006, file: !105, line: 164, column: 2)
!3017 = !DILocation(line: 164, column: 2, scope: !3016)
!3018 = !DILocation(line: 165, column: 3, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3015, file: !105, line: 164, column: 26)
!3020 = !DILocation(line: 165, column: 13, scope: !3019)
!3021 = !DILocation(line: 164, column: 22, scope: !3015)
!3022 = distinct !{!3022, !3017, !3023}
!3023 = !DILocation(line: 166, column: 2, scope: !3016)
!3024 = !DILocation(line: 171, column: 1, scope: !3006)
!3025 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3026, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3028)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{null, !144, null}
!3028 = !{!3029, !3030}
!3029 = !DILocalVariable(name: "fmt", arg: 1, scope: !3025, file: !105, line: 203, type: !144)
!3030 = !DILocalVariable(name: "ap", scope: !3025, file: !105, line: 205, type: !2957)
!3031 = !DILocation(line: 0, scope: !3025)
!3032 = !DILocation(line: 205, column: 2, scope: !3025)
!3033 = !DILocation(line: 205, column: 10, scope: !3025)
!3034 = !DILocation(line: 207, column: 2, scope: !3025)
!3035 = !DILocation(line: 209, column: 2, scope: !3025)
!3036 = !DILocation(line: 211, column: 2, scope: !3025)
!3037 = !DILocation(line: 212, column: 1, scope: !3025)
!3038 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3039, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3041)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!103, !995, !200, !144, null}
!3041 = !{!3042, !3043, !3044, !3045, !3046}
!3042 = !DILocalVariable(name: "str", arg: 1, scope: !3038, file: !105, line: 239, type: !995)
!3043 = !DILocalVariable(name: "size", arg: 2, scope: !3038, file: !105, line: 239, type: !200)
!3044 = !DILocalVariable(name: "fmt", arg: 3, scope: !3038, file: !105, line: 239, type: !144)
!3045 = !DILocalVariable(name: "ap", scope: !3038, file: !105, line: 241, type: !2957)
!3046 = !DILocalVariable(name: "ret", scope: !3038, file: !105, line: 242, type: !103)
!3047 = !DILocation(line: 0, scope: !3038)
!3048 = !DILocation(line: 241, column: 2, scope: !3038)
!3049 = !DILocation(line: 241, column: 10, scope: !3038)
!3050 = !DILocation(line: 244, column: 2, scope: !3038)
!3051 = !DILocation(line: 245, column: 8, scope: !3038)
!3052 = !DILocation(line: 246, column: 2, scope: !3038)
!3053 = !DILocation(line: 249, column: 1, scope: !3038)
!3054 = !DILocation(line: 248, column: 2, scope: !3038)
!3055 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3056, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3058)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!103, !995, !200, !144, !2957}
!3058 = !{!3059, !3060, !3061, !3062, !3063}
!3059 = !DILocalVariable(name: "str", arg: 1, scope: !3055, file: !105, line: 251, type: !995)
!3060 = !DILocalVariable(name: "size", arg: 2, scope: !3055, file: !105, line: 251, type: !200)
!3061 = !DILocalVariable(name: "fmt", arg: 3, scope: !3055, file: !105, line: 251, type: !144)
!3062 = !DILocalVariable(name: "ap", arg: 4, scope: !3055, file: !105, line: 251, type: !2957)
!3063 = !DILocalVariable(name: "ctx", scope: !3055, file: !105, line: 253, type: !3064)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3065)
!3065 = !{!3066, !3067, !3068}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3064, file: !105, line: 218, baseType: !995, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3064, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3064, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3069 = !DILocation(line: 0, scope: !3055)
!3070 = !DILocation(line: 253, column: 2, scope: !3055)
!3071 = !DILocation(line: 253, column: 21, scope: !3055)
!3072 = !DILocation(line: 253, column: 27, scope: !3055)
!3073 = !DILocation(line: 255, column: 2, scope: !3055)
!3074 = !DILocation(line: 257, column: 10, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3055, file: !105, line: 257, column: 6)
!3076 = !DILocation(line: 257, column: 22, scope: !3075)
!3077 = !DILocation(line: 257, column: 16, scope: !3075)
!3078 = !DILocation(line: 257, column: 6, scope: !3055)
!3079 = !DILocation(line: 258, column: 3, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !105, line: 257, column: 27)
!3081 = !DILocation(line: 258, column: 18, scope: !3080)
!3082 = !DILocation(line: 259, column: 2, scope: !3080)
!3083 = !DILocation(line: 262, column: 1, scope: !3055)
!3084 = !DILocation(line: 261, column: 2, scope: !3055)
!3085 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3086, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3089)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!103, !103, !3088}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 32)
!3089 = !{!3090, !3091}
!3090 = !DILocalVariable(name: "c", arg: 1, scope: !3085, file: !105, line: 223, type: !103)
!3091 = !DILocalVariable(name: "ctx", arg: 2, scope: !3085, file: !105, line: 223, type: !3088)
!3092 = !DILocation(line: 0, scope: !3085)
!3093 = !DILocation(line: 225, column: 11, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3085, file: !105, line: 225, column: 6)
!3095 = !DILocation(line: 225, column: 15, scope: !3094)
!3096 = !DILocation(line: 0, scope: !3094)
!3097 = !DILocation(line: 225, column: 23, scope: !3094)
!3098 = !DILocation(line: 225, column: 45, scope: !3094)
!3099 = !DILocation(line: 225, column: 37, scope: !3094)
!3100 = !DILocation(line: 225, column: 6, scope: !3085)
!3101 = !DILocation(line: 226, column: 8, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3094, file: !105, line: 225, column: 50)
!3103 = !DILocation(line: 226, column: 13, scope: !3102)
!3104 = !DILocation(line: 227, column: 3, scope: !3102)
!3105 = !DILocation(line: 230, column: 29, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3085, file: !105, line: 230, column: 6)
!3107 = !DILocation(line: 230, column: 17, scope: !3106)
!3108 = !DILocation(line: 230, column: 6, scope: !3085)
!3109 = !DILocation(line: 231, column: 22, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !105, line: 230, column: 34)
!3111 = !DILocation(line: 231, column: 3, scope: !3110)
!3112 = !DILocation(line: 231, column: 26, scope: !3110)
!3113 = !DILocation(line: 232, column: 2, scope: !3110)
!3114 = !DILocation(line: 233, column: 28, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3106, file: !105, line: 232, column: 9)
!3116 = !DILocation(line: 233, column: 22, scope: !3115)
!3117 = !DILocation(line: 233, column: 3, scope: !3115)
!3118 = !DILocation(line: 233, column: 26, scope: !3115)
!3119 = !DILocation(line: 237, column: 1, scope: !3085)
!3120 = distinct !DISubprogram(name: "z_thread_entry", scope: !3121, file: !3121, line: 30, type: !3122, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !3129)
!3121 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3122 = !DISubroutineType(types: !3123)
!3123 = !{null, !3124, !102, !102, !102}
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3125, line: 46, baseType: !3126)
!3125 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 32)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !102, !102, !102}
!3129 = !{!3130, !3131, !3132, !3133}
!3130 = !DILocalVariable(name: "entry", arg: 1, scope: !3120, file: !3121, line: 30, type: !3124)
!3131 = !DILocalVariable(name: "p1", arg: 2, scope: !3120, file: !3121, line: 31, type: !102)
!3132 = !DILocalVariable(name: "p2", arg: 3, scope: !3120, file: !3121, line: 31, type: !102)
!3133 = !DILocalVariable(name: "p3", arg: 4, scope: !3120, file: !3121, line: 31, type: !102)
!3134 = !DILocation(line: 0, scope: !3120)
!3135 = !DILocation(line: 36, column: 2, scope: !3120)
!3136 = !DILocation(line: 38, column: 17, scope: !3120)
!3137 = !DILocation(line: 38, column: 2, scope: !3120)
!3138 = !DILocation(line: 45, column: 2, scope: !3120)
!3139 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3140, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !322)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!3142}
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3143)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 32)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3145)
!3145 = !{!3146, !3204, !3216, !3217, !3218, !3219, !3225, !3238}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3144, file: !211, line: 247, baseType: !3147, size: 384)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3148)
!3148 = !{!3149, !3173, !3180, !3181, !3182, !3191, !3192, !3193}
!3149 = !DIDerivedType(tag: DW_TAG_member, scope: !3147, file: !211, line: 60, baseType: !3150, size: 64)
!3150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3147, file: !211, line: 60, size: 64, elements: !3151)
!3151 = !{!3152, !3167}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3150, file: !211, line: 61, baseType: !3153, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3154)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3155)
!3155 = !{!3156, !3162}
!3156 = !DIDerivedType(tag: DW_TAG_member, scope: !3154, file: !221, line: 38, baseType: !3157, size: 32)
!3157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3154, file: !221, line: 38, size: 32, elements: !3158)
!3158 = !{!3159, !3161}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3157, file: !221, line: 39, baseType: !3160, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3157, file: !221, line: 40, baseType: !3160, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, scope: !3154, file: !221, line: 42, baseType: !3163, size: 32, offset: 32)
!3163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3154, file: !221, line: 42, size: 32, elements: !3164)
!3164 = !{!3165, !3166}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3163, file: !221, line: 43, baseType: !3160, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3163, file: !221, line: 44, baseType: !3160, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3150, file: !211, line: 62, baseType: !3168, size: 64)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3169)
!3169 = !{!3170}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3168, file: !237, line: 50, baseType: !3171, size: 64)
!3171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3172, size: 64, elements: !242)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3147, file: !211, line: 68, baseType: !3174, size: 32, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3176)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3177)
!3177 = !{!3178}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3176, file: !247, line: 232, baseType: !3179, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3154)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3147, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3147, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3182 = !DIDerivedType(tag: DW_TAG_member, scope: !3147, file: !211, line: 90, baseType: !3183, size: 16, offset: 112)
!3183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3147, file: !211, line: 90, size: 16, elements: !3184)
!3184 = !{!3185, !3190}
!3185 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !211, line: 91, baseType: !3186, size: 16)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !211, line: 91, size: 16, elements: !3187)
!3187 = !{!3188, !3189}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3186, file: !211, line: 96, baseType: !261, size: 8)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3186, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3183, file: !211, line: 100, baseType: !265, size: 16)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3147, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3147, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3147, file: !211, line: 131, baseType: !3194, size: 192, offset: 192)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3195)
!3195 = !{!3196, !3197, !3203}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3194, file: !247, line: 245, baseType: !3153, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3194, file: !247, line: 246, baseType: !3198, size: 32, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3199)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 32)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{null, !3202}
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3194, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3144, file: !211, line: 250, baseType: !3205, size: 288, offset: 384)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3206)
!3206 = !{!3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3205, file: !284, line: 26, baseType: !121, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3205, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3205, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3205, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3205, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3205, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3205, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3205, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3205, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3144, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3144, file: !211, line: 256, baseType: !3175, size: 64, offset: 704)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3144, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3144, file: !211, line: 300, baseType: !3220, size: 96, offset: 800)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3221)
!3221 = !{!3222, !3223, !3224}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3220, file: !211, line: 153, baseType: !22, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3220, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3220, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3144, file: !211, line: 325, baseType: !3226, size: 32, offset: 896)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 32)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3228)
!3228 = !{!3229, !3235, !3236}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3227, file: !307, line: 5074, baseType: !3230, size: 96)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3231)
!3231 = !{!3232, !3233, !3234}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3230, file: !311, line: 57, baseType: !314, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3230, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3230, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3227, file: !307, line: 5075, baseType: !3175, size: 64, offset: 96)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3227, file: !307, line: 5076, baseType: !3237, offset: 160)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3144, file: !211, line: 343, baseType: !3239, size: 64, offset: 928)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3240)
!3240 = !{!3241, !3242}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3239, file: !284, line: 63, baseType: !121, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3239, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3243 = !DILocation(line: 535, column: 9, scope: !3139)
!3244 = !DILocation(line: 535, column: 2, scope: !3139)
!3245 = distinct !DISubprogram(name: "k_thread_abort", scope: !3246, file: !3246, line: 188, type: !3247, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !3249)
!3246 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!3247 = !DISubroutineType(types: !3248)
!3248 = !{null, !3142}
!3249 = !{!3250}
!3250 = !DILocalVariable(name: "thread", arg: 1, scope: !3245, file: !3246, line: 188, type: !3142)
!3251 = !DILocation(line: 0, scope: !3245)
!3252 = !DILocation(line: 197, column: 2, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3245, file: !3246, line: 197, column: 2)
!3254 = !{i64 2155057728}
!3255 = !DILocation(line: 198, column: 2, scope: !3245)
!3256 = !DILocation(line: 199, column: 1, scope: !3245)
!3257 = distinct !DISubprogram(name: "z_current_get", scope: !3246, file: !3246, line: 173, type: !3140, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !322)
!3258 = !DILocation(line: 180, column: 2, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3257, file: !3246, line: 180, column: 2)
!3260 = !{i64 2155057660}
!3261 = !DILocation(line: 181, column: 9, scope: !3257)
!3262 = !DILocation(line: 181, column: 2, scope: !3257)
!3263 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2264, file: !2264, line: 1338, type: !3264, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3272)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{!103, !2994, !102, !144, !3266, !121}
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2958, line: 99, baseType: !3267)
!3267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2958, line: 40, baseType: !3268)
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2264, baseType: !3269)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3270)
!3270 = !{!3271}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3269, file: !2264, baseType: !102, size: 32)
!3272 = !{!3273, !3274, !3275, !3276, !3277, !3278, !3282, !3283, !3284, !3286, !3291, !3336, !3339, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3351, !3352, !3353, !3357, !3360, !3362, !3365, !3366, !3367, !3372, !3378, !3381, !3385, !3391, !3395, !3398, !3400, !3403}
!3273 = !DILocalVariable(name: "out", arg: 1, scope: !3263, file: !2264, line: 1338, type: !2994)
!3274 = !DILocalVariable(name: "ctx", arg: 2, scope: !3263, file: !2264, line: 1338, type: !102)
!3275 = !DILocalVariable(name: "fp", arg: 3, scope: !3263, file: !2264, line: 1338, type: !144)
!3276 = !DILocalVariable(name: "ap", arg: 4, scope: !3263, file: !2264, line: 1339, type: !3266)
!3277 = !DILocalVariable(name: "flags", arg: 5, scope: !3263, file: !2264, line: 1339, type: !121)
!3278 = !DILocalVariable(name: "buf", scope: !3263, file: !2264, line: 1341, type: !3279)
!3279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !3280)
!3280 = !{!3281}
!3281 = !DISubrange(count: 22)
!3282 = !DILocalVariable(name: "count", scope: !3263, file: !2264, line: 1342, type: !200)
!3283 = !DILocalVariable(name: "sint", scope: !3263, file: !2264, line: 1343, type: !2283)
!3284 = !DILocalVariable(name: "tagged_ap", scope: !3263, file: !2264, line: 1345, type: !3285)
!3285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3286 = !DILocalVariable(name: "rc", scope: !3287, file: !2264, line: 1377, type: !103)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !2264, line: 1377, column: 4)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !2264, line: 1376, column: 19)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1376, column: 7)
!3290 = distinct !DILexicalBlock(scope: !3263, file: !2264, line: 1375, column: 19)
!3291 = !DILocalVariable(name: "state", scope: !3290, file: !2264, line: 1395, type: !3292)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3263, file: !2264, line: 1392, size: 192, elements: !3293)
!3293 = !{!3294, !3304}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3292, file: !2264, line: 1393, baseType: !3295, size: 64)
!3295 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2264, line: 166, size: 64, elements: !3296)
!3296 = !{!3297, !3298, !3299, !3301, !3303}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3295, file: !2264, line: 168, baseType: !2283, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3295, file: !2264, line: 171, baseType: !2286, size: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3295, file: !2264, line: 174, baseType: !3300, size: 64)
!3300 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3295, file: !2264, line: 177, baseType: !3302, size: 64)
!3302 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3295, file: !2264, line: 180, baseType: !102, size: 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3292, file: !2264, line: 1394, baseType: !3305, size: 96, offset: 64)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2264, line: 189, size: 96, elements: !3306)
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3331}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3305, file: !2264, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3305, file: !2264, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3305, file: !2264, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3305, file: !2264, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3305, file: !2264, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3305, file: !2264, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3305, file: !2264, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3305, file: !2264, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3305, file: !2264, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3305, file: !2264, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3305, file: !2264, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3305, file: !2264, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3305, file: !2264, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3305, file: !2264, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3305, file: !2264, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3305, file: !2264, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3305, file: !2264, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3305, file: !2264, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3305, file: !2264, line: 260, baseType: !155, size: 8, offset: 24)
!3326 = !DIDerivedType(tag: DW_TAG_member, scope: !3305, file: !2264, line: 262, baseType: !3327, size: 32, offset: 32)
!3327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3305, file: !2264, line: 262, size: 32, elements: !3328)
!3328 = !{!3329, !3330}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3327, file: !2264, line: 267, baseType: !103, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3327, file: !2264, line: 289, baseType: !103, size: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, scope: !3305, file: !2264, line: 292, baseType: !3332, size: 32, offset: 64)
!3332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3305, file: !2264, line: 292, size: 32, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3332, file: !2264, line: 297, baseType: !103, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3332, file: !2264, line: 306, baseType: !103, size: 32)
!3336 = !DILocalVariable(name: "conv", scope: !3290, file: !2264, line: 1400, type: !3337)
!3337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3338)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 32)
!3339 = !DILocalVariable(name: "value", scope: !3290, file: !2264, line: 1401, type: !3340)
!3340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3341)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 32)
!3342 = !DILocalVariable(name: "sp", scope: !3290, file: !2264, line: 1402, type: !144)
!3343 = !DILocalVariable(name: "width", scope: !3290, file: !2264, line: 1403, type: !103)
!3344 = !DILocalVariable(name: "precision", scope: !3290, file: !2264, line: 1404, type: !103)
!3345 = !DILocalVariable(name: "bps", scope: !3290, file: !2264, line: 1405, type: !144)
!3346 = !DILocalVariable(name: "bpe", scope: !3290, file: !2264, line: 1406, type: !144)
!3347 = !DILocalVariable(name: "sign", scope: !3290, file: !2264, line: 1407, type: !146)
!3348 = !DILocalVariable(name: "arg", scope: !3349, file: !2264, line: 1432, type: !103)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !2264, line: 1431, column: 24)
!3350 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1431, column: 7)
!3351 = !DILocalVariable(name: "specifier_cat", scope: !3290, file: !2264, line: 1468, type: !2263)
!3352 = !DILocalVariable(name: "length_mod", scope: !3290, file: !2264, line: 1470, type: !2271)
!3353 = !DILocalVariable(name: "rc", scope: !3354, file: !2264, line: 1575, type: !103)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !2264, line: 1575, column: 4)
!3355 = distinct !DILexicalBlock(scope: !3356, file: !2264, line: 1574, column: 43)
!3356 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1574, column: 7)
!3357 = !DILocalVariable(name: "rc", scope: !3358, file: !2264, line: 1584, type: !103)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1584, column: 4)
!3359 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1582, column: 28)
!3360 = !DILocalVariable(name: "len", scope: !3361, file: !2264, line: 1589, type: !200)
!3361 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1586, column: 13)
!3362 = !DILocalVariable(name: "len", scope: !3363, file: !2264, line: 1641, type: !200)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !2264, line: 1640, column: 24)
!3364 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1640, column: 8)
!3365 = !DILocalVariable(name: "nj_len", scope: !3290, file: !2264, line: 1722, type: !200)
!3366 = !DILocalVariable(name: "pad_len", scope: !3290, file: !2264, line: 1723, type: !103)
!3367 = !DILocalVariable(name: "pad", scope: !3368, file: !2264, line: 1751, type: !146)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !2264, line: 1750, column: 26)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !2264, line: 1750, column: 8)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !2264, line: 1747, column: 18)
!3371 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1747, column: 7)
!3372 = !DILocalVariable(name: "rc", scope: !3373, file: !2264, line: 1758, type: !103)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !2264, line: 1758, column: 7)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !2264, line: 1757, column: 21)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !2264, line: 1757, column: 10)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !2264, line: 1756, column: 26)
!3377 = distinct !DILexicalBlock(scope: !3368, file: !2264, line: 1756, column: 9)
!3378 = !DILocalVariable(name: "rc", scope: !3379, file: !2264, line: 1765, type: !103)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !2264, line: 1765, column: 6)
!3380 = distinct !DILexicalBlock(scope: !3368, file: !2264, line: 1764, column: 25)
!3381 = !DILocalVariable(name: "rc", scope: !3382, file: !2264, line: 1774, type: !103)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !2264, line: 1774, column: 4)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !2264, line: 1773, column: 18)
!3384 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1773, column: 7)
!3385 = !DILocalVariable(name: "rc", scope: !3386, file: !2264, line: 1819, type: !103)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !2264, line: 1819, column: 5)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !2264, line: 1818, column: 44)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !2264, line: 1818, column: 8)
!3389 = distinct !DILexicalBlock(scope: !3390, file: !2264, line: 1817, column: 10)
!3390 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1777, column: 7)
!3391 = !DILocalVariable(name: "rc", scope: !3392, file: !2264, line: 1823, type: !103)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !2264, line: 1823, column: 5)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !2264, line: 1822, column: 26)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !2264, line: 1822, column: 8)
!3395 = !DILocalVariable(name: "rc", scope: !3396, file: !2264, line: 1828, type: !103)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !2264, line: 1828, column: 5)
!3397 = distinct !DILexicalBlock(scope: !3389, file: !2264, line: 1827, column: 26)
!3398 = !DILocalVariable(name: "rc", scope: !3399, file: !2264, line: 1831, type: !103)
!3399 = distinct !DILexicalBlock(scope: !3389, file: !2264, line: 1831, column: 4)
!3400 = !DILocalVariable(name: "rc", scope: !3401, file: !2264, line: 1836, type: !103)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !2264, line: 1836, column: 4)
!3402 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1835, column: 21)
!3403 = !DILabel(scope: !3359, name: "prec_int_pad0", file: !2264, line: 1634)
!3404 = !DILocation(line: 0, scope: !3263)
!3405 = !DILocation(line: 1341, column: 2, scope: !3263)
!3406 = !DILocation(line: 1341, column: 7, scope: !3263)
!3407 = !DILocation(line: 1375, column: 2, scope: !3263)
!3408 = !DILocation(line: 1342, column: 9, scope: !3263)
!3409 = !DILocation(line: 1375, column: 9, scope: !3263)
!3410 = !DILocation(line: 1377, column: 4, scope: !3287)
!3411 = !DILocation(line: 0, scope: !3287)
!3412 = !DILocation(line: 1377, column: 4, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3287, file: !2264, line: 1377, column: 4)
!3414 = distinct !{!3414, !3407, !3415}
!3415 = !DILocation(line: 1839, column: 2, scope: !3263)
!3416 = !DILocation(line: 1392, column: 3, scope: !3290)
!3417 = !DILocation(line: 1395, column: 5, scope: !3290)
!3418 = !DILocation(line: 0, scope: !3290)
!3419 = !DILocation(line: 1409, column: 8, scope: !3290)
!3420 = !DILocation(line: 1414, column: 13, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1414, column: 7)
!3422 = !DILocation(line: 1414, column: 7, scope: !3290)
!3423 = !DILocation(line: 1415, column: 12, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !2264, line: 1414, column: 25)
!3425 = !DILocation(line: 1417, column: 14, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3424, file: !2264, line: 1417, column: 8)
!3427 = !DILocation(line: 1417, column: 8, scope: !3424)
!3428 = !DILocation(line: 1418, column: 21, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3426, file: !2264, line: 1417, column: 19)
!3430 = !DILocation(line: 1419, column: 13, scope: !3429)
!3431 = !DILocation(line: 1420, column: 4, scope: !3429)
!3432 = !DILocation(line: 1421, column: 20, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3421, file: !2264, line: 1421, column: 14)
!3434 = !DILocation(line: 1421, column: 14, scope: !3421)
!3435 = !DILocation(line: 1431, column: 13, scope: !3350)
!3436 = !DILocation(line: 1431, column: 7, scope: !3290)
!3437 = !DILocation(line: 1432, column: 14, scope: !3349)
!3438 = !DILocation(line: 0, scope: !3349)
!3439 = !DILocation(line: 1434, column: 12, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3349, file: !2264, line: 1434, column: 8)
!3441 = !DILocation(line: 1434, column: 8, scope: !3349)
!3442 = !DILocation(line: 1435, column: 24, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !2264, line: 1434, column: 17)
!3444 = !DILocation(line: 1436, column: 4, scope: !3443)
!3445 = !DILocation(line: 1439, column: 20, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3350, file: !2264, line: 1439, column: 14)
!3447 = !DILocation(line: 1439, column: 14, scope: !3350)
!3448 = !DILocation(line: 1469, column: 37, scope: !3290)
!3449 = !DILocation(line: 1448, column: 20, scope: !3290)
!3450 = !DILocation(line: 1449, column: 22, scope: !3290)
!3451 = !DILocation(line: 1471, column: 34, scope: !3290)
!3452 = !DILocation(line: 1478, column: 7, scope: !3290)
!3453 = !DILocation(line: 1479, column: 4, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !2264, line: 1478, column: 40)
!3455 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1478, column: 7)
!3456 = !DILocation(line: 1484, column: 19, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3454, file: !2264, line: 1479, column: 24)
!3458 = !DILocation(line: 1484, column: 17, scope: !3457)
!3459 = !DILocation(line: 1485, column: 5, scope: !3457)
!3460 = !DILocation(line: 1492, column: 20, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !2264, line: 1491, column: 12)
!3462 = distinct !DILexicalBlock(scope: !3457, file: !2264, line: 1487, column: 9)
!3463 = !DILocation(line: 1492, column: 18, scope: !3461)
!3464 = !DILocation(line: 1494, column: 5, scope: !3457)
!3465 = !DILocation(line: 1497, column: 23, scope: !3457)
!3466 = !DILocation(line: 1496, column: 17, scope: !3457)
!3467 = !DILocation(line: 1498, column: 5, scope: !3457)
!3468 = !DILocation(line: 1501, column: 23, scope: !3457)
!3469 = !DILocation(line: 1500, column: 17, scope: !3457)
!3470 = !DILocation(line: 1502, column: 5, scope: !3457)
!3471 = !DILocation(line: 1513, column: 23, scope: !3457)
!3472 = !DILocation(line: 1513, column: 6, scope: !3457)
!3473 = !DILocation(line: 1512, column: 17, scope: !3457)
!3474 = !DILocation(line: 1514, column: 5, scope: !3457)
!3475 = !DILocation(line: 0, scope: !3457)
!3476 = !DILocation(line: 1516, column: 8, scope: !3454)
!3477 = !DILocation(line: 1517, column: 19, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !2264, line: 1516, column: 33)
!3479 = distinct !DILexicalBlock(scope: !3454, file: !2264, line: 1516, column: 8)
!3480 = !DILocation(line: 1517, column: 17, scope: !3478)
!3481 = !DILocation(line: 1518, column: 4, scope: !3478)
!3482 = !DILocation(line: 1519, column: 19, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !2264, line: 1518, column: 39)
!3484 = distinct !DILexicalBlock(scope: !3479, file: !2264, line: 1518, column: 15)
!3485 = !DILocation(line: 1519, column: 17, scope: !3483)
!3486 = !DILocation(line: 1520, column: 4, scope: !3483)
!3487 = !DILocation(line: 1522, column: 4, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !2264, line: 1521, column: 47)
!3489 = distinct !DILexicalBlock(scope: !3455, file: !2264, line: 1521, column: 14)
!3490 = !DILocation(line: 1527, column: 19, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3488, file: !2264, line: 1522, column: 24)
!3492 = !DILocation(line: 1527, column: 17, scope: !3491)
!3493 = !DILocation(line: 1528, column: 5, scope: !3491)
!3494 = !DILocation(line: 0, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !2264, line: 1530, column: 9)
!3496 = !DILocation(line: 1540, column: 23, scope: !3491)
!3497 = !DILocation(line: 1539, column: 17, scope: !3491)
!3498 = !DILocation(line: 1542, column: 5, scope: !3491)
!3499 = !DILocation(line: 1545, column: 23, scope: !3491)
!3500 = !DILocation(line: 1544, column: 17, scope: !3491)
!3501 = !DILocation(line: 1547, column: 5, scope: !3491)
!3502 = !DILocation(line: 1551, column: 23, scope: !3491)
!3503 = !DILocation(line: 1551, column: 6, scope: !3491)
!3504 = !DILocation(line: 1550, column: 17, scope: !3491)
!3505 = !DILocation(line: 1552, column: 5, scope: !3491)
!3506 = !DILocation(line: 0, scope: !3491)
!3507 = !DILocation(line: 1554, column: 8, scope: !3488)
!3508 = !DILocation(line: 1555, column: 19, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !2264, line: 1554, column: 33)
!3510 = distinct !DILexicalBlock(scope: !3488, file: !2264, line: 1554, column: 8)
!3511 = !DILocation(line: 1555, column: 17, scope: !3509)
!3512 = !DILocation(line: 1556, column: 4, scope: !3509)
!3513 = !DILocation(line: 1557, column: 19, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !2264, line: 1556, column: 39)
!3515 = distinct !DILexicalBlock(scope: !3510, file: !2264, line: 1556, column: 15)
!3516 = !DILocation(line: 1557, column: 17, scope: !3514)
!3517 = !DILocation(line: 1558, column: 4, scope: !3514)
!3518 = !DILocation(line: 0, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !2264, line: 1560, column: 8)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !2264, line: 1559, column: 45)
!3521 = distinct !DILexicalBlock(scope: !3489, file: !2264, line: 1559, column: 14)
!3522 = !DILocation(line: 1566, column: 17, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !2264, line: 1565, column: 46)
!3524 = distinct !DILexicalBlock(scope: !3521, file: !2264, line: 1565, column: 14)
!3525 = !DILocation(line: 1566, column: 15, scope: !3523)
!3526 = !DILocation(line: 1567, column: 3, scope: !3523)
!3527 = !DILocation(line: 1574, column: 21, scope: !3356)
!3528 = !DILocation(line: 1575, column: 4, scope: !3354)
!3529 = !DILocation(line: 0, scope: !3354)
!3530 = !DILocation(line: 1575, column: 4, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3354, file: !2264, line: 1575, column: 4)
!3532 = !DILocation(line: 1582, column: 17, scope: !3290)
!3533 = !DILocation(line: 1582, column: 3, scope: !3290)
!3534 = !DILocation(line: 1584, column: 4, scope: !3358)
!3535 = !DILocation(line: 0, scope: !3358)
!3536 = !DILocation(line: 1584, column: 4, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3358, file: !2264, line: 1584, column: 4)
!3538 = !DILocation(line: 1587, column: 31, scope: !3361)
!3539 = !DILocation(line: 1591, column: 18, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3361, file: !2264, line: 1591, column: 8)
!3541 = !DILocation(line: 1591, column: 8, scope: !3361)
!3542 = !DILocation(line: 1592, column: 11, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3540, file: !2264, line: 1591, column: 24)
!3544 = !DILocation(line: 0, scope: !3361)
!3545 = !DILocation(line: 1593, column: 4, scope: !3543)
!3546 = !DILocation(line: 1594, column: 11, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3540, file: !2264, line: 1593, column: 11)
!3548 = !DILocation(line: 1604, column: 51, scope: !3359)
!3549 = !DILocation(line: 1604, column: 13, scope: !3359)
!3550 = !DILocation(line: 1604, column: 11, scope: !3359)
!3551 = !DILocation(line: 1606, column: 4, scope: !3359)
!3552 = !DILocation(line: 1609, column: 14, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1609, column: 8)
!3554 = !DILocation(line: 1609, column: 8, scope: !3359)
!3555 = !DILocation(line: 1619, column: 18, scope: !3359)
!3556 = !DILocation(line: 1620, column: 13, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1620, column: 8)
!3558 = !DILocation(line: 1620, column: 8, scope: !3359)
!3559 = !DILocation(line: 1622, column: 36, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3557, file: !2264, line: 1620, column: 18)
!3561 = !DILocation(line: 1622, column: 17, scope: !3560)
!3562 = !DILocation(line: 1623, column: 4, scope: !3560)
!3563 = !DILocation(line: 1632, column: 29, scope: !3359)
!3564 = !DILocation(line: 1632, column: 10, scope: !3359)
!3565 = !DILocation(line: 1632, column: 4, scope: !3359)
!3566 = !DILocation(line: 1407, column: 8, scope: !3290)
!3567 = !DILocation(line: 0, scope: !3359)
!3568 = !DILocation(line: 1634, column: 3, scope: !3359)
!3569 = !DILocation(line: 1640, column: 18, scope: !3364)
!3570 = !DILocation(line: 1640, column: 8, scope: !3359)
!3571 = !DILocation(line: 1729, column: 13, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1729, column: 7)
!3573 = !DILocation(line: 1641, column: 22, scope: !3363)
!3574 = !DILocation(line: 0, scope: !3363)
!3575 = !DILocation(line: 1646, column: 21, scope: !3363)
!3576 = !DILocation(line: 1649, column: 13, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3363, file: !2264, line: 1649, column: 9)
!3578 = !DILocation(line: 1649, column: 9, scope: !3363)
!3579 = !DILocation(line: 1650, column: 35, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3577, file: !2264, line: 1649, column: 34)
!3581 = !DILocation(line: 1650, column: 23, scope: !3580)
!3582 = !DILocation(line: 1651, column: 5, scope: !3580)
!3583 = !DILocation(line: 1660, column: 15, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1660, column: 8)
!3585 = !DILocation(line: 1660, column: 19, scope: !3584)
!3586 = !DILocation(line: 1660, column: 8, scope: !3359)
!3587 = !DILocation(line: 1661, column: 23, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3584, file: !2264, line: 1660, column: 28)
!3589 = !DILocation(line: 1661, column: 11, scope: !3588)
!3590 = !DILocation(line: 1665, column: 22, scope: !3588)
!3591 = !DILocation(line: 1666, column: 21, scope: !3588)
!3592 = !DILocation(line: 1668, column: 5, scope: !3588)
!3593 = !DILocation(line: 1677, column: 30, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !2264, line: 1676, column: 49)
!3595 = distinct !DILexicalBlock(scope: !3359, file: !2264, line: 1676, column: 8)
!3596 = !DILocation(line: 1677, column: 5, scope: !3594)
!3597 = !DILocation(line: 1680, column: 4, scope: !3359)
!3598 = !DILocation(line: 0, scope: !3540)
!3599 = !DILocation(line: 1597, column: 14, scope: !3361)
!3600 = !DILocation(line: 1699, column: 11, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1699, column: 7)
!3602 = !DILocation(line: 1699, column: 7, scope: !3290)
!3603 = !DILocation(line: 1725, column: 7, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1725, column: 7)
!3605 = !DILocation(line: 1725, column: 12, scope: !3604)
!3606 = !DILocation(line: 1747, column: 13, scope: !3371)
!3607 = !DILocation(line: 1747, column: 7, scope: !3290)
!3608 = !DILocation(line: 1722, column: 24, scope: !3290)
!3609 = !DILocation(line: 1725, column: 7, scope: !3290)
!3610 = !DILocation(line: 1729, column: 7, scope: !3290)
!3611 = !DILocation(line: 1736, column: 13, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3290, file: !2264, line: 1736, column: 7)
!3613 = !DILocation(line: 1735, column: 19, scope: !3290)
!3614 = !DILocation(line: 1736, column: 7, scope: !3290)
!3615 = !DILocation(line: 1748, column: 10, scope: !3370)
!3616 = !DILocation(line: 1750, column: 15, scope: !3369)
!3617 = !DILocation(line: 1750, column: 8, scope: !3370)
!3618 = !DILocation(line: 0, scope: !3368)
!3619 = !DILocation(line: 1756, column: 15, scope: !3377)
!3620 = !DILocation(line: 1756, column: 9, scope: !3368)
!3621 = !DILocation(line: 1758, column: 7, scope: !3373)
!3622 = !DILocation(line: 0, scope: !3373)
!3623 = !DILocation(line: 1758, column: 7, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3373, file: !2264, line: 1758, column: 7)
!3625 = !DILocation(line: 1764, column: 5, scope: !3368)
!3626 = !DILocation(line: 0, scope: !3370)
!3627 = !DILocation(line: 1764, column: 20, scope: !3368)
!3628 = !DILocation(line: 1764, column: 17, scope: !3368)
!3629 = !DILocation(line: 1765, column: 6, scope: !3379)
!3630 = !DILocation(line: 0, scope: !3379)
!3631 = !DILocation(line: 1765, column: 6, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3379, file: !2264, line: 1765, column: 6)
!3633 = distinct !{!3633, !3625, !3634}
!3634 = !DILocation(line: 1766, column: 5, scope: !3368)
!3635 = !DILocation(line: 1773, column: 12, scope: !3384)
!3636 = !DILocation(line: 1773, column: 7, scope: !3290)
!3637 = !DILocation(line: 1773, column: 7, scope: !3384)
!3638 = !DILocation(line: 1774, column: 4, scope: !3382)
!3639 = !DILocation(line: 0, scope: !3382)
!3640 = !DILocation(line: 1774, column: 4, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3382, file: !2264, line: 1774, column: 4)
!3642 = !DILocation(line: 1818, column: 8, scope: !3388)
!3643 = !DILocation(line: 1818, column: 27, scope: !3388)
!3644 = !DILocation(line: 1818, column: 25, scope: !3388)
!3645 = !DILocation(line: 1818, column: 8, scope: !3389)
!3646 = !DILocation(line: 1819, column: 5, scope: !3386)
!3647 = !DILocation(line: 0, scope: !3386)
!3648 = !DILocation(line: 1819, column: 5, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3386, file: !2264, line: 1819, column: 5)
!3650 = !DILocation(line: 1822, column: 14, scope: !3394)
!3651 = !DILocation(line: 1822, column: 8, scope: !3389)
!3652 = !DILocation(line: 1823, column: 5, scope: !3392)
!3653 = !DILocation(line: 0, scope: !3392)
!3654 = !DILocation(line: 1823, column: 5, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3392, file: !2264, line: 1823, column: 5)
!3656 = !DILocation(line: 1826, column: 20, scope: !3389)
!3657 = !DILocation(line: 1827, column: 4, scope: !3389)
!3658 = !DILocation(line: 0, scope: !3389)
!3659 = !DILocation(line: 1827, column: 21, scope: !3389)
!3660 = !DILocation(line: 1827, column: 18, scope: !3389)
!3661 = !DILocation(line: 1828, column: 5, scope: !3396)
!3662 = !DILocation(line: 0, scope: !3396)
!3663 = !DILocation(line: 1828, column: 5, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3396, file: !2264, line: 1828, column: 5)
!3665 = distinct !{!3665, !3657, !3666}
!3666 = !DILocation(line: 1829, column: 4, scope: !3389)
!3667 = !DILocation(line: 1831, column: 4, scope: !3399)
!3668 = !DILocation(line: 0, scope: !3399)
!3669 = !DILocation(line: 1831, column: 4, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3399, file: !2264, line: 1831, column: 4)
!3671 = !DILocation(line: 1835, column: 16, scope: !3290)
!3672 = !DILocation(line: 1835, column: 3, scope: !3290)
!3673 = !DILocation(line: 1836, column: 4, scope: !3401)
!3674 = !DILocation(line: 0, scope: !3401)
!3675 = !DILocation(line: 1836, column: 4, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3401, file: !2264, line: 1836, column: 4)
!3677 = !DILocation(line: 1837, column: 4, scope: !3402)
!3678 = distinct !{!3678, !3672, !3679}
!3679 = !DILocation(line: 1838, column: 3, scope: !3290)
!3680 = !DILocation(line: 1844, column: 1, scope: !3263)
!3681 = distinct !DISubprogram(name: "extract_conversion", scope: !2264, file: !2264, line: 642, type: !3682, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3684)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!144, !3338, !144}
!3684 = !{!3685, !3686}
!3685 = !DILocalVariable(name: "conv", arg: 1, scope: !3681, file: !2264, line: 642, type: !3338)
!3686 = !DILocalVariable(name: "sp", arg: 2, scope: !3681, file: !2264, line: 643, type: !144)
!3687 = !DILocation(line: 0, scope: !3681)
!3688 = !DILocation(line: 645, column: 10, scope: !3681)
!3689 = !DILocation(line: 653, column: 2, scope: !3681)
!3690 = !DILocation(line: 654, column: 6, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3681, file: !2264, line: 654, column: 6)
!3692 = !DILocation(line: 654, column: 10, scope: !3691)
!3693 = !DILocation(line: 654, column: 6, scope: !3681)
!3694 = !DILocation(line: 655, column: 24, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !2264, line: 654, column: 18)
!3696 = !DILocation(line: 655, column: 19, scope: !3695)
!3697 = !DILocation(line: 656, column: 3, scope: !3695)
!3698 = !DILocation(line: 659, column: 7, scope: !3681)
!3699 = !DILocation(line: 660, column: 7, scope: !3681)
!3700 = !DILocation(line: 661, column: 7, scope: !3681)
!3701 = !DILocation(line: 662, column: 7, scope: !3681)
!3702 = !DILocation(line: 663, column: 7, scope: !3681)
!3703 = !DILocation(line: 665, column: 2, scope: !3681)
!3704 = !DILocation(line: 666, column: 1, scope: !3681)
!3705 = distinct !DISubprogram(name: "outs", scope: !2264, file: !2264, line: 1319, type: !3706, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3708)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!103, !2994, !102, !144, !144}
!3708 = !{!3709, !3710, !3711, !3712, !3713, !3714}
!3709 = !DILocalVariable(name: "out", arg: 1, scope: !3705, file: !2264, line: 1319, type: !2994)
!3710 = !DILocalVariable(name: "ctx", arg: 2, scope: !3705, file: !2264, line: 1320, type: !102)
!3711 = !DILocalVariable(name: "sp", arg: 3, scope: !3705, file: !2264, line: 1321, type: !144)
!3712 = !DILocalVariable(name: "ep", arg: 4, scope: !3705, file: !2264, line: 1322, type: !144)
!3713 = !DILocalVariable(name: "count", scope: !3705, file: !2264, line: 1324, type: !200)
!3714 = !DILocalVariable(name: "rc", scope: !3715, file: !2264, line: 1327, type: !103)
!3715 = distinct !DILexicalBlock(scope: !3705, file: !2264, line: 1326, column: 45)
!3716 = !DILocation(line: 0, scope: !3705)
!3717 = !DILocation(line: 1326, column: 2, scope: !3705)
!3718 = !DILocation(line: 1324, column: 9, scope: !3705)
!3719 = !DILocation(line: 1326, column: 13, scope: !3705)
!3720 = !DILocation(line: 1326, column: 19, scope: !3705)
!3721 = !DILocation(line: 1327, column: 21, scope: !3715)
!3722 = !DILocation(line: 1326, column: 36, scope: !3705)
!3723 = !DILocation(line: 1326, column: 39, scope: !3705)
!3724 = !DILocation(line: 1327, column: 24, scope: !3715)
!3725 = !DILocation(line: 1327, column: 16, scope: !3715)
!3726 = !DILocation(line: 1327, column: 12, scope: !3715)
!3727 = !DILocation(line: 0, scope: !3715)
!3728 = !DILocation(line: 1329, column: 10, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3715, file: !2264, line: 1329, column: 7)
!3730 = !DILocation(line: 1329, column: 7, scope: !3715)
!3731 = distinct !{!3731, !3717, !3732}
!3732 = !DILocation(line: 1333, column: 2, scope: !3705)
!3733 = !DILocation(line: 1336, column: 1, scope: !3705)
!3734 = distinct !DISubprogram(name: "encode_uint", scope: !2264, file: !2264, line: 788, type: !3735, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3737)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!995, !2286, !3338, !995, !144}
!3737 = !{!3738, !3739, !3740, !3741, !3742, !3743, !3745, !3746}
!3738 = !DILocalVariable(name: "value", arg: 1, scope: !3734, file: !2264, line: 788, type: !2286)
!3739 = !DILocalVariable(name: "conv", arg: 2, scope: !3734, file: !2264, line: 789, type: !3338)
!3740 = !DILocalVariable(name: "bps", arg: 3, scope: !3734, file: !2264, line: 790, type: !995)
!3741 = !DILocalVariable(name: "bpe", arg: 4, scope: !3734, file: !2264, line: 791, type: !144)
!3742 = !DILocalVariable(name: "upcase", scope: !3734, file: !2264, line: 793, type: !157)
!3743 = !DILocalVariable(name: "radix", scope: !3734, file: !2264, line: 794, type: !3744)
!3744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3745 = !DILocalVariable(name: "bp", scope: !3734, file: !2264, line: 795, type: !995)
!3746 = !DILocalVariable(name: "lsv", scope: !3747, file: !2264, line: 798, type: !32)
!3747 = distinct !DILexicalBlock(scope: !3734, file: !2264, line: 797, column: 5)
!3748 = !DILocation(line: 0, scope: !3734)
!3749 = !DILocation(line: 793, column: 35, scope: !3734)
!3750 = !DILocation(line: 793, column: 24, scope: !3734)
!3751 = !DILocation(line: 793, column: 16, scope: !3734)
!3752 = !DILocation(line: 794, column: 29, scope: !3734)
!3753 = !DILocation(line: 795, column: 24, scope: !3734)
!3754 = !DILocation(line: 795, column: 17, scope: !3734)
!3755 = !DILocation(line: 797, column: 2, scope: !3734)
!3756 = !DILocation(line: 802, column: 9, scope: !3747)
!3757 = !DILocation(line: 798, column: 22, scope: !3747)
!3758 = !DILocation(line: 0, scope: !3747)
!3759 = !DILocation(line: 800, column: 16, scope: !3747)
!3760 = !DILocation(line: 800, column: 11, scope: !3747)
!3761 = !DILocation(line: 800, column: 4, scope: !3747)
!3762 = !DILocation(line: 800, column: 9, scope: !3747)
!3763 = !DILocation(line: 803, column: 18, scope: !3734)
!3764 = !DILocation(line: 803, column: 24, scope: !3734)
!3765 = !DILocation(line: 803, column: 2, scope: !3747)
!3766 = distinct !{!3766, !3755, !3767}
!3767 = !DILocation(line: 803, column: 37, scope: !3734)
!3768 = !DILocation(line: 808, column: 12, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3734, file: !2264, line: 808, column: 6)
!3770 = !DILocation(line: 808, column: 6, scope: !3734)
!3771 = !DILocation(line: 809, column: 7, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3769, file: !2264, line: 808, column: 23)
!3773 = !DILocation(line: 813, column: 3, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !2264, line: 811, column: 27)
!3775 = distinct !DILexicalBlock(scope: !3776, file: !2264, line: 811, column: 14)
!3776 = distinct !DILexicalBlock(scope: !3772, file: !2264, line: 809, column: 7)
!3777 = !DILocation(line: 0, scope: !3776)
!3778 = !DILocation(line: 818, column: 2, scope: !3734)
!3779 = distinct !DISubprogram(name: "store_count", scope: !2264, file: !2264, line: 1280, type: !3780, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3784)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{null, !3782, !102, !103}
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 32)
!3783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3305)
!3784 = !{!3785, !3786, !3787}
!3785 = !DILocalVariable(name: "conv", arg: 1, scope: !3779, file: !2264, line: 1280, type: !3782)
!3786 = !DILocalVariable(name: "dp", arg: 2, scope: !3779, file: !2264, line: 1281, type: !102)
!3787 = !DILocalVariable(name: "count", arg: 3, scope: !3779, file: !2264, line: 1282, type: !103)
!3788 = !DILocation(line: 0, scope: !3779)
!3789 = !DILocation(line: 1284, column: 38, scope: !3779)
!3790 = !DILocation(line: 1284, column: 2, scope: !3779)
!3791 = !DILocation(line: 1286, column: 4, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3779, file: !2264, line: 1284, column: 50)
!3793 = !DILocation(line: 1286, column: 14, scope: !3792)
!3794 = !DILocation(line: 1287, column: 3, scope: !3792)
!3795 = !DILocation(line: 1289, column: 24, scope: !3792)
!3796 = !DILocation(line: 1289, column: 22, scope: !3792)
!3797 = !DILocation(line: 1290, column: 3, scope: !3792)
!3798 = !DILocation(line: 1292, column: 18, scope: !3792)
!3799 = !DILocation(line: 1292, column: 4, scope: !3792)
!3800 = !DILocation(line: 1292, column: 16, scope: !3792)
!3801 = !DILocation(line: 1293, column: 3, scope: !3792)
!3802 = !DILocation(line: 1295, column: 4, scope: !3792)
!3803 = !DILocation(line: 1295, column: 15, scope: !3792)
!3804 = !DILocation(line: 1296, column: 3, scope: !3792)
!3805 = !DILocation(line: 1298, column: 22, scope: !3792)
!3806 = !DILocation(line: 1298, column: 4, scope: !3792)
!3807 = !DILocation(line: 1298, column: 20, scope: !3792)
!3808 = !DILocation(line: 1299, column: 3, scope: !3792)
!3809 = !DILocation(line: 1301, column: 21, scope: !3792)
!3810 = !DILocation(line: 1301, column: 4, scope: !3792)
!3811 = !DILocation(line: 1301, column: 19, scope: !3792)
!3812 = !DILocation(line: 1302, column: 3, scope: !3792)
!3813 = !DILocation(line: 1304, column: 4, scope: !3792)
!3814 = !DILocation(line: 1304, column: 17, scope: !3792)
!3815 = !DILocation(line: 1305, column: 3, scope: !3792)
!3816 = !DILocation(line: 1307, column: 4, scope: !3792)
!3817 = !DILocation(line: 1307, column: 20, scope: !3792)
!3818 = !DILocation(line: 1308, column: 3, scope: !3792)
!3819 = !DILocation(line: 1316, column: 1, scope: !3779)
!3820 = distinct !DISubprogram(name: "isupper", scope: !3821, file: !3821, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3822)
!3821 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3822 = !{!3823}
!3823 = !DILocalVariable(name: "a", arg: 1, scope: !3820, file: !3821, line: 16, type: !103)
!3824 = !DILocation(line: 0, scope: !3820)
!3825 = !DILocation(line: 18, column: 29, scope: !3820)
!3826 = !DILocation(line: 18, column: 45, scope: !3820)
!3827 = !DILocation(line: 18, column: 2, scope: !3820)
!3828 = distinct !DISubprogram(name: "conversion_radix", scope: !2264, file: !2264, line: 761, type: !3829, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!200, !146}
!3831 = !{!3832}
!3832 = !DILocalVariable(name: "specifier", arg: 1, scope: !3828, file: !2264, line: 761, type: !146)
!3833 = !DILocation(line: 0, scope: !3828)
!3834 = !DILocation(line: 763, column: 2, scope: !3828)
!3835 = !DILocation(line: 770, column: 3, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3828, file: !2264, line: 763, column: 21)
!3837 = !DILocation(line: 774, column: 3, scope: !3836)
!3838 = !DILocation(line: 0, scope: !3836)
!3839 = !DILocation(line: 776, column: 1, scope: !3828)
!3840 = distinct !DISubprogram(name: "extract_flags", scope: !2264, file: !2264, line: 339, type: !3682, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3841)
!3841 = !{!3842, !3843, !3844}
!3842 = !DILocalVariable(name: "conv", arg: 1, scope: !3840, file: !2264, line: 339, type: !3338)
!3843 = !DILocalVariable(name: "sp", arg: 2, scope: !3840, file: !2264, line: 340, type: !144)
!3844 = !DILocalVariable(name: "loop", scope: !3840, file: !2264, line: 342, type: !157)
!3845 = !DILocation(line: 0, scope: !3840)
!3846 = !DILocation(line: 344, column: 2, scope: !3840)
!3847 = !DILocation(line: 345, column: 11, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3840, file: !2264, line: 344, column: 5)
!3849 = !DILocation(line: 345, column: 3, scope: !3848)
!3850 = !DILocation(line: 351, column: 4, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3848, file: !2264, line: 345, column: 16)
!3852 = !DILocation(line: 354, column: 4, scope: !3851)
!3853 = !DILocation(line: 357, column: 4, scope: !3851)
!3854 = !DILocation(line: 360, column: 4, scope: !3851)
!3855 = !DILocation(line: 0, scope: !3851)
!3856 = !DILocation(line: 370, column: 12, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3840, file: !2264, line: 370, column: 6)
!3858 = !DILocation(line: 370, column: 22, scope: !3857)
!3859 = !DILocation(line: 371, column: 19, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3857, file: !2264, line: 370, column: 42)
!3861 = !DILocation(line: 372, column: 2, scope: !3860)
!3862 = !DILocation(line: 376, column: 2, scope: !3840)
!3863 = distinct !DISubprogram(name: "extract_width", scope: !2264, file: !2264, line: 388, type: !3682, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3864)
!3864 = !{!3865, !3866, !3867, !3868}
!3865 = !DILocalVariable(name: "conv", arg: 1, scope: !3863, file: !2264, line: 388, type: !3338)
!3866 = !DILocalVariable(name: "sp", arg: 2, scope: !3863, file: !2264, line: 389, type: !144)
!3867 = !DILocalVariable(name: "wp", scope: !3863, file: !2264, line: 398, type: !144)
!3868 = !DILocalVariable(name: "width", scope: !3863, file: !2264, line: 399, type: !200)
!3869 = !DILocation(line: 0, scope: !3863)
!3870 = !DILocation(line: 391, column: 8, scope: !3863)
!3871 = !DILocation(line: 391, column: 22, scope: !3863)
!3872 = !DILocation(line: 393, column: 6, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3863, file: !2264, line: 393, column: 6)
!3874 = !DILocation(line: 393, column: 10, scope: !3873)
!3875 = !DILocation(line: 393, column: 6, scope: !3863)
!3876 = !DILocation(line: 394, column: 20, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3873, file: !2264, line: 393, column: 18)
!3878 = !DILocation(line: 395, column: 10, scope: !3877)
!3879 = !DILocation(line: 395, column: 3, scope: !3877)
!3880 = !DILocation(line: 399, column: 17, scope: !3863)
!3881 = !DILocation(line: 401, column: 6, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3863, file: !2264, line: 401, column: 6)
!3883 = !DILocation(line: 401, column: 9, scope: !3882)
!3884 = !DILocation(line: 401, column: 6, scope: !3863)
!3885 = !DILocation(line: 402, column: 23, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3882, file: !2264, line: 401, column: 16)
!3887 = !DILocation(line: 403, column: 9, scope: !3886)
!3888 = !DILocation(line: 403, column: 21, scope: !3886)
!3889 = !DILocation(line: 405, column: 11, scope: !3886)
!3890 = !DILocation(line: 404, column: 21, scope: !3886)
!3891 = !DILocation(line: 406, column: 2, scope: !3886)
!3892 = !DILocation(line: 409, column: 1, scope: !3863)
!3893 = distinct !DISubprogram(name: "extract_prec", scope: !2264, file: !2264, line: 420, type: !3682, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3894)
!3894 = !{!3895, !3896, !3897}
!3895 = !DILocalVariable(name: "conv", arg: 1, scope: !3893, file: !2264, line: 420, type: !3338)
!3896 = !DILocalVariable(name: "sp", arg: 2, scope: !3893, file: !2264, line: 421, type: !144)
!3897 = !DILocalVariable(name: "prec", scope: !3893, file: !2264, line: 435, type: !200)
!3898 = !DILocation(line: 0, scope: !3893)
!3899 = !DILocation(line: 423, column: 24, scope: !3893)
!3900 = !DILocation(line: 423, column: 28, scope: !3893)
!3901 = !DILocation(line: 423, column: 8, scope: !3893)
!3902 = !DILocation(line: 423, column: 21, scope: !3893)
!3903 = !DILocation(line: 425, column: 6, scope: !3893)
!3904 = !DILocation(line: 428, column: 2, scope: !3893)
!3905 = !DILocation(line: 430, column: 6, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3893, file: !2264, line: 430, column: 6)
!3907 = !DILocation(line: 430, column: 10, scope: !3906)
!3908 = !DILocation(line: 430, column: 6, scope: !3893)
!3909 = !DILocation(line: 431, column: 19, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3906, file: !2264, line: 430, column: 18)
!3911 = !DILocation(line: 432, column: 10, scope: !3910)
!3912 = !DILocation(line: 432, column: 3, scope: !3910)
!3913 = !DILocation(line: 435, column: 16, scope: !3893)
!3914 = !DILocation(line: 437, column: 8, scope: !3893)
!3915 = !DILocation(line: 437, column: 19, scope: !3893)
!3916 = !DILocation(line: 439, column: 10, scope: !3893)
!3917 = !DILocation(line: 438, column: 20, scope: !3893)
!3918 = !DILocation(line: 441, column: 9, scope: !3893)
!3919 = !DILocation(line: 442, column: 1, scope: !3893)
!3920 = distinct !DISubprogram(name: "extract_length", scope: !2264, file: !2264, line: 453, type: !3682, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3921)
!3921 = !{!3922, !3923}
!3922 = !DILocalVariable(name: "conv", arg: 1, scope: !3920, file: !2264, line: 453, type: !3338)
!3923 = !DILocalVariable(name: "sp", arg: 2, scope: !3920, file: !2264, line: 454, type: !144)
!3924 = !DILocation(line: 0, scope: !3920)
!3925 = !DILocation(line: 456, column: 10, scope: !3920)
!3926 = !DILocation(line: 456, column: 2, scope: !3920)
!3927 = !DILocation(line: 458, column: 8, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !2264, line: 458, column: 7)
!3929 = distinct !DILexicalBlock(scope: !3920, file: !2264, line: 456, column: 15)
!3930 = !DILocation(line: 458, column: 7, scope: !3928)
!3931 = !DILocation(line: 458, column: 13, scope: !3928)
!3932 = !DILocation(line: 0, scope: !3928)
!3933 = !DILocation(line: 458, column: 7, scope: !3929)
!3934 = !DILocation(line: 459, column: 21, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3928, file: !2264, line: 458, column: 21)
!3936 = !DILocation(line: 460, column: 4, scope: !3935)
!3937 = !DILocation(line: 461, column: 3, scope: !3935)
!3938 = !DILocation(line: 462, column: 21, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3928, file: !2264, line: 461, column: 10)
!3940 = !DILocation(line: 466, column: 8, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3929, file: !2264, line: 466, column: 7)
!3942 = !DILocation(line: 466, column: 7, scope: !3941)
!3943 = !DILocation(line: 466, column: 13, scope: !3941)
!3944 = !DILocation(line: 0, scope: !3941)
!3945 = !DILocation(line: 466, column: 7, scope: !3929)
!3946 = !DILocation(line: 467, column: 21, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3941, file: !2264, line: 466, column: 21)
!3948 = !DILocation(line: 468, column: 4, scope: !3947)
!3949 = !DILocation(line: 469, column: 3, scope: !3947)
!3950 = !DILocation(line: 470, column: 21, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3941, file: !2264, line: 469, column: 10)
!3952 = !DILocation(line: 474, column: 9, scope: !3929)
!3953 = !DILocation(line: 474, column: 20, scope: !3929)
!3954 = !DILocation(line: 475, column: 3, scope: !3929)
!3955 = !DILocation(line: 476, column: 3, scope: !3929)
!3956 = !DILocation(line: 478, column: 9, scope: !3929)
!3957 = !DILocation(line: 478, column: 20, scope: !3929)
!3958 = !DILocation(line: 479, column: 3, scope: !3929)
!3959 = !DILocation(line: 480, column: 3, scope: !3929)
!3960 = !DILocation(line: 482, column: 9, scope: !3929)
!3961 = !DILocation(line: 482, column: 20, scope: !3929)
!3962 = !DILocation(line: 483, column: 3, scope: !3929)
!3963 = !DILocation(line: 484, column: 3, scope: !3929)
!3964 = !DILocation(line: 486, column: 9, scope: !3929)
!3965 = !DILocation(line: 486, column: 20, scope: !3929)
!3966 = !DILocation(line: 487, column: 3, scope: !3929)
!3967 = !DILocation(line: 492, column: 21, scope: !3929)
!3968 = !DILocation(line: 493, column: 3, scope: !3929)
!3969 = !DILocation(line: 495, column: 9, scope: !3929)
!3970 = !DILocation(line: 495, column: 20, scope: !3929)
!3971 = !DILocation(line: 496, column: 3, scope: !3929)
!3972 = !DILocation(line: 498, column: 2, scope: !3920)
!3973 = distinct !DISubprogram(name: "extract_specifier", scope: !2264, file: !2264, line: 513, type: !3682, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !3974)
!3974 = !{!3975, !3976, !3977, !3978}
!3975 = !DILocalVariable(name: "conv", arg: 1, scope: !3973, file: !2264, line: 513, type: !3338)
!3976 = !DILocalVariable(name: "sp", arg: 2, scope: !3973, file: !2264, line: 514, type: !144)
!3977 = !DILocalVariable(name: "unsupported", scope: !3973, file: !2264, line: 516, type: !157)
!3978 = !DILabel(scope: !3979, name: "int_conv", file: !2264, line: 526)
!3979 = distinct !DILexicalBlock(scope: !3973, file: !2264, line: 520, column: 27)
!3980 = !DILocation(line: 0, scope: !3973)
!3981 = !DILocation(line: 518, column: 20, scope: !3973)
!3982 = !DILocation(line: 518, column: 8, scope: !3973)
!3983 = !DILocation(line: 518, column: 18, scope: !3973)
!3984 = !DILocation(line: 520, column: 2, scope: !3973)
!3985 = !DILocation(line: 525, column: 3, scope: !3979)
!3986 = !DILocation(line: 0, scope: !3979)
!3987 = !DILocation(line: 526, column: 1, scope: !3979)
!3988 = !DILocation(line: 528, column: 24, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3979, file: !2264, line: 528, column: 7)
!3990 = !DILocation(line: 528, column: 7, scope: !3979)
!3991 = !DILocation(line: 535, column: 23, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3979, file: !2264, line: 535, column: 7)
!3993 = !DILocation(line: 535, column: 7, scope: !3979)
!3994 = !DILocation(line: 536, column: 36, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3992, file: !2264, line: 535, column: 31)
!3996 = !DILocation(line: 537, column: 3, scope: !3995)
!3997 = !DILocation(line: 570, column: 9, scope: !3979)
!3998 = !DILocation(line: 570, column: 23, scope: !3979)
!3999 = !DILocation(line: 575, column: 4, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !2264, line: 573, column: 48)
!4001 = distinct !DILexicalBlock(scope: !3979, file: !2264, line: 573, column: 7)
!4002 = !DILocation(line: 603, column: 9, scope: !3979)
!4003 = !DILocation(line: 603, column: 23, scope: !3979)
!4004 = !DILocation(line: 605, column: 24, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3979, file: !2264, line: 605, column: 7)
!4006 = !DILocation(line: 605, column: 7, scope: !3979)
!4007 = !DILocation(line: 612, column: 9, scope: !3979)
!4008 = !DILocation(line: 612, column: 23, scope: !3979)
!4009 = !DILocation(line: 619, column: 24, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3979, file: !2264, line: 619, column: 7)
!4011 = !DILocation(line: 619, column: 7, scope: !3979)
!4012 = !DILocation(line: 625, column: 9, scope: !3979)
!4013 = !DILocation(line: 625, column: 17, scope: !3979)
!4014 = !DILocation(line: 626, column: 3, scope: !3979)
!4015 = !DILocation(line: 629, column: 20, scope: !3973)
!4016 = !DILocation(line: 629, column: 8, scope: !3973)
!4017 = !DILocation(line: 518, column: 23, scope: !3973)
!4018 = !DILocation(line: 631, column: 2, scope: !3973)
!4019 = distinct !DISubprogram(name: "extract_decimal", scope: !2264, file: !2264, line: 318, type: !4020, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4023)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!200, !4022}
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4023 = !{!4024, !4025, !4026}
!4024 = !DILocalVariable(name: "str", arg: 1, scope: !4019, file: !2264, line: 318, type: !4022)
!4025 = !DILocalVariable(name: "sp", scope: !4019, file: !2264, line: 320, type: !144)
!4026 = !DILocalVariable(name: "val", scope: !4019, file: !2264, line: 321, type: !200)
!4027 = !DILocation(line: 0, scope: !4019)
!4028 = !DILocation(line: 320, column: 19, scope: !4019)
!4029 = !DILocation(line: 323, column: 37, scope: !4019)
!4030 = !DILocation(line: 323, column: 17, scope: !4019)
!4031 = !DILocation(line: 323, column: 9, scope: !4019)
!4032 = !DILocation(line: 323, column: 2, scope: !4019)
!4033 = !DILocation(line: 324, column: 13, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4019, file: !2264, line: 323, column: 43)
!4035 = !DILocation(line: 324, column: 24, scope: !4034)
!4036 = !DILocation(line: 324, column: 19, scope: !4034)
!4037 = !DILocation(line: 324, column: 27, scope: !4034)
!4038 = distinct !{!4038, !4032, !4039}
!4039 = !DILocation(line: 325, column: 2, scope: !4019)
!4040 = !DILocation(line: 326, column: 7, scope: !4019)
!4041 = !DILocation(line: 327, column: 2, scope: !4019)
!4042 = distinct !DISubprogram(name: "isdigit", scope: !3821, file: !3821, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4043)
!4043 = !{!4044}
!4044 = !DILocalVariable(name: "a", arg: 1, scope: !4042, file: !3821, line: 43, type: !103)
!4045 = !DILocation(line: 0, scope: !4042)
!4046 = !DILocation(line: 45, column: 29, scope: !4042)
!4047 = !DILocation(line: 45, column: 45, scope: !4042)
!4048 = !DILocation(line: 45, column: 2, scope: !4042)
!4049 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4050, file: !4050, line: 9, type: !2821, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2298, retainedNodes: !322)
!4050 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!4051 = !DILocation(line: 11, column: 1, scope: !4049)
!4052 = !{i64 2147561587, i64 2147561630, i64 2147561670}
!4053 = !DILocation(line: 12, column: 1, scope: !4049)
!4054 = !{i64 2147565814, i64 2147565857, i64 2147565897}
!4055 = !DILocation(line: 13, column: 1, scope: !4049)
!4056 = !{i64 2147566023, i64 2147566066, i64 2147566106}
!4057 = !DILocation(line: 14, column: 1, scope: !4049)
!4058 = !{i64 2147566192, i64 2147566235, i64 2147566275}
!4059 = !DILocation(line: 15, column: 1, scope: !4049)
!4060 = !{i64 2147566355, i64 2147566398, i64 2147566438}
!4061 = !DILocation(line: 16, column: 1, scope: !4049)
!4062 = !{i64 2147566539, i64 2147566582, i64 2147566622}
!4063 = !DILocation(line: 17, column: 1, scope: !4049)
!4064 = !{i64 2147566718, i64 2147566761, i64 2147566801}
!4065 = !DILocation(line: 18, column: 1, scope: !4049)
!4066 = !{i64 2147566960, i64 2147567003, i64 2147567043}
!4067 = !DILocation(line: 19, column: 1, scope: !4049)
!4068 = !{i64 2147567195, i64 2147567238, i64 2147567278}
!4069 = !DILocation(line: 20, column: 1, scope: !4049)
!4070 = !{i64 2147567381, i64 2147567424, i64 2147567464}
!4071 = !DILocation(line: 21, column: 1, scope: !4049)
!4072 = !{i64 2147567597, i64 2147567640, i64 2147567680}
!4073 = !DILocation(line: 22, column: 1, scope: !4049)
!4074 = !{i64 2147567800, i64 2147567843, i64 2147567883}
!4075 = !DILocation(line: 23, column: 1, scope: !4049)
!4076 = !{i64 2147568003, i64 2147568046, i64 2147568086}
!4077 = !DILocation(line: 24, column: 1, scope: !4049)
!4078 = !{i64 2147568178, i64 2147568221, i64 2147568261}
!4079 = !DILocation(line: 25, column: 1, scope: !4049)
!4080 = !{i64 2147568386, i64 2147568429, i64 2147568469}
!4081 = !DILocation(line: 26, column: 1, scope: !4049)
!4082 = !{i64 2147568590, i64 2147568633, i64 2147568673}
!4083 = !DILocation(line: 27, column: 1, scope: !4049)
!4084 = !{i64 2147568783, i64 2147568826, i64 2147568866}
!4085 = !DILocation(line: 28, column: 1, scope: !4049)
!4086 = !{i64 2147568985, i64 2147569028, i64 2147569068}
!4087 = !DILocation(line: 29, column: 1, scope: !4049)
!4088 = !{i64 2147569212, i64 2147569255, i64 2147569295}
!4089 = !DILocation(line: 30, column: 1, scope: !4049)
!4090 = !{i64 2147569414, i64 2147569457, i64 2147569497}
!4091 = !DILocation(line: 31, column: 1, scope: !4049)
!4092 = !{i64 2147569629, i64 2147569672, i64 2147569712}
!4093 = !DILocation(line: 32, column: 1, scope: !4049)
!4094 = !{i64 2147569801, i64 2147569844, i64 2147569884}
!4095 = !DILocation(line: 33, column: 1, scope: !4049)
!4096 = !{i64 2147570003, i64 2147570046, i64 2147570086}
!4097 = !DILocation(line: 34, column: 1, scope: !4049)
!4098 = !{i64 2147570229, i64 2147570272, i64 2147570312}
!4099 = !DILocation(line: 35, column: 1, scope: !4049)
!4100 = !{i64 2147570428, i64 2147570471, i64 2147570511}
!4101 = !DILocation(line: 36, column: 1, scope: !4049)
!4102 = !{i64 2147570603, i64 2147570646, i64 2147570686}
!4103 = !DILocation(line: 37, column: 1, scope: !4049)
!4104 = !{i64 2147570856, i64 2147570899, i64 2147570939}
!4105 = !DILocation(line: 38, column: 1, scope: !4049)
!4106 = !{i64 2147571097, i64 2147571140, i64 2147571180}
!4107 = !DILocation(line: 39, column: 1, scope: !4049)
!4108 = !{i64 2147571332, i64 2147571375, i64 2147571415}
!4109 = !DILocation(line: 40, column: 1, scope: !4049)
!4110 = !{i64 2147571564, i64 2147571607, i64 2147571647}
!4111 = !DILocation(line: 41, column: 1, scope: !4049)
!4112 = !{i64 2147571790, i64 2147571833, i64 2147571873}
!4113 = !DILocation(line: 42, column: 1, scope: !4049)
!4114 = !{i64 2147572016, i64 2147572059, i64 2147572099}
!4115 = !DILocation(line: 43, column: 1, scope: !4049)
!4116 = !{i64 2147572242, i64 2147572285, i64 2147572325}
!4117 = !DILocation(line: 44, column: 1, scope: !4049)
!4118 = !{i64 2147572477, i64 2147572520, i64 2147572560}
!4119 = !DILocation(line: 45, column: 1, scope: !4049)
!4120 = !{i64 2147572721, i64 2147572764, i64 2147572804}
!4121 = !DILocation(line: 46, column: 1, scope: !4049)
!4122 = !{i64 2147572968, i64 2147573011, i64 2147573051}
!4123 = !DILocation(line: 47, column: 1, scope: !4049)
!4124 = !{i64 2147573200, i64 2147573243, i64 2147573283}
!4125 = !DILocation(line: 48, column: 1, scope: !4049)
!4126 = !{i64 2147573444, i64 2147573487, i64 2147573527}
!4127 = !DILocation(line: 49, column: 1, scope: !4049)
!4128 = !{i64 2147573682, i64 2147573725, i64 2147573765}
!4129 = !DILocation(line: 50, column: 1, scope: !4049)
!4130 = !{i64 2147573956, i64 2147573999, i64 2147574039}
!4131 = !DILocation(line: 51, column: 1, scope: !4049)
!4132 = !{i64 2147574194, i64 2147574237, i64 2147574277}
!4133 = !DILocation(line: 52, column: 1, scope: !4049)
!4134 = !{i64 2147574447, i64 2147574490, i64 2147574530}
!4135 = !DILocation(line: 53, column: 1, scope: !4049)
!4136 = !{i64 2147578752, i64 2147578795, i64 2147578835}
!4137 = !DILocation(line: 54, column: 1, scope: !4049)
!4138 = !{i64 2147578987, i64 2147579030, i64 2147579070}
!4139 = !DILocation(line: 55, column: 1, scope: !4049)
!4140 = !{i64 2147579237, i64 2147579280, i64 2147579320}
!4141 = !DILocation(line: 56, column: 1, scope: !4049)
!4142 = !{i64 2147579484, i64 2147579527, i64 2147579567}
!4143 = !DILocation(line: 57, column: 1, scope: !4049)
!4144 = !{i64 2147579719, i64 2147579762, i64 2147579802}
!4145 = !DILocation(line: 58, column: 1, scope: !4049)
!4146 = !{i64 2147579954, i64 2147579997, i64 2147580037}
!4147 = !DILocation(line: 59, column: 1, scope: !4049)
!4148 = !{i64 2147580189, i64 2147580232, i64 2147580272}
!4149 = !DILocation(line: 60, column: 1, scope: !4049)
!4150 = !{i64 2147580424, i64 2147580467, i64 2147580507}
!4151 = !DILocation(line: 61, column: 1, scope: !4049)
!4152 = !{i64 2147580668, i64 2147580711, i64 2147580751}
!4153 = !DILocation(line: 62, column: 1, scope: !4049)
!4154 = !{i64 2147580906, i64 2147580949, i64 2147580989}
!4155 = !DILocation(line: 63, column: 1, scope: !4049)
!4156 = !{i64 2147581147, i64 2147581190, i64 2147581230}
!4157 = !DILocation(line: 64, column: 1, scope: !4049)
!4158 = !{i64 2147581427, i64 2147581470, i64 2147581510}
!4159 = !DILocation(line: 65, column: 1, scope: !4049)
!4160 = !{i64 2147581686, i64 2147581729, i64 2147581769}
!4161 = !DILocation(line: 66, column: 1, scope: !4049)
!4162 = !{i64 2147581924, i64 2147581967, i64 2147582007}
!4163 = !DILocation(line: 67, column: 1, scope: !4049)
!4164 = !{i64 2147582153, i64 2147582196, i64 2147582236}
!4165 = !DILocation(line: 68, column: 1, scope: !4049)
!4166 = !{i64 2147582361, i64 2147582404, i64 2147582444}
!4167 = !DILocation(line: 69, column: 1, scope: !4049)
!4168 = !{i64 2147582572, i64 2147582615, i64 2147582655}
!4169 = !DILocation(line: 70, column: 1, scope: !4049)
!4170 = !{i64 2147582807, i64 2147582850, i64 2147582890}
!4171 = !DILocation(line: 71, column: 1, scope: !4049)
!4172 = !{i64 2147583036, i64 2147583079, i64 2147583119}
!4173 = !DILocation(line: 72, column: 1, scope: !4049)
!4174 = !{i64 2147583274, i64 2147583317, i64 2147583357}
!4175 = !DILocation(line: 73, column: 1, scope: !4049)
!4176 = !{i64 2147583506, i64 2147583549, i64 2147583589}
!4177 = !DILocation(line: 74, column: 1, scope: !4049)
!4178 = !{i64 2147583732, i64 2147583775, i64 2147583815}
!4179 = !DILocation(line: 75, column: 1, scope: !4049)
!4180 = !{i64 2147583949, i64 2147583992, i64 2147584032}
!4181 = !DILocation(line: 76, column: 1, scope: !4049)
!4182 = !{i64 2147584181, i64 2147584224, i64 2147584264}
!4183 = !DILocation(line: 77, column: 1, scope: !4049)
!4184 = !{i64 2147584407, i64 2147584450, i64 2147584490}
!4185 = !DILocation(line: 78, column: 1, scope: !4049)
!4186 = !{i64 2147584621, i64 2147584664, i64 2147584704}
!4187 = !DILocation(line: 79, column: 1, scope: !4049)
!4188 = !{i64 2147584841, i64 2147584884, i64 2147584924}
!4189 = !DILocation(line: 80, column: 1, scope: !4049)
!4190 = !{i64 2147585073, i64 2147585116, i64 2147585156}
!4191 = !DILocation(line: 81, column: 1, scope: !4049)
!4192 = !{i64 2147585281, i64 2147585324, i64 2147585364}
!4193 = !DILocation(line: 82, column: 1, scope: !4049)
!4194 = !{i64 2147585486, i64 2147585529, i64 2147585569}
!4195 = !DILocation(line: 83, column: 1, scope: !4049)
!4196 = !{i64 2147585703, i64 2147585746, i64 2147585786}
!4197 = !DILocation(line: 84, column: 1, scope: !4049)
!4198 = !{i64 2147585917, i64 2147585960, i64 2147586000}
!4199 = !DILocation(line: 85, column: 1, scope: !4049)
!4200 = !{i64 2147586143, i64 2147586186, i64 2147586226}
!4201 = !DILocation(line: 86, column: 1, scope: !4049)
!4202 = !{i64 2147586363, i64 2147586406, i64 2147586446}
!4203 = !DILocation(line: 87, column: 1, scope: !4049)
!4204 = !{i64 2147586568, i64 2147586611, i64 2147586651}
!4205 = !DILocation(line: 88, column: 1, scope: !4049)
!4206 = !{i64 2147590861, i64 2147590904, i64 2147590944}
!4207 = !DILocation(line: 89, column: 1, scope: !4049)
!4208 = !{i64 2147591096, i64 2147591139, i64 2147591179}
!4209 = !DILocation(line: 90, column: 1, scope: !4049)
!4210 = !{i64 2147591346, i64 2147591389, i64 2147591429}
!4211 = !DILocation(line: 91, column: 1, scope: !4049)
!4212 = !{i64 2147591596, i64 2147591639, i64 2147591679}
!4213 = !DILocation(line: 92, column: 1, scope: !4049)
!4214 = !{i64 2147591834, i64 2147591877, i64 2147591917}
!4215 = !DILocation(line: 93, column: 1, scope: !4049)
!4216 = !{i64 2147592045, i64 2147592088, i64 2147592128}
!4217 = !DILocation(line: 94, column: 1, scope: !4049)
!4218 = !{i64 2147592262, i64 2147592305, i64 2147592345}
!4219 = !DILocation(line: 95, column: 1, scope: !4049)
!4220 = !{i64 2147592458, i64 2147592501, i64 2147592541}
!4221 = !DILocation(line: 96, column: 1, scope: !4049)
!4222 = !{i64 2147592660, i64 2147592703, i64 2147592743}
!4223 = !DILocation(line: 97, column: 1, scope: !4049)
!4224 = !{i64 2147592853, i64 2147592896, i64 2147592936}
!4225 = !DILocation(line: 98, column: 1, scope: !4049)
!4226 = !{i64 2147593061, i64 2147593104, i64 2147593144}
!4227 = !DILocation(line: 99, column: 1, scope: !4049)
!4228 = !{i64 2147593257, i64 2147593300, i64 2147593340}
!4229 = !DILocation(line: 100, column: 1, scope: !4049)
!4230 = !{i64 2147593489, i64 2147593532, i64 2147593572}
!4231 = !DILocation(line: 101, column: 1, scope: !4049)
!4232 = !{i64 2147593700, i64 2147593743, i64 2147593783}
!4233 = !DILocation(line: 102, column: 1, scope: !4049)
!4234 = !{i64 2147593899, i64 2147593942, i64 2147593982}
!4235 = !DILocation(line: 103, column: 1, scope: !4049)
!4236 = !{i64 2147594074, i64 2147594117, i64 2147594157}
!4237 = !DILocation(line: 104, column: 1, scope: !4049)
!4238 = !{i64 2147594258, i64 2147594301, i64 2147594341}
!4239 = !DILocation(line: 105, column: 1, scope: !4049)
!4240 = !{i64 2147594460, i64 2147594503, i64 2147594543}
!4241 = !DILocation(line: 106, column: 1, scope: !4049)
!4242 = !{i64 2147594659, i64 2147594702, i64 2147594742}
!4243 = !DILocation(line: 107, column: 1, scope: !4049)
!4244 = !{i64 2147594825, i64 2147594868, i64 2147594908}
!4245 = !DILocation(line: 108, column: 1, scope: !4049)
!4246 = !{i64 2147595009, i64 2147595052, i64 2147595092}
!4247 = !DILocation(line: 109, column: 1, scope: !4049)
!4248 = !{i64 2147595199, i64 2147595242, i64 2147595282}
!4249 = !DILocation(line: 110, column: 1, scope: !4049)
!4250 = !{i64 2147595383, i64 2147595426, i64 2147595466}
!4251 = !DILocation(line: 111, column: 1, scope: !4049)
!4252 = !{i64 2147595597, i64 2147595640, i64 2147595680}
!4253 = !DILocation(line: 112, column: 1, scope: !4049)
!4254 = !{i64 2147595808, i64 2147595851, i64 2147595891}
!4255 = !DILocation(line: 113, column: 1, scope: !4049)
!4256 = !{i64 2147596031, i64 2147596074, i64 2147596114}
!4257 = !DILocation(line: 114, column: 1, scope: !4049)
!4258 = !{i64 2147596215, i64 2147596258, i64 2147596298}
!4259 = !DILocation(line: 115, column: 1, scope: !4049)
!4260 = !{i64 2147596429, i64 2147596472, i64 2147596512}
!4261 = !DILocation(line: 116, column: 1, scope: !4049)
!4262 = !{i64 2147596595, i64 2147596638, i64 2147596678}
!4263 = !DILocation(line: 117, column: 1, scope: !4049)
!4264 = !{i64 2147596776, i64 2147596819, i64 2147596859}
!4265 = !DILocation(line: 118, column: 1, scope: !4049)
!4266 = !{i64 2147596969, i64 2147597012, i64 2147597052}
!4267 = !DILocation(line: 119, column: 1, scope: !4049)
!4268 = !{i64 2147597195, i64 2147597238, i64 2147597278}
!4269 = !DILocation(line: 120, column: 1, scope: !4049)
!4270 = !{i64 2147597409, i64 2147597452, i64 2147597492}
!4271 = !DILocation(line: 121, column: 1, scope: !4049)
!4272 = !{i64 2147597635, i64 2147597678, i64 2147597718}
!4273 = !DILocation(line: 122, column: 1, scope: !4049)
!4274 = !{i64 2147597852, i64 2147597895, i64 2147597935}
!4275 = !DILocation(line: 123, column: 1, scope: !4049)
!4276 = !{i64 2147598129, i64 2147598172, i64 2147598212}
!4277 = !DILocation(line: 124, column: 1, scope: !4049)
!4278 = !{i64 2147598355, i64 2147598398, i64 2147598438}
!4279 = !DILocation(line: 125, column: 1, scope: !4049)
!4280 = !{i64 2147598563, i64 2147598606, i64 2147598646}
!4281 = !DILocation(line: 126, column: 1, scope: !4049)
!4282 = !{i64 2147598759, i64 2147598802, i64 2147598842}
!4283 = !DILocation(line: 127, column: 1, scope: !4049)
!4284 = !{i64 2147599024, i64 2147599067, i64 2147599107}
!4285 = !DILocation(line: 128, column: 1, scope: !4049)
!4286 = !{i64 2147599238, i64 2147599281, i64 2147599321}
!4287 = !DILocation(line: 129, column: 1, scope: !4049)
!4288 = !{i64 2147599413, i64 2147599456, i64 2147599496}
!4289 = !DILocation(line: 130, column: 1, scope: !4049)
!4290 = !{i64 2147599667, i64 2147599710, i64 2147599750}
!4291 = !DILocation(line: 131, column: 1, scope: !4049)
!4292 = !{i64 2147603927, i64 2147603970, i64 2147604010}
!4293 = !DILocation(line: 132, column: 1, scope: !4049)
!4294 = !{i64 2147604169, i64 2147604212, i64 2147604252}
!4295 = !DILocation(line: 133, column: 1, scope: !4049)
!4296 = !{i64 2147604332, i64 2147604375, i64 2147604415}
!4297 = !DILocation(line: 134, column: 1, scope: !4049)
!4298 = !{i64 2147604519, i64 2147604562, i64 2147604602}
!4299 = !DILocation(line: 135, column: 1, scope: !4049)
!4300 = !{i64 2147604712, i64 2147604755, i64 2147604795}
!4301 = !DILocation(line: 136, column: 1, scope: !4049)
!4302 = !{i64 2147604895, i64 2147604938, i64 2147604978}
!4303 = !DILocation(line: 137, column: 1, scope: !4049)
!4304 = !{i64 2147605109, i64 2147605152, i64 2147605192}
!4305 = !DILocation(line: 138, column: 1, scope: !4049)
!4306 = !{i64 2147605320, i64 2147605363, i64 2147605403}
!4307 = !DILocation(line: 139, column: 1, scope: !4049)
!4308 = !{i64 2147605540, i64 2147605583, i64 2147605623}
!4309 = !DILocation(line: 140, column: 1, scope: !4049)
!4310 = !{i64 2147605747, i64 2147605790, i64 2147605830}
!4311 = !DILocation(line: 141, column: 1, scope: !4049)
!4312 = !{i64 2147606020, i64 2147606063, i64 2147606103}
!4313 = !DILocation(line: 142, column: 1, scope: !4049)
!4314 = !{i64 2147606268, i64 2147606311, i64 2147606351}
!4315 = !DILocation(line: 143, column: 1, scope: !4049)
!4316 = !{i64 2147606467, i64 2147606510, i64 2147606550}
!4317 = !DILocation(line: 144, column: 1, scope: !4049)
!4318 = !{i64 2147606702, i64 2147606745, i64 2147606785}
!4319 = !DILocation(line: 145, column: 1, scope: !4049)
!4320 = !{i64 2147606952, i64 2147606995, i64 2147607035}
!4321 = !DILocation(line: 146, column: 1, scope: !4049)
!4322 = !{i64 2147607154, i64 2147607197, i64 2147607237}
!4323 = !DILocation(line: 147, column: 1, scope: !4049)
!4324 = !{i64 2147607377, i64 2147607420, i64 2147607460}
!4325 = !DILocation(line: 148, column: 1, scope: !4049)
!4326 = !{i64 2147607591, i64 2147607634, i64 2147607674}
!4327 = !DILocation(line: 149, column: 1, scope: !4049)
!4328 = !{i64 2147607835, i64 2147607878, i64 2147607918}
!4329 = !DILocation(line: 150, column: 1, scope: !4049)
!4330 = !{i64 2147608064, i64 2147608107, i64 2147608147}
!4331 = !DILocation(line: 151, column: 1, scope: !4049)
!4332 = !{i64 2147608293, i64 2147608336, i64 2147608376}
!4333 = !DILocation(line: 152, column: 1, scope: !4049)
!4334 = !{i64 2147608501, i64 2147608544, i64 2147608584}
!4335 = !DILocation(line: 153, column: 1, scope: !4049)
!4336 = !{i64 2147608739, i64 2147608782, i64 2147608822}
!4337 = !DILocation(line: 154, column: 1, scope: !4049)
!4338 = !{i64 2147608965, i64 2147609008, i64 2147609048}
!4339 = !DILocation(line: 155, column: 1, scope: !4049)
!4340 = !{i64 2147609224, i64 2147609267, i64 2147609307}
!4341 = !DILocation(line: 156, column: 1, scope: !4049)
!4342 = !{i64 2147609444, i64 2147609487, i64 2147609527}
!4343 = !DILocation(line: 157, column: 1, scope: !4049)
!4344 = !{i64 2147609676, i64 2147609719, i64 2147609759}
!4345 = !DILocation(line: 158, column: 1, scope: !4049)
!4346 = !{i64 2147609917, i64 2147609960, i64 2147610000}
!4347 = !DILocation(line: 159, column: 1, scope: !4049)
!4348 = !{i64 2147610158, i64 2147610201, i64 2147610241}
!4349 = !DILocation(line: 160, column: 1, scope: !4049)
!4350 = !{i64 2147610381, i64 2147610424, i64 2147610464}
!4351 = !DILocation(line: 161, column: 1, scope: !4049)
!4352 = !{i64 2147610598, i64 2147610641, i64 2147610681}
!4353 = !DILocation(line: 162, column: 1, scope: !4049)
!4354 = !{i64 2147610839, i64 2147610882, i64 2147610922}
!4355 = !DILocation(line: 163, column: 1, scope: !4049)
!4356 = !{i64 2147611026, i64 2147611069, i64 2147611109}
!4357 = !DILocation(line: 164, column: 1, scope: !4049)
!4358 = !{i64 2147611213, i64 2147611256, i64 2147611296}
!4359 = !DILocation(line: 165, column: 1, scope: !4049)
!4360 = !{i64 2147611376, i64 2147611419, i64 2147611459}
!4361 = !DILocation(line: 166, column: 1, scope: !4049)
!4362 = !{i64 2147611635, i64 2147611678, i64 2147611718}
!4363 = !DILocation(line: 167, column: 1, scope: !4049)
!4364 = !{i64 2147611858, i64 2147611901, i64 2147611941}
!4365 = !DILocation(line: 168, column: 1, scope: !4049)
!4366 = !{i64 2147612087, i64 2147612130, i64 2147612170}
!4367 = !DILocation(line: 169, column: 1, scope: !4049)
!4368 = !{i64 2147612283, i64 2147612326, i64 2147612366}
!4369 = !DILocation(line: 170, column: 1, scope: !4049)
!4370 = !{i64 2147616556, i64 2147616599, i64 2147616639}
!4371 = !DILocation(line: 171, column: 1, scope: !4049)
!4372 = !{i64 2147616777, i64 2147616820, i64 2147616860}
!4373 = !DILocation(line: 172, column: 1, scope: !4049)
!4374 = !{i64 2147616991, i64 2147617034, i64 2147617074}
!4375 = !DILocation(line: 173, column: 1, scope: !4049)
!4376 = !{i64 2147617181, i64 2147617224, i64 2147617264}
!4377 = !DILocation(line: 174, column: 1, scope: !4049)
!4378 = !{i64 2147617380, i64 2147617423, i64 2147617463}
!4379 = !DILocation(line: 175, column: 1, scope: !4049)
!4380 = !{i64 2147617585, i64 2147617628, i64 2147617668}
!4381 = !DILocation(line: 176, column: 1, scope: !4049)
!4382 = !{i64 2147617805, i64 2147617848, i64 2147617888}
!4383 = !DILocation(line: 177, column: 1, scope: !4049)
!4384 = !{i64 2147618006, i64 2147618049, i64 2147618089}
!4385 = !DILocation(line: 178, column: 1, scope: !4049)
!4386 = !{i64 2147618205, i64 2147618248, i64 2147618288}
!4387 = !DILocation(line: 179, column: 1, scope: !4049)
!4388 = !{i64 2147618410, i64 2147618453, i64 2147618493}
!4389 = !DILocation(line: 180, column: 1, scope: !4049)
!4390 = !{i64 2147618579, i64 2147618622, i64 2147618662}
!4391 = !DILocation(line: 181, column: 1, scope: !4049)
!4392 = !{i64 2147618763, i64 2147618806, i64 2147618846}
!4393 = !DILocation(line: 182, column: 1, scope: !4049)
!4394 = !{i64 2147618947, i64 2147618990, i64 2147619030}
!4395 = !DILocation(line: 183, column: 1, scope: !4049)
!4396 = !{i64 2147619134, i64 2147619177, i64 2147619217}
!4397 = !DILocation(line: 184, column: 1, scope: !4049)
!4398 = !{i64 2147619318, i64 2147619361, i64 2147619401}
!4399 = !DILocation(line: 185, column: 1, scope: !4049)
!4400 = !{i64 2147619556, i64 2147619599, i64 2147619639}
!4401 = !DILocation(line: 186, column: 1, scope: !4049)
!4402 = !{i64 2147619786, i64 2147619829, i64 2147619869}
!4403 = !DILocation(line: 187, column: 1, scope: !4049)
!4404 = !{i64 2147620015, i64 2147620058, i64 2147620098}
!4405 = !DILocation(line: 188, column: 1, scope: !4049)
!4406 = !{i64 2147620202, i64 2147620245, i64 2147620285}
!4407 = !DILocation(line: 189, column: 1, scope: !4049)
!4408 = !{i64 2147620398, i64 2147620441, i64 2147620481}
!4409 = !DILocation(line: 190, column: 1, scope: !4049)
!4410 = !{i64 2147620606, i64 2147620649, i64 2147620689}
!4411 = !DILocation(line: 191, column: 1, scope: !4049)
!4412 = !{i64 2147620818, i64 2147620861, i64 2147620901}
!4413 = !DILocation(line: 192, column: 1, scope: !4049)
!4414 = !{i64 2147621017, i64 2147621060, i64 2147621100}
!4415 = !DILocation(line: 193, column: 1, scope: !4049)
!4416 = !{i64 2147621255, i64 2147621298, i64 2147621338}
!4417 = !DILocation(line: 194, column: 1, scope: !4049)
!4418 = !{i64 2147621451, i64 2147621494, i64 2147621534}
!4419 = !DILocation(line: 195, column: 1, scope: !4049)
!4420 = !{i64 2147621653, i64 2147621696, i64 2147621736}
!4421 = !DILocation(line: 196, column: 1, scope: !4049)
!4422 = !{i64 2147621846, i64 2147621889, i64 2147621929}
!4423 = !DILocation(line: 197, column: 1, scope: !4049)
!4424 = !{i64 2147622080, i64 2147622123, i64 2147622163}
!4425 = !DILocation(line: 198, column: 1, scope: !4049)
!4426 = !{i64 2147622243, i64 2147622286, i64 2147622326}
!4427 = !DILocation(line: 199, column: 1, scope: !4049)
!4428 = !{i64 2147622482, i64 2147622525, i64 2147622565}
!4429 = !DILocation(line: 200, column: 1, scope: !4049)
!4430 = !{i64 2147622721, i64 2147622764, i64 2147622804}
!4431 = !DILocation(line: 201, column: 1, scope: !4049)
!4432 = !{i64 2147622957, i64 2147623000, i64 2147623040}
!4433 = !DILocation(line: 202, column: 1, scope: !4049)
!4434 = !{i64 2147623187, i64 2147623230, i64 2147623270}
!4435 = !DILocation(line: 203, column: 1, scope: !4049)
!4436 = !{i64 2147623374, i64 2147623417, i64 2147623457}
!4437 = !DILocation(line: 204, column: 1, scope: !4049)
!4438 = !{i64 2147623573, i64 2147623616, i64 2147623656}
!4439 = !DILocation(line: 205, column: 1, scope: !4049)
!4440 = !{i64 2147623844, i64 2147623887, i64 2147623927}
!4441 = !DILocation(line: 206, column: 1, scope: !4049)
!4442 = !{i64 2147624019, i64 2147624062, i64 2147624102}
!4443 = !DILocation(line: 207, column: 1, scope: !4049)
!4444 = !{i64 2147624253, i64 2147624296, i64 2147624336}
!4445 = !DILocation(line: 208, column: 1, scope: !4049)
!4446 = !{i64 2147624461, i64 2147624504, i64 2147624544}
!4447 = !DILocation(line: 209, column: 1, scope: !4049)
!4448 = !{i64 2147624679, i64 2147624722, i64 2147624762}
!4449 = !DILocation(line: 210, column: 1, scope: !4049)
!4450 = !{i64 2147624869, i64 2147624912, i64 2147624952}
!4451 = !DILocation(line: 211, column: 1, scope: !4049)
!4452 = !{i64 2147625065, i64 2147625108, i64 2147625148}
!4453 = !DILocation(line: 212, column: 1, scope: !4049)
!4454 = !{i64 2147625271, i64 2147625314, i64 2147625354}
!4455 = !DILocation(line: 213, column: 1, scope: !4049)
!4456 = !{i64 2147625476, i64 2147625519, i64 2147625559}
!4457 = !DILocation(line: 214, column: 1, scope: !4049)
!4458 = !{i64 2147629751, i64 2147629794, i64 2147629834}
!4459 = !DILocation(line: 215, column: 1, scope: !4049)
!4460 = !{i64 2147629977, i64 2147630020, i64 2147630060}
!4461 = !DILocation(line: 216, column: 1, scope: !4049)
!4462 = !{i64 2147630209, i64 2147630252, i64 2147630292}
!4463 = !DILocation(line: 217, column: 1, scope: !4049)
!4464 = !{i64 2147630393, i64 2147630436, i64 2147630476}
!4465 = !DILocation(line: 218, column: 1, scope: !4049)
!4466 = !{i64 2147630602, i64 2147630645, i64 2147630685}
!4467 = !DILocation(line: 219, column: 1, scope: !4049)
!4468 = !{i64 2147630786, i64 2147630829, i64 2147630869}
!4469 = !DILocation(line: 220, column: 1, scope: !4049)
!4470 = !{i64 2147631012, i64 2147631055, i64 2147631095}
!4471 = !DILocation(line: 221, column: 1, scope: !4049)
!4472 = !{i64 2147631238, i64 2147631281, i64 2147631321}
!4473 = !DILocation(line: 222, column: 1, scope: !4049)
!4474 = !{i64 2147631464, i64 2147631507, i64 2147631547}
!4475 = !DILocation(line: 223, column: 1, scope: !4049)
!4476 = !{i64 2147631690, i64 2147631733, i64 2147631773}
!4477 = !DILocation(line: 224, column: 1, scope: !4049)
!4478 = !{i64 2147631916, i64 2147631959, i64 2147631999}
!4479 = !DILocation(line: 225, column: 1, scope: !4049)
!4480 = !{i64 2147632148, i64 2147632191, i64 2147632231}
!4481 = !DILocation(line: 226, column: 1, scope: !4049)
!4482 = !{i64 2147632386, i64 2147632429, i64 2147632469}
!4483 = !DILocation(line: 227, column: 1, scope: !4049)
!4484 = !{i64 2147632606, i64 2147632649, i64 2147632689}
!4485 = !DILocation(line: 228, column: 1, scope: !4049)
!4486 = !{i64 2147632850, i64 2147632893, i64 2147632933}
!4487 = !DILocation(line: 229, column: 1, scope: !4049)
!4488 = !{i64 2147633091, i64 2147633134, i64 2147633174}
!4489 = !DILocation(line: 230, column: 1, scope: !4049)
!4490 = !{i64 2147633326, i64 2147633369, i64 2147633409}
!4491 = !DILocation(line: 231, column: 1, scope: !4049)
!4492 = !{i64 2147633558, i64 2147633601, i64 2147633641}
!4493 = !DILocation(line: 232, column: 1, scope: !4049)
!4494 = !{i64 2147633760, i64 2147633803, i64 2147633843}
!4495 = !DILocation(line: 233, column: 1, scope: !4049)
!4496 = !{i64 2147634010, i64 2147634053, i64 2147634093}
!4497 = !DILocation(line: 234, column: 1, scope: !4049)
!4498 = !{i64 2147634248, i64 2147634291, i64 2147634331}
!4499 = !DILocation(line: 235, column: 1, scope: !4049)
!4500 = !{i64 2147634432, i64 2147634475, i64 2147634515}
!4501 = !DILocation(line: 236, column: 1, scope: !4049)
!4502 = !{i64 2147634656, i64 2147634699, i64 2147634739}
!4503 = !DILocation(line: 237, column: 1, scope: !4049)
!4504 = !{i64 2147634894, i64 2147634937, i64 2147634977}
!4505 = !DILocation(line: 238, column: 1, scope: !4049)
!4506 = !{i64 2147635132, i64 2147635175, i64 2147635215}
!4507 = !DILocation(line: 239, column: 1, scope: !4049)
!4508 = !{i64 2147635325, i64 2147635368, i64 2147635408}
!4509 = !DILocation(line: 240, column: 1, scope: !4049)
!4510 = !{i64 2147635578, i64 2147635621, i64 2147635661}
!4511 = !DILocation(line: 241, column: 1, scope: !4049)
!4512 = !{i64 2147635792, i64 2147635835, i64 2147635875}
!4513 = !DILocation(line: 242, column: 1, scope: !4049)
!4514 = !{i64 2147636000, i64 2147636043, i64 2147636083}
!4515 = !DILocation(line: 243, column: 1, scope: !4049)
!4516 = !{i64 2147636190, i64 2147636233, i64 2147636273}
!4517 = !DILocation(line: 244, column: 1, scope: !4049)
!4518 = !{i64 2147636404, i64 2147636447, i64 2147636487}
!4519 = !DILocation(line: 245, column: 1, scope: !4049)
!4520 = !{i64 2147636666, i64 2147636709, i64 2147636749}
!4521 = !DILocation(line: 246, column: 1, scope: !4049)
!4522 = !{i64 2147636877, i64 2147636920, i64 2147636960}
!4523 = !DILocation(line: 247, column: 1, scope: !4049)
!4524 = !{i64 2147637121, i64 2147637164, i64 2147637204}
!4525 = !DILocation(line: 248, column: 1, scope: !4049)
!4526 = !{i64 2147637332, i64 2147637375, i64 2147637415}
!4527 = !DILocation(line: 249, column: 1, scope: !4049)
!4528 = !{i64 2147637561, i64 2147637604, i64 2147637644}
!4529 = !DILocation(line: 250, column: 1, scope: !4049)
!4530 = !{i64 2147637826, i64 2147637869, i64 2147637909}
!4531 = !DILocation(line: 251, column: 1, scope: !4049)
!4532 = !{i64 2147638031, i64 2147638074, i64 2147638114}
!4533 = !DILocation(line: 252, column: 1, scope: !4049)
!4534 = !{i64 2147642288, i64 2147642331, i64 2147642371}
!4535 = !DILocation(line: 253, column: 1, scope: !4049)
!4536 = !{i64 2147642511, i64 2147642554, i64 2147642594}
!4537 = !DILocation(line: 254, column: 1, scope: !4049)
!4538 = !{i64 2147642674, i64 2147642717, i64 2147642757}
!4539 = !DILocation(line: 255, column: 1, scope: !4049)
!4540 = !{i64 2147642879, i64 2147642922, i64 2147642962}
!4541 = !DILocation(line: 256, column: 1, scope: !4049)
!4542 = !{i64 2147643099, i64 2147643142, i64 2147643182}
!4543 = !DILocation(line: 257, column: 1, scope: !4049)
!4544 = !{i64 2147643313, i64 2147643356, i64 2147643396}
!4545 = !DILocation(line: 258, column: 1, scope: !4049)
!4546 = !{i64 2147643527, i64 2147643570, i64 2147643610}
!4547 = !DILocation(line: 259, column: 1, scope: !4049)
!4548 = !{i64 2147643738, i64 2147643781, i64 2147643821}
!4549 = !DILocation(line: 260, column: 1, scope: !4049)
!4550 = !{i64 2147643931, i64 2147643974, i64 2147644014}
!4551 = !DILocation(line: 261, column: 1, scope: !4049)
!4552 = !{i64 2147644130, i64 2147644173, i64 2147644213}
!4553 = !DILocation(line: 262, column: 1, scope: !4049)
!4554 = !{i64 2147644302, i64 2147644345, i64 2147644385}
!4555 = !DILocation(line: 263, column: 1, scope: !4049)
!4556 = !{i64 2147644495, i64 2147644538, i64 2147644578}
!4557 = !DILocation(line: 264, column: 1, scope: !4049)
!4558 = !{i64 2147644691, i64 2147644734, i64 2147644774}
!4559 = !DILocation(line: 265, column: 1, scope: !4049)
!4560 = !{i64 2147644918, i64 2147644961, i64 2147645001}
!4561 = !DILocation(line: 266, column: 1, scope: !4049)
!4562 = !{i64 2147645135, i64 2147645178, i64 2147645218}
!4563 = !DILocation(line: 267, column: 1, scope: !4049)
!4564 = !{i64 2147645427, i64 2147645470, i64 2147645510}
!4565 = !DILocation(line: 268, column: 1, scope: !4049)
!4566 = !{i64 2147645659, i64 2147645702, i64 2147645742}
!4567 = !DILocation(line: 269, column: 1, scope: !4049)
!4568 = !{i64 2147645876, i64 2147645919, i64 2147645959}
!4569 = !DILocation(line: 270, column: 1, scope: !4049)
!4570 = !{i64 2147646083, i64 2147646126, i64 2147646166}
!4571 = !DILocation(line: 271, column: 1, scope: !4049)
!4572 = !{i64 2147646284, i64 2147646327, i64 2147646367}
!4573 = !DILocation(line: 272, column: 1, scope: !4049)
!4574 = !{i64 2147646516, i64 2147646559, i64 2147646599}
!4575 = !DILocation(line: 273, column: 1, scope: !4049)
!4576 = !{i64 2147646724, i64 2147646767, i64 2147646807}
!4577 = !DILocation(line: 274, column: 1, scope: !4049)
!4578 = !{i64 2147646914, i64 2147646957, i64 2147646997}
!4579 = !DILocation(line: 275, column: 1, scope: !4049)
!4580 = !{i64 2147647140, i64 2147647183, i64 2147647223}
!4581 = !DILocation(line: 276, column: 1, scope: !4049)
!4582 = !{i64 2147647329, i64 2147647372, i64 2147647412}
!4583 = !DILocation(line: 277, column: 1, scope: !4049)
!4584 = !{i64 2147647600, i64 2147647643, i64 2147647683}
!4585 = !DILocation(line: 278, column: 1, scope: !4049)
!4586 = !{i64 2147647820, i64 2147647863, i64 2147647903}
!4587 = !DILocation(line: 279, column: 1, scope: !4049)
!4588 = !{i64 2147648073, i64 2147648116, i64 2147648156}
!4589 = !DILocation(line: 280, column: 1, scope: !4049)
!4590 = !{i64 2147648281, i64 2147648324, i64 2147648364}
!4591 = !DILocation(line: 281, column: 1, scope: !4049)
!4592 = !{i64 2147648513, i64 2147648556, i64 2147648596}
!4593 = !DILocation(line: 282, column: 1, scope: !4049)
!4594 = !{i64 2147648724, i64 2147648767, i64 2147648807}
!4595 = !DILocation(line: 283, column: 1, scope: !4049)
!4596 = !{i64 2147648914, i64 2147648957, i64 2147648997}
!4597 = !DILocation(line: 284, column: 1, scope: !4049)
!4598 = !{i64 2147649128, i64 2147649171, i64 2147649211}
!4599 = !DILocation(line: 285, column: 1, scope: !4049)
!4600 = !{i64 2147649327, i64 2147649370, i64 2147649410}
!4601 = !DILocation(line: 286, column: 1, scope: !4049)
!4602 = !{i64 2147649514, i64 2147649557, i64 2147649597}
!4603 = !DILocation(line: 287, column: 1, scope: !4049)
!4604 = !{i64 2147649722, i64 2147649765, i64 2147649805}
!4605 = !DILocation(line: 288, column: 1, scope: !4049)
!4606 = !{i64 2147649951, i64 2147649994, i64 2147650034}
!4607 = !DILocation(line: 289, column: 1, scope: !4049)
!4608 = !{i64 2147650153, i64 2147650196, i64 2147650236}
!4609 = !DILocation(line: 290, column: 1, scope: !4049)
!4610 = !{i64 2147650352, i64 2147650395, i64 2147650435}
!4611 = !DILocation(line: 291, column: 1, scope: !4049)
!4612 = !{i64 2147650569, i64 2147650612, i64 2147650652}
!4613 = !DILocation(line: 293, column: 1, scope: !4049)
!4614 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4615)
!4615 = !{!4616, !4617}
!4616 = !DILocalVariable(name: "arg", arg: 1, scope: !4614, file: !129, line: 30, type: !138)
!4617 = !DILocalVariable(name: "key", scope: !4614, file: !129, line: 32, type: !121)
!4618 = !DILocation(line: 0, scope: !4614)
!4619 = !DILocation(line: 37, column: 2, scope: !4614)
!4620 = !DILocation(line: 38, column: 2, scope: !4614)
!4621 = !DILocation(line: 55, column: 2, scope: !4622, inlinedAt: !4629)
!4622 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4626)
!4623 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4624 = !DISubroutineType(types: !4625)
!4625 = !{!32}
!4626 = !{!4627, !4628}
!4627 = !DILocalVariable(name: "key", scope: !4622, file: !4623, line: 44, type: !32)
!4628 = !DILocalVariable(name: "tmp", scope: !4622, file: !4623, line: 53, type: !32)
!4629 = distinct !DILocation(line: 40, column: 8, scope: !4614)
!4630 = !{i64 2184624}
!4631 = !DILocation(line: 0, scope: !4622, inlinedAt: !4629)
!4632 = !DILocalVariable(name: "key", arg: 1, scope: !4633, file: !4623, line: 84, type: !32)
!4633 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4636)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{null, !32}
!4636 = !{!4632}
!4637 = !DILocation(line: 0, scope: !4633, inlinedAt: !4638)
!4638 = distinct !DILocation(line: 47, column: 2, scope: !4614)
!4639 = !DILocation(line: 95, column: 2, scope: !4633, inlinedAt: !4638)
!4640 = !{i64 2185441}
!4641 = !DILocation(line: 51, column: 18, scope: !4614)
!4642 = !DILocation(line: 53, column: 2, scope: !4614)
!4643 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4644, file: !4644, line: 1609, type: !2821, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4644 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4645 = !DILocation(line: 1611, column: 3, scope: !4643)
!4646 = !DILocation(line: 1612, column: 1, scope: !4643)
!4647 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4644, file: !4644, line: 1629, type: !2821, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4648 = !DILocation(line: 1631, column: 3, scope: !4647)
!4649 = !DILocation(line: 1632, column: 1, scope: !4647)
!4650 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !4651)
!4651 = !{!4652}
!4652 = !DILocalVariable(name: "dev", arg: 1, scope: !4650, file: !171, line: 26, type: !179)
!4653 = !DILocation(line: 0, scope: !4650)
!4654 = !DILocation(line: 68, column: 2, scope: !4650)
!4655 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4656, file: !4656, line: 57, type: !4657, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !4703)
!4656 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4657 = !DISubroutineType(types: !4658)
!4658 = !{null, !32, !4659}
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4661)
!4661 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2420, line: 141, baseType: !4662)
!4662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2420, line: 97, size: 256, elements: !4663)
!4663 = !{!4664}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4662, file: !2420, line: 107, baseType: !4665, size: 256)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !4666)
!4666 = !{!4667, !4672, !4677, !4682, !4687, !4692, !4697, !4702}
!4667 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 99, baseType: !4668, size: 32)
!4668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 99, size: 32, elements: !4669)
!4669 = !{!4670, !4671}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4668, file: !2420, line: 99, baseType: !121, size: 32)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4668, file: !2420, line: 99, baseType: !121, size: 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 100, baseType: !4673, size: 32, offset: 32)
!4673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 100, size: 32, elements: !4674)
!4674 = !{!4675, !4676}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4673, file: !2420, line: 100, baseType: !121, size: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4673, file: !2420, line: 100, baseType: !121, size: 32)
!4677 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 101, baseType: !4678, size: 32, offset: 64)
!4678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 101, size: 32, elements: !4679)
!4679 = !{!4680, !4681}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4678, file: !2420, line: 101, baseType: !121, size: 32)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4678, file: !2420, line: 101, baseType: !121, size: 32)
!4682 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 102, baseType: !4683, size: 32, offset: 96)
!4683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 102, size: 32, elements: !4684)
!4684 = !{!4685, !4686}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4683, file: !2420, line: 102, baseType: !121, size: 32)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4683, file: !2420, line: 102, baseType: !121, size: 32)
!4687 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 103, baseType: !4688, size: 32, offset: 128)
!4688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 103, size: 32, elements: !4689)
!4689 = !{!4690, !4691}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4688, file: !2420, line: 103, baseType: !121, size: 32)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4688, file: !2420, line: 103, baseType: !121, size: 32)
!4692 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 104, baseType: !4693, size: 32, offset: 160)
!4693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 104, size: 32, elements: !4694)
!4694 = !{!4695, !4696}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4693, file: !2420, line: 104, baseType: !121, size: 32)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4693, file: !2420, line: 104, baseType: !121, size: 32)
!4697 = !DIDerivedType(tag: DW_TAG_member, scope: !4665, file: !2420, line: 105, baseType: !4698, size: 32, offset: 192)
!4698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !2420, line: 105, size: 32, elements: !4699)
!4699 = !{!4700, !4701}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4698, file: !2420, line: 105, baseType: !121, size: 32)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4698, file: !2420, line: 105, baseType: !121, size: 32)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4665, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!4703 = !{!4704, !4705}
!4704 = !DILocalVariable(name: "reason", arg: 1, scope: !4655, file: !4656, line: 57, type: !32)
!4705 = !DILocalVariable(name: "esf", arg: 2, scope: !4655, file: !4656, line: 57, type: !4659)
!4706 = !DILocation(line: 0, scope: !4655)
!4707 = !DILocation(line: 63, column: 2, scope: !4655)
!4708 = !DILocation(line: 64, column: 1, scope: !4655)
!4709 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4656, file: !4656, line: 82, type: !4710, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !4725)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{null, !4659, !4712}
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 32)
!4713 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !4714)
!4714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4715)
!4715 = !{!4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4714, file: !284, line: 26, baseType: !121, size: 32)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4714, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4714, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4714, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4714, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4714, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4714, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4714, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4714, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4725 = !{!4726, !4727, !4728}
!4726 = !DILocalVariable(name: "esf", arg: 1, scope: !4709, file: !4656, line: 82, type: !4659)
!4727 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4709, file: !4656, line: 82, type: !4712)
!4728 = !DILocalVariable(name: "reason", scope: !4709, file: !4656, line: 88, type: !32)
!4729 = !DILocation(line: 0, scope: !4709)
!4730 = !DILocation(line: 88, column: 35, scope: !4709)
!4731 = !DILocation(line: 108, column: 2, scope: !4709)
!4732 = !DILocation(line: 131, column: 1, scope: !4709)
!4733 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4656, file: !4656, line: 133, type: !4734, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !4736)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{null, !102}
!4736 = !{!4737, !4738, !4739}
!4737 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4733, file: !4656, line: 133, type: !102)
!4738 = !DILocalVariable(name: "ssf_contents", scope: !4733, file: !4656, line: 135, type: !723)
!4739 = !DILocalVariable(name: "oops_esf", scope: !4733, file: !4656, line: 136, type: !4661)
!4740 = !DILocation(line: 0, scope: !4733)
!4741 = !DILocation(line: 136, column: 2, scope: !4733)
!4742 = !DILocation(line: 136, column: 15, scope: !4733)
!4743 = !DILocation(line: 139, column: 22, scope: !4733)
!4744 = !DILocation(line: 139, column: 17, scope: !4733)
!4745 = !DILocation(line: 139, column: 20, scope: !4733)
!4746 = !DILocation(line: 141, column: 2, scope: !4733)
!4747 = !DILocation(line: 142, column: 2, scope: !4733)
!4748 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4749, file: !4749, line: 40, type: !4634, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4750)
!4749 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4750 = !{!4751}
!4751 = !DILocalVariable(name: "irq", arg: 1, scope: !4748, file: !4749, line: 40, type: !32)
!4752 = !DILocation(line: 0, scope: !4748)
!4753 = !DILocation(line: 42, column: 2, scope: !4748)
!4754 = !DILocation(line: 43, column: 1, scope: !4748)
!4755 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !4756, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4758)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{null, !621}
!4758 = !{!4759}
!4759 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4755, file: !356, line: 1684, type: !621)
!4760 = !DILocation(line: 0, scope: !4755)
!4761 = !DILocation(line: 1686, column: 23, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4755, file: !356, line: 1686, column: 7)
!4763 = !DILocation(line: 1686, column: 7, scope: !4755)
!4764 = !DILocation(line: 1688, column: 5, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4762, file: !356, line: 1687, column: 3)
!4766 = !{i64 2151254146}
!4767 = !DILocation(line: 1689, column: 81, scope: !4765)
!4768 = !DILocation(line: 1689, column: 60, scope: !4765)
!4769 = !DILocation(line: 1689, column: 34, scope: !4765)
!4770 = !DILocation(line: 1689, column: 5, scope: !4765)
!4771 = !DILocation(line: 1689, column: 43, scope: !4765)
!4772 = !DILocation(line: 1690, column: 5, scope: !4765)
!4773 = !{i64 2151254260}
!4774 = !DILocation(line: 1691, column: 3, scope: !4765)
!4775 = !DILocation(line: 1692, column: 1, scope: !4755)
!4776 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4749, file: !4749, line: 45, type: !4634, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4777)
!4777 = !{!4778}
!4778 = !DILocalVariable(name: "irq", arg: 1, scope: !4776, file: !4749, line: 45, type: !32)
!4779 = !DILocation(line: 0, scope: !4776)
!4780 = !DILocation(line: 47, column: 2, scope: !4776)
!4781 = !DILocation(line: 48, column: 1, scope: !4776)
!4782 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !4756, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4783)
!4783 = !{!4784}
!4784 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4782, file: !356, line: 1722, type: !621)
!4785 = !DILocation(line: 0, scope: !4782)
!4786 = !DILocation(line: 1724, column: 23, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !356, line: 1724, column: 7)
!4788 = !DILocation(line: 1724, column: 7, scope: !4782)
!4789 = !DILocation(line: 1726, column: 81, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4787, file: !356, line: 1725, column: 3)
!4791 = !DILocation(line: 1726, column: 60, scope: !4790)
!4792 = !DILocation(line: 1726, column: 34, scope: !4790)
!4793 = !DILocation(line: 1726, column: 5, scope: !4790)
!4794 = !DILocation(line: 1726, column: 43, scope: !4790)
!4795 = !DILocation(line: 271, column: 3, scope: !4796, inlinedAt: !4798)
!4796 = distinct !DISubprogram(name: "__DSB", scope: !4797, file: !4797, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !322)
!4797 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4798 = distinct !DILocation(line: 1727, column: 5, scope: !4790)
!4799 = !{i64 3708529}
!4800 = !DILocation(line: 260, column: 3, scope: !4801, inlinedAt: !4802)
!4801 = distinct !DISubprogram(name: "__ISB", scope: !4797, file: !4797, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !322)
!4802 = distinct !DILocation(line: 1728, column: 5, scope: !4790)
!4803 = !{i64 3708246}
!4804 = !DILocation(line: 1729, column: 3, scope: !4790)
!4805 = !DILocation(line: 1730, column: 1, scope: !4782)
!4806 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4749, file: !4749, line: 50, type: !4807, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4809)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{!103, !32}
!4809 = !{!4810}
!4810 = !DILocalVariable(name: "irq", arg: 1, scope: !4806, file: !4749, line: 50, type: !32)
!4811 = !DILocation(line: 0, scope: !4806)
!4812 = !DILocation(line: 52, column: 20, scope: !4806)
!4813 = !DILocation(line: 52, column: 9, scope: !4806)
!4814 = !DILocation(line: 52, column: 41, scope: !4806)
!4815 = !DILocation(line: 52, column: 39, scope: !4806)
!4816 = !DILocation(line: 52, column: 2, scope: !4806)
!4817 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4749, file: !4749, line: 64, type: !4818, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4820)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{null, !32, !32, !121}
!4820 = !{!4821, !4822, !4823}
!4821 = !DILocalVariable(name: "irq", arg: 1, scope: !4817, file: !4749, line: 64, type: !32)
!4822 = !DILocalVariable(name: "prio", arg: 2, scope: !4817, file: !4749, line: 64, type: !32)
!4823 = !DILocalVariable(name: "flags", arg: 3, scope: !4817, file: !4749, line: 64, type: !121)
!4824 = !DILocation(line: 0, scope: !4817)
!4825 = !DILocation(line: 83, column: 8, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !4749, line: 82, column: 9)
!4827 = distinct !DILexicalBlock(scope: !4817, file: !4749, line: 76, column: 6)
!4828 = !DILocation(line: 95, column: 2, scope: !4817)
!4829 = !DILocation(line: 96, column: 1, scope: !4817)
!4830 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4831, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4833)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{null, !621, !121}
!4833 = !{!4834, !4835}
!4834 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4830, file: !356, line: 1814, type: !621)
!4835 = !DILocalVariable(name: "priority", arg: 2, scope: !4830, file: !356, line: 1814, type: !121)
!4836 = !DILocation(line: 0, scope: !4830)
!4837 = !DILocation(line: 0, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4830, file: !356, line: 1816, column: 7)
!4839 = !DILocation(line: 1816, column: 7, scope: !4830)
!4840 = !DILocation(line: 1824, column: 1, scope: !4830)
!4841 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4749, file: !4749, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !4842)
!4842 = !{!4843}
!4843 = !DILocalVariable(name: "unused", arg: 1, scope: !4841, file: !4749, line: 155, type: !13)
!4844 = !DILocation(line: 0, scope: !4841)
!4845 = !DILocation(line: 159, column: 2, scope: !4841)
!4846 = !DILocation(line: 160, column: 1, scope: !4841)
!4847 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4848, file: !4848, line: 87, type: !2821, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !322)
!4848 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4849 = !DILocation(line: 89, column: 2, scope: !4847)
!4850 = !DILocation(line: 90, column: 2, scope: !4847)
!4851 = !DILocation(line: 91, column: 1, scope: !4847)
!4852 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4848, file: !4848, line: 23, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!4853 = !DISubprogram(name: "z_arm_int_exit", scope: !4854, file: !4854, line: 153, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!4854 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4855 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4856, file: !4856, line: 256, type: !2821, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4856 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4857 = !DILocation(line: 258, column: 2, scope: !4855)
!4858 = !DILocation(line: 260, column: 2, scope: !4855)
!4859 = !DILocation(line: 262, column: 2, scope: !4855)
!4860 = !DILocation(line: 263, column: 2, scope: !4855)
!4861 = !DILocation(line: 267, column: 2, scope: !4855)
!4862 = !DILocation(line: 268, column: 2, scope: !4855)
!4863 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4856, file: !4856, line: 53, type: !2821, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4864 = !DILocation(line: 55, column: 12, scope: !4863)
!4865 = !DILocation(line: 271, column: 3, scope: !4866, inlinedAt: !4867)
!4866 = distinct !DISubprogram(name: "__DSB", scope: !4797, file: !4797, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4867 = distinct !DILocation(line: 56, column: 2, scope: !4863)
!4868 = !{i64 3707200}
!4869 = !DILocation(line: 260, column: 3, scope: !4870, inlinedAt: !4871)
!4870 = distinct !DISubprogram(name: "__ISB", scope: !4797, file: !4797, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4871 = distinct !DILocation(line: 57, column: 2, scope: !4863)
!4872 = !{i64 3706917}
!4873 = !DILocation(line: 58, column: 1, scope: !4863)
!4874 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !4856, file: !4856, line: 96, type: !2821, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !322)
!4875 = !DILocation(line: 103, column: 13, scope: !4874)
!4876 = !DILocation(line: 975, column: 3, scope: !4877, inlinedAt: !4882)
!4877 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4797, file: !4797, line: 971, type: !4878, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !4880)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!121}
!4880 = !{!4881}
!4881 = !DILocalVariable(name: "result", scope: !4877, file: !4797, line: 973, type: !121)
!4882 = distinct !DILocation(line: 189, column: 16, scope: !4874)
!4883 = !{i64 3728030}
!4884 = !DILocation(line: 0, scope: !4877, inlinedAt: !4882)
!4885 = !DILocation(line: 189, column: 32, scope: !4874)
!4886 = !DILocalVariable(name: "control", arg: 1, scope: !4887, file: !4797, line: 1001, type: !121)
!4887 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4797, file: !4797, line: 1001, type: !4888, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !4890)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{null, !121}
!4890 = !{!4886}
!4891 = !DILocation(line: 0, scope: !4887, inlinedAt: !4892)
!4892 = distinct !DILocation(line: 189, column: 2, scope: !4874)
!4893 = !DILocation(line: 1003, column: 3, scope: !4887, inlinedAt: !4892)
!4894 = !{i64 3728750}
!4895 = !DILocation(line: 260, column: 3, scope: !4870, inlinedAt: !4896)
!4896 = distinct !DILocation(line: 1004, column: 3, scope: !4887, inlinedAt: !4892)
!4897 = !DILocation(line: 191, column: 1, scope: !4874)
!4898 = distinct !DISubprogram(name: "arch_swap", scope: !4899, file: !4899, line: 33, type: !4807, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !4900)
!4899 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4900 = !{!4901}
!4901 = !DILocalVariable(name: "key", arg: 1, scope: !4898, file: !4899, line: 33, type: !32)
!4902 = !DILocation(line: 0, scope: !4898)
!4903 = !DILocation(line: 36, column: 2, scope: !4898)
!4904 = !DILocation(line: 36, column: 17, scope: !4898)
!4905 = !DILocation(line: 36, column: 25, scope: !4898)
!4906 = !DILocation(line: 37, column: 37, scope: !4898)
!4907 = !DILocation(line: 37, column: 17, scope: !4898)
!4908 = !DILocation(line: 37, column: 35, scope: !4898)
!4909 = !DILocation(line: 41, column: 12, scope: !4898)
!4910 = !DILocalVariable(name: "key", arg: 1, scope: !4911, file: !4623, line: 84, type: !32)
!4911 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !4912)
!4912 = !{!4910}
!4913 = !DILocation(line: 0, scope: !4911, inlinedAt: !4914)
!4914 = distinct !DILocation(line: 44, column: 2, scope: !4898)
!4915 = !DILocation(line: 95, column: 2, scope: !4911, inlinedAt: !4914)
!4916 = !{i64 2277701}
!4917 = !DILocation(line: 53, column: 9, scope: !4898)
!4918 = !DILocation(line: 53, column: 24, scope: !4898)
!4919 = !DILocation(line: 53, column: 2, scope: !4898)
!4920 = distinct !DISubprogram(name: "arch_new_thread", scope: !4921, file: !4921, line: 56, type: !4922, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !5029)
!4921 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4922 = !DISubroutineType(types: !4923)
!4923 = !{null, !4924, !5024, !995, !3124, !102, !102, !102}
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 32)
!4925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !4926)
!4926 = !{!4927, !4985, !4997, !4998, !4999, !5000, !5006, !5019}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4925, file: !211, line: 247, baseType: !4928, size: 384)
!4928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !4929)
!4929 = !{!4930, !4954, !4961, !4962, !4963, !4972, !4973, !4974}
!4930 = !DIDerivedType(tag: DW_TAG_member, scope: !4928, file: !211, line: 60, baseType: !4931, size: 64)
!4931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4928, file: !211, line: 60, size: 64, elements: !4932)
!4932 = !{!4933, !4948}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4931, file: !211, line: 61, baseType: !4934, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !4935)
!4935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !4936)
!4936 = !{!4937, !4943}
!4937 = !DIDerivedType(tag: DW_TAG_member, scope: !4935, file: !221, line: 38, baseType: !4938, size: 32)
!4938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4935, file: !221, line: 38, size: 32, elements: !4939)
!4939 = !{!4940, !4942}
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4938, file: !221, line: 39, baseType: !4941, size: 32)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 32)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4938, file: !221, line: 40, baseType: !4941, size: 32)
!4943 = !DIDerivedType(tag: DW_TAG_member, scope: !4935, file: !221, line: 42, baseType: !4944, size: 32, offset: 32)
!4944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4935, file: !221, line: 42, size: 32, elements: !4945)
!4945 = !{!4946, !4947}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4944, file: !221, line: 43, baseType: !4941, size: 32)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4944, file: !221, line: 44, baseType: !4941, size: 32)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4931, file: !211, line: 62, baseType: !4949, size: 64)
!4949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !4950)
!4950 = !{!4951}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4949, file: !237, line: 50, baseType: !4952, size: 64)
!4952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4953, size: 64, elements: !242)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4949, size: 32)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4928, file: !211, line: 68, baseType: !4955, size: 32, offset: 64)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 32)
!4956 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !4957)
!4957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !4958)
!4958 = !{!4959}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4957, file: !247, line: 232, baseType: !4960, size: 64)
!4960 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !4935)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4928, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4928, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!4963 = !DIDerivedType(tag: DW_TAG_member, scope: !4928, file: !211, line: 90, baseType: !4964, size: 16, offset: 112)
!4964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4928, file: !211, line: 90, size: 16, elements: !4965)
!4965 = !{!4966, !4971}
!4966 = !DIDerivedType(tag: DW_TAG_member, scope: !4964, file: !211, line: 91, baseType: !4967, size: 16)
!4967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4964, file: !211, line: 91, size: 16, elements: !4968)
!4968 = !{!4969, !4970}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4967, file: !211, line: 96, baseType: !261, size: 8)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4967, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4964, file: !211, line: 100, baseType: !265, size: 16)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4928, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4928, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4928, file: !211, line: 131, baseType: !4975, size: 192, offset: 192)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !4976)
!4976 = !{!4977, !4978, !4984}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4975, file: !247, line: 245, baseType: !4934, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4975, file: !247, line: 246, baseType: !4979, size: 32, offset: 64)
!4979 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !4980)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 32)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{null, !4983}
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 32)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4975, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4925, file: !211, line: 250, baseType: !4986, size: 288, offset: 384)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4987)
!4987 = !{!4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4986, file: !284, line: 26, baseType: !121, size: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4986, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4986, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4986, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4986, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4986, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4986, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4986, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4986, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4925, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4925, file: !211, line: 256, baseType: !4956, size: 64, offset: 704)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4925, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4925, file: !211, line: 300, baseType: !5001, size: 96, offset: 800)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5002)
!5002 = !{!5003, !5004, !5005}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5001, file: !211, line: 153, baseType: !22, size: 32)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5001, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5001, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4925, file: !211, line: 325, baseType: !5007, size: 32, offset: 896)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 32)
!5008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5009)
!5009 = !{!5010, !5016, !5017}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5008, file: !307, line: 5074, baseType: !5011, size: 96)
!5011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5012)
!5012 = !{!5013, !5014, !5015}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5011, file: !311, line: 57, baseType: !314, size: 32)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5011, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5011, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5008, file: !307, line: 5075, baseType: !4956, size: 64, offset: 96)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5008, file: !307, line: 5076, baseType: !5018, offset: 160)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4925, file: !211, line: 343, baseType: !5020, size: 64, offset: 928)
!5020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5021)
!5021 = !{!5022, !5023}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5020, file: !284, line: 63, baseType: !121, size: 32)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5020, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 32)
!5025 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3125, line: 44, baseType: !5026)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !5027)
!5027 = !{!5028}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5026, file: !1930, line: 48, baseType: !146, size: 8)
!5029 = !{!5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037}
!5030 = !DILocalVariable(name: "thread", arg: 1, scope: !4920, file: !4921, line: 56, type: !4924)
!5031 = !DILocalVariable(name: "stack", arg: 2, scope: !4920, file: !4921, line: 56, type: !5024)
!5032 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !4920, file: !4921, line: 57, type: !995)
!5033 = !DILocalVariable(name: "entry", arg: 4, scope: !4920, file: !4921, line: 57, type: !3124)
!5034 = !DILocalVariable(name: "p1", arg: 5, scope: !4920, file: !4921, line: 58, type: !102)
!5035 = !DILocalVariable(name: "p2", arg: 6, scope: !4920, file: !4921, line: 58, type: !102)
!5036 = !DILocalVariable(name: "p3", arg: 7, scope: !4920, file: !4921, line: 58, type: !102)
!5037 = !DILocalVariable(name: "iframe", scope: !4920, file: !4921, line: 60, type: !2418)
!5038 = !DILocation(line: 0, scope: !4920)
!5039 = !DILocation(line: 85, column: 11, scope: !4920)
!5040 = !DILocation(line: 93, column: 10, scope: !4920)
!5041 = !DILocation(line: 98, column: 13, scope: !4920)
!5042 = !DILocation(line: 100, column: 15, scope: !4920)
!5043 = !DILocation(line: 100, column: 10, scope: !4920)
!5044 = !DILocation(line: 100, column: 13, scope: !4920)
!5045 = !DILocation(line: 101, column: 15, scope: !4920)
!5046 = !DILocation(line: 101, column: 10, scope: !4920)
!5047 = !DILocation(line: 101, column: 13, scope: !4920)
!5048 = !DILocation(line: 102, column: 15, scope: !4920)
!5049 = !DILocation(line: 102, column: 10, scope: !4920)
!5050 = !DILocation(line: 102, column: 13, scope: !4920)
!5051 = !DILocation(line: 103, column: 15, scope: !4920)
!5052 = !DILocation(line: 103, column: 10, scope: !4920)
!5053 = !DILocation(line: 103, column: 13, scope: !4920)
!5054 = !DILocation(line: 106, column: 10, scope: !4920)
!5055 = !DILocation(line: 106, column: 15, scope: !4920)
!5056 = !DILocation(line: 122, column: 29, scope: !4920)
!5057 = !DILocation(line: 122, column: 23, scope: !4920)
!5058 = !DILocation(line: 122, column: 27, scope: !4920)
!5059 = !DILocation(line: 123, column: 15, scope: !4920)
!5060 = !DILocation(line: 123, column: 23, scope: !4920)
!5061 = !DILocation(line: 143, column: 1, scope: !4920)
!5062 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !4921, file: !4921, line: 385, type: !5063, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !5066)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!121, !5065, !5065}
!5065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5066 = !{!5067, !5068, !5069, !5072}
!5067 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5062, file: !4921, line: 385, type: !5065)
!5068 = !DILocalVariable(name: "psp", arg: 2, scope: !5062, file: !4921, line: 385, type: !5065)
!5069 = !DILocalVariable(name: "thread", scope: !5062, file: !4921, line: 388, type: !5070)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 32)
!5071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4925)
!5072 = !DILocalVariable(name: "guard_len", scope: !5062, file: !4921, line: 405, type: !121)
!5073 = !DILocation(line: 0, scope: !5062)
!5074 = !DILocation(line: 388, column: 34, scope: !5062)
!5075 = !DILocation(line: 390, column: 13, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5062, file: !4921, line: 390, column: 6)
!5077 = !DILocation(line: 390, column: 6, scope: !5062)
!5078 = !DILocation(line: 438, column: 6, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5062, file: !4921, line: 438, column: 6)
!5080 = !DILocation(line: 438, column: 6, scope: !5062)
!5081 = !DILocation(line: 442, column: 3, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !4921, line: 440, column: 22)
!5083 = !DILocation(line: 455, column: 1, scope: !5062)
!5084 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !4921, file: !4921, line: 530, type: !5085, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !5087)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{null, !4924, !995, !3124}
!5087 = !{!5088, !5089, !5090}
!5088 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5084, file: !4921, line: 530, type: !4924)
!5089 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5084, file: !4921, line: 530, type: !995)
!5090 = !DILocalVariable(name: "_main", arg: 3, scope: !5084, file: !4921, line: 531, type: !3124)
!5091 = !DILocation(line: 0, scope: !5084)
!5092 = !DILocation(line: 535, column: 11, scope: !5084)
!5093 = !DILocation(line: 560, column: 2, scope: !5084)
!5094 = !DILocation(line: 576, column: 2, scope: !5084)
!5095 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5096 = !DILocation(line: 603, column: 2, scope: !5084)
!5097 = distinct !DISubprogram(name: "z_arm_fault", scope: !5098, file: !5098, line: 1036, type: !5099, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5114)
!5098 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5099 = !DISubroutineType(types: !5100)
!5100 = !{null, !121, !121, !121, !5101}
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 32)
!5102 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5103)
!5103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5104)
!5104 = !{!5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5103, file: !284, line: 26, baseType: !121, size: 32)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5103, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5103, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5103, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5103, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5103, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5103, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5103, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5103, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5114 = !{!5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124}
!5115 = !DILocalVariable(name: "msp", arg: 1, scope: !5097, file: !5098, line: 1036, type: !121)
!5116 = !DILocalVariable(name: "psp", arg: 2, scope: !5097, file: !5098, line: 1036, type: !121)
!5117 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5097, file: !5098, line: 1036, type: !121)
!5118 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5097, file: !5098, line: 1037, type: !5101)
!5119 = !DILocalVariable(name: "reason", scope: !5097, file: !5098, line: 1039, type: !121)
!5120 = !DILocalVariable(name: "fault", scope: !5097, file: !5098, line: 1040, type: !103)
!5121 = !DILocalVariable(name: "recoverable", scope: !5097, file: !5098, line: 1041, type: !157)
!5122 = !DILocalVariable(name: "nested_exc", scope: !5097, file: !5098, line: 1041, type: !157)
!5123 = !DILocalVariable(name: "esf", scope: !5097, file: !5098, line: 1042, type: !2486)
!5124 = !DILocalVariable(name: "esf_copy", scope: !5097, file: !5098, line: 1047, type: !2487)
!5125 = !DILocation(line: 0, scope: !5097)
!5126 = !DILocation(line: 1040, column: 19, scope: !5097)
!5127 = !DILocation(line: 1040, column: 24, scope: !5097)
!5128 = !DILocation(line: 1041, column: 2, scope: !5097)
!5129 = !DILocation(line: 1047, column: 2, scope: !5097)
!5130 = !DILocation(line: 1047, column: 15, scope: !5097)
!5131 = !DILocalVariable(name: "key", arg: 1, scope: !5132, file: !4623, line: 84, type: !32)
!5132 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5133)
!5133 = !{!5131}
!5134 = !DILocation(line: 0, scope: !5132, inlinedAt: !5135)
!5135 = distinct !DILocation(line: 1050, column: 2, scope: !5097)
!5136 = !DILocation(line: 95, column: 2, scope: !5132, inlinedAt: !5135)
!5137 = !{i64 2310945}
!5138 = !DILocation(line: 1055, column: 9, scope: !5097)
!5139 = !DILocation(line: 1063, column: 11, scope: !5097)
!5140 = !DILocation(line: 1064, column: 6, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5097, file: !5098, line: 1064, column: 6)
!5142 = !{i8 0, i8 2}
!5143 = !DILocation(line: 1064, column: 6, scope: !5097)
!5144 = !DILocation(line: 1070, column: 20, scope: !5097)
!5145 = !DILocation(line: 1070, column: 2, scope: !5097)
!5146 = !DILocation(line: 1089, column: 6, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5097, file: !5098, line: 1089, column: 6)
!5148 = !DILocation(line: 0, scope: !5147)
!5149 = !DILocation(line: 1089, column: 6, scope: !5097)
!5150 = !DILocation(line: 1090, column: 28, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !5098, line: 1090, column: 7)
!5152 = distinct !DILexicalBlock(scope: !5147, file: !5098, line: 1089, column: 18)
!5153 = !DILocation(line: 1090, column: 44, scope: !5151)
!5154 = !DILocation(line: 1090, column: 7, scope: !5152)
!5155 = !DILocation(line: 1091, column: 24, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5151, file: !5098, line: 1090, column: 50)
!5157 = !DILocation(line: 1092, column: 3, scope: !5156)
!5158 = !DILocation(line: 1094, column: 23, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5147, file: !5098, line: 1093, column: 9)
!5160 = !DILocation(line: 1097, column: 2, scope: !5097)
!5161 = !DILocation(line: 1098, column: 1, scope: !5097)
!5162 = distinct !DISubprogram(name: "get_esf", scope: !5098, file: !5098, line: 894, type: !5163, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5166)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!2486, !121, !121, !121, !5165}
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5166 = !{!5167, !5168, !5169, !5170, !5171, !5172}
!5167 = !DILocalVariable(name: "msp", arg: 1, scope: !5162, file: !5098, line: 894, type: !121)
!5168 = !DILocalVariable(name: "psp", arg: 2, scope: !5162, file: !5098, line: 894, type: !121)
!5169 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5162, file: !5098, line: 894, type: !121)
!5170 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5162, file: !5098, line: 895, type: !5165)
!5171 = !DILocalVariable(name: "alternative_state_exc", scope: !5162, file: !5098, line: 897, type: !157)
!5172 = !DILocalVariable(name: "ptr_esf", scope: !5162, file: !5098, line: 898, type: !2486)
!5173 = !DILocation(line: 0, scope: !5162)
!5174 = !DILocation(line: 900, column: 14, scope: !5162)
!5175 = !DILocation(line: 902, column: 49, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5162, file: !5098, line: 902, column: 6)
!5177 = !DILocation(line: 902, column: 6, scope: !5162)
!5178 = !DILocation(line: 983, column: 18, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5162, file: !5098, line: 983, column: 6)
!5180 = !DILocation(line: 991, column: 7, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5182, file: !5098, line: 990, column: 30)
!5182 = distinct !DILexicalBlock(scope: !5162, file: !5098, line: 990, column: 6)
!5183 = !DILocation(line: 998, column: 16, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !5098, line: 995, column: 10)
!5185 = distinct !DILexicalBlock(scope: !5181, file: !5098, line: 991, column: 7)
!5186 = !DILocation(line: 1002, column: 2, scope: !5162)
!5187 = !DILocation(line: 1003, column: 1, scope: !5162)
!5188 = distinct !DISubprogram(name: "fault_handle", scope: !5098, file: !5098, line: 786, type: !5189, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5191)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{!121, !2486, !103, !5165}
!5191 = !{!5192, !5193, !5194, !5195}
!5192 = !DILocalVariable(name: "esf", arg: 1, scope: !5188, file: !5098, line: 786, type: !2486)
!5193 = !DILocalVariable(name: "fault", arg: 2, scope: !5188, file: !5098, line: 786, type: !103)
!5194 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5188, file: !5098, line: 786, type: !5165)
!5195 = !DILocalVariable(name: "reason", scope: !5188, file: !5098, line: 788, type: !121)
!5196 = !DILocation(line: 0, scope: !5188)
!5197 = !DILocation(line: 790, column: 15, scope: !5188)
!5198 = !DILocation(line: 792, column: 2, scope: !5188)
!5199 = !DILocation(line: 794, column: 12, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5188, file: !5098, line: 792, column: 17)
!5201 = !DILocation(line: 795, column: 3, scope: !5200)
!5202 = !DILocation(line: 800, column: 12, scope: !5200)
!5203 = !DILocation(line: 801, column: 3, scope: !5200)
!5204 = !DILocation(line: 803, column: 12, scope: !5200)
!5205 = !DILocation(line: 804, column: 3, scope: !5200)
!5206 = !DILocation(line: 806, column: 12, scope: !5200)
!5207 = !DILocation(line: 807, column: 3, scope: !5200)
!5208 = !DILocation(line: 814, column: 3, scope: !5200)
!5209 = !DILocation(line: 815, column: 3, scope: !5200)
!5210 = !DILocation(line: 829, column: 2, scope: !5188)
!5211 = distinct !DISubprogram(name: "hard_fault", scope: !5098, file: !5098, line: 709, type: !5212, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5214)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!121, !2486, !5165}
!5214 = !{!5215, !5216, !5217}
!5215 = !DILocalVariable(name: "esf", arg: 1, scope: !5211, file: !5098, line: 709, type: !2486)
!5216 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5211, file: !5098, line: 709, type: !5165)
!5217 = !DILocalVariable(name: "reason", scope: !5211, file: !5098, line: 711, type: !121)
!5218 = !DILocation(line: 0, scope: !5211)
!5219 = !DILocation(line: 732, column: 15, scope: !5211)
!5220 = !DILocation(line: 734, column: 12, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5211, file: !5098, line: 734, column: 6)
!5222 = !DILocation(line: 734, column: 17, scope: !5221)
!5223 = !DILocation(line: 734, column: 41, scope: !5221)
!5224 = !DILocation(line: 734, column: 6, scope: !5211)
!5225 = !DILocation(line: 736, column: 19, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !5098, line: 736, column: 13)
!5227 = !DILocation(line: 736, column: 49, scope: !5226)
!5228 = !DILocation(line: 736, column: 13, scope: !5221)
!5229 = !DILocation(line: 738, column: 19, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !5098, line: 738, column: 13)
!5231 = !DILocation(line: 738, column: 24, scope: !5230)
!5232 = !DILocation(line: 738, column: 47, scope: !5230)
!5233 = !DILocation(line: 738, column: 13, scope: !5226)
!5234 = !DILocation(line: 740, column: 7, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5236, file: !5098, line: 740, column: 7)
!5236 = distinct !DILexicalBlock(scope: !5230, file: !5098, line: 738, column: 53)
!5237 = !DILocation(line: 740, column: 7, scope: !5236)
!5238 = !DILocation(line: 742, column: 24, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5235, file: !5098, line: 740, column: 38)
!5240 = !DILocation(line: 743, column: 3, scope: !5239)
!5241 = !DILocation(line: 743, column: 20, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5235, file: !5098, line: 743, column: 14)
!5243 = !DILocation(line: 743, column: 25, scope: !5242)
!5244 = !DILocation(line: 743, column: 52, scope: !5242)
!5245 = !DILocation(line: 743, column: 14, scope: !5235)
!5246 = !DILocation(line: 744, column: 13, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5242, file: !5098, line: 743, column: 58)
!5248 = !DILocation(line: 745, column: 3, scope: !5247)
!5249 = !DILocation(line: 745, column: 20, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5242, file: !5098, line: 745, column: 14)
!5251 = !DILocation(line: 745, column: 25, scope: !5250)
!5252 = !DILocation(line: 745, column: 52, scope: !5250)
!5253 = !DILocation(line: 745, column: 14, scope: !5242)
!5254 = !DILocation(line: 746, column: 13, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5250, file: !5098, line: 745, column: 58)
!5256 = !DILocation(line: 747, column: 3, scope: !5255)
!5257 = !DILocation(line: 747, column: 20, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5250, file: !5098, line: 747, column: 14)
!5259 = !DILocation(line: 747, column: 52, scope: !5258)
!5260 = !DILocation(line: 747, column: 14, scope: !5250)
!5261 = !DILocation(line: 748, column: 13, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !5098, line: 747, column: 58)
!5263 = !DILocation(line: 753, column: 3, scope: !5262)
!5264 = !DILocation(line: 766, column: 2, scope: !5211)
!5265 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5098, file: !5098, line: 229, type: !5189, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5266)
!5266 = !{!5267, !5268, !5269, !5270, !5271, !5272, !5275}
!5267 = !DILocalVariable(name: "esf", arg: 1, scope: !5265, file: !5098, line: 229, type: !2486)
!5268 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5265, file: !5098, line: 229, type: !103)
!5269 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5265, file: !5098, line: 230, type: !5165)
!5270 = !DILocalVariable(name: "reason", scope: !5265, file: !5098, line: 232, type: !121)
!5271 = !DILocalVariable(name: "mmfar", scope: !5265, file: !5098, line: 233, type: !121)
!5272 = !DILocalVariable(name: "temp", scope: !5273, file: !5098, line: 254, type: !121)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !5098, line: 244, column: 48)
!5274 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 244, column: 6)
!5275 = !DILocalVariable(name: "min_stack_ptr", scope: !5276, file: !5098, line: 309, type: !121)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !5098, line: 308, column: 43)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !5098, line: 308, column: 7)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !5098, line: 289, column: 40)
!5279 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 288, column: 6)
!5280 = !DILocation(line: 0, scope: !5265)
!5281 = !DILocation(line: 237, column: 12, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 237, column: 6)
!5283 = !DILocation(line: 241, column: 12, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 241, column: 6)
!5285 = !DILocation(line: 244, column: 12, scope: !5274)
!5286 = !DILocation(line: 244, column: 17, scope: !5274)
!5287 = !DILocation(line: 244, column: 42, scope: !5274)
!5288 = !DILocation(line: 244, column: 6, scope: !5265)
!5289 = !DILocation(line: 254, column: 24, scope: !5273)
!5290 = !DILocation(line: 0, scope: !5273)
!5291 = !DILocation(line: 256, column: 13, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5273, file: !5098, line: 256, column: 7)
!5293 = !DILocation(line: 256, column: 18, scope: !5292)
!5294 = !DILocation(line: 256, column: 44, scope: !5292)
!5295 = !DILocation(line: 256, column: 7, scope: !5273)
!5296 = !DILocation(line: 259, column: 24, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5298, file: !5098, line: 259, column: 8)
!5298 = distinct !DILexicalBlock(scope: !5292, file: !5098, line: 256, column: 50)
!5299 = !DILocation(line: 259, column: 8, scope: !5298)
!5300 = !DILocation(line: 261, column: 15, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5297, file: !5098, line: 259, column: 30)
!5302 = !DILocation(line: 262, column: 4, scope: !5301)
!5303 = !DILocation(line: 265, column: 12, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 265, column: 6)
!5305 = !DILocation(line: 269, column: 12, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 269, column: 6)
!5307 = !DILocation(line: 288, column: 12, scope: !5279)
!5308 = !DILocation(line: 288, column: 17, scope: !5279)
!5309 = !DILocation(line: 288, column: 41, scope: !5279)
!5310 = !DILocation(line: 289, column: 9, scope: !5279)
!5311 = !DILocation(line: 289, column: 14, scope: !5279)
!5312 = !DILocation(line: 288, column: 6, scope: !5265)
!5313 = !DILocation(line: 308, column: 12, scope: !5277)
!5314 = !DILocation(line: 308, column: 17, scope: !5277)
!5315 = !DILocation(line: 308, column: 7, scope: !5278)
!5316 = !DILocation(line: 310, column: 6, scope: !5276)
!5317 = !DILocation(line: 309, column: 29, scope: !5276)
!5318 = !DILocation(line: 0, scope: !5276)
!5319 = !DILocation(line: 312, column: 8, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5276, file: !5098, line: 312, column: 8)
!5321 = !DILocation(line: 312, column: 8, scope: !5276)
!5322 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5323, file: !4797, line: 1099, type: !121)
!5323 = distinct !DISubprogram(name: "__set_PSP", scope: !4797, file: !4797, line: 1099, type: !4888, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5324)
!5324 = !{!5322}
!5325 = !DILocation(line: 0, scope: !5323, inlinedAt: !5326)
!5326 = distinct !DILocation(line: 338, column: 5, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5320, file: !5098, line: 312, column: 23)
!5328 = !DILocation(line: 1101, column: 3, scope: !5323, inlinedAt: !5326)
!5329 = !{i64 3758169}
!5330 = !DILocation(line: 341, column: 4, scope: !5327)
!5331 = !DILocation(line: 360, column: 12, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5265, file: !5098, line: 360, column: 6)
!5333 = !DILocation(line: 360, column: 17, scope: !5332)
!5334 = !DILocation(line: 360, column: 41, scope: !5332)
!5335 = !DILocation(line: 360, column: 6, scope: !5265)
!5336 = !DILocation(line: 361, column: 14, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5332, file: !5098, line: 360, column: 47)
!5338 = !DILocation(line: 362, column: 2, scope: !5337)
!5339 = !DILocation(line: 366, column: 12, scope: !5265)
!5340 = !DILocation(line: 369, column: 15, scope: !5265)
!5341 = !DILocation(line: 371, column: 2, scope: !5265)
!5342 = distinct !DISubprogram(name: "bus_fault", scope: !5098, file: !5098, line: 383, type: !5343, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5345)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{!103, !2486, !103, !5165}
!5345 = !{!5346, !5347, !5348, !5349, !5350}
!5346 = !DILocalVariable(name: "esf", arg: 1, scope: !5342, file: !5098, line: 383, type: !2486)
!5347 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5342, file: !5098, line: 383, type: !103)
!5348 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5342, file: !5098, line: 383, type: !5165)
!5349 = !DILocalVariable(name: "reason", scope: !5342, file: !5098, line: 385, type: !121)
!5350 = !DILocalVariable(name: "bfar", scope: !5351, file: !5098, line: 405, type: !121)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !5098, line: 395, column: 42)
!5352 = distinct !DILexicalBlock(scope: !5342, file: !5098, line: 395, column: 6)
!5353 = !DILocation(line: 0, scope: !5342)
!5354 = !DILocation(line: 389, column: 11, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5342, file: !5098, line: 389, column: 6)
!5356 = !DILocation(line: 392, column: 11, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5342, file: !5098, line: 392, column: 6)
!5358 = !DILocation(line: 395, column: 11, scope: !5352)
!5359 = !DILocation(line: 395, column: 16, scope: !5352)
!5360 = !DILocation(line: 395, column: 6, scope: !5342)
!5361 = !DILocation(line: 405, column: 3, scope: !5351)
!5362 = !DILocation(line: 0, scope: !5351)
!5363 = !DILocation(line: 407, column: 13, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5351, file: !5098, line: 407, column: 7)
!5365 = !DILocation(line: 407, column: 18, scope: !5364)
!5366 = !DILocation(line: 407, column: 44, scope: !5364)
!5367 = !DILocation(line: 407, column: 7, scope: !5351)
!5368 = !DILocation(line: 411, column: 15, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !5098, line: 409, column: 30)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !5098, line: 409, column: 8)
!5371 = distinct !DILexicalBlock(scope: !5364, file: !5098, line: 407, column: 50)
!5372 = !DILocation(line: 412, column: 4, scope: !5369)
!5373 = !DILocation(line: 415, column: 11, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5342, file: !5098, line: 415, column: 6)
!5375 = !DILocation(line: 418, column: 12, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5342, file: !5098, line: 418, column: 6)
!5377 = !DILocation(line: 418, column: 17, scope: !5376)
!5378 = !DILocation(line: 418, column: 41, scope: !5376)
!5379 = !DILocation(line: 418, column: 6, scope: !5342)
!5380 = !DILocation(line: 423, column: 18, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5376, file: !5098, line: 423, column: 13)
!5382 = !DILocation(line: 524, column: 12, scope: !5342)
!5383 = !DILocation(line: 526, column: 15, scope: !5342)
!5384 = !DILocation(line: 528, column: 2, scope: !5342)
!5385 = distinct !DISubprogram(name: "usage_fault", scope: !5098, file: !5098, line: 539, type: !5386, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5390)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!121, !5388}
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 32)
!5389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!5390 = !{!5391, !5392}
!5391 = !DILocalVariable(name: "esf", arg: 1, scope: !5385, file: !5098, line: 539, type: !5388)
!5392 = !DILocalVariable(name: "reason", scope: !5385, file: !5098, line: 541, type: !121)
!5393 = !DILocation(line: 0, scope: !5385)
!5394 = !DILocation(line: 546, column: 12, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5385, file: !5098, line: 546, column: 6)
!5396 = !DILocation(line: 549, column: 12, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5385, file: !5098, line: 549, column: 6)
!5398 = !DILocation(line: 567, column: 12, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5385, file: !5098, line: 567, column: 6)
!5400 = !DILocation(line: 570, column: 12, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5385, file: !5098, line: 570, column: 6)
!5402 = !DILocation(line: 573, column: 12, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5385, file: !5098, line: 573, column: 6)
!5404 = !DILocation(line: 576, column: 12, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5385, file: !5098, line: 576, column: 6)
!5406 = !DILocation(line: 581, column: 12, scope: !5385)
!5407 = !DILocation(line: 583, column: 2, scope: !5385)
!5408 = distinct !DISubprogram(name: "debug_monitor", scope: !5098, file: !5098, line: 632, type: !5409, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5411)
!5409 = !DISubroutineType(types: !5410)
!5410 = !{null, !2486, !5165}
!5411 = !{!5412, !5413}
!5412 = !DILocalVariable(name: "esf", arg: 1, scope: !5408, file: !5098, line: 632, type: !2486)
!5413 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5408, file: !5098, line: 632, type: !5165)
!5414 = !DILocation(line: 0, scope: !5408)
!5415 = !DILocation(line: 634, column: 15, scope: !5408)
!5416 = !DILocation(line: 652, column: 1, scope: !5408)
!5417 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5098, file: !5098, line: 658, type: !5418, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !5420)
!5418 = !DISubroutineType(types: !5419)
!5419 = !{!157, !2486}
!5420 = !{!5421, !5422, !5423}
!5421 = !DILocalVariable(name: "esf", arg: 1, scope: !5417, file: !5098, line: 658, type: !2486)
!5422 = !DILocalVariable(name: "ret_addr", scope: !5417, file: !5098, line: 660, type: !2529)
!5423 = !DILocalVariable(name: "fault_insn", scope: !5417, file: !5098, line: 686, type: !265)
!5424 = !DILocation(line: 0, scope: !5417)
!5425 = !DILocation(line: 660, column: 46, scope: !5417)
!5426 = !DILocation(line: 660, column: 23, scope: !5417)
!5427 = !DILocation(line: 682, column: 11, scope: !5417)
!5428 = !DILocation(line: 271, column: 3, scope: !5429, inlinedAt: !5430)
!5429 = distinct !DISubprogram(name: "__DSB", scope: !4797, file: !4797, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !322)
!5430 = distinct !DILocation(line: 683, column: 2, scope: !5417)
!5431 = !{i64 3734304}
!5432 = !DILocation(line: 260, column: 3, scope: !5433, inlinedAt: !5434)
!5433 = distinct !DISubprogram(name: "__ISB", scope: !4797, file: !4797, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !322)
!5434 = distinct !DILocation(line: 684, column: 2, scope: !5417)
!5435 = !{i64 3734021}
!5436 = !DILocation(line: 686, column: 35, scope: !5417)
!5437 = !DILocation(line: 686, column: 24, scope: !5417)
!5438 = !DILocation(line: 688, column: 11, scope: !5417)
!5439 = !DILocation(line: 271, column: 3, scope: !5429, inlinedAt: !5440)
!5440 = distinct !DILocation(line: 689, column: 2, scope: !5417)
!5441 = !DILocation(line: 260, column: 3, scope: !5433, inlinedAt: !5442)
!5442 = distinct !DILocation(line: 690, column: 2, scope: !5417)
!5443 = !DILocation(line: 693, column: 45, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5417, file: !5098, line: 693, column: 6)
!5445 = !DILocation(line: 699, column: 1, scope: !5417)
!5446 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5098, file: !5098, line: 1107, type: !2821, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2458, retainedNodes: !322)
!5447 = !DILocation(line: 1111, column: 11, scope: !5446)
!5448 = !DILocation(line: 1136, column: 1, scope: !5446)
!5449 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5450, file: !5450, line: 26, type: !2821, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5451)
!5450 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5451 = !{!5452}
!5452 = !DILocalVariable(name: "irq", scope: !5449, file: !5450, line: 28, type: !103)
!5453 = !DILocation(line: 0, scope: !5449)
!5454 = !DILocation(line: 30, column: 2, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5449, file: !5450, line: 30, column: 2)
!5456 = !DILocation(line: 31, column: 3, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !5450, line: 30, column: 39)
!5458 = distinct !DILexicalBlock(scope: !5455, file: !5450, line: 30, column: 2)
!5459 = !DILocation(line: 30, column: 35, scope: !5458)
!5460 = !DILocation(line: 30, column: 13, scope: !5458)
!5461 = distinct !{!5461, !5454, !5462}
!5462 = !DILocation(line: 32, column: 2, scope: !5455)
!5463 = !DILocation(line: 33, column: 1, scope: !5449)
!5464 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4831, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !5465)
!5465 = !{!5466, !5467}
!5466 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5464, file: !356, line: 1814, type: !621)
!5467 = !DILocalVariable(name: "priority", arg: 2, scope: !5464, file: !356, line: 1814, type: !121)
!5468 = !DILocation(line: 0, scope: !5464)
!5469 = !DILocation(line: 1816, column: 7, scope: !5464)
!5470 = !DILocation(line: 0, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5464, file: !356, line: 1816, column: 7)
!5472 = !DILocation(line: 1824, column: 1, scope: !5464)
!5473 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5474, file: !5474, line: 27, type: !5475, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5578)
!5474 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5475 = !DISubroutineType(types: !5476)
!5476 = !{null, !5477}
!5477 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !5478)
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 32)
!5479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5480)
!5480 = !{!5481, !5539, !5551, !5552, !5553, !5554, !5560, !5573}
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5479, file: !211, line: 247, baseType: !5482, size: 384)
!5482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5483)
!5483 = !{!5484, !5508, !5515, !5516, !5517, !5526, !5527, !5528}
!5484 = !DIDerivedType(tag: DW_TAG_member, scope: !5482, file: !211, line: 60, baseType: !5485, size: 64)
!5485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5482, file: !211, line: 60, size: 64, elements: !5486)
!5486 = !{!5487, !5502}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5485, file: !211, line: 61, baseType: !5488, size: 64)
!5488 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5489)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5490)
!5490 = !{!5491, !5497}
!5491 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !221, line: 38, baseType: !5492, size: 32)
!5492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !221, line: 38, size: 32, elements: !5493)
!5493 = !{!5494, !5496}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5492, file: !221, line: 39, baseType: !5495, size: 32)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5492, file: !221, line: 40, baseType: !5495, size: 32)
!5497 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !221, line: 42, baseType: !5498, size: 32, offset: 32)
!5498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !221, line: 42, size: 32, elements: !5499)
!5499 = !{!5500, !5501}
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5498, file: !221, line: 43, baseType: !5495, size: 32)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5498, file: !221, line: 44, baseType: !5495, size: 32)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5485, file: !211, line: 62, baseType: !5503, size: 64)
!5503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5504)
!5504 = !{!5505}
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5503, file: !237, line: 50, baseType: !5506, size: 64)
!5506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5507, size: 64, elements: !242)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5503, size: 32)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5482, file: !211, line: 68, baseType: !5509, size: 32, offset: 64)
!5509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5510, size: 32)
!5510 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5511)
!5511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5512)
!5512 = !{!5513}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5511, file: !247, line: 232, baseType: !5514, size: 64)
!5514 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5489)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5482, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5482, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5517 = !DIDerivedType(tag: DW_TAG_member, scope: !5482, file: !211, line: 90, baseType: !5518, size: 16, offset: 112)
!5518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5482, file: !211, line: 90, size: 16, elements: !5519)
!5519 = !{!5520, !5525}
!5520 = !DIDerivedType(tag: DW_TAG_member, scope: !5518, file: !211, line: 91, baseType: !5521, size: 16)
!5521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5518, file: !211, line: 91, size: 16, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5521, file: !211, line: 96, baseType: !261, size: 8)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5521, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5518, file: !211, line: 100, baseType: !265, size: 16)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5482, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5482, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5482, file: !211, line: 131, baseType: !5529, size: 192, offset: 192)
!5529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5530)
!5530 = !{!5531, !5532, !5538}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5529, file: !247, line: 245, baseType: !5488, size: 64)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5529, file: !247, line: 246, baseType: !5533, size: 32, offset: 64)
!5533 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5534)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 32)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{null, !5537}
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 32)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5529, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5479, file: !211, line: 250, baseType: !5540, size: 288, offset: 384)
!5540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5541)
!5541 = !{!5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550}
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5540, file: !284, line: 26, baseType: !121, size: 32)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5540, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5540, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5540, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5540, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5540, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5540, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5540, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5540, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5479, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5479, file: !211, line: 256, baseType: !5510, size: 64, offset: 704)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5479, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5479, file: !211, line: 300, baseType: !5555, size: 96, offset: 800)
!5555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5556)
!5556 = !{!5557, !5558, !5559}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5555, file: !211, line: 153, baseType: !22, size: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5555, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5555, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5479, file: !211, line: 325, baseType: !5561, size: 32, offset: 896)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 32)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5563)
!5563 = !{!5564, !5570, !5571}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5562, file: !307, line: 5074, baseType: !5565, size: 96)
!5565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5566)
!5566 = !{!5567, !5568, !5569}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5565, file: !311, line: 57, baseType: !314, size: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5565, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5565, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5562, file: !307, line: 5075, baseType: !5510, size: 64, offset: 96)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5562, file: !307, line: 5076, baseType: !5572, offset: 160)
!5572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5479, file: !211, line: 343, baseType: !5574, size: 64, offset: 928)
!5574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5575)
!5575 = !{!5576, !5577}
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5574, file: !284, line: 63, baseType: !121, size: 32)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5574, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5578 = !{!5579}
!5579 = !DILocalVariable(name: "thread", arg: 1, scope: !5473, file: !5474, line: 27, type: !5477)
!5580 = !DILocation(line: 0, scope: !5473)
!5581 = !DILocation(line: 29, column: 6, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5473, file: !5474, line: 29, column: 6)
!5583 = !DILocation(line: 29, column: 15, scope: !5582)
!5584 = !DILocation(line: 29, column: 6, scope: !5473)
!5585 = !DILocation(line: 1031, column: 3, scope: !5586, inlinedAt: !5589)
!5586 = distinct !DISubprogram(name: "__get_IPSR", scope: !4797, file: !4797, line: 1027, type: !4878, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !5587)
!5587 = !{!5588}
!5588 = !DILocalVariable(name: "result", scope: !5586, file: !4797, line: 1029, type: !121)
!5589 = distinct !DILocation(line: 48, column: 10, scope: !5590, inlinedAt: !5594)
!5590 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5591, file: !5591, line: 46, type: !5592, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !322)
!5591 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!157}
!5594 = distinct !DILocation(line: 30, column: 7, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !5474, line: 30, column: 7)
!5596 = distinct !DILexicalBlock(scope: !5582, file: !5474, line: 29, column: 26)
!5597 = !{i64 3723152}
!5598 = !DILocation(line: 0, scope: !5586, inlinedAt: !5589)
!5599 = !DILocation(line: 48, column: 9, scope: !5590, inlinedAt: !5594)
!5600 = !DILocation(line: 30, column: 7, scope: !5596)
!5601 = !DILocation(line: 42, column: 14, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5595, file: !5474, line: 30, column: 25)
!5603 = !DILocation(line: 48, column: 15, scope: !5602)
!5604 = !DILocation(line: 49, column: 3, scope: !5602)
!5605 = !DILocation(line: 52, column: 2, scope: !5473)
!5606 = !DILocation(line: 53, column: 1, scope: !5473)
!5607 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2821, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!5608 = !DILocation(line: 134, column: 2, scope: !5607)
!5609 = !DILocation(line: 156, column: 1, scope: !5607)
!5610 = !DILocation(line: 0, scope: !205)
!5611 = !DILocation(line: 289, column: 36, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!5613 = !DILocation(line: 289, column: 42, scope: !5612)
!5614 = !DILocation(line: 300, column: 36, scope: !205)
!5615 = !DILocation(line: 301, column: 35, scope: !205)
!5616 = !DILocation(line: 302, column: 37, scope: !205)
!5617 = !DILocation(line: 311, column: 2, scope: !205)
!5618 = !DILocation(line: 316, column: 1, scope: !205)
!5619 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2821, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5620 = !DILocation(line: 188, column: 12, scope: !5619)
!5621 = !DILocation(line: 271, column: 3, scope: !5622, inlinedAt: !5623)
!5622 = distinct !DISubprogram(name: "__DSB", scope: !4797, file: !4797, line: 269, type: !2821, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5623 = distinct !DILocation(line: 192, column: 2, scope: !5619)
!5624 = !{i64 3911054}
!5625 = !DILocation(line: 260, column: 3, scope: !5626, inlinedAt: !5627)
!5626 = distinct !DISubprogram(name: "__ISB", scope: !4797, file: !4797, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5627 = distinct !DILocation(line: 193, column: 2, scope: !5619)
!5628 = !{i64 3910771}
!5629 = !DILocation(line: 194, column: 1, scope: !5619)
!5630 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2821, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5631 = !DILocation(line: 282, column: 3, scope: !5632, inlinedAt: !5633)
!5632 = distinct !DISubprogram(name: "__DMB", scope: !4797, file: !4797, line: 280, type: !2821, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5633 = distinct !DILocation(line: 202, column: 2, scope: !5630)
!5634 = !{i64 3911330}
!5635 = !DILocation(line: 205, column: 12, scope: !5630)
!5636 = !DILocation(line: 206, column: 1, scope: !5630)
!5637 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !5638, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5651)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{null, !5640, !1705, !5065, !5065}
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 32)
!5641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5642)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !5643)
!5643 = !{!5644, !5645, !5646}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5642, file: !335, line: 53, baseType: !22, size: 32)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5642, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5642, file: !335, line: 55, baseType: !5647, size: 32, offset: 64)
!5647 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !5648)
!5648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !5649)
!5649 = !{!5650}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5648, file: !341, line: 150, baseType: !121, size: 32)
!5651 = !{!5652, !5653, !5654, !5655}
!5652 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5637, file: !384, line: 276, type: !5640)
!5653 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5637, file: !384, line: 276, type: !1705)
!5654 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5637, file: !384, line: 277, type: !5065)
!5655 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5637, file: !384, line: 277, type: !5065)
!5656 = !DILocation(line: 0, scope: !5637)
!5657 = !DILocation(line: 279, column: 6, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5637, file: !384, line: 279, column: 6)
!5659 = !DILocation(line: 285, column: 1, scope: !5637)
!5660 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5661, file: !5661, line: 220, type: !5662, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5664)
!5661 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5662 = !DISubroutineType(types: !5663)
!5663 = !{!103, !5640, !1705, !5065, !5065}
!5664 = !{!5665, !5666, !5667, !5668, !5669}
!5665 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5660, file: !5661, line: 221, type: !5640)
!5666 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5660, file: !5661, line: 221, type: !1705)
!5667 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5660, file: !5661, line: 222, type: !5065)
!5668 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5660, file: !5661, line: 223, type: !5065)
!5669 = !DILocalVariable(name: "mpu_reg_index", scope: !5660, file: !5661, line: 225, type: !103)
!5670 = !DILocation(line: 0, scope: !5660)
!5671 = !DILocation(line: 225, column: 22, scope: !5660)
!5672 = !DILocation(line: 233, column: 18, scope: !5660)
!5673 = !DILocation(line: 236, column: 23, scope: !5660)
!5674 = !DILocation(line: 236, column: 21, scope: !5660)
!5675 = !DILocation(line: 238, column: 2, scope: !5660)
!5676 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !5677, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5679)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!103, !5640, !154, !154, !157}
!5679 = !{!5680, !5681, !5682, !5683, !5684, !5685}
!5680 = !DILocalVariable(name: "regions", arg: 1, scope: !5676, file: !384, line: 106, type: !5640)
!5681 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5676, file: !384, line: 106, type: !154)
!5682 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5676, file: !384, line: 106, type: !154)
!5683 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5676, file: !384, line: 107, type: !157)
!5684 = !DILocalVariable(name: "i", scope: !5676, file: !384, line: 109, type: !103)
!5685 = !DILocalVariable(name: "reg_index", scope: !5676, file: !384, line: 110, type: !103)
!5686 = !DILocation(line: 0, scope: !5676)
!5687 = !DILocation(line: 110, column: 18, scope: !5676)
!5688 = !DILocation(line: 112, column: 16, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !384, line: 112, column: 2)
!5690 = distinct !DILexicalBlock(scope: !5676, file: !384, line: 112, column: 2)
!5691 = !DILocation(line: 112, column: 2, scope: !5690)
!5692 = !DILocation(line: 113, column: 7, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !384, line: 113, column: 7)
!5694 = distinct !DILexicalBlock(scope: !5689, file: !384, line: 112, column: 36)
!5695 = !DILocation(line: 113, column: 18, scope: !5693)
!5696 = !DILocation(line: 113, column: 23, scope: !5693)
!5697 = !DILocation(line: 113, column: 7, scope: !5694)
!5698 = !DILocation(line: 118, column: 23, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5694, file: !384, line: 118, column: 7)
!5700 = !DILocation(line: 119, column: 7, scope: !5699)
!5701 = !DILocation(line: 118, column: 7, scope: !5694)
!5702 = !DILocation(line: 124, column: 36, scope: !5694)
!5703 = !DILocation(line: 124, column: 15, scope: !5694)
!5704 = !DILocation(line: 126, column: 17, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5694, file: !384, line: 126, column: 7)
!5706 = !DILocation(line: 126, column: 7, scope: !5694)
!5707 = !DILocation(line: 131, column: 12, scope: !5694)
!5708 = !DILocation(line: 132, column: 2, scope: !5694)
!5709 = !DILocation(line: 112, column: 32, scope: !5689)
!5710 = distinct !{!5710, !5691, !5711}
!5711 = !DILocation(line: 132, column: 2, scope: !5690)
!5712 = !DILocation(line: 135, column: 1, scope: !5676)
!5713 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5661, file: !5661, line: 63, type: !5714, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5716)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{!103, !5640}
!5716 = !{!5717, !5718}
!5717 = !DILocalVariable(name: "part", arg: 1, scope: !5713, file: !5661, line: 63, type: !5640)
!5718 = !DILocalVariable(name: "partition_is_valid", scope: !5713, file: !5661, line: 70, type: !103)
!5719 = !DILocation(line: 0, scope: !5713)
!5720 = !DILocation(line: 71, column: 11, scope: !5713)
!5721 = !DILocation(line: 71, column: 37, scope: !5713)
!5722 = !{i32 0, i32 33}
!5723 = !DILocation(line: 72, column: 3, scope: !5713)
!5724 = !DILocation(line: 71, column: 30, scope: !5713)
!5725 = !DILocation(line: 75, column: 11, scope: !5713)
!5726 = !DILocation(line: 75, column: 17, scope: !5713)
!5727 = !DILocation(line: 75, column: 38, scope: !5713)
!5728 = !DILocation(line: 77, column: 2, scope: !5713)
!5729 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !5730, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5732)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!103, !1705, !5640}
!5732 = !{!5733, !5734, !5735}
!5733 = !DILocalVariable(name: "index", arg: 1, scope: !5729, file: !384, line: 79, type: !1705)
!5734 = !DILocalVariable(name: "new_region", arg: 2, scope: !5729, file: !384, line: 80, type: !5640)
!5735 = !DILocalVariable(name: "region_conf", scope: !5729, file: !384, line: 82, type: !373)
!5736 = !DILocation(line: 0, scope: !5729)
!5737 = !DILocation(line: 82, column: 2, scope: !5729)
!5738 = !DILocation(line: 82, column: 24, scope: !5729)
!5739 = !DILocation(line: 87, column: 33, scope: !5729)
!5740 = !DILocation(line: 87, column: 14, scope: !5729)
!5741 = !DILocation(line: 87, column: 19, scope: !5729)
!5742 = !DILocation(line: 91, column: 55, scope: !5729)
!5743 = !DILocation(line: 92, column: 16, scope: !5729)
!5744 = !DILocation(line: 92, column: 53, scope: !5729)
!5745 = !DILocation(line: 91, column: 2, scope: !5729)
!5746 = !DILocation(line: 95, column: 9, scope: !5729)
!5747 = !DILocation(line: 97, column: 1, scope: !5729)
!5748 = !DILocation(line: 95, column: 2, scope: !5729)
!5749 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5661, file: !5661, line: 113, type: !5750, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5755)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{null, !5752, !5753, !121, !121}
!5752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 32)
!5754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5647)
!5755 = !{!5756, !5757, !5758, !5759}
!5756 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5749, file: !5661, line: 114, type: !5752)
!5757 = !DILocalVariable(name: "attr", arg: 2, scope: !5749, file: !5661, line: 115, type: !5753)
!5758 = !DILocalVariable(name: "base", arg: 3, scope: !5749, file: !5661, line: 115, type: !121)
!5759 = !DILocalVariable(name: "size", arg: 4, scope: !5749, file: !5661, line: 115, type: !121)
!5760 = !DILocation(line: 0, scope: !5749)
!5761 = !DILocation(line: 127, column: 23, scope: !5749)
!5762 = !DILocation(line: 127, column: 35, scope: !5749)
!5763 = !DILocation(line: 127, column: 33, scope: !5749)
!5764 = !DILocation(line: 127, column: 10, scope: !5749)
!5765 = !DILocation(line: 127, column: 15, scope: !5749)
!5766 = !DILocation(line: 129, column: 1, scope: !5749)
!5767 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !5768, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5770)
!5768 = !DISubroutineType(types: !5769)
!5769 = !{!103, !1705, !371}
!5770 = !{!5771, !5772}
!5771 = !DILocalVariable(name: "index", arg: 1, scope: !5767, file: !384, line: 57, type: !1705)
!5772 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5767, file: !384, line: 58, type: !371)
!5773 = !DILocation(line: 0, scope: !5767)
!5774 = !DILocation(line: 61, column: 6, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5767, file: !384, line: 61, column: 6)
!5776 = !DILocation(line: 61, column: 12, scope: !5775)
!5777 = !DILocation(line: 61, column: 6, scope: !5767)
!5778 = !DILocation(line: 71, column: 2, scope: !5767)
!5779 = !DILocation(line: 73, column: 2, scope: !5767)
!5780 = !DILocation(line: 74, column: 1, scope: !5767)
!5781 = distinct !DISubprogram(name: "region_init", scope: !5661, file: !5661, line: 29, type: !5782, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5784)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{null, !5065, !371}
!5784 = !{!5785, !5786}
!5785 = !DILocalVariable(name: "index", arg: 1, scope: !5781, file: !5661, line: 29, type: !5065)
!5786 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5781, file: !5661, line: 30, type: !371)
!5787 = !DILocation(line: 0, scope: !5781)
!5788 = !DILocation(line: 33, column: 2, scope: !5781)
!5789 = !DILocation(line: 47, column: 28, scope: !5781)
!5790 = !DILocation(line: 47, column: 33, scope: !5781)
!5791 = !DILocation(line: 48, column: 26, scope: !5781)
!5792 = !DILocation(line: 47, column: 12, scope: !5781)
!5793 = !DILocation(line: 49, column: 32, scope: !5781)
!5794 = !DILocation(line: 49, column: 37, scope: !5781)
!5795 = !DILocation(line: 49, column: 12, scope: !5781)
!5796 = !DILocation(line: 53, column: 1, scope: !5781)
!5797 = distinct !DISubprogram(name: "set_region_number", scope: !5798, file: !5798, line: 32, type: !4888, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5799)
!5798 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5799 = !{!5800}
!5800 = !DILocalVariable(name: "index", arg: 1, scope: !5797, file: !5798, line: 32, type: !121)
!5801 = !DILocation(line: 0, scope: !5797)
!5802 = !DILocation(line: 34, column: 11, scope: !5797)
!5803 = !DILocation(line: 35, column: 1, scope: !5797)
!5804 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5661, file: !5661, line: 88, type: !5805, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5807)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!121, !121}
!5807 = !{!5808}
!5808 = !DILocalVariable(name: "size", arg: 1, scope: !5804, file: !5661, line: 88, type: !121)
!5809 = !DILocation(line: 0, scope: !5804)
!5810 = !DILocation(line: 91, column: 11, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5804, file: !5661, line: 91, column: 6)
!5812 = !DILocation(line: 91, column: 6, scope: !5804)
!5813 = !DILocation(line: 100, column: 11, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5804, file: !5661, line: 100, column: 6)
!5815 = !DILocation(line: 100, column: 6, scope: !5804)
!5816 = !DILocation(line: 104, column: 35, scope: !5804)
!5817 = !DILocation(line: 104, column: 16, scope: !5804)
!5818 = !DILocation(line: 104, column: 50, scope: !5804)
!5819 = !DILocation(line: 104, column: 72, scope: !5804)
!5820 = !DILocation(line: 104, column: 2, scope: !5804)
!5821 = !DILocation(line: 106, column: 1, scope: !5804)
!5822 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !5823, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5825)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{null, !5640, !154}
!5825 = !{!5826, !5827}
!5826 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5822, file: !384, line: 308, type: !5640)
!5827 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5822, file: !384, line: 308, type: !154)
!5828 = !DILocation(line: 0, scope: !5822)
!5829 = !DILocation(line: 310, column: 6, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5822, file: !384, line: 310, column: 6)
!5831 = !DILocation(line: 316, column: 1, scope: !5822)
!5832 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5661, file: !5661, line: 249, type: !5833, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5835)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!103, !5640, !154}
!5835 = !{!5836, !5837, !5838, !5839}
!5836 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5832, file: !5661, line: 250, type: !5640)
!5837 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5832, file: !5661, line: 250, type: !154)
!5838 = !DILocalVariable(name: "mpu_reg_index", scope: !5832, file: !5661, line: 252, type: !103)
!5839 = !DILocalVariable(name: "i", scope: !5840, file: !5661, line: 264, type: !103)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !5661, line: 264, column: 3)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !5661, line: 261, column: 32)
!5842 = distinct !DILexicalBlock(scope: !5832, file: !5661, line: 261, column: 6)
!5843 = !DILocation(line: 0, scope: !5832)
!5844 = !DILocation(line: 252, column: 22, scope: !5832)
!5845 = !DILocation(line: 258, column: 18, scope: !5832)
!5846 = !DILocation(line: 261, column: 20, scope: !5842)
!5847 = !DILocation(line: 261, column: 6, scope: !5832)
!5848 = !DILocation(line: 0, scope: !5840)
!5849 = !DILocation(line: 265, column: 4, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !5661, line: 264, column: 59)
!5851 = distinct !DILexicalBlock(scope: !5840, file: !5661, line: 264, column: 3)
!5852 = !DILocation(line: 264, column: 55, scope: !5851)
!5853 = !DILocation(line: 264, column: 33, scope: !5851)
!5854 = !DILocation(line: 264, column: 3, scope: !5840)
!5855 = distinct !{!5855, !5854, !5856}
!5856 = !DILocation(line: 266, column: 3, scope: !5840)
!5857 = !DILocation(line: 269, column: 2, scope: !5832)
!5858 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5859, file: !5859, line: 218, type: !4888, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5860)
!5859 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5860 = !{!5861}
!5861 = !DILocalVariable(name: "rnr", arg: 1, scope: !5858, file: !5859, line: 218, type: !121)
!5862 = !DILocation(line: 0, scope: !5858)
!5863 = !DILocation(line: 220, column: 12, scope: !5858)
!5864 = !DILocation(line: 221, column: 13, scope: !5858)
!5865 = !DILocation(line: 222, column: 1, scope: !5858)
!5866 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !5867, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5869)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!103}
!5869 = !{!5870}
!5870 = !DILocalVariable(name: "r_index", scope: !5866, file: !384, line: 328, type: !121)
!5871 = !DILocation(line: 330, column: 17, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5866, file: !384, line: 330, column: 6)
!5873 = !DILocation(line: 330, column: 29, scope: !5872)
!5874 = !DILocation(line: 330, column: 6, scope: !5866)
!5875 = !DILocation(line: 347, column: 2, scope: !5866)
!5876 = !DILocation(line: 0, scope: !5866)
!5877 = !DILocation(line: 364, column: 29, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5879, file: !384, line: 364, column: 2)
!5879 = distinct !DILexicalBlock(scope: !5866, file: !384, line: 364, column: 2)
!5880 = !DILocation(line: 364, column: 2, scope: !5879)
!5881 = !DILocation(line: 365, column: 25, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !384, line: 364, column: 66)
!5883 = !DILocation(line: 365, column: 3, scope: !5882)
!5884 = !DILocation(line: 364, column: 62, scope: !5878)
!5885 = distinct !{!5885, !5880, !5886}
!5886 = !DILocation(line: 366, column: 2, scope: !5879)
!5887 = !DILocation(line: 369, column: 23, scope: !5866)
!5888 = !DILocation(line: 369, column: 21, scope: !5866)
!5889 = !DILocation(line: 372, column: 2, scope: !5866)
!5890 = !DILocation(line: 443, column: 2, scope: !5866)
!5891 = !DILocation(line: 444, column: 1, scope: !5866)
!5892 = distinct !DISubprogram(name: "strcpy", scope: !5893, file: !5893, line: 20, type: !5894, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5898)
!5893 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5894 = !DISubroutineType(types: !5895)
!5895 = !{!995, !5896, !5897}
!5896 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !995)
!5897 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!5898 = !{!5899, !5900, !5901}
!5899 = !DILocalVariable(name: "d", arg: 1, scope: !5892, file: !5893, line: 20, type: !5896)
!5900 = !DILocalVariable(name: "s", arg: 2, scope: !5892, file: !5893, line: 20, type: !5897)
!5901 = !DILocalVariable(name: "dest", scope: !5892, file: !5893, line: 22, type: !995)
!5902 = !DILocation(line: 0, scope: !5892)
!5903 = !DILocation(line: 24, column: 9, scope: !5892)
!5904 = !DILocation(line: 24, column: 12, scope: !5892)
!5905 = !DILocation(line: 24, column: 2, scope: !5892)
!5906 = !DILocation(line: 25, column: 6, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5892, file: !5893, line: 24, column: 21)
!5908 = !DILocation(line: 26, column: 4, scope: !5907)
!5909 = !DILocation(line: 27, column: 4, scope: !5907)
!5910 = distinct !{!5910, !5905, !5911}
!5911 = !DILocation(line: 28, column: 2, scope: !5892)
!5912 = !DILocation(line: 30, column: 5, scope: !5892)
!5913 = !DILocation(line: 32, column: 2, scope: !5892)
!5914 = distinct !DISubprogram(name: "strncpy", scope: !5893, file: !5893, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5917)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{!995, !5896, !5897, !200}
!5917 = !{!5918, !5919, !5920, !5921}
!5918 = !DILocalVariable(name: "d", arg: 1, scope: !5914, file: !5893, line: 42, type: !5896)
!5919 = !DILocalVariable(name: "s", arg: 2, scope: !5914, file: !5893, line: 42, type: !5897)
!5920 = !DILocalVariable(name: "n", arg: 3, scope: !5914, file: !5893, line: 42, type: !200)
!5921 = !DILocalVariable(name: "dest", scope: !5914, file: !5893, line: 44, type: !995)
!5922 = !DILocation(line: 0, scope: !5914)
!5923 = !DILocation(line: 46, column: 12, scope: !5914)
!5924 = !DILocation(line: 46, column: 17, scope: !5914)
!5925 = !DILocation(line: 46, column: 20, scope: !5914)
!5926 = !DILocation(line: 46, column: 23, scope: !5914)
!5927 = !DILocation(line: 46, column: 2, scope: !5914)
!5928 = !DILocation(line: 47, column: 6, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5914, file: !5893, line: 46, column: 32)
!5930 = !DILocation(line: 48, column: 4, scope: !5929)
!5931 = !DILocation(line: 49, column: 4, scope: !5929)
!5932 = !DILocation(line: 50, column: 4, scope: !5929)
!5933 = distinct !{!5933, !5927, !5934}
!5934 = !DILocation(line: 51, column: 2, scope: !5914)
!5935 = !DILocation(line: 54, column: 6, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5914, file: !5893, line: 53, column: 16)
!5937 = !DILocation(line: 55, column: 4, scope: !5936)
!5938 = !DILocation(line: 56, column: 4, scope: !5936)
!5939 = !DILocation(line: 53, column: 11, scope: !5914)
!5940 = !DILocation(line: 53, column: 2, scope: !5914)
!5941 = distinct !{!5941, !5940, !5942}
!5942 = !DILocation(line: 57, column: 2, scope: !5914)
!5943 = !DILocation(line: 59, column: 2, scope: !5914)
!5944 = distinct !DISubprogram(name: "strchr", scope: !5893, file: !5893, line: 69, type: !5945, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5947)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{!995, !144, !103}
!5947 = !{!5948, !5949, !5950}
!5948 = !DILocalVariable(name: "s", arg: 1, scope: !5944, file: !5893, line: 69, type: !144)
!5949 = !DILocalVariable(name: "c", arg: 2, scope: !5944, file: !5893, line: 69, type: !103)
!5950 = !DILocalVariable(name: "tmp", scope: !5944, file: !5893, line: 71, type: !146)
!5951 = !DILocation(line: 0, scope: !5944)
!5952 = !DILocation(line: 73, column: 2, scope: !5944)
!5953 = !DILocation(line: 73, column: 10, scope: !5944)
!5954 = !DILocation(line: 73, column: 13, scope: !5944)
!5955 = !DILocation(line: 73, column: 21, scope: !5944)
!5956 = !DILocation(line: 74, column: 4, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5944, file: !5893, line: 73, column: 38)
!5958 = distinct !{!5958, !5952, !5959}
!5959 = !DILocation(line: 75, column: 2, scope: !5944)
!5960 = !DILocation(line: 77, column: 9, scope: !5944)
!5961 = !DILocation(line: 77, column: 2, scope: !5944)
!5962 = distinct !DISubprogram(name: "strrchr", scope: !5893, file: !5893, line: 87, type: !5945, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5963)
!5963 = !{!5964, !5965, !5966}
!5964 = !DILocalVariable(name: "s", arg: 1, scope: !5962, file: !5893, line: 87, type: !144)
!5965 = !DILocalVariable(name: "c", arg: 2, scope: !5962, file: !5893, line: 87, type: !103)
!5966 = !DILocalVariable(name: "match", scope: !5962, file: !5893, line: 89, type: !995)
!5967 = !DILocation(line: 0, scope: !5962)
!5968 = !DILocation(line: 91, column: 2, scope: !5962)
!5969 = !DILocation(line: 92, column: 7, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !5893, line: 92, column: 7)
!5971 = distinct !DILexicalBlock(scope: !5962, file: !5893, line: 91, column: 5)
!5972 = !DILocation(line: 92, column: 10, scope: !5970)
!5973 = !DILocation(line: 92, column: 7, scope: !5971)
!5974 = !DILocation(line: 95, column: 13, scope: !5962)
!5975 = !DILocation(line: 95, column: 2, scope: !5971)
!5976 = distinct !{!5976, !5968, !5977}
!5977 = !DILocation(line: 95, column: 15, scope: !5962)
!5978 = !DILocation(line: 97, column: 2, scope: !5962)
!5979 = distinct !DISubprogram(name: "strlen", scope: !5893, file: !5893, line: 107, type: !5980, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5982)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!200, !144}
!5982 = !{!5983, !5984}
!5983 = !DILocalVariable(name: "s", arg: 1, scope: !5979, file: !5893, line: 107, type: !144)
!5984 = !DILocalVariable(name: "n", scope: !5979, file: !5893, line: 109, type: !200)
!5985 = !DILocation(line: 0, scope: !5979)
!5986 = !DILocation(line: 111, column: 9, scope: !5979)
!5987 = !DILocation(line: 111, column: 12, scope: !5979)
!5988 = !DILocation(line: 111, column: 2, scope: !5979)
!5989 = !DILocation(line: 112, column: 4, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5979, file: !5893, line: 111, column: 21)
!5991 = !DILocation(line: 113, column: 4, scope: !5990)
!5992 = distinct !{!5992, !5988, !5993}
!5993 = !DILocation(line: 114, column: 2, scope: !5979)
!5994 = !DILocation(line: 116, column: 2, scope: !5979)
!5995 = distinct !DISubprogram(name: "strnlen", scope: !5893, file: !5893, line: 126, type: !5996, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !5998)
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!200, !144, !200}
!5998 = !{!5999, !6000, !6001}
!5999 = !DILocalVariable(name: "s", arg: 1, scope: !5995, file: !5893, line: 126, type: !144)
!6000 = !DILocalVariable(name: "maxlen", arg: 2, scope: !5995, file: !5893, line: 126, type: !200)
!6001 = !DILocalVariable(name: "n", scope: !5995, file: !5893, line: 128, type: !200)
!6002 = !DILocation(line: 0, scope: !5995)
!6003 = !DILocation(line: 130, column: 9, scope: !5995)
!6004 = !DILocation(line: 130, column: 12, scope: !5995)
!6005 = !DILocation(line: 130, column: 20, scope: !5995)
!6006 = !DILocation(line: 130, column: 2, scope: !5995)
!6007 = !DILocation(line: 131, column: 4, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5995, file: !5893, line: 130, column: 35)
!6009 = !DILocation(line: 132, column: 4, scope: !6008)
!6010 = distinct !{!6010, !6006, !6011}
!6011 = !DILocation(line: 133, column: 2, scope: !5995)
!6012 = !DILocation(line: 135, column: 2, scope: !5995)
!6013 = distinct !DISubprogram(name: "strcmp", scope: !5893, file: !5893, line: 145, type: !6014, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6016)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!103, !144, !144}
!6016 = !{!6017, !6018}
!6017 = !DILocalVariable(name: "s1", arg: 1, scope: !6013, file: !5893, line: 145, type: !144)
!6018 = !DILocalVariable(name: "s2", arg: 2, scope: !6013, file: !5893, line: 145, type: !144)
!6019 = !DILocation(line: 0, scope: !6013)
!6020 = !DILocation(line: 147, column: 10, scope: !6013)
!6021 = !DILocation(line: 147, column: 17, scope: !6013)
!6022 = !DILocation(line: 147, column: 14, scope: !6013)
!6023 = !DILocation(line: 147, column: 22, scope: !6013)
!6024 = !DILocation(line: 148, column: 5, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6013, file: !5893, line: 147, column: 40)
!6026 = !DILocation(line: 149, column: 5, scope: !6025)
!6027 = distinct !{!6027, !6028, !6029}
!6028 = !DILocation(line: 147, column: 2, scope: !6013)
!6029 = !DILocation(line: 150, column: 2, scope: !6013)
!6030 = !DILocation(line: 152, column: 9, scope: !6013)
!6031 = !DILocation(line: 152, column: 15, scope: !6013)
!6032 = !DILocation(line: 152, column: 13, scope: !6013)
!6033 = !DILocation(line: 152, column: 2, scope: !6013)
!6034 = distinct !DISubprogram(name: "strncmp", scope: !5893, file: !5893, line: 162, type: !6035, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6037)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!103, !144, !144, !200}
!6037 = !{!6038, !6039, !6040}
!6038 = !DILocalVariable(name: "s1", arg: 1, scope: !6034, file: !5893, line: 162, type: !144)
!6039 = !DILocalVariable(name: "s2", arg: 2, scope: !6034, file: !5893, line: 162, type: !144)
!6040 = !DILocalVariable(name: "n", arg: 3, scope: !6034, file: !5893, line: 162, type: !200)
!6041 = !DILocation(line: 0, scope: !6034)
!6042 = !DILocation(line: 164, column: 17, scope: !6034)
!6043 = !DILocation(line: 164, column: 21, scope: !6034)
!6044 = !DILocation(line: 164, column: 28, scope: !6034)
!6045 = !DILocation(line: 164, column: 25, scope: !6034)
!6046 = !DILocation(line: 164, column: 33, scope: !6034)
!6047 = !DILocation(line: 165, column: 5, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6034, file: !5893, line: 164, column: 51)
!6049 = !DILocation(line: 166, column: 5, scope: !6048)
!6050 = !DILocation(line: 167, column: 4, scope: !6048)
!6051 = distinct !{!6051, !6052, !6053}
!6052 = !DILocation(line: 164, column: 2, scope: !6034)
!6053 = !DILocation(line: 168, column: 2, scope: !6034)
!6054 = !DILocation(line: 170, column: 25, scope: !6034)
!6055 = !DILocation(line: 170, column: 31, scope: !6034)
!6056 = !DILocation(line: 170, column: 29, scope: !6034)
!6057 = !DILocation(line: 170, column: 9, scope: !6034)
!6058 = !DILocation(line: 170, column: 2, scope: !6034)
!6059 = distinct !DISubprogram(name: "strtok_r", scope: !5893, file: !5893, line: 180, type: !6060, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6063)
!6060 = !DISubroutineType(types: !6061)
!6061 = !{!995, !995, !144, !6062}
!6062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!6063 = !{!6064, !6065, !6066, !6067, !6068}
!6064 = !DILocalVariable(name: "str", arg: 1, scope: !6059, file: !5893, line: 180, type: !995)
!6065 = !DILocalVariable(name: "sep", arg: 2, scope: !6059, file: !5893, line: 180, type: !144)
!6066 = !DILocalVariable(name: "state", arg: 3, scope: !6059, file: !5893, line: 180, type: !6062)
!6067 = !DILocalVariable(name: "start", scope: !6059, file: !5893, line: 182, type: !995)
!6068 = !DILocalVariable(name: "end", scope: !6059, file: !5893, line: 182, type: !995)
!6069 = !DILocation(line: 0, scope: !6059)
!6070 = !DILocation(line: 184, column: 10, scope: !6059)
!6071 = !DILocation(line: 184, column: 22, scope: !6059)
!6072 = !DILocation(line: 187, column: 9, scope: !6059)
!6073 = !DILocation(line: 187, column: 16, scope: !6059)
!6074 = !DILocation(line: 187, column: 19, scope: !6059)
!6075 = !DILocation(line: 187, column: 2, scope: !6059)
!6076 = !DILocation(line: 188, column: 8, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6059, file: !5893, line: 187, column: 40)
!6078 = distinct !{!6078, !6075, !6079}
!6079 = !DILocation(line: 189, column: 2, scope: !6059)
!6080 = !DILocation(line: 198, column: 9, scope: !6059)
!6081 = !DILocation(line: 198, column: 18, scope: !6059)
!6082 = !DILocation(line: 198, column: 17, scope: !6059)
!6083 = !DILocation(line: 198, column: 2, scope: !6059)
!6084 = !DILocation(line: 199, column: 6, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6059, file: !5893, line: 198, column: 37)
!6086 = !DILocation(line: 198, column: 14, scope: !6059)
!6087 = distinct !{!6087, !6083, !6088}
!6088 = !DILocation(line: 200, column: 2, scope: !6059)
!6089 = !DILocation(line: 203, column: 8, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !5893, line: 202, column: 20)
!6091 = distinct !DILexicalBlock(scope: !6059, file: !5893, line: 202, column: 6)
!6092 = !DILocation(line: 204, column: 16, scope: !6090)
!6093 = !DILocation(line: 205, column: 2, scope: !6090)
!6094 = !DILocation(line: 210, column: 1, scope: !6059)
!6095 = distinct !DISubprogram(name: "strcat", scope: !5893, file: !5893, line: 212, type: !5894, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6096)
!6096 = !{!6097, !6098}
!6097 = !DILocalVariable(name: "dest", arg: 1, scope: !6095, file: !5893, line: 212, type: !5896)
!6098 = !DILocalVariable(name: "src", arg: 2, scope: !6095, file: !5893, line: 212, type: !5897)
!6099 = !DILocation(line: 0, scope: !6095)
!6100 = !DILocation(line: 214, column: 16, scope: !6095)
!6101 = !DILocation(line: 214, column: 14, scope: !6095)
!6102 = !DILocation(line: 214, column: 2, scope: !6095)
!6103 = !DILocation(line: 215, column: 2, scope: !6095)
!6104 = distinct !DISubprogram(name: "strncat", scope: !5893, file: !5893, line: 218, type: !5915, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6105)
!6105 = !{!6106, !6107, !6108, !6109, !6110}
!6106 = !DILocalVariable(name: "dest", arg: 1, scope: !6104, file: !5893, line: 218, type: !5896)
!6107 = !DILocalVariable(name: "src", arg: 2, scope: !6104, file: !5893, line: 218, type: !5897)
!6108 = !DILocalVariable(name: "n", arg: 3, scope: !6104, file: !5893, line: 219, type: !200)
!6109 = !DILocalVariable(name: "orig_dest", scope: !6104, file: !5893, line: 221, type: !995)
!6110 = !DILocalVariable(name: "len", scope: !6104, file: !5893, line: 222, type: !200)
!6111 = !DILocation(line: 0, scope: !6104)
!6112 = !DILocation(line: 222, column: 15, scope: !6104)
!6113 = !DILocation(line: 224, column: 7, scope: !6104)
!6114 = !DILocation(line: 225, column: 14, scope: !6104)
!6115 = !DILocation(line: 225, column: 19, scope: !6104)
!6116 = !DILocation(line: 225, column: 11, scope: !6104)
!6117 = !DILocation(line: 225, column: 23, scope: !6104)
!6118 = !DILocation(line: 225, column: 28, scope: !6104)
!6119 = !DILocation(line: 225, column: 2, scope: !6104)
!6120 = !DILocation(line: 226, column: 17, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6104, file: !5893, line: 225, column: 38)
!6122 = !DILocation(line: 226, column: 8, scope: !6121)
!6123 = !DILocation(line: 226, column: 11, scope: !6121)
!6124 = distinct !{!6124, !6119, !6125}
!6125 = !DILocation(line: 227, column: 2, scope: !6104)
!6126 = !DILocation(line: 228, column: 8, scope: !6104)
!6127 = !DILocation(line: 230, column: 2, scope: !6104)
!6128 = distinct !DISubprogram(name: "memcmp", scope: !5893, file: !5893, line: 239, type: !6129, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6131)
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!103, !13, !13, !200}
!6131 = !{!6132, !6133, !6134, !6135, !6136}
!6132 = !DILocalVariable(name: "m1", arg: 1, scope: !6128, file: !5893, line: 239, type: !13)
!6133 = !DILocalVariable(name: "m2", arg: 2, scope: !6128, file: !5893, line: 239, type: !13)
!6134 = !DILocalVariable(name: "n", arg: 3, scope: !6128, file: !5893, line: 239, type: !200)
!6135 = !DILocalVariable(name: "c1", scope: !6128, file: !5893, line: 241, type: !144)
!6136 = !DILocalVariable(name: "c2", scope: !6128, file: !5893, line: 242, type: !144)
!6137 = !DILocation(line: 0, scope: !6128)
!6138 = !DILocation(line: 244, column: 7, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6128, file: !5893, line: 244, column: 6)
!6140 = !DILocation(line: 244, column: 6, scope: !6128)
!6141 = !DILocation(line: 248, column: 10, scope: !6128)
!6142 = !DILocation(line: 248, column: 14, scope: !6128)
!6143 = !DILocation(line: 248, column: 19, scope: !6128)
!6144 = !DILocation(line: 248, column: 2, scope: !6128)
!6145 = !DILocation(line: 248, column: 23, scope: !6128)
!6146 = !DILocation(line: 248, column: 30, scope: !6128)
!6147 = !DILocation(line: 248, column: 27, scope: !6128)
!6148 = !DILocation(line: 249, column: 5, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6128, file: !5893, line: 248, column: 36)
!6150 = !DILocation(line: 250, column: 5, scope: !6149)
!6151 = distinct !{!6151, !6144, !6152}
!6152 = !DILocation(line: 251, column: 2, scope: !6128)
!6153 = !DILocation(line: 253, column: 9, scope: !6128)
!6154 = !DILocation(line: 253, column: 15, scope: !6128)
!6155 = !DILocation(line: 253, column: 13, scope: !6128)
!6156 = !DILocation(line: 253, column: 2, scope: !6128)
!6157 = !DILocation(line: 254, column: 1, scope: !6128)
!6158 = distinct !DISubprogram(name: "memmove", scope: !5893, file: !5893, line: 263, type: !6159, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6161)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{!102, !102, !13, !200}
!6161 = !{!6162, !6163, !6164, !6165, !6166}
!6162 = !DILocalVariable(name: "d", arg: 1, scope: !6158, file: !5893, line: 263, type: !102)
!6163 = !DILocalVariable(name: "s", arg: 2, scope: !6158, file: !5893, line: 263, type: !13)
!6164 = !DILocalVariable(name: "n", arg: 3, scope: !6158, file: !5893, line: 263, type: !200)
!6165 = !DILocalVariable(name: "dest", scope: !6158, file: !5893, line: 265, type: !995)
!6166 = !DILocalVariable(name: "src", scope: !6158, file: !5893, line: 266, type: !144)
!6167 = !DILocation(line: 0, scope: !6158)
!6168 = !DILocation(line: 268, column: 21, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6158, file: !5893, line: 268, column: 6)
!6170 = !DILocation(line: 268, column: 28, scope: !6169)
!6171 = !DILocation(line: 268, column: 6, scope: !6158)
!6172 = !DILocation(line: 280, column: 12, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6169, file: !5893, line: 278, column: 9)
!6174 = !DILocation(line: 280, column: 3, scope: !6173)
!6175 = !DILocation(line: 275, column: 5, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !5893, line: 274, column: 17)
!6177 = distinct !DILexicalBlock(scope: !6169, file: !5893, line: 268, column: 33)
!6178 = !DILocation(line: 276, column: 14, scope: !6176)
!6179 = !DILocation(line: 276, column: 4, scope: !6176)
!6180 = !DILocation(line: 276, column: 12, scope: !6176)
!6181 = !DILocation(line: 274, column: 12, scope: !6177)
!6182 = !DILocation(line: 274, column: 3, scope: !6177)
!6183 = distinct !{!6183, !6182, !6184}
!6184 = !DILocation(line: 277, column: 3, scope: !6177)
!6185 = !DILocation(line: 281, column: 12, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6173, file: !5893, line: 280, column: 17)
!6187 = !DILocation(line: 281, column: 10, scope: !6186)
!6188 = !DILocation(line: 282, column: 8, scope: !6186)
!6189 = !DILocation(line: 283, column: 7, scope: !6186)
!6190 = !DILocation(line: 284, column: 5, scope: !6186)
!6191 = distinct !{!6191, !6174, !6192}
!6192 = !DILocation(line: 285, column: 3, scope: !6173)
!6193 = !DILocation(line: 288, column: 2, scope: !6158)
!6194 = distinct !DISubprogram(name: "memcpy", scope: !5893, file: !5893, line: 298, type: !6195, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6199)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!102, !6197, !6198, !200}
!6197 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6198 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6199 = !{!6200, !6201, !6202, !6203, !6204}
!6200 = !DILocalVariable(name: "d", arg: 1, scope: !6194, file: !5893, line: 298, type: !6197)
!6201 = !DILocalVariable(name: "s", arg: 2, scope: !6194, file: !5893, line: 298, type: !6198)
!6202 = !DILocalVariable(name: "n", arg: 3, scope: !6194, file: !5893, line: 298, type: !200)
!6203 = !DILocalVariable(name: "d_byte", scope: !6194, file: !5893, line: 302, type: !828)
!6204 = !DILocalVariable(name: "s_byte", scope: !6194, file: !5893, line: 303, type: !2606)
!6205 = !DILocation(line: 0, scope: !6194)
!6206 = !DILocation(line: 337, column: 11, scope: !6194)
!6207 = !DILocation(line: 337, column: 2, scope: !6194)
!6208 = !DILocation(line: 338, column: 25, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6194, file: !5893, line: 337, column: 16)
!6210 = !DILocation(line: 338, column: 17, scope: !6209)
!6211 = !DILocation(line: 338, column: 11, scope: !6209)
!6212 = !DILocation(line: 338, column: 15, scope: !6209)
!6213 = !DILocation(line: 339, column: 4, scope: !6209)
!6214 = distinct !{!6214, !6207, !6215}
!6215 = !DILocation(line: 340, column: 2, scope: !6194)
!6216 = !DILocation(line: 342, column: 2, scope: !6194)
!6217 = distinct !DISubprogram(name: "memset", scope: !5893, file: !5893, line: 352, type: !6218, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!102, !102, !103, !200}
!6220 = !{!6221, !6222, !6223, !6224, !6225}
!6221 = !DILocalVariable(name: "buf", arg: 1, scope: !6217, file: !5893, line: 352, type: !102)
!6222 = !DILocalVariable(name: "c", arg: 2, scope: !6217, file: !5893, line: 352, type: !103)
!6223 = !DILocalVariable(name: "n", arg: 3, scope: !6217, file: !5893, line: 352, type: !200)
!6224 = !DILocalVariable(name: "d_byte", scope: !6217, file: !5893, line: 356, type: !828)
!6225 = !DILocalVariable(name: "c_byte", scope: !6217, file: !5893, line: 357, type: !155)
!6226 = !DILocation(line: 0, scope: !6217)
!6227 = !DILocation(line: 357, column: 25, scope: !6217)
!6228 = !DILocation(line: 389, column: 11, scope: !6217)
!6229 = !DILocation(line: 389, column: 2, scope: !6217)
!6230 = !DILocation(line: 390, column: 11, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6217, file: !5893, line: 389, column: 16)
!6232 = !DILocation(line: 390, column: 15, scope: !6231)
!6233 = !DILocation(line: 391, column: 4, scope: !6231)
!6234 = distinct !{!6234, !6229, !6235}
!6235 = !DILocation(line: 392, column: 2, scope: !6217)
!6236 = !DILocation(line: 394, column: 2, scope: !6217)
!6237 = distinct !DISubprogram(name: "memchr", scope: !5893, file: !5893, line: 404, type: !6238, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6240)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{!102, !13, !103, !200}
!6240 = !{!6241, !6242, !6243, !6244}
!6241 = !DILocalVariable(name: "s", arg: 1, scope: !6237, file: !5893, line: 404, type: !13)
!6242 = !DILocalVariable(name: "c", arg: 2, scope: !6237, file: !5893, line: 404, type: !103)
!6243 = !DILocalVariable(name: "n", arg: 3, scope: !6237, file: !5893, line: 404, type: !200)
!6244 = !DILocalVariable(name: "p", scope: !6245, file: !5893, line: 407, type: !2606)
!6245 = distinct !DILexicalBlock(scope: !6246, file: !5893, line: 406, column: 14)
!6246 = distinct !DILexicalBlock(scope: !6237, file: !5893, line: 406, column: 6)
!6247 = !DILocation(line: 0, scope: !6237)
!6248 = !DILocation(line: 406, column: 8, scope: !6246)
!6249 = !DILocation(line: 406, column: 6, scope: !6237)
!6250 = !DILocation(line: 409, column: 3, scope: !6245)
!6251 = !DILocation(line: 0, scope: !6245)
!6252 = !DILocation(line: 410, column: 8, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !5893, line: 410, column: 8)
!6254 = distinct !DILexicalBlock(scope: !6245, file: !5893, line: 409, column: 6)
!6255 = !DILocation(line: 410, column: 13, scope: !6253)
!6256 = !DILocation(line: 410, column: 8, scope: !6254)
!6257 = distinct !{!6257, !6250, !6258}
!6258 = !DILocation(line: 414, column: 20, scope: !6245)
!6259 = !DILocation(line: 417, column: 2, scope: !6237)
!6260 = !DILocation(line: 418, column: 1, scope: !6237)
!6261 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !2942, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6262)
!6262 = !{!6263}
!6263 = !DILocalVariable(name: "hook", arg: 1, scope: !6261, file: !394, line: 23, type: !106)
!6264 = !DILocation(line: 0, scope: !6261)
!6265 = !DILocation(line: 25, column: 15, scope: !6261)
!6266 = !DILocation(line: 26, column: 1, scope: !6261)
!6267 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6268)
!6268 = !{!6269}
!6269 = !DILocalVariable(name: "c", arg: 1, scope: !6267, file: !394, line: 14, type: !103)
!6270 = !DILocation(line: 0, scope: !6267)
!6271 = !DILocation(line: 18, column: 2, scope: !6267)
!6272 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6273, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6275)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{!103, !103, !390}
!6275 = !{!6276, !6277}
!6276 = !DILocalVariable(name: "c", arg: 1, scope: !6272, file: !394, line: 28, type: !103)
!6277 = !DILocalVariable(name: "stream", arg: 2, scope: !6272, file: !394, line: 28, type: !390)
!6278 = !DILocation(line: 0, scope: !6272)
!6279 = !DILocation(line: 30, column: 27, scope: !6272)
!6280 = !DILocation(line: 30, column: 50, scope: !6272)
!6281 = !DILocation(line: 30, column: 9, scope: !6272)
!6282 = !DILocation(line: 30, column: 2, scope: !6272)
!6283 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6273, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6284)
!6284 = !{!6285, !6286}
!6285 = !DILocalVariable(name: "c", arg: 1, scope: !6283, file: !394, line: 41, type: !103)
!6286 = !DILocalVariable(name: "stream", arg: 2, scope: !6283, file: !394, line: 41, type: !390)
!6287 = !DILocation(line: 0, scope: !6283)
!6288 = !DILocation(line: 43, column: 9, scope: !6283)
!6289 = !DILocation(line: 43, column: 2, scope: !6283)
!6290 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6291, file: !6291, line: 72, type: !6273, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6292)
!6291 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!6292 = !{!6293, !6294}
!6293 = !DILocalVariable(name: "c", arg: 1, scope: !6290, file: !6291, line: 72, type: !103)
!6294 = !DILocalVariable(name: "stream", arg: 2, scope: !6290, file: !6291, line: 72, type: !390)
!6295 = !DILocation(line: 0, scope: !6290)
!6296 = !DILocation(line: 81, column: 2, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6290, file: !6291, line: 81, column: 2)
!6298 = !{i64 2155123277}
!6299 = !DILocation(line: 82, column: 9, scope: !6290)
!6300 = !DILocation(line: 82, column: 2, scope: !6290)
!6301 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6302, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6305)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{!103, !5897, !6304}
!6304 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6305 = !{!6306, !6307, !6308, !6309}
!6306 = !DILocalVariable(name: "s", arg: 1, scope: !6301, file: !394, line: 46, type: !5897)
!6307 = !DILocalVariable(name: "stream", arg: 2, scope: !6301, file: !394, line: 46, type: !6304)
!6308 = !DILocalVariable(name: "len", scope: !6301, file: !394, line: 48, type: !103)
!6309 = !DILocalVariable(name: "ret", scope: !6301, file: !394, line: 49, type: !103)
!6310 = !DILocation(line: 0, scope: !6301)
!6311 = !DILocation(line: 48, column: 12, scope: !6301)
!6312 = !DILocation(line: 51, column: 8, scope: !6301)
!6313 = !DILocation(line: 53, column: 13, scope: !6301)
!6314 = !DILocation(line: 53, column: 9, scope: !6301)
!6315 = !DILocation(line: 53, column: 2, scope: !6301)
!6316 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6317, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6319)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!200, !6198, !200, !200, !6304}
!6319 = !{!6320, !6321, !6322, !6323}
!6320 = !DILocalVariable(name: "ptr", arg: 1, scope: !6316, file: !394, line: 99, type: !6198)
!6321 = !DILocalVariable(name: "size", arg: 2, scope: !6316, file: !394, line: 99, type: !200)
!6322 = !DILocalVariable(name: "nitems", arg: 3, scope: !6316, file: !394, line: 99, type: !200)
!6323 = !DILocalVariable(name: "stream", arg: 4, scope: !6316, file: !394, line: 100, type: !6304)
!6324 = !DILocation(line: 0, scope: !6316)
!6325 = !DILocation(line: 102, column: 9, scope: !6316)
!6326 = !DILocation(line: 102, column: 2, scope: !6316)
!6327 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6291, file: !6291, line: 96, type: !6317, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6328)
!6328 = !{!6329, !6330, !6331, !6332}
!6329 = !DILocalVariable(name: "ptr", arg: 1, scope: !6327, file: !6291, line: 96, type: !6198)
!6330 = !DILocalVariable(name: "size", arg: 2, scope: !6327, file: !6291, line: 96, type: !200)
!6331 = !DILocalVariable(name: "nitems", arg: 3, scope: !6327, file: !6291, line: 96, type: !200)
!6332 = !DILocalVariable(name: "stream", arg: 4, scope: !6327, file: !6291, line: 96, type: !6304)
!6333 = !DILocation(line: 0, scope: !6327)
!6334 = !DILocation(line: 107, column: 2, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6327, file: !6291, line: 107, column: 2)
!6336 = !{i64 2155123381}
!6337 = !DILocation(line: 108, column: 9, scope: !6327)
!6338 = !DILocation(line: 108, column: 2, scope: !6327)
!6339 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6317, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6340)
!6340 = !{!6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348}
!6341 = !DILocalVariable(name: "ptr", arg: 1, scope: !6339, file: !394, line: 56, type: !6198)
!6342 = !DILocalVariable(name: "size", arg: 2, scope: !6339, file: !394, line: 56, type: !200)
!6343 = !DILocalVariable(name: "nitems", arg: 3, scope: !6339, file: !394, line: 57, type: !200)
!6344 = !DILocalVariable(name: "stream", arg: 4, scope: !6339, file: !394, line: 57, type: !6304)
!6345 = !DILocalVariable(name: "i", scope: !6339, file: !394, line: 59, type: !200)
!6346 = !DILocalVariable(name: "j", scope: !6339, file: !394, line: 60, type: !200)
!6347 = !DILocalVariable(name: "p", scope: !6339, file: !394, line: 61, type: !2606)
!6348 = !DILabel(scope: !6339, name: "done", file: !394, line: 82)
!6349 = !DILocation(line: 0, scope: !6339)
!6350 = !DILocation(line: 63, column: 14, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6339, file: !394, line: 63, column: 6)
!6352 = !DILocation(line: 63, column: 24, scope: !6351)
!6353 = !DILocation(line: 72, column: 3, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6339, file: !394, line: 70, column: 5)
!6355 = !DILocation(line: 0, scope: !6354)
!6356 = !DILocation(line: 73, column: 8, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !394, line: 73, column: 8)
!6358 = distinct !DILexicalBlock(scope: !6354, file: !394, line: 72, column: 6)
!6359 = !DILocation(line: 73, column: 29, scope: !6357)
!6360 = !DILocation(line: 73, column: 27, scope: !6357)
!6361 = !DILocation(line: 73, column: 21, scope: !6357)
!6362 = !DILocation(line: 73, column: 33, scope: !6357)
!6363 = !DILocation(line: 73, column: 8, scope: !6358)
!6364 = !DILocation(line: 76, column: 5, scope: !6358)
!6365 = !DILocation(line: 77, column: 14, scope: !6354)
!6366 = !DILocation(line: 77, column: 3, scope: !6358)
!6367 = distinct !{!6367, !6353, !6368}
!6368 = !DILocation(line: 77, column: 17, scope: !6354)
!6369 = !DILocation(line: 79, column: 4, scope: !6354)
!6370 = !DILocation(line: 80, column: 13, scope: !6339)
!6371 = !DILocation(line: 80, column: 2, scope: !6354)
!6372 = distinct !{!6372, !6373, !6374}
!6373 = !DILocation(line: 70, column: 2, scope: !6339)
!6374 = !DILocation(line: 80, column: 16, scope: !6339)
!6375 = !DILocation(line: 82, column: 1, scope: !6339)
!6376 = !DILocation(line: 83, column: 17, scope: !6339)
!6377 = !DILocation(line: 83, column: 2, scope: !6339)
!6378 = !DILocation(line: 84, column: 1, scope: !6339)
!6379 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !6380, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6382)
!6380 = !DISubroutineType(types: !6381)
!6381 = !{!103, !144}
!6382 = !{!6383}
!6383 = !DILocalVariable(name: "s", arg: 1, scope: !6379, file: !394, line: 106, type: !144)
!6384 = !DILocation(line: 0, scope: !6379)
!6385 = !DILocation(line: 108, column: 6, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6379, file: !394, line: 108, column: 6)
!6387 = !DILocation(line: 108, column: 23, scope: !6386)
!6388 = !DILocation(line: 108, column: 6, scope: !6379)
!6389 = !DILocation(line: 112, column: 9, scope: !6379)
!6390 = !DILocation(line: 112, column: 29, scope: !6379)
!6391 = !DILocation(line: 112, column: 2, scope: !6379)
!6392 = !DILocation(line: 113, column: 1, scope: !6379)
!6393 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !535, file: !535, line: 368, type: !588, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6394)
!6394 = !{!6395}
!6395 = !DILocalVariable(name: "dev", arg: 1, scope: !6393, file: !535, line: 368, type: !564)
!6396 = !DILocation(line: 0, scope: !6393)
!6397 = !DILocation(line: 370, column: 2, scope: !6393)
!6398 = !DILocation(line: 371, column: 1, scope: !6393)
!6399 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !535, file: !535, line: 243, type: !6400, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6402)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{null, !103, !103, !564}
!6402 = !{!6403, !6404, !6405, !6406, !6408}
!6403 = !DILocalVariable(name: "min", arg: 1, scope: !6399, file: !535, line: 243, type: !103)
!6404 = !DILocalVariable(name: "max", arg: 2, scope: !6399, file: !535, line: 243, type: !103)
!6405 = !DILocalVariable(name: "dev", arg: 3, scope: !6399, file: !535, line: 243, type: !564)
!6406 = !DILocalVariable(name: "data", scope: !6399, file: !535, line: 245, type: !6407)
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!6408 = !DILocalVariable(name: "line", scope: !6399, file: !535, line: 246, type: !103)
!6409 = !DILocation(line: 0, scope: !6399)
!6410 = !DILocation(line: 245, column: 38, scope: !6399)
!6411 = !DILocation(line: 249, column: 24, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !535, line: 249, column: 2)
!6413 = distinct !DILexicalBlock(scope: !6399, file: !535, line: 249, column: 2)
!6414 = !DILocation(line: 249, column: 2, scope: !6413)
!6415 = !DILocation(line: 251, column: 7, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !535, line: 251, column: 7)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !535, line: 249, column: 39)
!6418 = !DILocation(line: 251, column: 7, scope: !6417)
!6419 = !DILocation(line: 253, column: 4, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !535, line: 251, column: 36)
!6421 = !DILocation(line: 256, column: 24, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6420, file: !535, line: 256, column: 8)
!6423 = !DILocation(line: 256, column: 9, scope: !6422)
!6424 = !DILocation(line: 256, column: 8, scope: !6420)
!6425 = !DILocation(line: 260, column: 43, scope: !6420)
!6426 = !DILocation(line: 260, column: 4, scope: !6420)
!6427 = !DILocation(line: 261, column: 3, scope: !6420)
!6428 = !DILocation(line: 249, column: 35, scope: !6412)
!6429 = distinct !{!6429, !6414, !6430}
!6430 = !DILocation(line: 262, column: 2, scope: !6413)
!6431 = !DILocation(line: 263, column: 1, scope: !6399)
!6432 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !535, file: !535, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6433)
!6433 = !{!6434}
!6434 = !DILocalVariable(name: "line", arg: 1, scope: !6432, file: !535, line: 158, type: !103)
!6435 = !DILocation(line: 0, scope: !6432)
!6436 = !DILocation(line: 170, column: 38, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !535, line: 160, column: 17)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !535, line: 160, column: 6)
!6439 = !DILocation(line: 170, column: 10, scope: !6437)
!6440 = !DILocation(line: 176, column: 1, scope: !6432)
!6441 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !535, file: !535, line: 183, type: !6442, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !103}
!6444 = !{!6445}
!6445 = !DILocalVariable(name: "line", arg: 1, scope: !6441, file: !535, line: 183, type: !103)
!6446 = !DILocation(line: 0, scope: !6441)
!6447 = !DILocation(line: 195, column: 28, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !535, line: 185, column: 17)
!6449 = distinct !DILexicalBlock(scope: !6441, file: !535, line: 185, column: 6)
!6450 = !DILocation(line: 195, column: 3, scope: !6448)
!6451 = !DILocation(line: 200, column: 1, scope: !6441)
!6452 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6453, file: !6453, line: 910, type: !4888, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6454)
!6453 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6454 = !{!6455}
!6455 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6452, file: !6453, line: 910, type: !121)
!6456 = !DILocation(line: 0, scope: !6452)
!6457 = !DILocation(line: 912, column: 3, scope: !6452)
!6458 = !DILocation(line: 913, column: 1, scope: !6452)
!6459 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6453, file: !6453, line: 834, type: !5805, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6460)
!6460 = !{!6461}
!6461 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6459, file: !6453, line: 834, type: !121)
!6462 = !DILocation(line: 0, scope: !6459)
!6463 = !DILocation(line: 836, column: 11, scope: !6459)
!6464 = !DILocation(line: 836, column: 40, scope: !6459)
!6465 = !DILocation(line: 836, column: 3, scope: !6459)
!6466 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !535, file: !535, line: 304, type: !588, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6467)
!6467 = !{!6468}
!6468 = !DILocalVariable(name: "dev", arg: 1, scope: !6466, file: !535, line: 304, type: !564)
!6469 = !DILocation(line: 0, scope: !6466)
!6470 = !DILocation(line: 306, column: 2, scope: !6466)
!6471 = !DILocation(line: 307, column: 1, scope: !6466)
!6472 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !535, file: !535, line: 299, type: !588, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6473)
!6473 = !{!6474}
!6474 = !DILocalVariable(name: "dev", arg: 1, scope: !6472, file: !535, line: 299, type: !564)
!6475 = !DILocation(line: 0, scope: !6472)
!6476 = !DILocation(line: 301, column: 2, scope: !6472)
!6477 = !DILocation(line: 302, column: 1, scope: !6472)
!6478 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !535, file: !535, line: 294, type: !588, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6479)
!6479 = !{!6480}
!6480 = !DILocalVariable(name: "dev", arg: 1, scope: !6478, file: !535, line: 294, type: !564)
!6481 = !DILocation(line: 0, scope: !6478)
!6482 = !DILocation(line: 296, column: 2, scope: !6478)
!6483 = !DILocation(line: 297, column: 1, scope: !6478)
!6484 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !535, file: !535, line: 397, type: !588, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6485)
!6485 = !{!6486}
!6486 = !DILocalVariable(name: "dev", arg: 1, scope: !6484, file: !535, line: 397, type: !564)
!6487 = !DILocation(line: 0, scope: !6484)
!6488 = !DILocation(line: 399, column: 2, scope: !6484)
!6489 = !DILocation(line: 400, column: 1, scope: !6484)
!6490 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !535, file: !535, line: 392, type: !588, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6491)
!6491 = !{!6492}
!6492 = !DILocalVariable(name: "dev", arg: 1, scope: !6490, file: !535, line: 392, type: !564)
!6493 = !DILocation(line: 0, scope: !6490)
!6494 = !DILocation(line: 394, column: 2, scope: !6490)
!6495 = !DILocation(line: 395, column: 1, scope: !6490)
!6496 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !535, file: !535, line: 289, type: !588, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6497)
!6497 = !{!6498}
!6498 = !DILocalVariable(name: "dev", arg: 1, scope: !6496, file: !535, line: 289, type: !564)
!6499 = !DILocation(line: 0, scope: !6496)
!6500 = !DILocation(line: 291, column: 2, scope: !6496)
!6501 = !DILocation(line: 292, column: 1, scope: !6496)
!6502 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !535, file: !535, line: 387, type: !588, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6503)
!6503 = !{!6504}
!6504 = !DILocalVariable(name: "dev", arg: 1, scope: !6502, file: !535, line: 387, type: !564)
!6505 = !DILocation(line: 0, scope: !6502)
!6506 = !DILocation(line: 389, column: 2, scope: !6502)
!6507 = !DILocation(line: 390, column: 1, scope: !6502)
!6508 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !535, file: !535, line: 382, type: !588, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6509)
!6509 = !{!6510}
!6510 = !DILocalVariable(name: "dev", arg: 1, scope: !6508, file: !535, line: 382, type: !564)
!6511 = !DILocation(line: 0, scope: !6508)
!6512 = !DILocation(line: 384, column: 2, scope: !6508)
!6513 = !DILocation(line: 385, column: 1, scope: !6508)
!6514 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !535, file: !535, line: 373, type: !588, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6515)
!6515 = !{!6516}
!6516 = !DILocalVariable(name: "dev", arg: 1, scope: !6514, file: !535, line: 373, type: !564)
!6517 = !DILocation(line: 0, scope: !6514)
!6518 = !DILocation(line: 375, column: 2, scope: !6514)
!6519 = !DILocation(line: 376, column: 1, scope: !6514)
!6520 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !535, file: !535, line: 284, type: !588, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6521)
!6521 = !{!6522}
!6522 = !DILocalVariable(name: "dev", arg: 1, scope: !6520, file: !535, line: 284, type: !564)
!6523 = !DILocation(line: 0, scope: !6520)
!6524 = !DILocation(line: 286, column: 2, scope: !6520)
!6525 = !DILocation(line: 287, column: 1, scope: !6520)
!6526 = distinct !DISubprogram(name: "stm32_exti_init", scope: !535, file: !535, line: 416, type: !562, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6527)
!6527 = !{!6528}
!6528 = !DILocalVariable(name: "dev", arg: 1, scope: !6526, file: !535, line: 416, type: !564)
!6529 = !DILocation(line: 0, scope: !6526)
!6530 = !DILocation(line: 418, column: 2, scope: !6526)
!6531 = !DILocation(line: 420, column: 2, scope: !6526)
!6532 = !DILocation(line: 0, scope: !587)
!6533 = !DILocation(line: 493, column: 2, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !587, file: !535, line: 493, column: 2)
!6535 = !DILocation(line: 497, column: 2, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !587, file: !535, line: 497, column: 2)
!6537 = !DILocation(line: 507, column: 2, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !587, file: !535, line: 507, column: 2)
!6539 = !DILocation(line: 512, column: 2, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !587, file: !535, line: 512, column: 2)
!6541 = !DILocation(line: 516, column: 2, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !587, file: !535, line: 516, column: 2)
!6543 = !DILocation(line: 523, column: 2, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !587, file: !535, line: 523, column: 2)
!6545 = !DILocation(line: 527, column: 2, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !587, file: !535, line: 527, column: 2)
!6547 = !DILocation(line: 581, column: 2, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !587, file: !535, line: 581, column: 2)
!6549 = !DILocation(line: 586, column: 2, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !587, file: !535, line: 586, column: 2)
!6551 = !DILocation(line: 591, column: 2, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !587, file: !535, line: 591, column: 2)
!6553 = !DILocation(line: 595, column: 2, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !587, file: !535, line: 595, column: 2)
!6555 = !DILocation(line: 607, column: 1, scope: !587)
!6556 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !535, file: !535, line: 112, type: !6442, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6557)
!6557 = !{!6558, !6559}
!6558 = !DILocalVariable(name: "line", arg: 1, scope: !6556, file: !535, line: 112, type: !103)
!6559 = !DILocalVariable(name: "irqnum", scope: !6556, file: !535, line: 114, type: !103)
!6560 = !DILocation(line: 0, scope: !6556)
!6561 = !DILocation(line: 121, column: 11, scope: !6556)
!6562 = !DILocation(line: 130, column: 26, scope: !6556)
!6563 = !DILocation(line: 130, column: 2, scope: !6556)
!6564 = !DILocation(line: 134, column: 2, scope: !6556)
!6565 = !DILocation(line: 135, column: 1, scope: !6556)
!6566 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6453, file: !6453, line: 268, type: !4888, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6567)
!6567 = !{!6568}
!6568 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6566, file: !6453, line: 268, type: !121)
!6569 = !DILocation(line: 0, scope: !6566)
!6570 = !DILocation(line: 270, column: 3, scope: !6566)
!6571 = !DILocation(line: 271, column: 1, scope: !6566)
!6572 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !535, file: !535, line: 137, type: !6442, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6573)
!6573 = !{!6574}
!6574 = !DILocalVariable(name: "line", arg: 1, scope: !6572, file: !535, line: 137, type: !103)
!6575 = !DILocation(line: 0, scope: !6572)
!6576 = !DILocation(line: 141, column: 11, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6572, file: !535, line: 141, column: 6)
!6578 = !DILocation(line: 141, column: 6, scope: !6572)
!6579 = !DILocation(line: 145, column: 28, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6577, file: !535, line: 141, column: 17)
!6581 = !DILocation(line: 145, column: 3, scope: !6580)
!6582 = !DILocation(line: 147, column: 2, scope: !6580)
!6583 = !DILocation(line: 151, column: 1, scope: !6572)
!6584 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6453, file: !6453, line: 309, type: !4888, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6585)
!6585 = !{!6586}
!6586 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6584, file: !6453, line: 309, type: !121)
!6587 = !DILocation(line: 0, scope: !6584)
!6588 = !DILocation(line: 311, column: 3, scope: !6584)
!6589 = !DILocation(line: 312, column: 1, scope: !6584)
!6590 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !535, file: !535, line: 202, type: !6591, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6593)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{null, !103, !103}
!6593 = !{!6594, !6595}
!6594 = !DILocalVariable(name: "line", arg: 1, scope: !6590, file: !535, line: 202, type: !103)
!6595 = !DILocalVariable(name: "trigger", arg: 2, scope: !6590, file: !535, line: 202, type: !103)
!6596 = !DILocation(line: 0, scope: !6590)
!6597 = !DILocation(line: 211, column: 2, scope: !6590)
!6598 = !DILocation(line: 213, column: 36, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6590, file: !535, line: 211, column: 19)
!6600 = !DILocation(line: 213, column: 3, scope: !6599)
!6601 = !DILocation(line: 214, column: 3, scope: !6599)
!6602 = !DILocation(line: 215, column: 3, scope: !6599)
!6603 = !DILocation(line: 217, column: 35, scope: !6599)
!6604 = !DILocation(line: 217, column: 3, scope: !6599)
!6605 = !DILocation(line: 218, column: 3, scope: !6599)
!6606 = !DILocation(line: 219, column: 3, scope: !6599)
!6607 = !DILocation(line: 221, column: 36, scope: !6599)
!6608 = !DILocation(line: 221, column: 3, scope: !6599)
!6609 = !DILocation(line: 222, column: 3, scope: !6599)
!6610 = !DILocation(line: 223, column: 3, scope: !6599)
!6611 = !DILocation(line: 225, column: 35, scope: !6599)
!6612 = !DILocation(line: 225, column: 3, scope: !6599)
!6613 = !DILocation(line: 226, column: 3, scope: !6599)
!6614 = !DILocation(line: 227, column: 3, scope: !6599)
!6615 = !DILocation(line: 232, column: 1, scope: !6590)
!6616 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6453, file: !6453, line: 573, type: !4888, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6617)
!6617 = !{!6618}
!6618 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6616, file: !6453, line: 573, type: !121)
!6619 = !DILocation(line: 0, scope: !6616)
!6620 = !DILocation(line: 575, column: 3, scope: !6616)
!6621 = !DILocation(line: 577, column: 1, scope: !6616)
!6622 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6453, file: !6453, line: 703, type: !4888, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6623)
!6623 = !{!6624}
!6624 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6622, file: !6453, line: 703, type: !121)
!6625 = !DILocation(line: 0, scope: !6622)
!6626 = !DILocation(line: 705, column: 3, scope: !6622)
!6627 = !DILocation(line: 706, column: 1, scope: !6622)
!6628 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6453, file: !6453, line: 529, type: !4888, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6629)
!6629 = !{!6630}
!6630 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6628, file: !6453, line: 529, type: !121)
!6631 = !DILocation(line: 0, scope: !6628)
!6632 = !DILocation(line: 531, column: 3, scope: !6628)
!6633 = !DILocation(line: 533, column: 1, scope: !6628)
!6634 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6453, file: !6453, line: 661, type: !4888, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6635)
!6635 = !{!6636}
!6636 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6634, file: !6453, line: 661, type: !121)
!6637 = !DILocation(line: 0, scope: !6634)
!6638 = !DILocation(line: 663, column: 3, scope: !6634)
!6639 = !DILocation(line: 664, column: 1, scope: !6634)
!6640 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !535, file: !535, line: 433, type: !6641, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6643)
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!103, !103, !575, !102}
!6643 = !{!6644, !6645, !6646, !6647, !6649}
!6644 = !DILocalVariable(name: "line", arg: 1, scope: !6640, file: !535, line: 433, type: !103)
!6645 = !DILocalVariable(name: "cb", arg: 2, scope: !6640, file: !535, line: 433, type: !575)
!6646 = !DILocalVariable(name: "arg", arg: 3, scope: !6640, file: !535, line: 433, type: !102)
!6647 = !DILocalVariable(name: "dev", scope: !6640, file: !535, line: 435, type: !6648)
!6648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!6649 = !DILocalVariable(name: "data", scope: !6640, file: !535, line: 436, type: !6407)
!6650 = !DILocation(line: 0, scope: !6640)
!6651 = !DILocation(line: 438, column: 21, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6640, file: !535, line: 438, column: 6)
!6653 = !DILocation(line: 438, column: 6, scope: !6652)
!6654 = !DILocation(line: 438, column: 6, scope: !6640)
!6655 = !DILocation(line: 442, column: 20, scope: !6640)
!6656 = !DILocation(line: 443, column: 17, scope: !6640)
!6657 = !DILocation(line: 443, column: 22, scope: !6640)
!6658 = !DILocation(line: 445, column: 2, scope: !6640)
!6659 = !DILocation(line: 446, column: 1, scope: !6640)
!6660 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !535, file: !535, line: 448, type: !6442, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6661)
!6661 = !{!6662, !6663, !6664}
!6662 = !DILocalVariable(name: "line", arg: 1, scope: !6660, file: !535, line: 448, type: !103)
!6663 = !DILocalVariable(name: "dev", scope: !6660, file: !535, line: 450, type: !6648)
!6664 = !DILocalVariable(name: "data", scope: !6660, file: !535, line: 451, type: !6407)
!6665 = !DILocation(line: 0, scope: !6660)
!6666 = !DILocation(line: 453, column: 17, scope: !6660)
!6667 = !DILocation(line: 453, column: 20, scope: !6660)
!6668 = !DILocation(line: 454, column: 17, scope: !6660)
!6669 = !DILocation(line: 454, column: 22, scope: !6660)
!6670 = !DILocation(line: 455, column: 1, scope: !6660)
!6671 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !727, file: !727, line: 183, type: !765, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6672)
!6672 = !{!6673, !6674, !6675, !6676, !6677}
!6673 = !DILocalVariable(name: "dev", arg: 1, scope: !6671, file: !727, line: 183, type: !756)
!6674 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6671, file: !727, line: 184, type: !767)
!6675 = !DILocalVariable(name: "pclken", scope: !6671, file: !727, line: 186, type: !717)
!6676 = !DILocalVariable(name: "reg", scope: !6671, file: !727, line: 187, type: !1310)
!6677 = !DILocalVariable(name: "reg_val", scope: !6671, file: !727, line: 188, type: !121)
!6678 = !DILocation(line: 0, scope: !6671)
!6679 = !DILocation(line: 192, column: 6, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6671, file: !727, line: 192, column: 6)
!6681 = !DILocation(line: 192, column: 6, scope: !6671)
!6682 = !DILocation(line: 197, column: 52, scope: !6671)
!6683 = !DILocation(line: 197, column: 8, scope: !6671)
!6684 = !DILocation(line: 198, column: 12, scope: !6671)
!6685 = !DILocation(line: 199, column: 21, scope: !6671)
!6686 = !DILocation(line: 199, column: 10, scope: !6671)
!6687 = !DILocation(line: 200, column: 7, scope: !6671)
!6688 = !DILocation(line: 202, column: 2, scope: !6671)
!6689 = !DILocation(line: 203, column: 1, scope: !6671)
!6690 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !727, file: !727, line: 205, type: !765, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6691)
!6691 = !{!6692, !6693, !6694, !6695, !6696}
!6692 = !DILocalVariable(name: "dev", arg: 1, scope: !6690, file: !727, line: 205, type: !756)
!6693 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6690, file: !727, line: 206, type: !767)
!6694 = !DILocalVariable(name: "pclken", scope: !6690, file: !727, line: 208, type: !717)
!6695 = !DILocalVariable(name: "reg", scope: !6690, file: !727, line: 209, type: !1310)
!6696 = !DILocalVariable(name: "reg_val", scope: !6690, file: !727, line: 210, type: !121)
!6697 = !DILocation(line: 0, scope: !6690)
!6698 = !DILocation(line: 214, column: 6, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6690, file: !727, line: 214, column: 6)
!6700 = !DILocation(line: 214, column: 6, scope: !6690)
!6701 = !DILocation(line: 219, column: 52, scope: !6690)
!6702 = !DILocation(line: 219, column: 8, scope: !6690)
!6703 = !DILocation(line: 220, column: 12, scope: !6690)
!6704 = !DILocation(line: 221, column: 22, scope: !6690)
!6705 = !DILocation(line: 221, column: 13, scope: !6690)
!6706 = !DILocation(line: 221, column: 10, scope: !6690)
!6707 = !DILocation(line: 222, column: 7, scope: !6690)
!6708 = !DILocation(line: 224, column: 2, scope: !6690)
!6709 = !DILocation(line: 225, column: 1, scope: !6690)
!6710 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !727, file: !727, line: 262, type: !781, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6711)
!6711 = !{!6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719}
!6712 = !DILocalVariable(name: "clock", arg: 1, scope: !6710, file: !727, line: 262, type: !756)
!6713 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6710, file: !727, line: 263, type: !767)
!6714 = !DILocalVariable(name: "rate", arg: 3, scope: !6710, file: !727, line: 264, type: !723)
!6715 = !DILocalVariable(name: "pclken", scope: !6710, file: !727, line: 266, type: !717)
!6716 = !DILocalVariable(name: "ahb_clock", scope: !6710, file: !727, line: 273, type: !121)
!6717 = !DILocalVariable(name: "apb1_clock", scope: !6710, file: !727, line: 274, type: !121)
!6718 = !DILocalVariable(name: "apb2_clock", scope: !6710, file: !727, line: 276, type: !121)
!6719 = !DILocalVariable(name: "ahb3_clock", scope: !6710, file: !727, line: 286, type: !121)
!6720 = !DILocation(line: 0, scope: !6710)
!6721 = !DILocation(line: 273, column: 23, scope: !6710)
!6722 = !DILocation(line: 299, column: 18, scope: !6710)
!6723 = !DILocation(line: 299, column: 2, scope: !6710)
!6724 = !DILocation(line: 274, column: 24, scope: !6710)
!6725 = !DILocation(line: 319, column: 3, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6710, file: !727, line: 299, column: 23)
!6727 = !DILocation(line: 276, column: 24, scope: !6710)
!6728 = !DILocation(line: 323, column: 3, scope: !6726)
!6729 = !DILocation(line: 346, column: 33, scope: !6726)
!6730 = !DILocation(line: 346, column: 11, scope: !6726)
!6731 = !DILocation(line: 350, column: 3, scope: !6726)
!6732 = !DILocation(line: 354, column: 33, scope: !6726)
!6733 = !DILocation(line: 354, column: 11, scope: !6726)
!6734 = !DILocation(line: 358, column: 3, scope: !6726)
!6735 = !DILocation(line: 374, column: 3, scope: !6726)
!6736 = !DILocation(line: 379, column: 3, scope: !6726)
!6737 = !DILocation(line: 0, scope: !6726)
!6738 = !DILocation(line: 396, column: 1, scope: !6710)
!6739 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !727, file: !727, line: 227, type: !797, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6740)
!6740 = !{!6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748}
!6741 = !DILocalVariable(name: "dev", arg: 1, scope: !6739, file: !727, line: 227, type: !756)
!6742 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6739, file: !727, line: 228, type: !767)
!6743 = !DILocalVariable(name: "data", arg: 3, scope: !6739, file: !727, line: 229, type: !102)
!6744 = !DILocalVariable(name: "pclken", scope: !6739, file: !727, line: 233, type: !717)
!6745 = !DILocalVariable(name: "reg", scope: !6739, file: !727, line: 234, type: !1310)
!6746 = !DILocalVariable(name: "reg_val", scope: !6739, file: !727, line: 235, type: !121)
!6747 = !DILocalVariable(name: "dt_val", scope: !6739, file: !727, line: 235, type: !121)
!6748 = !DILocalVariable(name: "err", scope: !6739, file: !727, line: 236, type: !103)
!6749 = !DILocation(line: 0, scope: !6739)
!6750 = !DILocation(line: 241, column: 30, scope: !6739)
!6751 = !DILocation(line: 241, column: 8, scope: !6739)
!6752 = !DILocation(line: 242, column: 10, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6739, file: !727, line: 242, column: 6)
!6754 = !DILocation(line: 242, column: 6, scope: !6739)
!6755 = !DILocation(line: 247, column: 11, scope: !6739)
!6756 = !DILocation(line: 248, column: 6, scope: !6739)
!6757 = !DILocation(line: 247, column: 44, scope: !6739)
!6758 = !DILocation(line: 250, column: 6, scope: !6739)
!6759 = !DILocation(line: 249, column: 52, scope: !6739)
!6760 = !DILocation(line: 249, column: 8, scope: !6739)
!6761 = !DILocation(line: 251, column: 12, scope: !6739)
!6762 = !DILocation(line: 252, column: 10, scope: !6739)
!6763 = !DILocation(line: 253, column: 7, scope: !6739)
!6764 = !DILocation(line: 255, column: 2, scope: !6739)
!6765 = !DILocation(line: 260, column: 1, scope: !6739)
!6766 = distinct !DISubprogram(name: "enabled_clock", scope: !727, file: !727, line: 100, type: !6767, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6769)
!6767 = !DISubroutineType(types: !6768)
!6768 = !{!103, !121}
!6769 = !{!6770, !6771}
!6770 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6766, file: !727, line: 100, type: !121)
!6771 = !DILocalVariable(name: "r", scope: !6766, file: !727, line: 102, type: !103)
!6772 = !DILocation(line: 0, scope: !6766)
!6773 = !DILocation(line: 104, column: 2, scope: !6766)
!6774 = !DILocation(line: 180, column: 2, scope: !6766)
!6775 = !DILocation(line: 181, column: 1, scope: !6766)
!6776 = distinct !DISubprogram(name: "get_bus_clock", scope: !727, file: !727, line: 79, type: !6777, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6779)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!121, !121, !121}
!6779 = !{!6780, !6781}
!6780 = !DILocalVariable(name: "clock", arg: 1, scope: !6776, file: !727, line: 79, type: !121)
!6781 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6776, file: !727, line: 79, type: !121)
!6782 = !DILocation(line: 0, scope: !6776)
!6783 = !DILocation(line: 81, column: 15, scope: !6776)
!6784 = !DILocation(line: 81, column: 2, scope: !6776)
!6785 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !727, file: !727, line: 68, type: !6786, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6788)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{!121, !121, !103, !103, !103}
!6788 = !{!6789, !6790, !6791, !6792}
!6789 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6785, file: !727, line: 68, type: !121)
!6790 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6785, file: !727, line: 69, type: !103)
!6791 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6785, file: !727, line: 70, type: !103)
!6792 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6785, file: !727, line: 71, type: !103)
!6793 = !DILocation(line: 0, scope: !6785)
!6794 = !DILocation(line: 75, column: 22, scope: !6785)
!6795 = !DILocation(line: 76, column: 13, scope: !6785)
!6796 = !DILocation(line: 75, column: 34, scope: !6785)
!6797 = !DILocation(line: 75, column: 2, scope: !6785)
!6798 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !727, file: !727, line: 641, type: !754, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6799)
!6799 = !{!6800, !6801, !6802}
!6800 = !DILocalVariable(name: "dev", arg: 1, scope: !6798, file: !727, line: 641, type: !756)
!6801 = !DILocalVariable(name: "old_flash_freq", scope: !6798, file: !727, line: 664, type: !121)
!6802 = !DILocalVariable(name: "new_flash_freq", scope: !6798, file: !727, line: 665, type: !121)
!6803 = !DILocation(line: 0, scope: !6798)
!6804 = !DILocation(line: 646, column: 2, scope: !6798)
!6805 = !DILocation(line: 667, column: 19, scope: !6798)
!6806 = !DILocation(line: 674, column: 21, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6798, file: !727, line: 674, column: 6)
!6808 = !DILocation(line: 674, column: 6, scope: !6798)
!6809 = !DILocation(line: 675, column: 3, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6807, file: !727, line: 674, column: 59)
!6811 = !DILocation(line: 676, column: 2, scope: !6810)
!6812 = !DILocation(line: 680, column: 2, scope: !6798)
!6813 = !DILocation(line: 683, column: 2, scope: !6798)
!6814 = !DILocation(line: 690, column: 3, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !727, line: 689, column: 9)
!6816 = distinct !DILexicalBlock(scope: !6798, file: !727, line: 685, column: 6)
!6817 = !DILocation(line: 695, column: 2, scope: !6798)
!6818 = !DILocation(line: 696, column: 2, scope: !6798)
!6819 = !DILocation(line: 696, column: 9, scope: !6798)
!6820 = !DILocation(line: 696, column: 34, scope: !6798)
!6821 = distinct !{!6821, !6818, !6822}
!6822 = !DILocation(line: 697, column: 2, scope: !6798)
!6823 = !DILocation(line: 720, column: 21, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6798, file: !727, line: 720, column: 6)
!6825 = !DILocation(line: 720, column: 6, scope: !6798)
!6826 = !DILocation(line: 721, column: 3, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !727, line: 720, column: 60)
!6828 = !DILocation(line: 722, column: 2, scope: !6827)
!6829 = !DILocation(line: 725, column: 18, scope: !6798)
!6830 = !DILocation(line: 728, column: 2, scope: !6798)
!6831 = !DILocation(line: 730, column: 2, scope: !6798)
!6832 = !DILocation(line: 745, column: 2, scope: !6798)
!6833 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6834, file: !6834, line: 3275, type: !4878, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6834 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6835 = !DILocation(line: 3277, column: 21, scope: !6833)
!6836 = !DILocation(line: 3277, column: 3, scope: !6833)
!6837 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !727, file: !727, line: 507, type: !2821, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6838 = !DILocation(line: 516, column: 4, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !727, line: 515, column: 10)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !727, line: 513, column: 7)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !727, line: 510, column: 37)
!6842 = distinct !DILexicalBlock(scope: !6837, file: !727, line: 510, column: 6)
!6843 = !DILocation(line: 526, column: 3, scope: !6841)
!6844 = !DILocation(line: 527, column: 3, scope: !6841)
!6845 = !DILocation(line: 527, column: 10, scope: !6841)
!6846 = !DILocation(line: 527, column: 31, scope: !6841)
!6847 = distinct !{!6847, !6844, !6848}
!6848 = !DILocation(line: 529, column: 3, scope: !6841)
!6849 = !DILocation(line: 583, column: 3, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !727, line: 577, column: 37)
!6851 = distinct !DILexicalBlock(scope: !6837, file: !727, line: 577, column: 6)
!6852 = !DILocation(line: 584, column: 3, scope: !6850)
!6853 = !DILocation(line: 584, column: 10, scope: !6850)
!6854 = !DILocation(line: 584, column: 31, scope: !6850)
!6855 = distinct !{!6855, !6852, !6856}
!6856 = !DILocation(line: 585, column: 3, scope: !6850)
!6857 = !DILocation(line: 627, column: 1, scope: !6837)
!6858 = distinct !DISubprogram(name: "set_up_plls", scope: !727, file: !727, line: 448, type: !2821, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6859 = !DILocation(line: 460, column: 6, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6858, file: !727, line: 460, column: 6)
!6861 = !DILocation(line: 460, column: 31, scope: !6860)
!6862 = !DILocation(line: 460, column: 6, scope: !6858)
!6863 = !DILocation(line: 461, column: 3, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !727, line: 460, column: 67)
!6865 = !DILocation(line: 462, column: 3, scope: !6864)
!6866 = !DILocation(line: 463, column: 2, scope: !6864)
!6867 = !DILocation(line: 464, column: 2, scope: !6858)
!6868 = !DILocation(line: 488, column: 2, scope: !6858)
!6869 = !DILocation(line: 492, column: 2, scope: !6858)
!6870 = !DILocation(line: 496, column: 2, scope: !6858)
!6871 = !DILocation(line: 499, column: 2, scope: !6858)
!6872 = !DILocation(line: 500, column: 2, scope: !6858)
!6873 = !DILocation(line: 500, column: 9, scope: !6858)
!6874 = !DILocation(line: 500, column: 30, scope: !6858)
!6875 = distinct !{!6875, !6872, !6876}
!6876 = !DILocation(line: 502, column: 2, scope: !6858)
!6877 = !DILocation(line: 505, column: 1, scope: !6858)
!6878 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6834, file: !6834, line: 3224, type: !4888, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6879)
!6879 = !{!6880}
!6880 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6878, file: !6834, line: 3224, type: !121)
!6881 = !DILocation(line: 0, scope: !6878)
!6882 = !DILocation(line: 3226, column: 3, scope: !6878)
!6883 = !DILocation(line: 3227, column: 1, scope: !6878)
!6884 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6834, file: !6834, line: 3188, type: !4888, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6885)
!6885 = !{!6886}
!6886 = !DILocalVariable(name: "Source", arg: 1, scope: !6884, file: !6834, line: 3188, type: !121)
!6887 = !DILocation(line: 0, scope: !6884)
!6888 = !DILocation(line: 3190, column: 3, scope: !6884)
!6889 = !DILocation(line: 3191, column: 1, scope: !6884)
!6890 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6834, file: !6834, line: 3204, type: !4878, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6891 = !DILocation(line: 3206, column: 21, scope: !6890)
!6892 = !DILocation(line: 3206, column: 3, scope: !6890)
!6893 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6834, file: !6834, line: 3240, type: !4888, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6894)
!6894 = !{!6895}
!6895 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6893, file: !6834, line: 3240, type: !121)
!6896 = !DILocation(line: 0, scope: !6893)
!6897 = !DILocation(line: 3242, column: 3, scope: !6893)
!6898 = !DILocation(line: 3243, column: 1, scope: !6893)
!6899 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6834, file: !6834, line: 3256, type: !4888, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6900)
!6900 = !{!6901}
!6901 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6899, file: !6834, line: 3256, type: !121)
!6902 = !DILocation(line: 0, scope: !6899)
!6903 = !DILocation(line: 3258, column: 3, scope: !6899)
!6904 = !DILocation(line: 3259, column: 1, scope: !6899)
!6905 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !727, file: !727, line: 409, type: !2821, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6906 = !DILocation(line: 412, column: 6, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6905, file: !727, line: 412, column: 6)
!6908 = !DILocation(line: 412, column: 27, scope: !6907)
!6909 = !DILocation(line: 412, column: 6, scope: !6905)
!6910 = !DILocation(line: 414, column: 3, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6907, file: !727, line: 412, column: 33)
!6912 = !DILocation(line: 415, column: 3, scope: !6911)
!6913 = !DILocation(line: 415, column: 10, scope: !6911)
!6914 = !DILocation(line: 415, column: 31, scope: !6911)
!6915 = distinct !{!6915, !6912, !6916}
!6916 = !DILocation(line: 417, column: 3, scope: !6911)
!6917 = !DILocation(line: 421, column: 2, scope: !6905)
!6918 = !DILocation(line: 422, column: 2, scope: !6905)
!6919 = !DILocation(line: 422, column: 9, scope: !6905)
!6920 = !DILocation(line: 422, column: 34, scope: !6905)
!6921 = distinct !{!6921, !6918, !6922}
!6922 = !DILocation(line: 423, column: 2, scope: !6905)
!6923 = !DILocation(line: 424, column: 1, scope: !6905)
!6924 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6834, file: !6834, line: 4195, type: !2821, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6925 = !DILocation(line: 4197, column: 3, scope: !6924)
!6926 = !DILocation(line: 4198, column: 1, scope: !6924)
!6927 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6834, file: !6834, line: 4184, type: !2821, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6928 = !DILocation(line: 4186, column: 3, scope: !6927)
!6929 = !DILocation(line: 4187, column: 1, scope: !6927)
!6930 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6834, file: !6834, line: 4205, type: !4878, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6931 = !DILocation(line: 4207, column: 11, scope: !6930)
!6932 = !DILocation(line: 4207, column: 44, scope: !6930)
!6933 = !DILocation(line: 4207, column: 3, scope: !6930)
!6934 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6834, file: !6834, line: 3007, type: !4878, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6935 = !DILocation(line: 3009, column: 11, scope: !6934)
!6936 = !DILocation(line: 3009, column: 44, scope: !6934)
!6937 = !DILocation(line: 3009, column: 3, scope: !6934)
!6938 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6834, file: !6834, line: 2987, type: !2821, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6939 = !DILocation(line: 2989, column: 3, scope: !6938)
!6940 = !DILocation(line: 2990, column: 1, scope: !6938)
!6941 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6834, file: !6834, line: 2939, type: !2821, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6942 = !DILocation(line: 2941, column: 3, scope: !6941)
!6943 = !DILocation(line: 2942, column: 1, scope: !6941)
!6944 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6834, file: !6834, line: 2949, type: !2821, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6945 = !DILocation(line: 2951, column: 3, scope: !6944)
!6946 = !DILocation(line: 2952, column: 1, scope: !6944)
!6947 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6834, file: !6834, line: 2969, type: !4878, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6948 = !DILocation(line: 2971, column: 11, scope: !6947)
!6949 = !DILocation(line: 2971, column: 44, scope: !6947)
!6950 = !DILocation(line: 2971, column: 3, scope: !6947)
!6951 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6834, file: !6834, line: 3143, type: !2821, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6952 = !DILocation(line: 3145, column: 3, scope: !6951)
!6953 = !DILocation(line: 3146, column: 1, scope: !6951)
!6954 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6834, file: !6834, line: 3163, type: !4878, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!6955 = !DILocation(line: 3165, column: 11, scope: !6954)
!6956 = !DILocation(line: 3165, column: 46, scope: !6954)
!6957 = !DILocation(line: 3165, column: 3, scope: !6954)
!6958 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !6959, file: !6959, line: 40, type: !4878, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !322)
!6959 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6960 = !DILocation(line: 45, column: 3, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6959, line: 44, column: 44)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6959, line: 44, column: 13)
!6963 = distinct !DILexicalBlock(scope: !6958, file: !6959, line: 42, column: 6)
!6964 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !6959, file: !6959, line: 56, type: !2821, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !322)
!6965 = !DILocation(line: 58, column: 2, scope: !6964)
!6966 = !DILocation(line: 62, column: 1, scope: !6964)
!6967 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6834, file: !6834, line: 4304, type: !6968, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !6970)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{null, !121, !121, !121, !121}
!6970 = !{!6971, !6972, !6973, !6974}
!6971 = !DILocalVariable(name: "Source", arg: 1, scope: !6967, file: !6834, line: 4304, type: !121)
!6972 = !DILocalVariable(name: "PLLM", arg: 2, scope: !6967, file: !6834, line: 4304, type: !121)
!6973 = !DILocalVariable(name: "PLLN", arg: 3, scope: !6967, file: !6834, line: 4304, type: !121)
!6974 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !6967, file: !6834, line: 4304, type: !121)
!6975 = !DILocation(line: 0, scope: !6967)
!6976 = !DILocation(line: 4306, column: 3, scope: !6967)
!6977 = !DILocation(line: 4308, column: 3, scope: !6967)
!6978 = !DILocation(line: 4310, column: 3, scope: !6967)
!6979 = !DILocation(line: 4312, column: 1, scope: !6967)
!6980 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !6959, file: !6959, line: 69, type: !2821, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !322)
!6981 = !DILocation(line: 72, column: 2, scope: !6980)
!6982 = !DILocation(line: 73, column: 1, scope: !6980)
!6983 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6984, file: !6984, line: 1185, type: !4888, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2608, retainedNodes: !6985)
!6984 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6985 = !{!6986, !6987}
!6986 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6983, file: !6984, line: 1185, type: !121)
!6987 = !DILocalVariable(name: "tmpreg", scope: !6983, file: !6984, line: 1187, type: !120)
!6988 = !DILocation(line: 0, scope: !6983)
!6989 = !DILocation(line: 1187, column: 3, scope: !6983)
!6990 = !DILocation(line: 1187, column: 17, scope: !6983)
!6991 = !DILocation(line: 1188, column: 3, scope: !6983)
!6992 = !DILocation(line: 1190, column: 12, scope: !6983)
!6993 = !DILocation(line: 1190, column: 10, scope: !6983)
!6994 = !DILocation(line: 1191, column: 9, scope: !6983)
!6995 = !DILocation(line: 1192, column: 1, scope: !6983)
!6996 = distinct !DISubprogram(name: "uart_console_init", scope: !858, file: !858, line: 588, type: !835, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !6997)
!6997 = !{!6998}
!6998 = !DILocalVariable(name: "arg", arg: 1, scope: !6996, file: !858, line: 588, type: !813)
!6999 = !DILocation(line: 0, scope: !6996)
!7000 = !DILocation(line: 593, column: 7, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !858, line: 593, column: 6)
!7002 = !DILocation(line: 593, column: 6, scope: !6996)
!7003 = !DILocation(line: 597, column: 2, scope: !6996)
!7004 = !DILocation(line: 599, column: 2, scope: !6996)
!7005 = !DILocation(line: 600, column: 1, scope: !6996)
!7006 = distinct !DISubprogram(name: "device_is_ready", scope: !7007, file: !7007, line: 47, type: !7008, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7010)
!7007 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!7008 = !DISubroutineType(types: !7009)
!7009 = !{!157, !813}
!7010 = !{!7011}
!7011 = !DILocalVariable(name: "dev", arg: 1, scope: !7006, file: !7007, line: 47, type: !813)
!7012 = !DILocation(line: 0, scope: !7006)
!7013 = !DILocation(line: 55, column: 2, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7006, file: !7007, line: 55, column: 2)
!7015 = !{i64 2155286370}
!7016 = !DILocation(line: 56, column: 9, scope: !7006)
!7017 = !DILocation(line: 56, column: 2, scope: !7006)
!7018 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !858, file: !858, line: 573, type: !2821, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !322)
!7019 = !DILocation(line: 576, column: 2, scope: !7018)
!7020 = !DILocation(line: 579, column: 2, scope: !7018)
!7021 = !DILocation(line: 581, column: 1, scope: !7018)
!7022 = distinct !DISubprogram(name: "console_out", scope: !858, file: !858, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7023)
!7023 = !{!7024}
!7024 = !DILocalVariable(name: "c", arg: 1, scope: !7022, file: !858, line: 77, type: !103)
!7025 = !DILocation(line: 0, scope: !7022)
!7026 = !DILocation(line: 89, column: 11, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7022, file: !858, line: 89, column: 6)
!7028 = !DILocation(line: 89, column: 6, scope: !7022)
!7029 = !DILocation(line: 90, column: 3, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7027, file: !858, line: 89, column: 17)
!7031 = !DILocation(line: 91, column: 2, scope: !7030)
!7032 = !DILocation(line: 92, column: 34, scope: !7022)
!7033 = !DILocation(line: 92, column: 2, scope: !7022)
!7034 = !DILocation(line: 94, column: 2, scope: !7022)
!7035 = distinct !DISubprogram(name: "uart_poll_out", scope: !7036, file: !7036, line: 95, type: !831, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7037)
!7036 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/hello_world")
!7037 = !{!7038, !7039}
!7038 = !DILocalVariable(name: "dev", arg: 1, scope: !7035, file: !7036, line: 95, type: !813)
!7039 = !DILocalVariable(name: "out_char", arg: 2, scope: !7035, file: !7036, line: 95, type: !155)
!7040 = !DILocation(line: 0, scope: !7035)
!7041 = !DILocation(line: 105, column: 2, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7035, file: !7036, line: 105, column: 2)
!7043 = !{i64 2155369761}
!7044 = !DILocation(line: 106, column: 2, scope: !7035)
!7045 = !DILocation(line: 107, column: 1, scope: !7035)
!7046 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !807, file: !807, line: 574, type: !831, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7047)
!7047 = !{!7048, !7049, !7050}
!7048 = !DILocalVariable(name: "dev", arg: 1, scope: !7046, file: !807, line: 574, type: !813)
!7049 = !DILocalVariable(name: "out_char", arg: 2, scope: !7046, file: !807, line: 575, type: !155)
!7050 = !DILocalVariable(name: "api", scope: !7046, file: !807, line: 577, type: !804)
!7051 = !DILocation(line: 0, scope: !7046)
!7052 = !DILocation(line: 578, column: 40, scope: !7046)
!7053 = !DILocation(line: 580, column: 7, scope: !7046)
!7054 = !DILocation(line: 580, column: 2, scope: !7046)
!7055 = !DILocation(line: 581, column: 1, scope: !7046)
!7056 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7008, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7057)
!7057 = !{!7058}
!7058 = !DILocalVariable(name: "dev", arg: 1, scope: !7056, file: !141, line: 730, type: !813)
!7059 = !DILocation(line: 0, scope: !7056)
!7060 = !DILocation(line: 732, column: 9, scope: !7056)
!7061 = !DILocation(line: 732, column: 2, scope: !7056)
!7062 = distinct !DISubprogram(name: "uart_register_input", scope: !858, file: !858, line: 560, type: !7063, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7108)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{null, !7065, !7065, !7105}
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7066, size: 32)
!7066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7067)
!7067 = !{!7068}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7066, file: !307, line: 2209, baseType: !7069, size: 128)
!7069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7070)
!7070 = !{!7071, !7084, !7086}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7069, file: !307, line: 1710, baseType: !7072, size: 64)
!7072 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7073, line: 46, baseType: !7074)
!7073 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7073, line: 41, size: 64, elements: !7075)
!7075 = !{!7076, !7083}
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7074, file: !7073, line: 42, baseType: !7077, size: 32)
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7073, line: 39, baseType: !7079)
!7079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7073, line: 35, size: 32, elements: !7080)
!7080 = !{!7081}
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7079, file: !7073, line: 36, baseType: !7082, size: 32)
!7082 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7073, line: 32, baseType: !121)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7074, file: !7073, line: 43, baseType: !7077, size: 32, offset: 32)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7069, file: !307, line: 1711, baseType: !7085, offset: 64)
!7085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7069, file: !307, line: 1712, baseType: !7087, size: 64, offset: 64)
!7087 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7088)
!7088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7089)
!7089 = !{!7090}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7088, file: !247, line: 232, baseType: !7091, size: 64)
!7091 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7092)
!7092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7093)
!7093 = !{!7094, !7100}
!7094 = !DIDerivedType(tag: DW_TAG_member, scope: !7092, file: !221, line: 38, baseType: !7095, size: 32)
!7095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7092, file: !221, line: 38, size: 32, elements: !7096)
!7096 = !{!7097, !7099}
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7095, file: !221, line: 39, baseType: !7098, size: 32)
!7098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7092, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7095, file: !221, line: 40, baseType: !7098, size: 32)
!7100 = !DIDerivedType(tag: DW_TAG_member, scope: !7092, file: !221, line: 42, baseType: !7101, size: 32, offset: 32)
!7101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7092, file: !221, line: 42, size: 32, elements: !7102)
!7102 = !{!7103, !7104}
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7101, file: !221, line: 43, baseType: !7098, size: 32)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7101, file: !221, line: 44, baseType: !7098, size: 32)
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7106, size: 32)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{!154, !995, !154}
!7108 = !{!7109, !7110, !7111}
!7109 = !DILocalVariable(name: "avail", arg: 1, scope: !7062, file: !858, line: 560, type: !7065)
!7110 = !DILocalVariable(name: "lines", arg: 2, scope: !7062, file: !858, line: 560, type: !7065)
!7111 = !DILocalVariable(name: "completion", arg: 3, scope: !7062, file: !858, line: 561, type: !7105)
!7112 = !DILocation(line: 0, scope: !7062)
!7113 = !DILocation(line: 566, column: 1, scope: !7062)
!7114 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1039, file: !1039, line: 523, type: !894, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7115)
!7115 = !{!7116, !7117, !7118, !7119, !7120}
!7116 = !DILocalVariable(name: "dev", arg: 1, scope: !7114, file: !1039, line: 523, type: !896)
!7117 = !DILocalVariable(name: "pin", arg: 2, scope: !7114, file: !1039, line: 524, type: !911)
!7118 = !DILocalVariable(name: "flags", arg: 3, scope: !7114, file: !1039, line: 524, type: !912)
!7119 = !DILocalVariable(name: "err", scope: !7114, file: !1039, line: 526, type: !103)
!7120 = !DILocalVariable(name: "pincfg", scope: !7114, file: !1039, line: 527, type: !103)
!7121 = !DILocation(line: 0, scope: !7114)
!7122 = !DILocation(line: 527, column: 2, scope: !7114)
!7123 = !DILocation(line: 532, column: 8, scope: !7114)
!7124 = !DILocation(line: 533, column: 10, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7114, file: !1039, line: 533, column: 6)
!7126 = !DILocation(line: 533, column: 6, scope: !7114)
!7127 = !DILocation(line: 543, column: 13, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7114, file: !1039, line: 543, column: 6)
!7129 = !DILocation(line: 543, column: 28, scope: !7128)
!7130 = !DILocation(line: 543, column: 6, scope: !7114)
!7131 = !DILocation(line: 544, column: 14, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !1039, line: 544, column: 7)
!7133 = distinct !DILexicalBlock(scope: !7128, file: !1039, line: 543, column: 34)
!7134 = !DILocation(line: 544, column: 39, scope: !7132)
!7135 = !DILocation(line: 544, column: 7, scope: !7133)
!7136 = !DILocation(line: 545, column: 38, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7132, file: !1039, line: 544, column: 45)
!7138 = !DILocation(line: 545, column: 4, scope: !7137)
!7139 = !DILocation(line: 546, column: 3, scope: !7137)
!7140 = !DILocation(line: 546, column: 21, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7132, file: !1039, line: 546, column: 14)
!7142 = !DILocation(line: 546, column: 45, scope: !7141)
!7143 = !DILocation(line: 546, column: 14, scope: !7132)
!7144 = !DILocation(line: 547, column: 40, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !1039, line: 546, column: 51)
!7146 = !DILocation(line: 547, column: 4, scope: !7145)
!7147 = !DILocation(line: 548, column: 3, scope: !7145)
!7148 = !DILocation(line: 551, column: 32, scope: !7114)
!7149 = !DILocation(line: 551, column: 37, scope: !7114)
!7150 = !DILocation(line: 551, column: 2, scope: !7114)
!7151 = !DILocation(line: 554, column: 6, scope: !7114)
!7152 = !DILocation(line: 562, column: 1, scope: !7114)
!7153 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1039, file: !1039, line: 410, type: !7154, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7156)
!7154 = !DISubroutineType(types: !7155)
!7155 = !{!103, !896, !723}
!7156 = !{!7157, !7158, !7159, !7161}
!7157 = !DILocalVariable(name: "dev", arg: 1, scope: !7153, file: !1039, line: 410, type: !896)
!7158 = !DILocalVariable(name: "value", arg: 2, scope: !7153, file: !1039, line: 410, type: !723)
!7159 = !DILocalVariable(name: "cfg", scope: !7153, file: !1039, line: 412, type: !7160)
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!7161 = !DILocalVariable(name: "gpio", scope: !7153, file: !1039, line: 413, type: !969)
!7162 = !DILocation(line: 0, scope: !7153)
!7163 = !DILocation(line: 412, column: 45, scope: !7153)
!7164 = !DILocation(line: 413, column: 44, scope: !7153)
!7165 = !DILocation(line: 415, column: 11, scope: !7153)
!7166 = !DILocation(line: 415, column: 9, scope: !7153)
!7167 = !DILocation(line: 417, column: 2, scope: !7153)
!7168 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1039, file: !1039, line: 420, type: !921, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7169)
!7169 = !{!7170, !7171, !7172, !7173, !7174, !7175}
!7170 = !DILocalVariable(name: "dev", arg: 1, scope: !7168, file: !1039, line: 420, type: !896)
!7171 = !DILocalVariable(name: "mask", arg: 2, scope: !7168, file: !1039, line: 421, type: !923)
!7172 = !DILocalVariable(name: "value", arg: 3, scope: !7168, file: !1039, line: 422, type: !918)
!7173 = !DILocalVariable(name: "cfg", scope: !7168, file: !1039, line: 424, type: !7160)
!7174 = !DILocalVariable(name: "gpio", scope: !7168, file: !1039, line: 425, type: !969)
!7175 = !DILocalVariable(name: "port_value", scope: !7168, file: !1039, line: 426, type: !121)
!7176 = !DILocation(line: 0, scope: !7168)
!7177 = !DILocation(line: 424, column: 45, scope: !7168)
!7178 = !DILocation(line: 425, column: 44, scope: !7168)
!7179 = !DILocation(line: 430, column: 15, scope: !7168)
!7180 = !DILocation(line: 431, column: 46, scope: !7168)
!7181 = !DILocation(line: 431, column: 44, scope: !7168)
!7182 = !DILocation(line: 431, column: 61, scope: !7168)
!7183 = !DILocation(line: 431, column: 53, scope: !7168)
!7184 = !DILocation(line: 431, column: 2, scope: !7168)
!7185 = !DILocation(line: 435, column: 2, scope: !7168)
!7186 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1039, file: !1039, line: 438, type: !926, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7187)
!7187 = !{!7188, !7189, !7190, !7191}
!7188 = !DILocalVariable(name: "dev", arg: 1, scope: !7186, file: !1039, line: 438, type: !896)
!7189 = !DILocalVariable(name: "pins", arg: 2, scope: !7186, file: !1039, line: 439, type: !923)
!7190 = !DILocalVariable(name: "cfg", scope: !7186, file: !1039, line: 441, type: !7160)
!7191 = !DILocalVariable(name: "gpio", scope: !7186, file: !1039, line: 442, type: !969)
!7192 = !DILocation(line: 0, scope: !7186)
!7193 = !DILocation(line: 441, column: 45, scope: !7186)
!7194 = !DILocation(line: 442, column: 44, scope: !7186)
!7195 = !DILocation(line: 448, column: 2, scope: !7186)
!7196 = !DILocation(line: 450, column: 2, scope: !7186)
!7197 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1039, file: !1039, line: 453, type: !926, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7198)
!7198 = !{!7199, !7200, !7201, !7202}
!7199 = !DILocalVariable(name: "dev", arg: 1, scope: !7197, file: !1039, line: 453, type: !896)
!7200 = !DILocalVariable(name: "pins", arg: 2, scope: !7197, file: !1039, line: 454, type: !923)
!7201 = !DILocalVariable(name: "cfg", scope: !7197, file: !1039, line: 456, type: !7160)
!7202 = !DILocalVariable(name: "gpio", scope: !7197, file: !1039, line: 457, type: !969)
!7203 = !DILocation(line: 0, scope: !7197)
!7204 = !DILocation(line: 456, column: 45, scope: !7197)
!7205 = !DILocation(line: 457, column: 44, scope: !7197)
!7206 = !DILocation(line: 467, column: 2, scope: !7197)
!7207 = !DILocation(line: 470, column: 2, scope: !7197)
!7208 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1039, file: !1039, line: 473, type: !926, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7209)
!7209 = !{!7210, !7211, !7212, !7213}
!7210 = !DILocalVariable(name: "dev", arg: 1, scope: !7208, file: !1039, line: 473, type: !896)
!7211 = !DILocalVariable(name: "pins", arg: 2, scope: !7208, file: !1039, line: 474, type: !923)
!7212 = !DILocalVariable(name: "cfg", scope: !7208, file: !1039, line: 476, type: !7160)
!7213 = !DILocalVariable(name: "gpio", scope: !7208, file: !1039, line: 477, type: !969)
!7214 = !DILocation(line: 0, scope: !7208)
!7215 = !DILocation(line: 476, column: 45, scope: !7208)
!7216 = !DILocation(line: 477, column: 44, scope: !7208)
!7217 = !DILocation(line: 484, column: 2, scope: !7208)
!7218 = !DILocation(line: 487, column: 2, scope: !7208)
!7219 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1039, file: !1039, line: 594, type: !932, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7220)
!7220 = !{!7221, !7222, !7223, !7224, !7225, !7226, !7228, !7229, !7230}
!7221 = !DILocalVariable(name: "dev", arg: 1, scope: !7219, file: !1039, line: 594, type: !896)
!7222 = !DILocalVariable(name: "pin", arg: 2, scope: !7219, file: !1039, line: 595, type: !911)
!7223 = !DILocalVariable(name: "mode", arg: 3, scope: !7219, file: !1039, line: 596, type: !870)
!7224 = !DILocalVariable(name: "trig", arg: 4, scope: !7219, file: !1039, line: 597, type: !876)
!7225 = !DILocalVariable(name: "cfg", scope: !7219, file: !1039, line: 599, type: !7160)
!7226 = !DILocalVariable(name: "data", scope: !7219, file: !1039, line: 600, type: !7227)
!7227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!7228 = !DILocalVariable(name: "edge", scope: !7219, file: !1039, line: 601, type: !103)
!7229 = !DILocalVariable(name: "err", scope: !7219, file: !1039, line: 602, type: !103)
!7230 = !DILabel(scope: !7219, name: "exit", file: !1039, line: 643)
!7231 = !DILocation(line: 0, scope: !7219)
!7232 = !DILocation(line: 599, column: 45, scope: !7219)
!7233 = !DILocation(line: 604, column: 6, scope: !7219)
!7234 = !DILocation(line: 605, column: 34, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !1039, line: 605, column: 7)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !1039, line: 604, column: 38)
!7237 = distinct !DILexicalBlock(scope: !7219, file: !1039, line: 604, column: 6)
!7238 = !DILocation(line: 605, column: 7, scope: !7235)
!7239 = !DILocation(line: 605, column: 47, scope: !7235)
!7240 = !DILocation(line: 605, column: 39, scope: !7235)
!7241 = !DILocation(line: 605, column: 7, scope: !7236)
!7242 = !DILocation(line: 606, column: 4, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7235, file: !1039, line: 605, column: 53)
!7244 = !DILocation(line: 607, column: 4, scope: !7243)
!7245 = !DILocation(line: 608, column: 4, scope: !7243)
!7246 = !DILocation(line: 609, column: 3, scope: !7243)
!7247 = !DILocation(line: 600, column: 38, scope: !7219)
!7248 = !DILocation(line: 620, column: 30, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7219, file: !1039, line: 620, column: 6)
!7250 = !DILocation(line: 620, column: 6, scope: !7249)
!7251 = !DILocation(line: 620, column: 57, scope: !7249)
!7252 = !DILocation(line: 620, column: 6, scope: !7219)
!7253 = !DILocation(line: 625, column: 29, scope: !7219)
!7254 = !DILocation(line: 625, column: 2, scope: !7219)
!7255 = !DILocation(line: 627, column: 2, scope: !7219)
!7256 = !DILocation(line: 630, column: 3, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7219, file: !1039, line: 627, column: 16)
!7258 = !DILocation(line: 633, column: 3, scope: !7257)
!7259 = !DILocation(line: 636, column: 3, scope: !7257)
!7260 = !DILocation(line: 639, column: 2, scope: !7219)
!7261 = !DILocation(line: 641, column: 2, scope: !7219)
!7262 = !DILocation(line: 643, column: 1, scope: !7219)
!7263 = !DILocation(line: 644, column: 2, scope: !7219)
!7264 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1039, file: !1039, line: 647, type: !936, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7265)
!7265 = !{!7266, !7267, !7268, !7269}
!7266 = !DILocalVariable(name: "dev", arg: 1, scope: !7264, file: !1039, line: 647, type: !896)
!7267 = !DILocalVariable(name: "callback", arg: 2, scope: !7264, file: !1039, line: 648, type: !938)
!7268 = !DILocalVariable(name: "set", arg: 3, scope: !7264, file: !1039, line: 649, type: !157)
!7269 = !DILocalVariable(name: "data", scope: !7264, file: !1039, line: 651, type: !7227)
!7270 = !DILocation(line: 0, scope: !7264)
!7271 = !DILocation(line: 651, column: 38, scope: !7264)
!7272 = !DILocation(line: 653, column: 37, scope: !7264)
!7273 = !DILocation(line: 653, column: 9, scope: !7264)
!7274 = !DILocation(line: 653, column: 2, scope: !7264)
!7275 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7276, file: !7276, line: 38, type: !7277, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7280)
!7276 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7277 = !DISubroutineType(types: !7278)
!7278 = !{!103, !7279, !938, !157}
!7279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!7280 = !{!7281, !7282, !7283}
!7281 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7275, file: !7276, line: 38, type: !7279)
!7282 = !DILocalVariable(name: "callback", arg: 2, scope: !7275, file: !7276, line: 39, type: !938)
!7283 = !DILocalVariable(name: "set", arg: 3, scope: !7275, file: !7276, line: 40, type: !157)
!7284 = !DILocation(line: 0, scope: !7275)
!7285 = !DILocation(line: 45, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7275, file: !7276, line: 45, column: 6)
!7287 = !DILocation(line: 45, column: 6, scope: !7275)
!7288 = !DILocation(line: 46, column: 56, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !7276, line: 46, column: 7)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !7276, line: 45, column: 38)
!7291 = !DILocation(line: 46, column: 8, scope: !7289)
!7292 = !DILocation(line: 46, column: 7, scope: !7290)
!7293 = !DILocation(line: 51, column: 13, scope: !7286)
!7294 = !DILocation(line: 56, column: 43, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !7276, line: 55, column: 11)
!7296 = distinct !DILexicalBlock(scope: !7275, file: !7276, line: 55, column: 6)
!7297 = !DILocation(line: 56, column: 3, scope: !7295)
!7298 = !DILocation(line: 57, column: 2, scope: !7295)
!7299 = !DILocation(line: 60, column: 1, scope: !7275)
!7300 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !943, file: !943, line: 261, type: !7301, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7303)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!157, !7279}
!7303 = !{!7304}
!7304 = !DILocalVariable(name: "list", arg: 1, scope: !7300, file: !943, line: 261, type: !7279)
!7305 = !DILocation(line: 0, scope: !7300)
!7306 = !DILocation(line: 261, column: 1, scope: !7300)
!7307 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !943, file: !943, line: 417, type: !7308, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7310)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{!157, !7279, !1112}
!7310 = !{!7311, !7312, !7313, !7314}
!7311 = !DILocalVariable(name: "list", arg: 1, scope: !7307, file: !943, line: 417, type: !7279)
!7312 = !DILocalVariable(name: "node", arg: 2, scope: !7307, file: !943, line: 417, type: !1112)
!7313 = !DILocalVariable(name: "prev", scope: !7307, file: !943, line: 417, type: !1112)
!7314 = !DILocalVariable(name: "test", scope: !7307, file: !943, line: 417, type: !1112)
!7315 = !DILocation(line: 0, scope: !7307)
!7316 = !DILocation(line: 417, column: 1, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7307, file: !943, line: 417, column: 1)
!7318 = !DILocation(line: 417, column: 1, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7317, file: !943, line: 417, column: 1)
!7320 = !DILocation(line: 417, column: 1, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7322, file: !943, line: 417, column: 1)
!7322 = distinct !DILexicalBlock(scope: !7319, file: !943, line: 417, column: 1)
!7323 = !DILocation(line: 417, column: 1, scope: !7322)
!7324 = distinct !{!7324, !7316, !7316}
!7325 = !DILocation(line: 417, column: 1, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7321, file: !943, line: 417, column: 1)
!7327 = !DILocation(line: 417, column: 1, scope: !7307)
!7328 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !943, file: !943, line: 298, type: !7329, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7331)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{null, !7279, !1112}
!7331 = !{!7332, !7333}
!7332 = !DILocalVariable(name: "list", arg: 1, scope: !7328, file: !943, line: 298, type: !7279)
!7333 = !DILocalVariable(name: "node", arg: 2, scope: !7328, file: !943, line: 298, type: !1112)
!7334 = !DILocation(line: 0, scope: !7328)
!7335 = !DILocation(line: 298, column: 1, scope: !7328)
!7336 = !DILocation(line: 298, column: 1, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7328, file: !943, line: 298, column: 1)
!7338 = !DILocation(line: 298, column: 1, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7337, file: !943, line: 298, column: 1)
!7340 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !943, file: !943, line: 231, type: !7341, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7343)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!1112, !7279}
!7343 = !{!7344}
!7344 = !DILocalVariable(name: "list", arg: 1, scope: !7340, file: !943, line: 231, type: !7279)
!7345 = !DILocation(line: 0, scope: !7340)
!7346 = !DILocation(line: 233, column: 15, scope: !7340)
!7347 = !DILocation(line: 233, column: 2, scope: !7340)
!7348 = distinct !DISubprogram(name: "z_snode_next_set", scope: !943, file: !943, line: 209, type: !7349, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7351)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !1112, !1112}
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "parent", arg: 1, scope: !7348, file: !943, line: 209, type: !1112)
!7353 = !DILocalVariable(name: "child", arg: 2, scope: !7348, file: !943, line: 209, type: !1112)
!7354 = !DILocation(line: 0, scope: !7348)
!7355 = !DILocation(line: 211, column: 10, scope: !7348)
!7356 = !DILocation(line: 211, column: 15, scope: !7348)
!7357 = !DILocation(line: 212, column: 1, scope: !7348)
!7358 = distinct !DISubprogram(name: "z_slist_head_set", scope: !943, file: !943, line: 214, type: !7329, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7359)
!7359 = !{!7360, !7361}
!7360 = !DILocalVariable(name: "list", arg: 1, scope: !7358, file: !943, line: 214, type: !7279)
!7361 = !DILocalVariable(name: "node", arg: 2, scope: !7358, file: !943, line: 214, type: !1112)
!7362 = !DILocation(line: 0, scope: !7358)
!7363 = !DILocation(line: 216, column: 8, scope: !7358)
!7364 = !DILocation(line: 216, column: 13, scope: !7358)
!7365 = !DILocation(line: 217, column: 1, scope: !7358)
!7366 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !943, file: !943, line: 243, type: !7341, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7367)
!7367 = !{!7368}
!7368 = !DILocalVariable(name: "list", arg: 1, scope: !7366, file: !943, line: 243, type: !7279)
!7369 = !DILocation(line: 0, scope: !7366)
!7370 = !DILocation(line: 245, column: 15, scope: !7366)
!7371 = !DILocation(line: 245, column: 2, scope: !7366)
!7372 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !943, file: !943, line: 219, type: !7329, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7373)
!7373 = !{!7374, !7375}
!7374 = !DILocalVariable(name: "list", arg: 1, scope: !7372, file: !943, line: 219, type: !7279)
!7375 = !DILocalVariable(name: "node", arg: 2, scope: !7372, file: !943, line: 219, type: !1112)
!7376 = !DILocation(line: 0, scope: !7372)
!7377 = !DILocation(line: 221, column: 8, scope: !7372)
!7378 = !DILocation(line: 221, column: 13, scope: !7372)
!7379 = !DILocation(line: 222, column: 1, scope: !7372)
!7380 = distinct !DISubprogram(name: "sys_slist_remove", scope: !943, file: !943, line: 401, type: !7381, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7383)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{null, !7279, !1112, !1112}
!7383 = !{!7384, !7385, !7386}
!7384 = !DILocalVariable(name: "list", arg: 1, scope: !7380, file: !943, line: 401, type: !7279)
!7385 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7380, file: !943, line: 401, type: !1112)
!7386 = !DILocalVariable(name: "node", arg: 3, scope: !7380, file: !943, line: 401, type: !1112)
!7387 = !DILocation(line: 0, scope: !7380)
!7388 = !DILocation(line: 401, column: 1, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7380, file: !943, line: 401, column: 1)
!7390 = !DILocation(line: 0, scope: !7389)
!7391 = !DILocation(line: 401, column: 1, scope: !7380)
!7392 = !DILocation(line: 401, column: 1, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7389, file: !943, line: 401, column: 1)
!7394 = !DILocation(line: 401, column: 1, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7393, file: !943, line: 401, column: 1)
!7396 = !DILocation(line: 401, column: 1, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7395, file: !943, line: 401, column: 1)
!7398 = !DILocation(line: 401, column: 1, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7389, file: !943, line: 401, column: 1)
!7400 = !DILocation(line: 401, column: 1, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7399, file: !943, line: 401, column: 1)
!7402 = !DILocation(line: 401, column: 1, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7401, file: !943, line: 401, column: 1)
!7404 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !943, file: !943, line: 285, type: !7405, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7407)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!1112, !1112}
!7407 = !{!7408}
!7408 = !DILocalVariable(name: "node", arg: 1, scope: !7404, file: !943, line: 285, type: !1112)
!7409 = !DILocation(line: 0, scope: !7404)
!7410 = !DILocation(line: 285, column: 1, scope: !7404)
!7411 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !943, file: !943, line: 274, type: !7405, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7412)
!7412 = !{!7413}
!7413 = !DILocalVariable(name: "node", arg: 1, scope: !7411, file: !943, line: 274, type: !1112)
!7414 = !DILocation(line: 0, scope: !7411)
!7415 = !DILocation(line: 274, column: 1, scope: !7411)
!7416 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !943, file: !943, line: 204, type: !7405, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7417)
!7417 = !{!7418}
!7418 = !DILocalVariable(name: "node", arg: 1, scope: !7416, file: !943, line: 204, type: !1112)
!7419 = !DILocation(line: 0, scope: !7416)
!7420 = !DILocation(line: 206, column: 15, scope: !7416)
!7421 = !DILocation(line: 206, column: 2, scope: !7416)
!7422 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1039, file: !1039, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7423)
!7423 = !{!7424, !7425, !7426}
!7424 = !DILocalVariable(name: "pin", arg: 1, scope: !7422, file: !1039, line: 342, type: !103)
!7425 = !DILocalVariable(name: "line", scope: !7422, file: !1039, line: 344, type: !121)
!7426 = !DILocalVariable(name: "port", scope: !7422, file: !1039, line: 345, type: !103)
!7427 = !DILocation(line: 0, scope: !7422)
!7428 = !DILocation(line: 344, column: 18, scope: !7422)
!7429 = !{i32 983040, i32 0}
!7430 = !DILocation(line: 356, column: 9, scope: !7422)
!7431 = !DILocation(line: 370, column: 2, scope: !7422)
!7432 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1039, file: !1039, line: 37, type: !578, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7433)
!7433 = !{!7434, !7435, !7436}
!7434 = !DILocalVariable(name: "line", arg: 1, scope: !7432, file: !1039, line: 37, type: !103)
!7435 = !DILocalVariable(name: "arg", arg: 2, scope: !7432, file: !1039, line: 37, type: !102)
!7436 = !DILocalVariable(name: "data", scope: !7432, file: !1039, line: 39, type: !7227)
!7437 = !DILocation(line: 0, scope: !7432)
!7438 = !DILocation(line: 41, column: 29, scope: !7432)
!7439 = !DILocation(line: 41, column: 39, scope: !7432)
!7440 = !DILocation(line: 41, column: 44, scope: !7432)
!7441 = !DILocation(line: 41, column: 2, scope: !7432)
!7442 = !DILocation(line: 42, column: 1, scope: !7432)
!7443 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1039, file: !1039, line: 376, type: !7444, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7446)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{!103, !103, !103}
!7446 = !{!7447, !7448, !7449, !7451, !7452}
!7447 = !DILocalVariable(name: "port", arg: 1, scope: !7443, file: !1039, line: 376, type: !103)
!7448 = !DILocalVariable(name: "pin", arg: 2, scope: !7443, file: !1039, line: 376, type: !103)
!7449 = !DILocalVariable(name: "clk", scope: !7443, file: !1039, line: 386, type: !7450)
!7450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!7451 = !DILocalVariable(name: "pclken", scope: !7443, file: !1039, line: 387, type: !1155)
!7452 = !DILocalVariable(name: "ret", scope: !7443, file: !1039, line: 396, type: !103)
!7453 = !DILocation(line: 0, scope: !7443)
!7454 = !DILocation(line: 387, column: 2, scope: !7443)
!7455 = !DILocation(line: 387, column: 22, scope: !7443)
!7456 = !DILocation(line: 399, column: 8, scope: !7443)
!7457 = !DILocation(line: 400, column: 10, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7443, file: !1039, line: 400, column: 6)
!7459 = !DILocation(line: 400, column: 6, scope: !7443)
!7460 = !DILocation(line: 405, column: 2, scope: !7443)
!7461 = !DILocation(line: 407, column: 2, scope: !7443)
!7462 = !DILocation(line: 408, column: 1, scope: !7443)
!7463 = distinct !DISubprogram(name: "clock_control_on", scope: !671, file: !671, line: 123, type: !1004, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7464)
!7464 = !{!7465, !7466, !7467}
!7465 = !DILocalVariable(name: "dev", arg: 1, scope: !7463, file: !671, line: 123, type: !896)
!7466 = !DILocalVariable(name: "sys", arg: 2, scope: !7463, file: !671, line: 124, type: !767)
!7467 = !DILocalVariable(name: "api", scope: !7463, file: !671, line: 126, type: !997)
!7468 = !DILocation(line: 0, scope: !7463)
!7469 = !DILocation(line: 127, column: 49, scope: !7463)
!7470 = !DILocation(line: 129, column: 14, scope: !7463)
!7471 = !DILocation(line: 129, column: 9, scope: !7463)
!7472 = !DILocation(line: 129, column: 2, scope: !7463)
!7473 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1039, file: !1039, line: 311, type: !6591, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7474)
!7474 = !{!7475, !7476, !7477}
!7475 = !DILocalVariable(name: "port", arg: 1, scope: !7473, file: !1039, line: 311, type: !103)
!7476 = !DILocalVariable(name: "pin", arg: 2, scope: !7473, file: !1039, line: 311, type: !103)
!7477 = !DILocalVariable(name: "line", scope: !7473, file: !1039, line: 313, type: !121)
!7478 = !DILocation(line: 0, scope: !7473)
!7479 = !DILocation(line: 313, column: 18, scope: !7473)
!7480 = !DILocation(line: 337, column: 2, scope: !7473)
!7481 = !DILocation(line: 340, column: 1, scope: !7473)
!7482 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1039, file: !1039, line: 295, type: !7483, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!121, !103}
!7485 = !{!7486}
!7486 = !DILocalVariable(name: "pin", arg: 1, scope: !7482, file: !1039, line: 295, type: !103)
!7487 = !DILocation(line: 0, scope: !7482)
!7488 = !DILocation(line: 307, column: 46, scope: !7482)
!7489 = !DILocation(line: 307, column: 27, scope: !7482)
!7490 = !DILocation(line: 307, column: 32, scope: !7482)
!7491 = !DILocation(line: 307, column: 14, scope: !7482)
!7492 = !DILocation(line: 307, column: 39, scope: !7482)
!7493 = !DILocation(line: 307, column: 2, scope: !7482)
!7494 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4644, file: !4644, line: 671, type: !7495, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7497)
!7495 = !DISubroutineType(types: !7496)
!7496 = !{null, !121, !121}
!7497 = !{!7498, !7499}
!7498 = !DILocalVariable(name: "Port", arg: 1, scope: !7494, file: !4644, line: 671, type: !121)
!7499 = !DILocalVariable(name: "Line", arg: 2, scope: !7494, file: !4644, line: 671, type: !121)
!7500 = !DILocation(line: 0, scope: !7494)
!7501 = !DILocation(line: 673, column: 3, scope: !7494)
!7502 = !DILocalVariable(name: "value", arg: 1, scope: !7503, file: !4797, line: 373, type: !121)
!7503 = distinct !DISubprogram(name: "__RBIT", scope: !4797, file: !4797, line: 373, type: !5805, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7504)
!7504 = !{!7502, !7505}
!7505 = !DILocalVariable(name: "result", scope: !7503, file: !4797, line: 375, type: !121)
!7506 = !DILocation(line: 0, scope: !7503, inlinedAt: !7507)
!7507 = distinct !DILocation(line: 673, column: 3, scope: !7494)
!7508 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7507)
!7509 = !{i64 3730452}
!7510 = !DILocalVariable(name: "value", arg: 1, scope: !7511, file: !4797, line: 403, type: !121)
!7511 = distinct !DISubprogram(name: "__CLZ", scope: !4797, file: !4797, line: 403, type: !7512, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7514)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{!154, !121}
!7514 = !{!7510}
!7515 = !DILocation(line: 0, scope: !7511, inlinedAt: !7516)
!7516 = distinct !DILocation(line: 673, column: 3, scope: !7494)
!7517 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7516)
!7518 = !DILocation(line: 674, column: 1, scope: !7494)
!7519 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7276, file: !7276, line: 69, type: !7520, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7522)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !7279, !896, !121}
!7522 = !{!7523, !7524, !7525, !7526, !7527}
!7523 = !DILocalVariable(name: "list", arg: 1, scope: !7519, file: !7276, line: 69, type: !7279)
!7524 = !DILocalVariable(name: "port", arg: 2, scope: !7519, file: !7276, line: 70, type: !896)
!7525 = !DILocalVariable(name: "pins", arg: 3, scope: !7519, file: !7276, line: 71, type: !121)
!7526 = !DILocalVariable(name: "cb", scope: !7519, file: !7276, line: 73, type: !938)
!7527 = !DILocalVariable(name: "tmp", scope: !7519, file: !7276, line: 73, type: !938)
!7528 = !DILocation(line: 0, scope: !7519)
!7529 = !DILocation(line: 75, column: 2, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7519, file: !7276, line: 75, column: 2)
!7531 = !DILocation(line: 0, scope: !7530)
!7532 = !DILocation(line: 76, column: 11, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !7276, line: 76, column: 7)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !7276, line: 75, column: 57)
!7535 = distinct !DILexicalBlock(scope: !7530, file: !7276, line: 75, column: 2)
!7536 = !DILocation(line: 76, column: 20, scope: !7533)
!7537 = !DILocation(line: 76, column: 7, scope: !7534)
!7538 = !DILocation(line: 78, column: 8, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7533, file: !7276, line: 76, column: 28)
!7540 = !DILocation(line: 78, column: 4, scope: !7539)
!7541 = !DILocation(line: 79, column: 3, scope: !7539)
!7542 = !DILocation(line: 75, column: 2, scope: !7535)
!7543 = !DILocation(line: 81, column: 1, scope: !7519)
!7544 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4644, file: !4644, line: 710, type: !5805, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7545)
!7545 = !{!7546}
!7546 = !DILocalVariable(name: "Line", arg: 1, scope: !7544, file: !4644, line: 710, type: !121)
!7547 = !DILocation(line: 0, scope: !7544)
!7548 = !DILocation(line: 712, column: 21, scope: !7544)
!7549 = !DILocation(line: 0, scope: !7503, inlinedAt: !7550)
!7550 = distinct !DILocation(line: 712, column: 76, scope: !7544)
!7551 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7550)
!7552 = !DILocation(line: 0, scope: !7511, inlinedAt: !7553)
!7553 = distinct !DILocation(line: 712, column: 76, scope: !7544)
!7554 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7553)
!7555 = !DILocation(line: 712, column: 73, scope: !7544)
!7556 = !DILocation(line: 712, column: 3, scope: !7544)
!7557 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7558, file: !7558, line: 910, type: !7559, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7561)
!7558 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !969, !121}
!7561 = !{!7562, !7563}
!7562 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7557, file: !7558, line: 910, type: !969)
!7563 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7557, file: !7558, line: 910, type: !121)
!7564 = !DILocation(line: 0, scope: !7557)
!7565 = !DILocation(line: 912, column: 3, scope: !7557)
!7566 = !DILocation(line: 913, column: 1, scope: !7557)
!7567 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7558, file: !7558, line: 823, type: !7568, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7570)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!121, !969}
!7570 = !{!7571}
!7571 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7567, file: !7558, line: 823, type: !969)
!7572 = !DILocation(line: 0, scope: !7567)
!7573 = !DILocation(line: 825, column: 21, scope: !7567)
!7574 = !DILocation(line: 825, column: 3, scope: !7567)
!7575 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7558, file: !7558, line: 812, type: !7559, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7576)
!7576 = !{!7577, !7578}
!7577 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7575, file: !7558, line: 812, type: !969)
!7578 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7575, file: !7558, line: 812, type: !121)
!7579 = !DILocation(line: 0, scope: !7575)
!7580 = !DILocation(line: 814, column: 3, scope: !7575)
!7581 = !DILocation(line: 815, column: 1, scope: !7575)
!7582 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7558, file: !7558, line: 771, type: !7568, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7583)
!7583 = !{!7584}
!7584 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7582, file: !7558, line: 771, type: !969)
!7585 = !DILocation(line: 0, scope: !7582)
!7586 = !DILocation(line: 773, column: 21, scope: !7582)
!7587 = !DILocation(line: 773, column: 3, scope: !7582)
!7588 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1039, file: !1039, line: 47, type: !7589, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7591)
!7589 = !DISubroutineType(types: !7590)
!7590 = !{!103, !912, !2288}
!7591 = !{!7592, !7593}
!7592 = !DILocalVariable(name: "flags", arg: 1, scope: !7588, file: !1039, line: 47, type: !912)
!7593 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7588, file: !1039, line: 47, type: !2288)
!7594 = !DILocation(line: 0, scope: !7588)
!7595 = !DILocation(line: 50, column: 13, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7588, file: !1039, line: 50, column: 6)
!7597 = !DILocation(line: 50, column: 28, scope: !7596)
!7598 = !DILocation(line: 50, column: 6, scope: !7588)
!7599 = !DILocation(line: 53, column: 11, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7596, file: !1039, line: 50, column: 34)
!7601 = !DILocation(line: 55, column: 14, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7600, file: !1039, line: 55, column: 7)
!7603 = !DILocation(line: 55, column: 35, scope: !7602)
!7604 = !DILocation(line: 55, column: 7, scope: !7600)
!7605 = !DILocation(line: 56, column: 14, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !1039, line: 56, column: 8)
!7607 = distinct !DILexicalBlock(scope: !7602, file: !1039, line: 55, column: 41)
!7608 = !DILocation(line: 56, column: 8, scope: !7607)
!7609 = !DILocation(line: 0, scope: !7602)
!7610 = !DILocation(line: 66, column: 14, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7600, file: !1039, line: 66, column: 7)
!7612 = !DILocation(line: 66, column: 30, scope: !7611)
!7613 = !DILocation(line: 66, column: 7, scope: !7600)
!7614 = !DILocation(line: 67, column: 12, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7611, file: !1039, line: 66, column: 36)
!7616 = !DILocation(line: 68, column: 3, scope: !7615)
!7617 = !DILocation(line: 68, column: 21, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7611, file: !1039, line: 68, column: 14)
!7619 = !DILocation(line: 68, column: 39, scope: !7618)
!7620 = !DILocation(line: 68, column: 14, scope: !7611)
!7621 = !DILocation(line: 69, column: 12, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7618, file: !1039, line: 68, column: 45)
!7623 = !DILocation(line: 70, column: 3, scope: !7622)
!7624 = !DILocation(line: 72, column: 21, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7596, file: !1039, line: 72, column: 14)
!7626 = !DILocation(line: 72, column: 35, scope: !7625)
!7627 = !DILocation(line: 72, column: 14, scope: !7596)
!7628 = !DILocation(line: 77, column: 14, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !1039, line: 77, column: 7)
!7630 = distinct !DILexicalBlock(scope: !7625, file: !1039, line: 72, column: 41)
!7631 = !DILocation(line: 77, column: 30, scope: !7629)
!7632 = !DILocation(line: 77, column: 7, scope: !7630)
!7633 = !DILocation(line: 0, scope: !7596)
!7634 = !DILocation(line: 90, column: 1, scope: !7588)
!7635 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1039, file: !1039, line: 157, type: !7636, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{null, !896, !103, !103, !103}
!7638 = !{!7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647, !7648, !7649}
!7639 = !DILocalVariable(name: "dev", arg: 1, scope: !7635, file: !1039, line: 157, type: !896)
!7640 = !DILocalVariable(name: "pin", arg: 2, scope: !7635, file: !1039, line: 157, type: !103)
!7641 = !DILocalVariable(name: "conf", arg: 3, scope: !7635, file: !1039, line: 158, type: !103)
!7642 = !DILocalVariable(name: "func", arg: 4, scope: !7635, file: !1039, line: 158, type: !103)
!7643 = !DILocalVariable(name: "cfg", scope: !7635, file: !1039, line: 160, type: !7160)
!7644 = !DILocalVariable(name: "gpio", scope: !7635, file: !1039, line: 161, type: !969)
!7645 = !DILocalVariable(name: "pin_ll", scope: !7635, file: !1039, line: 163, type: !103)
!7646 = !DILocalVariable(name: "mode", scope: !7635, file: !1039, line: 227, type: !32)
!7647 = !DILocalVariable(name: "otype", scope: !7635, file: !1039, line: 227, type: !32)
!7648 = !DILocalVariable(name: "ospeed", scope: !7635, file: !1039, line: 227, type: !32)
!7649 = !DILocalVariable(name: "pupd", scope: !7635, file: !1039, line: 227, type: !32)
!7650 = !DILocation(line: 0, scope: !7635)
!7651 = !DILocation(line: 160, column: 45, scope: !7635)
!7652 = !DILocation(line: 161, column: 44, scope: !7635)
!7653 = !DILocation(line: 163, column: 15, scope: !7635)
!7654 = !DILocation(line: 229, column: 14, scope: !7635)
!7655 = !DILocation(line: 246, column: 47, scope: !7635)
!7656 = !DILocation(line: 246, column: 2, scope: !7635)
!7657 = !DILocation(line: 248, column: 43, scope: !7635)
!7658 = !DILocation(line: 248, column: 2, scope: !7635)
!7659 = !DILocation(line: 250, column: 40, scope: !7635)
!7660 = !DILocation(line: 250, column: 2, scope: !7635)
!7661 = !DILocation(line: 252, column: 11, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7635, file: !1039, line: 252, column: 6)
!7663 = !DILocation(line: 252, column: 6, scope: !7635)
!7664 = !DILocation(line: 253, column: 11, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !1039, line: 253, column: 7)
!7666 = distinct !DILexicalBlock(scope: !7662, file: !1039, line: 252, column: 36)
!7667 = !DILocation(line: 253, column: 7, scope: !7666)
!7668 = !DILocation(line: 254, column: 4, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7665, file: !1039, line: 253, column: 16)
!7670 = !DILocation(line: 255, column: 3, scope: !7669)
!7671 = !DILocation(line: 256, column: 4, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7665, file: !1039, line: 255, column: 10)
!7673 = !DILocation(line: 260, column: 40, scope: !7635)
!7674 = !DILocation(line: 260, column: 2, scope: !7635)
!7675 = !DILocation(line: 265, column: 1, scope: !7635)
!7676 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1039, file: !1039, line: 137, type: !7483, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7677)
!7677 = !{!7678, !7679}
!7678 = !DILocalVariable(name: "pin", arg: 1, scope: !7676, file: !1039, line: 137, type: !103)
!7679 = !DILocalVariable(name: "pinval", scope: !7676, file: !1039, line: 139, type: !121)
!7680 = !DILocation(line: 0, scope: !7676)
!7681 = !DILocation(line: 149, column: 13, scope: !7676)
!7682 = !DILocation(line: 151, column: 2, scope: !7676)
!7683 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7558, file: !7558, line: 342, type: !7684, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7686)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{null, !969, !121, !121}
!7686 = !{!7687, !7688, !7689}
!7687 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7683, file: !7558, line: 342, type: !969)
!7688 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7683, file: !7558, line: 342, type: !121)
!7689 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7683, file: !7558, line: 342, type: !121)
!7690 = !DILocation(line: 0, scope: !7683)
!7691 = !DILocation(line: 344, column: 3, scope: !7683)
!7692 = !DILocation(line: 345, column: 1, scope: !7683)
!7693 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7558, file: !7558, line: 413, type: !7684, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7694)
!7694 = !{!7695, !7696, !7697}
!7695 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7693, file: !7558, line: 413, type: !969)
!7696 = !DILocalVariable(name: "Pin", arg: 2, scope: !7693, file: !7558, line: 413, type: !121)
!7697 = !DILocalVariable(name: "Speed", arg: 3, scope: !7693, file: !7558, line: 413, type: !121)
!7698 = !DILocation(line: 0, scope: !7693)
!7699 = !DILocation(line: 415, column: 3, scope: !7693)
!7700 = !DILocation(line: 0, scope: !7503, inlinedAt: !7701)
!7701 = distinct !DILocation(line: 415, column: 3, scope: !7693)
!7702 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7701)
!7703 = !DILocation(line: 0, scope: !7511, inlinedAt: !7704)
!7704 = distinct !DILocation(line: 415, column: 3, scope: !7693)
!7705 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7704)
!7706 = !DILocation(line: 0, scope: !7503, inlinedAt: !7707)
!7707 = distinct !DILocation(line: 415, column: 3, scope: !7693)
!7708 = !DILocation(line: 0, scope: !7511, inlinedAt: !7709)
!7709 = distinct !DILocation(line: 415, column: 3, scope: !7693)
!7710 = !DILocation(line: 417, column: 1, scope: !7693)
!7711 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7558, file: !7558, line: 484, type: !7684, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7712)
!7712 = !{!7713, !7714, !7715}
!7713 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7711, file: !7558, line: 484, type: !969)
!7714 = !DILocalVariable(name: "Pin", arg: 2, scope: !7711, file: !7558, line: 484, type: !121)
!7715 = !DILocalVariable(name: "Pull", arg: 3, scope: !7711, file: !7558, line: 484, type: !121)
!7716 = !DILocation(line: 0, scope: !7711)
!7717 = !DILocation(line: 486, column: 3, scope: !7711)
!7718 = !DILocation(line: 0, scope: !7503, inlinedAt: !7719)
!7719 = distinct !DILocation(line: 486, column: 3, scope: !7711)
!7720 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7719)
!7721 = !DILocation(line: 0, scope: !7511, inlinedAt: !7722)
!7722 = distinct !DILocation(line: 486, column: 3, scope: !7711)
!7723 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7722)
!7724 = !DILocation(line: 0, scope: !7503, inlinedAt: !7725)
!7725 = distinct !DILocation(line: 486, column: 3, scope: !7711)
!7726 = !DILocation(line: 0, scope: !7511, inlinedAt: !7727)
!7727 = distinct !DILocation(line: 486, column: 3, scope: !7711)
!7728 = !DILocation(line: 487, column: 1, scope: !7711)
!7729 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7558, file: !7558, line: 556, type: !7684, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7730)
!7730 = !{!7731, !7732, !7733}
!7731 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7729, file: !7558, line: 556, type: !969)
!7732 = !DILocalVariable(name: "Pin", arg: 2, scope: !7729, file: !7558, line: 556, type: !121)
!7733 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7729, file: !7558, line: 556, type: !121)
!7734 = !DILocation(line: 0, scope: !7729)
!7735 = !DILocation(line: 558, column: 3, scope: !7729)
!7736 = !DILocation(line: 0, scope: !7503, inlinedAt: !7737)
!7737 = distinct !DILocation(line: 558, column: 3, scope: !7729)
!7738 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7737)
!7739 = !DILocation(line: 0, scope: !7511, inlinedAt: !7740)
!7740 = distinct !DILocation(line: 558, column: 3, scope: !7729)
!7741 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7740)
!7742 = !DILocation(line: 0, scope: !7503, inlinedAt: !7743)
!7743 = distinct !DILocation(line: 558, column: 3, scope: !7729)
!7744 = !DILocation(line: 0, scope: !7511, inlinedAt: !7745)
!7745 = distinct !DILocation(line: 558, column: 3, scope: !7729)
!7746 = !DILocation(line: 560, column: 1, scope: !7729)
!7747 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7558, file: !7558, line: 633, type: !7684, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7748)
!7748 = !{!7749, !7750, !7751}
!7749 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7747, file: !7558, line: 633, type: !969)
!7750 = !DILocalVariable(name: "Pin", arg: 2, scope: !7747, file: !7558, line: 633, type: !121)
!7751 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7747, file: !7558, line: 633, type: !121)
!7752 = !DILocation(line: 0, scope: !7747)
!7753 = !DILocation(line: 635, column: 3, scope: !7747)
!7754 = !DILocation(line: 0, scope: !7503, inlinedAt: !7755)
!7755 = distinct !DILocation(line: 635, column: 3, scope: !7747)
!7756 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7755)
!7757 = !DILocation(line: 0, scope: !7511, inlinedAt: !7758)
!7758 = distinct !DILocation(line: 635, column: 3, scope: !7747)
!7759 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7758)
!7760 = !DILocation(line: 0, scope: !7503, inlinedAt: !7761)
!7761 = distinct !DILocation(line: 635, column: 3, scope: !7747)
!7762 = !DILocation(line: 0, scope: !7511, inlinedAt: !7763)
!7763 = distinct !DILocation(line: 635, column: 3, scope: !7747)
!7764 = !DILocation(line: 637, column: 1, scope: !7747)
!7765 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7558, file: !7558, line: 273, type: !7684, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7766)
!7766 = !{!7767, !7768, !7769}
!7767 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7765, file: !7558, line: 273, type: !969)
!7768 = !DILocalVariable(name: "Pin", arg: 2, scope: !7765, file: !7558, line: 273, type: !121)
!7769 = !DILocalVariable(name: "Mode", arg: 3, scope: !7765, file: !7558, line: 273, type: !121)
!7770 = !DILocation(line: 0, scope: !7765)
!7771 = !DILocation(line: 275, column: 3, scope: !7765)
!7772 = !DILocation(line: 0, scope: !7503, inlinedAt: !7773)
!7773 = distinct !DILocation(line: 275, column: 3, scope: !7765)
!7774 = !DILocation(line: 380, column: 4, scope: !7503, inlinedAt: !7773)
!7775 = !DILocation(line: 0, scope: !7511, inlinedAt: !7776)
!7776 = distinct !DILocation(line: 275, column: 3, scope: !7765)
!7777 = !DILocation(line: 414, column: 7, scope: !7511, inlinedAt: !7776)
!7778 = !DILocation(line: 0, scope: !7503, inlinedAt: !7779)
!7779 = distinct !DILocation(line: 275, column: 3, scope: !7765)
!7780 = !DILocation(line: 0, scope: !7511, inlinedAt: !7781)
!7781 = distinct !DILocation(line: 275, column: 3, scope: !7765)
!7782 = !DILocation(line: 276, column: 1, scope: !7765)
!7783 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1039, file: !1039, line: 698, type: !1052, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7784)
!7784 = !{!7785, !7786, !7787}
!7785 = !DILocalVariable(name: "dev", arg: 1, scope: !7783, file: !1039, line: 698, type: !896)
!7786 = !DILocalVariable(name: "data", scope: !7783, file: !1039, line: 700, type: !7227)
!7787 = !DILocalVariable(name: "ret", scope: !7783, file: !1039, line: 701, type: !103)
!7788 = !DILocation(line: 0, scope: !7783)
!7789 = !DILocation(line: 700, column: 38, scope: !7783)
!7790 = !DILocation(line: 703, column: 8, scope: !7783)
!7791 = !DILocation(line: 703, column: 12, scope: !7783)
!7792 = !DILocation(line: 705, column: 7, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7783, file: !1039, line: 705, column: 6)
!7794 = !DILocation(line: 705, column: 6, scope: !7783)
!7795 = !DILocation(line: 722, column: 8, scope: !7783)
!7796 = !DILocation(line: 723, column: 10, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7783, file: !1039, line: 723, column: 6)
!7798 = !DILocation(line: 723, column: 6, scope: !7783)
!7799 = !DILocation(line: 731, column: 1, scope: !7783)
!7800 = distinct !DISubprogram(name: "device_is_ready", scope: !7007, file: !7007, line: 47, type: !7801, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7803)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!157, !896}
!7803 = !{!7804}
!7804 = !DILocalVariable(name: "dev", arg: 1, scope: !7800, file: !7007, line: 47, type: !896)
!7805 = !DILocation(line: 0, scope: !7800)
!7806 = !DILocation(line: 55, column: 2, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7800, file: !7007, line: 55, column: 2)
!7808 = !{i64 2155277577}
!7809 = !DILocation(line: 56, column: 9, scope: !7800)
!7810 = !DILocation(line: 56, column: 2, scope: !7800)
!7811 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1039, file: !1039, line: 270, type: !7812, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7814)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!103, !896, !157}
!7814 = !{!7815, !7816, !7817, !7818, !7819}
!7815 = !DILocalVariable(name: "dev", arg: 1, scope: !7811, file: !1039, line: 270, type: !896)
!7816 = !DILocalVariable(name: "on", arg: 2, scope: !7811, file: !1039, line: 270, type: !157)
!7817 = !DILocalVariable(name: "cfg", scope: !7811, file: !1039, line: 272, type: !7160)
!7818 = !DILocalVariable(name: "ret", scope: !7811, file: !1039, line: 273, type: !103)
!7819 = !DILocalVariable(name: "clk", scope: !7811, file: !1039, line: 278, type: !7450)
!7820 = !DILocation(line: 0, scope: !7811)
!7821 = !DILocation(line: 272, column: 45, scope: !7811)
!7822 = !DILocation(line: 282, column: 38, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !1039, line: 280, column: 10)
!7824 = distinct !DILexicalBlock(scope: !7811, file: !1039, line: 280, column: 6)
!7825 = !DILocation(line: 282, column: 6, scope: !7823)
!7826 = !DILocation(line: 281, column: 9, scope: !7823)
!7827 = !DILocation(line: 293, column: 1, scope: !7811)
!7828 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7801, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7829)
!7829 = !{!7830}
!7830 = !DILocalVariable(name: "dev", arg: 1, scope: !7828, file: !141, line: 730, type: !896)
!7831 = !DILocation(line: 0, scope: !7828)
!7832 = !DILocation(line: 732, column: 9, scope: !7828)
!7833 = !DILocation(line: 732, column: 2, scope: !7828)
!7834 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1039, file: !1039, line: 496, type: !7835, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7837)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!103, !896, !103, !103, !103}
!7837 = !{!7838, !7839, !7840, !7841, !7842, !7843}
!7838 = !DILocalVariable(name: "dev", arg: 1, scope: !7834, file: !1039, line: 496, type: !896)
!7839 = !DILocalVariable(name: "pin", arg: 2, scope: !7834, file: !1039, line: 496, type: !103)
!7840 = !DILocalVariable(name: "conf", arg: 3, scope: !7834, file: !1039, line: 496, type: !103)
!7841 = !DILocalVariable(name: "func", arg: 4, scope: !7834, file: !1039, line: 496, type: !103)
!7842 = !DILocalVariable(name: "ret", scope: !7834, file: !1039, line: 498, type: !103)
!7843 = !DILocalVariable(name: "gpio_out", scope: !7844, file: !1039, line: 508, type: !121)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !1039, line: 507, column: 27)
!7845 = distinct !DILexicalBlock(scope: !7834, file: !1039, line: 507, column: 6)
!7846 = !DILocation(line: 0, scope: !7834)
!7847 = !DILocation(line: 505, column: 2, scope: !7834)
!7848 = !DILocation(line: 507, column: 11, scope: !7845)
!7849 = !DILocation(line: 507, column: 6, scope: !7834)
!7850 = !DILocation(line: 508, column: 28, scope: !7844)
!7851 = !DILocation(line: 0, scope: !7844)
!7852 = !DILocation(line: 510, column: 16, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7844, file: !1039, line: 510, column: 7)
!7854 = !DILocation(line: 0, scope: !7853)
!7855 = !DILocation(line: 510, column: 7, scope: !7844)
!7856 = !DILocation(line: 511, column: 4, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7853, file: !1039, line: 510, column: 32)
!7858 = !DILocation(line: 512, column: 3, scope: !7857)
!7859 = !DILocation(line: 513, column: 4, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !1039, line: 512, column: 39)
!7861 = distinct !DILexicalBlock(scope: !7853, file: !1039, line: 512, column: 14)
!7862 = !DILocation(line: 514, column: 3, scope: !7860)
!7863 = !DILocation(line: 518, column: 1, scope: !7834)
!7864 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1314, file: !1314, line: 526, type: !1215, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7865)
!7865 = !{!7866, !7867, !7868}
!7866 = !DILocalVariable(name: "dev", arg: 1, scope: !7864, file: !1314, line: 526, type: !1217)
!7867 = !DILocalVariable(name: "c", arg: 2, scope: !7864, file: !1314, line: 526, type: !828)
!7868 = !DILocalVariable(name: "config", scope: !7864, file: !1314, line: 528, type: !7869)
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!7870 = !DILocation(line: 0, scope: !7864)
!7871 = !DILocation(line: 528, column: 48, scope: !7864)
!7872 = !DILocation(line: 531, column: 40, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7864, file: !1314, line: 531, column: 6)
!7874 = !DILocation(line: 531, column: 6, scope: !7873)
!7875 = !DILocation(line: 531, column: 6, scope: !7864)
!7876 = !DILocation(line: 532, column: 34, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7873, file: !1314, line: 531, column: 48)
!7878 = !DILocation(line: 532, column: 3, scope: !7877)
!7879 = !DILocation(line: 533, column: 2, scope: !7877)
!7880 = !DILocation(line: 539, column: 42, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7864, file: !1314, line: 539, column: 6)
!7882 = !DILocation(line: 539, column: 7, scope: !7881)
!7883 = !DILocation(line: 539, column: 6, scope: !7864)
!7884 = !DILocation(line: 543, column: 52, scope: !7864)
!7885 = !DILocation(line: 543, column: 22, scope: !7864)
!7886 = !DILocation(line: 543, column: 5, scope: !7864)
!7887 = !DILocation(line: 545, column: 2, scope: !7864)
!7888 = !DILocation(line: 546, column: 1, scope: !7864)
!7889 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1314, file: !1314, line: 548, type: !1234, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7890)
!7890 = !{!7891, !7892, !7893, !7894}
!7891 = !DILocalVariable(name: "dev", arg: 1, scope: !7889, file: !1314, line: 548, type: !1217)
!7892 = !DILocalVariable(name: "c", arg: 2, scope: !7889, file: !1314, line: 549, type: !155)
!7893 = !DILocalVariable(name: "config", scope: !7889, file: !1314, line: 551, type: !7869)
!7894 = !DILocalVariable(name: "key", scope: !7889, file: !1314, line: 555, type: !32)
!7895 = !DILocation(line: 0, scope: !7889)
!7896 = !DILocation(line: 551, column: 48, scope: !7889)
!7897 = !DILocation(line: 562, column: 2, scope: !7889)
!7898 = !DILocation(line: 563, column: 41, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !1314, line: 563, column: 7)
!7900 = distinct !DILexicalBlock(scope: !7889, file: !1314, line: 562, column: 12)
!7901 = !DILocation(line: 563, column: 7, scope: !7899)
!7902 = !DILocation(line: 563, column: 7, scope: !7900)
!7903 = !DILocation(line: 55, column: 2, scope: !7904, inlinedAt: !7908)
!7904 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7905)
!7905 = !{!7906, !7907}
!7906 = !DILocalVariable(name: "key", scope: !7904, file: !4623, line: 44, type: !32)
!7907 = !DILocalVariable(name: "tmp", scope: !7904, file: !4623, line: 53, type: !32)
!7908 = distinct !DILocation(line: 564, column: 10, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7899, file: !1314, line: 563, column: 49)
!7910 = !{i64 2327302}
!7911 = !DILocation(line: 0, scope: !7904, inlinedAt: !7908)
!7912 = !DILocation(line: 565, column: 42, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !1314, line: 565, column: 8)
!7914 = !DILocation(line: 565, column: 8, scope: !7913)
!7915 = !DILocation(line: 565, column: 8, scope: !7909)
!7916 = !DILocalVariable(name: "key", arg: 1, scope: !7917, file: !4623, line: 84, type: !32)
!7917 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7918)
!7918 = !{!7916}
!7919 = !DILocation(line: 0, scope: !7917, inlinedAt: !7920)
!7920 = distinct !DILocation(line: 568, column: 4, scope: !7909)
!7921 = !DILocation(line: 95, column: 2, scope: !7917, inlinedAt: !7920)
!7922 = !{i64 2328119}
!7923 = !DILocation(line: 569, column: 3, scope: !7909)
!7924 = distinct !{!7924, !7897, !7925}
!7925 = !DILocation(line: 570, column: 2, scope: !7889)
!7926 = !DILocation(line: 592, column: 33, scope: !7889)
!7927 = !DILocation(line: 592, column: 2, scope: !7889)
!7928 = !DILocation(line: 0, scope: !7917, inlinedAt: !7929)
!7929 = distinct !DILocation(line: 593, column: 2, scope: !7889)
!7930 = !DILocation(line: 95, column: 2, scope: !7917, inlinedAt: !7929)
!7931 = !DILocation(line: 594, column: 1, scope: !7889)
!7932 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1314, file: !1314, line: 596, type: !1238, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7933)
!7933 = !{!7934, !7935, !7936}
!7934 = !DILocalVariable(name: "dev", arg: 1, scope: !7932, file: !1314, line: 596, type: !1217)
!7935 = !DILocalVariable(name: "config", scope: !7932, file: !1314, line: 598, type: !7869)
!7936 = !DILocalVariable(name: "err", scope: !7932, file: !1314, line: 599, type: !121)
!7937 = !DILocation(line: 0, scope: !7932)
!7938 = !DILocation(line: 598, column: 48, scope: !7932)
!7939 = !DILocation(line: 606, column: 40, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 606, column: 6)
!7941 = !DILocation(line: 606, column: 6, scope: !7940)
!7942 = !DILocation(line: 606, column: 6, scope: !7932)
!7943 = !DILocation(line: 610, column: 39, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 610, column: 6)
!7945 = !DILocation(line: 610, column: 6, scope: !7944)
!7946 = !DILocation(line: 610, column: 6, scope: !7932)
!7947 = !DILocation(line: 614, column: 39, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 614, column: 6)
!7949 = !DILocation(line: 614, column: 6, scope: !7948)
!7950 = !DILocation(line: 614, column: 6, scope: !7932)
!7951 = !DILocation(line: 619, column: 40, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 619, column: 6)
!7953 = !DILocation(line: 619, column: 6, scope: !7952)
!7954 = !DILocation(line: 619, column: 6, scope: !7932)
!7955 = !DILocation(line: 623, column: 10, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 623, column: 6)
!7957 = !DILocation(line: 623, column: 6, scope: !7932)
!7958 = !DILocation(line: 624, column: 34, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7956, file: !1314, line: 623, column: 24)
!7960 = !DILocation(line: 624, column: 3, scope: !7959)
!7961 = !DILocation(line: 625, column: 2, scope: !7959)
!7962 = !DILocation(line: 632, column: 10, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 632, column: 6)
!7964 = !DILocation(line: 632, column: 6, scope: !7932)
!7965 = !DILocation(line: 633, column: 34, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7963, file: !1314, line: 632, column: 32)
!7967 = !DILocation(line: 633, column: 3, scope: !7966)
!7968 = !DILocation(line: 634, column: 2, scope: !7966)
!7969 = !DILocation(line: 636, column: 10, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 636, column: 6)
!7971 = !DILocation(line: 636, column: 6, scope: !7932)
!7972 = !DILocation(line: 637, column: 33, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7970, file: !1314, line: 636, column: 31)
!7974 = !DILocation(line: 637, column: 3, scope: !7973)
!7975 = !DILocation(line: 638, column: 2, scope: !7973)
!7976 = !DILocation(line: 640, column: 10, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7932, file: !1314, line: 640, column: 6)
!7978 = !DILocation(line: 640, column: 6, scope: !7932)
!7979 = !DILocation(line: 641, column: 33, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7977, file: !1314, line: 640, column: 32)
!7981 = !DILocation(line: 641, column: 3, scope: !7980)
!7982 = !DILocation(line: 642, column: 2, scope: !7980)
!7983 = !DILocation(line: 646, column: 32, scope: !7932)
!7984 = !DILocation(line: 646, column: 2, scope: !7932)
!7985 = !DILocation(line: 648, column: 2, scope: !7932)
!7986 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1314, file: !1314, line: 419, type: !1242, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !7987)
!7987 = !{!7988, !7989, !7990, !7991, !7993, !7994, !7995, !7996}
!7988 = !DILocalVariable(name: "dev", arg: 1, scope: !7986, file: !1314, line: 419, type: !1217)
!7989 = !DILocalVariable(name: "cfg", arg: 2, scope: !7986, file: !1314, line: 420, type: !1244)
!7990 = !DILocalVariable(name: "config", scope: !7986, file: !1314, line: 422, type: !7869)
!7991 = !DILocalVariable(name: "data", scope: !7986, file: !1314, line: 423, type: !7992)
!7992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!7993 = !DILocalVariable(name: "parity", scope: !7986, file: !1314, line: 424, type: !5065)
!7994 = !DILocalVariable(name: "stopbits", scope: !7986, file: !1314, line: 425, type: !5065)
!7995 = !DILocalVariable(name: "databits", scope: !7986, file: !1314, line: 426, type: !5065)
!7996 = !DILocalVariable(name: "flowctrl", scope: !7986, file: !1314, line: 428, type: !5065)
!7997 = !DILocation(line: 0, scope: !7986)
!7998 = !DILocation(line: 422, column: 48, scope: !7986)
!7999 = !DILocation(line: 423, column: 38, scope: !7986)
!8000 = !DILocation(line: 424, column: 56, scope: !7986)
!8001 = !DILocation(line: 424, column: 51, scope: !7986)
!8002 = !DILocation(line: 424, column: 26, scope: !7986)
!8003 = !DILocation(line: 425, column: 60, scope: !7986)
!8004 = !DILocation(line: 425, column: 55, scope: !7986)
!8005 = !DILocation(line: 425, column: 28, scope: !7986)
!8006 = !DILocation(line: 426, column: 60, scope: !7986)
!8007 = !DILocation(line: 426, column: 55, scope: !7986)
!8008 = !DILocation(line: 426, column: 28, scope: !7986)
!8009 = !DILocation(line: 428, column: 58, scope: !7986)
!8010 = !DILocation(line: 428, column: 53, scope: !7986)
!8011 = !DILocation(line: 428, column: 28, scope: !7986)
!8012 = !DILocation(line: 431, column: 44, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 431, column: 6)
!8014 = !DILocation(line: 438, column: 22, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 437, column: 6)
!8016 = !DILocation(line: 437, column: 6, scope: !7986)
!8017 = !DILocation(line: 448, column: 6, scope: !7986)
!8018 = !DILocation(line: 465, column: 47, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 465, column: 6)
!8020 = !DILocation(line: 475, column: 21, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 475, column: 6)
!8022 = !DILocation(line: 475, column: 6, scope: !7986)
!8023 = !DILocation(line: 476, column: 8, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !1314, line: 476, column: 7)
!8025 = distinct !DILexicalBlock(scope: !8021, file: !1314, line: 475, column: 49)
!8026 = !DILocation(line: 477, column: 34, scope: !8024)
!8027 = !DILocation(line: 476, column: 7, scope: !8025)
!8028 = !DILocation(line: 482, column: 27, scope: !7986)
!8029 = !DILocation(line: 482, column: 2, scope: !7986)
!8030 = !DILocation(line: 484, column: 16, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 484, column: 6)
!8032 = !DILocation(line: 484, column: 13, scope: !8031)
!8033 = !DILocation(line: 484, column: 6, scope: !7986)
!8034 = !DILocation(line: 485, column: 3, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !1314, line: 484, column: 44)
!8036 = !DILocation(line: 486, column: 2, scope: !8035)
!8037 = !DILocation(line: 488, column: 18, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 488, column: 6)
!8039 = !DILocation(line: 488, column: 15, scope: !8038)
!8040 = !DILocation(line: 488, column: 6, scope: !7986)
!8041 = !DILocation(line: 489, column: 3, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8038, file: !1314, line: 488, column: 48)
!8043 = !DILocation(line: 490, column: 2, scope: !8042)
!8044 = !DILocation(line: 492, column: 18, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 492, column: 6)
!8046 = !DILocation(line: 492, column: 15, scope: !8045)
!8047 = !DILocation(line: 492, column: 6, scope: !7986)
!8048 = !DILocation(line: 493, column: 3, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8045, file: !1314, line: 492, column: 48)
!8050 = !DILocation(line: 494, column: 2, scope: !8049)
!8051 = !DILocation(line: 496, column: 18, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 496, column: 6)
!8053 = !DILocation(line: 496, column: 15, scope: !8052)
!8054 = !DILocation(line: 496, column: 6, scope: !7986)
!8055 = !DILocation(line: 497, column: 3, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8052, file: !1314, line: 496, column: 46)
!8057 = !DILocation(line: 498, column: 2, scope: !8056)
!8058 = !DILocation(line: 500, column: 11, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !7986, file: !1314, line: 500, column: 6)
!8060 = !DILocation(line: 500, column: 29, scope: !8059)
!8061 = !DILocation(line: 500, column: 20, scope: !8059)
!8062 = !DILocation(line: 500, column: 6, scope: !7986)
!8063 = !DILocation(line: 501, column: 3, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8059, file: !1314, line: 500, column: 40)
!8065 = !DILocation(line: 502, column: 26, scope: !8064)
!8066 = !DILocation(line: 502, column: 19, scope: !8064)
!8067 = !DILocation(line: 503, column: 2, scope: !8064)
!8068 = !DILocation(line: 505, column: 26, scope: !7986)
!8069 = !DILocation(line: 505, column: 2, scope: !7986)
!8070 = !DILocation(line: 506, column: 2, scope: !7986)
!8071 = !DILocation(line: 507, column: 1, scope: !7986)
!8072 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1314, file: !1314, line: 509, type: !1255, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8073)
!8073 = !{!8074, !8075, !8076}
!8074 = !DILocalVariable(name: "dev", arg: 1, scope: !8072, file: !1314, line: 509, type: !1217)
!8075 = !DILocalVariable(name: "cfg", arg: 2, scope: !8072, file: !1314, line: 510, type: !1257)
!8076 = !DILocalVariable(name: "data", scope: !8072, file: !1314, line: 512, type: !7992)
!8077 = !DILocation(line: 0, scope: !8072)
!8078 = !DILocation(line: 512, column: 38, scope: !8072)
!8079 = !DILocation(line: 514, column: 24, scope: !8072)
!8080 = !DILocation(line: 514, column: 7, scope: !8072)
!8081 = !DILocation(line: 514, column: 16, scope: !8072)
!8082 = !DILocation(line: 515, column: 41, scope: !8072)
!8083 = !{i32 0, i32 1537}
!8084 = !DILocation(line: 515, column: 16, scope: !8072)
!8085 = !DILocation(line: 515, column: 7, scope: !8072)
!8086 = !DILocation(line: 515, column: 14, scope: !8072)
!8087 = !DILocation(line: 517, column: 3, scope: !8072)
!8088 = !{i32 0, i32 12289}
!8089 = !DILocation(line: 516, column: 19, scope: !8072)
!8090 = !DILocation(line: 516, column: 7, scope: !8072)
!8091 = !DILocation(line: 516, column: 17, scope: !8072)
!8092 = !DILocation(line: 519, column: 3, scope: !8072)
!8093 = !DILocation(line: 519, column: 33, scope: !8072)
!8094 = !DILocation(line: 518, column: 19, scope: !8072)
!8095 = !DILocation(line: 518, column: 7, scope: !8072)
!8096 = !DILocation(line: 518, column: 17, scope: !8072)
!8097 = !DILocation(line: 521, column: 3, scope: !8072)
!8098 = !{i32 0, i32 769}
!8099 = !DILocation(line: 520, column: 19, scope: !8072)
!8100 = !DILocation(line: 520, column: 7, scope: !8072)
!8101 = !DILocation(line: 520, column: 17, scope: !8072)
!8102 = !DILocation(line: 522, column: 2, scope: !8072)
!8103 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1314, file: !1314, line: 205, type: !8104, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8106)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!121, !1217}
!8106 = !{!8107, !8108}
!8107 = !DILocalVariable(name: "dev", arg: 1, scope: !8103, file: !1314, line: 205, type: !1217)
!8108 = !DILocalVariable(name: "config", scope: !8103, file: !1314, line: 207, type: !7869)
!8109 = !DILocation(line: 0, scope: !8103)
!8110 = !DILocation(line: 207, column: 48, scope: !8103)
!8111 = !DILocation(line: 209, column: 36, scope: !8103)
!8112 = !DILocation(line: 209, column: 9, scope: !8103)
!8113 = !DILocation(line: 209, column: 2, scope: !8103)
!8114 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1314, file: !1314, line: 270, type: !8115, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8117)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{!1183, !121}
!8117 = !{!8118}
!8118 = !DILocalVariable(name: "parity", arg: 1, scope: !8114, file: !1314, line: 270, type: !121)
!8119 = !DILocation(line: 0, scope: !8114)
!8120 = !DILocation(line: 272, column: 2, scope: !8114)
!8121 = !DILocation(line: 281, column: 1, scope: !8114)
!8122 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1314, file: !1314, line: 220, type: !8104, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8123)
!8123 = !{!8124, !8125}
!8124 = !DILocalVariable(name: "dev", arg: 1, scope: !8122, file: !1314, line: 220, type: !1217)
!8125 = !DILocalVariable(name: "config", scope: !8122, file: !1314, line: 222, type: !7869)
!8126 = !DILocation(line: 0, scope: !8122)
!8127 = !DILocation(line: 222, column: 48, scope: !8122)
!8128 = !DILocation(line: 224, column: 44, scope: !8122)
!8129 = !DILocation(line: 224, column: 9, scope: !8122)
!8130 = !DILocation(line: 224, column: 2, scope: !8122)
!8131 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1314, file: !1314, line: 304, type: !8132, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8134)
!8132 = !DISubroutineType(types: !8133)
!8133 = !{!1197, !121}
!8134 = !{!8135}
!8135 = !DILocalVariable(name: "sb", arg: 1, scope: !8131, file: !1314, line: 304, type: !121)
!8136 = !DILocation(line: 0, scope: !8131)
!8137 = !DILocation(line: 306, column: 2, scope: !8131)
!8138 = !DILocation(line: 0, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8131, file: !1314, line: 306, column: 14)
!8140 = !DILocation(line: 323, column: 1, scope: !8131)
!8141 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1314, file: !1314, line: 235, type: !8104, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8142)
!8142 = !{!8143, !8144}
!8143 = !DILocalVariable(name: "dev", arg: 1, scope: !8141, file: !1314, line: 235, type: !1217)
!8144 = !DILocalVariable(name: "config", scope: !8141, file: !1314, line: 237, type: !7869)
!8145 = !DILocation(line: 0, scope: !8141)
!8146 = !DILocation(line: 237, column: 48, scope: !8141)
!8147 = !DILocation(line: 239, column: 39, scope: !8141)
!8148 = !DILocation(line: 239, column: 9, scope: !8141)
!8149 = !DILocation(line: 239, column: 2, scope: !8141)
!8150 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1314, file: !1314, line: 355, type: !8151, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!1190, !121, !121}
!8153 = !{!8154, !8155}
!8154 = !DILocalVariable(name: "db", arg: 1, scope: !8150, file: !1314, line: 355, type: !121)
!8155 = !DILocalVariable(name: "p", arg: 2, scope: !8150, file: !1314, line: 356, type: !121)
!8156 = !DILocation(line: 0, scope: !8150)
!8157 = !DILocation(line: 358, column: 2, scope: !8150)
!8158 = !DILocation(line: 384, column: 1, scope: !8150)
!8159 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1314, file: !1314, line: 250, type: !8104, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8160)
!8160 = !{!8161, !8162}
!8161 = !DILocalVariable(name: "dev", arg: 1, scope: !8159, file: !1314, line: 250, type: !1217)
!8162 = !DILocalVariable(name: "config", scope: !8159, file: !1314, line: 252, type: !7869)
!8163 = !DILocation(line: 0, scope: !8159)
!8164 = !DILocation(line: 252, column: 48, scope: !8159)
!8165 = !DILocation(line: 254, column: 40, scope: !8159)
!8166 = !DILocation(line: 254, column: 9, scope: !8159)
!8167 = !DILocation(line: 254, column: 2, scope: !8159)
!8168 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1314, file: !1314, line: 409, type: !8169, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8171)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{!1203, !121}
!8171 = !{!8172}
!8172 = !DILocalVariable(name: "fc", arg: 1, scope: !8168, file: !1314, line: 409, type: !121)
!8173 = !DILocation(line: 0, scope: !8168)
!8174 = !DILocation(line: 411, column: 9, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8168, file: !1314, line: 411, column: 6)
!8176 = !DILocation(line: 416, column: 1, scope: !8168)
!8177 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8178, file: !8178, line: 967, type: !8179, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8181)
!8178 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8179 = !DISubroutineType(types: !8180)
!8180 = !{!121, !1258}
!8181 = !{!8182}
!8182 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8177, file: !8178, line: 967, type: !1258)
!8183 = !DILocation(line: 0, scope: !8177)
!8184 = !DILocation(line: 969, column: 21, scope: !8177)
!8185 = !DILocation(line: 969, column: 3, scope: !8177)
!8186 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8178, file: !8178, line: 601, type: !8179, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8187)
!8187 = !{!8188}
!8188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8186, file: !8178, line: 601, type: !1258)
!8189 = !DILocation(line: 0, scope: !8186)
!8190 = !DILocation(line: 603, column: 21, scope: !8186)
!8191 = !DILocation(line: 603, column: 3, scope: !8186)
!8192 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8178, file: !8178, line: 820, type: !8179, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8193)
!8193 = !{!8194}
!8194 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8192, file: !8178, line: 820, type: !1258)
!8195 = !DILocation(line: 0, scope: !8192)
!8196 = !DILocation(line: 822, column: 21, scope: !8192)
!8197 = !DILocation(line: 822, column: 3, scope: !8192)
!8198 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8178, file: !8178, line: 547, type: !8179, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8199)
!8199 = !{!8200}
!8200 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8198, file: !8178, line: 547, type: !1258)
!8201 = !DILocation(line: 0, scope: !8198)
!8202 = !DILocation(line: 549, column: 21, scope: !8198)
!8203 = !DILocation(line: 549, column: 3, scope: !8198)
!8204 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1314, file: !1314, line: 257, type: !8205, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8207)
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!121, !1183}
!8207 = !{!8208}
!8208 = !DILocalVariable(name: "parity", arg: 1, scope: !8204, file: !1314, line: 257, type: !1183)
!8209 = !DILocation(line: 0, scope: !8204)
!8210 = !DILocation(line: 259, column: 2, scope: !8204)
!8211 = !DILocation(line: 268, column: 1, scope: !8204)
!8212 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1314, file: !1314, line: 283, type: !8213, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8215)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{!121, !1197}
!8215 = !{!8216}
!8216 = !DILocalVariable(name: "sb", arg: 1, scope: !8212, file: !1314, line: 283, type: !1197)
!8217 = !DILocation(line: 0, scope: !8212)
!8218 = !DILocation(line: 285, column: 2, scope: !8212)
!8219 = !DILocation(line: 0, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8212, file: !1314, line: 285, column: 14)
!8221 = !DILocation(line: 302, column: 1, scope: !8212)
!8222 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1314, file: !1314, line: 325, type: !8223, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8225)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!121, !1190, !1183}
!8225 = !{!8226, !8227}
!8226 = !DILocalVariable(name: "db", arg: 1, scope: !8222, file: !1314, line: 325, type: !1190)
!8227 = !DILocalVariable(name: "p", arg: 2, scope: !8222, file: !1314, line: 326, type: !1183)
!8228 = !DILocation(line: 0, scope: !8222)
!8229 = !DILocation(line: 328, column: 2, scope: !8222)
!8230 = !DILocation(line: 353, column: 1, scope: !8222)
!8231 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1314, file: !1314, line: 393, type: !8232, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8234)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!121, !1203}
!8234 = !{!8235}
!8235 = !DILocalVariable(name: "fc", arg: 1, scope: !8231, file: !1314, line: 393, type: !1203)
!8236 = !DILocation(line: 0, scope: !8231)
!8237 = !DILocation(line: 395, column: 9, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8231, file: !1314, line: 395, column: 6)
!8239 = !DILocation(line: 400, column: 1, scope: !8231)
!8240 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8178, file: !8178, line: 424, type: !8241, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8243)
!8241 = !DISubroutineType(types: !8242)
!8242 = !{null, !1258}
!8243 = !{!8244}
!8244 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8240, file: !8178, line: 424, type: !1258)
!8245 = !DILocation(line: 0, scope: !8240)
!8246 = !DILocation(line: 426, column: 3, scope: !8240)
!8247 = !DILocation(line: 427, column: 1, scope: !8240)
!8248 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1314, file: !1314, line: 197, type: !8249, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8251)
!8249 = !DISubroutineType(types: !8250)
!8250 = !{null, !1217, !121}
!8251 = !{!8252, !8253, !8254}
!8252 = !DILocalVariable(name: "dev", arg: 1, scope: !8248, file: !1314, line: 197, type: !1217)
!8253 = !DILocalVariable(name: "parity", arg: 2, scope: !8248, file: !1314, line: 198, type: !121)
!8254 = !DILocalVariable(name: "config", scope: !8248, file: !1314, line: 200, type: !7869)
!8255 = !DILocation(line: 0, scope: !8248)
!8256 = !DILocation(line: 200, column: 48, scope: !8248)
!8257 = !DILocation(line: 202, column: 29, scope: !8248)
!8258 = !DILocation(line: 202, column: 2, scope: !8248)
!8259 = !DILocation(line: 203, column: 1, scope: !8248)
!8260 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1314, file: !1314, line: 212, type: !8249, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8261)
!8261 = !{!8262, !8263, !8264}
!8262 = !DILocalVariable(name: "dev", arg: 1, scope: !8260, file: !1314, line: 212, type: !1217)
!8263 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8260, file: !1314, line: 213, type: !121)
!8264 = !DILocalVariable(name: "config", scope: !8260, file: !1314, line: 215, type: !7869)
!8265 = !DILocation(line: 0, scope: !8260)
!8266 = !DILocation(line: 215, column: 48, scope: !8260)
!8267 = !DILocation(line: 217, column: 37, scope: !8260)
!8268 = !DILocation(line: 217, column: 2, scope: !8260)
!8269 = !DILocation(line: 218, column: 1, scope: !8260)
!8270 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1314, file: !1314, line: 227, type: !8249, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8271)
!8271 = !{!8272, !8273, !8274}
!8272 = !DILocalVariable(name: "dev", arg: 1, scope: !8270, file: !1314, line: 227, type: !1217)
!8273 = !DILocalVariable(name: "databits", arg: 2, scope: !8270, file: !1314, line: 228, type: !121)
!8274 = !DILocalVariable(name: "config", scope: !8270, file: !1314, line: 230, type: !7869)
!8275 = !DILocation(line: 0, scope: !8270)
!8276 = !DILocation(line: 230, column: 48, scope: !8270)
!8277 = !DILocation(line: 232, column: 32, scope: !8270)
!8278 = !DILocation(line: 232, column: 2, scope: !8270)
!8279 = !DILocation(line: 233, column: 1, scope: !8270)
!8280 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1314, file: !1314, line: 242, type: !8249, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8281)
!8281 = !{!8282, !8283, !8284}
!8282 = !DILocalVariable(name: "dev", arg: 1, scope: !8280, file: !1314, line: 242, type: !1217)
!8283 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8280, file: !1314, line: 243, type: !121)
!8284 = !DILocalVariable(name: "config", scope: !8280, file: !1314, line: 245, type: !7869)
!8285 = !DILocation(line: 0, scope: !8280)
!8286 = !DILocation(line: 245, column: 48, scope: !8280)
!8287 = !DILocation(line: 247, column: 33, scope: !8280)
!8288 = !DILocation(line: 247, column: 2, scope: !8280)
!8289 = !DILocation(line: 248, column: 1, scope: !8280)
!8290 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1314, file: !1314, line: 107, type: !8249, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8291)
!8291 = !{!8292, !8293, !8294, !8295, !8296}
!8292 = !DILocalVariable(name: "dev", arg: 1, scope: !8290, file: !1314, line: 107, type: !1217)
!8293 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8290, file: !1314, line: 107, type: !121)
!8294 = !DILocalVariable(name: "config", scope: !8290, file: !1314, line: 109, type: !7869)
!8295 = !DILocalVariable(name: "data", scope: !8290, file: !1314, line: 110, type: !7992)
!8296 = !DILocalVariable(name: "clock_rate", scope: !8290, file: !1314, line: 112, type: !121)
!8297 = !DILocation(line: 0, scope: !8290)
!8298 = !DILocation(line: 109, column: 48, scope: !8290)
!8299 = !DILocation(line: 110, column: 38, scope: !8290)
!8300 = !DILocation(line: 112, column: 2, scope: !8290)
!8301 = !DILocation(line: 123, column: 36, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !1314, line: 123, column: 7)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !1314, line: 122, column: 9)
!8304 = distinct !DILexicalBlock(scope: !8290, file: !1314, line: 115, column: 6)
!8305 = !DILocation(line: 124, column: 42, scope: !8302)
!8306 = !DILocation(line: 123, column: 7, scope: !8302)
!8307 = !DILocation(line: 125, column: 22, scope: !8302)
!8308 = !DILocation(line: 123, column: 7, scope: !8303)
!8309 = !DILocation(line: 176, column: 36, scope: !8290)
!8310 = !DILocation(line: 176, column: 3, scope: !8290)
!8311 = !DILocation(line: 179, column: 32, scope: !8290)
!8312 = !DILocation(line: 180, column: 10, scope: !8290)
!8313 = !DILocation(line: 179, column: 3, scope: !8290)
!8314 = !DILocation(line: 195, column: 1, scope: !8290)
!8315 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8178, file: !8178, line: 410, type: !8241, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8316)
!8316 = !{!8317}
!8317 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8315, file: !8178, line: 410, type: !1258)
!8318 = !DILocation(line: 0, scope: !8315)
!8319 = !DILocation(line: 412, column: 3, scope: !8315)
!8320 = !DILocation(line: 413, column: 1, scope: !8315)
!8321 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !671, file: !671, line: 216, type: !1291, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8322)
!8322 = !{!8323, !8324, !8325, !8326}
!8323 = !DILocalVariable(name: "dev", arg: 1, scope: !8321, file: !671, line: 216, type: !1217)
!8324 = !DILocalVariable(name: "sys", arg: 2, scope: !8321, file: !671, line: 217, type: !767)
!8325 = !DILocalVariable(name: "rate", arg: 3, scope: !8321, file: !671, line: 218, type: !723)
!8326 = !DILocalVariable(name: "api", scope: !8321, file: !671, line: 220, type: !1269)
!8327 = !DILocation(line: 0, scope: !8321)
!8328 = !DILocation(line: 221, column: 49, scope: !8321)
!8329 = !DILocation(line: 223, column: 11, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8321, file: !671, line: 223, column: 6)
!8331 = !DILocation(line: 223, column: 20, scope: !8330)
!8332 = !DILocation(line: 223, column: 6, scope: !8321)
!8333 = !DILocation(line: 227, column: 9, scope: !8321)
!8334 = !DILocation(line: 227, column: 2, scope: !8321)
!8335 = !DILocation(line: 228, column: 1, scope: !8321)
!8336 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8178, file: !8178, line: 615, type: !8337, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{null, !1258, !121}
!8339 = !{!8340, !8341}
!8340 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8336, file: !8178, line: 615, type: !1258)
!8341 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8336, file: !8178, line: 615, type: !121)
!8342 = !DILocation(line: 0, scope: !8336)
!8343 = !DILocation(line: 617, column: 3, scope: !8336)
!8344 = !DILocation(line: 618, column: 1, scope: !8336)
!8345 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8178, file: !8178, line: 1020, type: !8346, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8348)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{null, !1258, !121, !121, !121}
!8348 = !{!8349, !8350, !8351, !8352}
!8349 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8345, file: !8178, line: 1020, type: !1258)
!8350 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8345, file: !8178, line: 1020, type: !121)
!8351 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8345, file: !8178, line: 1020, type: !121)
!8352 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8345, file: !8178, line: 1021, type: !121)
!8353 = !DILocation(line: 0, scope: !8345)
!8354 = !DILocation(line: 1029, column: 30, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !8178, line: 1028, column: 3)
!8356 = distinct !DILexicalBlock(scope: !8345, file: !8178, line: 1023, column: 7)
!8357 = !DILocation(line: 1029, column: 19, scope: !8355)
!8358 = !DILocation(line: 1029, column: 13, scope: !8355)
!8359 = !DILocation(line: 1029, column: 17, scope: !8355)
!8360 = !DILocation(line: 1031, column: 1, scope: !8345)
!8361 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8178, file: !8178, line: 949, type: !8337, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8362)
!8362 = !{!8363, !8364}
!8363 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8361, file: !8178, line: 949, type: !1258)
!8364 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8361, file: !8178, line: 949, type: !121)
!8365 = !DILocation(line: 0, scope: !8361)
!8366 = !DILocation(line: 951, column: 3, scope: !8361)
!8367 = !DILocation(line: 952, column: 1, scope: !8361)
!8368 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8178, file: !8178, line: 588, type: !8337, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8369)
!8369 = !{!8370, !8371}
!8370 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8368, file: !8178, line: 588, type: !1258)
!8371 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8368, file: !8178, line: 588, type: !121)
!8372 = !DILocation(line: 0, scope: !8368)
!8373 = !DILocation(line: 590, column: 3, scope: !8368)
!8374 = !DILocation(line: 591, column: 1, scope: !8368)
!8375 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8178, file: !8178, line: 805, type: !8337, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8376)
!8376 = !{!8377, !8378}
!8377 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8375, file: !8178, line: 805, type: !1258)
!8378 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8375, file: !8178, line: 805, type: !121)
!8379 = !DILocation(line: 0, scope: !8375)
!8380 = !DILocation(line: 807, column: 3, scope: !8375)
!8381 = !DILocation(line: 808, column: 1, scope: !8375)
!8382 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8178, file: !8178, line: 532, type: !8337, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8383)
!8383 = !{!8384, !8385}
!8384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8382, file: !8178, line: 532, type: !1258)
!8385 = !DILocalVariable(name: "Parity", arg: 2, scope: !8382, file: !8178, line: 532, type: !121)
!8386 = !DILocation(line: 0, scope: !8382)
!8387 = !DILocation(line: 534, column: 3, scope: !8382)
!8388 = !DILocation(line: 535, column: 1, scope: !8382)
!8389 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8178, file: !8178, line: 1770, type: !8179, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8390)
!8390 = !{!8391}
!8391 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8389, file: !8178, line: 1770, type: !1258)
!8392 = !DILocation(line: 0, scope: !8389)
!8393 = !DILocation(line: 1772, column: 11, scope: !8389)
!8394 = !DILocation(line: 1772, column: 46, scope: !8389)
!8395 = !DILocation(line: 1772, column: 3, scope: !8389)
!8396 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8178, file: !8178, line: 1737, type: !8179, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8397)
!8397 = !{!8398}
!8398 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8396, file: !8178, line: 1737, type: !1258)
!8399 = !DILocation(line: 0, scope: !8396)
!8400 = !DILocation(line: 1739, column: 11, scope: !8396)
!8401 = !DILocation(line: 1739, column: 3, scope: !8396)
!8402 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8178, file: !8178, line: 1748, type: !8179, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8403)
!8403 = !{!8404}
!8404 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8402, file: !8178, line: 1748, type: !1258)
!8405 = !DILocation(line: 0, scope: !8402)
!8406 = !DILocation(line: 1750, column: 11, scope: !8402)
!8407 = !DILocation(line: 1750, column: 45, scope: !8402)
!8408 = !DILocation(line: 1750, column: 3, scope: !8402)
!8409 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8178, file: !8178, line: 1827, type: !8179, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8410)
!8410 = !{!8411}
!8411 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8409, file: !8178, line: 1827, type: !1258)
!8412 = !DILocation(line: 0, scope: !8409)
!8413 = !DILocation(line: 1829, column: 11, scope: !8409)
!8414 = !DILocation(line: 1829, column: 46, scope: !8409)
!8415 = !DILocation(line: 1829, column: 3, scope: !8409)
!8416 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8178, file: !8178, line: 1992, type: !8241, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8417)
!8417 = !{!8418}
!8418 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8416, file: !8178, line: 1992, type: !1258)
!8419 = !DILocation(line: 0, scope: !8416)
!8420 = !DILocation(line: 1994, column: 3, scope: !8416)
!8421 = !DILocation(line: 1995, column: 1, scope: !8416)
!8422 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8178, file: !8178, line: 1934, type: !8241, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8423)
!8423 = !{!8424, !8425}
!8424 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8422, file: !8178, line: 1934, type: !1258)
!8425 = !DILocalVariable(name: "tmpreg", scope: !8422, file: !8178, line: 1936, type: !120)
!8426 = !DILocation(line: 0, scope: !8422)
!8427 = !DILocation(line: 1936, column: 3, scope: !8422)
!8428 = !DILocation(line: 1936, column: 17, scope: !8422)
!8429 = !DILocation(line: 1937, column: 20, scope: !8422)
!8430 = !DILocation(line: 1937, column: 10, scope: !8422)
!8431 = !DILocation(line: 1938, column: 10, scope: !8422)
!8432 = !DILocation(line: 1939, column: 20, scope: !8422)
!8433 = !DILocation(line: 1939, column: 10, scope: !8422)
!8434 = !DILocation(line: 1940, column: 10, scope: !8422)
!8435 = !DILocation(line: 1941, column: 1, scope: !8422)
!8436 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8178, file: !8178, line: 1877, type: !8241, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8437)
!8437 = !{!8438, !8439}
!8438 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8436, file: !8178, line: 1877, type: !1258)
!8439 = !DILocalVariable(name: "tmpreg", scope: !8436, file: !8178, line: 1879, type: !120)
!8440 = !DILocation(line: 0, scope: !8436)
!8441 = !DILocation(line: 1879, column: 3, scope: !8436)
!8442 = !DILocation(line: 1879, column: 17, scope: !8436)
!8443 = !DILocation(line: 1880, column: 20, scope: !8436)
!8444 = !DILocation(line: 1880, column: 10, scope: !8436)
!8445 = !DILocation(line: 1881, column: 10, scope: !8436)
!8446 = !DILocation(line: 1882, column: 20, scope: !8436)
!8447 = !DILocation(line: 1882, column: 10, scope: !8436)
!8448 = !DILocation(line: 1883, column: 10, scope: !8436)
!8449 = !DILocation(line: 1884, column: 1, scope: !8436)
!8450 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8178, file: !8178, line: 1896, type: !8241, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8451)
!8451 = !{!8452, !8453}
!8452 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8450, file: !8178, line: 1896, type: !1258)
!8453 = !DILocalVariable(name: "tmpreg", scope: !8450, file: !8178, line: 1898, type: !120)
!8454 = !DILocation(line: 0, scope: !8450)
!8455 = !DILocation(line: 1898, column: 3, scope: !8450)
!8456 = !DILocation(line: 1898, column: 17, scope: !8450)
!8457 = !DILocation(line: 1899, column: 20, scope: !8450)
!8458 = !DILocation(line: 1899, column: 10, scope: !8450)
!8459 = !DILocation(line: 1900, column: 10, scope: !8450)
!8460 = !DILocation(line: 1901, column: 20, scope: !8450)
!8461 = !DILocation(line: 1901, column: 10, scope: !8450)
!8462 = !DILocation(line: 1902, column: 10, scope: !8450)
!8463 = !DILocation(line: 1903, column: 1, scope: !8450)
!8464 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8178, file: !8178, line: 1915, type: !8241, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8465)
!8465 = !{!8466, !8467}
!8466 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8464, file: !8178, line: 1915, type: !1258)
!8467 = !DILocalVariable(name: "tmpreg", scope: !8464, file: !8178, line: 1917, type: !120)
!8468 = !DILocation(line: 0, scope: !8464)
!8469 = !DILocation(line: 1917, column: 3, scope: !8464)
!8470 = !DILocation(line: 1917, column: 17, scope: !8464)
!8471 = !DILocation(line: 1918, column: 20, scope: !8464)
!8472 = !DILocation(line: 1918, column: 10, scope: !8464)
!8473 = !DILocation(line: 1919, column: 10, scope: !8464)
!8474 = !DILocation(line: 1920, column: 20, scope: !8464)
!8475 = !DILocation(line: 1920, column: 10, scope: !8464)
!8476 = !DILocation(line: 1921, column: 10, scope: !8464)
!8477 = !DILocation(line: 1922, column: 1, scope: !8464)
!8478 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8178, file: !8178, line: 1814, type: !8179, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8479)
!8479 = !{!8480}
!8480 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8478, file: !8178, line: 1814, type: !1258)
!8481 = !DILocation(line: 0, scope: !8478)
!8482 = !DILocation(line: 1816, column: 11, scope: !8478)
!8483 = !DILocation(line: 1816, column: 46, scope: !8478)
!8484 = !DILocation(line: 1816, column: 3, scope: !8478)
!8485 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8178, file: !8178, line: 2426, type: !8486, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8488)
!8486 = !DISubroutineType(types: !8487)
!8487 = !{null, !1258, !154}
!8488 = !{!8489, !8490}
!8489 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8485, file: !8178, line: 2426, type: !1258)
!8490 = !DILocalVariable(name: "Value", arg: 2, scope: !8485, file: !8178, line: 2426, type: !154)
!8491 = !DILocation(line: 0, scope: !8485)
!8492 = !DILocation(line: 2428, column: 16, scope: !8485)
!8493 = !DILocation(line: 2428, column: 11, scope: !8485)
!8494 = !DILocation(line: 2428, column: 14, scope: !8485)
!8495 = !DILocation(line: 2429, column: 1, scope: !8485)
!8496 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8178, file: !8178, line: 1792, type: !8179, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8497)
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8496, file: !8178, line: 1792, type: !1258)
!8499 = !DILocation(line: 0, scope: !8496)
!8500 = !DILocation(line: 1794, column: 11, scope: !8496)
!8501 = !DILocation(line: 1794, column: 47, scope: !8496)
!8502 = !DILocation(line: 1794, column: 3, scope: !8496)
!8503 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8178, file: !8178, line: 2403, type: !8504, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8506)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{!154, !1258}
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8503, file: !8178, line: 2403, type: !1258)
!8508 = !DILocation(line: 0, scope: !8503)
!8509 = !DILocation(line: 2405, column: 20, scope: !8503)
!8510 = !DILocation(line: 2405, column: 10, scope: !8503)
!8511 = !DILocation(line: 2405, column: 3, scope: !8503)
!8512 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1314, file: !1314, line: 1583, type: !1238, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8513)
!8513 = !{!8514, !8515, !8516, !8517, !8518, !8519}
!8514 = !DILocalVariable(name: "dev", arg: 1, scope: !8512, file: !1314, line: 1583, type: !1217)
!8515 = !DILocalVariable(name: "config", scope: !8512, file: !1314, line: 1585, type: !7869)
!8516 = !DILocalVariable(name: "data", scope: !8512, file: !1314, line: 1586, type: !7992)
!8517 = !DILocalVariable(name: "ll_parity", scope: !8512, file: !1314, line: 1587, type: !121)
!8518 = !DILocalVariable(name: "ll_datawidth", scope: !8512, file: !1314, line: 1588, type: !121)
!8519 = !DILocalVariable(name: "err", scope: !8512, file: !1314, line: 1589, type: !103)
!8520 = !DILocation(line: 0, scope: !8512)
!8521 = !DILocation(line: 1585, column: 48, scope: !8512)
!8522 = !DILocation(line: 1586, column: 38, scope: !8512)
!8523 = !DILocation(line: 1591, column: 2, scope: !8512)
!8524 = !DILocation(line: 1593, column: 29, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8512, file: !1314, line: 1593, column: 6)
!8526 = !DILocation(line: 1593, column: 7, scope: !8525)
!8527 = !DILocation(line: 1593, column: 6, scope: !8512)
!8528 = !DILocation(line: 1599, column: 31, scope: !8512)
!8529 = !DILocation(line: 1599, column: 71, scope: !8512)
!8530 = !DILocation(line: 1599, column: 8, scope: !8512)
!8531 = !DILocation(line: 1600, column: 10, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8512, file: !1314, line: 1600, column: 6)
!8533 = !DILocation(line: 1600, column: 6, scope: !8512)
!8534 = !DILocation(line: 1616, column: 36, scope: !8512)
!8535 = !DILocation(line: 1616, column: 8, scope: !8512)
!8536 = !DILocation(line: 1617, column: 10, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8512, file: !1314, line: 1617, column: 6)
!8538 = !DILocation(line: 1617, column: 6, scope: !8512)
!8539 = !DILocation(line: 1621, column: 27, scope: !8512)
!8540 = !DILocation(line: 1621, column: 2, scope: !8512)
!8541 = !DILocation(line: 1624, column: 40, scope: !8512)
!8542 = !DILocation(line: 1624, column: 2, scope: !8512)
!8543 = !DILocation(line: 1630, column: 14, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8512, file: !1314, line: 1630, column: 6)
!8545 = !DILocation(line: 1630, column: 6, scope: !8512)
!8546 = !DILocation(line: 1638, column: 2, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !1314, line: 1634, column: 34)
!8548 = distinct !DILexicalBlock(scope: !8544, file: !1314, line: 1634, column: 13)
!8549 = !DILocation(line: 0, scope: !8544)
!8550 = !DILocation(line: 1649, column: 35, scope: !8512)
!8551 = !DILocation(line: 1649, column: 2, scope: !8512)
!8552 = !DILocation(line: 1654, column: 14, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8512, file: !1314, line: 1654, column: 6)
!8554 = !DILocation(line: 1654, column: 6, scope: !8512)
!8555 = !DILocation(line: 1655, column: 3, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8553, file: !1314, line: 1654, column: 31)
!8557 = !DILocation(line: 1656, column: 2, scope: !8556)
!8558 = !DILocation(line: 1659, column: 37, scope: !8512)
!8559 = !DILocation(line: 1659, column: 2, scope: !8512)
!8560 = !DILocation(line: 1662, column: 14, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8512, file: !1314, line: 1662, column: 6)
!8562 = !DILocation(line: 1662, column: 6, scope: !8512)
!8563 = !DILocation(line: 1663, column: 37, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8561, file: !1314, line: 1662, column: 27)
!8565 = !DILocation(line: 1663, column: 3, scope: !8564)
!8566 = !DILocation(line: 1664, column: 2, scope: !8564)
!8567 = !DILocation(line: 1684, column: 26, scope: !8512)
!8568 = !DILocation(line: 1684, column: 2, scope: !8512)
!8569 = !DILocation(line: 1722, column: 2, scope: !8512)
!8570 = !DILocation(line: 1724, column: 1, scope: !8512)
!8571 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1314, file: !1314, line: 651, type: !8572, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8574)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{null, !1217}
!8574 = !{!8575, !8576, !8577}
!8575 = !DILocalVariable(name: "dev", arg: 1, scope: !8571, file: !1314, line: 651, type: !1217)
!8576 = !DILocalVariable(name: "data", scope: !8571, file: !1314, line: 653, type: !7992)
!8577 = !DILocalVariable(name: "clk", scope: !8571, file: !1314, line: 654, type: !8578)
!8578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!8579 = !DILocation(line: 0, scope: !8571)
!8580 = !DILocation(line: 653, column: 38, scope: !8571)
!8581 = !DILocation(line: 656, column: 8, scope: !8571)
!8582 = !DILocation(line: 656, column: 14, scope: !8571)
!8583 = !DILocation(line: 657, column: 1, scope: !8571)
!8584 = distinct !DISubprogram(name: "device_is_ready", scope: !7007, file: !7007, line: 47, type: !8585, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8587)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!157, !1217}
!8587 = !{!8588}
!8588 = !DILocalVariable(name: "dev", arg: 1, scope: !8584, file: !7007, line: 47, type: !1217)
!8589 = !DILocation(line: 0, scope: !8584)
!8590 = !DILocation(line: 55, column: 2, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8584, file: !7007, line: 55, column: 2)
!8592 = !{i64 2155368740}
!8593 = !DILocation(line: 56, column: 9, scope: !8584)
!8594 = !DILocation(line: 56, column: 2, scope: !8584)
!8595 = distinct !DISubprogram(name: "clock_control_on", scope: !671, file: !671, line: 123, type: !1276, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8596)
!8596 = !{!8597, !8598, !8599}
!8597 = !DILocalVariable(name: "dev", arg: 1, scope: !8595, file: !671, line: 123, type: !1217)
!8598 = !DILocalVariable(name: "sys", arg: 2, scope: !8595, file: !671, line: 124, type: !767)
!8599 = !DILocalVariable(name: "api", scope: !8595, file: !671, line: 126, type: !1269)
!8600 = !DILocation(line: 0, scope: !8595)
!8601 = !DILocation(line: 127, column: 49, scope: !8595)
!8602 = !DILocation(line: 129, column: 14, scope: !8595)
!8603 = !DILocation(line: 129, column: 9, scope: !8595)
!8604 = !DILocation(line: 129, column: 2, scope: !8595)
!8605 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1365, file: !1365, line: 342, type: !8606, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8608)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!103, !1415, !154}
!8608 = !{!8609, !8610, !8611, !8612}
!8609 = !DILocalVariable(name: "config", arg: 1, scope: !8605, file: !1365, line: 342, type: !1415)
!8610 = !DILocalVariable(name: "id", arg: 2, scope: !8605, file: !1365, line: 343, type: !154)
!8611 = !DILocalVariable(name: "ret", scope: !8605, file: !1365, line: 345, type: !103)
!8612 = !DILocalVariable(name: "state", scope: !8605, file: !1365, line: 346, type: !1368)
!8613 = !DILocation(line: 0, scope: !8605)
!8614 = !DILocation(line: 346, column: 2, scope: !8605)
!8615 = !DILocation(line: 348, column: 8, scope: !8605)
!8616 = !DILocation(line: 349, column: 10, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8605, file: !1365, line: 349, column: 6)
!8618 = !DILocation(line: 349, column: 6, scope: !8605)
!8619 = !DILocation(line: 353, column: 44, scope: !8605)
!8620 = !DILocation(line: 353, column: 9, scope: !8605)
!8621 = !DILocation(line: 353, column: 2, scope: !8605)
!8622 = !DILocation(line: 354, column: 1, scope: !8605)
!8623 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8178, file: !8178, line: 497, type: !8337, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8624)
!8624 = !{!8625, !8626, !8627}
!8625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8623, file: !8178, line: 497, type: !1258)
!8626 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8623, file: !8178, line: 497, type: !121)
!8627 = !DILocalVariable(name: "val", scope: !8628, file: !8178, line: 499, type: !121)
!8628 = distinct !DILexicalBlock(scope: !8623, file: !8178, line: 499, column: 3)
!8629 = !DILocation(line: 0, scope: !8623)
!8630 = !DILocation(line: 499, column: 3, scope: !8628)
!8631 = !DILocalVariable(name: "addr", arg: 1, scope: !8632, file: !4797, line: 476, type: !1310)
!8632 = distinct !DISubprogram(name: "__LDREXW", scope: !4797, file: !4797, line: 476, type: !8633, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8635)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{!121, !1310}
!8635 = !{!8631, !8636}
!8636 = !DILocalVariable(name: "result", scope: !8632, file: !4797, line: 478, type: !121)
!8637 = !DILocation(line: 0, scope: !8632, inlinedAt: !8638)
!8638 = distinct !DILocation(line: 499, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8628, file: !8178, line: 499, column: 3)
!8640 = !DILocation(line: 480, column: 4, scope: !8632, inlinedAt: !8638)
!8641 = !{i64 3758059}
!8642 = !DILocation(line: 499, column: 3, scope: !8639)
!8643 = !DILocation(line: 0, scope: !8628)
!8644 = !DILocalVariable(name: "value", arg: 1, scope: !8645, file: !4797, line: 527, type: !121)
!8645 = distinct !DISubprogram(name: "__STREXW", scope: !4797, file: !4797, line: 527, type: !8646, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8648)
!8646 = !DISubroutineType(types: !8647)
!8647 = !{!121, !121, !1310}
!8648 = !{!8644, !8649, !8650}
!8649 = !DILocalVariable(name: "addr", arg: 2, scope: !8645, file: !4797, line: 527, type: !1310)
!8650 = !DILocalVariable(name: "result", scope: !8645, file: !4797, line: 529, type: !121)
!8651 = !DILocation(line: 0, scope: !8645, inlinedAt: !8652)
!8652 = distinct !DILocation(line: 499, column: 3, scope: !8628)
!8653 = !DILocation(line: 531, column: 4, scope: !8645, inlinedAt: !8652)
!8654 = !{i64 3759495}
!8655 = distinct !{!8655, !8630, !8630}
!8656 = !DILocation(line: 500, column: 1, scope: !8623)
!8657 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8178, file: !8178, line: 850, type: !8346, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8658)
!8658 = !{!8659, !8660, !8661, !8662}
!8659 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8657, file: !8178, line: 850, type: !1258)
!8660 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8657, file: !8178, line: 850, type: !121)
!8661 = !DILocalVariable(name: "Parity", arg: 3, scope: !8657, file: !8178, line: 850, type: !121)
!8662 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8657, file: !8178, line: 851, type: !121)
!8663 = !DILocation(line: 0, scope: !8657)
!8664 = !DILocation(line: 853, column: 3, scope: !8657)
!8665 = !DILocation(line: 854, column: 3, scope: !8657)
!8666 = !DILocation(line: 855, column: 1, scope: !8657)
!8667 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8178, file: !8178, line: 1337, type: !8241, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8668)
!8668 = !{!8669}
!8669 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8667, file: !8178, line: 1337, type: !1258)
!8670 = !DILocation(line: 0, scope: !8667)
!8671 = !DILocation(line: 1339, column: 3, scope: !8667)
!8672 = !DILocation(line: 1340, column: 1, scope: !8667)
!8673 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1365, file: !1365, line: 316, type: !8674, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8676)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!103, !1415, !1368}
!8676 = !{!8677, !8678, !8679}
!8677 = !DILocalVariable(name: "config", arg: 1, scope: !8673, file: !1365, line: 317, type: !1415)
!8678 = !DILocalVariable(name: "state", arg: 2, scope: !8673, file: !1365, line: 318, type: !1368)
!8679 = !DILocalVariable(name: "reg", scope: !8673, file: !1365, line: 320, type: !22)
!8680 = !DILocation(line: 0, scope: !8673)
!8681 = !DILocation(line: 329, column: 39, scope: !8673)
!8682 = !DILocation(line: 329, column: 52, scope: !8673)
!8683 = !DILocation(line: 329, column: 9, scope: !8673)
!8684 = !DILocation(line: 329, column: 2, scope: !8673)
!8685 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8585, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8686)
!8686 = !{!8687}
!8687 = !DILocalVariable(name: "dev", arg: 1, scope: !8685, file: !141, line: 730, type: !1217)
!8688 = !DILocation(line: 0, scope: !8685)
!8689 = !DILocation(line: 732, column: 9, scope: !8685)
!8690 = !DILocation(line: 732, column: 2, scope: !8685)
!8691 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1532, file: !1532, line: 270, type: !1538, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8692)
!8692 = !{!8693}
!8693 = !DILocalVariable(name: "dev", arg: 1, scope: !8691, file: !1532, line: 270, type: !1540)
!8694 = !DILocation(line: 0, scope: !8691)
!8695 = !DILocation(line: 274, column: 2, scope: !8691)
!8696 = !DILocation(line: 275, column: 12, scope: !8691)
!8697 = !DILocation(line: 276, column: 15, scope: !8691)
!8698 = !DILocation(line: 277, column: 16, scope: !8691)
!8699 = !DILocation(line: 278, column: 15, scope: !8691)
!8700 = !DILocation(line: 279, column: 16, scope: !8691)
!8701 = !DILocation(line: 282, column: 2, scope: !8691)
!8702 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4831, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8703)
!8703 = !{!8704, !8705}
!8704 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8702, file: !356, line: 1814, type: !621)
!8705 = !DILocalVariable(name: "priority", arg: 2, scope: !8702, file: !356, line: 1814, type: !121)
!8706 = !DILocation(line: 0, scope: !8702)
!8707 = !DILocation(line: 1822, column: 46, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !356, line: 1821, column: 3)
!8709 = distinct !DILexicalBlock(scope: !8702, file: !356, line: 1816, column: 7)
!8710 = !DILocation(line: 1824, column: 1, scope: !8702)
!8711 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1532, file: !1532, line: 118, type: !4734, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8712)
!8712 = !{!8713, !8714}
!8713 = !DILocalVariable(name: "arg", arg: 1, scope: !8711, file: !1532, line: 118, type: !102)
!8714 = !DILocalVariable(name: "dticks", scope: !8711, file: !1532, line: 121, type: !121)
!8715 = !DILocation(line: 0, scope: !8711)
!8716 = !DILocation(line: 124, column: 2, scope: !8711)
!8717 = !DILocation(line: 129, column: 17, scope: !8711)
!8718 = !DILocation(line: 129, column: 14, scope: !8711)
!8719 = !DILocation(line: 130, column: 15, scope: !8711)
!8720 = !DILocation(line: 145, column: 27, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !1532, line: 132, column: 16)
!8722 = distinct !DILexicalBlock(scope: !8711, file: !1532, line: 132, column: 6)
!8723 = !DILocation(line: 145, column: 25, scope: !8721)
!8724 = !DILocation(line: 145, column: 45, scope: !8721)
!8725 = !DILocation(line: 146, column: 30, scope: !8721)
!8726 = !DILocation(line: 146, column: 20, scope: !8721)
!8727 = !DILocation(line: 147, column: 3, scope: !8721)
!8728 = !DILocation(line: 151, column: 2, scope: !8711)
!8729 = !DILocation(line: 152, column: 1, scope: !8711)
!8730 = distinct !DISubprogram(name: "elapsed", scope: !1532, file: !1532, line: 85, type: !4878, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8731)
!8731 = !{!8732, !8733, !8734}
!8732 = !DILocalVariable(name: "val1", scope: !8730, file: !1532, line: 87, type: !121)
!8733 = !DILocalVariable(name: "ctrl", scope: !8730, file: !1532, line: 88, type: !121)
!8734 = !DILocalVariable(name: "val2", scope: !8730, file: !1532, line: 89, type: !121)
!8735 = !DILocation(line: 87, column: 27, scope: !8730)
!8736 = !DILocation(line: 0, scope: !8730)
!8737 = !DILocation(line: 88, column: 27, scope: !8730)
!8738 = !DILocation(line: 89, column: 27, scope: !8730)
!8739 = !DILocation(line: 105, column: 12, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8730, file: !1532, line: 105, column: 6)
!8741 = !DILocation(line: 106, column: 6, scope: !8740)
!8742 = !DILocation(line: 107, column: 16, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !1532, line: 106, column: 24)
!8744 = !DILocation(line: 111, column: 18, scope: !8743)
!8745 = !DILocation(line: 112, column: 2, scope: !8743)
!8746 = !DILocation(line: 114, column: 20, scope: !8730)
!8747 = !DILocation(line: 114, column: 30, scope: !8730)
!8748 = !DILocation(line: 114, column: 28, scope: !8730)
!8749 = !DILocation(line: 114, column: 2, scope: !8730)
!8750 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1532, file: !1532, line: 154, type: !8751, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{null, !595, !157}
!8753 = !{!8754, !8755, !8756, !8757, !8758, !8759, !8760, !8765, !8766}
!8754 = !DILocalVariable(name: "ticks", arg: 1, scope: !8750, file: !1532, line: 154, type: !595)
!8755 = !DILocalVariable(name: "idle", arg: 2, scope: !8750, file: !1532, line: 154, type: !157)
!8756 = !DILocalVariable(name: "delay", scope: !8750, file: !1532, line: 169, type: !121)
!8757 = !DILocalVariable(name: "val1", scope: !8750, file: !1532, line: 170, type: !121)
!8758 = !DILocalVariable(name: "val2", scope: !8750, file: !1532, line: 170, type: !121)
!8759 = !DILocalVariable(name: "last_load_", scope: !8750, file: !1532, line: 171, type: !121)
!8760 = !DILocalVariable(name: "key", scope: !8750, file: !1532, line: 176, type: !8761)
!8761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !8762)
!8762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !8763)
!8763 = !{!8764}
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8762, file: !321, line: 33, baseType: !103, size: 32)
!8765 = !DILocalVariable(name: "pending", scope: !8750, file: !1532, line: 178, type: !121)
!8766 = !DILocalVariable(name: "unannounced", scope: !8750, file: !1532, line: 185, type: !121)
!8767 = !DILocation(line: 0, scope: !8750)
!8768 = !DILocation(line: 162, column: 49, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8750, file: !1532, line: 162, column: 6)
!8770 = !DILocation(line: 163, column: 17, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8769, file: !1532, line: 162, column: 78)
!8772 = !DILocation(line: 164, column: 13, scope: !8771)
!8773 = !DILocation(line: 165, column: 3, scope: !8771)
!8774 = !DILocation(line: 171, column: 24, scope: !8750)
!8775 = !DILocation(line: 173, column: 10, scope: !8750)
!8776 = !DILocation(line: 174, column: 10, scope: !8750)
!8777 = !DILocalVariable(name: "l", arg: 1, scope: !8778, file: !321, line: 136, type: !8781)
!8778 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !8779, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8782)
!8779 = !DISubroutineType(types: !8780)
!8780 = !{!8761, !8781}
!8781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!8782 = !{!8777, !8783}
!8783 = !DILocalVariable(name: "k", scope: !8778, file: !321, line: 139, type: !8761)
!8784 = !DILocation(line: 0, scope: !8778, inlinedAt: !8785)
!8785 = distinct !DILocation(line: 176, column: 25, scope: !8750)
!8786 = !DILocation(line: 55, column: 2, scope: !8787, inlinedAt: !8791)
!8787 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8788)
!8788 = !{!8789, !8790}
!8789 = !DILocalVariable(name: "key", scope: !8787, file: !4623, line: 44, type: !32)
!8790 = !DILocalVariable(name: "tmp", scope: !8787, file: !4623, line: 53, type: !32)
!8791 = distinct !DILocation(line: 145, column: 10, scope: !8778, inlinedAt: !8785)
!8792 = !{i64 2278911}
!8793 = !DILocation(line: 0, scope: !8787, inlinedAt: !8791)
!8794 = !DILocation(line: 178, column: 21, scope: !8750)
!8795 = !DILocation(line: 180, column: 18, scope: !8750)
!8796 = !DILocation(line: 182, column: 14, scope: !8750)
!8797 = !DILocation(line: 183, column: 15, scope: !8750)
!8798 = !DILocation(line: 185, column: 39, scope: !8750)
!8799 = !DILocation(line: 185, column: 37, scope: !8750)
!8800 = !DILocation(line: 187, column: 27, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8750, file: !1532, line: 187, column: 6)
!8802 = !DILocation(line: 187, column: 6, scope: !8750)
!8803 = !DILocation(line: 202, column: 27, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8801, file: !1532, line: 195, column: 9)
!8805 = !DILocation(line: 202, column: 48, scope: !8804)
!8806 = !DILocation(line: 203, column: 9, scope: !8804)
!8807 = !DILocation(line: 204, column: 11, scope: !8804)
!8808 = !DILocation(line: 205, column: 13, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8804, file: !1532, line: 205, column: 7)
!8810 = !DILocation(line: 205, column: 7, scope: !8804)
!8811 = !DILocation(line: 0, scope: !8801)
!8812 = !DILocation(line: 212, column: 18, scope: !8750)
!8813 = !DILocation(line: 214, column: 28, scope: !8750)
!8814 = !DILocation(line: 214, column: 16, scope: !8750)
!8815 = !DILocation(line: 215, column: 15, scope: !8750)
!8816 = !DILocation(line: 227, column: 11, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8750, file: !1532, line: 227, column: 6)
!8818 = !DILocation(line: 227, column: 6, scope: !8750)
!8819 = !DILocation(line: 228, column: 15, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8817, file: !1532, line: 227, column: 19)
!8821 = !DILocation(line: 228, column: 38, scope: !8820)
!8822 = !DILocation(line: 228, column: 24, scope: !8820)
!8823 = !DILocation(line: 229, column: 2, scope: !8820)
!8824 = !DILocation(line: 230, column: 24, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8817, file: !1532, line: 229, column: 9)
!8826 = !DILocation(line: 230, column: 15, scope: !8825)
!8827 = !DILocation(line: 0, scope: !8817)
!8828 = !DILocalVariable(name: "key", arg: 2, scope: !8829, file: !321, line: 190, type: !8761)
!8829 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !8830, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8832)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{null, !8781, !8761}
!8832 = !{!8833, !8828}
!8833 = !DILocalVariable(name: "l", arg: 1, scope: !8829, file: !321, line: 189, type: !8781)
!8834 = !DILocation(line: 0, scope: !8829, inlinedAt: !8835)
!8835 = distinct !DILocation(line: 232, column: 2, scope: !8750)
!8836 = !DILocalVariable(name: "key", arg: 1, scope: !8837, file: !4623, line: 84, type: !32)
!8837 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8838)
!8838 = !{!8836}
!8839 = !DILocation(line: 0, scope: !8837, inlinedAt: !8840)
!8840 = distinct !DILocation(line: 215, column: 2, scope: !8829, inlinedAt: !8835)
!8841 = !DILocation(line: 95, column: 2, scope: !8837, inlinedAt: !8840)
!8842 = !{i64 2279728}
!8843 = !DILocation(line: 234, column: 1, scope: !8750)
!8844 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1532, file: !1532, line: 236, type: !4878, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8845)
!8845 = !{!8846, !8847}
!8846 = !DILocalVariable(name: "key", scope: !8844, file: !1532, line: 242, type: !8761)
!8847 = !DILocalVariable(name: "cyc", scope: !8844, file: !1532, line: 243, type: !121)
!8848 = !DILocation(line: 0, scope: !8778, inlinedAt: !8849)
!8849 = distinct !DILocation(line: 242, column: 25, scope: !8844)
!8850 = !DILocation(line: 55, column: 2, scope: !8787, inlinedAt: !8851)
!8851 = distinct !DILocation(line: 145, column: 10, scope: !8778, inlinedAt: !8849)
!8852 = !DILocation(line: 0, scope: !8787, inlinedAt: !8851)
!8853 = !DILocation(line: 0, scope: !8844)
!8854 = !DILocation(line: 243, column: 17, scope: !8844)
!8855 = !DILocation(line: 243, column: 29, scope: !8844)
!8856 = !DILocation(line: 243, column: 27, scope: !8844)
!8857 = !DILocation(line: 243, column: 43, scope: !8844)
!8858 = !DILocation(line: 243, column: 41, scope: !8844)
!8859 = !DILocation(line: 0, scope: !8829, inlinedAt: !8860)
!8860 = distinct !DILocation(line: 245, column: 2, scope: !8844)
!8861 = !DILocation(line: 0, scope: !8837, inlinedAt: !8862)
!8862 = distinct !DILocation(line: 215, column: 2, scope: !8829, inlinedAt: !8860)
!8863 = !DILocation(line: 95, column: 2, scope: !8837, inlinedAt: !8862)
!8864 = !DILocation(line: 246, column: 13, scope: !8844)
!8865 = !DILocation(line: 246, column: 2, scope: !8844)
!8866 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1532, file: !1532, line: 249, type: !4878, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8867)
!8867 = !{!8868, !8869}
!8868 = !DILocalVariable(name: "key", scope: !8866, file: !1532, line: 251, type: !8761)
!8869 = !DILocalVariable(name: "ret", scope: !8866, file: !1532, line: 252, type: !121)
!8870 = !DILocation(line: 0, scope: !8778, inlinedAt: !8871)
!8871 = distinct !DILocation(line: 251, column: 25, scope: !8866)
!8872 = !DILocation(line: 55, column: 2, scope: !8787, inlinedAt: !8873)
!8873 = distinct !DILocation(line: 145, column: 10, scope: !8778, inlinedAt: !8871)
!8874 = !DILocation(line: 0, scope: !8787, inlinedAt: !8873)
!8875 = !DILocation(line: 0, scope: !8866)
!8876 = !DILocation(line: 252, column: 17, scope: !8866)
!8877 = !DILocation(line: 252, column: 29, scope: !8866)
!8878 = !DILocation(line: 252, column: 27, scope: !8866)
!8879 = !DILocation(line: 0, scope: !8829, inlinedAt: !8880)
!8880 = distinct !DILocation(line: 254, column: 2, scope: !8866)
!8881 = !DILocation(line: 0, scope: !8837, inlinedAt: !8882)
!8882 = distinct !DILocation(line: 215, column: 2, scope: !8829, inlinedAt: !8880)
!8883 = !DILocation(line: 95, column: 2, scope: !8837, inlinedAt: !8882)
!8884 = !DILocation(line: 255, column: 2, scope: !8866)
!8885 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1532, file: !1532, line: 258, type: !2821, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !322)
!8886 = !DILocation(line: 260, column: 6, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8885, file: !1532, line: 260, column: 6)
!8888 = !DILocation(line: 260, column: 16, scope: !8887)
!8889 = !DILocation(line: 260, column: 6, scope: !8885)
!8890 = !DILocation(line: 261, column: 17, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8887, file: !1532, line: 260, column: 34)
!8892 = !DILocation(line: 262, column: 2, scope: !8891)
!8893 = !DILocation(line: 263, column: 1, scope: !8885)
!8894 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1532, file: !1532, line: 265, type: !2821, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !322)
!8895 = !DILocation(line: 267, column: 16, scope: !8894)
!8896 = !DILocation(line: 268, column: 1, scope: !8894)
!8897 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8898, file: !8898, line: 9, type: !8899, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !8922)
!8898 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8899 = !DISubroutineType(types: !8900)
!8900 = !{!103, !8901, !154, !8921}
!8901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8902, size: 32)
!8902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8903)
!8903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1365, line: 60, size: 64, elements: !8904)
!8904 = !{!8905, !8920}
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8903, file: !1365, line: 69, baseType: !8906, size: 32)
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8907, size: 32)
!8907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8908)
!8908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1365, line: 50, size: 64, elements: !8909)
!8909 = !{!8910, !8918, !8919}
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8908, file: !1365, line: 52, baseType: !8911, size: 32)
!8911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8912, size: 32)
!8912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8913)
!8913 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !8914)
!8914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !8915)
!8915 = !{!8916, !8917}
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8914, file: !1376, line: 34, baseType: !121, size: 32)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8914, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8908, file: !1365, line: 54, baseType: !154, size: 8, offset: 32)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8908, file: !1365, line: 56, baseType: !154, size: 8, offset: 40)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8903, file: !1365, line: 71, baseType: !154, size: 8, offset: 32)
!8921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8906, size: 32)
!8922 = !{!8923, !8924, !8925}
!8923 = !DILocalVariable(name: "config", arg: 1, scope: !8897, file: !8898, line: 9, type: !8901)
!8924 = !DILocalVariable(name: "id", arg: 2, scope: !8897, file: !8898, line: 9, type: !154)
!8925 = !DILocalVariable(name: "state", arg: 3, scope: !8897, file: !8898, line: 10, type: !8921)
!8926 = !DILocation(line: 0, scope: !8897)
!8927 = !DILocation(line: 12, column: 20, scope: !8897)
!8928 = !DILocation(line: 13, column: 27, scope: !8897)
!8929 = !DILocation(line: 13, column: 42, scope: !8897)
!8930 = !DILocation(line: 13, column: 19, scope: !8897)
!8931 = !DILocation(line: 13, column: 16, scope: !8897)
!8932 = !DILocation(line: 13, column: 2, scope: !8897)
!8933 = distinct !{!8933, !8932, !8934}
!8934 = !DILocation(line: 19, column: 2, scope: !8897)
!8935 = !DILocation(line: 14, column: 23, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !8898, line: 14, column: 7)
!8937 = distinct !DILexicalBlock(scope: !8897, file: !8898, line: 13, column: 54)
!8938 = !DILocation(line: 14, column: 10, scope: !8936)
!8939 = !DILocation(line: 18, column: 11, scope: !8937)
!8940 = !DILocation(line: 14, column: 7, scope: !8937)
!8941 = !DILocation(line: 22, column: 1, scope: !8897)
!8942 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1649, file: !1649, line: 193, type: !8943, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !8952)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!103, !8945, !154, !22}
!8945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 32)
!8946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8947)
!8947 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !8948)
!8948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !8949)
!8949 = !{!8950, !8951}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8948, file: !1376, line: 34, baseType: !121, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8948, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!8952 = !{!8953, !8954, !8955, !8956, !8957, !8958, !8959, !8960, !8962}
!8953 = !DILocalVariable(name: "pins", arg: 1, scope: !8942, file: !1649, line: 193, type: !8945)
!8954 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8942, file: !1649, line: 193, type: !154)
!8955 = !DILocalVariable(name: "reg", arg: 3, scope: !8942, file: !1649, line: 194, type: !22)
!8956 = !DILocalVariable(name: "pin", scope: !8942, file: !1649, line: 196, type: !121)
!8957 = !DILocalVariable(name: "mux", scope: !8942, file: !1649, line: 196, type: !121)
!8958 = !DILocalVariable(name: "pin_cgf", scope: !8942, file: !1649, line: 197, type: !121)
!8959 = !DILocalVariable(name: "ret", scope: !8942, file: !1649, line: 198, type: !103)
!8960 = !DILocalVariable(name: "i", scope: !8961, file: !1649, line: 209, type: !154)
!8961 = distinct !DILexicalBlock(scope: !8942, file: !1649, line: 209, column: 2)
!8962 = !DILocalVariable(name: "gpio_out", scope: !8963, file: !1649, line: 239, type: !121)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !1649, line: 238, column: 55)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !1649, line: 238, column: 14)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !1649, line: 236, column: 14)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !1649, line: 234, column: 7)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !1649, line: 209, column: 41)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !1649, line: 209, column: 2)
!8969 = !DILocation(line: 0, scope: !8942)
!8970 = !DILocation(line: 0, scope: !8961)
!8971 = !DILocation(line: 209, column: 25, scope: !8968)
!8972 = !DILocation(line: 209, column: 2, scope: !8961)
!8973 = distinct !{!8973, !8972, !8974}
!8974 = !DILocation(line: 259, column: 2, scope: !8961)
!8975 = !DILocation(line: 210, column: 17, scope: !8967)
!8976 = !DILocation(line: 234, column: 7, scope: !8966)
!8977 = !DILocation(line: 234, column: 33, scope: !8966)
!8978 = !DILocation(line: 234, column: 7, scope: !8967)
!8979 = !DILocation(line: 235, column: 22, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8966, file: !1649, line: 234, column: 49)
!8981 = !DILocation(line: 235, column: 29, scope: !8980)
!8982 = !DILocation(line: 236, column: 3, scope: !8980)
!8983 = !DILocation(line: 236, column: 14, scope: !8966)
!8984 = !DILocation(line: 239, column: 32, scope: !8963)
!8985 = !DILocation(line: 0, scope: !8963)
!8986 = !DILocation(line: 241, column: 8, scope: !8963)
!8987 = !DILocation(line: 246, column: 3, scope: !8963)
!8988 = !DILocation(line: 252, column: 9, scope: !8967)
!8989 = !DILocation(line: 255, column: 9, scope: !8967)
!8990 = !DILocation(line: 256, column: 11, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8967, file: !1649, line: 256, column: 7)
!8992 = !DILocation(line: 209, column: 37, scope: !8968)
!8993 = !DILocation(line: 256, column: 7, scope: !8967)
!8994 = !DILocation(line: 262, column: 1, scope: !8942)
!8995 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1649, file: !1649, line: 176, type: !8996, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !8998)
!8996 = !DISubroutineType(types: !8997)
!8997 = !{!103, !121, !121, !121}
!8998 = !{!8999, !9000, !9001, !9002}
!8999 = !DILocalVariable(name: "pin", arg: 1, scope: !8995, file: !1649, line: 176, type: !121)
!9000 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !8995, file: !1649, line: 176, type: !121)
!9001 = !DILocalVariable(name: "pin_func", arg: 3, scope: !8995, file: !1649, line: 176, type: !121)
!9002 = !DILocalVariable(name: "port_device", scope: !8995, file: !1649, line: 178, type: !1579)
!9003 = !DILocation(line: 0, scope: !8995)
!9004 = !DILocation(line: 180, column: 22, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8995, file: !1649, line: 180, column: 6)
!9006 = !DILocation(line: 180, column: 6, scope: !8995)
!9007 = !DILocation(line: 180, column: 6, scope: !9005)
!9008 = !DILocation(line: 184, column: 16, scope: !8995)
!9009 = !DILocation(line: 186, column: 19, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !8995, file: !1649, line: 186, column: 6)
!9011 = !DILocation(line: 186, column: 28, scope: !9010)
!9012 = !DILocation(line: 186, column: 33, scope: !9010)
!9013 = !DILocation(line: 186, column: 6, scope: !8995)
!9014 = !DILocation(line: 190, column: 43, scope: !8995)
!9015 = !DILocation(line: 190, column: 9, scope: !8995)
!9016 = !DILocation(line: 190, column: 2, scope: !8995)
!9017 = !DILocation(line: 191, column: 1, scope: !8995)
!9018 = distinct !DISubprogram(name: "device_is_ready", scope: !7007, file: !7007, line: 47, type: !9019, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9021)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{!157, !1579}
!9021 = !{!9022}
!9022 = !DILocalVariable(name: "dev", arg: 1, scope: !9018, file: !7007, line: 47, type: !1579)
!9023 = !DILocation(line: 0, scope: !9018)
!9024 = !DILocation(line: 55, column: 2, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9018, file: !7007, line: 55, column: 2)
!9026 = !{i64 2149512920}
!9027 = !DILocation(line: 56, column: 9, scope: !9018)
!9028 = !DILocation(line: 56, column: 2, scope: !9018)
!9029 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9019, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9030)
!9030 = !{!9031}
!9031 = !DILocalVariable(name: "dev", arg: 1, scope: !9029, file: !141, line: 730, type: !1579)
!9032 = !DILocation(line: 0, scope: !9029)
!9033 = !DILocation(line: 732, column: 9, scope: !9029)
!9034 = !DILocation(line: 732, column: 2, scope: !9029)
!9035 = distinct !DISubprogram(name: "SystemInit", scope: !1701, file: !1701, line: 167, type: !2821, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !322)
!9036 = !DILocation(line: 182, column: 1, scope: !9035)
!9037 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1701, file: !1701, line: 220, type: !2821, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !9038)
!9038 = !{!9039, !9040, !9041, !9042, !9043}
!9039 = !DILocalVariable(name: "tmp", scope: !9037, file: !1701, line: 222, type: !121)
!9040 = !DILocalVariable(name: "pllvco", scope: !9037, file: !1701, line: 222, type: !121)
!9041 = !DILocalVariable(name: "pllp", scope: !9037, file: !1701, line: 222, type: !121)
!9042 = !DILocalVariable(name: "pllsource", scope: !9037, file: !1701, line: 222, type: !121)
!9043 = !DILocalVariable(name: "pllm", scope: !9037, file: !1701, line: 222, type: !121)
!9044 = !DILocation(line: 0, scope: !9037)
!9045 = !DILocation(line: 225, column: 14, scope: !9037)
!9046 = !DILocation(line: 225, column: 19, scope: !9037)
!9047 = !DILocation(line: 227, column: 3, scope: !9037)
!9048 = !DILocation(line: 240, column: 25, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9037, file: !1701, line: 228, column: 3)
!9050 = !DILocation(line: 241, column: 19, scope: !9049)
!9051 = !DILocation(line: 241, column: 27, scope: !9049)
!9052 = !DILocation(line: 0, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9049, file: !1701, line: 243, column: 11)
!9054 = !DILocation(line: 254, column: 22, scope: !9049)
!9055 = !DILocation(line: 254, column: 62, scope: !9049)
!9056 = !DILocation(line: 255, column: 31, scope: !9049)
!9057 = !DILocation(line: 256, column: 7, scope: !9049)
!9058 = !DILocation(line: 0, scope: !9049)
!9059 = !DILocation(line: 263, column: 30, scope: !9037)
!9060 = !DILocation(line: 263, column: 52, scope: !9037)
!9061 = !DILocation(line: 263, column: 9, scope: !9037)
!9062 = !DILocation(line: 265, column: 19, scope: !9037)
!9063 = !DILocation(line: 266, column: 1, scope: !9037)
!9064 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !9065, file: !9065, line: 87, type: !9066, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9105)
!9065 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9066 = !DISubroutineType(types: !9067)
!9067 = !{!9068, !9069}
!9068 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2655, line: 44, baseType: !2654)
!9069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9070, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !9071, line: 172, baseType: !9072)
!9071 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9071, line: 121, size: 736, elements: !9073)
!9073 = !{!9074, !9075, !9084, !9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100, !9101, !9102, !9103, !9104}
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !9072, file: !9071, line: 123, baseType: !121, size: 32)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !9072, file: !9071, line: 126, baseType: !9076, size: 160, offset: 32)
!9076 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !9071, line: 97, baseType: !9077)
!9077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9071, line: 79, size: 160, elements: !9078)
!9078 = !{!9079, !9080, !9081, !9082, !9083}
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !9077, file: !9071, line: 81, baseType: !121, size: 32)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !9077, file: !9071, line: 84, baseType: !121, size: 32, offset: 32)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !9077, file: !9071, line: 87, baseType: !121, size: 32, offset: 64)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !9077, file: !9071, line: 90, baseType: !121, size: 32, offset: 96)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !9077, file: !9071, line: 94, baseType: !121, size: 32, offset: 128)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !9072, file: !9071, line: 129, baseType: !9085, size: 128, offset: 192)
!9085 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !9071, line: 116, baseType: !9086)
!9086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9071, line: 102, size: 128, elements: !9087)
!9087 = !{!9088, !9089, !9090, !9091}
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !9086, file: !9071, line: 104, baseType: !121, size: 32)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !9086, file: !9071, line: 107, baseType: !121, size: 32, offset: 32)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !9086, file: !9071, line: 110, baseType: !121, size: 32, offset: 64)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !9086, file: !9071, line: 113, baseType: !121, size: 32, offset: 96)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !9072, file: !9071, line: 132, baseType: !121, size: 32, offset: 320)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !9072, file: !9071, line: 136, baseType: !121, size: 32, offset: 352)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !9072, file: !9071, line: 140, baseType: !121, size: 32, offset: 384)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !9072, file: !9071, line: 143, baseType: !121, size: 32, offset: 416)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !9072, file: !9071, line: 146, baseType: !121, size: 32, offset: 448)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !9072, file: !9071, line: 149, baseType: !121, size: 32, offset: 480)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !9072, file: !9071, line: 152, baseType: !121, size: 32, offset: 512)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !9072, file: !9071, line: 155, baseType: !121, size: 32, offset: 544)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !9072, file: !9071, line: 158, baseType: !121, size: 32, offset: 576)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !9072, file: !9071, line: 161, baseType: !121, size: 32, offset: 608)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !9072, file: !9071, line: 164, baseType: !121, size: 32, offset: 640)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !9072, file: !9071, line: 167, baseType: !121, size: 32, offset: 672)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !9072, file: !9071, line: 170, baseType: !154, size: 8, offset: 704)
!9105 = !{!9106, !9107, !9108, !9109, !9110, !9111, !9112, !9113, !9114, !9115, !9116}
!9106 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9064, file: !9065, line: 87, type: !9069)
!9107 = !DILocalVariable(name: "tickstart", scope: !9064, file: !9065, line: 89, type: !121)
!9108 = !DILocalVariable(name: "tmpreg1", scope: !9064, file: !9065, line: 90, type: !121)
!9109 = !DILocalVariable(name: "plli2sp", scope: !9064, file: !9065, line: 91, type: !121)
!9110 = !DILocalVariable(name: "plli2sq", scope: !9064, file: !9065, line: 92, type: !121)
!9111 = !DILocalVariable(name: "plli2sr", scope: !9064, file: !9065, line: 93, type: !121)
!9112 = !DILocalVariable(name: "pllsaip", scope: !9064, file: !9065, line: 94, type: !121)
!9113 = !DILocalVariable(name: "pllsaiq", scope: !9064, file: !9065, line: 95, type: !121)
!9114 = !DILocalVariable(name: "plli2sused", scope: !9064, file: !9065, line: 96, type: !121)
!9115 = !DILocalVariable(name: "pllsaiused", scope: !9064, file: !9065, line: 97, type: !121)
!9116 = !DILocalVariable(name: "tmpreg", scope: !9117, file: !9065, line: 184, type: !120)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !9065, line: 184, column: 5)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !9065, line: 179, column: 3)
!9119 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 178, column: 6)
!9120 = !DILocation(line: 0, scope: !9064)
!9121 = !DILocation(line: 103, column: 23, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 103, column: 6)
!9123 = !DILocation(line: 103, column: 45, scope: !9122)
!9124 = !DILocation(line: 103, column: 71, scope: !9122)
!9125 = !DILocation(line: 103, column: 6, scope: !9064)
!9126 = !DILocation(line: 109, column: 5, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9122, file: !9065, line: 104, column: 3)
!9128 = !DILocation(line: 111, column: 23, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9127, file: !9065, line: 111, column: 8)
!9130 = !DILocation(line: 111, column: 45, scope: !9129)
!9131 = !DILocation(line: 111, column: 8, scope: !9127)
!9132 = !DILocation(line: 119, column: 23, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 119, column: 6)
!9134 = !DILocation(line: 119, column: 45, scope: !9133)
!9135 = !DILocation(line: 119, column: 71, scope: !9133)
!9136 = !DILocation(line: 119, column: 6, scope: !9064)
!9137 = !DILocation(line: 125, column: 5, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9133, file: !9065, line: 120, column: 3)
!9139 = !DILocation(line: 127, column: 23, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9138, file: !9065, line: 127, column: 8)
!9141 = !DILocation(line: 127, column: 45, scope: !9140)
!9142 = !DILocation(line: 127, column: 8, scope: !9138)
!9143 = !DILocation(line: 135, column: 23, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 135, column: 6)
!9145 = !DILocation(line: 135, column: 45, scope: !9144)
!9146 = !DILocation(line: 135, column: 67, scope: !9144)
!9147 = !DILocation(line: 135, column: 6, scope: !9064)
!9148 = !DILocation(line: 141, column: 5, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9144, file: !9065, line: 136, column: 3)
!9150 = !DILocation(line: 143, column: 23, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9149, file: !9065, line: 143, column: 8)
!9152 = !DILocation(line: 143, column: 42, scope: !9151)
!9153 = !DILocation(line: 143, column: 8, scope: !9149)
!9154 = !DILocation(line: 148, column: 42, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9149, file: !9065, line: 148, column: 8)
!9156 = !DILocation(line: 148, column: 8, scope: !9149)
!9157 = !DILocation(line: 156, column: 23, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 156, column: 6)
!9159 = !DILocation(line: 156, column: 45, scope: !9158)
!9160 = !DILocation(line: 156, column: 67, scope: !9158)
!9161 = !DILocation(line: 156, column: 6, scope: !9064)
!9162 = !DILocation(line: 162, column: 5, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9158, file: !9065, line: 157, column: 3)
!9164 = !DILocation(line: 165, column: 23, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9163, file: !9065, line: 165, column: 8)
!9166 = !DILocation(line: 165, column: 42, scope: !9165)
!9167 = !DILocation(line: 165, column: 8, scope: !9163)
!9168 = !DILocation(line: 170, column: 42, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9163, file: !9065, line: 170, column: 8)
!9170 = !DILocation(line: 170, column: 8, scope: !9163)
!9171 = !DILocation(line: 178, column: 23, scope: !9119)
!9172 = !DILocation(line: 178, column: 45, scope: !9119)
!9173 = !DILocation(line: 178, column: 66, scope: !9119)
!9174 = !DILocation(line: 178, column: 6, scope: !9064)
!9175 = !DILocation(line: 184, column: 5, scope: !9117)
!9176 = !DILocation(line: 184, column: 5, scope: !9118)
!9177 = !DILocation(line: 187, column: 13, scope: !9118)
!9178 = !DILocation(line: 190, column: 17, scope: !9118)
!9179 = !DILocation(line: 192, column: 5, scope: !9118)
!9180 = !DILocation(line: 192, column: 17, scope: !9118)
!9181 = !DILocation(line: 192, column: 20, scope: !9118)
!9182 = !DILocation(line: 192, column: 34, scope: !9118)
!9183 = !DILocation(line: 194, column: 11, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !9065, line: 194, column: 10)
!9185 = distinct !DILexicalBlock(scope: !9118, file: !9065, line: 193, column: 5)
!9186 = !DILocation(line: 194, column: 25, scope: !9184)
!9187 = !DILocation(line: 194, column: 39, scope: !9184)
!9188 = !DILocation(line: 194, column: 10, scope: !9185)
!9189 = distinct !{!9189, !9179, !9190}
!9190 = !DILocation(line: 198, column: 5, scope: !9118)
!9191 = !DILocation(line: 200, column: 21, scope: !9118)
!9192 = !DILocation(line: 200, column: 26, scope: !9118)
!9193 = !DILocation(line: 201, column: 17, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9118, file: !9065, line: 201, column: 8)
!9195 = !DILocation(line: 201, column: 33, scope: !9194)
!9196 = !DILocation(line: 201, column: 66, scope: !9194)
!9197 = !DILocation(line: 201, column: 84, scope: !9194)
!9198 = !DILocation(line: 201, column: 47, scope: !9194)
!9199 = !DILocation(line: 201, column: 8, scope: !9118)
!9200 = !DILocation(line: 204, column: 23, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9194, file: !9065, line: 202, column: 5)
!9202 = !DILocation(line: 204, column: 28, scope: !9201)
!9203 = !DILocation(line: 206, column: 7, scope: !9201)
!9204 = !DILocation(line: 207, column: 7, scope: !9201)
!9205 = !DILocation(line: 209, column: 17, scope: !9201)
!9206 = !DILocation(line: 212, column: 10, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9201, file: !9065, line: 212, column: 10)
!9208 = !DILocation(line: 212, column: 10, scope: !9201)
!9209 = !DILocation(line: 215, column: 21, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9207, file: !9065, line: 213, column: 7)
!9211 = !DILocation(line: 218, column: 9, scope: !9210)
!9212 = !DILocation(line: 218, column: 15, scope: !9210)
!9213 = !DILocation(line: 218, column: 51, scope: !9210)
!9214 = !DILocation(line: 220, column: 15, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !9065, line: 220, column: 14)
!9216 = distinct !DILexicalBlock(scope: !9210, file: !9065, line: 219, column: 9)
!9217 = !DILocation(line: 220, column: 29, scope: !9215)
!9218 = !DILocation(line: 220, column: 43, scope: !9215)
!9219 = !DILocation(line: 220, column: 14, scope: !9216)
!9220 = distinct !{!9220, !9211, !9221}
!9221 = !DILocation(line: 224, column: 9, scope: !9210)
!9222 = !DILocation(line: 227, column: 5, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9118, file: !9065, line: 227, column: 5)
!9224 = !DILocation(line: 232, column: 23, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 232, column: 6)
!9226 = !DILocation(line: 228, column: 3, scope: !9118)
!9227 = !DILocation(line: 232, column: 45, scope: !9225)
!9228 = !DILocation(line: 232, column: 66, scope: !9225)
!9229 = !DILocation(line: 232, column: 6, scope: !9064)
!9230 = !DILocation(line: 235, column: 5, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9225, file: !9065, line: 233, column: 3)
!9232 = !DILocation(line: 240, column: 23, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 240, column: 6)
!9234 = !DILocation(line: 236, column: 3, scope: !9231)
!9235 = !DILocation(line: 240, column: 45, scope: !9233)
!9236 = !DILocation(line: 240, column: 70, scope: !9233)
!9237 = !DILocation(line: 240, column: 6, scope: !9064)
!9238 = !DILocation(line: 246, column: 5, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9233, file: !9065, line: 241, column: 3)
!9240 = !DILocation(line: 251, column: 23, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 251, column: 6)
!9242 = !DILocation(line: 247, column: 3, scope: !9239)
!9243 = !DILocation(line: 251, column: 45, scope: !9241)
!9244 = !DILocation(line: 251, column: 66, scope: !9241)
!9245 = !DILocation(line: 251, column: 6, scope: !9064)
!9246 = !DILocation(line: 257, column: 5, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9241, file: !9065, line: 252, column: 3)
!9248 = !DILocation(line: 262, column: 23, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 262, column: 6)
!9250 = !DILocation(line: 258, column: 3, scope: !9247)
!9251 = !DILocation(line: 262, column: 45, scope: !9249)
!9252 = !DILocation(line: 262, column: 68, scope: !9249)
!9253 = !DILocation(line: 262, column: 6, scope: !9064)
!9254 = !DILocation(line: 268, column: 5, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9249, file: !9065, line: 263, column: 3)
!9256 = !DILocation(line: 271, column: 23, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9255, file: !9065, line: 271, column: 8)
!9258 = !DILocation(line: 271, column: 43, scope: !9257)
!9259 = !DILocation(line: 271, column: 8, scope: !9255)
!9260 = !DILocation(line: 279, column: 23, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 279, column: 6)
!9262 = !DILocation(line: 279, column: 45, scope: !9261)
!9263 = !DILocation(line: 279, column: 67, scope: !9261)
!9264 = !DILocation(line: 279, column: 6, scope: !9064)
!9265 = !DILocation(line: 285, column: 5, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9261, file: !9065, line: 280, column: 3)
!9267 = !DILocation(line: 290, column: 23, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 290, column: 6)
!9269 = !DILocation(line: 286, column: 3, scope: !9266)
!9270 = !DILocation(line: 290, column: 45, scope: !9268)
!9271 = !DILocation(line: 290, column: 70, scope: !9268)
!9272 = !DILocation(line: 290, column: 6, scope: !9064)
!9273 = !DILocation(line: 296, column: 5, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9268, file: !9065, line: 291, column: 3)
!9275 = !DILocation(line: 298, column: 23, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9274, file: !9065, line: 298, column: 8)
!9277 = !DILocation(line: 298, column: 43, scope: !9276)
!9278 = !DILocation(line: 298, column: 8, scope: !9274)
!9279 = !DILocation(line: 308, column: 44, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 308, column: 6)
!9281 = !DILocation(line: 308, column: 18, scope: !9280)
!9282 = !DILocation(line: 308, column: 25, scope: !9280)
!9283 = !DILocation(line: 308, column: 65, scope: !9280)
!9284 = !DILocation(line: 308, column: 6, scope: !9064)
!9285 = !DILocation(line: 311, column: 5, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9280, file: !9065, line: 309, column: 3)
!9287 = !DILocation(line: 313, column: 17, scope: !9286)
!9288 = !DILocation(line: 315, column: 5, scope: !9286)
!9289 = !DILocation(line: 315, column: 11, scope: !9286)
!9290 = !DILocation(line: 317, column: 11, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !9065, line: 317, column: 10)
!9292 = distinct !DILexicalBlock(scope: !9286, file: !9065, line: 316, column: 5)
!9293 = !DILocation(line: 317, column: 25, scope: !9291)
!9294 = !DILocation(line: 317, column: 39, scope: !9291)
!9295 = !DILocation(line: 317, column: 10, scope: !9292)
!9296 = distinct !{!9296, !9288, !9297}
!9297 = !DILocation(line: 322, column: 5, scope: !9286)
!9298 = !DILocation(line: 329, column: 27, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9286, file: !9065, line: 329, column: 8)
!9300 = !DILocation(line: 329, column: 49, scope: !9299)
!9301 = !DILocation(line: 329, column: 75, scope: !9299)
!9302 = !DILocation(line: 329, column: 102, scope: !9299)
!9303 = !DILocation(line: 329, column: 121, scope: !9299)
!9304 = !DILocation(line: 329, column: 143, scope: !9299)
!9305 = !DILocation(line: 329, column: 176, scope: !9299)
!9306 = !DILocation(line: 330, column: 49, scope: !9299)
!9307 = !DILocation(line: 330, column: 75, scope: !9299)
!9308 = !DILocation(line: 330, column: 102, scope: !9299)
!9309 = !DILocation(line: 330, column: 121, scope: !9299)
!9310 = !DILocation(line: 330, column: 143, scope: !9299)
!9311 = !DILocation(line: 329, column: 8, scope: !9286)
!9312 = !DILocation(line: 336, column: 26, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9299, file: !9065, line: 331, column: 5)
!9314 = !DILocation(line: 336, column: 100, scope: !9313)
!9315 = !DILocation(line: 337, column: 24, scope: !9313)
!9316 = !DILocation(line: 337, column: 61, scope: !9313)
!9317 = !DILocation(line: 341, column: 7, scope: !9313)
!9318 = !DILocation(line: 345, column: 27, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9286, file: !9065, line: 345, column: 8)
!9320 = !DILocation(line: 342, column: 5, scope: !9313)
!9321 = !DILocation(line: 345, column: 49, scope: !9319)
!9322 = !DILocation(line: 345, column: 71, scope: !9319)
!9323 = !DILocation(line: 345, column: 94, scope: !9319)
!9324 = !DILocation(line: 345, column: 113, scope: !9319)
!9325 = !DILocation(line: 345, column: 132, scope: !9319)
!9326 = !DILocation(line: 345, column: 162, scope: !9319)
!9327 = !DILocation(line: 346, column: 49, scope: !9319)
!9328 = !DILocation(line: 346, column: 71, scope: !9319)
!9329 = !DILocation(line: 346, column: 94, scope: !9319)
!9330 = !DILocation(line: 346, column: 113, scope: !9319)
!9331 = !DILocation(line: 346, column: 132, scope: !9319)
!9332 = !DILocation(line: 345, column: 8, scope: !9286)
!9333 = !DILocation(line: 354, column: 26, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9319, file: !9065, line: 347, column: 5)
!9335 = !DILocation(line: 354, column: 100, scope: !9334)
!9336 = !DILocation(line: 355, column: 24, scope: !9334)
!9337 = !DILocation(line: 355, column: 61, scope: !9334)
!9338 = !DILocation(line: 360, column: 7, scope: !9334)
!9339 = !DILocation(line: 363, column: 7, scope: !9334)
!9340 = !DILocation(line: 367, column: 26, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9286, file: !9065, line: 367, column: 8)
!9342 = !DILocation(line: 364, column: 5, scope: !9334)
!9343 = !DILocation(line: 367, column: 48, scope: !9341)
!9344 = !DILocation(line: 367, column: 73, scope: !9341)
!9345 = !DILocation(line: 367, column: 99, scope: !9341)
!9346 = !DILocation(line: 367, column: 118, scope: !9341)
!9347 = !DILocation(line: 367, column: 138, scope: !9341)
!9348 = !DILocation(line: 367, column: 8, scope: !9286)
!9349 = !DILocation(line: 372, column: 26, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9341, file: !9065, line: 368, column: 5)
!9351 = !DILocation(line: 373, column: 24, scope: !9350)
!9352 = !DILocation(line: 373, column: 61, scope: !9350)
!9353 = !DILocation(line: 377, column: 7, scope: !9350)
!9354 = !DILocation(line: 381, column: 24, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9286, file: !9065, line: 381, column: 8)
!9356 = !DILocation(line: 378, column: 5, scope: !9350)
!9357 = !DILocation(line: 381, column: 45, scope: !9355)
!9358 = !DILocation(line: 381, column: 69, scope: !9355)
!9359 = !DILocation(line: 381, column: 8, scope: !9286)
!9360 = !DILocation(line: 390, column: 7, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9355, file: !9065, line: 382, column: 5)
!9362 = !DILocation(line: 391, column: 5, scope: !9361)
!9363 = !DILocation(line: 394, column: 5, scope: !9286)
!9364 = !DILocation(line: 396, column: 17, scope: !9286)
!9365 = !DILocation(line: 398, column: 5, scope: !9286)
!9366 = !DILocation(line: 398, column: 11, scope: !9286)
!9367 = !DILocation(line: 398, column: 51, scope: !9286)
!9368 = !DILocation(line: 400, column: 11, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !9065, line: 400, column: 10)
!9370 = distinct !DILexicalBlock(scope: !9286, file: !9065, line: 399, column: 5)
!9371 = !DILocation(line: 400, column: 25, scope: !9369)
!9372 = !DILocation(line: 400, column: 39, scope: !9369)
!9373 = !DILocation(line: 400, column: 10, scope: !9370)
!9374 = distinct !{!9374, !9365, !9375}
!9375 = !DILocation(line: 405, column: 5, scope: !9286)
!9376 = !DILocation(line: 411, column: 17, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 411, column: 6)
!9378 = !DILocation(line: 411, column: 6, scope: !9064)
!9379 = !DILocation(line: 414, column: 5, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9377, file: !9065, line: 412, column: 3)
!9381 = !DILocation(line: 416, column: 17, scope: !9380)
!9382 = !DILocation(line: 418, column: 5, scope: !9380)
!9383 = !DILocation(line: 418, column: 11, scope: !9380)
!9384 = !DILocation(line: 420, column: 11, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9386, file: !9065, line: 420, column: 10)
!9386 = distinct !DILexicalBlock(scope: !9380, file: !9065, line: 419, column: 5)
!9387 = !DILocation(line: 420, column: 25, scope: !9385)
!9388 = !DILocation(line: 420, column: 39, scope: !9385)
!9389 = !DILocation(line: 420, column: 10, scope: !9386)
!9390 = distinct !{!9390, !9382, !9391}
!9391 = !DILocation(line: 425, column: 5, scope: !9380)
!9392 = !DILocation(line: 432, column: 27, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9380, file: !9065, line: 432, column: 8)
!9394 = !DILocation(line: 432, column: 49, scope: !9393)
!9395 = !DILocation(line: 432, column: 71, scope: !9393)
!9396 = !DILocation(line: 432, column: 94, scope: !9393)
!9397 = !DILocation(line: 432, column: 113, scope: !9393)
!9398 = !DILocation(line: 432, column: 132, scope: !9393)
!9399 = !DILocation(line: 432, column: 162, scope: !9393)
!9400 = !DILocation(line: 433, column: 49, scope: !9393)
!9401 = !DILocation(line: 433, column: 71, scope: !9393)
!9402 = !DILocation(line: 433, column: 94, scope: !9393)
!9403 = !DILocation(line: 433, column: 113, scope: !9393)
!9404 = !DILocation(line: 433, column: 132, scope: !9393)
!9405 = !DILocation(line: 432, column: 8, scope: !9380)
!9406 = !DILocation(line: 441, column: 26, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9393, file: !9065, line: 434, column: 5)
!9408 = !DILocation(line: 441, column: 100, scope: !9407)
!9409 = !DILocation(line: 445, column: 7, scope: !9407)
!9410 = !DILocation(line: 448, column: 7, scope: !9407)
!9411 = !DILocation(line: 453, column: 26, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9380, file: !9065, line: 453, column: 8)
!9413 = !DILocation(line: 449, column: 5, scope: !9407)
!9414 = !DILocation(line: 453, column: 48, scope: !9412)
!9415 = !DILocation(line: 453, column: 71, scope: !9412)
!9416 = !DILocation(line: 453, column: 95, scope: !9412)
!9417 = !DILocation(line: 453, column: 114, scope: !9412)
!9418 = !DILocation(line: 453, column: 134, scope: !9412)
!9419 = !DILocation(line: 453, column: 8, scope: !9380)
!9420 = !DILocation(line: 458, column: 24, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9412, file: !9065, line: 454, column: 5)
!9422 = !DILocation(line: 458, column: 61, scope: !9421)
!9423 = !DILocation(line: 462, column: 7, scope: !9421)
!9424 = !DILocation(line: 463, column: 5, scope: !9421)
!9425 = !DILocation(line: 466, column: 5, scope: !9380)
!9426 = !DILocation(line: 468, column: 17, scope: !9380)
!9427 = !DILocation(line: 470, column: 5, scope: !9380)
!9428 = !DILocation(line: 470, column: 11, scope: !9380)
!9429 = !DILocation(line: 470, column: 39, scope: !9380)
!9430 = !DILocation(line: 472, column: 11, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !9065, line: 472, column: 10)
!9432 = distinct !DILexicalBlock(scope: !9380, file: !9065, line: 471, column: 5)
!9433 = !DILocation(line: 472, column: 25, scope: !9431)
!9434 = !DILocation(line: 472, column: 39, scope: !9431)
!9435 = !DILocation(line: 472, column: 10, scope: !9432)
!9436 = distinct !{!9436, !9427, !9437}
!9437 = !DILocation(line: 477, column: 5, scope: !9380)
!9438 = !DILocation(line: 480, column: 1, scope: !9064)
!9439 = !DISubprogram(name: "HAL_GetTick", scope: !9440, file: !9440, line: 234, type: !4878, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9440 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9441 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !9065, file: !9065, line: 489, type: !9442, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9444)
!9442 = !DISubroutineType(types: !9443)
!9443 = !{null, !9069}
!9444 = !{!9445, !9446}
!9445 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9441, file: !9065, line: 489, type: !9069)
!9446 = !DILocalVariable(name: "tempreg", scope: !9441, file: !9065, line: 491, type: !121)
!9447 = !DILocation(line: 0, scope: !9441)
!9448 = !DILocation(line: 494, column: 18, scope: !9441)
!9449 = !DILocation(line: 494, column: 39, scope: !9441)
!9450 = !DILocation(line: 502, column: 52, scope: !9441)
!9451 = !DILocation(line: 502, column: 63, scope: !9441)
!9452 = !DILocation(line: 502, column: 25, scope: !9441)
!9453 = !DILocation(line: 502, column: 33, scope: !9441)
!9454 = !DILocation(line: 503, column: 52, scope: !9441)
!9455 = !DILocation(line: 503, column: 89, scope: !9441)
!9456 = !DILocation(line: 503, column: 25, scope: !9441)
!9457 = !DILocation(line: 503, column: 33, scope: !9441)
!9458 = !DILocation(line: 504, column: 54, scope: !9441)
!9459 = !DILocation(line: 504, column: 128, scope: !9441)
!9460 = !DILocation(line: 504, column: 25, scope: !9441)
!9461 = !DILocation(line: 504, column: 33, scope: !9441)
!9462 = !DILocation(line: 505, column: 52, scope: !9441)
!9463 = !DILocation(line: 505, column: 89, scope: !9441)
!9464 = !DILocation(line: 505, column: 25, scope: !9441)
!9465 = !DILocation(line: 505, column: 33, scope: !9441)
!9466 = !DILocation(line: 506, column: 52, scope: !9441)
!9467 = !DILocation(line: 506, column: 89, scope: !9441)
!9468 = !DILocation(line: 506, column: 25, scope: !9441)
!9469 = !DILocation(line: 506, column: 33, scope: !9441)
!9470 = !DILocation(line: 508, column: 52, scope: !9441)
!9471 = !DILocation(line: 508, column: 63, scope: !9441)
!9472 = !DILocation(line: 508, column: 25, scope: !9441)
!9473 = !DILocation(line: 508, column: 33, scope: !9441)
!9474 = !DILocation(line: 509, column: 52, scope: !9441)
!9475 = !DILocation(line: 509, column: 89, scope: !9441)
!9476 = !DILocation(line: 509, column: 25, scope: !9441)
!9477 = !DILocation(line: 509, column: 33, scope: !9441)
!9478 = !DILocation(line: 510, column: 54, scope: !9441)
!9479 = !DILocation(line: 510, column: 128, scope: !9441)
!9480 = !DILocation(line: 510, column: 25, scope: !9441)
!9481 = !DILocation(line: 510, column: 33, scope: !9441)
!9482 = !DILocation(line: 511, column: 52, scope: !9441)
!9483 = !DILocation(line: 511, column: 89, scope: !9441)
!9484 = !DILocation(line: 511, column: 25, scope: !9441)
!9485 = !DILocation(line: 511, column: 33, scope: !9441)
!9486 = !DILocation(line: 513, column: 48, scope: !9441)
!9487 = !DILocation(line: 513, column: 56, scope: !9441)
!9488 = !DILocation(line: 513, column: 18, scope: !9441)
!9489 = !DILocation(line: 513, column: 29, scope: !9441)
!9490 = !DILocation(line: 514, column: 48, scope: !9441)
!9491 = !DILocation(line: 514, column: 82, scope: !9441)
!9492 = !DILocation(line: 514, column: 18, scope: !9441)
!9493 = !DILocation(line: 514, column: 29, scope: !9441)
!9494 = !DILocation(line: 517, column: 39, scope: !9441)
!9495 = !DILocation(line: 517, column: 18, scope: !9441)
!9496 = !DILocation(line: 517, column: 37, scope: !9441)
!9497 = !DILocation(line: 520, column: 39, scope: !9441)
!9498 = !DILocation(line: 520, column: 18, scope: !9441)
!9499 = !DILocation(line: 520, column: 37, scope: !9441)
!9500 = !DILocation(line: 523, column: 42, scope: !9441)
!9501 = !DILocation(line: 523, column: 18, scope: !9441)
!9502 = !DILocation(line: 523, column: 40, scope: !9441)
!9503 = !DILocation(line: 526, column: 42, scope: !9441)
!9504 = !DILocation(line: 526, column: 18, scope: !9441)
!9505 = !DILocation(line: 526, column: 40, scope: !9441)
!9506 = !DILocation(line: 529, column: 19, scope: !9441)
!9507 = !DILocation(line: 529, column: 24, scope: !9441)
!9508 = !DILocation(line: 530, column: 67, scope: !9441)
!9509 = !DILocation(line: 530, column: 72, scope: !9441)
!9510 = !DILocation(line: 530, column: 59, scope: !9441)
!9511 = !DILocation(line: 530, column: 18, scope: !9441)
!9512 = !DILocation(line: 530, column: 36, scope: !9441)
!9513 = !DILocation(line: 533, column: 38, scope: !9441)
!9514 = !DILocation(line: 533, column: 18, scope: !9441)
!9515 = !DILocation(line: 533, column: 36, scope: !9441)
!9516 = !DILocation(line: 536, column: 42, scope: !9441)
!9517 = !DILocation(line: 536, column: 18, scope: !9441)
!9518 = !DILocation(line: 536, column: 40, scope: !9441)
!9519 = !DILocation(line: 539, column: 40, scope: !9441)
!9520 = !DILocation(line: 539, column: 18, scope: !9441)
!9521 = !DILocation(line: 539, column: 38, scope: !9441)
!9522 = !DILocation(line: 542, column: 39, scope: !9441)
!9523 = !DILocation(line: 542, column: 18, scope: !9441)
!9524 = !DILocation(line: 542, column: 37, scope: !9441)
!9525 = !DILocation(line: 545, column: 40, scope: !9441)
!9526 = !DILocation(line: 545, column: 18, scope: !9441)
!9527 = !DILocation(line: 545, column: 38, scope: !9441)
!9528 = !DILocation(line: 548, column: 13, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9441, file: !9065, line: 548, column: 7)
!9530 = !DILocation(line: 548, column: 7, scope: !9441)
!9531 = !DILocation(line: 550, column: 20, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9529, file: !9065, line: 549, column: 3)
!9533 = !DILocation(line: 550, column: 37, scope: !9532)
!9534 = !DILocation(line: 556, column: 1, scope: !9441)
!9535 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !9065, file: !9065, line: 569, type: !5805, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9536)
!9536 = !{!9537, !9538, !9539, !9540, !9541, !9542, !9543}
!9537 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !9535, file: !9065, line: 569, type: !121)
!9538 = !DILocalVariable(name: "tmpreg1", scope: !9535, file: !9065, line: 571, type: !121)
!9539 = !DILocalVariable(name: "frequency", scope: !9535, file: !9065, line: 573, type: !121)
!9540 = !DILocalVariable(name: "vcoinput", scope: !9535, file: !9065, line: 575, type: !121)
!9541 = !DILocalVariable(name: "saiclocksource", scope: !9535, file: !9065, line: 577, type: !121)
!9542 = !DILocalVariable(name: "srcclk", scope: !9535, file: !9065, line: 578, type: !121)
!9543 = !DILocalVariable(name: "vcooutput", scope: !9535, file: !9065, line: 580, type: !121)
!9544 = !DILocation(line: 0, scope: !9535)
!9545 = !DILocation(line: 581, column: 3, scope: !9535)
!9546 = !DILocation(line: 586, column: 29, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !9065, line: 585, column: 5)
!9548 = distinct !DILexicalBlock(scope: !9535, file: !9065, line: 582, column: 3)
!9549 = !DILocation(line: 588, column: 7, scope: !9547)
!9550 = !DILocation(line: 594, column: 20, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !9065, line: 594, column: 14)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !9065, line: 591, column: 9)
!9553 = distinct !DILexicalBlock(scope: !9547, file: !9065, line: 589, column: 7)
!9554 = !DILocation(line: 0, scope: !9551)
!9555 = !DILocation(line: 606, column: 27, scope: !9552)
!9556 = !DILocation(line: 606, column: 64, scope: !9552)
!9557 = !DILocation(line: 607, column: 42, scope: !9552)
!9558 = !DILocation(line: 607, column: 79, scope: !9552)
!9559 = !DILocation(line: 607, column: 33, scope: !9552)
!9560 = !DILocation(line: 607, column: 86, scope: !9552)
!9561 = !DILocation(line: 610, column: 29, scope: !9552)
!9562 = !DILocation(line: 610, column: 63, scope: !9552)
!9563 = !DILocation(line: 610, column: 70, scope: !9552)
!9564 = !DILocation(line: 611, column: 32, scope: !9552)
!9565 = !DILocation(line: 612, column: 11, scope: !9552)
!9566 = !DILocation(line: 619, column: 20, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9568, file: !9065, line: 619, column: 14)
!9568 = distinct !DILexicalBlock(scope: !9553, file: !9065, line: 616, column: 9)
!9569 = !DILocation(line: 0, scope: !9567)
!9570 = !DILocation(line: 632, column: 27, scope: !9568)
!9571 = !DILocation(line: 632, column: 64, scope: !9568)
!9572 = !DILocation(line: 633, column: 42, scope: !9568)
!9573 = !DILocation(line: 633, column: 79, scope: !9568)
!9574 = !DILocation(line: 633, column: 33, scope: !9568)
!9575 = !DILocation(line: 633, column: 86, scope: !9568)
!9576 = !DILocation(line: 636, column: 28, scope: !9568)
!9577 = !DILocation(line: 636, column: 36, scope: !9568)
!9578 = !DILocation(line: 636, column: 62, scope: !9568)
!9579 = !DILocation(line: 637, column: 32, scope: !9568)
!9580 = !DILocation(line: 638, column: 11, scope: !9568)
!9581 = !DILocation(line: 645, column: 20, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9583, file: !9065, line: 645, column: 14)
!9583 = distinct !DILexicalBlock(scope: !9553, file: !9065, line: 642, column: 9)
!9584 = !DILocation(line: 0, scope: !9582)
!9585 = !DILocation(line: 658, column: 27, scope: !9583)
!9586 = !DILocation(line: 658, column: 55, scope: !9583)
!9587 = !DILocation(line: 659, column: 42, scope: !9583)
!9588 = !DILocation(line: 659, column: 70, scope: !9583)
!9589 = !DILocation(line: 659, column: 33, scope: !9583)
!9590 = !DILocation(line: 659, column: 77, scope: !9583)
!9591 = !DILocation(line: 660, column: 11, scope: !9583)
!9592 = !DILocation(line: 665, column: 11, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9553, file: !9065, line: 663, column: 9)
!9594 = !DILocation(line: 669, column: 20, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !9065, line: 669, column: 14)
!9596 = distinct !DILexicalBlock(scope: !9553, file: !9065, line: 668, column: 9)
!9597 = !DILocation(line: 691, column: 16, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9548, file: !9065, line: 689, column: 5)
!9599 = !DILocation(line: 692, column: 7, scope: !9598)
!9600 = !DILocation(line: 706, column: 20, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !9065, line: 706, column: 14)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !9065, line: 703, column: 9)
!9603 = distinct !DILexicalBlock(scope: !9598, file: !9065, line: 693, column: 7)
!9604 = !DILocation(line: 0, scope: !9601)
!9605 = !DILocation(line: 718, column: 53, scope: !9602)
!9606 = !DILocation(line: 718, column: 90, scope: !9602)
!9607 = !DILocation(line: 718, column: 43, scope: !9602)
!9608 = !DILocation(line: 720, column: 53, scope: !9602)
!9609 = !DILocation(line: 720, column: 90, scope: !9602)
!9610 = !DILocation(line: 720, column: 44, scope: !9602)
!9611 = !DILocation(line: 721, column: 11, scope: !9602)
!9612 = !DILocation(line: 728, column: 20, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !9065, line: 728, column: 14)
!9614 = distinct !DILexicalBlock(scope: !9603, file: !9065, line: 725, column: 9)
!9615 = !DILocation(line: 0, scope: !9613)
!9616 = !DILocation(line: 740, column: 53, scope: !9614)
!9617 = !DILocation(line: 740, column: 81, scope: !9614)
!9618 = !DILocation(line: 740, column: 43, scope: !9614)
!9619 = !DILocation(line: 742, column: 53, scope: !9614)
!9620 = !DILocation(line: 742, column: 81, scope: !9614)
!9621 = !DILocation(line: 742, column: 44, scope: !9614)
!9622 = !DILocation(line: 743, column: 11, scope: !9614)
!9623 = !DILocation(line: 748, column: 20, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !9065, line: 748, column: 14)
!9625 = distinct !DILexicalBlock(scope: !9603, file: !9065, line: 747, column: 9)
!9626 = !DILocation(line: 770, column: 16, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9548, file: !9065, line: 768, column: 5)
!9628 = !DILocation(line: 771, column: 7, scope: !9627)
!9629 = !DILocation(line: 785, column: 20, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9631, file: !9065, line: 785, column: 14)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !9065, line: 782, column: 9)
!9632 = distinct !DILexicalBlock(scope: !9627, file: !9065, line: 772, column: 7)
!9633 = !DILocation(line: 0, scope: !9630)
!9634 = !DILocation(line: 797, column: 53, scope: !9631)
!9635 = !DILocation(line: 797, column: 90, scope: !9631)
!9636 = !DILocation(line: 797, column: 43, scope: !9631)
!9637 = !DILocation(line: 799, column: 53, scope: !9631)
!9638 = !DILocation(line: 799, column: 90, scope: !9631)
!9639 = !DILocation(line: 799, column: 44, scope: !9631)
!9640 = !DILocation(line: 800, column: 11, scope: !9631)
!9641 = !DILocation(line: 807, column: 20, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9643, file: !9065, line: 807, column: 14)
!9643 = distinct !DILexicalBlock(scope: !9632, file: !9065, line: 804, column: 9)
!9644 = !DILocation(line: 0, scope: !9642)
!9645 = !DILocation(line: 819, column: 53, scope: !9643)
!9646 = !DILocation(line: 819, column: 81, scope: !9643)
!9647 = !DILocation(line: 819, column: 43, scope: !9643)
!9648 = !DILocation(line: 821, column: 53, scope: !9643)
!9649 = !DILocation(line: 821, column: 81, scope: !9643)
!9650 = !DILocation(line: 821, column: 44, scope: !9643)
!9651 = !DILocation(line: 822, column: 11, scope: !9643)
!9652 = !DILocation(line: 827, column: 20, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !9065, line: 827, column: 14)
!9654 = distinct !DILexicalBlock(scope: !9632, file: !9065, line: 826, column: 9)
!9655 = !DILocation(line: 847, column: 3, scope: !9535)
!9656 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !9065, file: !9065, line: 2766, type: !9657, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9659)
!9657 = !DISubroutineType(types: !9658)
!9658 = !{null, !154}
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "Mode", arg: 1, scope: !9656, file: !9065, line: 2766, type: !154)
!9661 = !DILocation(line: 0, scope: !9656)
!9662 = !DILocation(line: 2770, column: 11, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9656, file: !9065, line: 2770, column: 6)
!9664 = !DILocation(line: 0, scope: !9663)
!9665 = !DILocation(line: 2770, column: 6, scope: !9656)
!9666 = !DILocation(line: 2778, column: 1, scope: !9656)
!9667 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !9065, file: !9065, line: 2803, type: !9668, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9671)
!9668 = !DISubroutineType(types: !9669)
!9669 = !{!9068, !9670}
!9670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 32)
!9671 = !{!9672, !9673}
!9672 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !9667, file: !9065, line: 2803, type: !9670)
!9673 = !DILocalVariable(name: "tickstart", scope: !9667, file: !9065, line: 2805, type: !121)
!9674 = !DILocation(line: 0, scope: !9667)
!9675 = !DILocation(line: 2821, column: 3, scope: !9667)
!9676 = !DILocation(line: 2824, column: 15, scope: !9667)
!9677 = !DILocation(line: 2825, column: 3, scope: !9667)
!9678 = !DILocation(line: 2825, column: 9, scope: !9667)
!9679 = !DILocation(line: 2827, column: 9, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !9065, line: 2827, column: 8)
!9681 = distinct !DILexicalBlock(scope: !9667, file: !9065, line: 2826, column: 3)
!9682 = !DILocation(line: 2827, column: 23, scope: !9680)
!9683 = !DILocation(line: 2827, column: 37, scope: !9680)
!9684 = !DILocation(line: 2827, column: 8, scope: !9681)
!9685 = distinct !{!9685, !9677, !9686}
!9686 = !DILocation(line: 2832, column: 3, scope: !9667)
!9687 = !DILocation(line: 2840, column: 3, scope: !9667)
!9688 = !DILocation(line: 2866, column: 3, scope: !9667)
!9689 = !DILocation(line: 2869, column: 15, scope: !9667)
!9690 = !DILocation(line: 2870, column: 3, scope: !9667)
!9691 = !DILocation(line: 2870, column: 9, scope: !9667)
!9692 = !DILocation(line: 2870, column: 48, scope: !9667)
!9693 = !DILocation(line: 2872, column: 9, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !9065, line: 2872, column: 8)
!9695 = distinct !DILexicalBlock(scope: !9667, file: !9065, line: 2871, column: 3)
!9696 = !DILocation(line: 2872, column: 23, scope: !9694)
!9697 = !DILocation(line: 2872, column: 37, scope: !9694)
!9698 = !DILocation(line: 2872, column: 8, scope: !9695)
!9699 = distinct !{!9699, !9690, !9700}
!9700 = !DILocation(line: 2877, column: 3, scope: !9667)
!9701 = !DILocation(line: 2880, column: 1, scope: !9667)
!9702 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !9065, file: !9065, line: 2886, type: !9703, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9705)
!9703 = !DISubroutineType(types: !9704)
!9704 = !{!9068}
!9705 = !{!9706}
!9706 = !DILocalVariable(name: "tickstart", scope: !9702, file: !9065, line: 2888, type: !121)
!9707 = !DILocation(line: 2891, column: 3, scope: !9702)
!9708 = !DILocation(line: 2894, column: 15, scope: !9702)
!9709 = !DILocation(line: 0, scope: !9702)
!9710 = !DILocation(line: 2895, column: 3, scope: !9702)
!9711 = !DILocation(line: 2895, column: 9, scope: !9702)
!9712 = !DILocation(line: 2895, column: 45, scope: !9702)
!9713 = !DILocation(line: 2897, column: 9, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !9065, line: 2897, column: 8)
!9715 = distinct !DILexicalBlock(scope: !9702, file: !9065, line: 2896, column: 3)
!9716 = !DILocation(line: 2897, column: 23, scope: !9714)
!9717 = !DILocation(line: 2897, column: 36, scope: !9714)
!9718 = !DILocation(line: 2897, column: 8, scope: !9715)
!9719 = distinct !{!9719, !9710, !9720}
!9720 = !DILocation(line: 2902, column: 3, scope: !9702)
!9721 = !DILocation(line: 2905, column: 1, scope: !9702)
!9722 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !9065, file: !9065, line: 2916, type: !9723, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9726)
!9723 = !DISubroutineType(types: !9724)
!9724 = !{!9068, !9725}
!9725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9085, size: 32)
!9726 = !{!9727, !9728}
!9727 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !9722, file: !9065, line: 2916, type: !9725)
!9728 = !DILocalVariable(name: "tickstart", scope: !9722, file: !9065, line: 2918, type: !121)
!9729 = !DILocation(line: 0, scope: !9722)
!9730 = !DILocation(line: 2934, column: 3, scope: !9722)
!9731 = !DILocation(line: 2937, column: 15, scope: !9722)
!9732 = !DILocation(line: 2938, column: 3, scope: !9722)
!9733 = !DILocation(line: 2938, column: 9, scope: !9722)
!9734 = !DILocation(line: 2940, column: 9, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !9065, line: 2940, column: 8)
!9736 = distinct !DILexicalBlock(scope: !9722, file: !9065, line: 2939, column: 3)
!9737 = !DILocation(line: 2940, column: 23, scope: !9735)
!9738 = !DILocation(line: 2940, column: 37, scope: !9735)
!9739 = !DILocation(line: 2940, column: 8, scope: !9736)
!9740 = distinct !{!9740, !9732, !9741}
!9741 = !DILocation(line: 2945, column: 3, scope: !9722)
!9742 = !DILocation(line: 2953, column: 3, scope: !9722)
!9743 = !DILocation(line: 2970, column: 3, scope: !9722)
!9744 = !DILocation(line: 2973, column: 15, scope: !9722)
!9745 = !DILocation(line: 2974, column: 3, scope: !9722)
!9746 = !DILocation(line: 2974, column: 9, scope: !9722)
!9747 = !DILocation(line: 2974, column: 37, scope: !9722)
!9748 = !DILocation(line: 2976, column: 9, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !9065, line: 2976, column: 8)
!9750 = distinct !DILexicalBlock(scope: !9722, file: !9065, line: 2975, column: 3)
!9751 = !DILocation(line: 2976, column: 23, scope: !9749)
!9752 = !DILocation(line: 2976, column: 37, scope: !9749)
!9753 = !DILocation(line: 2976, column: 8, scope: !9750)
!9754 = distinct !{!9754, !9745, !9755}
!9755 = !DILocation(line: 2981, column: 3, scope: !9722)
!9756 = !DILocation(line: 2984, column: 1, scope: !9722)
!9757 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !9065, file: !9065, line: 2990, type: !9703, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9758)
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "tickstart", scope: !9757, file: !9065, line: 2992, type: !121)
!9760 = !DILocation(line: 2995, column: 3, scope: !9757)
!9761 = !DILocation(line: 2998, column: 15, scope: !9757)
!9762 = !DILocation(line: 0, scope: !9757)
!9763 = !DILocation(line: 2999, column: 3, scope: !9757)
!9764 = !DILocation(line: 2999, column: 9, scope: !9757)
!9765 = !DILocation(line: 3001, column: 9, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !9065, line: 3001, column: 8)
!9767 = distinct !DILexicalBlock(scope: !9757, file: !9065, line: 3000, column: 3)
!9768 = !DILocation(line: 3001, column: 23, scope: !9766)
!9769 = !DILocation(line: 3001, column: 36, scope: !9766)
!9770 = !DILocation(line: 3001, column: 8, scope: !9767)
!9771 = distinct !{!9771, !9763, !9772}
!9772 = !DILocation(line: 3006, column: 3, scope: !9757)
!9773 = !DILocation(line: 3009, column: 1, scope: !9757)
!9774 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9065, file: !9065, line: 3051, type: !4878, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9775)
!9775 = !{!9776, !9777, !9778, !9779, !9780}
!9776 = !DILocalVariable(name: "pllm", scope: !9774, file: !9065, line: 3053, type: !121)
!9777 = !DILocalVariable(name: "pllvco", scope: !9774, file: !9065, line: 3054, type: !121)
!9778 = !DILocalVariable(name: "pllp", scope: !9774, file: !9065, line: 3055, type: !121)
!9779 = !DILocalVariable(name: "pllr", scope: !9774, file: !9065, line: 3056, type: !121)
!9780 = !DILocalVariable(name: "sysclockfreq", scope: !9774, file: !9065, line: 3057, type: !121)
!9781 = !DILocation(line: 0, scope: !9774)
!9782 = !DILocation(line: 3060, column: 16, scope: !9774)
!9783 = !DILocation(line: 3060, column: 3, scope: !9774)
!9784 = !DILocation(line: 3076, column: 19, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !9065, line: 3073, column: 5)
!9786 = distinct !DILexicalBlock(scope: !9774, file: !9065, line: 3061, column: 3)
!9787 = !DILocation(line: 3076, column: 27, scope: !9785)
!9788 = !DILocation(line: 3077, column: 10, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !9065, line: 3077, column: 10)
!9790 = !DILocation(line: 0, scope: !9789)
!9791 = !DILocation(line: 3087, column: 23, scope: !9785)
!9792 = !DILocation(line: 3087, column: 82, scope: !9785)
!9793 = !DILocation(line: 3089, column: 28, scope: !9785)
!9794 = !DILocation(line: 3090, column: 7, scope: !9785)
!9795 = !DILocation(line: 3096, column: 19, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9786, file: !9065, line: 3093, column: 5)
!9797 = !DILocation(line: 3096, column: 27, scope: !9796)
!9798 = !DILocation(line: 3097, column: 10, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9796, file: !9065, line: 3097, column: 10)
!9800 = !DILocation(line: 0, scope: !9799)
!9801 = !DILocation(line: 3107, column: 21, scope: !9796)
!9802 = !DILocation(line: 3107, column: 49, scope: !9796)
!9803 = !DILocation(line: 3109, column: 28, scope: !9796)
!9804 = !DILocation(line: 3110, column: 7, scope: !9796)
!9805 = !DILocation(line: 0, scope: !9786)
!9806 = !DILocation(line: 3118, column: 3, scope: !9774)
!9807 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9065, file: !9065, line: 3143, type: !9703, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9808)
!9808 = !{!9809}
!9809 = !DILocalVariable(name: "tickstart", scope: !9807, file: !9065, line: 3145, type: !121)
!9810 = !DILocation(line: 3148, column: 15, scope: !9807)
!9811 = !DILocation(line: 0, scope: !9807)
!9812 = !DILocation(line: 3151, column: 3, scope: !9807)
!9813 = !DILocation(line: 3154, column: 3, scope: !9807)
!9814 = !DILocation(line: 3154, column: 10, scope: !9807)
!9815 = !DILocation(line: 3154, column: 43, scope: !9807)
!9816 = !DILocation(line: 3156, column: 10, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !9065, line: 3156, column: 9)
!9818 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3155, column: 3)
!9819 = !DILocation(line: 3156, column: 24, scope: !9817)
!9820 = !DILocation(line: 3156, column: 37, scope: !9817)
!9821 = !DILocation(line: 3156, column: 9, scope: !9818)
!9822 = distinct !{!9822, !9813, !9823}
!9823 = !DILocation(line: 3160, column: 3, scope: !9807)
!9824 = !DILocation(line: 3163, column: 3, scope: !9807)
!9825 = !DILocation(line: 3166, column: 15, scope: !9807)
!9826 = !DILocation(line: 3169, column: 3, scope: !9807)
!9827 = !DILocation(line: 3172, column: 3, scope: !9807)
!9828 = !DILocation(line: 3172, column: 10, scope: !9807)
!9829 = !DILocation(line: 3172, column: 44, scope: !9807)
!9830 = !DILocation(line: 3174, column: 24, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !9065, line: 3174, column: 9)
!9832 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3173, column: 3)
!9833 = !DILocation(line: 3174, column: 37, scope: !9831)
!9834 = !DILocation(line: 3174, column: 9, scope: !9832)
!9835 = distinct !{!9835, !9827, !9836}
!9836 = !DILocation(line: 3178, column: 3, scope: !9807)
!9837 = !DILocation(line: 3184, column: 3, scope: !9807)
!9838 = !DILocation(line: 3187, column: 3, scope: !9807)
!9839 = !DILocation(line: 3187, column: 10, scope: !9807)
!9840 = !DILocation(line: 3187, column: 43, scope: !9807)
!9841 = !DILocation(line: 3189, column: 24, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9843, file: !9065, line: 3189, column: 9)
!9843 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3188, column: 3)
!9844 = !DILocation(line: 3189, column: 37, scope: !9842)
!9845 = !DILocation(line: 3189, column: 9, scope: !9843)
!9846 = distinct !{!9846, !9838, !9847}
!9847 = !DILocation(line: 3193, column: 3, scope: !9807)
!9848 = !DILocation(line: 3199, column: 3, scope: !9807)
!9849 = !DILocation(line: 3202, column: 3, scope: !9807)
!9850 = !DILocation(line: 3202, column: 10, scope: !9807)
!9851 = !DILocation(line: 3202, column: 43, scope: !9807)
!9852 = !DILocation(line: 3204, column: 24, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !9065, line: 3204, column: 9)
!9854 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3203, column: 3)
!9855 = !DILocation(line: 3204, column: 37, scope: !9853)
!9856 = !DILocation(line: 3204, column: 9, scope: !9854)
!9857 = distinct !{!9857, !9849, !9858}
!9858 = !DILocation(line: 3208, column: 3, scope: !9807)
!9859 = !DILocation(line: 3215, column: 3, scope: !9807)
!9860 = !DILocation(line: 3218, column: 3, scope: !9807)
!9861 = !DILocation(line: 3218, column: 10, scope: !9807)
!9862 = !DILocation(line: 3218, column: 46, scope: !9807)
!9863 = !DILocation(line: 3220, column: 24, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !9065, line: 3220, column: 9)
!9865 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3219, column: 3)
!9866 = !DILocation(line: 3220, column: 37, scope: !9864)
!9867 = !DILocation(line: 3220, column: 9, scope: !9865)
!9868 = distinct !{!9868, !9860, !9869}
!9869 = !DILocation(line: 3224, column: 3, scope: !9807)
!9870 = !DILocation(line: 3232, column: 3, scope: !9807)
!9871 = !DILocation(line: 3235, column: 3, scope: !9807)
!9872 = !DILocation(line: 3235, column: 10, scope: !9807)
!9873 = !DILocation(line: 3235, column: 46, scope: !9807)
!9874 = !DILocation(line: 3237, column: 10, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9876, file: !9065, line: 3237, column: 9)
!9876 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3236, column: 3)
!9877 = !DILocation(line: 3237, column: 24, scope: !9875)
!9878 = !DILocation(line: 3237, column: 37, scope: !9875)
!9879 = !DILocation(line: 3237, column: 9, scope: !9876)
!9880 = distinct !{!9880, !9871, !9881}
!9881 = !DILocation(line: 3241, column: 3, scope: !9807)
!9882 = !DILocation(line: 3247, column: 16, scope: !9807)
!9883 = !DILocation(line: 3257, column: 19, scope: !9807)
!9884 = !DILocation(line: 3270, column: 19, scope: !9807)
!9885 = !DILocation(line: 3274, column: 3, scope: !9807)
!9886 = !DILocation(line: 3277, column: 3, scope: !9807)
!9887 = !DILocation(line: 3281, column: 3, scope: !9807)
!9888 = !DILocation(line: 3285, column: 3, scope: !9807)
!9889 = !DILocation(line: 3288, column: 3, scope: !9807)
!9890 = !DILocation(line: 3292, column: 3, scope: !9807)
!9891 = !DILocation(line: 3296, column: 3, scope: !9807)
!9892 = !DILocation(line: 3299, column: 3, scope: !9807)
!9893 = !DILocation(line: 3302, column: 19, scope: !9807)
!9894 = !DILocation(line: 3305, column: 19, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9807, file: !9065, line: 3305, column: 6)
!9896 = !DILocation(line: 3305, column: 6, scope: !9895)
!9897 = !DILocation(line: 3305, column: 31, scope: !9895)
!9898 = !DILocation(line: 0, scope: !9895)
!9899 = !DILocation(line: 3313, column: 1, scope: !9807)
!9900 = !DISubprogram(name: "HAL_InitTick", scope: !9440, file: !9440, line: 223, type: !9901, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!9068, !121}
!9903 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9065, file: !9065, line: 3333, type: !9904, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !9928)
!9904 = !DISubroutineType(types: !9905)
!9905 = !{!9068, !9906}
!9906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9907, size: 32)
!9907 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9908, line: 70, baseType: !9909)
!9908 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9908, line: 49, size: 416, elements: !9910)
!9910 = !{!9911, !9912, !9913, !9914, !9915, !9916, !9917}
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9909, file: !9908, line: 51, baseType: !121, size: 32)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9909, file: !9908, line: 54, baseType: !121, size: 32, offset: 32)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9909, file: !9908, line: 57, baseType: !121, size: 32, offset: 64)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9909, file: !9908, line: 60, baseType: !121, size: 32, offset: 96)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9909, file: !9908, line: 63, baseType: !121, size: 32, offset: 128)
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9909, file: !9908, line: 66, baseType: !121, size: 32, offset: 160)
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9909, file: !9908, line: 69, baseType: !9918, size: 224, offset: 192)
!9918 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9071, line: 73, baseType: !9919)
!9919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9071, line: 45, size: 224, elements: !9920)
!9920 = !{!9921, !9922, !9923, !9924, !9925, !9926, !9927}
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9919, file: !9071, line: 47, baseType: !121, size: 32)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9919, file: !9071, line: 50, baseType: !121, size: 32, offset: 32)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9919, file: !9071, line: 53, baseType: !121, size: 32, offset: 64)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9919, file: !9071, line: 56, baseType: !121, size: 32, offset: 96)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9919, file: !9071, line: 60, baseType: !121, size: 32, offset: 128)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9919, file: !9071, line: 63, baseType: !121, size: 32, offset: 160)
!9927 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !9919, file: !9071, line: 68, baseType: !121, size: 32, offset: 192)
!9928 = !{!9929, !9930, !9931, !9932, !9936}
!9929 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9903, file: !9065, line: 3333, type: !9906)
!9930 = !DILocalVariable(name: "tickstart", scope: !9903, file: !9065, line: 3335, type: !121)
!9931 = !DILocalVariable(name: "pll_config", scope: !9903, file: !9065, line: 3335, type: !121)
!9932 = !DILocalVariable(name: "pwrclkchanged", scope: !9933, file: !9065, line: 3517, type: !9935)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !9065, line: 3516, column: 3)
!9934 = distinct !DILexicalBlock(scope: !9903, file: !9065, line: 3515, column: 6)
!9935 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !666, line: 188, baseType: !2661)
!9936 = !DILocalVariable(name: "tmpreg", scope: !9937, file: !9065, line: 3526, type: !120)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !9065, line: 3526, column: 7)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !9065, line: 3525, column: 5)
!9939 = distinct !DILexicalBlock(scope: !9933, file: !9065, line: 3524, column: 8)
!9940 = !DILocation(line: 0, scope: !9903)
!9941 = !DILocation(line: 3338, column: 24, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9903, file: !9065, line: 3338, column: 6)
!9943 = !DILocation(line: 3338, column: 6, scope: !9903)
!9944 = !DILocation(line: 3346, column: 27, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9903, file: !9065, line: 3346, column: 6)
!9946 = !DILocation(line: 3346, column: 43, scope: !9945)
!9947 = !DILocation(line: 3346, column: 69, scope: !9945)
!9948 = !DILocation(line: 3346, column: 6, scope: !9903)
!9949 = !DILocation(line: 3352, column: 9, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9951, file: !9065, line: 3352, column: 8)
!9951 = distinct !DILexicalBlock(scope: !9945, file: !9065, line: 3347, column: 3)
!9952 = !DILocation(line: 3352, column: 39, scope: !9950)
!9953 = !DILocation(line: 3352, column: 128, scope: !9950)
!9954 = !DILocation(line: 3353, column: 9, scope: !9950)
!9955 = !DILocation(line: 3353, column: 39, scope: !9950)
!9956 = !DILocation(line: 3353, column: 60, scope: !9950)
!9957 = !DILocation(line: 3353, column: 70, scope: !9950)
!9958 = !DILocation(line: 3353, column: 78, scope: !9950)
!9959 = !DILocation(line: 3353, column: 100, scope: !9950)
!9960 = !DILocation(line: 3353, column: 128, scope: !9950)
!9961 = !DILocation(line: 3354, column: 9, scope: !9950)
!9962 = !DILocation(line: 3354, column: 39, scope: !9950)
!9963 = !DILocation(line: 3354, column: 61, scope: !9950)
!9964 = !DILocation(line: 3354, column: 71, scope: !9950)
!9965 = !DILocation(line: 3354, column: 79, scope: !9950)
!9966 = !DILocation(line: 3354, column: 101, scope: !9950)
!9967 = !DILocation(line: 3352, column: 8, scope: !9951)
!9968 = !DILocation(line: 3360, column: 11, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !9065, line: 3360, column: 10)
!9970 = distinct !DILexicalBlock(scope: !9950, file: !9065, line: 3359, column: 5)
!9971 = !DILocation(line: 3360, column: 57, scope: !9969)
!9972 = !DILocation(line: 3360, column: 80, scope: !9969)
!9973 = !DILocation(line: 3360, column: 89, scope: !9969)
!9974 = !DILocation(line: 3360, column: 10, scope: !9970)
!9975 = !DILocation(line: 3368, column: 7, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !9065, line: 3368, column: 7)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !9065, line: 3368, column: 7)
!9978 = distinct !DILexicalBlock(scope: !9950, file: !9065, line: 3366, column: 5)
!9979 = !DILocation(line: 3368, column: 7, scope: !9977)
!9980 = !DILocation(line: 3368, column: 7, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9976, file: !9065, line: 3368, column: 7)
!9982 = !DILocation(line: 3368, column: 7, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !9065, line: 3368, column: 7)
!9984 = distinct !DILexicalBlock(scope: !9976, file: !9065, line: 3368, column: 7)
!9985 = !DILocation(line: 3368, column: 7, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9984, file: !9065, line: 3368, column: 7)
!9987 = !DILocation(line: 0, scope: !9976)
!9988 = !DILocation(line: 3371, column: 30, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9978, file: !9065, line: 3371, column: 10)
!9990 = !DILocation(line: 3371, column: 40, scope: !9989)
!9991 = !DILocation(line: 0, scope: !9989)
!9992 = !DILocation(line: 3371, column: 10, scope: !9978)
!9993 = !DILocation(line: 3377, column: 15, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9989, file: !9065, line: 3372, column: 7)
!9995 = !DILocation(line: 3377, column: 51, scope: !9994)
!9996 = !DILocation(line: 3377, column: 9, scope: !9994)
!9997 = !DILocation(line: 3379, column: 15, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !9065, line: 3379, column: 14)
!9999 = distinct !DILexicalBlock(scope: !9994, file: !9065, line: 3378, column: 9)
!10000 = !DILocation(line: 3379, column: 29, scope: !9998)
!10001 = !DILocation(line: 3379, column: 43, scope: !9998)
!10002 = !DILocation(line: 3379, column: 14, scope: !9999)
!10003 = distinct !{!10003, !9996, !10004}
!10004 = !DILocation(line: 3383, column: 9, scope: !9994)
!10005 = !DILocation(line: 3391, column: 15, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9989, file: !9065, line: 3386, column: 7)
!10007 = !DILocation(line: 3391, column: 9, scope: !10006)
!10008 = !DILocation(line: 3393, column: 15, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !9065, line: 3393, column: 14)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !9065, line: 3392, column: 9)
!10011 = !DILocation(line: 3393, column: 29, scope: !10009)
!10012 = !DILocation(line: 3393, column: 43, scope: !10009)
!10013 = !DILocation(line: 3393, column: 14, scope: !10010)
!10014 = distinct !{!10014, !10007, !10015}
!10015 = !DILocation(line: 3397, column: 9, scope: !10006)
!10016 = !DILocation(line: 3402, column: 27, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9903, file: !9065, line: 3402, column: 6)
!10018 = !DILocation(line: 3402, column: 43, scope: !10017)
!10019 = !DILocation(line: 3402, column: 69, scope: !10017)
!10020 = !DILocation(line: 3402, column: 6, scope: !9903)
!10021 = !DILocation(line: 3410, column: 9, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !9065, line: 3410, column: 8)
!10023 = distinct !DILexicalBlock(scope: !10017, file: !9065, line: 3403, column: 3)
!10024 = !DILocation(line: 3410, column: 39, scope: !10022)
!10025 = !DILocation(line: 3410, column: 128, scope: !10022)
!10026 = !DILocation(line: 3411, column: 9, scope: !10022)
!10027 = !DILocation(line: 3411, column: 39, scope: !10022)
!10028 = !DILocation(line: 3411, column: 60, scope: !10022)
!10029 = !DILocation(line: 3411, column: 70, scope: !10022)
!10030 = !DILocation(line: 3411, column: 78, scope: !10022)
!10031 = !DILocation(line: 3411, column: 100, scope: !10022)
!10032 = !DILocation(line: 3411, column: 128, scope: !10022)
!10033 = !DILocation(line: 3412, column: 9, scope: !10022)
!10034 = !DILocation(line: 3412, column: 39, scope: !10022)
!10035 = !DILocation(line: 3412, column: 61, scope: !10022)
!10036 = !DILocation(line: 3412, column: 71, scope: !10022)
!10037 = !DILocation(line: 3412, column: 79, scope: !10022)
!10038 = !DILocation(line: 3412, column: 101, scope: !10022)
!10039 = !DILocation(line: 3410, column: 8, scope: !10023)
!10040 = !DILocation(line: 3419, column: 11, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !9065, line: 3419, column: 10)
!10042 = distinct !DILexicalBlock(scope: !10022, file: !9065, line: 3417, column: 5)
!10043 = !DILocation(line: 3419, column: 57, scope: !10041)
!10044 = !DILocation(line: 3419, column: 80, scope: !10041)
!10045 = !DILocation(line: 3419, column: 89, scope: !10041)
!10046 = !DILocation(line: 3419, column: 10, scope: !10042)
!10047 = !DILocation(line: 3433, column: 30, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !9065, line: 3433, column: 10)
!10049 = distinct !DILexicalBlock(scope: !10022, file: !9065, line: 3431, column: 5)
!10050 = !DILocation(line: 3433, column: 39, scope: !10048)
!10051 = !DILocation(line: 3433, column: 10, scope: !10049)
!10052 = !DILocation(line: 3436, column: 9, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10048, file: !9065, line: 3434, column: 7)
!10054 = !DILocation(line: 3439, column: 21, scope: !10053)
!10055 = !DILocation(line: 3442, column: 9, scope: !10053)
!10056 = !DILocation(line: 3442, column: 15, scope: !10053)
!10057 = !DILocation(line: 3442, column: 51, scope: !10053)
!10058 = !DILocation(line: 3444, column: 15, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !9065, line: 3444, column: 14)
!10060 = distinct !DILexicalBlock(scope: !10053, file: !9065, line: 3443, column: 9)
!10061 = !DILocation(line: 3444, column: 29, scope: !10059)
!10062 = !DILocation(line: 3444, column: 43, scope: !10059)
!10063 = !DILocation(line: 3444, column: 14, scope: !10060)
!10064 = distinct !{!10064, !10055, !10065}
!10065 = !DILocation(line: 3448, column: 9, scope: !10053)
!10066 = !DILocation(line: 3456, column: 9, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10048, file: !9065, line: 3454, column: 7)
!10068 = !DILocation(line: 3459, column: 21, scope: !10067)
!10069 = !DILocation(line: 3462, column: 9, scope: !10067)
!10070 = !DILocation(line: 3462, column: 15, scope: !10067)
!10071 = !DILocation(line: 3464, column: 15, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !9065, line: 3464, column: 14)
!10073 = distinct !DILexicalBlock(scope: !10067, file: !9065, line: 3463, column: 9)
!10074 = !DILocation(line: 3464, column: 29, scope: !10072)
!10075 = !DILocation(line: 3464, column: 43, scope: !10072)
!10076 = !DILocation(line: 3464, column: 14, scope: !10073)
!10077 = distinct !{!10077, !10069, !10078}
!10078 = !DILocation(line: 3468, column: 9, scope: !10067)
!10079 = !DILocation(line: 0, scope: !10022)
!10080 = !DILocation(line: 3473, column: 27, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !9903, file: !9065, line: 3473, column: 6)
!10082 = !DILocation(line: 3473, column: 43, scope: !10081)
!10083 = !DILocation(line: 3473, column: 69, scope: !10081)
!10084 = !DILocation(line: 3473, column: 6, scope: !9903)
!10085 = !DILocation(line: 3479, column: 28, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !9065, line: 3479, column: 8)
!10087 = distinct !DILexicalBlock(scope: !10081, file: !9065, line: 3474, column: 3)
!10088 = !DILocation(line: 3479, column: 37, scope: !10086)
!10089 = !DILocation(line: 3479, column: 8, scope: !10087)
!10090 = !DILocation(line: 3482, column: 7, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10086, file: !9065, line: 3480, column: 5)
!10092 = !DILocation(line: 3485, column: 19, scope: !10091)
!10093 = !DILocation(line: 3488, column: 7, scope: !10091)
!10094 = !DILocation(line: 3488, column: 13, scope: !10091)
!10095 = !DILocation(line: 3488, column: 49, scope: !10091)
!10096 = !DILocation(line: 3490, column: 13, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10098, file: !9065, line: 3490, column: 12)
!10098 = distinct !DILexicalBlock(scope: !10091, file: !9065, line: 3489, column: 7)
!10099 = !DILocation(line: 3490, column: 27, scope: !10097)
!10100 = !DILocation(line: 3490, column: 41, scope: !10097)
!10101 = !DILocation(line: 3490, column: 12, scope: !10098)
!10102 = distinct !{!10102, !10093, !10103}
!10103 = !DILocation(line: 3494, column: 7, scope: !10091)
!10104 = !DILocation(line: 3499, column: 7, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10086, file: !9065, line: 3497, column: 5)
!10106 = !DILocation(line: 3502, column: 19, scope: !10105)
!10107 = !DILocation(line: 3505, column: 7, scope: !10105)
!10108 = !DILocation(line: 3505, column: 13, scope: !10105)
!10109 = !DILocation(line: 3507, column: 13, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !9065, line: 3507, column: 12)
!10111 = distinct !DILexicalBlock(scope: !10105, file: !9065, line: 3506, column: 7)
!10112 = !DILocation(line: 3507, column: 27, scope: !10110)
!10113 = !DILocation(line: 3507, column: 41, scope: !10110)
!10114 = !DILocation(line: 3507, column: 12, scope: !10111)
!10115 = distinct !{!10115, !10107, !10116}
!10116 = !DILocation(line: 3511, column: 7, scope: !10105)
!10117 = !DILocation(line: 3515, column: 27, scope: !9934)
!10118 = !DILocation(line: 3515, column: 43, scope: !9934)
!10119 = !DILocation(line: 3515, column: 69, scope: !9934)
!10120 = !DILocation(line: 3515, column: 6, scope: !9903)
!10121 = !DILocation(line: 0, scope: !9933)
!10122 = !DILocation(line: 3524, column: 8, scope: !9939)
!10123 = !DILocation(line: 3524, column: 8, scope: !9933)
!10124 = !DILocation(line: 3526, column: 7, scope: !9937)
!10125 = !DILocation(line: 3526, column: 7, scope: !9938)
!10126 = !DILocation(line: 3528, column: 5, scope: !9938)
!10127 = !DILocation(line: 3530, column: 8, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !9933, file: !9065, line: 3530, column: 8)
!10129 = !DILocation(line: 3530, column: 8, scope: !9933)
!10130 = !DILocation(line: 3533, column: 7, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10128, file: !9065, line: 3531, column: 5)
!10132 = !DILocation(line: 3536, column: 19, scope: !10131)
!10133 = !DILocation(line: 3538, column: 7, scope: !10131)
!10134 = !DILocation(line: 3538, column: 13, scope: !10131)
!10135 = !DILocation(line: 3540, column: 13, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !9065, line: 3540, column: 12)
!10137 = distinct !DILexicalBlock(scope: !10131, file: !9065, line: 3539, column: 7)
!10138 = !DILocation(line: 3540, column: 27, scope: !10136)
!10139 = !DILocation(line: 3540, column: 40, scope: !10136)
!10140 = !DILocation(line: 3540, column: 12, scope: !10137)
!10141 = distinct !{!10141, !10133, !10142}
!10142 = !DILocation(line: 3544, column: 7, scope: !10131)
!10143 = !DILocation(line: 3548, column: 5, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !9065, line: 3548, column: 5)
!10145 = distinct !DILexicalBlock(scope: !9933, file: !9065, line: 3548, column: 5)
!10146 = !DILocation(line: 3548, column: 5, scope: !10145)
!10147 = !DILocation(line: 3548, column: 5, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10144, file: !9065, line: 3548, column: 5)
!10149 = !DILocation(line: 3548, column: 5, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10151, file: !9065, line: 3548, column: 5)
!10151 = distinct !DILexicalBlock(scope: !10144, file: !9065, line: 3548, column: 5)
!10152 = !DILocation(line: 3548, column: 5, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10151, file: !9065, line: 3548, column: 5)
!10154 = !DILocation(line: 0, scope: !10144)
!10155 = !DILocation(line: 3550, column: 28, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !9933, file: !9065, line: 3550, column: 8)
!10157 = !DILocation(line: 3550, column: 38, scope: !10156)
!10158 = !DILocation(line: 0, scope: !10156)
!10159 = !DILocation(line: 3550, column: 8, scope: !9933)
!10160 = !DILocation(line: 3556, column: 13, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10156, file: !9065, line: 3551, column: 5)
!10162 = !DILocation(line: 3556, column: 49, scope: !10161)
!10163 = !DILocation(line: 3556, column: 7, scope: !10161)
!10164 = !DILocation(line: 3558, column: 13, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !9065, line: 3558, column: 12)
!10166 = distinct !DILexicalBlock(scope: !10161, file: !9065, line: 3557, column: 7)
!10167 = !DILocation(line: 3558, column: 27, scope: !10165)
!10168 = !DILocation(line: 3558, column: 41, scope: !10165)
!10169 = !DILocation(line: 3558, column: 12, scope: !10166)
!10170 = distinct !{!10170, !10163, !10171}
!10171 = !DILocation(line: 3562, column: 7, scope: !10161)
!10172 = !DILocation(line: 3570, column: 13, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10156, file: !9065, line: 3565, column: 5)
!10174 = !DILocation(line: 3570, column: 7, scope: !10173)
!10175 = !DILocation(line: 3572, column: 13, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10177, file: !9065, line: 3572, column: 12)
!10177 = distinct !DILexicalBlock(scope: !10173, file: !9065, line: 3571, column: 7)
!10178 = !DILocation(line: 3572, column: 27, scope: !10176)
!10179 = !DILocation(line: 3572, column: 41, scope: !10176)
!10180 = !DILocation(line: 3572, column: 12, scope: !10177)
!10181 = distinct !{!10181, !10174, !10182}
!10182 = !DILocation(line: 3576, column: 7, scope: !10173)
!10183 = !DILocation(line: 3580, column: 8, scope: !9933)
!10184 = !DILocation(line: 3582, column: 7, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !9065, line: 3581, column: 5)
!10186 = distinct !DILexicalBlock(scope: !9933, file: !9065, line: 3580, column: 8)
!10187 = !DILocation(line: 3583, column: 5, scope: !10185)
!10188 = !DILocation(line: 3588, column: 31, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !9903, file: !9065, line: 3588, column: 7)
!10190 = !DILocation(line: 3588, column: 41, scope: !10189)
!10191 = !DILocation(line: 3588, column: 7, scope: !9903)
!10192 = !DILocation(line: 3591, column: 8, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !9065, line: 3591, column: 8)
!10194 = distinct !DILexicalBlock(scope: !10189, file: !9065, line: 3589, column: 3)
!10195 = !DILocation(line: 3591, column: 38, scope: !10193)
!10196 = !DILocation(line: 3591, column: 8, scope: !10194)
!10197 = !DILocation(line: 3593, column: 44, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !9065, line: 3593, column: 10)
!10199 = distinct !DILexicalBlock(scope: !10193, file: !9065, line: 3592, column: 5)
!10200 = !DILocation(line: 0, scope: !10198)
!10201 = !DILocation(line: 3593, column: 10, scope: !10199)
!10202 = !DILocation(line: 3610, column: 15, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10198, file: !9065, line: 3594, column: 7)
!10204 = !DILocation(line: 3610, column: 9, scope: !10203)
!10205 = !DILocation(line: 3612, column: 15, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !9065, line: 3612, column: 14)
!10207 = distinct !DILexicalBlock(scope: !10203, file: !9065, line: 3611, column: 9)
!10208 = !DILocation(line: 3612, column: 29, scope: !10206)
!10209 = !DILocation(line: 3612, column: 43, scope: !10206)
!10210 = !DILocation(line: 3612, column: 14, scope: !10207)
!10211 = distinct !{!10211, !10204, !10212}
!10212 = !DILocation(line: 3616, column: 9, scope: !10203)
!10213 = !DILocation(line: 3619, column: 9, scope: !10203)
!10214 = !DILocation(line: 3626, column: 9, scope: !10203)
!10215 = !DILocation(line: 3629, column: 21, scope: !10203)
!10216 = !DILocation(line: 3632, column: 9, scope: !10203)
!10217 = !DILocation(line: 3632, column: 15, scope: !10203)
!10218 = !DILocation(line: 3632, column: 51, scope: !10203)
!10219 = !DILocation(line: 3634, column: 15, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !9065, line: 3634, column: 14)
!10221 = distinct !DILexicalBlock(scope: !10203, file: !9065, line: 3633, column: 9)
!10222 = !DILocation(line: 3634, column: 29, scope: !10220)
!10223 = !DILocation(line: 3634, column: 43, scope: !10220)
!10224 = !DILocation(line: 3634, column: 14, scope: !10221)
!10225 = distinct !{!10225, !10216, !10226}
!10226 = !DILocation(line: 3638, column: 9, scope: !10203)
!10227 = !DILocation(line: 3649, column: 15, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10198, file: !9065, line: 3641, column: 7)
!10229 = !DILocation(line: 3649, column: 9, scope: !10228)
!10230 = !DILocation(line: 3651, column: 15, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !9065, line: 3651, column: 14)
!10232 = distinct !DILexicalBlock(scope: !10228, file: !9065, line: 3650, column: 9)
!10233 = !DILocation(line: 3651, column: 29, scope: !10231)
!10234 = !DILocation(line: 3651, column: 43, scope: !10231)
!10235 = !DILocation(line: 3651, column: 14, scope: !10232)
!10236 = distinct !{!10236, !10229, !10237}
!10237 = !DILocation(line: 3655, column: 9, scope: !10228)
!10238 = !DILocation(line: 3661, column: 44, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !9065, line: 3661, column: 10)
!10240 = distinct !DILexicalBlock(scope: !10193, file: !9065, line: 3659, column: 5)
!10241 = !DILocation(line: 3661, column: 10, scope: !10240)
!10242 = !DILocation(line: 3668, column: 27, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10239, file: !9065, line: 3666, column: 7)
!10244 = !DILocation(line: 3671, column: 14, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10243, file: !9065, line: 3670, column: 13)
!10246 = !DILocation(line: 3671, column: 81, scope: !10245)
!10247 = !DILocation(line: 3671, column: 55, scope: !10245)
!10248 = !DILocation(line: 3671, column: 92, scope: !10245)
!10249 = !DILocation(line: 3672, column: 14, scope: !10245)
!10250 = !DILocation(line: 3672, column: 80, scope: !10245)
!10251 = !DILocation(line: 3672, column: 53, scope: !10245)
!10252 = !DILocation(line: 3672, column: 111, scope: !10245)
!10253 = !DILocation(line: 3673, column: 14, scope: !10245)
!10254 = !DILocation(line: 3673, column: 80, scope: !10245)
!10255 = !DILocation(line: 3673, column: 86, scope: !10245)
!10256 = !DILocation(line: 3673, column: 53, scope: !10245)
!10257 = !DILocation(line: 3673, column: 111, scope: !10245)
!10258 = !DILocation(line: 3674, column: 14, scope: !10245)
!10259 = !DILocation(line: 3674, column: 82, scope: !10245)
!10260 = !DILocation(line: 3674, column: 101, scope: !10245)
!10261 = !DILocation(line: 3674, column: 53, scope: !10245)
!10262 = !DILocation(line: 3674, column: 126, scope: !10245)
!10263 = !DILocation(line: 3675, column: 14, scope: !10245)
!10264 = !DILocation(line: 3675, column: 80, scope: !10245)
!10265 = !DILocation(line: 3675, column: 85, scope: !10245)
!10266 = !DILocation(line: 3675, column: 53, scope: !10245)
!10267 = !DILocation(line: 3675, column: 111, scope: !10245)
!10268 = !DILocation(line: 3676, column: 14, scope: !10245)
!10269 = !DILocation(line: 3676, column: 80, scope: !10245)
!10270 = !DILocation(line: 3676, column: 85, scope: !10245)
!10271 = !DILocation(line: 3676, column: 53, scope: !10245)
!10272 = !DILocation(line: 3670, column: 13, scope: !10243)
!10273 = !DILocation(line: 3691, column: 3, scope: !9903)
!10274 = !DILocation(line: 3692, column: 1, scope: !9903)
!10275 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9065, file: !9065, line: 3703, type: !10276, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !10278)
!10276 = !DISubroutineType(types: !10277)
!10277 = !{null, !9906}
!10278 = !{!10279}
!10279 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10275, file: !9065, line: 3703, type: !9906)
!10280 = !DILocation(line: 0, scope: !10275)
!10281 = !DILocation(line: 3706, column: 22, scope: !10275)
!10282 = !DILocation(line: 3706, column: 37, scope: !10275)
!10283 = !DILocation(line: 3709, column: 12, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10275, file: !9065, line: 3709, column: 6)
!10285 = !DILocation(line: 3709, column: 15, scope: !10284)
!10286 = !DILocation(line: 3709, column: 31, scope: !10284)
!10287 = !DILocation(line: 3709, column: 6, scope: !10275)
!10288 = !DILocation(line: 3711, column: 24, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10284, file: !9065, line: 3710, column: 3)
!10290 = !DILocation(line: 3711, column: 33, scope: !10289)
!10291 = !DILocation(line: 3712, column: 3, scope: !10289)
!10292 = !DILocation(line: 3713, column: 17, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10284, file: !9065, line: 3713, column: 11)
!10294 = !DILocation(line: 3713, column: 20, scope: !10293)
!10295 = !DILocation(line: 3713, column: 35, scope: !10293)
!10296 = !DILocation(line: 0, scope: !10293)
!10297 = !DILocation(line: 3713, column: 11, scope: !10284)
!10298 = !DILocation(line: 3715, column: 33, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10293, file: !9065, line: 3714, column: 3)
!10300 = !DILocation(line: 3716, column: 3, scope: !10299)
!10301 = !DILocation(line: 3719, column: 33, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10293, file: !9065, line: 3718, column: 3)
!10303 = !DILocation(line: 3723, column: 12, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10275, file: !9065, line: 3723, column: 6)
!10305 = !DILocation(line: 3723, column: 15, scope: !10304)
!10306 = !DILocation(line: 3729, column: 24, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10304, file: !9065, line: 3728, column: 3)
!10308 = !DILocation(line: 3729, column: 33, scope: !10307)
!10309 = !DILocation(line: 3732, column: 61, scope: !10275)
!10310 = !DILocation(line: 3732, column: 81, scope: !10275)
!10311 = !DILocation(line: 3732, column: 22, scope: !10275)
!10312 = !DILocation(line: 3732, column: 42, scope: !10275)
!10313 = !DILocation(line: 3735, column: 12, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10275, file: !9065, line: 3735, column: 6)
!10315 = !DILocation(line: 3735, column: 17, scope: !10314)
!10316 = !DILocation(line: 3735, column: 35, scope: !10314)
!10317 = !DILocation(line: 3735, column: 6, scope: !10275)
!10318 = !DILocation(line: 3737, column: 24, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10314, file: !9065, line: 3736, column: 3)
!10320 = !DILocation(line: 3737, column: 33, scope: !10319)
!10321 = !DILocation(line: 3738, column: 3, scope: !10319)
!10322 = !DILocation(line: 3739, column: 17, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10314, file: !9065, line: 3739, column: 11)
!10324 = !DILocation(line: 3739, column: 22, scope: !10323)
!10325 = !DILocation(line: 3739, column: 39, scope: !10323)
!10326 = !DILocation(line: 0, scope: !10323)
!10327 = !DILocation(line: 3739, column: 11, scope: !10314)
!10328 = !DILocation(line: 3741, column: 33, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10323, file: !9065, line: 3740, column: 3)
!10330 = !DILocation(line: 3742, column: 3, scope: !10329)
!10331 = !DILocation(line: 3745, column: 33, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10323, file: !9065, line: 3744, column: 3)
!10333 = !DILocation(line: 3749, column: 12, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10275, file: !9065, line: 3749, column: 6)
!10335 = !DILocation(line: 3749, column: 16, scope: !10334)
!10336 = !DILocation(line: 3755, column: 24, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10334, file: !9065, line: 3754, column: 3)
!10338 = !DILocation(line: 3755, column: 33, scope: !10337)
!10339 = !DILocation(line: 3759, column: 12, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10275, file: !9065, line: 3759, column: 6)
!10341 = !DILocation(line: 3759, column: 15, scope: !10340)
!10342 = !DILocation(line: 3759, column: 30, scope: !10340)
!10343 = !DILocation(line: 3759, column: 6, scope: !10275)
!10344 = !DILocation(line: 3765, column: 28, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10340, file: !9065, line: 3764, column: 3)
!10346 = !DILocation(line: 3765, column: 37, scope: !10345)
!10347 = !DILocation(line: 3767, column: 54, scope: !10275)
!10348 = !DILocation(line: 3767, column: 62, scope: !10275)
!10349 = !DILocation(line: 3767, column: 26, scope: !10275)
!10350 = !DILocation(line: 3767, column: 36, scope: !10275)
!10351 = !DILocation(line: 3768, column: 49, scope: !10275)
!10352 = !DILocation(line: 3768, column: 57, scope: !10275)
!10353 = !DILocation(line: 3768, column: 26, scope: !10275)
!10354 = !DILocation(line: 3768, column: 31, scope: !10275)
!10355 = !DILocation(line: 3769, column: 50, scope: !10275)
!10356 = !DILocation(line: 3769, column: 78, scope: !10275)
!10357 = !DILocation(line: 3769, column: 26, scope: !10275)
!10358 = !DILocation(line: 3769, column: 31, scope: !10275)
!10359 = !DILocation(line: 3770, column: 52, scope: !10275)
!10360 = !DILocation(line: 3770, column: 102, scope: !10275)
!10361 = !DILocation(line: 3770, column: 109, scope: !10275)
!10362 = !DILocation(line: 3770, column: 26, scope: !10275)
!10363 = !DILocation(line: 3770, column: 31, scope: !10275)
!10364 = !DILocation(line: 3771, column: 50, scope: !10275)
!10365 = !DILocation(line: 3771, column: 78, scope: !10275)
!10366 = !DILocation(line: 3771, column: 26, scope: !10275)
!10367 = !DILocation(line: 3771, column: 31, scope: !10275)
!10368 = !DILocation(line: 3772, column: 50, scope: !10275)
!10369 = !DILocation(line: 3772, column: 78, scope: !10275)
!10370 = !DILocation(line: 3772, column: 26, scope: !10275)
!10371 = !DILocation(line: 3772, column: 31, scope: !10275)
!10372 = !DILocation(line: 3773, column: 1, scope: !10275)
!10373 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10374, file: !10374, line: 257, type: !4888, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10375)
!10374 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10375 = !{!10376}
!10376 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10373, file: !10374, line: 257, type: !121)
!10377 = !DILocation(line: 0, scope: !10373)
!10378 = !DILocation(line: 260, column: 3, scope: !10373)
!10379 = !DILocation(line: 261, column: 1, scope: !10373)
!10380 = distinct !DISubprogram(name: "LL_InitTick", scope: !10381, file: !10381, line: 260, type: !7495, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10382)
!10381 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10382 = !{!10383, !10384}
!10383 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10380, file: !10381, line: 260, type: !121)
!10384 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10380, file: !10381, line: 260, type: !121)
!10385 = !DILocation(line: 0, scope: !10380)
!10386 = !DILocation(line: 263, column: 46, scope: !10380)
!10387 = !DILocation(line: 263, column: 55, scope: !10380)
!10388 = !DILocation(line: 263, column: 18, scope: !10380)
!10389 = !DILocation(line: 264, column: 18, scope: !10380)
!10390 = !DILocation(line: 265, column: 18, scope: !10380)
!10391 = !DILocation(line: 267, column: 1, scope: !10380)
!10392 = distinct !DISubprogram(name: "LL_mDelay", scope: !10374, file: !10374, line: 273, type: !4888, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10393)
!10393 = !{!10394, !10395}
!10394 = !DILocalVariable(name: "Delay", arg: 1, scope: !10392, file: !10374, line: 273, type: !121)
!10395 = !DILocalVariable(name: "tmp", scope: !10392, file: !10374, line: 275, type: !120)
!10396 = !DILocation(line: 0, scope: !10392)
!10397 = !DILocation(line: 275, column: 3, scope: !10392)
!10398 = !DILocation(line: 275, column: 18, scope: !10392)
!10399 = !DILocation(line: 275, column: 33, scope: !10392)
!10400 = !DILocation(line: 277, column: 10, scope: !10392)
!10401 = !DILocation(line: 280, column: 12, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10392, file: !10374, line: 280, column: 6)
!10403 = !DILocation(line: 285, column: 3, scope: !10392)
!10404 = !DILocation(line: 287, column: 18, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !10374, line: 287, column: 8)
!10406 = distinct !DILexicalBlock(scope: !10392, file: !10374, line: 286, column: 3)
!10407 = !DILocation(line: 292, column: 1, scope: !10392)
!10408 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10374, file: !10374, line: 323, type: !4888, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10409)
!10409 = !{!10410}
!10410 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10408, file: !10374, line: 323, type: !121)
!10411 = !DILocation(line: 0, scope: !10408)
!10412 = !DILocation(line: 326, column: 19, scope: !10408)
!10413 = !DILocation(line: 327, column: 1, scope: !10408)
!10414 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10374, file: !10374, line: 338, type: !10415, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10418)
!10415 = !DISubroutineType(types: !10416)
!10416 = !{!10417, !121}
!10417 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !666, line: 201, baseType: !665)
!10418 = !{!10419, !10420, !10421, !10422, !10423}
!10419 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10414, file: !10374, line: 338, type: !121)
!10420 = !DILocalVariable(name: "timeout", scope: !10414, file: !10374, line: 340, type: !121)
!10421 = !DILocalVariable(name: "getlatency", scope: !10414, file: !10374, line: 341, type: !121)
!10422 = !DILocalVariable(name: "latency", scope: !10414, file: !10374, line: 342, type: !121)
!10423 = !DILocalVariable(name: "status", scope: !10414, file: !10374, line: 343, type: !10417)
!10424 = !DILocation(line: 0, scope: !10414)
!10425 = !DILocation(line: 347, column: 21, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10414, file: !10374, line: 347, column: 6)
!10427 = !DILocation(line: 347, column: 6, scope: !10414)
!10428 = !DILocation(line: 353, column: 8, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !10374, line: 353, column: 8)
!10430 = distinct !DILexicalBlock(scope: !10426, file: !10374, line: 352, column: 3)
!10431 = !DILocation(line: 353, column: 40, scope: !10429)
!10432 = !DILocation(line: 353, column: 8, scope: !10430)
!10433 = !DILocation(line: 356, column: 26, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !10374, line: 356, column: 10)
!10435 = distinct !DILexicalBlock(scope: !10429, file: !10374, line: 354, column: 5)
!10436 = !DILocation(line: 356, column: 55, scope: !10434)
!10437 = !DILocation(line: 362, column: 55, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10435, file: !10374, line: 362, column: 10)
!10439 = !DILocation(line: 368, column: 55, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10435, file: !10374, line: 368, column: 10)
!10441 = !DILocation(line: 374, column: 26, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10435, file: !10374, line: 374, column: 10)
!10443 = !DILocation(line: 374, column: 55, scope: !10442)
!10444 = !DILocation(line: 380, column: 28, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !10374, line: 380, column: 12)
!10446 = distinct !DILexicalBlock(scope: !10442, file: !10374, line: 379, column: 7)
!10447 = !DILocation(line: 380, column: 57, scope: !10445)
!10448 = !DILocation(line: 387, column: 8, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10430, file: !10374, line: 387, column: 8)
!10450 = !DILocation(line: 387, column: 40, scope: !10449)
!10451 = !DILocation(line: 387, column: 8, scope: !10430)
!10452 = !DILocation(line: 390, column: 26, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !10374, line: 390, column: 10)
!10454 = distinct !DILexicalBlock(scope: !10449, file: !10374, line: 388, column: 5)
!10455 = !DILocation(line: 390, column: 55, scope: !10453)
!10456 = !DILocation(line: 396, column: 26, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10454, file: !10374, line: 396, column: 10)
!10458 = !DILocation(line: 396, column: 55, scope: !10457)
!10459 = !DILocation(line: 402, column: 26, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10454, file: !10374, line: 402, column: 10)
!10461 = !DILocation(line: 402, column: 55, scope: !10460)
!10462 = !DILocation(line: 407, column: 26, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10454, file: !10374, line: 407, column: 10)
!10464 = !DILocation(line: 407, column: 55, scope: !10463)
!10465 = !DILocation(line: 413, column: 28, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !10374, line: 413, column: 12)
!10467 = distinct !DILexicalBlock(scope: !10463, file: !10374, line: 412, column: 7)
!10468 = !DILocation(line: 413, column: 57, scope: !10466)
!10469 = !DILocation(line: 0, scope: !10430)
!10470 = !DILocation(line: 420, column: 8, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10430, file: !10374, line: 420, column: 8)
!10472 = !DILocation(line: 420, column: 40, scope: !10471)
!10473 = !DILocation(line: 420, column: 8, scope: !10430)
!10474 = !DILocation(line: 423, column: 26, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !10374, line: 423, column: 10)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !10374, line: 421, column: 5)
!10477 = !DILocation(line: 423, column: 55, scope: !10475)
!10478 = !DILocation(line: 429, column: 26, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10476, file: !10374, line: 429, column: 10)
!10480 = !DILocation(line: 429, column: 55, scope: !10479)
!10481 = !DILocation(line: 435, column: 28, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !10374, line: 435, column: 12)
!10483 = distinct !DILexicalBlock(scope: !10479, file: !10374, line: 434, column: 7)
!10484 = !DILocation(line: 435, column: 57, scope: !10482)
!10485 = !DILocation(line: 444, column: 5, scope: !10430)
!10486 = !DILocation(line: 448, column: 5, scope: !10430)
!10487 = !DILocation(line: 451, column: 18, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10430, file: !10374, line: 449, column: 5)
!10489 = !DILocation(line: 452, column: 12, scope: !10488)
!10490 = !DILocation(line: 453, column: 26, scope: !10430)
!10491 = !DILocation(line: 453, column: 38, scope: !10430)
!10492 = !DILocation(line: 453, column: 5, scope: !10488)
!10493 = distinct !{!10493, !10486, !10494}
!10494 = !DILocation(line: 453, column: 54, scope: !10430)
!10495 = !DILocation(line: 0, scope: !10426)
!10496 = !DILocation(line: 464, column: 3, scope: !10414)
!10497 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10498, file: !10498, line: 519, type: !4878, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10498 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10499 = !DILocation(line: 521, column: 21, scope: !10497)
!10500 = !DILocation(line: 521, column: 3, scope: !10497)
!10501 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4644, file: !4644, line: 1543, type: !4888, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10502)
!10502 = !{!10503}
!10503 = !DILocalVariable(name: "Latency", arg: 1, scope: !10501, file: !4644, line: 1543, type: !121)
!10504 = !DILocation(line: 0, scope: !10501)
!10505 = !DILocation(line: 1545, column: 3, scope: !10501)
!10506 = !DILocation(line: 1546, column: 1, scope: !10501)
!10507 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4644, file: !4644, line: 1569, type: !4878, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10508 = !DILocation(line: 1571, column: 21, scope: !10507)
!10509 = !DILocation(line: 1571, column: 3, scope: !10507)
!10510 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10374, file: !10374, line: 483, type: !10511, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10527)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{!10417, !10513, !10520}
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10514, size: 32)
!10514 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10381, line: 114, baseType: !10515)
!10515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10381, line: 94, size: 96, elements: !10516)
!10516 = !{!10517, !10518, !10519}
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10515, file: !10381, line: 96, baseType: !121, size: 32)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10515, file: !10381, line: 102, baseType: !121, size: 32, offset: 32)
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10515, file: !10381, line: 109, baseType: !121, size: 32, offset: 64)
!10520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10521, size: 32)
!10521 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10381, line: 139, baseType: !10522)
!10522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10381, line: 119, size: 96, elements: !10523)
!10523 = !{!10524, !10525, !10526}
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10522, file: !10381, line: 121, baseType: !121, size: 32)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10522, file: !10381, line: 127, baseType: !121, size: 32, offset: 32)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10522, file: !10381, line: 133, baseType: !121, size: 32, offset: 64)
!10527 = !{!10528, !10529, !10530, !10531}
!10528 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10510, file: !10374, line: 483, type: !10513)
!10529 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10510, file: !10374, line: 484, type: !10520)
!10530 = !DILocalVariable(name: "status", scope: !10510, file: !10374, line: 486, type: !10417)
!10531 = !DILocalVariable(name: "pllfreq", scope: !10510, file: !10374, line: 487, type: !121)
!10532 = !DILocation(line: 0, scope: !10510)
!10533 = !DILocation(line: 490, column: 6, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10510, file: !10374, line: 490, column: 6)
!10535 = !DILocation(line: 490, column: 25, scope: !10534)
!10536 = !DILocation(line: 490, column: 6, scope: !10510)
!10537 = !DILocation(line: 493, column: 15, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10534, file: !10374, line: 491, column: 3)
!10539 = !DILocation(line: 496, column: 8, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10538, file: !10374, line: 496, column: 8)
!10541 = !DILocation(line: 496, column: 29, scope: !10540)
!10542 = !DILocation(line: 496, column: 8, scope: !10538)
!10543 = !DILocation(line: 498, column: 7, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10540, file: !10374, line: 497, column: 5)
!10545 = !DILocation(line: 499, column: 7, scope: !10544)
!10546 = !DILocation(line: 499, column: 14, scope: !10544)
!10547 = !DILocation(line: 499, column: 35, scope: !10544)
!10548 = distinct !{!10548, !10545, !10549}
!10549 = !DILocation(line: 502, column: 7, scope: !10544)
!10550 = !DILocation(line: 506, column: 76, scope: !10538)
!10551 = !DILocation(line: 506, column: 103, scope: !10538)
!10552 = !DILocation(line: 507, column: 54, scope: !10538)
!10553 = !DILocation(line: 506, column: 5, scope: !10538)
!10554 = !DILocation(line: 510, column: 14, scope: !10538)
!10555 = !DILocation(line: 511, column: 3, scope: !10538)
!10556 = !DILocation(line: 0, scope: !10534)
!10557 = !DILocation(line: 518, column: 3, scope: !10510)
!10558 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10374, file: !10374, line: 642, type: !10559, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10561)
!10559 = !DISubroutineType(types: !10560)
!10560 = !{!10417}
!10561 = !{!10562}
!10562 = !DILocalVariable(name: "status", scope: !10558, file: !10374, line: 644, type: !10417)
!10563 = !DILocation(line: 0, scope: !10558)
!10564 = !DILocation(line: 647, column: 6, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10558, file: !10374, line: 647, column: 6)
!10566 = !DILocation(line: 647, column: 27, scope: !10565)
!10567 = !DILocation(line: 655, column: 6, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10558, file: !10374, line: 655, column: 6)
!10569 = !DILocation(line: 655, column: 30, scope: !10568)
!10570 = !DILocation(line: 663, column: 6, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10558, file: !10374, line: 663, column: 6)
!10572 = !DILocation(line: 663, column: 30, scope: !10571)
!10573 = !DILocation(line: 663, column: 6, scope: !10558)
!10574 = !DILocation(line: 669, column: 3, scope: !10558)
!10575 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10374, file: !10374, line: 611, type: !10576, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10578)
!10576 = !DISubroutineType(types: !10577)
!10577 = !{!121, !121, !10513}
!10578 = !{!10579, !10580, !10581}
!10579 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10575, file: !10374, line: 611, type: !121)
!10580 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10575, file: !10374, line: 611, type: !10513)
!10581 = !DILocalVariable(name: "pllfreq", scope: !10575, file: !10374, line: 613, type: !121)
!10582 = !DILocation(line: 0, scope: !10575)
!10583 = !DILocation(line: 622, column: 56, scope: !10575)
!10584 = !DILocation(line: 622, column: 61, scope: !10575)
!10585 = !DILocation(line: 622, column: 32, scope: !10575)
!10586 = !DILocation(line: 626, column: 45, scope: !10575)
!10587 = !DILocation(line: 626, column: 50, scope: !10575)
!10588 = !DILocation(line: 626, column: 21, scope: !10575)
!10589 = !DILocation(line: 630, column: 47, scope: !10575)
!10590 = !DILocation(line: 630, column: 82, scope: !10575)
!10591 = !DILocation(line: 630, column: 21, scope: !10575)
!10592 = !DILocation(line: 633, column: 3, scope: !10575)
!10593 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6834, file: !6834, line: 3007, type: !4878, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10594 = !DILocation(line: 3009, column: 11, scope: !10593)
!10595 = !DILocation(line: 3009, column: 44, scope: !10593)
!10596 = !DILocation(line: 3009, column: 3, scope: !10593)
!10597 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6834, file: !6834, line: 2987, type: !2821, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10598 = !DILocation(line: 2989, column: 3, scope: !10597)
!10599 = !DILocation(line: 2990, column: 1, scope: !10597)
!10600 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6834, file: !6834, line: 4304, type: !6968, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10601)
!10601 = !{!10602, !10603, !10604, !10605}
!10602 = !DILocalVariable(name: "Source", arg: 1, scope: !10600, file: !6834, line: 4304, type: !121)
!10603 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10600, file: !6834, line: 4304, type: !121)
!10604 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10600, file: !6834, line: 4304, type: !121)
!10605 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10600, file: !6834, line: 4304, type: !121)
!10606 = !DILocation(line: 0, scope: !10600)
!10607 = !DILocation(line: 4306, column: 3, scope: !10600)
!10608 = !DILocation(line: 4308, column: 3, scope: !10600)
!10609 = !DILocation(line: 4310, column: 3, scope: !10600)
!10610 = !DILocation(line: 4312, column: 1, scope: !10600)
!10611 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10374, file: !10374, line: 681, type: !10612, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10614)
!10612 = !DISubroutineType(types: !10613)
!10613 = !{!10417, !121, !10520}
!10614 = !{!10615, !10616, !10617, !10618}
!10615 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10611, file: !10374, line: 681, type: !121)
!10616 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10611, file: !10374, line: 681, type: !10520)
!10617 = !DILocalVariable(name: "status", scope: !10611, file: !10374, line: 683, type: !10417)
!10618 = !DILocalVariable(name: "hclk_frequency", scope: !10611, file: !10374, line: 684, type: !121)
!10619 = !DILocation(line: 0, scope: !10611)
!10620 = !DILocation(line: 691, column: 20, scope: !10611)
!10621 = !DILocation(line: 694, column: 6, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10611, file: !10374, line: 694, column: 6)
!10623 = !DILocation(line: 694, column: 22, scope: !10622)
!10624 = !DILocation(line: 694, column: 6, scope: !10611)
!10625 = !DILocation(line: 697, column: 14, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10622, file: !10374, line: 695, column: 3)
!10627 = !DILocation(line: 701, column: 13, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10611, file: !10374, line: 701, column: 6)
!10629 = !DILocation(line: 701, column: 6, scope: !10611)
!10630 = !DILocation(line: 704, column: 5, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10628, file: !10374, line: 702, column: 3)
!10632 = !DILocation(line: 705, column: 5, scope: !10631)
!10633 = !DILocation(line: 705, column: 12, scope: !10631)
!10634 = !DILocation(line: 705, column: 33, scope: !10631)
!10635 = distinct !{!10635, !10632, !10636}
!10636 = !DILocation(line: 708, column: 5, scope: !10631)
!10637 = !DILocation(line: 711, column: 49, scope: !10631)
!10638 = !DILocation(line: 711, column: 5, scope: !10631)
!10639 = !DILocation(line: 712, column: 5, scope: !10631)
!10640 = !DILocation(line: 713, column: 5, scope: !10631)
!10641 = !DILocation(line: 713, column: 12, scope: !10631)
!10642 = !DILocation(line: 713, column: 37, scope: !10631)
!10643 = distinct !{!10643, !10640, !10644}
!10644 = !DILocation(line: 716, column: 5, scope: !10631)
!10645 = !DILocation(line: 719, column: 50, scope: !10631)
!10646 = !DILocation(line: 719, column: 5, scope: !10631)
!10647 = !DILocation(line: 720, column: 50, scope: !10631)
!10648 = !DILocation(line: 720, column: 5, scope: !10631)
!10649 = !DILocation(line: 721, column: 3, scope: !10631)
!10650 = !DILocation(line: 724, column: 6, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10611, file: !10374, line: 724, column: 6)
!10652 = !DILocation(line: 724, column: 22, scope: !10651)
!10653 = !DILocation(line: 724, column: 6, scope: !10611)
!10654 = !DILocation(line: 727, column: 14, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10651, file: !10374, line: 725, column: 3)
!10656 = !DILocation(line: 728, column: 3, scope: !10655)
!10657 = !DILocation(line: 731, column: 13, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10611, file: !10374, line: 731, column: 6)
!10659 = !DILocation(line: 731, column: 6, scope: !10611)
!10660 = !DILocation(line: 733, column: 5, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10658, file: !10374, line: 732, column: 3)
!10662 = !DILocation(line: 734, column: 3, scope: !10661)
!10663 = !DILocation(line: 736, column: 3, scope: !10611)
!10664 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6834, file: !6834, line: 4184, type: !2821, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10665 = !DILocation(line: 4186, column: 3, scope: !10664)
!10666 = !DILocation(line: 4187, column: 1, scope: !10664)
!10667 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6834, file: !6834, line: 4205, type: !4878, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10668 = !DILocation(line: 4207, column: 11, scope: !10667)
!10669 = !DILocation(line: 4207, column: 44, scope: !10667)
!10670 = !DILocation(line: 4207, column: 3, scope: !10667)
!10671 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6834, file: !6834, line: 3224, type: !4888, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10672)
!10672 = !{!10673}
!10673 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10671, file: !6834, line: 3224, type: !121)
!10674 = !DILocation(line: 0, scope: !10671)
!10675 = !DILocation(line: 3226, column: 3, scope: !10671)
!10676 = !DILocation(line: 3227, column: 1, scope: !10671)
!10677 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6834, file: !6834, line: 3188, type: !4888, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10678)
!10678 = !{!10679}
!10679 = !DILocalVariable(name: "Source", arg: 1, scope: !10677, file: !6834, line: 3188, type: !121)
!10680 = !DILocation(line: 0, scope: !10677)
!10681 = !DILocation(line: 3190, column: 3, scope: !10677)
!10682 = !DILocation(line: 3191, column: 1, scope: !10677)
!10683 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6834, file: !6834, line: 3204, type: !4878, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10684 = !DILocation(line: 3206, column: 21, scope: !10683)
!10685 = !DILocation(line: 3206, column: 3, scope: !10683)
!10686 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6834, file: !6834, line: 3240, type: !4888, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10687)
!10687 = !{!10688}
!10688 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10686, file: !6834, line: 3240, type: !121)
!10689 = !DILocation(line: 0, scope: !10686)
!10690 = !DILocation(line: 3242, column: 3, scope: !10686)
!10691 = !DILocation(line: 3243, column: 1, scope: !10686)
!10692 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6834, file: !6834, line: 3256, type: !4888, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10693)
!10693 = !{!10694}
!10694 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10692, file: !6834, line: 3256, type: !121)
!10695 = !DILocation(line: 0, scope: !10692)
!10696 = !DILocation(line: 3258, column: 3, scope: !10692)
!10697 = !DILocation(line: 3259, column: 1, scope: !10692)
!10698 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !6834, file: !6834, line: 5969, type: !4878, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10699 = !DILocation(line: 5971, column: 11, scope: !10698)
!10700 = !DILocation(line: 5971, column: 47, scope: !10698)
!10701 = !DILocation(line: 5971, column: 3, scope: !10698)
!10702 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6834, file: !6834, line: 5153, type: !4878, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10703 = !DILocation(line: 5155, column: 11, scope: !10702)
!10704 = !DILocation(line: 5155, column: 47, scope: !10702)
!10705 = !DILocation(line: 5155, column: 3, scope: !10702)
!10706 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10374, file: !10374, line: 540, type: !10707, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !10709)
!10707 = !DISubroutineType(types: !10708)
!10708 = !{!10417, !121, !121, !10513, !10520}
!10709 = !{!10710, !10711, !10712, !10713, !10714, !10715}
!10710 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10706, file: !10374, line: 540, type: !121)
!10711 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10706, file: !10374, line: 540, type: !121)
!10712 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10706, file: !10374, line: 541, type: !10513)
!10713 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10706, file: !10374, line: 541, type: !10520)
!10714 = !DILocalVariable(name: "status", scope: !10706, file: !10374, line: 543, type: !10417)
!10715 = !DILocalVariable(name: "pllfreq", scope: !10706, file: !10374, line: 544, type: !121)
!10716 = !DILocation(line: 0, scope: !10706)
!10717 = !DILocation(line: 551, column: 6, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10706, file: !10374, line: 551, column: 6)
!10719 = !DILocation(line: 551, column: 25, scope: !10718)
!10720 = !DILocation(line: 551, column: 6, scope: !10706)
!10721 = !DILocation(line: 554, column: 15, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10718, file: !10374, line: 552, column: 3)
!10723 = !DILocation(line: 557, column: 8, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10722, file: !10374, line: 557, column: 8)
!10725 = !DILocation(line: 557, column: 29, scope: !10724)
!10726 = !DILocation(line: 557, column: 8, scope: !10722)
!10727 = !DILocation(line: 560, column: 20, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !10374, line: 560, column: 10)
!10729 = distinct !DILexicalBlock(scope: !10724, file: !10374, line: 558, column: 5)
!10730 = !DILocation(line: 560, column: 10, scope: !10729)
!10731 = !DILocation(line: 562, column: 9, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10728, file: !10374, line: 561, column: 7)
!10733 = !DILocation(line: 563, column: 7, scope: !10732)
!10734 = !DILocation(line: 566, column: 9, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10728, file: !10374, line: 565, column: 7)
!10736 = !DILocation(line: 570, column: 7, scope: !10729)
!10737 = !DILocation(line: 571, column: 7, scope: !10729)
!10738 = !DILocation(line: 571, column: 14, scope: !10729)
!10739 = !DILocation(line: 571, column: 35, scope: !10729)
!10740 = distinct !{!10740, !10737, !10741}
!10741 = !DILocation(line: 574, column: 7, scope: !10729)
!10742 = !DILocation(line: 578, column: 76, scope: !10722)
!10743 = !DILocation(line: 578, column: 103, scope: !10722)
!10744 = !DILocation(line: 579, column: 54, scope: !10722)
!10745 = !DILocation(line: 578, column: 5, scope: !10722)
!10746 = !DILocation(line: 582, column: 14, scope: !10722)
!10747 = !DILocation(line: 583, column: 3, scope: !10722)
!10748 = !DILocation(line: 0, scope: !10718)
!10749 = !DILocation(line: 590, column: 3, scope: !10706)
!10750 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6834, file: !6834, line: 2969, type: !4878, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10751 = !DILocation(line: 2971, column: 11, scope: !10750)
!10752 = !DILocation(line: 2971, column: 44, scope: !10750)
!10753 = !DILocation(line: 2971, column: 3, scope: !10750)
!10754 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6834, file: !6834, line: 2929, type: !2821, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10755 = !DILocation(line: 2931, column: 3, scope: !10754)
!10756 = !DILocation(line: 2932, column: 1, scope: !10754)
!10757 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6834, file: !6834, line: 2939, type: !2821, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10758 = !DILocation(line: 2941, column: 3, scope: !10757)
!10759 = !DILocation(line: 2942, column: 1, scope: !10757)
!10760 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6834, file: !6834, line: 2949, type: !2821, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2714, retainedNodes: !322)
!10761 = !DILocation(line: 2951, column: 3, scope: !10760)
!10762 = !DILocation(line: 2952, column: 1, scope: !10760)
!10763 = distinct !DISubprogram(name: "z_device_state_init", scope: !10764, file: !10764, line: 23, type: !2821, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10765)
!10764 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10765 = !{!10766}
!10766 = !DILocalVariable(name: "dev", scope: !10763, file: !10764, line: 25, type: !10767)
!10767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10768, size: 32)
!10768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10769)
!10769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10770)
!10770 = !{!10771, !10772, !10773, !10774, !10780, !10781}
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10769, file: !141, line: 380, baseType: !144, size: 32)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10769, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10769, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10769, file: !141, line: 386, baseType: !10775, size: 32, offset: 96)
!10775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10776, size: 32)
!10776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10777)
!10777 = !{!10778, !10779}
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10776, file: !141, line: 359, baseType: !154, size: 8)
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10776, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10769, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10769, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10782 = !DILocation(line: 0, scope: !10763)
!10783 = !DILocation(line: 31, column: 1, scope: !10763)
!10784 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10764, file: !10764, line: 33, type: !10785, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10787)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{!10767, !144}
!10787 = !{!10788, !10789}
!10788 = !DILocalVariable(name: "name", arg: 1, scope: !10784, file: !10764, line: 33, type: !144)
!10789 = !DILocalVariable(name: "dev", scope: !10784, file: !10764, line: 35, type: !10767)
!10790 = !DILocation(line: 0, scope: !10784)
!10791 = !DILocation(line: 40, column: 12, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10784, file: !10764, line: 40, column: 6)
!10793 = !DILocation(line: 40, column: 21, scope: !10792)
!10794 = !DILocation(line: 40, column: 25, scope: !10792)
!10795 = !DILocation(line: 40, column: 33, scope: !10792)
!10796 = !DILocation(line: 40, column: 6, scope: !10784)
!10797 = !DILocation(line: 55, column: 2, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10784, file: !10764, line: 55, column: 2)
!10799 = !DILocation(line: 50, column: 7, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !10764, line: 50, column: 7)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !10764, line: 49, column: 57)
!10802 = distinct !DILexicalBlock(scope: !10803, file: !10764, line: 49, column: 2)
!10803 = distinct !DILexicalBlock(scope: !10784, file: !10764, line: 49, column: 2)
!10804 = !DILocation(line: 50, column: 30, scope: !10800)
!10805 = !DILocation(line: 50, column: 39, scope: !10800)
!10806 = !DILocation(line: 50, column: 44, scope: !10800)
!10807 = !DILocation(line: 50, column: 7, scope: !10801)
!10808 = !DILocation(line: 49, column: 53, scope: !10802)
!10809 = !DILocation(line: 49, column: 33, scope: !10802)
!10810 = !DILocation(line: 49, column: 2, scope: !10803)
!10811 = distinct !{!10811, !10810, !10812}
!10812 = !DILocation(line: 53, column: 2, scope: !10803)
!10813 = !DILocation(line: 56, column: 7, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10764, line: 56, column: 7)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !10764, line: 55, column: 57)
!10816 = distinct !DILexicalBlock(scope: !10798, file: !10764, line: 55, column: 2)
!10817 = !DILocation(line: 56, column: 30, scope: !10814)
!10818 = !DILocation(line: 56, column: 52, scope: !10814)
!10819 = !DILocation(line: 56, column: 34, scope: !10814)
!10820 = !DILocation(line: 56, column: 58, scope: !10814)
!10821 = !DILocation(line: 56, column: 7, scope: !10815)
!10822 = !DILocation(line: 55, column: 53, scope: !10816)
!10823 = !DILocation(line: 55, column: 33, scope: !10816)
!10824 = distinct !{!10824, !10797, !10825}
!10825 = !DILocation(line: 59, column: 2, scope: !10798)
!10826 = !DILocation(line: 62, column: 1, scope: !10784)
!10827 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10764, file: !10764, line: 93, type: !10828, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10830)
!10828 = !DISubroutineType(types: !10829)
!10829 = !{!157, !10767}
!10830 = !{!10831}
!10831 = !DILocalVariable(name: "dev", arg: 1, scope: !10827, file: !10764, line: 93, type: !10767)
!10832 = !DILocation(line: 0, scope: !10827)
!10833 = !DILocation(line: 99, column: 10, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10827, file: !10764, line: 99, column: 6)
!10835 = !DILocation(line: 99, column: 6, scope: !10827)
!10836 = !DILocation(line: 103, column: 14, scope: !10827)
!10837 = !DILocation(line: 103, column: 21, scope: !10827)
!10838 = !DILocation(line: 103, column: 33, scope: !10827)
!10839 = !DILocation(line: 103, column: 49, scope: !10827)
!10840 = !DILocation(line: 103, column: 58, scope: !10827)
!10841 = !DILocation(line: 104, column: 1, scope: !10827)
!10842 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10764, file: !10764, line: 87, type: !10843, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10846)
!10843 = !DISubroutineType(types: !10844)
!10844 = !{!200, !10845}
!10845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10767, size: 32)
!10846 = !{!10847}
!10847 = !DILocalVariable(name: "devices", arg: 1, scope: !10842, file: !10764, line: 87, type: !10845)
!10848 = !DILocation(line: 0, scope: !10842)
!10849 = !DILocation(line: 89, column: 11, scope: !10842)
!10850 = !DILocation(line: 90, column: 2, scope: !10842)
!10851 = distinct !DISubprogram(name: "device_required_foreach", scope: !10764, file: !10764, line: 125, type: !10852, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10858)
!10852 = !DISubroutineType(types: !10853)
!10853 = !{!103, !10767, !10854, !102}
!10854 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !10855)
!10855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10856, size: 32)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!103, !10767, !102}
!10858 = !{!10859, !10860, !10861, !10862, !10863}
!10859 = !DILocalVariable(name: "dev", arg: 1, scope: !10851, file: !10764, line: 125, type: !10767)
!10860 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10851, file: !10764, line: 126, type: !10854)
!10861 = !DILocalVariable(name: "context", arg: 3, scope: !10851, file: !10764, line: 127, type: !102)
!10862 = !DILocalVariable(name: "handle_count", scope: !10851, file: !10764, line: 129, type: !200)
!10863 = !DILocalVariable(name: "handles", scope: !10851, file: !10764, line: 130, type: !160)
!10864 = !DILocation(line: 0, scope: !10851)
!10865 = !DILocation(line: 129, column: 2, scope: !10851)
!10866 = !DILocation(line: 129, column: 9, scope: !10851)
!10867 = !DILocation(line: 130, column: 35, scope: !10851)
!10868 = !DILocation(line: 132, column: 33, scope: !10851)
!10869 = !DILocation(line: 132, column: 9, scope: !10851)
!10870 = !DILocation(line: 133, column: 1, scope: !10851)
!10871 = !DILocation(line: 132, column: 2, scope: !10851)
!10872 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !10873, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10875)
!10873 = !DISubroutineType(types: !10874)
!10874 = !{!160, !10767, !2295}
!10875 = !{!10876, !10877, !10878, !10879}
!10876 = !DILocalVariable(name: "dev", arg: 1, scope: !10872, file: !141, line: 493, type: !10767)
!10877 = !DILocalVariable(name: "count", arg: 2, scope: !10872, file: !141, line: 493, type: !2295)
!10878 = !DILocalVariable(name: "rv", scope: !10872, file: !141, line: 495, type: !160)
!10879 = !DILocalVariable(name: "i", scope: !10880, file: !141, line: 498, type: !200)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !141, line: 497, column: 18)
!10881 = distinct !DILexicalBlock(scope: !10872, file: !141, line: 497, column: 6)
!10882 = !DILocation(line: 0, scope: !10872)
!10883 = !DILocation(line: 495, column: 35, scope: !10872)
!10884 = !DILocation(line: 497, column: 9, scope: !10881)
!10885 = !DILocation(line: 497, column: 6, scope: !10872)
!10886 = !DILocation(line: 0, scope: !10880)
!10887 = !DILocation(line: 500, column: 11, scope: !10880)
!10888 = !DILocation(line: 500, column: 40, scope: !10880)
!10889 = !DILocation(line: 502, column: 4, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10880, file: !141, line: 501, column: 40)
!10891 = distinct !{!10891, !10892, !10893}
!10892 = !DILocation(line: 500, column: 3, scope: !10880)
!10893 = !DILocation(line: 503, column: 3, scope: !10880)
!10894 = !DILocation(line: 504, column: 10, scope: !10880)
!10895 = !DILocation(line: 505, column: 2, scope: !10880)
!10896 = !DILocation(line: 507, column: 2, scope: !10872)
!10897 = distinct !DISubprogram(name: "device_visitor", scope: !10764, file: !10764, line: 106, type: !10898, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10900)
!10898 = !DISubroutineType(types: !10899)
!10899 = !{!103, !160, !200, !10854, !102}
!10900 = !{!10901, !10902, !10903, !10904, !10905, !10907, !10910, !10911}
!10901 = !DILocalVariable(name: "handles", arg: 1, scope: !10897, file: !10764, line: 106, type: !160)
!10902 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10897, file: !10764, line: 107, type: !200)
!10903 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10897, file: !10764, line: 108, type: !10854)
!10904 = !DILocalVariable(name: "context", arg: 4, scope: !10897, file: !10764, line: 109, type: !102)
!10905 = !DILocalVariable(name: "i", scope: !10906, file: !10764, line: 112, type: !200)
!10906 = distinct !DILexicalBlock(scope: !10897, file: !10764, line: 112, column: 2)
!10907 = !DILocalVariable(name: "dh", scope: !10908, file: !10764, line: 113, type: !162)
!10908 = distinct !DILexicalBlock(scope: !10909, file: !10764, line: 112, column: 44)
!10909 = distinct !DILexicalBlock(scope: !10906, file: !10764, line: 112, column: 2)
!10910 = !DILocalVariable(name: "rdev", scope: !10908, file: !10764, line: 114, type: !10767)
!10911 = !DILocalVariable(name: "rc", scope: !10908, file: !10764, line: 115, type: !103)
!10912 = !DILocation(line: 0, scope: !10897)
!10913 = !DILocation(line: 0, scope: !10906)
!10914 = !DILocation(line: 112, column: 23, scope: !10909)
!10915 = !DILocation(line: 112, column: 2, scope: !10906)
!10916 = distinct !{!10916, !10915, !10917}
!10917 = !DILocation(line: 120, column: 2, scope: !10906)
!10918 = !DILocation(line: 113, column: 24, scope: !10908)
!10919 = !DILocation(line: 0, scope: !10908)
!10920 = !DILocation(line: 114, column: 31, scope: !10908)
!10921 = !DILocation(line: 115, column: 12, scope: !10908)
!10922 = !DILocation(line: 117, column: 10, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10908, file: !10764, line: 117, column: 7)
!10924 = !DILocation(line: 112, column: 39, scope: !10909)
!10925 = !DILocation(line: 123, column: 1, scope: !10897)
!10926 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !10927, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10929)
!10927 = !DISubroutineType(types: !10928)
!10928 = !{!10767, !162}
!10929 = !{!10930, !10931, !10932}
!10930 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10926, file: !141, line: 439, type: !162)
!10931 = !DILocalVariable(name: "dev", scope: !10926, file: !141, line: 443, type: !10767)
!10932 = !DILocalVariable(name: "numdev", scope: !10926, file: !141, line: 444, type: !200)
!10933 = !DILocation(line: 0, scope: !10926)
!10934 = !DILocation(line: 446, column: 7, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10926, file: !141, line: 446, column: 6)
!10936 = !DILocation(line: 446, column: 18, scope: !10935)
!10937 = !DILocation(line: 446, column: 23, scope: !10935)
!10938 = !DILocation(line: 450, column: 2, scope: !10926)
!10939 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10764, file: !10764, line: 135, type: !10852, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10940)
!10940 = !{!10941, !10942, !10943, !10944, !10945}
!10941 = !DILocalVariable(name: "dev", arg: 1, scope: !10939, file: !10764, line: 135, type: !10767)
!10942 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10939, file: !10764, line: 136, type: !10854)
!10943 = !DILocalVariable(name: "context", arg: 3, scope: !10939, file: !10764, line: 137, type: !102)
!10944 = !DILocalVariable(name: "handle_count", scope: !10939, file: !10764, line: 139, type: !200)
!10945 = !DILocalVariable(name: "handles", scope: !10939, file: !10764, line: 140, type: !160)
!10946 = !DILocation(line: 0, scope: !10939)
!10947 = !DILocation(line: 139, column: 2, scope: !10939)
!10948 = !DILocation(line: 139, column: 9, scope: !10939)
!10949 = !DILocation(line: 140, column: 35, scope: !10939)
!10950 = !DILocation(line: 142, column: 33, scope: !10939)
!10951 = !DILocation(line: 142, column: 9, scope: !10939)
!10952 = !DILocation(line: 143, column: 1, scope: !10939)
!10953 = !DILocation(line: 142, column: 2, scope: !10939)
!10954 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !10873, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !10955)
!10955 = !{!10956, !10957, !10958, !10959, !10960}
!10956 = !DILocalVariable(name: "dev", arg: 1, scope: !10954, file: !141, line: 573, type: !10767)
!10957 = !DILocalVariable(name: "count", arg: 2, scope: !10954, file: !141, line: 573, type: !2295)
!10958 = !DILocalVariable(name: "rv", scope: !10954, file: !141, line: 575, type: !160)
!10959 = !DILocalVariable(name: "region", scope: !10954, file: !141, line: 576, type: !200)
!10960 = !DILocalVariable(name: "i", scope: !10954, file: !141, line: 577, type: !200)
!10961 = !DILocation(line: 0, scope: !10954)
!10962 = !DILocation(line: 575, column: 35, scope: !10954)
!10963 = !DILocation(line: 579, column: 9, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10954, file: !141, line: 579, column: 6)
!10965 = !DILocation(line: 579, column: 6, scope: !10954)
!10966 = !DILocation(line: 582, column: 8, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !141, line: 582, column: 8)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !141, line: 581, column: 23)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !141, line: 579, column: 18)
!10970 = !DILocation(line: 582, column: 12, scope: !10967)
!10971 = !DILocation(line: 585, column: 6, scope: !10968)
!10972 = !DILocation(line: 0, scope: !10969)
!10973 = !DILocation(line: 581, column: 17, scope: !10969)
!10974 = !DILocation(line: 581, column: 3, scope: !10969)
!10975 = !DILocation(line: 588, column: 10, scope: !10969)
!10976 = !DILocation(line: 588, column: 16, scope: !10969)
!10977 = !DILocation(line: 589, column: 4, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10969, file: !141, line: 588, column: 39)
!10979 = !DILocation(line: 588, column: 3, scope: !10969)
!10980 = distinct !{!10980, !10979, !10981}
!10981 = !DILocation(line: 590, column: 3, scope: !10969)
!10982 = !DILocation(line: 591, column: 10, scope: !10969)
!10983 = !DILocation(line: 592, column: 2, scope: !10969)
!10984 = !DILocation(line: 575, column: 25, scope: !10954)
!10985 = !DILocation(line: 594, column: 2, scope: !10954)
!10986 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1714, file: !1714, line: 49, type: !10987, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !322)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{!2288}
!10989 = !DILocation(line: 51, column: 10, scope: !10986)
!10990 = !DILocation(line: 51, column: 20, scope: !10986)
!10991 = !DILocation(line: 51, column: 2, scope: !10986)
!10992 = distinct !DISubprogram(name: "coredump", scope: !2788, file: !2788, line: 209, type: !10993, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11139)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{null, !32, !10995, !11039}
!10995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10996, size: 32)
!10996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10997)
!10997 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2420, line: 141, baseType: !10998)
!10998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2420, line: 97, size: 256, elements: !10999)
!10999 = !{!11000}
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10998, file: !2420, line: 107, baseType: !11001, size: 256)
!11001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2420, line: 98, size: 256, elements: !11002)
!11002 = !{!11003, !11008, !11013, !11018, !11023, !11028, !11033, !11038}
!11003 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 99, baseType: !11004, size: 32)
!11004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 99, size: 32, elements: !11005)
!11005 = !{!11006, !11007}
!11006 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11004, file: !2420, line: 99, baseType: !121, size: 32)
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11004, file: !2420, line: 99, baseType: !121, size: 32)
!11008 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 100, baseType: !11009, size: 32, offset: 32)
!11009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 100, size: 32, elements: !11010)
!11010 = !{!11011, !11012}
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11009, file: !2420, line: 100, baseType: !121, size: 32)
!11012 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11009, file: !2420, line: 100, baseType: !121, size: 32)
!11013 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 101, baseType: !11014, size: 32, offset: 64)
!11014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 101, size: 32, elements: !11015)
!11015 = !{!11016, !11017}
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11014, file: !2420, line: 101, baseType: !121, size: 32)
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11014, file: !2420, line: 101, baseType: !121, size: 32)
!11018 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 102, baseType: !11019, size: 32, offset: 96)
!11019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 102, size: 32, elements: !11020)
!11020 = !{!11021, !11022}
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11019, file: !2420, line: 102, baseType: !121, size: 32)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11019, file: !2420, line: 102, baseType: !121, size: 32)
!11023 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 103, baseType: !11024, size: 32, offset: 128)
!11024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 103, size: 32, elements: !11025)
!11025 = !{!11026, !11027}
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11024, file: !2420, line: 103, baseType: !121, size: 32)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11024, file: !2420, line: 103, baseType: !121, size: 32)
!11028 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 104, baseType: !11029, size: 32, offset: 160)
!11029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 104, size: 32, elements: !11030)
!11030 = !{!11031, !11032}
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11029, file: !2420, line: 104, baseType: !121, size: 32)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11029, file: !2420, line: 104, baseType: !121, size: 32)
!11033 = !DIDerivedType(tag: DW_TAG_member, scope: !11001, file: !2420, line: 105, baseType: !11034, size: 32, offset: 192)
!11034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11001, file: !2420, line: 105, size: 32, elements: !11035)
!11035 = !{!11036, !11037}
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11034, file: !2420, line: 105, baseType: !121, size: 32)
!11037 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11034, file: !2420, line: 105, baseType: !121, size: 32)
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11001, file: !2420, line: 106, baseType: !121, size: 32, offset: 224)
!11039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11040, size: 32)
!11040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !11041)
!11041 = !{!11042, !11100, !11112, !11113, !11114, !11115, !11121, !11134}
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11040, file: !211, line: 247, baseType: !11043, size: 384)
!11043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !11044)
!11044 = !{!11045, !11069, !11076, !11077, !11078, !11087, !11088, !11089}
!11045 = !DIDerivedType(tag: DW_TAG_member, scope: !11043, file: !211, line: 60, baseType: !11046, size: 64)
!11046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11043, file: !211, line: 60, size: 64, elements: !11047)
!11047 = !{!11048, !11063}
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11046, file: !211, line: 61, baseType: !11049, size: 64)
!11049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !11050)
!11050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !11051)
!11051 = !{!11052, !11058}
!11052 = !DIDerivedType(tag: DW_TAG_member, scope: !11050, file: !221, line: 38, baseType: !11053, size: 32)
!11053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11050, file: !221, line: 38, size: 32, elements: !11054)
!11054 = !{!11055, !11057}
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11053, file: !221, line: 39, baseType: !11056, size: 32)
!11056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11050, size: 32)
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11053, file: !221, line: 40, baseType: !11056, size: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, scope: !11050, file: !221, line: 42, baseType: !11059, size: 32, offset: 32)
!11059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11050, file: !221, line: 42, size: 32, elements: !11060)
!11060 = !{!11061, !11062}
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11059, file: !221, line: 43, baseType: !11056, size: 32)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11059, file: !221, line: 44, baseType: !11056, size: 32)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11046, file: !211, line: 62, baseType: !11064, size: 64)
!11064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !11065)
!11065 = !{!11066}
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11064, file: !237, line: 50, baseType: !11067, size: 64)
!11067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11068, size: 64, elements: !242)
!11068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11064, size: 32)
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11043, file: !211, line: 68, baseType: !11070, size: 32, offset: 64)
!11070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11071, size: 32)
!11071 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !11072)
!11072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !11073)
!11073 = !{!11074}
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11072, file: !247, line: 232, baseType: !11075, size: 64)
!11075 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !11050)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11043, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11043, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!11078 = !DIDerivedType(tag: DW_TAG_member, scope: !11043, file: !211, line: 90, baseType: !11079, size: 16, offset: 112)
!11079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11043, file: !211, line: 90, size: 16, elements: !11080)
!11080 = !{!11081, !11086}
!11081 = !DIDerivedType(tag: DW_TAG_member, scope: !11079, file: !211, line: 91, baseType: !11082, size: 16)
!11082 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11079, file: !211, line: 91, size: 16, elements: !11083)
!11083 = !{!11084, !11085}
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11082, file: !211, line: 96, baseType: !261, size: 8)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11082, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11079, file: !211, line: 100, baseType: !265, size: 16)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11043, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11043, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11043, file: !211, line: 131, baseType: !11090, size: 192, offset: 192)
!11090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !11091)
!11091 = !{!11092, !11093, !11099}
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11090, file: !247, line: 245, baseType: !11049, size: 64)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11090, file: !247, line: 246, baseType: !11094, size: 32, offset: 64)
!11094 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !11095)
!11095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11096, size: 32)
!11096 = !DISubroutineType(types: !11097)
!11097 = !{null, !11098}
!11098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11090, size: 32)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11090, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11040, file: !211, line: 250, baseType: !11101, size: 288, offset: 384)
!11101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !11102)
!11102 = !{!11103, !11104, !11105, !11106, !11107, !11108, !11109, !11110, !11111}
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11101, file: !284, line: 26, baseType: !121, size: 32)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11101, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11101, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11101, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11101, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11101, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11101, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11101, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11101, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11040, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11040, file: !211, line: 256, baseType: !11071, size: 64, offset: 704)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11040, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11040, file: !211, line: 300, baseType: !11116, size: 96, offset: 800)
!11116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !11117)
!11117 = !{!11118, !11119, !11120}
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11116, file: !211, line: 153, baseType: !22, size: 32)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11116, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11116, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11040, file: !211, line: 325, baseType: !11122, size: 32, offset: 896)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11123, size: 32)
!11123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !11124)
!11124 = !{!11125, !11131, !11132}
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11123, file: !307, line: 5074, baseType: !11126, size: 96)
!11126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !11127)
!11127 = !{!11128, !11129, !11130}
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11126, file: !311, line: 57, baseType: !314, size: 32)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11126, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11126, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11123, file: !307, line: 5075, baseType: !11071, size: 64, offset: 96)
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11123, file: !307, line: 5076, baseType: !11133, offset: 160)
!11133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11040, file: !211, line: 343, baseType: !11135, size: 64, offset: 928)
!11135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !11136)
!11136 = !{!11137, !11138}
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11135, file: !284, line: 63, baseType: !121, size: 32)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11135, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!11139 = !{!11140, !11141, !11142}
!11140 = !DILocalVariable(name: "reason", arg: 1, scope: !10992, file: !2788, line: 209, type: !32)
!11141 = !DILocalVariable(name: "esf", arg: 2, scope: !10992, file: !2788, line: 209, type: !10995)
!11142 = !DILocalVariable(name: "thread", arg: 3, scope: !10992, file: !2788, line: 210, type: !11039)
!11143 = !DILocation(line: 0, scope: !10992)
!11144 = !DILocation(line: 212, column: 1, scope: !10992)
!11145 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2788, file: !2788, line: 214, type: !11146, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11148)
!11146 = !DISubroutineType(types: !11147)
!11147 = !{null, !22, !22}
!11148 = !{!11149, !11150}
!11149 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11145, file: !2788, line: 214, type: !22)
!11150 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11145, file: !2788, line: 214, type: !22)
!11151 = !DILocation(line: 0, scope: !11145)
!11152 = !DILocation(line: 216, column: 1, scope: !11145)
!11153 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2788, file: !2788, line: 218, type: !11154, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11156)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{null, !1755, !200}
!11156 = !{!11157, !11158}
!11157 = !DILocalVariable(name: "buf", arg: 1, scope: !11153, file: !2788, line: 218, type: !1755)
!11158 = !DILocalVariable(name: "buflen", arg: 2, scope: !11153, file: !2788, line: 218, type: !200)
!11159 = !DILocation(line: 0, scope: !11153)
!11160 = !DILocation(line: 220, column: 1, scope: !11153)
!11161 = distinct !DISubprogram(name: "coredump_query", scope: !2788, file: !2788, line: 222, type: !11162, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11164)
!11162 = !DISubroutineType(types: !11163)
!11163 = !{!103, !2787, !102}
!11164 = !{!11165, !11166}
!11165 = !DILocalVariable(name: "query_id", arg: 1, scope: !11161, file: !2788, line: 222, type: !2787)
!11166 = !DILocalVariable(name: "arg", arg: 2, scope: !11161, file: !2788, line: 222, type: !102)
!11167 = !DILocation(line: 0, scope: !11161)
!11168 = !DILocation(line: 224, column: 2, scope: !11161)
!11169 = distinct !DISubprogram(name: "coredump_cmd", scope: !2788, file: !2788, line: 227, type: !11170, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11172)
!11170 = !DISubroutineType(types: !11171)
!11171 = !{!103, !2794, !102}
!11172 = !{!11173, !11174}
!11173 = !DILocalVariable(name: "query_id", arg: 1, scope: !11169, file: !2788, line: 227, type: !2794)
!11174 = !DILocalVariable(name: "arg", arg: 2, scope: !11169, file: !2788, line: 227, type: !102)
!11175 = !DILocation(line: 0, scope: !11169)
!11176 = !DILocation(line: 229, column: 2, scope: !11169)
!11177 = distinct !DISubprogram(name: "arch_system_halt", scope: !11178, file: !11178, line: 23, type: !4634, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11179)
!11178 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11179 = !{!11180}
!11180 = !DILocalVariable(name: "reason", arg: 1, scope: !11177, file: !11178, line: 23, type: !32)
!11181 = !DILocation(line: 0, scope: !11177)
!11182 = !DILocation(line: 55, column: 2, scope: !11183, inlinedAt: !11187)
!11183 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11184)
!11184 = !{!11185, !11186}
!11185 = !DILocalVariable(name: "key", scope: !11183, file: !4623, line: 44, type: !32)
!11186 = !DILocalVariable(name: "tmp", scope: !11183, file: !4623, line: 53, type: !32)
!11187 = distinct !DILocation(line: 31, column: 8, scope: !11177)
!11188 = !{i64 2279862}
!11189 = !DILocation(line: 0, scope: !11183, inlinedAt: !11187)
!11190 = !DILocation(line: 32, column: 2, scope: !11177)
!11191 = !DILocation(line: 32, column: 2, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !11178, line: 32, column: 2)
!11193 = distinct !DILexicalBlock(scope: !11177, file: !11178, line: 32, column: 2)
!11194 = distinct !{!11194, !11195, !11196}
!11195 = !DILocation(line: 32, column: 2, scope: !11193)
!11196 = !DILocation(line: 34, column: 2, scope: !11193)
!11197 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11178, file: !11178, line: 39, type: !11198, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11200)
!11198 = !DISubroutineType(types: !11199)
!11199 = !{null, !32, !10995}
!11200 = !{!11201, !11202}
!11201 = !DILocalVariable(name: "reason", arg: 1, scope: !11197, file: !11178, line: 39, type: !32)
!11202 = !DILocalVariable(name: "esf", arg: 2, scope: !11197, file: !11178, line: 40, type: !10995)
!11203 = !DILocation(line: 0, scope: !11197)
!11204 = !DILocation(line: 46, column: 2, scope: !11197)
!11205 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11178, file: !11178, line: 81, type: !4634, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11206)
!11206 = !{!11207}
!11207 = !DILocalVariable(name: "reason", arg: 1, scope: !11205, file: !11178, line: 81, type: !32)
!11208 = !DILocation(line: 0, scope: !11205)
!11209 = !DILocation(line: 83, column: 2, scope: !11205)
!11210 = distinct !DISubprogram(name: "z_fatal_error", scope: !11178, file: !11178, line: 96, type: !11198, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11211)
!11211 = !{!11212, !11213, !11214, !11215}
!11212 = !DILocalVariable(name: "reason", arg: 1, scope: !11210, file: !11178, line: 96, type: !32)
!11213 = !DILocalVariable(name: "esf", arg: 2, scope: !11210, file: !11178, line: 96, type: !10995)
!11214 = !DILocalVariable(name: "key", scope: !11210, file: !11178, line: 102, type: !32)
!11215 = !DILocalVariable(name: "thread", scope: !11210, file: !11178, line: 103, type: !11039)
!11216 = !DILocation(line: 0, scope: !11210)
!11217 = !DILocation(line: 55, column: 2, scope: !11183, inlinedAt: !11218)
!11218 = distinct !DILocation(line: 102, column: 21, scope: !11210)
!11219 = !DILocation(line: 0, scope: !11183, inlinedAt: !11218)
!11220 = !DILocation(line: 119, column: 11, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11210, file: !11178, line: 119, column: 6)
!11222 = !DILocation(line: 119, column: 20, scope: !11221)
!11223 = !DILocation(line: 131, column: 2, scope: !11210)
!11224 = !DILocation(line: 151, column: 7, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !11178, line: 146, column: 32)
!11226 = distinct !DILexicalBlock(scope: !11210, file: !11178, line: 146, column: 6)
!11227 = !DILocation(line: 151, column: 21, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11225, file: !11178, line: 151, column: 7)
!11229 = !DILocation(line: 104, column: 4, scope: !11210)
!11230 = !DILocalVariable(name: "key", arg: 1, scope: !11231, file: !4623, line: 84, type: !32)
!11231 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11232)
!11232 = !{!11230}
!11233 = !DILocation(line: 0, scope: !11231, inlinedAt: !11234)
!11234 = distinct !DILocation(line: 186, column: 2, scope: !11210)
!11235 = !DILocation(line: 95, column: 2, scope: !11231, inlinedAt: !11234)
!11236 = !{i64 2280679}
!11237 = !DILocation(line: 189, column: 3, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !11178, line: 188, column: 41)
!11239 = distinct !DILexicalBlock(scope: !11210, file: !11178, line: 188, column: 6)
!11240 = !DILocation(line: 191, column: 1, scope: !11210)
!11241 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !11242, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !322)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{!11244}
!11244 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !11039)
!11245 = !DILocation(line: 535, column: 9, scope: !11241)
!11246 = !DILocation(line: 535, column: 2, scope: !11241)
!11247 = distinct !DISubprogram(name: "k_thread_abort", scope: !3246, file: !3246, line: 188, type: !11248, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !11250)
!11248 = !DISubroutineType(types: !11249)
!11249 = !{null, !11244}
!11250 = !{!11251}
!11251 = !DILocalVariable(name: "thread", arg: 1, scope: !11247, file: !3246, line: 188, type: !11244)
!11252 = !DILocation(line: 0, scope: !11247)
!11253 = !DILocation(line: 197, column: 2, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11247, file: !3246, line: 197, column: 2)
!11255 = !{i64 2155061433}
!11256 = !DILocation(line: 198, column: 2, scope: !11247)
!11257 = !DILocation(line: 199, column: 1, scope: !11247)
!11258 = distinct !DISubprogram(name: "z_current_get", scope: !3246, file: !3246, line: 173, type: !11242, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !322)
!11259 = !DILocation(line: 180, column: 2, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11258, file: !3246, line: 180, column: 2)
!11261 = !{i64 2155061365}
!11262 = !DILocation(line: 181, column: 9, scope: !11258)
!11263 = !DILocation(line: 181, column: 2, scope: !11258)
!11264 = distinct !DISubprogram(name: "z_early_memset", scope: !1722, file: !1722, line: 108, type: !11265, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11267)
!11265 = !DISubroutineType(types: !11266)
!11266 = !{null, !102, !103, !200}
!11267 = !{!11268, !11269, !11270}
!11268 = !DILocalVariable(name: "dst", arg: 1, scope: !11264, file: !1722, line: 108, type: !102)
!11269 = !DILocalVariable(name: "c", arg: 2, scope: !11264, file: !1722, line: 108, type: !103)
!11270 = !DILocalVariable(name: "n", arg: 3, scope: !11264, file: !1722, line: 108, type: !200)
!11271 = !DILocation(line: 0, scope: !11264)
!11272 = !DILocation(line: 110, column: 9, scope: !11264)
!11273 = !DILocation(line: 111, column: 1, scope: !11264)
!11274 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1722, file: !1722, line: 121, type: !11275, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11277)
!11275 = !DISubroutineType(types: !11276)
!11276 = !{null, !102, !13, !200}
!11277 = !{!11278, !11279, !11280}
!11278 = !DILocalVariable(name: "dst", arg: 1, scope: !11274, file: !1722, line: 121, type: !102)
!11279 = !DILocalVariable(name: "src", arg: 2, scope: !11274, file: !1722, line: 121, type: !13)
!11280 = !DILocalVariable(name: "n", arg: 3, scope: !11274, file: !1722, line: 121, type: !200)
!11281 = !DILocation(line: 0, scope: !11274)
!11282 = !DILocation(line: 123, column: 9, scope: !11274)
!11283 = !DILocation(line: 124, column: 1, scope: !11274)
!11284 = distinct !DISubprogram(name: "z_bss_zero", scope: !1722, file: !1722, line: 132, type: !2821, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11285 = !DILocation(line: 143, column: 2, scope: !11284)
!11286 = !DILocation(line: 168, column: 1, scope: !11284)
!11287 = distinct !DISubprogram(name: "z_init_cpu", scope: !1722, file: !1722, line: 372, type: !6442, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11288)
!11288 = !{!11289}
!11289 = !DILocalVariable(name: "id", arg: 1, scope: !11287, file: !1722, line: 372, type: !103)
!11290 = !DILocation(line: 0, scope: !11287)
!11291 = !DILocation(line: 374, column: 2, scope: !11287)
!11292 = !DILocation(line: 375, column: 34, scope: !11287)
!11293 = !DILocation(line: 375, column: 19, scope: !11287)
!11294 = !DILocation(line: 375, column: 31, scope: !11287)
!11295 = !DILocation(line: 376, column: 24, scope: !11287)
!11296 = !DILocation(line: 376, column: 19, scope: !11287)
!11297 = !DILocation(line: 376, column: 22, scope: !11287)
!11298 = !DILocation(line: 378, column: 26, scope: !11287)
!11299 = !DILocation(line: 378, column: 4, scope: !11287)
!11300 = !DILocation(line: 378, column: 50, scope: !11287)
!11301 = !DILocation(line: 377, column: 19, scope: !11287)
!11302 = !DILocation(line: 377, column: 29, scope: !11287)
!11303 = !DILocation(line: 384, column: 1, scope: !11287)
!11304 = distinct !DISubprogram(name: "init_idle_thread", scope: !1722, file: !1722, line: 343, type: !6442, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11305)
!11305 = !{!11306, !11307, !11308, !11311}
!11306 = !DILocalVariable(name: "i", arg: 1, scope: !11304, file: !1722, line: 343, type: !103)
!11307 = !DILocalVariable(name: "thread", scope: !11304, file: !1722, line: 345, type: !1815)
!11308 = !DILocalVariable(name: "stack", scope: !11304, file: !1722, line: 346, type: !11309)
!11309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11310, size: 32)
!11310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3125, line: 44, baseType: !1929)
!11311 = !DILocalVariable(name: "tname", scope: !11304, file: !1722, line: 358, type: !995)
!11312 = !DILocation(line: 0, scope: !11304)
!11313 = !DILocation(line: 345, column: 29, scope: !11304)
!11314 = !DILocation(line: 346, column: 28, scope: !11304)
!11315 = !DILocation(line: 362, column: 37, scope: !11304)
!11316 = !DILocation(line: 362, column: 36, scope: !11304)
!11317 = !DILocation(line: 361, column: 2, scope: !11304)
!11318 = !DILocation(line: 365, column: 2, scope: !11304)
!11319 = !DILocation(line: 370, column: 1, scope: !11304)
!11320 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1930, file: !1930, line: 331, type: !11321, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11323)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{!995, !11309}
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "sym", arg: 1, scope: !11320, file: !1930, line: 331, type: !11309)
!11325 = !DILocation(line: 0, scope: !11320)
!11326 = !DILocation(line: 333, column: 21, scope: !11320)
!11327 = !DILocation(line: 333, column: 2, scope: !11320)
!11328 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11329, file: !11329, line: 155, type: !11330, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11332)
!11329 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11330 = !DISubroutineType(types: !11331)
!11331 = !{null, !1815}
!11332 = !{!11333}
!11333 = !DILocalVariable(name: "thread", arg: 1, scope: !11328, file: !11329, line: 155, type: !1815)
!11334 = !DILocation(line: 0, scope: !11328)
!11335 = !DILocation(line: 157, column: 15, scope: !11328)
!11336 = !DILocation(line: 157, column: 28, scope: !11328)
!11337 = !DILocation(line: 158, column: 1, scope: !11328)
!11338 = distinct !DISubprogram(name: "z_cstart", scope: !1722, file: !1722, line: 501, type: !2821, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11339)
!11339 = !{!11340}
!11340 = !DILocalVariable(name: "dummy_thread", scope: !11338, file: !1722, line: 518, type: !1816)
!11341 = !DILocation(line: 507, column: 2, scope: !11338)
!11342 = !DILocation(line: 43, column: 14, scope: !11343, inlinedAt: !11347)
!11343 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11344, file: !11344, line: 40, type: !2821, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11345)
!11344 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11345 = !{!11346}
!11346 = !DILocalVariable(name: "msp", scope: !11343, file: !11344, line: 42, type: !121)
!11347 = distinct !DILocation(line: 44, column: 2, scope: !11348, inlinedAt: !11350)
!11348 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11349, file: !11349, line: 42, type: !2821, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11349 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11350 = distinct !DILocation(line: 510, column: 2, scope: !11338)
!11351 = !DILocation(line: 43, column: 3, scope: !11343, inlinedAt: !11347)
!11352 = !DILocation(line: 43, column: 60, scope: !11343, inlinedAt: !11347)
!11353 = !DILocation(line: 0, scope: !11343, inlinedAt: !11347)
!11354 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11355, file: !4797, line: 1153, type: !121)
!11355 = distinct !DISubprogram(name: "__set_MSP", scope: !4797, file: !4797, line: 1153, type: !4888, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11356)
!11356 = !{!11354}
!11357 = !DILocation(line: 0, scope: !11355, inlinedAt: !11358)
!11358 = distinct !DILocation(line: 46, column: 2, scope: !11343, inlinedAt: !11347)
!11359 = !DILocation(line: 1155, column: 3, scope: !11355, inlinedAt: !11358)
!11360 = !{i64 3745801}
!11361 = !DILocation(line: 62, column: 11, scope: !11343, inlinedAt: !11347)
!11362 = !DILocation(line: 102, column: 2, scope: !11363, inlinedAt: !11364)
!11363 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5591, file: !5591, line: 97, type: !2821, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11364 = distinct !DILocation(line: 45, column: 2, scope: !11348, inlinedAt: !11350)
!11365 = !DILocation(line: 108, column: 2, scope: !11363, inlinedAt: !11364)
!11366 = !DILocation(line: 112, column: 2, scope: !11363, inlinedAt: !11364)
!11367 = !DILocation(line: 113, column: 2, scope: !11363, inlinedAt: !11364)
!11368 = !DILocation(line: 114, column: 2, scope: !11363, inlinedAt: !11364)
!11369 = !DILocation(line: 116, column: 2, scope: !11363, inlinedAt: !11364)
!11370 = !DILocation(line: 123, column: 13, scope: !11363, inlinedAt: !11364)
!11371 = !DILocation(line: 46, column: 2, scope: !11348, inlinedAt: !11350)
!11372 = !DILocation(line: 47, column: 2, scope: !11348, inlinedAt: !11350)
!11373 = !DILocation(line: 174, column: 12, scope: !11374, inlinedAt: !11375)
!11374 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5591, file: !5591, line: 169, type: !2821, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11375 = distinct !DILocation(line: 48, column: 2, scope: !11348, inlinedAt: !11350)
!11376 = !DILocation(line: 179, column: 12, scope: !11374, inlinedAt: !11375)
!11377 = !DILocation(line: 50, column: 2, scope: !11348, inlinedAt: !11350)
!11378 = !DILocation(line: 57, column: 2, scope: !11348, inlinedAt: !11350)
!11379 = !DILocation(line: 518, column: 2, scope: !11338)
!11380 = !DILocation(line: 518, column: 18, scope: !11338)
!11381 = !DILocation(line: 520, column: 2, scope: !11338)
!11382 = !DILocation(line: 523, column: 2, scope: !11338)
!11383 = !DILocation(line: 526, column: 2, scope: !11338)
!11384 = !DILocation(line: 527, column: 2, scope: !11338)
!11385 = !DILocation(line: 543, column: 24, scope: !11338)
!11386 = !DILocation(line: 543, column: 2, scope: !11338)
!11387 = !DILocation(line: 0, scope: !1949)
!11388 = !DILocation(line: 246, column: 15, scope: !1967)
!11389 = !DILocation(line: 246, column: 36, scope: !1966)
!11390 = !DILocation(line: 246, column: 2, scope: !1967)
!11391 = !DILocation(line: 247, column: 37, scope: !1965)
!11392 = !DILocation(line: 0, scope: !1965)
!11393 = !DILocation(line: 248, column: 19, scope: !1965)
!11394 = !DILocation(line: 248, column: 12, scope: !1965)
!11395 = !DILocation(line: 250, column: 11, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !1965, file: !1722, line: 250, column: 7)
!11397 = !DILocation(line: 250, column: 7, scope: !1965)
!11398 = !DILocation(line: 254, column: 11, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !1722, line: 254, column: 8)
!11400 = distinct !DILexicalBlock(scope: !11396, file: !1722, line: 250, column: 20)
!11401 = !DILocation(line: 254, column: 8, scope: !11400)
!11402 = !DILocation(line: 255, column: 9, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11399, file: !1722, line: 254, column: 17)
!11404 = !DILocation(line: 258, column: 9, scope: !11403)
!11405 = !DILocation(line: 261, column: 28, scope: !11403)
!11406 = !DILocation(line: 261, column: 10, scope: !11403)
!11407 = !DILocation(line: 261, column: 17, scope: !11403)
!11408 = !DILocation(line: 261, column: 26, scope: !11403)
!11409 = !DILocation(line: 262, column: 4, scope: !11403)
!11410 = !DILocation(line: 263, column: 9, scope: !11400)
!11411 = !DILocation(line: 263, column: 16, scope: !11400)
!11412 = !DILocation(line: 263, column: 28, scope: !11400)
!11413 = !DILocation(line: 264, column: 3, scope: !11400)
!11414 = !DILocation(line: 246, column: 60, scope: !1966)
!11415 = distinct !{!11415, !11390, !11416}
!11416 = !DILocation(line: 265, column: 2, scope: !1967)
!11417 = !DILocation(line: 266, column: 1, scope: !1949)
!11418 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4831, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11419)
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11418, file: !356, line: 1814, type: !621)
!11421 = !DILocalVariable(name: "priority", arg: 2, scope: !11418, file: !356, line: 1814, type: !121)
!11422 = !DILocation(line: 0, scope: !11418)
!11423 = !DILocation(line: 1822, column: 48, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !356, line: 1821, column: 3)
!11425 = distinct !DILexicalBlock(scope: !11418, file: !356, line: 1816, column: 7)
!11426 = !DILocation(line: 1822, column: 32, scope: !11424)
!11427 = !DILocation(line: 1822, column: 40, scope: !11424)
!11428 = !DILocation(line: 1822, column: 5, scope: !11424)
!11429 = !DILocation(line: 1822, column: 46, scope: !11424)
!11430 = !DILocation(line: 1824, column: 1, scope: !11418)
!11431 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11349, file: !11349, line: 32, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11432 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11433, file: !11433, line: 215, type: !11330, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11434)
!11433 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11434 = !{!11435}
!11435 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11432, file: !11433, line: 215, type: !1815)
!11436 = !DILocation(line: 0, scope: !11432)
!11437 = !DILocation(line: 217, column: 21, scope: !11432)
!11438 = !DILocation(line: 217, column: 34, scope: !11432)
!11439 = !DILocation(line: 221, column: 21, scope: !11432)
!11440 = !DILocation(line: 221, column: 34, scope: !11432)
!11441 = !DILocation(line: 223, column: 27, scope: !11432)
!11442 = !DILocation(line: 223, column: 33, scope: !11432)
!11443 = !DILocation(line: 224, column: 27, scope: !11432)
!11444 = !DILocation(line: 224, column: 32, scope: !11432)
!11445 = !DILocation(line: 232, column: 16, scope: !11432)
!11446 = !DILocation(line: 232, column: 30, scope: !11432)
!11447 = !DILocation(line: 239, column: 24, scope: !11432)
!11448 = !DILocation(line: 240, column: 1, scope: !11432)
!11449 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1722, file: !1722, line: 399, type: !11450, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11452)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{!995}
!11452 = !{!11453}
!11453 = !DILocalVariable(name: "stack_ptr", scope: !11449, file: !1722, line: 401, type: !995)
!11454 = !DILocation(line: 404, column: 2, scope: !11449)
!11455 = !DILocation(line: 416, column: 24, scope: !11449)
!11456 = !DILocation(line: 418, column: 14, scope: !11449)
!11457 = !DILocation(line: 0, scope: !11449)
!11458 = !DILocation(line: 423, column: 2, scope: !11449)
!11459 = !DILocation(line: 424, column: 2, scope: !11449)
!11460 = !DILocation(line: 426, column: 2, scope: !11449)
!11461 = !DILocation(line: 428, column: 2, scope: !11449)
!11462 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1722, file: !1722, line: 432, type: !11463, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11465)
!11463 = !DISubroutineType(types: !11464)
!11464 = !{null, !995}
!11465 = !{!11466}
!11466 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11462, file: !1722, line: 432, type: !995)
!11467 = !DILocation(line: 0, scope: !11462)
!11468 = !DILocation(line: 435, column: 2, scope: !11462)
!11469 = !DILocation(line: 445, column: 2, scope: !11462)
!11470 = distinct !DISubprogram(name: "bg_thread_main", scope: !1722, file: !1722, line: 277, type: !3127, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11471)
!11471 = !{!11472, !11473, !11474}
!11472 = !DILocalVariable(name: "unused1", arg: 1, scope: !11470, file: !1722, line: 277, type: !102)
!11473 = !DILocalVariable(name: "unused2", arg: 2, scope: !11470, file: !1722, line: 277, type: !102)
!11474 = !DILocalVariable(name: "unused3", arg: 3, scope: !11470, file: !1722, line: 277, type: !102)
!11475 = !DILocation(line: 0, scope: !11470)
!11476 = !DILocation(line: 291, column: 20, scope: !11470)
!11477 = !DILocation(line: 293, column: 2, scope: !11470)
!11478 = !DILocation(line: 297, column: 2, scope: !11470)
!11479 = !DILocation(line: 305, column: 2, scope: !11470)
!11480 = !DILocation(line: 307, column: 2, scope: !11470)
!11481 = !DILocation(line: 330, column: 8, scope: !11470)
!11482 = !DILocation(line: 333, column: 34, scope: !11470)
!11483 = !DILocation(line: 339, column: 1, scope: !11470)
!11484 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1978, file: !1978, line: 45, type: !11485, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11493)
!11485 = !DISubroutineType(types: !11486)
!11486 = !{null, !11487, !102}
!11487 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11488)
!11488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11489, size: 32)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{null, !11491, !102}
!11491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11492, size: 32)
!11492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1983)
!11493 = !{!11494, !11495}
!11494 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11484, file: !1978, line: 45, type: !11487)
!11495 = !DILocalVariable(name: "user_data", arg: 2, scope: !11484, file: !1978, line: 45, type: !102)
!11496 = !DILocation(line: 0, scope: !11484)
!11497 = !DILocation(line: 71, column: 1, scope: !11484)
!11498 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1978, file: !1978, line: 73, type: !11485, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11499)
!11499 = !{!11500, !11501}
!11500 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11498, file: !1978, line: 73, type: !11487)
!11501 = !DILocalVariable(name: "user_data", arg: 2, scope: !11498, file: !1978, line: 73, type: !102)
!11502 = !DILocation(line: 0, scope: !11498)
!11503 = !DILocation(line: 95, column: 1, scope: !11498)
!11504 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1978, file: !1978, line: 97, type: !5592, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11505 = !DILocation(line: 1031, column: 3, scope: !11506, inlinedAt: !11509)
!11506 = distinct !DISubprogram(name: "__get_IPSR", scope: !4797, file: !4797, line: 1027, type: !4878, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11507)
!11507 = !{!11508}
!11508 = !DILocalVariable(name: "result", scope: !11506, file: !4797, line: 1029, type: !121)
!11509 = distinct !DILocation(line: 48, column: 10, scope: !11510, inlinedAt: !11511)
!11510 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5591, file: !5591, line: 46, type: !5592, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11511 = distinct !DILocation(line: 99, column: 9, scope: !11504)
!11512 = !{i64 3751452}
!11513 = !DILocation(line: 0, scope: !11506, inlinedAt: !11509)
!11514 = !DILocation(line: 48, column: 9, scope: !11510, inlinedAt: !11511)
!11515 = !DILocation(line: 99, column: 2, scope: !11504)
!11516 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1978, file: !1978, line: 106, type: !2821, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11517 = !DILocation(line: 108, column: 2, scope: !11516)
!11518 = !DILocation(line: 108, column: 17, scope: !11516)
!11519 = !DILocation(line: 108, column: 30, scope: !11516)
!11520 = !DILocation(line: 109, column: 1, scope: !11516)
!11521 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1978, file: !1978, line: 116, type: !2821, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11522 = !DILocation(line: 118, column: 2, scope: !11521)
!11523 = !DILocation(line: 118, column: 17, scope: !11521)
!11524 = !DILocation(line: 118, column: 30, scope: !11521)
!11525 = !DILocation(line: 119, column: 1, scope: !11521)
!11526 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1978, file: !1978, line: 126, type: !5592, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11527 = !DILocation(line: 128, column: 10, scope: !11526)
!11528 = !DILocation(line: 128, column: 25, scope: !11526)
!11529 = !DILocation(line: 128, column: 38, scope: !11526)
!11530 = !DILocation(line: 128, column: 53, scope: !11526)
!11531 = !DILocation(line: 128, column: 2, scope: !11526)
!11532 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1978, file: !1978, line: 187, type: !11533, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11535)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{!103, !1982, !144}
!11535 = !{!11536, !11537}
!11536 = !DILocalVariable(name: "thread", arg: 1, scope: !11532, file: !1978, line: 187, type: !1982)
!11537 = !DILocalVariable(name: "value", arg: 2, scope: !11532, file: !1978, line: 187, type: !144)
!11538 = !DILocation(line: 0, scope: !11532)
!11539 = !DILocation(line: 206, column: 2, scope: !11532)
!11540 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1978, file: !1978, line: 238, type: !11541, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11543)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{!144, !1982}
!11543 = !{!11544}
!11544 = !DILocalVariable(name: "thread", arg: 1, scope: !11540, file: !1978, line: 238, type: !1982)
!11545 = !DILocation(line: 0, scope: !11540)
!11546 = !DILocation(line: 244, column: 2, scope: !11540)
!11547 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1978, file: !1978, line: 248, type: !11548, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11550)
!11548 = !DISubroutineType(types: !11549)
!11549 = !{!103, !1981, !995, !200}
!11550 = !{!11551, !11552, !11553}
!11551 = !DILocalVariable(name: "thread", arg: 1, scope: !11547, file: !1978, line: 248, type: !1981)
!11552 = !DILocalVariable(name: "buf", arg: 2, scope: !11547, file: !1978, line: 248, type: !995)
!11553 = !DILocalVariable(name: "size", arg: 3, scope: !11547, file: !1978, line: 248, type: !200)
!11554 = !DILocation(line: 0, scope: !11547)
!11555 = !DILocation(line: 257, column: 2, scope: !11547)
!11556 = !DILocation(line: 0, scope: !1977)
!11557 = !DILocation(line: 281, column: 11, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 281, column: 6)
!11559 = !DILocation(line: 281, column: 20, scope: !11558)
!11560 = !DILocation(line: 275, column: 45, scope: !1977)
!11561 = !DILocation(line: 285, column: 10, scope: !1977)
!11562 = !DILocation(line: 0, scope: !2098)
!11563 = !DILocation(line: 293, column: 39, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !2098, file: !1978, line: 293, column: 2)
!11565 = !DILocation(line: 293, column: 2, scope: !2098)
!11566 = !DILocation(line: 273, column: 14, scope: !1977)
!11567 = !DILocation(line: 309, column: 2, scope: !1977)
!11568 = !DILocation(line: 309, column: 11, scope: !1977)
!11569 = !DILocation(line: 311, column: 2, scope: !1977)
!11570 = !DILocation(line: 293, column: 26, scope: !11564)
!11571 = !DILocation(line: 294, column: 9, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11564, file: !1978, line: 293, column: 54)
!11573 = !DILocation(line: 295, column: 21, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11572, file: !1978, line: 295, column: 7)
!11575 = !DILocation(line: 295, column: 28, scope: !11574)
!11576 = !DILocation(line: 295, column: 7, scope: !11572)
!11577 = !DILocation(line: 299, column: 25, scope: !11572)
!11578 = !DILocation(line: 299, column: 41, scope: !11572)
!11579 = !DILocation(line: 300, column: 7, scope: !11572)
!11580 = !DILocation(line: 300, column: 26, scope: !11572)
!11581 = !DILocation(line: 299, column: 10, scope: !11572)
!11582 = !DILocation(line: 299, column: 7, scope: !11572)
!11583 = !DILocation(line: 302, column: 16, scope: !11572)
!11584 = !DILocation(line: 304, column: 20, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11572, file: !1978, line: 304, column: 7)
!11586 = !DILocation(line: 304, column: 7, scope: !11572)
!11587 = !DILocation(line: 305, column: 26, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11585, file: !1978, line: 304, column: 26)
!11589 = !DILocation(line: 305, column: 42, scope: !11588)
!11590 = !DILocation(line: 305, column: 11, scope: !11588)
!11591 = !DILocation(line: 305, column: 8, scope: !11588)
!11592 = !DILocation(line: 306, column: 3, scope: !11588)
!11593 = !DILocation(line: 293, column: 50, scope: !11564)
!11594 = !DILocation(line: 312, column: 1, scope: !1977)
!11595 = distinct !DISubprogram(name: "copy_bytes", scope: !1978, file: !1978, line: 261, type: !11596, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11598)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!200, !995, !200, !144, !200}
!11598 = !{!11599, !11600, !11601, !11602, !11603}
!11599 = !DILocalVariable(name: "dest", arg: 1, scope: !11595, file: !1978, line: 261, type: !995)
!11600 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11595, file: !1978, line: 261, type: !200)
!11601 = !DILocalVariable(name: "src", arg: 3, scope: !11595, file: !1978, line: 261, type: !144)
!11602 = !DILocalVariable(name: "src_size", arg: 4, scope: !11595, file: !1978, line: 261, type: !200)
!11603 = !DILocalVariable(name: "bytes_to_copy", scope: !11595, file: !1978, line: 263, type: !200)
!11604 = !DILocation(line: 0, scope: !11595)
!11605 = !DILocation(line: 265, column: 18, scope: !11595)
!11606 = !DILocation(line: 266, column: 2, scope: !11595)
!11607 = !DILocation(line: 268, column: 2, scope: !11595)
!11608 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1978, file: !1978, line: 383, type: !11609, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11611)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{null, !1982}
!11611 = !{!11612}
!11612 = !DILocalVariable(name: "thread", arg: 1, scope: !11608, file: !1978, line: 383, type: !1982)
!11613 = !DILocation(line: 0, scope: !11608)
!11614 = !DILocation(line: 387, column: 2, scope: !11608)
!11615 = !DILocation(line: 388, column: 1, scope: !11608)
!11616 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1978, file: !1978, line: 528, type: !11617, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11624)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!995, !1982, !11619, !200, !3124, !102, !102, !102, !103, !121, !144}
!11619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11620, size: 32)
!11620 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3125, line: 44, baseType: !11621)
!11621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !11622)
!11622 = !{!11623}
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11621, file: !1930, line: 48, baseType: !146, size: 8)
!11624 = !{!11625, !11626, !11627, !11628, !11629, !11630, !11631, !11632, !11633, !11634, !11635}
!11625 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11616, file: !1978, line: 528, type: !1982)
!11626 = !DILocalVariable(name: "stack", arg: 2, scope: !11616, file: !1978, line: 529, type: !11619)
!11627 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11616, file: !1978, line: 529, type: !200)
!11628 = !DILocalVariable(name: "entry", arg: 4, scope: !11616, file: !1978, line: 530, type: !3124)
!11629 = !DILocalVariable(name: "p1", arg: 5, scope: !11616, file: !1978, line: 531, type: !102)
!11630 = !DILocalVariable(name: "p2", arg: 6, scope: !11616, file: !1978, line: 531, type: !102)
!11631 = !DILocalVariable(name: "p3", arg: 7, scope: !11616, file: !1978, line: 531, type: !102)
!11632 = !DILocalVariable(name: "prio", arg: 8, scope: !11616, file: !1978, line: 532, type: !103)
!11633 = !DILocalVariable(name: "options", arg: 9, scope: !11616, file: !1978, line: 532, type: !121)
!11634 = !DILocalVariable(name: "name", arg: 10, scope: !11616, file: !1978, line: 532, type: !144)
!11635 = !DILocalVariable(name: "stack_ptr", scope: !11616, file: !1978, line: 534, type: !995)
!11636 = !DILocation(line: 0, scope: !11616)
!11637 = !DILocation(line: 550, column: 28, scope: !11616)
!11638 = !DILocation(line: 550, column: 2, scope: !11616)
!11639 = !DILocation(line: 553, column: 34, scope: !11616)
!11640 = !DILocation(line: 553, column: 2, scope: !11616)
!11641 = !DILocation(line: 554, column: 14, scope: !11616)
!11642 = !DILocation(line: 564, column: 2, scope: !11616)
!11643 = !DILocation(line: 567, column: 14, scope: !11616)
!11644 = !DILocation(line: 567, column: 24, scope: !11616)
!11645 = !DILocation(line: 612, column: 7, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11616, file: !1978, line: 612, column: 6)
!11647 = !DILocation(line: 612, column: 6, scope: !11616)
!11648 = !DILocation(line: 627, column: 40, scope: !11616)
!11649 = !DILocation(line: 637, column: 2, scope: !11616)
!11650 = !DILocation(line: 613, column: 15, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11646, file: !1978, line: 612, column: 17)
!11652 = !DILocation(line: 613, column: 29, scope: !11651)
!11653 = !DILocation(line: 638, column: 1, scope: !11616)
!11654 = distinct !DISubprogram(name: "z_waitq_init", scope: !11655, file: !11655, line: 47, type: !11656, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11658)
!11655 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11656 = !DISubroutineType(types: !11657)
!11657 = !{null, !2013}
!11658 = !{!11659}
!11659 = !DILocalVariable(name: "w", arg: 1, scope: !11654, file: !11655, line: 47, type: !2013)
!11660 = !DILocation(line: 0, scope: !11654)
!11661 = !DILocation(line: 49, column: 21, scope: !11654)
!11662 = !DILocation(line: 49, column: 2, scope: !11654)
!11663 = !DILocation(line: 50, column: 1, scope: !11654)
!11664 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1978, file: !1978, line: 791, type: !11665, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11668)
!11665 = !DISubroutineType(types: !11666)
!11666 = !{null, !11667, !103, !121, !32}
!11667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!11668 = !{!11669, !11670, !11671, !11672}
!11669 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11664, file: !1978, line: 791, type: !11667)
!11670 = !DILocalVariable(name: "priority", arg: 2, scope: !11664, file: !1978, line: 791, type: !103)
!11671 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11664, file: !1978, line: 792, type: !121)
!11672 = !DILocalVariable(name: "options", arg: 4, scope: !11664, file: !1978, line: 792, type: !32)
!11673 = !DILocation(line: 0, scope: !11664)
!11674 = !DILocation(line: 795, column: 15, scope: !11664)
!11675 = !DILocation(line: 795, column: 25, scope: !11664)
!11676 = !DILocation(line: 796, column: 30, scope: !11664)
!11677 = !DILocation(line: 796, column: 15, scope: !11664)
!11678 = !DILocation(line: 796, column: 28, scope: !11664)
!11679 = !DILocation(line: 797, column: 30, scope: !11664)
!11680 = !DILocation(line: 797, column: 15, scope: !11664)
!11681 = !DILocation(line: 797, column: 28, scope: !11664)
!11682 = !DILocation(line: 799, column: 22, scope: !11664)
!11683 = !DILocation(line: 799, column: 15, scope: !11664)
!11684 = !DILocation(line: 799, column: 20, scope: !11664)
!11685 = !DILocation(line: 801, column: 15, scope: !11664)
!11686 = !DILocation(line: 801, column: 28, scope: !11664)
!11687 = !DILocation(line: 814, column: 2, scope: !11664)
!11688 = !DILocation(line: 815, column: 1, scope: !11664)
!11689 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1978, file: !1978, line: 449, type: !11690, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11692)
!11690 = !DISubroutineType(types: !11691)
!11691 = !{!995, !1982, !11619, !200}
!11692 = !{!11693, !11694, !11695, !11696, !11697, !11698, !11699, !11700}
!11693 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11689, file: !1978, line: 449, type: !1982)
!11694 = !DILocalVariable(name: "stack", arg: 2, scope: !11689, file: !1978, line: 450, type: !11619)
!11695 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11689, file: !1978, line: 450, type: !200)
!11696 = !DILocalVariable(name: "stack_obj_size", scope: !11689, file: !1978, line: 452, type: !200)
!11697 = !DILocalVariable(name: "stack_buf_size", scope: !11689, file: !1978, line: 452, type: !200)
!11698 = !DILocalVariable(name: "stack_ptr", scope: !11689, file: !1978, line: 453, type: !995)
!11699 = !DILocalVariable(name: "stack_buf_start", scope: !11689, file: !1978, line: 453, type: !995)
!11700 = !DILocalVariable(name: "delta", scope: !11689, file: !1978, line: 454, type: !200)
!11701 = !DILocation(line: 0, scope: !11689)
!11702 = !DILocation(line: 465, column: 20, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11689, file: !1978, line: 463, column: 2)
!11704 = !DILocation(line: 466, column: 21, scope: !11703)
!11705 = !DILocation(line: 473, column: 28, scope: !11689)
!11706 = !DILocation(line: 514, column: 33, scope: !11689)
!11707 = !DILocation(line: 514, column: 25, scope: !11689)
!11708 = !DILocation(line: 514, column: 31, scope: !11689)
!11709 = !DILocation(line: 515, column: 25, scope: !11689)
!11710 = !DILocation(line: 515, column: 30, scope: !11689)
!11711 = !DILocation(line: 516, column: 25, scope: !11689)
!11712 = !DILocation(line: 516, column: 31, scope: !11689)
!11713 = !DILocation(line: 520, column: 2, scope: !11689)
!11714 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1930, file: !1930, line: 331, type: !11715, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11717)
!11715 = !DISubroutineType(types: !11716)
!11716 = !{!995, !11619}
!11717 = !{!11718}
!11718 = !DILocalVariable(name: "sym", arg: 1, scope: !11714, file: !1930, line: 331, type: !11619)
!11719 = !DILocation(line: 0, scope: !11714)
!11720 = !DILocation(line: 333, column: 21, scope: !11714)
!11721 = !DILocation(line: 333, column: 2, scope: !11714)
!11722 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11723, file: !11723, line: 40, type: !11724, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11726)
!11723 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11724 = !DISubroutineType(types: !11725)
!11725 = !{null, !11667}
!11726 = !{!11727}
!11727 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11722, file: !11723, line: 40, type: !11667)
!11728 = !DILocation(line: 0, scope: !11722)
!11729 = !DILocation(line: 42, column: 31, scope: !11722)
!11730 = !DILocation(line: 42, column: 2, scope: !11722)
!11731 = !DILocation(line: 43, column: 1, scope: !11722)
!11732 = distinct !DISubprogram(name: "z_init_timeout", scope: !11723, file: !11723, line: 25, type: !2039, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11733)
!11733 = !{!11734}
!11734 = !DILocalVariable(name: "to", arg: 1, scope: !11732, file: !11723, line: 25, type: !2041)
!11735 = !DILocation(line: 0, scope: !11732)
!11736 = !DILocation(line: 27, column: 22, scope: !11732)
!11737 = !DILocation(line: 27, column: 2, scope: !11732)
!11738 = !DILocation(line: 28, column: 1, scope: !11732)
!11739 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11740, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11742)
!11740 = !DISubroutineType(types: !11741)
!11741 = !{null, !2085}
!11742 = !{!11743}
!11743 = !DILocalVariable(name: "node", arg: 1, scope: !11739, file: !221, line: 211, type: !2085)
!11744 = !DILocation(line: 0, scope: !11739)
!11745 = !DILocation(line: 213, column: 8, scope: !11739)
!11746 = !DILocation(line: 213, column: 13, scope: !11739)
!11747 = !DILocation(line: 214, column: 8, scope: !11739)
!11748 = !DILocation(line: 214, column: 13, scope: !11739)
!11749 = !DILocation(line: 215, column: 1, scope: !11739)
!11750 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11751, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11754)
!11751 = !DISubroutineType(types: !11752)
!11752 = !{null, !11753}
!11753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!11754 = !{!11755}
!11755 = !DILocalVariable(name: "list", arg: 1, scope: !11750, file: !221, line: 197, type: !11753)
!11756 = !DILocation(line: 0, scope: !11750)
!11757 = !DILocation(line: 199, column: 8, scope: !11750)
!11758 = !DILocation(line: 199, column: 13, scope: !11750)
!11759 = !DILocation(line: 200, column: 8, scope: !11750)
!11760 = !DILocation(line: 200, column: 13, scope: !11750)
!11761 = !DILocation(line: 201, column: 1, scope: !11750)
!11762 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1978, file: !1978, line: 641, type: !11763, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11769)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{!1981, !1982, !11619, !200, !3124, !102, !102, !102, !103, !121, !11765}
!11765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !11766)
!11766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !11767)
!11767 = !{!11768}
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11766, file: !1457, line: 66, baseType: !1456, size: 64)
!11769 = !{!11770, !11771, !11772, !11773, !11774, !11775, !11776, !11777, !11778, !11779}
!11770 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11762, file: !1978, line: 641, type: !1982)
!11771 = !DILocalVariable(name: "stack", arg: 2, scope: !11762, file: !1978, line: 642, type: !11619)
!11772 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11762, file: !1978, line: 643, type: !200)
!11773 = !DILocalVariable(name: "entry", arg: 4, scope: !11762, file: !1978, line: 643, type: !3124)
!11774 = !DILocalVariable(name: "p1", arg: 5, scope: !11762, file: !1978, line: 644, type: !102)
!11775 = !DILocalVariable(name: "p2", arg: 6, scope: !11762, file: !1978, line: 644, type: !102)
!11776 = !DILocalVariable(name: "p3", arg: 7, scope: !11762, file: !1978, line: 644, type: !102)
!11777 = !DILocalVariable(name: "prio", arg: 8, scope: !11762, file: !1978, line: 645, type: !103)
!11778 = !DILocalVariable(name: "options", arg: 9, scope: !11762, file: !1978, line: 645, type: !121)
!11779 = !DILocalVariable(name: "delay", arg: 10, scope: !11762, file: !1978, line: 645, type: !11765)
!11780 = !DILocation(line: 0, scope: !11762)
!11781 = !DILocation(line: 649, column: 2, scope: !11762)
!11782 = !DILocation(line: 652, column: 7, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11762, file: !1978, line: 652, column: 6)
!11784 = !DILocation(line: 652, column: 6, scope: !11762)
!11785 = !DILocation(line: 653, column: 3, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11783, file: !1978, line: 652, column: 39)
!11787 = !DILocation(line: 654, column: 2, scope: !11786)
!11788 = !DILocation(line: 656, column: 2, scope: !11762)
!11789 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1978, file: !1978, line: 401, type: !11790, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11792)
!11790 = !DISubroutineType(types: !11791)
!11791 = !{null, !1982, !11765}
!11792 = !{!11793, !11794}
!11793 = !DILocalVariable(name: "thread", arg: 1, scope: !11789, file: !1978, line: 401, type: !1982)
!11794 = !DILocalVariable(name: "delay", arg: 2, scope: !11789, file: !1978, line: 401, type: !11765)
!11795 = !DILocation(line: 0, scope: !11789)
!11796 = !DILocation(line: 404, column: 6, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11789, file: !1978, line: 404, column: 6)
!11798 = !DILocation(line: 404, column: 6, scope: !11789)
!11799 = !DILocation(line: 405, column: 3, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11797, file: !1978, line: 404, column: 38)
!11801 = !DILocation(line: 406, column: 2, scope: !11800)
!11802 = !DILocation(line: 407, column: 3, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11797, file: !1978, line: 406, column: 9)
!11804 = !DILocation(line: 413, column: 1, scope: !11789)
!11805 = distinct !DISubprogram(name: "k_thread_start", scope: !3246, file: !3246, line: 205, type: !11806, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11808)
!11806 = !DISubroutineType(types: !11807)
!11807 = !{null, !1981}
!11808 = !{!11809}
!11809 = !DILocalVariable(name: "thread", arg: 1, scope: !11805, file: !3246, line: 205, type: !1981)
!11810 = !DILocation(line: 0, scope: !11805)
!11811 = !DILocation(line: 214, column: 2, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11805, file: !3246, line: 214, column: 2)
!11813 = !{i64 2155086657}
!11814 = !DILocation(line: 215, column: 2, scope: !11805)
!11815 = !DILocation(line: 216, column: 1, scope: !11805)
!11816 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11723, file: !11723, line: 47, type: !11790, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11817)
!11817 = !{!11818, !11819}
!11818 = !DILocalVariable(name: "thread", arg: 1, scope: !11816, file: !11723, line: 47, type: !1982)
!11819 = !DILocalVariable(name: "ticks", arg: 2, scope: !11816, file: !11723, line: 47, type: !11765)
!11820 = !DILocation(line: 0, scope: !11816)
!11821 = !DILocation(line: 49, column: 30, scope: !11816)
!11822 = !DILocation(line: 49, column: 2, scope: !11816)
!11823 = !DILocation(line: 50, column: 1, scope: !11816)
!11824 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1978, file: !1978, line: 748, type: !2821, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11825)
!11825 = !{!11826, !11844}
!11826 = !DILocalVariable(name: "thread_data", scope: !11827, file: !1978, line: 750, type: !11828)
!11827 = distinct !DILexicalBlock(scope: !11824, file: !1978, line: 750, column: 2)
!11828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11829, size: 32)
!11829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !11830)
!11830 = !{!11831, !11832, !11833, !11834, !11835, !11836, !11837, !11838, !11839, !11840, !11841, !11843}
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11829, file: !307, line: 621, baseType: !1982, size: 32)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11829, file: !307, line: 622, baseType: !11619, size: 32, offset: 32)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11829, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11829, file: !307, line: 624, baseType: !3124, size: 32, offset: 96)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11829, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!11836 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11829, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!11837 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11829, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11829, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!11839 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11829, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11829, file: !307, line: 630, baseType: !595, size: 32, offset: 288)
!11841 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11829, file: !307, line: 631, baseType: !11842, size: 32, offset: 320)
!11842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!11843 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11829, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!11844 = !DILocalVariable(name: "thread_data", scope: !11845, file: !1978, line: 781, type: !11828)
!11845 = distinct !DILexicalBlock(scope: !11824, file: !1978, line: 781, column: 2)
!11846 = !DILocation(line: 0, scope: !11827)
!11847 = !DILocation(line: 750, column: 2, scope: !11827)
!11848 = !DILocation(line: 780, column: 2, scope: !11824)
!11849 = !DILocation(line: 0, scope: !11845)
!11850 = !DILocation(line: 781, column: 2, scope: !11845)
!11851 = !DILocation(line: 752, column: 17, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !1978, line: 750, column: 38)
!11853 = distinct !DILexicalBlock(scope: !11827, file: !1978, line: 750, column: 2)
!11854 = !DILocation(line: 753, column: 17, scope: !11852)
!11855 = !DILocation(line: 754, column: 17, scope: !11852)
!11856 = !DILocation(line: 755, column: 17, scope: !11852)
!11857 = !DILocation(line: 756, column: 17, scope: !11852)
!11858 = !DILocation(line: 757, column: 17, scope: !11852)
!11859 = !DILocation(line: 758, column: 17, scope: !11852)
!11860 = !DILocation(line: 759, column: 17, scope: !11852)
!11861 = !DILocation(line: 760, column: 17, scope: !11852)
!11862 = !DILocation(line: 751, column: 3, scope: !11852)
!11863 = !DILocation(line: 763, column: 16, scope: !11852)
!11864 = !DILocation(line: 763, column: 29, scope: !11852)
!11865 = !DILocation(line: 763, column: 39, scope: !11852)
!11866 = !DILocation(line: 750, column: 2, scope: !11853)
!11867 = !DILocation(line: 750, column: 2, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11853, file: !1978, line: 750, column: 2)
!11869 = distinct !{!11869, !11847, !11870}
!11870 = !DILocation(line: 764, column: 2, scope: !11827)
!11871 = !DILocation(line: 787, column: 2, scope: !11824)
!11872 = !DILocation(line: 788, column: 1, scope: !11824)
!11873 = !DILocation(line: 782, column: 20, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !1978, line: 782, column: 7)
!11875 = distinct !DILexicalBlock(scope: !11876, file: !1978, line: 781, column: 38)
!11876 = distinct !DILexicalBlock(scope: !11845, file: !1978, line: 781, column: 2)
!11877 = !DILocation(line: 782, column: 31, scope: !11874)
!11878 = !DILocation(line: 782, column: 7, scope: !11875)
!11879 = !DILocation(line: 783, column: 37, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11874, file: !1978, line: 782, column: 51)
!11881 = !DILocation(line: 784, column: 10, scope: !11880)
!11882 = !DILocation(line: 783, column: 4, scope: !11880)
!11883 = !DILocation(line: 785, column: 3, scope: !11880)
!11884 = !DILocation(line: 781, column: 2, scope: !11876)
!11885 = !DILocation(line: 781, column: 2, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11876, file: !1978, line: 781, column: 2)
!11887 = distinct !{!11887, !11850, !11888}
!11888 = !DILocation(line: 786, column: 2, scope: !11845)
!11889 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11890, file: !11890, line: 403, type: !11891, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11893)
!11890 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11891 = !DISubroutineType(types: !11892)
!11892 = !{!1308, !1308}
!11893 = !{!11894}
!11894 = !DILocalVariable(name: "t", arg: 1, scope: !11889, file: !11890, line: 403, type: !1308)
!11895 = !DILocation(line: 0, scope: !11889)
!11896 = !DILocalVariable(name: "t", arg: 1, scope: !11897, file: !11890, line: 102, type: !1308)
!11897 = distinct !DISubprogram(name: "z_tmcvt", scope: !11890, file: !11890, line: 102, type: !11898, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11900)
!11898 = !DISubroutineType(types: !11899)
!11899 = !{!1308, !1308, !121, !121, !157, !157, !157, !157}
!11900 = !{!11896, !11901, !11902, !11903, !11904, !11905, !11906, !11907, !11908, !11909, !11910}
!11901 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11897, file: !11890, line: 102, type: !121)
!11902 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11897, file: !11890, line: 103, type: !121)
!11903 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11897, file: !11890, line: 103, type: !157)
!11904 = !DILocalVariable(name: "result32", arg: 5, scope: !11897, file: !11890, line: 104, type: !157)
!11905 = !DILocalVariable(name: "round_up", arg: 6, scope: !11897, file: !11890, line: 104, type: !157)
!11906 = !DILocalVariable(name: "round_off", arg: 7, scope: !11897, file: !11890, line: 105, type: !157)
!11907 = !DILocalVariable(name: "mul_ratio", scope: !11897, file: !11890, line: 107, type: !157)
!11908 = !DILocalVariable(name: "div_ratio", scope: !11897, file: !11890, line: 109, type: !157)
!11909 = !DILocalVariable(name: "off", scope: !11897, file: !11890, line: 116, type: !1308)
!11910 = !DILocalVariable(name: "rdivisor", scope: !11911, file: !11890, line: 119, type: !121)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !11890, line: 118, column: 18)
!11912 = distinct !DILexicalBlock(scope: !11897, file: !11890, line: 118, column: 6)
!11913 = !DILocation(line: 0, scope: !11897, inlinedAt: !11914)
!11914 = distinct !DILocation(line: 406, column: 9, scope: !11889)
!11915 = !DILocation(line: 145, column: 13, scope: !11916, inlinedAt: !11914)
!11916 = distinct !DILexicalBlock(scope: !11917, file: !11890, line: 144, column: 10)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !11890, line: 142, column: 7)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !11890, line: 141, column: 24)
!11919 = distinct !DILexicalBlock(scope: !11920, file: !11890, line: 141, column: 13)
!11920 = distinct !DILexicalBlock(scope: !11897, file: !11890, line: 134, column: 6)
!11921 = !DILocation(line: 406, column: 2, scope: !11889)
!11922 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1978, file: !1978, line: 817, type: !3122, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11923)
!11923 = !{!11924, !11925, !11926, !11927}
!11924 = !DILocalVariable(name: "entry", arg: 1, scope: !11922, file: !1978, line: 817, type: !3124)
!11925 = !DILocalVariable(name: "p1", arg: 2, scope: !11922, file: !1978, line: 818, type: !102)
!11926 = !DILocalVariable(name: "p2", arg: 3, scope: !11922, file: !1978, line: 818, type: !102)
!11927 = !DILocalVariable(name: "p3", arg: 4, scope: !11922, file: !1978, line: 818, type: !102)
!11928 = !DILocation(line: 0, scope: !11922)
!11929 = !DILocation(line: 822, column: 2, scope: !11922)
!11930 = !DILocation(line: 822, column: 17, scope: !11922)
!11931 = !DILocation(line: 822, column: 30, scope: !11922)
!11932 = !DILocation(line: 823, column: 2, scope: !11922)
!11933 = !DILocation(line: 845, column: 2, scope: !11922)
!11934 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1978, file: !1978, line: 888, type: !11935, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11937)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!103, !1982}
!11937 = !{!11938}
!11938 = !DILocalVariable(name: "thread", arg: 1, scope: !11934, file: !1978, line: 888, type: !1982)
!11939 = !DILocation(line: 0, scope: !11934)
!11940 = !DILocation(line: 893, column: 2, scope: !11934)
!11941 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1978, file: !1978, line: 897, type: !11942, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11944)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!103, !1982, !32}
!11944 = !{!11945, !11946}
!11945 = !DILocalVariable(name: "thread", arg: 1, scope: !11941, file: !1978, line: 897, type: !1982)
!11946 = !DILocalVariable(name: "options", arg: 2, scope: !11941, file: !1978, line: 897, type: !32)
!11947 = !DILocation(line: 0, scope: !11941)
!11948 = !DILocation(line: 902, column: 2, scope: !11941)
!11949 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1978, file: !1978, line: 1072, type: !11950, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11955)
!11950 = !DISubroutineType(types: !11951)
!11951 = !{!103, !1981, !11952}
!11952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11953, size: 32)
!11953 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !11954)
!11954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!11955 = !{!11956, !11957}
!11956 = !DILocalVariable(name: "thread", arg: 1, scope: !11949, file: !1978, line: 1072, type: !1981)
!11957 = !DILocalVariable(name: "stats", arg: 2, scope: !11949, file: !1978, line: 1073, type: !11952)
!11958 = !DILocation(line: 0, scope: !11949)
!11959 = !DILocation(line: 1075, column: 14, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11949, file: !1978, line: 1075, column: 6)
!11961 = !DILocation(line: 1075, column: 23, scope: !11960)
!11962 = !DILocation(line: 1086, column: 1, scope: !11949)
!11963 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1978, file: !1978, line: 1088, type: !11964, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11966)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!103, !11952}
!11966 = !{!11967}
!11967 = !DILocalVariable(name: "stats", arg: 1, scope: !11963, file: !1978, line: 1088, type: !11952)
!11968 = !DILocation(line: 0, scope: !11963)
!11969 = !DILocation(line: 1094, column: 12, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11963, file: !1978, line: 1094, column: 6)
!11971 = !DILocation(line: 1120, column: 1, scope: !11963)
!11972 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11973, file: !11973, line: 20, type: !2821, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!11973 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11974 = !DILocation(line: 30, column: 2, scope: !11972)
!11975 = !DILocation(line: 31, column: 1, scope: !11972)
!11976 = distinct !DISubprogram(name: "idle", scope: !11973, file: !11973, line: 33, type: !3127, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !11977)
!11977 = !{!11978, !11979, !11980}
!11978 = !DILocalVariable(name: "unused1", arg: 1, scope: !11976, file: !11973, line: 33, type: !102)
!11979 = !DILocalVariable(name: "unused2", arg: 2, scope: !11976, file: !11973, line: 33, type: !102)
!11980 = !DILocalVariable(name: "unused3", arg: 3, scope: !11976, file: !11973, line: 33, type: !102)
!11981 = !DILocation(line: 0, scope: !11976)
!11982 = !DILocation(line: 41, column: 2, scope: !11976)
!11983 = !DILocation(line: 55, column: 2, scope: !11984, inlinedAt: !11988)
!11984 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !11985)
!11985 = !{!11986, !11987}
!11986 = !DILocalVariable(name: "key", scope: !11984, file: !4623, line: 44, type: !32)
!11987 = !DILocalVariable(name: "tmp", scope: !11984, file: !4623, line: 53, type: !32)
!11988 = distinct !DILocation(line: 62, column: 10, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11976, file: !11973, line: 41, column: 15)
!11990 = !{i64 2278204}
!11991 = !DILocation(line: 0, scope: !11984, inlinedAt: !11988)
!11992 = !DILocation(line: 86, column: 3, scope: !11989)
!11993 = distinct !{!11993, !11982, !11994}
!11994 = !DILocation(line: 105, column: 2, scope: !11976)
!11995 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2821, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!11996 = !DILocation(line: 5629, column: 2, scope: !11995)
!11997 = !DILocation(line: 5630, column: 1, scope: !11995)
!11998 = !DISubprogram(name: "arch_cpu_idle", scope: !3125, file: !3125, line: 167, type: !2821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11999 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2210, file: !2210, line: 93, type: !12000, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12002)
!12000 = !DISubroutineType(types: !12001)
!12001 = !{!595, !2105, !2105}
!12002 = !{!12003, !12004, !12005, !12006}
!12003 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11999, file: !2210, line: 93, type: !2105)
!12004 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11999, file: !2210, line: 94, type: !2105)
!12005 = !DILocalVariable(name: "b1", scope: !11999, file: !2210, line: 97, type: !595)
!12006 = !DILocalVariable(name: "b2", scope: !11999, file: !2210, line: 98, type: !595)
!12007 = !DILocation(line: 0, scope: !11999)
!12008 = !DILocation(line: 97, column: 30, scope: !11999)
!12009 = !DILocation(line: 98, column: 30, scope: !11999)
!12010 = !DILocation(line: 100, column: 9, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11999, file: !2210, line: 100, column: 6)
!12012 = !DILocation(line: 100, column: 6, scope: !11999)
!12013 = !DILocation(line: 125, column: 1, scope: !11999)
!12014 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2210, file: !2210, line: 428, type: !12015, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12017)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{null, !2105}
!12017 = !{!12018}
!12018 = !DILocalVariable(name: "curr", arg: 1, scope: !12014, file: !2210, line: 428, type: !2105)
!12019 = !DILocation(line: 0, scope: !12014)
!12020 = !DILocation(line: 434, column: 6, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12014, file: !2210, line: 434, column: 6)
!12022 = !DILocation(line: 434, column: 23, scope: !12021)
!12023 = !DILocation(line: 434, column: 6, scope: !12014)
!12024 = !DILocation(line: 435, column: 50, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12021, file: !2210, line: 434, column: 29)
!12026 = !DILocation(line: 435, column: 48, scope: !12025)
!12027 = !DILocation(line: 435, column: 29, scope: !12025)
!12028 = !DILocation(line: 436, column: 24, scope: !12025)
!12029 = !DILocation(line: 436, column: 3, scope: !12025)
!12030 = !DILocation(line: 437, column: 2, scope: !12025)
!12031 = !DILocation(line: 438, column: 1, scope: !12014)
!12032 = distinct !DISubprogram(name: "slice_time", scope: !2210, file: !2210, line: 407, type: !12033, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12035)
!12033 = !DISubroutineType(types: !12034)
!12034 = !{!103, !2105}
!12035 = !{!12036, !12037}
!12036 = !DILocalVariable(name: "curr", arg: 1, scope: !12032, file: !2210, line: 407, type: !2105)
!12037 = !DILocalVariable(name: "ret", scope: !12032, file: !2210, line: 409, type: !103)
!12038 = !DILocation(line: 0, scope: !12032)
!12039 = !DILocation(line: 409, column: 12, scope: !12032)
!12040 = !DILocation(line: 416, column: 2, scope: !12032)
!12041 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2210, file: !2210, line: 440, type: !12042, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12044)
!12042 = !DISubroutineType(types: !12043)
!12043 = !{null, !595, !103}
!12044 = !{!12045, !12046, !12047, !12053}
!12045 = !DILocalVariable(name: "slice", arg: 1, scope: !12041, file: !2210, line: 440, type: !595)
!12046 = !DILocalVariable(name: "prio", arg: 2, scope: !12041, file: !2210, line: 440, type: !103)
!12047 = !DILocalVariable(name: "__i", scope: !12048, file: !2210, line: 442, type: !12049)
!12048 = distinct !DILexicalBlock(scope: !12041, file: !2210, line: 442, column: 2)
!12049 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !12050)
!12050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !12051)
!12051 = !{!12052}
!12052 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12050, file: !321, line: 33, baseType: !103, size: 32)
!12053 = !DILocalVariable(name: "__key", scope: !12048, file: !2210, line: 442, type: !12049)
!12054 = !DILocation(line: 0, scope: !12041)
!12055 = !DILocation(line: 0, scope: !12048)
!12056 = !DILocalVariable(name: "l", arg: 1, scope: !12057, file: !321, line: 136, type: !12060)
!12057 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !12058, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12061)
!12058 = !DISubroutineType(types: !12059)
!12059 = !{!12049, !12060}
!12060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!12061 = !{!12056, !12062}
!12062 = !DILocalVariable(name: "k", scope: !12057, file: !321, line: 139, type: !12049)
!12063 = !DILocation(line: 0, scope: !12057, inlinedAt: !12064)
!12064 = distinct !DILocation(line: 442, column: 2, scope: !12048)
!12065 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12070)
!12066 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12067)
!12067 = !{!12068, !12069}
!12068 = !DILocalVariable(name: "key", scope: !12066, file: !4623, line: 44, type: !32)
!12069 = !DILocalVariable(name: "tmp", scope: !12066, file: !4623, line: 53, type: !32)
!12070 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12064)
!12071 = !{i64 2322175}
!12072 = !DILocation(line: 0, scope: !12066, inlinedAt: !12070)
!12073 = !DILocation(line: 443, column: 29, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !2210, line: 442, column: 26)
!12075 = distinct !DILexicalBlock(scope: !12048, file: !2210, line: 442, column: 2)
!12076 = !DILocation(line: 444, column: 17, scope: !12074)
!12077 = !DILocation(line: 445, column: 51, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12074, file: !2210, line: 445, column: 7)
!12079 = !DILocation(line: 445, column: 7, scope: !12074)
!12080 = !DILocation(line: 0, scope: !12074)
!12081 = !DILocation(line: 451, column: 18, scope: !12074)
!12082 = !DILocation(line: 452, column: 3, scope: !12074)
!12083 = !DILocalVariable(name: "key", arg: 2, scope: !12084, file: !321, line: 190, type: !12049)
!12084 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !12085, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12087)
!12085 = !DISubroutineType(types: !12086)
!12086 = !{null, !12060, !12049}
!12087 = !{!12088, !12083}
!12088 = !DILocalVariable(name: "l", arg: 1, scope: !12084, file: !321, line: 189, type: !12060)
!12089 = !DILocation(line: 0, scope: !12084, inlinedAt: !12090)
!12090 = distinct !DILocation(line: 442, column: 2, scope: !12075)
!12091 = !DILocalVariable(name: "key", arg: 1, scope: !12092, file: !4623, line: 84, type: !32)
!12092 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12093)
!12093 = !{!12091}
!12094 = !DILocation(line: 0, scope: !12092, inlinedAt: !12095)
!12095 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12090)
!12096 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12095)
!12097 = !{i64 2322992}
!12098 = !DILocation(line: 454, column: 1, scope: !12041)
!12099 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11890, file: !11890, line: 389, type: !5805, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12100)
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "t", arg: 1, scope: !12099, file: !11890, line: 389, type: !121)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocalVariable(name: "t", arg: 1, scope: !12104, file: !11890, line: 102, type: !1308)
!12104 = distinct !DISubprogram(name: "z_tmcvt", scope: !11890, file: !11890, line: 102, type: !11898, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12105)
!12105 = !{!12103, !12106, !12107, !12108, !12109, !12110, !12111, !12112, !12113, !12114, !12115}
!12106 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12104, file: !11890, line: 102, type: !121)
!12107 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12104, file: !11890, line: 103, type: !121)
!12108 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12104, file: !11890, line: 103, type: !157)
!12109 = !DILocalVariable(name: "result32", arg: 5, scope: !12104, file: !11890, line: 104, type: !157)
!12110 = !DILocalVariable(name: "round_up", arg: 6, scope: !12104, file: !11890, line: 104, type: !157)
!12111 = !DILocalVariable(name: "round_off", arg: 7, scope: !12104, file: !11890, line: 105, type: !157)
!12112 = !DILocalVariable(name: "mul_ratio", scope: !12104, file: !11890, line: 107, type: !157)
!12113 = !DILocalVariable(name: "div_ratio", scope: !12104, file: !11890, line: 109, type: !157)
!12114 = !DILocalVariable(name: "off", scope: !12104, file: !11890, line: 116, type: !1308)
!12115 = !DILocalVariable(name: "rdivisor", scope: !12116, file: !11890, line: 119, type: !121)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !11890, line: 118, column: 18)
!12117 = distinct !DILexicalBlock(scope: !12104, file: !11890, line: 118, column: 6)
!12118 = !DILocation(line: 0, scope: !12104, inlinedAt: !12119)
!12119 = distinct !DILocation(line: 392, column: 9, scope: !12099)
!12120 = !DILocation(line: 143, column: 25, scope: !12121, inlinedAt: !12119)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !11890, line: 142, column: 17)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !11890, line: 142, column: 7)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !11890, line: 141, column: 24)
!12124 = distinct !DILexicalBlock(scope: !12125, file: !11890, line: 141, column: 13)
!12125 = distinct !DILexicalBlock(scope: !12104, file: !11890, line: 134, column: 6)
!12126 = !DILocation(line: 392, column: 2, scope: !12099)
!12127 = distinct !DISubprogram(name: "z_time_slice", scope: !2210, file: !2210, line: 502, type: !6442, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12128)
!12128 = !{!12129, !12130}
!12129 = !DILocalVariable(name: "ticks", arg: 1, scope: !12127, file: !2210, line: 502, type: !103)
!12130 = !DILocalVariable(name: "key", scope: !12127, file: !2210, line: 511, type: !12049)
!12131 = !DILocation(line: 0, scope: !12127)
!12132 = !DILocation(line: 0, scope: !12057, inlinedAt: !12133)
!12133 = distinct !DILocation(line: 511, column: 25, scope: !12127)
!12134 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12135)
!12135 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12133)
!12136 = !DILocation(line: 0, scope: !12066, inlinedAt: !12135)
!12137 = !DILocation(line: 514, column: 6, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12127, file: !2210, line: 514, column: 6)
!12139 = !DILocation(line: 514, column: 25, scope: !12138)
!12140 = !DILocation(line: 514, column: 22, scope: !12138)
!12141 = !DILocation(line: 514, column: 6, scope: !12127)
!12142 = !DILocation(line: 515, column: 3, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12138, file: !2210, line: 514, column: 35)
!12144 = !DILocation(line: 0, scope: !12084, inlinedAt: !12145)
!12145 = distinct !DILocation(line: 516, column: 3, scope: !12143)
!12146 = !DILocation(line: 0, scope: !12092, inlinedAt: !12147)
!12147 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12145)
!12148 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12147)
!12149 = !DILocation(line: 517, column: 3, scope: !12143)
!12150 = !DILocation(line: 519, column: 18, scope: !12127)
!12151 = !DILocation(line: 522, column: 6, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12127, file: !2210, line: 522, column: 6)
!12153 = !DILocation(line: 522, column: 27, scope: !12152)
!12154 = !DILocation(line: 522, column: 30, scope: !12152)
!12155 = !DILocation(line: 522, column: 6, scope: !12127)
!12156 = !DILocation(line: 523, column: 30, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !2210, line: 523, column: 7)
!12158 = distinct !DILexicalBlock(scope: !12152, file: !2210, line: 522, column: 51)
!12159 = !DILocation(line: 523, column: 13, scope: !12157)
!12160 = !DILocation(line: 523, column: 7, scope: !12158)
!12161 = !DILocation(line: 530, column: 10, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12157, file: !2210, line: 523, column: 43)
!12163 = !DILocation(line: 531, column: 3, scope: !12162)
!12164 = !DILocation(line: 532, column: 30, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12157, file: !2210, line: 531, column: 10)
!12166 = !DILocation(line: 535, column: 29, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12152, file: !2210, line: 534, column: 9)
!12168 = !DILocation(line: 0, scope: !12084, inlinedAt: !12169)
!12169 = distinct !DILocation(line: 537, column: 2, scope: !12127)
!12170 = !DILocation(line: 0, scope: !12092, inlinedAt: !12171)
!12171 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12169)
!12172 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12171)
!12173 = !DILocation(line: 538, column: 1, scope: !12127)
!12174 = distinct !DISubprogram(name: "sliceable", scope: !2210, file: !2210, line: 468, type: !12175, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12177)
!12175 = !DISubroutineType(types: !12176)
!12176 = !{!157, !2105}
!12177 = !{!12178, !12179}
!12178 = !DILocalVariable(name: "thread", arg: 1, scope: !12174, file: !2210, line: 468, type: !2105)
!12179 = !DILocalVariable(name: "ret", scope: !12174, file: !2210, line: 470, type: !157)
!12180 = !DILocation(line: 0, scope: !12174)
!12181 = !DILocation(line: 470, column: 13, scope: !12174)
!12182 = !DILocation(line: 471, column: 3, scope: !12174)
!12183 = !DILocation(line: 471, column: 7, scope: !12174)
!12184 = !DILocation(line: 472, column: 3, scope: !12174)
!12185 = !DILocation(line: 472, column: 37, scope: !12174)
!12186 = !DILocation(line: 472, column: 24, scope: !12174)
!12187 = !DILocation(line: 472, column: 43, scope: !12174)
!12188 = !DILocation(line: 472, column: 7, scope: !12174)
!12189 = !DILocation(line: 473, column: 3, scope: !12174)
!12190 = !DILocation(line: 473, column: 7, scope: !12174)
!12191 = !DILocation(line: 473, column: 6, scope: !12174)
!12192 = !DILocation(line: 479, column: 2, scope: !12174)
!12193 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2210, file: !2210, line: 482, type: !12194, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12196)
!12194 = !DISubroutineType(types: !12195)
!12195 = !{!12049, !12049}
!12196 = !{!12197, !12198}
!12197 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12193, file: !2210, line: 482, type: !12049)
!12198 = !DILocalVariable(name: "curr", scope: !12193, file: !2210, line: 484, type: !2105)
!12199 = !DILocation(line: 0, scope: !12193)
!12200 = !DILocation(line: 484, column: 26, scope: !12193)
!12201 = !DILocation(line: 493, column: 7, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12193, file: !2210, line: 493, column: 6)
!12203 = !DILocation(line: 493, column: 6, scope: !12193)
!12204 = !DILocation(line: 494, column: 3, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12202, file: !2210, line: 493, column: 49)
!12206 = !DILocation(line: 495, column: 2, scope: !12205)
!12207 = !DILocation(line: 496, column: 2, scope: !12193)
!12208 = !DILocation(line: 499, column: 1, scope: !12193)
!12209 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11329, file: !11329, line: 106, type: !12175, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12210)
!12210 = !{!12211, !12212}
!12211 = !DILocalVariable(name: "thread", arg: 1, scope: !12209, file: !11329, line: 106, type: !2105)
!12212 = !DILocalVariable(name: "state", scope: !12209, file: !11329, line: 108, type: !154)
!12213 = !DILocation(line: 0, scope: !12209)
!12214 = !DILocation(line: 108, column: 31, scope: !12209)
!12215 = !DILocation(line: 110, column: 16, scope: !12209)
!12216 = !DILocation(line: 111, column: 41, scope: !12209)
!12217 = !DILocation(line: 110, column: 2, scope: !12209)
!12218 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2210, file: !2210, line: 393, type: !12015, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12219)
!12219 = !{!12220}
!12220 = !DILocalVariable(name: "thread", arg: 1, scope: !12218, file: !2210, line: 393, type: !2105)
!12221 = !DILocation(line: 0, scope: !12218)
!12222 = !DILocation(line: 395, column: 6, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12218, file: !2210, line: 395, column: 6)
!12224 = !DILocation(line: 395, column: 6, scope: !12218)
!12225 = !DILocalVariable(name: "thread", arg: 1, scope: !12226, file: !2210, line: 264, type: !2105)
!12226 = distinct !DISubprogram(name: "dequeue_thread", scope: !2210, file: !2210, line: 264, type: !12015, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12227)
!12227 = !{!12225}
!12228 = !DILocation(line: 0, scope: !12226, inlinedAt: !12229)
!12229 = distinct !DILocation(line: 396, column: 3, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12223, file: !2210, line: 395, column: 34)
!12231 = !DILocation(line: 266, column: 15, scope: !12226, inlinedAt: !12229)
!12232 = !DILocation(line: 266, column: 28, scope: !12226, inlinedAt: !12229)
!12233 = !DILocalVariable(name: "thread", arg: 1, scope: !12234, file: !2210, line: 232, type: !2105)
!12234 = distinct !DISubprogram(name: "runq_remove", scope: !2210, file: !2210, line: 232, type: !12015, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12235)
!12235 = !{!12233}
!12236 = !DILocation(line: 0, scope: !12234, inlinedAt: !12237)
!12237 = distinct !DILocation(line: 268, column: 3, scope: !12238, inlinedAt: !12229)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !2210, line: 267, column: 35)
!12239 = distinct !DILexicalBlock(scope: !12226, file: !2210, line: 267, column: 6)
!12240 = !DILocation(line: 234, column: 2, scope: !12234, inlinedAt: !12237)
!12241 = !DILocation(line: 397, column: 2, scope: !12230)
!12242 = !DILocalVariable(name: "thread", arg: 1, scope: !12243, file: !2210, line: 250, type: !2105)
!12243 = distinct !DISubprogram(name: "queue_thread", scope: !2210, file: !2210, line: 250, type: !12015, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12244)
!12244 = !{!12242}
!12245 = !DILocation(line: 0, scope: !12243, inlinedAt: !12246)
!12246 = distinct !DILocation(line: 398, column: 2, scope: !12218)
!12247 = !DILocation(line: 252, column: 15, scope: !12243, inlinedAt: !12246)
!12248 = !DILocation(line: 252, column: 28, scope: !12243, inlinedAt: !12246)
!12249 = !DILocalVariable(name: "thread", arg: 1, scope: !12250, file: !2210, line: 227, type: !2105)
!12250 = distinct !DISubprogram(name: "runq_add", scope: !2210, file: !2210, line: 227, type: !12015, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12251)
!12251 = !{!12249}
!12252 = !DILocation(line: 0, scope: !12250, inlinedAt: !12253)
!12253 = distinct !DILocation(line: 254, column: 3, scope: !12254, inlinedAt: !12246)
!12254 = distinct !DILexicalBlock(scope: !12255, file: !2210, line: 253, column: 35)
!12255 = distinct !DILexicalBlock(scope: !12243, file: !2210, line: 253, column: 6)
!12256 = !DILocalVariable(name: "pq", arg: 1, scope: !12257, file: !2210, line: 181, type: !12260)
!12257 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2210, file: !2210, line: 181, type: !12258, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12261)
!12258 = !DISubroutineType(types: !12259)
!12259 = !{null, !12260, !2105}
!12260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!12261 = !{!12256, !12262, !12263}
!12262 = !DILocalVariable(name: "thread", arg: 2, scope: !12257, file: !2210, line: 182, type: !2105)
!12263 = !DILocalVariable(name: "t", scope: !12257, file: !2210, line: 184, type: !2105)
!12264 = !DILocation(line: 0, scope: !12257, inlinedAt: !12265)
!12265 = distinct !DILocation(line: 229, column: 2, scope: !12250, inlinedAt: !12253)
!12266 = !DILocation(line: 188, column: 2, scope: !12267, inlinedAt: !12265)
!12267 = distinct !DILexicalBlock(scope: !12257, file: !2210, line: 188, column: 2)
!12268 = !DILocation(line: 188, column: 2, scope: !12269, inlinedAt: !12265)
!12269 = distinct !DILexicalBlock(scope: !12267, file: !2210, line: 188, column: 2)
!12270 = !DILocation(line: 0, scope: !12267, inlinedAt: !12265)
!12271 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !12265)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !2210, line: 189, column: 7)
!12273 = distinct !DILexicalBlock(scope: !12269, file: !2210, line: 188, column: 56)
!12274 = !DILocation(line: 189, column: 35, scope: !12272, inlinedAt: !12265)
!12275 = !DILocation(line: 189, column: 7, scope: !12273, inlinedAt: !12265)
!12276 = !DILocation(line: 191, column: 21, scope: !12277, inlinedAt: !12265)
!12277 = distinct !DILexicalBlock(scope: !12272, file: !2210, line: 189, column: 40)
!12278 = !DILocation(line: 190, column: 4, scope: !12277, inlinedAt: !12265)
!12279 = !DILocation(line: 192, column: 4, scope: !12277, inlinedAt: !12265)
!12280 = distinct !{!12280, !12266, !12281}
!12281 = !DILocation(line: 194, column: 2, scope: !12267, inlinedAt: !12265)
!12282 = !DILocation(line: 196, column: 37, scope: !12257, inlinedAt: !12265)
!12283 = !DILocation(line: 196, column: 2, scope: !12257, inlinedAt: !12265)
!12284 = !DILocation(line: 197, column: 1, scope: !12257, inlinedAt: !12265)
!12285 = !DILocation(line: 399, column: 25, scope: !12218)
!12286 = !DILocation(line: 399, column: 22, scope: !12218)
!12287 = !DILocation(line: 399, column: 2, scope: !12218)
!12288 = !DILocation(line: 400, column: 1, scope: !12218)
!12289 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11329, file: !11329, line: 136, type: !12175, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12290)
!12290 = !{!12291}
!12291 = !DILocalVariable(name: "thread", arg: 1, scope: !12289, file: !11329, line: 136, type: !2105)
!12292 = !DILocation(line: 0, scope: !12289)
!12293 = !DILocation(line: 138, column: 9, scope: !12289)
!12294 = !DILocation(line: 138, column: 2, scope: !12289)
!12295 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2210, file: !2210, line: 1137, type: !12258, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12296)
!12296 = !{!12297, !12298}
!12297 = !DILocalVariable(name: "pq", arg: 1, scope: !12295, file: !2210, line: 1137, type: !12260)
!12298 = !DILocalVariable(name: "thread", arg: 2, scope: !12295, file: !2210, line: 1137, type: !2105)
!12299 = !DILocation(line: 0, scope: !12295)
!12300 = !DILocation(line: 1141, column: 33, scope: !12295)
!12301 = !DILocation(line: 1141, column: 2, scope: !12295)
!12302 = !DILocation(line: 1142, column: 1, scope: !12295)
!12303 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !12304, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12306)
!12304 = !DISubroutineType(types: !12305)
!12305 = !{!2206, !12260}
!12306 = !{!12307}
!12307 = !DILocalVariable(name: "list", arg: 1, scope: !12303, file: !221, line: 294, type: !12260)
!12308 = !DILocation(line: 0, scope: !12303)
!12309 = !DILocation(line: 296, column: 9, scope: !12303)
!12310 = !DILocation(line: 296, column: 49, scope: !12303)
!12311 = !DILocation(line: 296, column: 2, scope: !12303)
!12312 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !12313, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12315)
!12313 = !DISubroutineType(types: !12314)
!12314 = !{null, !2206, !2206}
!12315 = !{!12316, !12317, !12318}
!12316 = !DILocalVariable(name: "successor", arg: 1, scope: !12312, file: !221, line: 443, type: !2206)
!12317 = !DILocalVariable(name: "node", arg: 2, scope: !12312, file: !221, line: 443, type: !2206)
!12318 = !DILocalVariable(name: "prev", scope: !12312, file: !221, line: 445, type: !12319)
!12319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!12320 = !DILocation(line: 0, scope: !12312)
!12321 = !DILocation(line: 445, column: 39, scope: !12312)
!12322 = !DILocation(line: 447, column: 8, scope: !12312)
!12323 = !DILocation(line: 447, column: 13, scope: !12312)
!12324 = !DILocation(line: 448, column: 8, scope: !12312)
!12325 = !DILocation(line: 448, column: 13, scope: !12312)
!12326 = !DILocation(line: 449, column: 8, scope: !12312)
!12327 = !DILocation(line: 449, column: 13, scope: !12312)
!12328 = !DILocation(line: 450, column: 18, scope: !12312)
!12329 = !DILocation(line: 451, column: 1, scope: !12312)
!12330 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !12331, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12333)
!12331 = !DISubroutineType(types: !12332)
!12332 = !{!2206, !12260, !2206}
!12333 = !{!12334, !12335}
!12334 = !DILocalVariable(name: "list", arg: 1, scope: !12330, file: !221, line: 341, type: !12260)
!12335 = !DILocalVariable(name: "node", arg: 2, scope: !12330, file: !221, line: 342, type: !2206)
!12336 = !DILocation(line: 0, scope: !12330)
!12337 = !DILocation(line: 344, column: 15, scope: !12330)
!12338 = !DILocation(line: 344, column: 9, scope: !12330)
!12339 = !DILocation(line: 344, column: 26, scope: !12330)
!12340 = !DILocation(line: 344, column: 2, scope: !12330)
!12341 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !12342, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12344)
!12342 = !DISubroutineType(types: !12343)
!12343 = !{null, !12260, !2206}
!12344 = !{!12345, !12346, !12347}
!12345 = !DILocalVariable(name: "list", arg: 1, scope: !12341, file: !221, line: 404, type: !12260)
!12346 = !DILocalVariable(name: "node", arg: 2, scope: !12341, file: !221, line: 404, type: !2206)
!12347 = !DILocalVariable(name: "tail", scope: !12341, file: !221, line: 406, type: !12319)
!12348 = !DILocation(line: 0, scope: !12341)
!12349 = !DILocation(line: 406, column: 34, scope: !12341)
!12350 = !DILocation(line: 408, column: 8, scope: !12341)
!12351 = !DILocation(line: 408, column: 13, scope: !12341)
!12352 = !DILocation(line: 409, column: 8, scope: !12341)
!12353 = !DILocation(line: 409, column: 13, scope: !12341)
!12354 = !DILocation(line: 411, column: 8, scope: !12341)
!12355 = !DILocation(line: 411, column: 13, scope: !12341)
!12356 = !DILocation(line: 412, column: 13, scope: !12341)
!12357 = !DILocation(line: 413, column: 1, scope: !12341)
!12358 = distinct !DISubprogram(name: "update_cache", scope: !2210, file: !2210, line: 559, type: !6442, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12359)
!12359 = !{!12360, !12361}
!12360 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12358, file: !2210, line: 559, type: !103)
!12361 = !DILocalVariable(name: "thread", scope: !12358, file: !2210, line: 562, type: !2105)
!12362 = !DILocation(line: 0, scope: !12358)
!12363 = !DILocation(line: 239, column: 9, scope: !12364, inlinedAt: !12367)
!12364 = distinct !DISubprogram(name: "runq_best", scope: !2210, file: !2210, line: 237, type: !12365, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12365 = !DISubroutineType(types: !12366)
!12366 = !{!2105}
!12367 = distinct !DILocation(line: 314, column: 28, scope: !12368, inlinedAt: !12371)
!12368 = distinct !DISubprogram(name: "next_up", scope: !2210, file: !2210, line: 312, type: !12365, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12369)
!12369 = !{!12370}
!12370 = !DILocalVariable(name: "thread", scope: !12368, file: !2210, line: 314, type: !2105)
!12371 = distinct !DILocation(line: 562, column: 28, scope: !12358)
!12372 = !DILocation(line: 0, scope: !12368, inlinedAt: !12371)
!12373 = !DILocation(line: 340, column: 17, scope: !12368, inlinedAt: !12371)
!12374 = !DILocation(line: 340, column: 9, scope: !12368, inlinedAt: !12371)
!12375 = !DILocalVariable(name: "thread", arg: 1, scope: !12376, file: !2210, line: 127, type: !2105)
!12376 = distinct !DISubprogram(name: "should_preempt", scope: !2210, file: !2210, line: 127, type: !12377, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12379)
!12377 = !DISubroutineType(types: !12378)
!12378 = !{!157, !2105, !103}
!12379 = !{!12375, !12380}
!12380 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12376, file: !2210, line: 128, type: !103)
!12381 = !DILocation(line: 0, scope: !12376, inlinedAt: !12382)
!12382 = distinct !DILocation(line: 564, column: 6, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12358, file: !2210, line: 564, column: 6)
!12384 = !DILocation(line: 133, column: 17, scope: !12385, inlinedAt: !12382)
!12385 = distinct !DILexicalBlock(scope: !12376, file: !2210, line: 133, column: 6)
!12386 = !DILocation(line: 0, scope: !12383)
!12387 = !DILocation(line: 133, column: 6, scope: !12376, inlinedAt: !12382)
!12388 = !DILocation(line: 140, column: 6, scope: !12389, inlinedAt: !12382)
!12389 = distinct !DILexicalBlock(scope: !12376, file: !2210, line: 140, column: 6)
!12390 = !DILocation(line: 140, column: 6, scope: !12376, inlinedAt: !12382)
!12391 = !DILocation(line: 150, column: 9, scope: !12392, inlinedAt: !12382)
!12392 = distinct !DILexicalBlock(scope: !12376, file: !2210, line: 149, column: 6)
!12393 = !DILocation(line: 149, column: 6, scope: !12376, inlinedAt: !12382)
!12394 = !DILocation(line: 157, column: 6, scope: !12395, inlinedAt: !12382)
!12395 = distinct !DILexicalBlock(scope: !12376, file: !2210, line: 157, column: 6)
!12396 = !DILocation(line: 564, column: 6, scope: !12358)
!12397 = !DILocation(line: 566, column: 14, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12399, file: !2210, line: 566, column: 7)
!12399 = distinct !DILexicalBlock(scope: !12383, file: !2210, line: 564, column: 42)
!12400 = !DILocation(line: 566, column: 7, scope: !12399)
!12401 = !DILocation(line: 567, column: 4, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12398, file: !2210, line: 566, column: 27)
!12403 = !DILocation(line: 568, column: 3, scope: !12402)
!12404 = !DILocation(line: 585, column: 1, scope: !12358)
!12405 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2210, file: !2210, line: 1144, type: !12406, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12408)
!12406 = !DISubroutineType(types: !12407)
!12407 = !{!2105, !12260}
!12408 = !{!12409, !12410, !12411}
!12409 = !DILocalVariable(name: "pq", arg: 1, scope: !12405, file: !2210, line: 1144, type: !12260)
!12410 = !DILocalVariable(name: "thread", scope: !12405, file: !2210, line: 1146, type: !2105)
!12411 = !DILocalVariable(name: "n", scope: !12405, file: !2210, line: 1147, type: !2206)
!12412 = !DILocation(line: 0, scope: !12405)
!12413 = !DILocation(line: 1147, column: 19, scope: !12405)
!12414 = !DILocation(line: 1152, column: 2, scope: !12405)
!12415 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11329, file: !11329, line: 115, type: !12175, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12416)
!12416 = !{!12417}
!12417 = !DILocalVariable(name: "thread", arg: 1, scope: !12415, file: !11329, line: 115, type: !2105)
!12418 = !DILocation(line: 0, scope: !12415)
!12419 = !DILocation(line: 117, column: 46, scope: !12415)
!12420 = !DILocation(line: 117, column: 10, scope: !12415)
!12421 = !DILocation(line: 117, column: 9, scope: !12415)
!12422 = !DILocation(line: 117, column: 2, scope: !12415)
!12423 = distinct !DISubprogram(name: "is_preempt", scope: !2210, file: !2210, line: 62, type: !12033, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12424)
!12424 = !{!12425}
!12425 = !DILocalVariable(name: "thread", arg: 1, scope: !12423, file: !2210, line: 62, type: !2105)
!12426 = !DILocation(line: 0, scope: !12423)
!12427 = !DILocation(line: 65, column: 22, scope: !12423)
!12428 = !DILocation(line: 65, column: 30, scope: !12423)
!12429 = !DILocation(line: 65, column: 2, scope: !12423)
!12430 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11723, file: !11723, line: 35, type: !12431, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12435)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{!157, !12433}
!12433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12434, size: 32)
!12434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!12435 = !{!12436}
!12436 = !DILocalVariable(name: "to", arg: 1, scope: !12430, file: !11723, line: 35, type: !12433)
!12437 = !DILocation(line: 0, scope: !12430)
!12438 = !DILocation(line: 37, column: 35, scope: !12430)
!12439 = !DILocation(line: 37, column: 10, scope: !12430)
!12440 = !DILocation(line: 37, column: 9, scope: !12430)
!12441 = !DILocation(line: 37, column: 2, scope: !12430)
!12442 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !12443, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12447)
!12443 = !DISubroutineType(types: !12444)
!12444 = !{!157, !12445}
!12445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12446, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!12447 = !{!12448}
!12448 = !DILocalVariable(name: "node", arg: 1, scope: !12442, file: !221, line: 225, type: !12445)
!12449 = !DILocation(line: 0, scope: !12442)
!12450 = !DILocation(line: 227, column: 15, scope: !12442)
!12451 = !DILocation(line: 227, column: 20, scope: !12442)
!12452 = !DILocation(line: 227, column: 2, scope: !12442)
!12453 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !12331, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12454)
!12454 = !{!12455, !12456}
!12455 = !DILocalVariable(name: "list", arg: 1, scope: !12453, file: !221, line: 325, type: !12260)
!12456 = !DILocalVariable(name: "node", arg: 2, scope: !12453, file: !221, line: 326, type: !2206)
!12457 = !DILocation(line: 0, scope: !12453)
!12458 = !DILocation(line: 328, column: 24, scope: !12453)
!12459 = !DILocation(line: 328, column: 15, scope: !12453)
!12460 = !DILocation(line: 328, column: 9, scope: !12453)
!12461 = !DILocation(line: 328, column: 45, scope: !12453)
!12462 = !DILocation(line: 328, column: 2, scope: !12453)
!12463 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12464, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12466)
!12464 = !DISubroutineType(types: !12465)
!12465 = !{!157, !12260}
!12466 = !{!12467}
!12467 = !DILocalVariable(name: "list", arg: 1, scope: !12463, file: !221, line: 266, type: !12260)
!12468 = !DILocation(line: 0, scope: !12463)
!12469 = !DILocation(line: 268, column: 15, scope: !12463)
!12470 = !DILocation(line: 268, column: 20, scope: !12463)
!12471 = !DILocation(line: 268, column: 2, scope: !12463)
!12472 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12473, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12475)
!12473 = !DISubroutineType(types: !12474)
!12474 = !{null, !2206}
!12475 = !{!12476, !12477, !12478}
!12476 = !DILocalVariable(name: "node", arg: 1, scope: !12472, file: !221, line: 496, type: !2206)
!12477 = !DILocalVariable(name: "prev", scope: !12472, file: !221, line: 498, type: !12319)
!12478 = !DILocalVariable(name: "next", scope: !12472, file: !221, line: 499, type: !12319)
!12479 = !DILocation(line: 0, scope: !12472)
!12480 = !DILocation(line: 498, column: 34, scope: !12472)
!12481 = !DILocation(line: 499, column: 34, scope: !12472)
!12482 = !DILocation(line: 501, column: 8, scope: !12472)
!12483 = !DILocation(line: 501, column: 13, scope: !12472)
!12484 = !DILocation(line: 502, column: 8, scope: !12472)
!12485 = !DILocation(line: 502, column: 13, scope: !12472)
!12486 = !DILocation(line: 503, column: 2, scope: !12472)
!12487 = !DILocation(line: 504, column: 1, scope: !12472)
!12488 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12473, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12489)
!12489 = !{!12490}
!12490 = !DILocalVariable(name: "node", arg: 1, scope: !12488, file: !221, line: 211, type: !2206)
!12491 = !DILocation(line: 0, scope: !12488)
!12492 = !DILocation(line: 213, column: 8, scope: !12488)
!12493 = !DILocation(line: 213, column: 13, scope: !12488)
!12494 = !DILocation(line: 214, column: 8, scope: !12488)
!12495 = !DILocation(line: 214, column: 13, scope: !12488)
!12496 = !DILocation(line: 215, column: 1, scope: !12488)
!12497 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11329, file: !11329, line: 131, type: !12498, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12500)
!12498 = !DISubroutineType(types: !12499)
!12499 = !{!157, !2105, !121}
!12500 = !{!12501, !12502}
!12501 = !DILocalVariable(name: "thread", arg: 1, scope: !12497, file: !11329, line: 131, type: !2105)
!12502 = !DILocalVariable(name: "state", arg: 2, scope: !12497, file: !11329, line: 131, type: !121)
!12503 = !DILocation(line: 0, scope: !12497)
!12504 = !DILocation(line: 133, column: 23, scope: !12497)
!12505 = !DILocation(line: 133, column: 45, scope: !12497)
!12506 = !DILocation(line: 133, column: 2, scope: !12497)
!12507 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11329, file: !11329, line: 211, type: !12508, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12510)
!12508 = !DISubroutineType(types: !12509)
!12509 = !{!157, !103, !103}
!12510 = !{!12511, !12512}
!12511 = !DILocalVariable(name: "prio", arg: 1, scope: !12507, file: !11329, line: 211, type: !103)
!12512 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12507, file: !11329, line: 211, type: !103)
!12513 = !DILocation(line: 0, scope: !12507)
!12514 = !DILocation(line: 213, column: 9, scope: !12507)
!12515 = !DILocation(line: 213, column: 2, scope: !12507)
!12516 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11329, file: !11329, line: 83, type: !12175, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12517)
!12517 = !{!12518}
!12518 = !DILocalVariable(name: "thread", arg: 1, scope: !12516, file: !11329, line: 83, type: !2105)
!12519 = !DILocation(line: 0, scope: !12516)
!12520 = !DILocation(line: 89, column: 16, scope: !12516)
!12521 = !DILocation(line: 89, column: 2, scope: !12516)
!12522 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11329, file: !11329, line: 206, type: !12508, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12523)
!12523 = !{!12524, !12525}
!12524 = !DILocalVariable(name: "prio1", arg: 1, scope: !12522, file: !11329, line: 206, type: !103)
!12525 = !DILocalVariable(name: "prio2", arg: 2, scope: !12522, file: !11329, line: 206, type: !103)
!12526 = !DILocation(line: 0, scope: !12522)
!12527 = !DILocation(line: 208, column: 15, scope: !12522)
!12528 = !DILocation(line: 208, column: 2, scope: !12522)
!12529 = distinct !DISubprogram(name: "z_ready_thread", scope: !2210, file: !2210, line: 635, type: !12015, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12530)
!12530 = !{!12531, !12532, !12534}
!12531 = !DILocalVariable(name: "thread", arg: 1, scope: !12529, file: !2210, line: 635, type: !2105)
!12532 = !DILocalVariable(name: "__i", scope: !12533, file: !2210, line: 637, type: !12049)
!12533 = distinct !DILexicalBlock(scope: !12529, file: !2210, line: 637, column: 2)
!12534 = !DILocalVariable(name: "__key", scope: !12533, file: !2210, line: 637, type: !12049)
!12535 = !DILocation(line: 0, scope: !12529)
!12536 = !DILocation(line: 0, scope: !12533)
!12537 = !DILocation(line: 0, scope: !12057, inlinedAt: !12538)
!12538 = distinct !DILocation(line: 637, column: 2, scope: !12533)
!12539 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12540)
!12540 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12538)
!12541 = !DILocation(line: 0, scope: !12066, inlinedAt: !12540)
!12542 = !DILocation(line: 639, column: 4, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !2210, line: 638, column: 41)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !2210, line: 638, column: 7)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !2210, line: 637, column: 26)
!12546 = distinct !DILexicalBlock(scope: !12533, file: !2210, line: 637, column: 2)
!12547 = !DILocation(line: 0, scope: !12084, inlinedAt: !12548)
!12548 = distinct !DILocation(line: 637, column: 2, scope: !12546)
!12549 = !DILocation(line: 0, scope: !12092, inlinedAt: !12550)
!12550 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12548)
!12551 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12550)
!12552 = !DILocation(line: 642, column: 1, scope: !12529)
!12553 = distinct !DISubprogram(name: "ready_thread", scope: !2210, file: !2210, line: 617, type: !12015, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12554)
!12554 = !{!12555}
!12555 = !DILocalVariable(name: "thread", arg: 1, scope: !12553, file: !2210, line: 617, type: !2105)
!12556 = !DILocation(line: 0, scope: !12553)
!12557 = !DILocation(line: 626, column: 7, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12553, file: !2210, line: 626, column: 6)
!12559 = !DILocation(line: 626, column: 34, scope: !12558)
!12560 = !DILocation(line: 626, column: 37, scope: !12558)
!12561 = !DILocation(line: 626, column: 6, scope: !12553)
!12562 = !DILocation(line: 0, scope: !12243, inlinedAt: !12563)
!12563 = distinct !DILocation(line: 629, column: 3, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12558, file: !2210, line: 626, column: 64)
!12565 = !DILocation(line: 252, column: 15, scope: !12243, inlinedAt: !12563)
!12566 = !DILocation(line: 252, column: 28, scope: !12243, inlinedAt: !12563)
!12567 = !DILocation(line: 0, scope: !12250, inlinedAt: !12568)
!12568 = distinct !DILocation(line: 254, column: 3, scope: !12254, inlinedAt: !12563)
!12569 = !DILocation(line: 0, scope: !12257, inlinedAt: !12570)
!12570 = distinct !DILocation(line: 229, column: 2, scope: !12250, inlinedAt: !12568)
!12571 = !DILocation(line: 188, column: 2, scope: !12267, inlinedAt: !12570)
!12572 = !DILocation(line: 188, column: 2, scope: !12269, inlinedAt: !12570)
!12573 = !DILocation(line: 0, scope: !12267, inlinedAt: !12570)
!12574 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !12570)
!12575 = !DILocation(line: 189, column: 35, scope: !12272, inlinedAt: !12570)
!12576 = !DILocation(line: 189, column: 7, scope: !12273, inlinedAt: !12570)
!12577 = !DILocation(line: 191, column: 21, scope: !12277, inlinedAt: !12570)
!12578 = !DILocation(line: 190, column: 4, scope: !12277, inlinedAt: !12570)
!12579 = !DILocation(line: 192, column: 4, scope: !12277, inlinedAt: !12570)
!12580 = distinct !{!12580, !12571, !12581}
!12581 = !DILocation(line: 194, column: 2, scope: !12267, inlinedAt: !12570)
!12582 = !DILocation(line: 196, column: 37, scope: !12257, inlinedAt: !12570)
!12583 = !DILocation(line: 196, column: 2, scope: !12257, inlinedAt: !12570)
!12584 = !DILocation(line: 197, column: 1, scope: !12257, inlinedAt: !12570)
!12585 = !DILocation(line: 630, column: 3, scope: !12564)
!12586 = !DILocation(line: 632, column: 2, scope: !12564)
!12587 = !DILocation(line: 633, column: 1, scope: !12553)
!12588 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11329, file: !11329, line: 120, type: !12175, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12589)
!12589 = !{!12590}
!12590 = !DILocalVariable(name: "thread", arg: 1, scope: !12588, file: !11329, line: 120, type: !2105)
!12591 = !DILocation(line: 0, scope: !12588)
!12592 = !DILocation(line: 122, column: 12, scope: !12588)
!12593 = !DILocation(line: 122, column: 62, scope: !12588)
!12594 = !DILocation(line: 123, column: 4, scope: !12588)
!12595 = !DILocation(line: 122, column: 2, scope: !12588)
!12596 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2210, file: !2210, line: 644, type: !12015, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12597)
!12597 = !{!12598, !12599, !12601}
!12598 = !DILocalVariable(name: "thread", arg: 1, scope: !12596, file: !2210, line: 644, type: !2105)
!12599 = !DILocalVariable(name: "__i", scope: !12600, file: !2210, line: 646, type: !12049)
!12600 = distinct !DILexicalBlock(scope: !12596, file: !2210, line: 646, column: 2)
!12601 = !DILocalVariable(name: "__key", scope: !12600, file: !2210, line: 646, type: !12049)
!12602 = !DILocation(line: 0, scope: !12596)
!12603 = !DILocation(line: 0, scope: !12600)
!12604 = !DILocation(line: 0, scope: !12057, inlinedAt: !12605)
!12605 = distinct !DILocation(line: 646, column: 2, scope: !12600)
!12606 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12607)
!12607 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12605)
!12608 = !DILocation(line: 0, scope: !12066, inlinedAt: !12607)
!12609 = !DILocation(line: 647, column: 3, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12611, file: !2210, line: 646, column: 26)
!12611 = distinct !DILexicalBlock(scope: !12600, file: !2210, line: 646, column: 2)
!12612 = !DILocation(line: 0, scope: !12084, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 646, column: 2, scope: !12611)
!12614 = !DILocation(line: 0, scope: !12092, inlinedAt: !12615)
!12615 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12613)
!12616 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12615)
!12617 = !DILocation(line: 649, column: 1, scope: !12596)
!12618 = distinct !DISubprogram(name: "z_sched_start", scope: !2210, file: !2210, line: 651, type: !12015, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12619)
!12619 = !{!12620, !12621}
!12620 = !DILocalVariable(name: "thread", arg: 1, scope: !12618, file: !2210, line: 651, type: !2105)
!12621 = !DILocalVariable(name: "key", scope: !12618, file: !2210, line: 653, type: !12049)
!12622 = !DILocation(line: 0, scope: !12618)
!12623 = !DILocation(line: 0, scope: !12057, inlinedAt: !12624)
!12624 = distinct !DILocation(line: 653, column: 25, scope: !12618)
!12625 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12626)
!12626 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12624)
!12627 = !DILocation(line: 0, scope: !12066, inlinedAt: !12626)
!12628 = !DILocation(line: 655, column: 6, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12618, file: !2210, line: 655, column: 6)
!12630 = !DILocation(line: 655, column: 6, scope: !12618)
!12631 = !DILocation(line: 0, scope: !12084, inlinedAt: !12632)
!12632 = distinct !DILocation(line: 656, column: 3, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12629, file: !2210, line: 655, column: 36)
!12634 = !DILocation(line: 0, scope: !12092, inlinedAt: !12635)
!12635 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12632)
!12636 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12635)
!12637 = !DILocation(line: 657, column: 3, scope: !12633)
!12638 = !DILocation(line: 660, column: 2, scope: !12618)
!12639 = !DILocation(line: 661, column: 2, scope: !12618)
!12640 = !DILocation(line: 662, column: 2, scope: !12618)
!12641 = !DILocation(line: 663, column: 1, scope: !12618)
!12642 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11329, file: !11329, line: 126, type: !12175, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12643)
!12643 = !{!12644}
!12644 = !DILocalVariable(name: "thread", arg: 1, scope: !12642, file: !11329, line: 126, type: !2105)
!12645 = !DILocation(line: 0, scope: !12642)
!12646 = !DILocation(line: 128, column: 23, scope: !12642)
!12647 = !DILocation(line: 128, column: 36, scope: !12642)
!12648 = !DILocation(line: 128, column: 56, scope: !12642)
!12649 = !DILocation(line: 128, column: 2, scope: !12642)
!12650 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11329, file: !11329, line: 155, type: !12015, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12651)
!12651 = !{!12652}
!12652 = !DILocalVariable(name: "thread", arg: 1, scope: !12650, file: !11329, line: 155, type: !2105)
!12653 = !DILocation(line: 0, scope: !12650)
!12654 = !DILocation(line: 157, column: 15, scope: !12650)
!12655 = !DILocation(line: 157, column: 28, scope: !12650)
!12656 = !DILocation(line: 158, column: 1, scope: !12650)
!12657 = distinct !DISubprogram(name: "z_reschedule", scope: !2210, file: !2210, line: 967, type: !12085, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12658)
!12658 = !{!12659, !12660}
!12659 = !DILocalVariable(name: "lock", arg: 1, scope: !12657, file: !2210, line: 967, type: !12060)
!12660 = !DILocalVariable(name: "key", arg: 2, scope: !12657, file: !2210, line: 967, type: !12049)
!12661 = !DILocation(line: 0, scope: !12657)
!12662 = !DILocation(line: 969, column: 6, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12657, file: !2210, line: 969, column: 6)
!12664 = !DILocation(line: 969, column: 23, scope: !12663)
!12665 = !DILocation(line: 969, column: 26, scope: !12663)
!12666 = !DILocation(line: 969, column: 6, scope: !12657)
!12667 = !DILocalVariable(name: "key", arg: 2, scope: !12668, file: !11433, line: 193, type: !12049)
!12668 = distinct !DISubprogram(name: "z_swap", scope: !11433, file: !11433, line: 193, type: !12669, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12671)
!12669 = !DISubroutineType(types: !12670)
!12670 = !{!103, !12060, !12049}
!12671 = !{!12672, !12667}
!12672 = !DILocalVariable(name: "lock", arg: 1, scope: !12668, file: !11433, line: 193, type: !12060)
!12673 = !DILocation(line: 0, scope: !12668, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 970, column: 3, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12663, file: !2210, line: 969, column: 39)
!12676 = !DILocation(line: 196, column: 9, scope: !12668, inlinedAt: !12674)
!12677 = !DILocation(line: 971, column: 2, scope: !12675)
!12678 = !DILocation(line: 0, scope: !12084, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 972, column: 3, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12663, file: !2210, line: 971, column: 9)
!12681 = !DILocation(line: 0, scope: !12092, inlinedAt: !12682)
!12682 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12679)
!12683 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12682)
!12684 = !DILocation(line: 975, column: 1, scope: !12657)
!12685 = distinct !DISubprogram(name: "resched", scope: !2210, file: !2210, line: 940, type: !12686, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12688)
!12686 = !DISubroutineType(types: !12687)
!12687 = !{!157, !121}
!12688 = !{!12689}
!12689 = !DILocalVariable(name: "key", arg: 1, scope: !12685, file: !2210, line: 940, type: !121)
!12690 = !DILocation(line: 0, scope: !12685)
!12691 = !DILocalVariable(name: "key", arg: 1, scope: !12692, file: !4623, line: 112, type: !32)
!12692 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4623, file: !4623, line: 112, type: !12693, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12695)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!157, !32}
!12695 = !{!12691}
!12696 = !DILocation(line: 0, scope: !12692, inlinedAt: !12697)
!12697 = distinct !DILocation(line: 946, column: 9, scope: !12685)
!12698 = !DILocation(line: 115, column: 13, scope: !12692, inlinedAt: !12697)
!12699 = !DILocation(line: 946, column: 32, scope: !12685)
!12700 = !DILocation(line: 1031, column: 3, scope: !12701, inlinedAt: !12704)
!12701 = distinct !DISubprogram(name: "__get_IPSR", scope: !4797, file: !4797, line: 1027, type: !4878, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12702)
!12702 = !{!12703}
!12703 = !DILocalVariable(name: "result", scope: !12701, file: !4797, line: 1029, type: !121)
!12704 = distinct !DILocation(line: 48, column: 10, scope: !12705, inlinedAt: !12706)
!12705 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5591, file: !5591, line: 46, type: !5592, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12706 = distinct !DILocation(line: 946, column: 36, scope: !12685)
!12707 = !{i64 3768609}
!12708 = !DILocation(line: 0, scope: !12701, inlinedAt: !12704)
!12709 = !DILocation(line: 48, column: 9, scope: !12705, inlinedAt: !12706)
!12710 = !DILocation(line: 946, column: 2, scope: !12685)
!12711 = distinct !DISubprogram(name: "need_swap", scope: !2210, file: !2210, line: 953, type: !5592, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12712)
!12712 = !{!12713}
!12713 = !DILocalVariable(name: "new_thread", scope: !12711, file: !2210, line: 959, type: !2105)
!12714 = !DILocation(line: 962, column: 31, scope: !12711)
!12715 = !DILocation(line: 0, scope: !12711)
!12716 = !DILocation(line: 963, column: 23, scope: !12711)
!12717 = !DILocation(line: 963, column: 20, scope: !12711)
!12718 = !DILocation(line: 963, column: 2, scope: !12711)
!12719 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11433, file: !11433, line: 181, type: !4807, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12720)
!12720 = !{!12721, !12722}
!12721 = !DILocalVariable(name: "key", arg: 1, scope: !12719, file: !11433, line: 181, type: !32)
!12722 = !DILocalVariable(name: "ret", scope: !12719, file: !11433, line: 183, type: !103)
!12723 = !DILocation(line: 0, scope: !12719)
!12724 = !DILocation(line: 185, column: 8, scope: !12719)
!12725 = !DILocation(line: 186, column: 2, scope: !12719)
!12726 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2210, file: !2210, line: 665, type: !12015, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12727)
!12727 = !{!12728, !12729, !12731}
!12728 = !DILocalVariable(name: "thread", arg: 1, scope: !12726, file: !2210, line: 665, type: !2105)
!12729 = !DILocalVariable(name: "__i", scope: !12730, file: !2210, line: 671, type: !12049)
!12730 = distinct !DILexicalBlock(scope: !12726, file: !2210, line: 671, column: 2)
!12731 = !DILocalVariable(name: "__key", scope: !12730, file: !2210, line: 671, type: !12049)
!12732 = !DILocation(line: 0, scope: !12726)
!12733 = !DILocation(line: 669, column: 8, scope: !12726)
!12734 = !DILocation(line: 0, scope: !12730)
!12735 = !DILocation(line: 0, scope: !12057, inlinedAt: !12736)
!12736 = distinct !DILocation(line: 671, column: 2, scope: !12730)
!12737 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12738)
!12738 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12736)
!12739 = !DILocation(line: 0, scope: !12066, inlinedAt: !12738)
!12740 = !DILocation(line: 672, column: 7, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12742, file: !2210, line: 672, column: 7)
!12742 = distinct !DILexicalBlock(scope: !12743, file: !2210, line: 671, column: 26)
!12743 = distinct !DILexicalBlock(scope: !12730, file: !2210, line: 671, column: 2)
!12744 = !DILocation(line: 672, column: 7, scope: !12742)
!12745 = !DILocation(line: 0, scope: !12226, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 673, column: 4, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12741, file: !2210, line: 672, column: 35)
!12748 = !DILocation(line: 266, column: 15, scope: !12226, inlinedAt: !12746)
!12749 = !DILocation(line: 266, column: 28, scope: !12226, inlinedAt: !12746)
!12750 = !DILocation(line: 0, scope: !12234, inlinedAt: !12751)
!12751 = distinct !DILocation(line: 268, column: 3, scope: !12238, inlinedAt: !12746)
!12752 = !DILocation(line: 234, column: 2, scope: !12234, inlinedAt: !12751)
!12753 = !DILocation(line: 674, column: 3, scope: !12747)
!12754 = !DILocation(line: 675, column: 3, scope: !12742)
!12755 = !DILocation(line: 676, column: 26, scope: !12742)
!12756 = !DILocation(line: 676, column: 23, scope: !12742)
!12757 = !DILocation(line: 676, column: 3, scope: !12742)
!12758 = !DILocation(line: 0, scope: !12084, inlinedAt: !12759)
!12759 = distinct !DILocation(line: 671, column: 2, scope: !12743)
!12760 = !DILocation(line: 0, scope: !12092, inlinedAt: !12761)
!12761 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12759)
!12762 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12761)
!12763 = !DILocation(line: 679, column: 16, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12726, file: !2210, line: 679, column: 6)
!12765 = !DILocation(line: 679, column: 13, scope: !12764)
!12766 = !DILocation(line: 679, column: 6, scope: !12726)
!12767 = !DILocation(line: 680, column: 3, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12764, file: !2210, line: 679, column: 26)
!12769 = !DILocation(line: 681, column: 2, scope: !12768)
!12770 = !DILocation(line: 684, column: 1, scope: !12726)
!12771 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11723, file: !11723, line: 52, type: !12033, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12772)
!12772 = !{!12773}
!12773 = !DILocalVariable(name: "thread", arg: 1, scope: !12771, file: !11723, line: 52, type: !2105)
!12774 = !DILocation(line: 0, scope: !12771)
!12775 = !DILocation(line: 54, column: 39, scope: !12771)
!12776 = !DILocation(line: 54, column: 9, scope: !12771)
!12777 = !DILocation(line: 54, column: 2, scope: !12771)
!12778 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11329, file: !11329, line: 141, type: !12015, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12779)
!12779 = !{!12780}
!12780 = !DILocalVariable(name: "thread", arg: 1, scope: !12778, file: !11329, line: 141, type: !2105)
!12781 = !DILocation(line: 0, scope: !12778)
!12782 = !DILocation(line: 143, column: 15, scope: !12778)
!12783 = !DILocation(line: 143, column: 28, scope: !12778)
!12784 = !DILocation(line: 146, column: 1, scope: !12778)
!12785 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11329, file: !11329, line: 73, type: !2821, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12786 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12787)
!12787 = distinct !DILocation(line: 75, column: 30, scope: !12785)
!12788 = !DILocation(line: 0, scope: !12066, inlinedAt: !12787)
!12789 = !DILocation(line: 75, column: 9, scope: !12785)
!12790 = !DILocation(line: 76, column: 1, scope: !12785)
!12791 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2210, file: !2210, line: 977, type: !4888, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12792)
!12792 = !{!12793}
!12793 = !DILocalVariable(name: "key", arg: 1, scope: !12791, file: !2210, line: 977, type: !121)
!12794 = !DILocation(line: 0, scope: !12791)
!12795 = !DILocation(line: 979, column: 6, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12791, file: !2210, line: 979, column: 6)
!12797 = !DILocation(line: 979, column: 6, scope: !12791)
!12798 = !DILocation(line: 980, column: 3, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12796, file: !2210, line: 979, column: 20)
!12800 = !DILocation(line: 981, column: 2, scope: !12799)
!12801 = !DILocation(line: 0, scope: !12092, inlinedAt: !12802)
!12802 = distinct !DILocation(line: 982, column: 3, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12796, file: !2210, line: 981, column: 9)
!12804 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12802)
!12805 = !DILocation(line: 985, column: 1, scope: !12791)
!12806 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2210, file: !2210, line: 695, type: !12015, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12807)
!12807 = !{!12808, !12809}
!12808 = !DILocalVariable(name: "thread", arg: 1, scope: !12806, file: !2210, line: 695, type: !2105)
!12809 = !DILocalVariable(name: "key", scope: !12806, file: !2210, line: 699, type: !12049)
!12810 = !DILocation(line: 0, scope: !12806)
!12811 = !DILocation(line: 0, scope: !12057, inlinedAt: !12812)
!12812 = distinct !DILocation(line: 699, column: 25, scope: !12806)
!12813 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12814)
!12814 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12812)
!12815 = !DILocation(line: 0, scope: !12066, inlinedAt: !12814)
!12816 = !DILocation(line: 702, column: 7, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12806, file: !2210, line: 702, column: 6)
!12818 = !DILocation(line: 702, column: 6, scope: !12806)
!12819 = !DILocation(line: 0, scope: !12084, inlinedAt: !12820)
!12820 = distinct !DILocation(line: 703, column: 3, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12817, file: !2210, line: 702, column: 38)
!12822 = !DILocation(line: 0, scope: !12092, inlinedAt: !12823)
!12823 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12820)
!12824 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12823)
!12825 = !DILocation(line: 704, column: 3, scope: !12821)
!12826 = !DILocation(line: 707, column: 2, scope: !12806)
!12827 = !DILocation(line: 708, column: 2, scope: !12806)
!12828 = !DILocation(line: 710, column: 2, scope: !12806)
!12829 = !DILocation(line: 713, column: 1, scope: !12806)
!12830 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11329, file: !11329, line: 96, type: !12175, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12831)
!12831 = !{!12832}
!12832 = !DILocalVariable(name: "thread", arg: 1, scope: !12830, file: !11329, line: 96, type: !2105)
!12833 = !DILocation(line: 0, scope: !12830)
!12834 = !DILocation(line: 98, column: 23, scope: !12830)
!12835 = !DILocation(line: 98, column: 36, scope: !12830)
!12836 = !DILocation(line: 98, column: 57, scope: !12830)
!12837 = !DILocation(line: 98, column: 2, scope: !12830)
!12838 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11329, file: !11329, line: 148, type: !12015, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12839)
!12839 = !{!12840}
!12840 = !DILocalVariable(name: "thread", arg: 1, scope: !12838, file: !11329, line: 148, type: !2105)
!12841 = !DILocation(line: 0, scope: !12838)
!12842 = !DILocation(line: 150, column: 15, scope: !12838)
!12843 = !DILocation(line: 150, column: 28, scope: !12838)
!12844 = !DILocation(line: 153, column: 1, scope: !12838)
!12845 = distinct !DISubprogram(name: "z_pend_thread", scope: !2210, file: !2210, line: 770, type: !12846, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12852)
!12846 = !DISubroutineType(types: !12847)
!12847 = !{null, !2105, !2136, !12848}
!12848 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !12849)
!12849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !12850)
!12850 = !{!12851}
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12849, file: !1457, line: 66, baseType: !1456, size: 64)
!12852 = !{!12853, !12854, !12855, !12856, !12858}
!12853 = !DILocalVariable(name: "thread", arg: 1, scope: !12845, file: !2210, line: 770, type: !2105)
!12854 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12845, file: !2210, line: 770, type: !2136)
!12855 = !DILocalVariable(name: "timeout", arg: 3, scope: !12845, file: !2210, line: 771, type: !12848)
!12856 = !DILocalVariable(name: "__i", scope: !12857, file: !2210, line: 774, type: !12049)
!12857 = distinct !DILexicalBlock(scope: !12845, file: !2210, line: 774, column: 2)
!12858 = !DILocalVariable(name: "__key", scope: !12857, file: !2210, line: 774, type: !12049)
!12859 = !DILocation(line: 0, scope: !12845)
!12860 = !DILocation(line: 0, scope: !12857)
!12861 = !DILocation(line: 0, scope: !12057, inlinedAt: !12862)
!12862 = distinct !DILocation(line: 774, column: 2, scope: !12857)
!12863 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12864)
!12864 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12862)
!12865 = !DILocation(line: 0, scope: !12066, inlinedAt: !12864)
!12866 = !DILocation(line: 775, column: 3, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12868, file: !2210, line: 774, column: 26)
!12868 = distinct !DILexicalBlock(scope: !12857, file: !2210, line: 774, column: 2)
!12869 = !DILocation(line: 0, scope: !12084, inlinedAt: !12870)
!12870 = distinct !DILocation(line: 774, column: 2, scope: !12868)
!12871 = !DILocation(line: 0, scope: !12092, inlinedAt: !12872)
!12872 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12870)
!12873 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12872)
!12874 = !DILocation(line: 777, column: 1, scope: !12845)
!12875 = distinct !DISubprogram(name: "pend_locked", scope: !2210, file: !2210, line: 760, type: !12846, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12876)
!12876 = !{!12877, !12878, !12879}
!12877 = !DILocalVariable(name: "thread", arg: 1, scope: !12875, file: !2210, line: 760, type: !2105)
!12878 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12875, file: !2210, line: 760, type: !2136)
!12879 = !DILocalVariable(name: "timeout", arg: 3, scope: !12875, file: !2210, line: 761, type: !12848)
!12880 = !DILocation(line: 0, scope: !12875)
!12881 = !DILocation(line: 766, column: 2, scope: !12875)
!12882 = !DILocation(line: 767, column: 2, scope: !12875)
!12883 = !DILocation(line: 768, column: 1, scope: !12875)
!12884 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2210, file: !2210, line: 740, type: !12885, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12887)
!12885 = !DISubroutineType(types: !12886)
!12886 = !{null, !2105, !2136}
!12887 = !{!12888, !12889}
!12888 = !DILocalVariable(name: "thread", arg: 1, scope: !12884, file: !2210, line: 740, type: !2105)
!12889 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12884, file: !2210, line: 740, type: !2136)
!12890 = !DILocation(line: 0, scope: !12884)
!12891 = !DILocation(line: 742, column: 2, scope: !12884)
!12892 = !DILocation(line: 743, column: 2, scope: !12884)
!12893 = !DILocation(line: 747, column: 13, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12884, file: !2210, line: 747, column: 6)
!12895 = !DILocation(line: 747, column: 6, scope: !12884)
!12896 = !DILocation(line: 748, column: 16, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12894, file: !2210, line: 747, column: 22)
!12898 = !DILocation(line: 748, column: 26, scope: !12897)
!12899 = !DILocation(line: 749, column: 28, scope: !12897)
!12900 = !DILocation(line: 0, scope: !12257, inlinedAt: !12901)
!12901 = distinct !DILocation(line: 749, column: 3, scope: !12897)
!12902 = !DILocation(line: 188, column: 2, scope: !12267, inlinedAt: !12901)
!12903 = !DILocation(line: 188, column: 2, scope: !12269, inlinedAt: !12901)
!12904 = !DILocation(line: 0, scope: !12267, inlinedAt: !12901)
!12905 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !12901)
!12906 = !DILocation(line: 189, column: 35, scope: !12272, inlinedAt: !12901)
!12907 = !DILocation(line: 189, column: 7, scope: !12273, inlinedAt: !12901)
!12908 = !DILocation(line: 191, column: 21, scope: !12277, inlinedAt: !12901)
!12909 = !DILocation(line: 190, column: 4, scope: !12277, inlinedAt: !12901)
!12910 = !DILocation(line: 192, column: 4, scope: !12277, inlinedAt: !12901)
!12911 = distinct !{!12911, !12902, !12912}
!12912 = !DILocation(line: 194, column: 2, scope: !12267, inlinedAt: !12901)
!12913 = !DILocation(line: 196, column: 37, scope: !12257, inlinedAt: !12901)
!12914 = !DILocation(line: 196, column: 2, scope: !12257, inlinedAt: !12901)
!12915 = !DILocation(line: 197, column: 1, scope: !12257, inlinedAt: !12901)
!12916 = !DILocation(line: 751, column: 1, scope: !12884)
!12917 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2210, file: !2210, line: 753, type: !12918, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12920)
!12918 = !DISubroutineType(types: !12919)
!12919 = !{null, !2105, !12848}
!12920 = !{!12921, !12922}
!12921 = !DILocalVariable(name: "thread", arg: 1, scope: !12917, file: !2210, line: 753, type: !2105)
!12922 = !DILocalVariable(name: "timeout", arg: 2, scope: !12917, file: !2210, line: 753, type: !12848)
!12923 = !DILocation(line: 0, scope: !12917)
!12924 = !DILocation(line: 755, column: 7, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12917, file: !2210, line: 755, column: 6)
!12926 = !DILocation(line: 755, column: 6, scope: !12917)
!12927 = !DILocation(line: 756, column: 3, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12925, file: !2210, line: 755, column: 41)
!12929 = !DILocation(line: 757, column: 2, scope: !12928)
!12930 = !DILocation(line: 758, column: 1, scope: !12917)
!12931 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11723, file: !11723, line: 47, type: !12918, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12932)
!12932 = !{!12933, !12934}
!12933 = !DILocalVariable(name: "thread", arg: 1, scope: !12931, file: !11723, line: 47, type: !2105)
!12934 = !DILocalVariable(name: "ticks", arg: 2, scope: !12931, file: !11723, line: 47, type: !12848)
!12935 = !DILocation(line: 0, scope: !12931)
!12936 = !DILocation(line: 49, column: 30, scope: !12931)
!12937 = !DILocation(line: 49, column: 2, scope: !12931)
!12938 = !DILocation(line: 50, column: 1, scope: !12931)
!12939 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2210, file: !2210, line: 795, type: !2162, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12940)
!12940 = !{!12941, !12942, !12943, !12945, !12946}
!12941 = !DILocalVariable(name: "timeout", arg: 1, scope: !12939, file: !2210, line: 795, type: !2164)
!12942 = !DILocalVariable(name: "thread", scope: !12939, file: !2210, line: 797, type: !2105)
!12943 = !DILocalVariable(name: "__i", scope: !12944, file: !2210, line: 800, type: !12049)
!12944 = distinct !DILexicalBlock(scope: !12939, file: !2210, line: 800, column: 2)
!12945 = !DILocalVariable(name: "__key", scope: !12944, file: !2210, line: 800, type: !12049)
!12946 = !DILocalVariable(name: "killed", scope: !12947, file: !2210, line: 801, type: !157)
!12947 = distinct !DILexicalBlock(scope: !12948, file: !2210, line: 800, column: 26)
!12948 = distinct !DILexicalBlock(scope: !12944, file: !2210, line: 800, column: 2)
!12949 = !DILocation(line: 0, scope: !12939)
!12950 = !DILocation(line: 797, column: 28, scope: !12939)
!12951 = !DILocation(line: 0, scope: !12944)
!12952 = !DILocation(line: 0, scope: !12057, inlinedAt: !12953)
!12953 = distinct !DILocation(line: 800, column: 2, scope: !12944)
!12954 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !12955)
!12955 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !12953)
!12956 = !DILocation(line: 0, scope: !12066, inlinedAt: !12955)
!12957 = !DILocation(line: 801, column: 27, scope: !12947)
!12958 = !DILocation(line: 801, column: 32, scope: !12947)
!12959 = !DILocation(line: 801, column: 61, scope: !12947)
!12960 = !DILocation(line: 0, scope: !12947)
!12961 = !DILocation(line: 804, column: 7, scope: !12947)
!12962 = !DILocation(line: 805, column: 21, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12964, file: !2210, line: 805, column: 8)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !2210, line: 804, column: 16)
!12965 = distinct !DILexicalBlock(scope: !12947, file: !2210, line: 804, column: 7)
!12966 = !DILocation(line: 805, column: 31, scope: !12963)
!12967 = !DILocation(line: 805, column: 8, scope: !12964)
!12968 = !DILocation(line: 806, column: 5, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12963, file: !2210, line: 805, column: 40)
!12970 = !DILocation(line: 807, column: 4, scope: !12969)
!12971 = !DILocation(line: 808, column: 4, scope: !12964)
!12972 = !DILocation(line: 809, column: 4, scope: !12964)
!12973 = !DILocation(line: 810, column: 4, scope: !12964)
!12974 = !DILocation(line: 811, column: 3, scope: !12964)
!12975 = !DILocation(line: 0, scope: !12084, inlinedAt: !12976)
!12976 = distinct !DILocation(line: 800, column: 2, scope: !12948)
!12977 = !DILocation(line: 0, scope: !12092, inlinedAt: !12978)
!12978 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !12976)
!12979 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !12978)
!12980 = !DILocation(line: 813, column: 1, scope: !12939)
!12981 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2210, file: !2210, line: 779, type: !12015, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12982)
!12982 = !{!12983}
!12983 = !DILocalVariable(name: "thread", arg: 1, scope: !12981, file: !2210, line: 779, type: !2105)
!12984 = !DILocation(line: 0, scope: !12981)
!12985 = !DILocation(line: 781, column: 2, scope: !12981)
!12986 = !DILocation(line: 782, column: 2, scope: !12981)
!12987 = !DILocation(line: 783, column: 15, scope: !12981)
!12988 = !DILocation(line: 783, column: 25, scope: !12981)
!12989 = !DILocation(line: 784, column: 1, scope: !12981)
!12990 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11329, file: !11329, line: 165, type: !12015, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12991)
!12991 = !{!12992}
!12992 = !DILocalVariable(name: "thread", arg: 1, scope: !12990, file: !11329, line: 165, type: !2105)
!12993 = !DILocation(line: 0, scope: !12990)
!12994 = !DILocation(line: 167, column: 15, scope: !12990)
!12995 = !DILocation(line: 167, column: 28, scope: !12990)
!12996 = !DILocation(line: 168, column: 1, scope: !12990)
!12997 = distinct !DISubprogram(name: "unready_thread", scope: !2210, file: !2210, line: 731, type: !12015, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12998)
!12998 = !{!12999}
!12999 = !DILocalVariable(name: "thread", arg: 1, scope: !12997, file: !2210, line: 731, type: !2105)
!13000 = !DILocation(line: 0, scope: !12997)
!13001 = !DILocation(line: 733, column: 6, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12997, file: !2210, line: 733, column: 6)
!13003 = !DILocation(line: 733, column: 6, scope: !12997)
!13004 = !DILocation(line: 0, scope: !12226, inlinedAt: !13005)
!13005 = distinct !DILocation(line: 734, column: 3, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13002, file: !2210, line: 733, column: 34)
!13007 = !DILocation(line: 266, column: 15, scope: !12226, inlinedAt: !13005)
!13008 = !DILocation(line: 266, column: 28, scope: !12226, inlinedAt: !13005)
!13009 = !DILocation(line: 0, scope: !12234, inlinedAt: !13010)
!13010 = distinct !DILocation(line: 268, column: 3, scope: !12238, inlinedAt: !13005)
!13011 = !DILocation(line: 234, column: 2, scope: !12234, inlinedAt: !13010)
!13012 = !DILocation(line: 735, column: 2, scope: !13006)
!13013 = !DILocation(line: 736, column: 25, scope: !12997)
!13014 = !DILocation(line: 736, column: 22, scope: !12997)
!13015 = !DILocation(line: 736, column: 2, scope: !12997)
!13016 = !DILocation(line: 737, column: 1, scope: !12997)
!13017 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11329, file: !11329, line: 160, type: !12015, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13018)
!13018 = !{!13019}
!13019 = !DILocalVariable(name: "thread", arg: 1, scope: !13017, file: !11329, line: 160, type: !2105)
!13020 = !DILocation(line: 0, scope: !13017)
!13021 = !DILocation(line: 162, column: 15, scope: !13017)
!13022 = !DILocation(line: 162, column: 28, scope: !13017)
!13023 = !DILocation(line: 163, column: 1, scope: !13017)
!13024 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2210, file: !2210, line: 786, type: !12015, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13025)
!13025 = !{!13026, !13027, !13029}
!13026 = !DILocalVariable(name: "thread", arg: 1, scope: !13024, file: !2210, line: 786, type: !2105)
!13027 = !DILocalVariable(name: "__i", scope: !13028, file: !2210, line: 788, type: !12049)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !2210, line: 788, column: 2)
!13029 = !DILocalVariable(name: "__key", scope: !13028, file: !2210, line: 788, type: !12049)
!13030 = !DILocation(line: 0, scope: !13024)
!13031 = !DILocation(line: 0, scope: !13028)
!13032 = !DILocation(line: 0, scope: !12057, inlinedAt: !13033)
!13033 = distinct !DILocation(line: 788, column: 2, scope: !13028)
!13034 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13035)
!13035 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13033)
!13036 = !DILocation(line: 0, scope: !12066, inlinedAt: !13035)
!13037 = !DILocation(line: 789, column: 3, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13039, file: !2210, line: 788, column: 26)
!13039 = distinct !DILexicalBlock(scope: !13028, file: !2210, line: 788, column: 2)
!13040 = !DILocation(line: 0, scope: !12084, inlinedAt: !13041)
!13041 = distinct !DILocation(line: 788, column: 2, scope: !13039)
!13042 = !DILocation(line: 0, scope: !12092, inlinedAt: !13043)
!13043 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13041)
!13044 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13043)
!13045 = !DILocation(line: 791, column: 1, scope: !13024)
!13046 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2210, file: !2210, line: 816, type: !13047, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13049)
!13047 = !DISubroutineType(types: !13048)
!13048 = !{!103, !121, !2136, !12848}
!13049 = !{!13050, !13051, !13052, !13053, !13054, !13056}
!13050 = !DILocalVariable(name: "key", arg: 1, scope: !13046, file: !2210, line: 816, type: !121)
!13051 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13046, file: !2210, line: 816, type: !2136)
!13052 = !DILocalVariable(name: "timeout", arg: 3, scope: !13046, file: !2210, line: 816, type: !12848)
!13053 = !DILocalVariable(name: "ret", scope: !13046, file: !2210, line: 828, type: !103)
!13054 = !DILocalVariable(name: "__i", scope: !13055, file: !2210, line: 829, type: !12049)
!13055 = distinct !DILexicalBlock(scope: !13046, file: !2210, line: 829, column: 2)
!13056 = !DILocalVariable(name: "__key", scope: !13055, file: !2210, line: 829, type: !12049)
!13057 = !DILocation(line: 0, scope: !13046)
!13058 = !DILocation(line: 823, column: 14, scope: !13046)
!13059 = !DILocation(line: 823, column: 2, scope: !13046)
!13060 = !DILocation(line: 826, column: 20, scope: !13046)
!13061 = !DILocation(line: 826, column: 18, scope: !13046)
!13062 = !DILocation(line: 828, column: 12, scope: !13046)
!13063 = !DILocation(line: 0, scope: !13055)
!13064 = !DILocation(line: 0, scope: !12057, inlinedAt: !13065)
!13065 = distinct !DILocation(line: 829, column: 2, scope: !13055)
!13066 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13067)
!13067 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13065)
!13068 = !DILocation(line: 0, scope: !12066, inlinedAt: !13067)
!13069 = !DILocation(line: 830, column: 7, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !2210, line: 830, column: 7)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !2210, line: 829, column: 26)
!13072 = distinct !DILexicalBlock(scope: !13055, file: !2210, line: 829, column: 2)
!13073 = !DILocation(line: 830, column: 26, scope: !13070)
!13074 = !DILocation(line: 830, column: 23, scope: !13070)
!13075 = !DILocation(line: 830, column: 7, scope: !13071)
!13076 = !DILocation(line: 831, column: 20, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13070, file: !2210, line: 830, column: 36)
!13078 = !DILocation(line: 832, column: 3, scope: !13077)
!13079 = !DILocation(line: 0, scope: !12084, inlinedAt: !13080)
!13080 = distinct !DILocation(line: 829, column: 2, scope: !13072)
!13081 = !DILocation(line: 0, scope: !12092, inlinedAt: !13082)
!13082 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13080)
!13083 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13082)
!13084 = !DILocation(line: 834, column: 2, scope: !13046)
!13085 = distinct !DISubprogram(name: "z_pend_curr", scope: !2210, file: !2210, line: 840, type: !13086, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13088)
!13086 = !DISubroutineType(types: !13087)
!13087 = !{!103, !12060, !12049, !2136, !12848}
!13088 = !{!13089, !13090, !13091, !13092}
!13089 = !DILocalVariable(name: "lock", arg: 1, scope: !13085, file: !2210, line: 840, type: !12060)
!13090 = !DILocalVariable(name: "key", arg: 2, scope: !13085, file: !2210, line: 840, type: !12049)
!13091 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13085, file: !2210, line: 841, type: !2136)
!13092 = !DILocalVariable(name: "timeout", arg: 4, scope: !13085, file: !2210, line: 841, type: !12848)
!13093 = !DILocation(line: 0, scope: !13085)
!13094 = !DILocation(line: 844, column: 20, scope: !13085)
!13095 = !DILocation(line: 844, column: 18, scope: !13085)
!13096 = !DILocation(line: 0, scope: !12057, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 856, column: 9, scope: !13085)
!13098 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13099)
!13099 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13097)
!13100 = !DILocation(line: 0, scope: !12066, inlinedAt: !13099)
!13101 = !DILocation(line: 857, column: 14, scope: !13085)
!13102 = !DILocation(line: 857, column: 2, scope: !13085)
!13103 = !DILocation(line: 0, scope: !12668, inlinedAt: !13104)
!13104 = distinct !DILocation(line: 859, column: 9, scope: !13085)
!13105 = !DILocation(line: 196, column: 9, scope: !12668, inlinedAt: !13104)
!13106 = !DILocation(line: 859, column: 2, scope: !13085)
!13107 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2210, file: !2210, line: 862, type: !13108, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13110)
!13108 = !DISubroutineType(types: !13109)
!13109 = !{!2105, !2136}
!13110 = !{!13111, !13112, !13113, !13115}
!13111 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13107, file: !2210, line: 862, type: !2136)
!13112 = !DILocalVariable(name: "thread", scope: !13107, file: !2210, line: 864, type: !2105)
!13113 = !DILocalVariable(name: "__i", scope: !13114, file: !2210, line: 866, type: !12049)
!13114 = distinct !DILexicalBlock(scope: !13107, file: !2210, line: 866, column: 2)
!13115 = !DILocalVariable(name: "__key", scope: !13114, file: !2210, line: 866, type: !12049)
!13116 = !DILocation(line: 0, scope: !13107)
!13117 = !DILocation(line: 0, scope: !13114)
!13118 = !DILocation(line: 0, scope: !12057, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 866, column: 2, scope: !13114)
!13120 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13119)
!13122 = !DILocation(line: 0, scope: !12066, inlinedAt: !13121)
!13123 = !DILocation(line: 867, column: 12, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13125, file: !2210, line: 866, column: 26)
!13125 = distinct !DILexicalBlock(scope: !13114, file: !2210, line: 866, column: 2)
!13126 = !DILocation(line: 869, column: 14, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13124, file: !2210, line: 869, column: 7)
!13128 = !DILocation(line: 869, column: 7, scope: !13124)
!13129 = !DILocation(line: 870, column: 4, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13127, file: !2210, line: 869, column: 23)
!13131 = !DILocation(line: 871, column: 3, scope: !13130)
!13132 = !DILocation(line: 0, scope: !12084, inlinedAt: !13133)
!13133 = distinct !DILocation(line: 866, column: 2, scope: !13125)
!13134 = !DILocation(line: 0, scope: !12092, inlinedAt: !13135)
!13135 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13133)
!13136 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13135)
!13137 = !DILocation(line: 874, column: 2, scope: !13107)
!13138 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2210, file: !2210, line: 877, type: !13108, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13139)
!13139 = !{!13140, !13141, !13142, !13144}
!13140 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13138, file: !2210, line: 877, type: !2136)
!13141 = !DILocalVariable(name: "thread", scope: !13138, file: !2210, line: 879, type: !2105)
!13142 = !DILocalVariable(name: "__i", scope: !13143, file: !2210, line: 881, type: !12049)
!13143 = distinct !DILexicalBlock(scope: !13138, file: !2210, line: 881, column: 2)
!13144 = !DILocalVariable(name: "__key", scope: !13143, file: !2210, line: 881, type: !12049)
!13145 = !DILocation(line: 0, scope: !13138)
!13146 = !DILocation(line: 0, scope: !13143)
!13147 = !DILocation(line: 0, scope: !12057, inlinedAt: !13148)
!13148 = distinct !DILocation(line: 881, column: 2, scope: !13143)
!13149 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13150)
!13150 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13148)
!13151 = !DILocation(line: 0, scope: !12066, inlinedAt: !13150)
!13152 = !DILocation(line: 882, column: 12, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13154, file: !2210, line: 881, column: 26)
!13154 = distinct !DILexicalBlock(scope: !13143, file: !2210, line: 881, column: 2)
!13155 = !DILocation(line: 884, column: 14, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13153, file: !2210, line: 884, column: 7)
!13157 = !DILocation(line: 884, column: 7, scope: !13153)
!13158 = !DILocation(line: 885, column: 4, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13156, file: !2210, line: 884, column: 23)
!13160 = !DILocation(line: 886, column: 10, scope: !13159)
!13161 = !DILocation(line: 887, column: 3, scope: !13159)
!13162 = !DILocation(line: 0, scope: !12084, inlinedAt: !13163)
!13163 = distinct !DILocation(line: 881, column: 2, scope: !13154)
!13164 = !DILocation(line: 0, scope: !12092, inlinedAt: !13165)
!13165 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13163)
!13166 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13165)
!13167 = !DILocation(line: 890, column: 2, scope: !13138)
!13168 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2210, file: !2210, line: 893, type: !12015, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13169)
!13169 = !{!13170}
!13170 = !DILocalVariable(name: "thread", arg: 1, scope: !13168, file: !2210, line: 893, type: !2105)
!13171 = !DILocation(line: 0, scope: !13168)
!13172 = !DILocation(line: 0, scope: !13024, inlinedAt: !13173)
!13173 = distinct !DILocation(line: 895, column: 2, scope: !13168)
!13174 = !DILocation(line: 0, scope: !13028, inlinedAt: !13173)
!13175 = !DILocation(line: 0, scope: !12057, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 788, column: 2, scope: !13028, inlinedAt: !13173)
!13177 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13176)
!13179 = !DILocation(line: 0, scope: !12066, inlinedAt: !13178)
!13180 = !DILocation(line: 789, column: 3, scope: !13038, inlinedAt: !13173)
!13181 = !DILocation(line: 0, scope: !12084, inlinedAt: !13182)
!13182 = distinct !DILocation(line: 788, column: 2, scope: !13039, inlinedAt: !13173)
!13183 = !DILocation(line: 0, scope: !12092, inlinedAt: !13184)
!13184 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13182)
!13185 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13184)
!13186 = !DILocation(line: 896, column: 8, scope: !13168)
!13187 = !DILocation(line: 897, column: 1, scope: !13168)
!13188 = distinct !DISubprogram(name: "z_set_prio", scope: !2210, file: !2210, line: 902, type: !12377, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13189)
!13189 = !{!13190, !13191, !13192, !13193, !13195}
!13190 = !DILocalVariable(name: "thread", arg: 1, scope: !13188, file: !2210, line: 902, type: !2105)
!13191 = !DILocalVariable(name: "prio", arg: 2, scope: !13188, file: !2210, line: 902, type: !103)
!13192 = !DILocalVariable(name: "need_sched", scope: !13188, file: !2210, line: 904, type: !157)
!13193 = !DILocalVariable(name: "__i", scope: !13194, file: !2210, line: 906, type: !12049)
!13194 = distinct !DILexicalBlock(scope: !13188, file: !2210, line: 906, column: 2)
!13195 = !DILocalVariable(name: "__key", scope: !13194, file: !2210, line: 906, type: !12049)
!13196 = !DILocation(line: 0, scope: !13188)
!13197 = !DILocation(line: 0, scope: !13194)
!13198 = !DILocation(line: 0, scope: !12057, inlinedAt: !13199)
!13199 = distinct !DILocation(line: 906, column: 2, scope: !13194)
!13200 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13201)
!13201 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13199)
!13202 = !DILocation(line: 0, scope: !12066, inlinedAt: !13201)
!13203 = !DILocation(line: 907, column: 16, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13205, file: !2210, line: 906, column: 26)
!13205 = distinct !DILexicalBlock(scope: !13194, file: !2210, line: 906, column: 2)
!13206 = !DILocation(line: 909, column: 7, scope: !13204)
!13207 = !DILocation(line: 0, scope: !12226, inlinedAt: !13208)
!13208 = distinct !DILocation(line: 912, column: 5, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !2210, line: 911, column: 63)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !2210, line: 911, column: 8)
!13211 = distinct !DILexicalBlock(scope: !13212, file: !2210, line: 909, column: 19)
!13212 = distinct !DILexicalBlock(scope: !13204, file: !2210, line: 909, column: 7)
!13213 = !DILocation(line: 266, column: 28, scope: !12226, inlinedAt: !13208)
!13214 = !DILocation(line: 0, scope: !12234, inlinedAt: !13215)
!13215 = distinct !DILocation(line: 268, column: 3, scope: !12238, inlinedAt: !13208)
!13216 = !DILocation(line: 234, column: 2, scope: !12234, inlinedAt: !13215)
!13217 = !DILocation(line: 913, column: 23, scope: !13209)
!13218 = !DILocation(line: 0, scope: !12243, inlinedAt: !13219)
!13219 = distinct !DILocation(line: 914, column: 5, scope: !13209)
!13220 = !DILocation(line: 252, column: 28, scope: !12243, inlinedAt: !13219)
!13221 = !DILocation(line: 0, scope: !12250, inlinedAt: !13222)
!13222 = distinct !DILocation(line: 254, column: 3, scope: !12254, inlinedAt: !13219)
!13223 = !DILocation(line: 0, scope: !12257, inlinedAt: !13224)
!13224 = distinct !DILocation(line: 229, column: 2, scope: !12250, inlinedAt: !13222)
!13225 = !DILocation(line: 188, column: 2, scope: !12267, inlinedAt: !13224)
!13226 = !DILocation(line: 188, column: 2, scope: !12269, inlinedAt: !13224)
!13227 = !DILocation(line: 0, scope: !12267, inlinedAt: !13224)
!13228 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !13224)
!13229 = !DILocation(line: 189, column: 35, scope: !12272, inlinedAt: !13224)
!13230 = !DILocation(line: 189, column: 7, scope: !12273, inlinedAt: !13224)
!13231 = !DILocation(line: 190, column: 4, scope: !12277, inlinedAt: !13224)
!13232 = !DILocation(line: 192, column: 4, scope: !12277, inlinedAt: !13224)
!13233 = distinct !{!13233, !13225, !13234}
!13234 = !DILocation(line: 194, column: 2, scope: !12267, inlinedAt: !13224)
!13235 = !DILocation(line: 196, column: 2, scope: !12257, inlinedAt: !13224)
!13236 = !DILocation(line: 197, column: 1, scope: !12257, inlinedAt: !13224)
!13237 = !DILocation(line: 918, column: 4, scope: !13211)
!13238 = !DILocation(line: 919, column: 3, scope: !13211)
!13239 = !DILocation(line: 920, column: 22, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13212, file: !2210, line: 919, column: 10)
!13241 = !DILocation(line: 0, scope: !12084, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 906, column: 2, scope: !13205)
!13243 = !DILocation(line: 0, scope: !12092, inlinedAt: !13244)
!13244 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13242)
!13245 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13244)
!13246 = !DILocation(line: 926, column: 2, scope: !13188)
!13247 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2210, file: !2210, line: 929, type: !13248, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13250)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{null, !2105, !103}
!13250 = !{!13251, !13252, !13253}
!13251 = !DILocalVariable(name: "thread", arg: 1, scope: !13247, file: !2210, line: 929, type: !2105)
!13252 = !DILocalVariable(name: "prio", arg: 2, scope: !13247, file: !2210, line: 929, type: !103)
!13253 = !DILocalVariable(name: "need_sched", scope: !13247, file: !2210, line: 931, type: !157)
!13254 = !DILocation(line: 0, scope: !13247)
!13255 = !DILocation(line: 931, column: 20, scope: !13247)
!13256 = !DILocation(line: 935, column: 17, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13247, file: !2210, line: 935, column: 6)
!13258 = !DILocation(line: 935, column: 20, scope: !13257)
!13259 = !DILocation(line: 935, column: 35, scope: !13257)
!13260 = !DILocation(line: 935, column: 48, scope: !13257)
!13261 = !DILocation(line: 935, column: 6, scope: !13247)
!13262 = !DILocation(line: 936, column: 3, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13257, file: !2210, line: 935, column: 55)
!13264 = !DILocation(line: 937, column: 2, scope: !13263)
!13265 = !DILocation(line: 938, column: 1, scope: !13247)
!13266 = distinct !DISubprogram(name: "k_sched_lock", scope: !2210, file: !2210, line: 987, type: !2821, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13267)
!13267 = !{!13268, !13270}
!13268 = !DILocalVariable(name: "__i", scope: !13269, file: !2210, line: 989, type: !12049)
!13269 = distinct !DILexicalBlock(scope: !13266, file: !2210, line: 989, column: 2)
!13270 = !DILocalVariable(name: "__key", scope: !13269, file: !2210, line: 989, type: !12049)
!13271 = !DILocation(line: 0, scope: !13269)
!13272 = !DILocation(line: 0, scope: !12057, inlinedAt: !13273)
!13273 = distinct !DILocation(line: 989, column: 2, scope: !13269)
!13274 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13275)
!13275 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13273)
!13276 = !DILocation(line: 0, scope: !12066, inlinedAt: !13275)
!13277 = !DILocation(line: 992, column: 3, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13279, file: !2210, line: 989, column: 26)
!13279 = distinct !DILexicalBlock(scope: !13269, file: !2210, line: 989, column: 2)
!13280 = !DILocation(line: 0, scope: !12084, inlinedAt: !13281)
!13281 = distinct !DILocation(line: 989, column: 2, scope: !13279)
!13282 = !DILocation(line: 0, scope: !12092, inlinedAt: !13283)
!13283 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13281)
!13284 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13283)
!13285 = !DILocation(line: 994, column: 1, scope: !13266)
!13286 = distinct !DISubprogram(name: "z_sched_lock", scope: !11329, file: !11329, line: 251, type: !2821, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13287 = !DILocation(line: 256, column: 4, scope: !13286)
!13288 = !DILocation(line: 256, column: 19, scope: !13286)
!13289 = !DILocation(line: 256, column: 2, scope: !13286)
!13290 = !DILocation(line: 258, column: 2, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13286, file: !11329, line: 258, column: 2)
!13292 = !{i64 2155185833}
!13293 = !DILocation(line: 259, column: 1, scope: !13286)
!13294 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2210, file: !2210, line: 996, type: !2821, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13295)
!13295 = !{!13296, !13298}
!13296 = !DILocalVariable(name: "__i", scope: !13297, file: !2210, line: 998, type: !12049)
!13297 = distinct !DILexicalBlock(scope: !13294, file: !2210, line: 998, column: 2)
!13298 = !DILocalVariable(name: "__key", scope: !13297, file: !2210, line: 998, type: !12049)
!13299 = !DILocation(line: 0, scope: !13297)
!13300 = !DILocation(line: 0, scope: !12057, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 998, column: 2, scope: !13297)
!13302 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13303)
!13303 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13301)
!13304 = !DILocation(line: 0, scope: !12066, inlinedAt: !13303)
!13305 = !DILocation(line: 1002, column: 5, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13307, file: !2210, line: 998, column: 26)
!13307 = distinct !DILexicalBlock(scope: !13297, file: !2210, line: 998, column: 2)
!13308 = !DILocation(line: 1002, column: 20, scope: !13306)
!13309 = !DILocation(line: 1002, column: 3, scope: !13306)
!13310 = !DILocation(line: 1003, column: 3, scope: !13306)
!13311 = !DILocation(line: 0, scope: !12084, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 998, column: 2, scope: !13307)
!13313 = !DILocation(line: 0, scope: !12092, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13312)
!13315 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13314)
!13316 = !DILocation(line: 1011, column: 2, scope: !13294)
!13317 = !DILocation(line: 1012, column: 1, scope: !13294)
!13318 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2210, file: !2210, line: 1014, type: !12365, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13319 = !DILocation(line: 1028, column: 25, scope: !13318)
!13320 = !DILocation(line: 1028, column: 2, scope: !13318)
!13321 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2210, file: !2210, line: 1155, type: !13322, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13324)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{!157, !2134, !2134}
!13324 = !{!13325, !13326, !13327, !13328, !13329}
!13325 = !DILocalVariable(name: "a", arg: 1, scope: !13321, file: !2210, line: 1155, type: !2134)
!13326 = !DILocalVariable(name: "b", arg: 2, scope: !13321, file: !2210, line: 1155, type: !2134)
!13327 = !DILocalVariable(name: "thread_a", scope: !13321, file: !2210, line: 1157, type: !2105)
!13328 = !DILocalVariable(name: "thread_b", scope: !13321, file: !2210, line: 1157, type: !2105)
!13329 = !DILocalVariable(name: "cmp", scope: !13321, file: !2210, line: 1158, type: !595)
!13330 = !DILocation(line: 0, scope: !13321)
!13331 = !DILocation(line: 1160, column: 13, scope: !13321)
!13332 = !DILocation(line: 1161, column: 13, scope: !13321)
!13333 = !DILocation(line: 1163, column: 8, scope: !13321)
!13334 = !DILocation(line: 1165, column: 10, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13321, file: !2210, line: 1165, column: 6)
!13336 = !DILocation(line: 1165, column: 6, scope: !13321)
!13337 = !DILocation(line: 1167, column: 17, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13335, file: !2210, line: 1167, column: 13)
!13339 = !DILocation(line: 1167, column: 13, scope: !13335)
!13340 = !DILocation(line: 1170, column: 25, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13338, file: !2210, line: 1169, column: 9)
!13342 = !DILocation(line: 1170, column: 52, scope: !13341)
!13343 = !DILocation(line: 1170, column: 35, scope: !13341)
!13344 = !DILocation(line: 1170, column: 3, scope: !13341)
!13345 = !DILocation(line: 0, scope: !13335)
!13346 = !DILocation(line: 1173, column: 1, scope: !13321)
!13347 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2210, file: !2210, line: 1175, type: !13348, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13363)
!13348 = !DISubroutineType(types: !13349)
!13349 = !{null, !13350, !2105}
!13350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13351, size: 32)
!13351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13352, line: 37, size: 128, elements: !13353)
!13352 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13353 = !{!13354, !13362}
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13351, file: !13352, line: 38, baseType: !13355, size: 96)
!13355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !13356)
!13356 = !{!13357, !13358, !13361}
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13355, file: !237, line: 84, baseType: !2134, size: 32)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13355, file: !237, line: 85, baseType: !13359, size: 32, offset: 32)
!13359 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !13360)
!13360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13322, size: 32)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13355, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13351, file: !13352, line: 39, baseType: !103, size: 32, offset: 96)
!13363 = !{!13364, !13365, !13366, !13367, !13376}
!13364 = !DILocalVariable(name: "pq", arg: 1, scope: !13347, file: !2210, line: 1175, type: !13350)
!13365 = !DILocalVariable(name: "thread", arg: 2, scope: !13347, file: !2210, line: 1175, type: !2105)
!13366 = !DILocalVariable(name: "t", scope: !13347, file: !2210, line: 1177, type: !2105)
!13367 = !DILocalVariable(name: "__f", scope: !13368, file: !2210, line: 1190, type: !13371)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !2210, line: 1190, column: 3)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !2210, line: 1189, column: 27)
!13370 = distinct !DILexicalBlock(scope: !13347, file: !2210, line: 1189, column: 6)
!13371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !13372)
!13372 = !{!13373, !13374, !13375}
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13371, file: !237, line: 156, baseType: !2205, size: 32)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13371, file: !237, line: 157, baseType: !1755, size: 32, offset: 32)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13371, file: !237, line: 158, baseType: !595, size: 32, offset: 64)
!13376 = !DILocalVariable(name: "n", scope: !13377, file: !2210, line: 1190, type: !2134)
!13377 = distinct !DILexicalBlock(scope: !13378, file: !2210, line: 1190, column: 3)
!13378 = distinct !DILexicalBlock(scope: !13368, file: !2210, line: 1190, column: 3)
!13379 = !DILocation(line: 0, scope: !13347)
!13380 = !DILocation(line: 1181, column: 31, scope: !13347)
!13381 = !DILocation(line: 1181, column: 45, scope: !13347)
!13382 = !DILocation(line: 1181, column: 15, scope: !13347)
!13383 = !DILocation(line: 1181, column: 25, scope: !13347)
!13384 = !DILocation(line: 1189, column: 11, scope: !13370)
!13385 = !DILocation(line: 1189, column: 7, scope: !13370)
!13386 = !DILocation(line: 1189, column: 6, scope: !13347)
!13387 = !DILocation(line: 1190, column: 3, scope: !13368)
!13388 = !DILocation(line: 1190, column: 3, scope: !13377)
!13389 = !DILocation(line: 0, scope: !13377)
!13390 = !DILocation(line: 1190, column: 3, scope: !13378)
!13391 = !DILocation(line: 1193, column: 2, scope: !13369)
!13392 = !DILocation(line: 1191, column: 42, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13378, file: !2210, line: 1190, column: 54)
!13394 = !DILocation(line: 1191, column: 12, scope: !13393)
!13395 = !DILocation(line: 1191, column: 22, scope: !13393)
!13396 = distinct !{!13396, !13387, !13397}
!13397 = !DILocation(line: 1192, column: 3, scope: !13368)
!13398 = !DILocation(line: 1195, column: 17, scope: !13347)
!13399 = !DILocation(line: 1195, column: 37, scope: !13347)
!13400 = !DILocation(line: 1195, column: 2, scope: !13347)
!13401 = !DILocation(line: 1196, column: 1, scope: !13347)
!13402 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !13403, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13403 = !DISubroutineType(types: !13404)
!13404 = !{!2134, !13405, !13406}
!13405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13355, size: 32)
!13406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13371, size: 32)
!13407 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !13408, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{null, !13405, !2134}
!13410 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2210, file: !2210, line: 1198, type: !13348, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13411)
!13411 = !{!13412, !13413}
!13412 = !DILocalVariable(name: "pq", arg: 1, scope: !13410, file: !2210, line: 1198, type: !13350)
!13413 = !DILocalVariable(name: "thread", arg: 2, scope: !13410, file: !2210, line: 1198, type: !2105)
!13414 = !DILocation(line: 0, scope: !13410)
!13415 = !DILocation(line: 1202, column: 17, scope: !13410)
!13416 = !DILocation(line: 1202, column: 37, scope: !13410)
!13417 = !DILocation(line: 1202, column: 2, scope: !13410)
!13418 = !DILocation(line: 1204, column: 16, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13410, file: !2210, line: 1204, column: 6)
!13420 = !DILocation(line: 1204, column: 7, scope: !13419)
!13421 = !DILocation(line: 1204, column: 6, scope: !13410)
!13422 = !DILocation(line: 1205, column: 7, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13419, file: !2210, line: 1204, column: 22)
!13424 = !DILocation(line: 1205, column: 22, scope: !13423)
!13425 = !DILocation(line: 1206, column: 2, scope: !13423)
!13426 = !DILocation(line: 1207, column: 1, scope: !13410)
!13427 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !13408, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13428 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2210, file: !2210, line: 1209, type: !13429, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{!2105, !13350}
!13431 = !{!13432, !13433, !13434}
!13432 = !DILocalVariable(name: "pq", arg: 1, scope: !13428, file: !2210, line: 1209, type: !13350)
!13433 = !DILocalVariable(name: "thread", scope: !13428, file: !2210, line: 1211, type: !2105)
!13434 = !DILocalVariable(name: "n", scope: !13428, file: !2210, line: 1212, type: !2134)
!13435 = !DILocation(line: 0, scope: !13428)
!13436 = !DILocation(line: 1212, column: 37, scope: !13428)
!13437 = !DILocation(line: 1212, column: 21, scope: !13428)
!13438 = !DILocation(line: 1217, column: 2, scope: !13428)
!13439 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !13440, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13442)
!13440 = !DISubroutineType(types: !13441)
!13441 = !{!2134, !13405}
!13442 = !{!13443}
!13443 = !DILocalVariable(name: "tree", arg: 1, scope: !13439, file: !237, line: 115, type: !13405)
!13444 = !DILocation(line: 0, scope: !13439)
!13445 = !DILocation(line: 117, column: 9, scope: !13439)
!13446 = !DILocation(line: 117, column: 2, scope: !13439)
!13447 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !13448, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13448 = !DISubroutineType(types: !13449)
!13449 = !{!2134, !13405, !154}
!13450 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2210, file: !2210, line: 1246, type: !13451, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13461)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{!2105, !13453}
!13453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13454, size: 32)
!13454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13352, line: 53, size: 2080, elements: !13455)
!13455 = !{!13456, !13460}
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13454, file: !13352, line: 54, baseType: !13457, size: 2048)
!13457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2141, size: 2048, elements: !13458)
!13458 = !{!13459}
!13459 = !DISubrange(count: 32)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13454, file: !13352, line: 55, baseType: !32, size: 32, offset: 2048)
!13461 = !{!13462, !13463, !13464, !13465}
!13462 = !DILocalVariable(name: "pq", arg: 1, scope: !13450, file: !2210, line: 1246, type: !13453)
!13463 = !DILocalVariable(name: "thread", scope: !13450, file: !2210, line: 1252, type: !2105)
!13464 = !DILocalVariable(name: "l", scope: !13450, file: !2210, line: 1253, type: !12260)
!13465 = !DILocalVariable(name: "n", scope: !13450, file: !2210, line: 1254, type: !2206)
!13466 = !DILocation(line: 0, scope: !13450)
!13467 = !DILocation(line: 1248, column: 11, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13450, file: !2210, line: 1248, column: 6)
!13469 = !DILocation(line: 1248, column: 7, scope: !13468)
!13470 = !DILocation(line: 1248, column: 6, scope: !13450)
!13471 = !DILocation(line: 1253, column: 31, scope: !13450)
!13472 = !DILocation(line: 1253, column: 20, scope: !13450)
!13473 = !DILocation(line: 1254, column: 19, scope: !13450)
!13474 = !DILocation(line: 1260, column: 1, scope: !13450)
!13475 = distinct !DISubprogram(name: "z_unpend_all", scope: !2210, file: !2210, line: 1262, type: !13476, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13478)
!13476 = !DISubroutineType(types: !13477)
!13477 = !{!103, !2136}
!13478 = !{!13479, !13480, !13481}
!13479 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13475, file: !2210, line: 1262, type: !2136)
!13480 = !DILocalVariable(name: "need_sched", scope: !13475, file: !2210, line: 1264, type: !103)
!13481 = !DILocalVariable(name: "thread", scope: !13475, file: !2210, line: 1265, type: !2105)
!13482 = !DILocation(line: 0, scope: !13475)
!13483 = !DILocation(line: 1267, column: 19, scope: !13475)
!13484 = !DILocation(line: 1267, column: 41, scope: !13475)
!13485 = !DILocation(line: 1267, column: 2, scope: !13475)
!13486 = !DILocation(line: 1268, column: 3, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13475, file: !2210, line: 1267, column: 50)
!13488 = !DILocation(line: 1269, column: 3, scope: !13487)
!13489 = distinct !{!13489, !13485, !13490}
!13490 = !DILocation(line: 1271, column: 2, scope: !13475)
!13491 = !DILocation(line: 1273, column: 2, scope: !13475)
!13492 = distinct !DISubprogram(name: "z_waitq_head", scope: !11655, file: !11655, line: 52, type: !13108, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13493)
!13493 = !{!13494}
!13494 = !DILocalVariable(name: "w", arg: 1, scope: !13492, file: !11655, line: 52, type: !2136)
!13495 = !DILocation(line: 0, scope: !13492)
!13496 = !DILocation(line: 54, column: 52, scope: !13492)
!13497 = !DILocation(line: 54, column: 28, scope: !13492)
!13498 = !DILocation(line: 54, column: 9, scope: !13492)
!13499 = !DILocation(line: 54, column: 2, scope: !13492)
!13500 = distinct !DISubprogram(name: "init_ready_q", scope: !2210, file: !2210, line: 1276, type: !13501, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13508)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{null, !13503}
!13503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13504, size: 32)
!13504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13505)
!13505 = !{!13506, !13507}
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13504, file: !247, line: 86, baseType: !2105, size: 32)
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13504, file: !247, line: 90, baseType: !2141, size: 64, offset: 32)
!13508 = !{!13509}
!13509 = !DILocalVariable(name: "rq", arg: 1, scope: !13500, file: !2210, line: 1276, type: !13503)
!13510 = !DILocation(line: 0, scope: !13500)
!13511 = !DILocation(line: 1289, column: 22, scope: !13500)
!13512 = !DILocation(line: 1289, column: 2, scope: !13500)
!13513 = !DILocation(line: 1291, column: 1, scope: !13500)
!13514 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13515, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13517)
!13515 = !DISubroutineType(types: !13516)
!13516 = !{null, !12260}
!13517 = !{!13518}
!13518 = !DILocalVariable(name: "list", arg: 1, scope: !13514, file: !221, line: 197, type: !12260)
!13519 = !DILocation(line: 0, scope: !13514)
!13520 = !DILocation(line: 199, column: 8, scope: !13514)
!13521 = !DILocation(line: 199, column: 13, scope: !13514)
!13522 = !DILocation(line: 200, column: 8, scope: !13514)
!13523 = !DILocation(line: 200, column: 13, scope: !13514)
!13524 = !DILocation(line: 201, column: 1, scope: !13514)
!13525 = distinct !DISubprogram(name: "z_sched_init", scope: !2210, file: !2210, line: 1293, type: !2821, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13526 = !DILocation(line: 1302, column: 2, scope: !13525)
!13527 = !DILocation(line: 1306, column: 2, scope: !13525)
!13528 = !DILocation(line: 1309, column: 1, scope: !13525)
!13529 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2210, file: !2210, line: 1311, type: !13530, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13533)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!103, !13532}
!13532 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2105)
!13533 = !{!13534}
!13534 = !DILocalVariable(name: "thread", arg: 1, scope: !13529, file: !2210, line: 1311, type: !13532)
!13535 = !DILocation(line: 0, scope: !13529)
!13536 = !DILocation(line: 1313, column: 22, scope: !13529)
!13537 = !DILocation(line: 1313, column: 9, scope: !13529)
!13538 = !DILocation(line: 1313, column: 2, scope: !13529)
!13539 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2210, file: !2210, line: 1325, type: !13540, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{null, !13532, !103}
!13542 = !{!13543, !13544, !13545}
!13543 = !DILocalVariable(name: "thread", arg: 1, scope: !13539, file: !2210, line: 1325, type: !13532)
!13544 = !DILocalVariable(name: "prio", arg: 2, scope: !13539, file: !2210, line: 1325, type: !103)
!13545 = !DILocalVariable(name: "th", scope: !13539, file: !2210, line: 1334, type: !2105)
!13546 = !DILocation(line: 0, scope: !13539)
!13547 = !DILocation(line: 1336, column: 2, scope: !13539)
!13548 = !DILocation(line: 1337, column: 1, scope: !13539)
!13549 = distinct !DISubprogram(name: "k_can_yield", scope: !2210, file: !2210, line: 1384, type: !5592, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13550 = !DILocation(line: 1386, column: 11, scope: !13549)
!13551 = !DILocation(line: 1386, column: 29, scope: !13549)
!13552 = !DILocation(line: 1386, column: 32, scope: !13549)
!13553 = !DILocation(line: 1386, column: 46, scope: !13549)
!13554 = !DILocation(line: 1387, column: 28, scope: !13549)
!13555 = !DILocation(line: 1387, column: 4, scope: !13549)
!13556 = !DILocation(line: 1386, column: 2, scope: !13549)
!13557 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !5592, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13558 = !DILocation(line: 993, column: 10, scope: !13557)
!13559 = !DILocation(line: 993, column: 2, scope: !13557)
!13560 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2210, file: !2210, line: 1390, type: !2821, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13561)
!13561 = !{!13562}
!13562 = !DILocalVariable(name: "key", scope: !13560, file: !2210, line: 1396, type: !12049)
!13563 = !DILocation(line: 0, scope: !12057, inlinedAt: !13564)
!13564 = distinct !DILocation(line: 1396, column: 25, scope: !13560)
!13565 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13566)
!13566 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13564)
!13567 = !DILocation(line: 0, scope: !12066, inlinedAt: !13566)
!13568 = !DILocation(line: 0, scope: !13560)
!13569 = !DILocation(line: 1400, column: 18, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !2210, line: 1399, column: 36)
!13571 = distinct !DILexicalBlock(scope: !13560, file: !2210, line: 1398, column: 6)
!13572 = !DILocation(line: 0, scope: !12226, inlinedAt: !13573)
!13573 = distinct !DILocation(line: 1400, column: 3, scope: !13570)
!13574 = !DILocation(line: 266, column: 15, scope: !12226, inlinedAt: !13573)
!13575 = !DILocation(line: 266, column: 28, scope: !12226, inlinedAt: !13573)
!13576 = !DILocation(line: 0, scope: !12234, inlinedAt: !13577)
!13577 = distinct !DILocation(line: 268, column: 3, scope: !12238, inlinedAt: !13573)
!13578 = !DILocation(line: 234, column: 2, scope: !12234, inlinedAt: !13577)
!13579 = !DILocation(line: 1402, column: 15, scope: !13560)
!13580 = !DILocation(line: 0, scope: !12243, inlinedAt: !13581)
!13581 = distinct !DILocation(line: 1402, column: 2, scope: !13560)
!13582 = !DILocation(line: 252, column: 15, scope: !12243, inlinedAt: !13581)
!13583 = !DILocation(line: 252, column: 28, scope: !12243, inlinedAt: !13581)
!13584 = !DILocation(line: 0, scope: !12250, inlinedAt: !13585)
!13585 = distinct !DILocation(line: 254, column: 3, scope: !12254, inlinedAt: !13581)
!13586 = !DILocation(line: 0, scope: !12257, inlinedAt: !13587)
!13587 = distinct !DILocation(line: 229, column: 2, scope: !12250, inlinedAt: !13585)
!13588 = !DILocation(line: 188, column: 2, scope: !12267, inlinedAt: !13587)
!13589 = !DILocation(line: 188, column: 2, scope: !12269, inlinedAt: !13587)
!13590 = !DILocation(line: 0, scope: !12267, inlinedAt: !13587)
!13591 = !DILocation(line: 189, column: 7, scope: !12272, inlinedAt: !13587)
!13592 = !DILocation(line: 189, column: 35, scope: !12272, inlinedAt: !13587)
!13593 = !DILocation(line: 189, column: 7, scope: !12273, inlinedAt: !13587)
!13594 = !DILocation(line: 191, column: 21, scope: !12277, inlinedAt: !13587)
!13595 = !DILocation(line: 190, column: 4, scope: !12277, inlinedAt: !13587)
!13596 = !DILocation(line: 192, column: 4, scope: !12277, inlinedAt: !13587)
!13597 = distinct !{!13597, !13588, !13598}
!13598 = !DILocation(line: 194, column: 2, scope: !12267, inlinedAt: !13587)
!13599 = !DILocation(line: 196, column: 37, scope: !12257, inlinedAt: !13587)
!13600 = !DILocation(line: 196, column: 2, scope: !12257, inlinedAt: !13587)
!13601 = !DILocation(line: 197, column: 1, scope: !12257, inlinedAt: !13587)
!13602 = !DILocation(line: 1403, column: 2, scope: !13560)
!13603 = !DILocation(line: 0, scope: !12668, inlinedAt: !13604)
!13604 = distinct !DILocation(line: 1404, column: 2, scope: !13560)
!13605 = !DILocation(line: 196, column: 9, scope: !12668, inlinedAt: !13604)
!13606 = !DILocation(line: 1405, column: 1, scope: !13560)
!13607 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2210, file: !2210, line: 1459, type: !13608, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13610)
!13608 = !DISubroutineType(types: !13609)
!13609 = !{!595, !12848}
!13610 = !{!13611, !13612, !13613}
!13611 = !DILocalVariable(name: "timeout", arg: 1, scope: !13607, file: !2210, line: 1459, type: !12848)
!13612 = !DILocalVariable(name: "ticks", scope: !13607, file: !2210, line: 1461, type: !1456)
!13613 = !DILocalVariable(name: "ret", scope: !13607, file: !2210, line: 1480, type: !595)
!13614 = !DILocation(line: 0, scope: !13607)
!13615 = !DILocation(line: 1468, column: 6, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13607, file: !2210, line: 1468, column: 6)
!13617 = !DILocation(line: 1468, column: 6, scope: !13607)
!13618 = !DILocation(line: 1469, column: 20, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13616, file: !2210, line: 1468, column: 40)
!13620 = !DILocation(line: 1469, column: 3, scope: !13619)
!13621 = !DILocation(line: 1473, column: 3, scope: !13619)
!13622 = !DILocation(line: 1478, column: 10, scope: !13607)
!13623 = !DILocation(line: 1480, column: 16, scope: !13607)
!13624 = !DILocation(line: 1485, column: 1, scope: !13607)
!13625 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3246, file: !3246, line: 310, type: !13626, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13628)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{null, !13532}
!13628 = !{!13629}
!13629 = !DILocalVariable(name: "thread", arg: 1, scope: !13625, file: !3246, line: 310, type: !13532)
!13630 = !DILocation(line: 0, scope: !13625)
!13631 = !DILocation(line: 319, column: 2, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13625, file: !3246, line: 319, column: 2)
!13633 = !{i64 2155104222}
!13634 = !DILocation(line: 320, column: 2, scope: !13625)
!13635 = !DILocation(line: 321, column: 1, scope: !13625)
!13636 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2210, file: !2210, line: 1415, type: !13637, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13639)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!595, !1456}
!13639 = !{!13640, !13641, !13642, !13643}
!13640 = !DILocalVariable(name: "ticks", arg: 1, scope: !13636, file: !2210, line: 1415, type: !1456)
!13641 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13636, file: !2210, line: 1418, type: !121)
!13642 = !DILocalVariable(name: "timeout", scope: !13636, file: !2210, line: 1430, type: !12848)
!13643 = !DILocalVariable(name: "key", scope: !13636, file: !2210, line: 1437, type: !12049)
!13644 = !DILocation(line: 0, scope: !13636)
!13645 = !DILocation(line: 1425, column: 12, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13636, file: !2210, line: 1425, column: 6)
!13647 = !DILocation(line: 1425, column: 6, scope: !13636)
!13648 = !DILocation(line: 1426, column: 3, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13646, file: !2210, line: 1425, column: 18)
!13650 = !DILocation(line: 1427, column: 3, scope: !13649)
!13651 = !DILocation(line: 1431, column: 24, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13636, file: !2210, line: 1431, column: 6)
!13653 = !DILocation(line: 1431, column: 6, scope: !13636)
!13654 = !DILocation(line: 1432, column: 35, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13652, file: !2210, line: 1431, column: 30)
!13656 = !DILocation(line: 1432, column: 27, scope: !13655)
!13657 = !DILocation(line: 1433, column: 2, scope: !13655)
!13658 = !DILocation(line: 1434, column: 27, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13652, file: !2210, line: 1433, column: 9)
!13660 = !DILocation(line: 0, scope: !13652)
!13661 = !DILocation(line: 0, scope: !12057, inlinedAt: !13662)
!13662 = distinct !DILocation(line: 1437, column: 25, scope: !13636)
!13663 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13664)
!13664 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13662)
!13665 = !DILocation(line: 0, scope: !12066, inlinedAt: !13664)
!13666 = !DILocation(line: 1440, column: 20, scope: !13636)
!13667 = !DILocation(line: 1440, column: 18, scope: !13636)
!13668 = !DILocation(line: 1442, column: 2, scope: !13636)
!13669 = !DILocation(line: 1443, column: 23, scope: !13636)
!13670 = !DILocation(line: 1443, column: 2, scope: !13636)
!13671 = !DILocation(line: 1444, column: 29, scope: !13636)
!13672 = !DILocation(line: 1444, column: 2, scope: !13636)
!13673 = !DILocation(line: 0, scope: !12668, inlinedAt: !13674)
!13674 = distinct !DILocation(line: 1446, column: 8, scope: !13636)
!13675 = !DILocation(line: 196, column: 9, scope: !12668, inlinedAt: !13674)
!13676 = !DILocation(line: 1450, column: 10, scope: !13636)
!13677 = !DILocation(line: 1450, column: 45, scope: !13636)
!13678 = !DILocation(line: 1450, column: 43, scope: !13636)
!13679 = !DILocation(line: 1451, column: 6, scope: !13636)
!13680 = !DILocation(line: 1457, column: 1, scope: !13636)
!13681 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11890, file: !11890, line: 1103, type: !11891, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13682)
!13682 = !{!13683}
!13683 = !DILocalVariable(name: "t", arg: 1, scope: !13681, file: !11890, line: 1103, type: !1308)
!13684 = !DILocation(line: 0, scope: !13681)
!13685 = !DILocation(line: 0, scope: !12104, inlinedAt: !13686)
!13686 = distinct !DILocation(line: 1106, column: 9, scope: !13681)
!13687 = !DILocation(line: 139, column: 13, scope: !13688, inlinedAt: !13686)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !11890, line: 138, column: 10)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !11890, line: 136, column: 7)
!13690 = distinct !DILexicalBlock(scope: !12125, file: !11890, line: 134, column: 17)
!13691 = !DILocation(line: 1106, column: 2, scope: !13681)
!13692 = distinct !DISubprogram(name: "k_yield", scope: !3246, file: !3246, line: 140, type: !2821, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13693 = !DILocation(line: 148, column: 2, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13692, file: !3246, line: 148, column: 2)
!13695 = !{i64 2155103542}
!13696 = !DILocation(line: 149, column: 2, scope: !13692)
!13697 = !DILocation(line: 150, column: 1, scope: !13692)
!13698 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2210, file: !2210, line: 1495, type: !13699, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13701)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{!595, !103}
!13701 = !{!13702, !13703}
!13702 = !DILocalVariable(name: "us", arg: 1, scope: !13698, file: !2210, line: 1495, type: !103)
!13703 = !DILocalVariable(name: "ticks", scope: !13698, file: !2210, line: 1497, type: !595)
!13704 = !DILocation(line: 0, scope: !13698)
!13705 = !DILocation(line: 1501, column: 31, scope: !13698)
!13706 = !DILocation(line: 1501, column: 10, scope: !13698)
!13707 = !DILocation(line: 1502, column: 23, scope: !13698)
!13708 = !DILocation(line: 1502, column: 10, scope: !13698)
!13709 = !DILocation(line: 1506, column: 31, scope: !13698)
!13710 = !DILocation(line: 1506, column: 9, scope: !13698)
!13711 = !DILocation(line: 1506, column: 2, scope: !13698)
!13712 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11890, file: !11890, line: 571, type: !11891, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13713)
!13713 = !{!13714}
!13714 = !DILocalVariable(name: "t", arg: 1, scope: !13712, file: !11890, line: 571, type: !1308)
!13715 = !DILocation(line: 0, scope: !13712)
!13716 = !DILocation(line: 0, scope: !12104, inlinedAt: !13717)
!13717 = distinct !DILocation(line: 574, column: 9, scope: !13712)
!13718 = !DILocation(line: 135, column: 5, scope: !13690, inlinedAt: !13717)
!13719 = !DILocation(line: 139, column: 13, scope: !13688, inlinedAt: !13717)
!13720 = !DILocation(line: 574, column: 2, scope: !13712)
!13721 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11890, file: !11890, line: 1187, type: !11891, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13722)
!13722 = !{!13723}
!13723 = !DILocalVariable(name: "t", arg: 1, scope: !13721, file: !11890, line: 1187, type: !1308)
!13724 = !DILocation(line: 0, scope: !13721)
!13725 = !DILocation(line: 0, scope: !12104, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 1190, column: 9, scope: !13721)
!13727 = !DILocation(line: 145, column: 13, scope: !13728, inlinedAt: !13726)
!13728 = distinct !DILexicalBlock(scope: !12122, file: !11890, line: 144, column: 10)
!13729 = !DILocation(line: 1190, column: 2, scope: !13721)
!13730 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2210, file: !2210, line: 1517, type: !13626, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13731)
!13731 = !{!13732}
!13732 = !DILocalVariable(name: "thread", arg: 1, scope: !13730, file: !2210, line: 1517, type: !13532)
!13733 = !DILocation(line: 0, scope: !13730)
!13734 = !DILocation(line: 1521, column: 6, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13730, file: !2210, line: 1521, column: 6)
!13736 = !DILocation(line: 1521, column: 6, scope: !13730)
!13737 = !DILocation(line: 1525, column: 6, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13730, file: !2210, line: 1525, column: 6)
!13739 = !DILocation(line: 1525, column: 37, scope: !13738)
!13740 = !DILocation(line: 1525, column: 6, scope: !13730)
!13741 = !DILocation(line: 1527, column: 20, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13743, file: !2210, line: 1527, column: 7)
!13743 = distinct !DILexicalBlock(scope: !13738, file: !2210, line: 1525, column: 42)
!13744 = !DILocation(line: 1527, column: 33, scope: !13742)
!13745 = !DILocation(line: 1527, column: 7, scope: !13743)
!13746 = !DILocation(line: 1532, column: 2, scope: !13730)
!13747 = !DILocation(line: 1533, column: 2, scope: !13730)
!13748 = !DILocation(line: 1031, column: 3, scope: !12701, inlinedAt: !13749)
!13749 = distinct !DILocation(line: 48, column: 10, scope: !12705, inlinedAt: !13750)
!13750 = distinct !DILocation(line: 1537, column: 7, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13730, file: !2210, line: 1537, column: 6)
!13752 = !DILocation(line: 0, scope: !12701, inlinedAt: !13749)
!13753 = !DILocation(line: 48, column: 9, scope: !12705, inlinedAt: !13750)
!13754 = !DILocation(line: 1537, column: 6, scope: !13730)
!13755 = !DILocation(line: 1538, column: 3, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13751, file: !2210, line: 1537, column: 25)
!13757 = !DILocation(line: 1539, column: 2, scope: !13756)
!13758 = !DILocation(line: 1540, column: 1, scope: !13730)
!13759 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11329, file: !11329, line: 101, type: !12175, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13760)
!13760 = !{!13761}
!13761 = !DILocalVariable(name: "thread", arg: 1, scope: !13759, file: !11329, line: 101, type: !2105)
!13762 = !DILocation(line: 0, scope: !13759)
!13763 = !DILocation(line: 103, column: 23, scope: !13759)
!13764 = !DILocation(line: 103, column: 36, scope: !13759)
!13765 = !DILocation(line: 103, column: 55, scope: !13759)
!13766 = !DILocation(line: 103, column: 2, scope: !13759)
!13767 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2210, file: !2210, line: 1567, type: !13768, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13770)
!13768 = !DISubroutineType(types: !13769)
!13769 = !{!13532}
!13770 = !{!13771}
!13771 = !DILocalVariable(name: "ret", scope: !13767, file: !2210, line: 1577, type: !13532)
!13772 = !DILocation(line: 1577, column: 30, scope: !13767)
!13773 = !DILocation(line: 0, scope: !13767)
!13774 = !DILocation(line: 1582, column: 2, scope: !13767)
!13775 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2210, file: !2210, line: 1593, type: !5867, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13776 = !DILocation(line: 1031, column: 3, scope: !12701, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 48, column: 10, scope: !12705, inlinedAt: !13778)
!13778 = distinct !DILocation(line: 1595, column: 10, scope: !13775)
!13779 = !DILocation(line: 0, scope: !12701, inlinedAt: !13777)
!13780 = !DILocation(line: 48, column: 9, scope: !12705, inlinedAt: !13778)
!13781 = !DILocation(line: 1595, column: 27, scope: !13775)
!13782 = !DILocation(line: 1595, column: 41, scope: !13775)
!13783 = !DILocation(line: 1595, column: 30, scope: !13775)
!13784 = !DILocation(line: 1595, column: 2, scope: !13775)
!13785 = distinct !DISubprogram(name: "z_thread_abort", scope: !2210, file: !2210, line: 1725, type: !12015, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13786)
!13786 = !{!13787, !13788}
!13787 = !DILocalVariable(name: "thread", arg: 1, scope: !13785, file: !2210, line: 1725, type: !2105)
!13788 = !DILocalVariable(name: "key", scope: !13785, file: !2210, line: 1727, type: !12049)
!13789 = !DILocation(line: 0, scope: !13785)
!13790 = !DILocation(line: 0, scope: !12057, inlinedAt: !13791)
!13791 = distinct !DILocation(line: 1727, column: 25, scope: !13785)
!13792 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13791)
!13794 = !DILocation(line: 0, scope: !12066, inlinedAt: !13793)
!13795 = !DILocation(line: 1729, column: 20, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13785, file: !2210, line: 1729, column: 6)
!13797 = !DILocation(line: 1729, column: 33, scope: !13796)
!13798 = !DILocation(line: 1729, column: 48, scope: !13796)
!13799 = !DILocation(line: 1729, column: 6, scope: !13785)
!13800 = !DILocation(line: 0, scope: !12084, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 1730, column: 3, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13796, file: !2210, line: 1729, column: 54)
!13803 = !DILocation(line: 0, scope: !12092, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13801)
!13805 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13804)
!13806 = !DILocation(line: 1732, column: 3, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13802, file: !2210, line: 1732, column: 3)
!13808 = !{i64 2155840952, i64 2155840968, i64 2155840994, i64 2155841022, i64 2155841042}
!13809 = !DILocation(line: 1733, column: 3, scope: !13802)
!13810 = !DILocation(line: 1736, column: 20, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13785, file: !2210, line: 1736, column: 6)
!13812 = !DILocation(line: 1736, column: 33, scope: !13811)
!13813 = !DILocation(line: 1736, column: 49, scope: !13811)
!13814 = !DILocation(line: 1736, column: 6, scope: !13785)
!13815 = !DILocation(line: 0, scope: !12084, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 1737, column: 3, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13811, file: !2210, line: 1736, column: 56)
!13818 = !DILocation(line: 0, scope: !12092, inlinedAt: !13819)
!13819 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13816)
!13820 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13819)
!13821 = !DILocation(line: 1738, column: 3, scope: !13817)
!13822 = !DILocation(line: 1775, column: 2, scope: !13785)
!13823 = !DILocation(line: 1776, column: 16, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13785, file: !2210, line: 1776, column: 6)
!13825 = !DILocation(line: 1776, column: 13, scope: !13824)
!13826 = !DILocation(line: 1776, column: 25, scope: !13824)
!13827 = !DILocation(line: 1031, column: 3, scope: !12701, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 48, column: 10, scope: !12705, inlinedAt: !13829)
!13829 = distinct !DILocation(line: 1776, column: 29, scope: !13824)
!13830 = !DILocation(line: 0, scope: !12701, inlinedAt: !13828)
!13831 = !DILocation(line: 48, column: 9, scope: !12705, inlinedAt: !13829)
!13832 = !DILocation(line: 1776, column: 6, scope: !13785)
!13833 = !DILocation(line: 0, scope: !12668, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 1777, column: 3, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13824, file: !2210, line: 1776, column: 47)
!13836 = !DILocation(line: 196, column: 9, scope: !12668, inlinedAt: !13834)
!13837 = !DILocation(line: 1779, column: 2, scope: !13835)
!13838 = !DILocation(line: 0, scope: !12084, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 1780, column: 2, scope: !13785)
!13840 = !DILocation(line: 0, scope: !12092, inlinedAt: !13841)
!13841 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13839)
!13842 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13841)
!13843 = !DILocation(line: 1781, column: 1, scope: !13785)
!13844 = distinct !DISubprogram(name: "end_thread", scope: !2210, file: !2210, line: 1690, type: !12015, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13845)
!13845 = !{!13846}
!13846 = !DILocalVariable(name: "thread", arg: 1, scope: !13844, file: !2210, line: 1690, type: !2105)
!13847 = !DILocation(line: 0, scope: !13844)
!13848 = !DILocation(line: 1695, column: 20, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13844, file: !2210, line: 1695, column: 6)
!13850 = !DILocation(line: 1695, column: 33, scope: !13849)
!13851 = !DILocation(line: 1695, column: 49, scope: !13849)
!13852 = !DILocation(line: 1695, column: 6, scope: !13844)
!13853 = !DILocation(line: 1697, column: 29, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13849, file: !2210, line: 1695, column: 56)
!13855 = !DILocation(line: 1698, column: 7, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13854, file: !2210, line: 1698, column: 7)
!13857 = !DILocation(line: 1698, column: 7, scope: !13854)
!13858 = !DILocation(line: 0, scope: !12226, inlinedAt: !13859)
!13859 = distinct !DILocation(line: 1699, column: 4, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13856, file: !2210, line: 1698, column: 35)
!13861 = !DILocation(line: 266, column: 28, scope: !12226, inlinedAt: !13859)
!13862 = !DILocation(line: 0, scope: !12234, inlinedAt: !13863)
!13863 = distinct !DILocation(line: 268, column: 3, scope: !12238, inlinedAt: !13859)
!13864 = !DILocation(line: 234, column: 2, scope: !12234, inlinedAt: !13863)
!13865 = !DILocation(line: 1700, column: 3, scope: !13860)
!13866 = !DILocation(line: 1701, column: 20, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13854, file: !2210, line: 1701, column: 7)
!13868 = !DILocation(line: 1701, column: 30, scope: !13867)
!13869 = !DILocation(line: 1701, column: 7, scope: !13854)
!13870 = !DILocation(line: 1702, column: 4, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13867, file: !2210, line: 1701, column: 39)
!13872 = !DILocation(line: 1703, column: 3, scope: !13871)
!13873 = !DILocation(line: 1704, column: 9, scope: !13854)
!13874 = !DILocation(line: 1705, column: 23, scope: !13854)
!13875 = !DILocation(line: 1705, column: 3, scope: !13854)
!13876 = !DILocation(line: 1706, column: 3, scope: !13854)
!13877 = !DILocation(line: 1722, column: 2, scope: !13854)
!13878 = !DILocation(line: 1723, column: 1, scope: !13844)
!13879 = distinct !DISubprogram(name: "unpend_all", scope: !2210, file: !2210, line: 1674, type: !13880, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13882)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{null, !2136}
!13882 = !{!13883, !13884}
!13883 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13879, file: !2210, line: 1674, type: !2136)
!13884 = !DILocalVariable(name: "thread", scope: !13879, file: !2210, line: 1676, type: !2105)
!13885 = !DILocation(line: 0, scope: !13879)
!13886 = !DILocation(line: 1678, column: 19, scope: !13879)
!13887 = !DILocation(line: 1678, column: 41, scope: !13879)
!13888 = !DILocation(line: 1678, column: 2, scope: !13879)
!13889 = !DILocation(line: 1679, column: 3, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13879, file: !2210, line: 1678, column: 50)
!13891 = !DILocation(line: 1680, column: 9, scope: !13890)
!13892 = !DILocalVariable(name: "thread", arg: 1, scope: !13893, file: !11349, line: 65, type: !2105)
!13893 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11349, file: !11349, line: 65, type: !13894, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13896)
!13894 = !DISubroutineType(types: !13895)
!13895 = !{null, !2105, !32}
!13896 = !{!13892, !13897}
!13897 = !DILocalVariable(name: "value", arg: 2, scope: !13893, file: !11349, line: 65, type: !32)
!13898 = !DILocation(line: 0, scope: !13893, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 1681, column: 3, scope: !13890)
!13900 = !DILocation(line: 67, column: 15, scope: !13893, inlinedAt: !13899)
!13901 = !DILocation(line: 67, column: 33, scope: !13893, inlinedAt: !13899)
!13902 = !DILocation(line: 1682, column: 3, scope: !13890)
!13903 = distinct !{!13903, !13888, !13904}
!13904 = !DILocation(line: 1683, column: 2, scope: !13879)
!13905 = !DILocation(line: 1684, column: 1, scope: !13879)
!13906 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2210, file: !2210, line: 1794, type: !13907, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13909)
!13907 = !DISubroutineType(types: !13908)
!13908 = !{!103, !2105, !12848}
!13909 = !{!13910, !13911, !13912, !13913}
!13910 = !DILocalVariable(name: "thread", arg: 1, scope: !13906, file: !2210, line: 1794, type: !2105)
!13911 = !DILocalVariable(name: "timeout", arg: 2, scope: !13906, file: !2210, line: 1794, type: !12848)
!13912 = !DILocalVariable(name: "key", scope: !13906, file: !2210, line: 1796, type: !12049)
!13913 = !DILocalVariable(name: "ret", scope: !13906, file: !2210, line: 1797, type: !103)
!13914 = !DILocation(line: 0, scope: !13906)
!13915 = !DILocation(line: 0, scope: !12057, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 1796, column: 25, scope: !13906)
!13917 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13918)
!13918 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13916)
!13919 = !DILocation(line: 0, scope: !12066, inlinedAt: !13918)
!13920 = !DILocation(line: 1801, column: 20, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13906, file: !2210, line: 1801, column: 6)
!13922 = !DILocation(line: 1801, column: 33, scope: !13921)
!13923 = !DILocation(line: 1801, column: 49, scope: !13921)
!13924 = !DILocation(line: 1801, column: 6, scope: !13906)
!13925 = !DILocation(line: 1803, column: 13, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13921, file: !2210, line: 1803, column: 13)
!13927 = !DILocation(line: 1803, column: 13, scope: !13921)
!13928 = !DILocation(line: 1805, column: 24, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13926, file: !2210, line: 1805, column: 13)
!13930 = !DILocation(line: 1805, column: 21, scope: !13929)
!13931 = !DILocation(line: 1805, column: 34, scope: !13929)
!13932 = !DILocation(line: 1806, column: 20, scope: !13929)
!13933 = !DILocation(line: 1806, column: 44, scope: !13929)
!13934 = !DILocation(line: 1806, column: 30, scope: !13929)
!13935 = !DILocation(line: 1805, column: 13, scope: !13926)
!13936 = !DILocation(line: 1810, column: 42, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13929, file: !2210, line: 1808, column: 9)
!13938 = !DILocation(line: 1810, column: 3, scope: !13937)
!13939 = !DILocation(line: 1811, column: 22, scope: !13937)
!13940 = !DILocation(line: 1811, column: 3, scope: !13937)
!13941 = !DILocation(line: 0, scope: !12668, inlinedAt: !13942)
!13942 = distinct !DILocation(line: 1814, column: 9, scope: !13937)
!13943 = !DILocation(line: 196, column: 9, scope: !12668, inlinedAt: !13942)
!13944 = !DILocation(line: 1817, column: 3, scope: !13937)
!13945 = !DILocation(line: 0, scope: !13921)
!13946 = !DILocation(line: 0, scope: !12084, inlinedAt: !13947)
!13947 = distinct !DILocation(line: 1822, column: 2, scope: !13906)
!13948 = !DILocation(line: 0, scope: !12092, inlinedAt: !13949)
!13949 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !13947)
!13950 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !13949)
!13951 = !DILocation(line: 1823, column: 2, scope: !13906)
!13952 = !DILocation(line: 1824, column: 1, scope: !13906)
!13953 = distinct !DISubprogram(name: "z_sched_wake", scope: !2210, file: !2210, line: 1882, type: !13954, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13956)
!13954 = !DISubroutineType(types: !13955)
!13955 = !{!157, !2136, !103, !102}
!13956 = !{!13957, !13958, !13959, !13960, !13961, !13962, !13964}
!13957 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13953, file: !2210, line: 1882, type: !2136)
!13958 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13953, file: !2210, line: 1882, type: !103)
!13959 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13953, file: !2210, line: 1882, type: !102)
!13960 = !DILocalVariable(name: "thread", scope: !13953, file: !2210, line: 1884, type: !2105)
!13961 = !DILocalVariable(name: "ret", scope: !13953, file: !2210, line: 1885, type: !157)
!13962 = !DILocalVariable(name: "__i", scope: !13963, file: !2210, line: 1887, type: !12049)
!13963 = distinct !DILexicalBlock(scope: !13953, file: !2210, line: 1887, column: 2)
!13964 = !DILocalVariable(name: "__key", scope: !13963, file: !2210, line: 1887, type: !12049)
!13965 = !DILocation(line: 0, scope: !13953)
!13966 = !DILocation(line: 0, scope: !13963)
!13967 = !DILocation(line: 0, scope: !12057, inlinedAt: !13968)
!13968 = distinct !DILocation(line: 1887, column: 2, scope: !13963)
!13969 = !DILocation(line: 55, column: 2, scope: !12066, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 145, column: 10, scope: !12057, inlinedAt: !13968)
!13971 = !DILocation(line: 0, scope: !12066, inlinedAt: !13970)
!13972 = !DILocation(line: 1888, column: 12, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13974, file: !2210, line: 1887, column: 26)
!13974 = distinct !DILexicalBlock(scope: !13963, file: !2210, line: 1887, column: 2)
!13975 = !DILocation(line: 1890, column: 14, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13973, file: !2210, line: 1890, column: 7)
!13977 = !DILocation(line: 1890, column: 7, scope: !13973)
!13978 = !DILocalVariable(name: "thread", arg: 1, scope: !13979, file: !13980, line: 134, type: !2105)
!13979 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13980, file: !13980, line: 134, type: !13981, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13983)
!13980 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13981 = !DISubroutineType(types: !13982)
!13982 = !{null, !2105, !32, !102}
!13983 = !{!13978, !13984, !13985}
!13984 = !DILocalVariable(name: "value", arg: 2, scope: !13979, file: !13980, line: 135, type: !32)
!13985 = !DILocalVariable(name: "data", arg: 3, scope: !13979, file: !13980, line: 136, type: !102)
!13986 = !DILocation(line: 0, scope: !13979, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 1891, column: 4, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13976, file: !2210, line: 1890, column: 23)
!13989 = !DILocation(line: 0, scope: !13893, inlinedAt: !13990)
!13990 = distinct !DILocation(line: 138, column: 2, scope: !13979, inlinedAt: !13987)
!13991 = !DILocation(line: 67, column: 15, scope: !13893, inlinedAt: !13990)
!13992 = !DILocation(line: 67, column: 33, scope: !13893, inlinedAt: !13990)
!13993 = !DILocation(line: 139, column: 15, scope: !13979, inlinedAt: !13987)
!13994 = !DILocation(line: 139, column: 25, scope: !13979, inlinedAt: !13987)
!13995 = !DILocation(line: 1894, column: 4, scope: !13988)
!13996 = !DILocation(line: 1895, column: 10, scope: !13988)
!13997 = !DILocation(line: 1896, column: 4, scope: !13988)
!13998 = !DILocation(line: 1898, column: 3, scope: !13988)
!13999 = !DILocation(line: 0, scope: !12084, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 1887, column: 2, scope: !13974)
!14001 = !DILocation(line: 0, scope: !12092, inlinedAt: !14002)
!14002 = distinct !DILocation(line: 215, column: 2, scope: !12084, inlinedAt: !14000)
!14003 = !DILocation(line: 95, column: 2, scope: !12092, inlinedAt: !14002)
!14004 = !DILocation(line: 1901, column: 2, scope: !13953)
!14005 = distinct !DISubprogram(name: "z_sched_wait", scope: !2210, file: !2210, line: 1904, type: !14006, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14009)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{!103, !12060, !12049, !2136, !12848, !14008}
!14008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14009 = !{!14010, !14011, !14012, !14013, !14014, !14015}
!14010 = !DILocalVariable(name: "lock", arg: 1, scope: !14005, file: !2210, line: 1904, type: !12060)
!14011 = !DILocalVariable(name: "key", arg: 2, scope: !14005, file: !2210, line: 1904, type: !12049)
!14012 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14005, file: !2210, line: 1905, type: !2136)
!14013 = !DILocalVariable(name: "timeout", arg: 4, scope: !14005, file: !2210, line: 1905, type: !12848)
!14014 = !DILocalVariable(name: "data", arg: 5, scope: !14005, file: !2210, line: 1905, type: !14008)
!14015 = !DILocalVariable(name: "ret", scope: !14005, file: !2210, line: 1907, type: !103)
!14016 = !DILocation(line: 0, scope: !14005)
!14017 = !DILocation(line: 1907, column: 12, scope: !14005)
!14018 = !DILocation(line: 1909, column: 11, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !14005, file: !2210, line: 1909, column: 6)
!14020 = !DILocation(line: 1909, column: 6, scope: !14005)
!14021 = !DILocation(line: 1910, column: 11, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14019, file: !2210, line: 1909, column: 20)
!14023 = !DILocation(line: 1910, column: 26, scope: !14022)
!14024 = !DILocation(line: 1910, column: 9, scope: !14022)
!14025 = !DILocation(line: 1911, column: 2, scope: !14022)
!14026 = !DILocation(line: 1912, column: 2, scope: !14005)
!14027 = distinct !DISubprogram(name: "z_data_copy", scope: !14028, file: !14028, line: 22, type: !2821, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !322)
!14028 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14029 = !DILocation(line: 24, column: 2, scope: !14027)
!14030 = !DILocation(line: 27, column: 2, scope: !14027)
!14031 = !DILocation(line: 71, column: 1, scope: !14027)
!14032 = distinct !DISubprogram(name: "z_add_timeout", scope: !2247, file: !2247, line: 88, type: !14033, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14039)
!14033 = !DISubroutineType(types: !14034)
!14034 = !{null, !2220, !2239, !14035}
!14035 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !14036)
!14036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !14037)
!14037 = !{!14038}
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14036, file: !1457, line: 66, baseType: !1456, size: 64)
!14039 = !{!14040, !14041, !14042, !14043, !14049, !14050, !14053, !14056}
!14040 = !DILocalVariable(name: "to", arg: 1, scope: !14032, file: !2247, line: 88, type: !2220)
!14041 = !DILocalVariable(name: "fn", arg: 2, scope: !14032, file: !2247, line: 88, type: !2239)
!14042 = !DILocalVariable(name: "timeout", arg: 3, scope: !14032, file: !2247, line: 89, type: !14035)
!14043 = !DILocalVariable(name: "__i", scope: !14044, file: !2247, line: 102, type: !14045)
!14044 = distinct !DILexicalBlock(scope: !14032, file: !2247, line: 102, column: 2)
!14045 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !14046)
!14046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !14047)
!14047 = !{!14048}
!14048 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14046, file: !321, line: 33, baseType: !103, size: 32)
!14049 = !DILocalVariable(name: "__key", scope: !14044, file: !2247, line: 102, type: !14045)
!14050 = !DILocalVariable(name: "t", scope: !14051, file: !2247, line: 103, type: !2220)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !2247, line: 102, column: 24)
!14052 = distinct !DILexicalBlock(scope: !14044, file: !2247, line: 102, column: 2)
!14053 = !DILocalVariable(name: "ticks", scope: !14054, file: !2247, line: 107, type: !1456)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2247, line: 106, column: 39)
!14055 = distinct !DILexicalBlock(scope: !14051, file: !2247, line: 105, column: 7)
!14056 = !DILocalVariable(name: "next_time", scope: !14057, file: !2247, line: 137, type: !595)
!14057 = distinct !DILexicalBlock(scope: !14058, file: !2247, line: 127, column: 22)
!14058 = distinct !DILexicalBlock(scope: !14051, file: !2247, line: 127, column: 7)
!14059 = !DILocation(line: 0, scope: !14032)
!14060 = !DILocation(line: 91, column: 6, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14032, file: !2247, line: 91, column: 6)
!14062 = !DILocation(line: 91, column: 6, scope: !14032)
!14063 = !DILocation(line: 100, column: 6, scope: !14032)
!14064 = !DILocation(line: 100, column: 9, scope: !14032)
!14065 = !DILocation(line: 0, scope: !14044)
!14066 = !DILocalVariable(name: "l", arg: 1, scope: !14067, file: !321, line: 136, type: !14070)
!14067 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !14068, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14071)
!14068 = !DISubroutineType(types: !14069)
!14069 = !{!14045, !14070}
!14070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!14071 = !{!14066, !14072}
!14072 = !DILocalVariable(name: "k", scope: !14067, file: !321, line: 139, type: !14045)
!14073 = !DILocation(line: 0, scope: !14067, inlinedAt: !14074)
!14074 = distinct !DILocation(line: 102, column: 2, scope: !14044)
!14075 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14080)
!14076 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4623, file: !4623, line: 42, type: !4624, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14077)
!14077 = !{!14078, !14079}
!14078 = !DILocalVariable(name: "key", scope: !14076, file: !4623, line: 44, type: !32)
!14079 = !DILocalVariable(name: "tmp", scope: !14076, file: !4623, line: 53, type: !32)
!14080 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14074)
!14081 = !{i64 2283717}
!14082 = !DILocation(line: 0, scope: !14076, inlinedAt: !14080)
!14083 = !DILocation(line: 106, column: 33, scope: !14055)
!14084 = !DILocation(line: 105, column: 7, scope: !14051)
!14085 = !DILocation(line: 107, column: 50, scope: !14054)
!14086 = !DILocation(line: 107, column: 48, scope: !14054)
!14087 = !DILocation(line: 0, scope: !14054)
!14088 = !DILocation(line: 109, column: 17, scope: !14054)
!14089 = !DILocation(line: 110, column: 3, scope: !14054)
!14090 = !DILocation(line: 111, column: 31, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14055, file: !2247, line: 110, column: 10)
!14092 = !DILocation(line: 111, column: 37, scope: !14091)
!14093 = !DILocation(line: 111, column: 35, scope: !14091)
!14094 = !DILocation(line: 0, scope: !14055)
!14095 = !DILocation(line: 109, column: 8, scope: !14054)
!14096 = !DILocation(line: 109, column: 15, scope: !14054)
!14097 = !DILocation(line: 114, column: 12, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14051, file: !2247, line: 114, column: 3)
!14099 = !DILocation(line: 0, scope: !14051)
!14100 = !DILocation(line: 114, column: 3, scope: !14098)
!14101 = !DILocation(line: 115, column: 24, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !2247, line: 115, column: 8)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !2247, line: 114, column: 45)
!14104 = distinct !DILexicalBlock(scope: !14098, file: !2247, line: 114, column: 3)
!14105 = !DILocation(line: 115, column: 11, scope: !14102)
!14106 = !DILocation(line: 115, column: 18, scope: !14102)
!14107 = !DILocation(line: 115, column: 8, scope: !14103)
!14108 = !DILocation(line: 116, column: 15, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14102, file: !2247, line: 115, column: 32)
!14110 = !DILocation(line: 117, column: 26, scope: !14109)
!14111 = !DILocation(line: 117, column: 37, scope: !14109)
!14112 = !DILocation(line: 117, column: 5, scope: !14109)
!14113 = !DILocation(line: 123, column: 7, scope: !14051)
!14114 = !DILocation(line: 120, column: 15, scope: !14103)
!14115 = !DILocation(line: 114, column: 36, scope: !14104)
!14116 = distinct !{!14116, !14100, !14117}
!14117 = !DILocation(line: 121, column: 3, scope: !14098)
!14118 = !DILocation(line: 124, column: 41, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14120, file: !2247, line: 123, column: 18)
!14120 = distinct !DILexicalBlock(scope: !14051, file: !2247, line: 123, column: 7)
!14121 = !DILocation(line: 124, column: 4, scope: !14119)
!14122 = !DILocation(line: 125, column: 3, scope: !14119)
!14123 = !DILocation(line: 127, column: 13, scope: !14058)
!14124 = !DILocation(line: 127, column: 10, scope: !14058)
!14125 = !DILocation(line: 127, column: 7, scope: !14051)
!14126 = !DILocation(line: 137, column: 24, scope: !14057)
!14127 = !DILocation(line: 0, scope: !14057)
!14128 = !DILocation(line: 139, column: 18, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14057, file: !2247, line: 139, column: 8)
!14130 = !DILocation(line: 139, column: 23, scope: !14129)
!14131 = !DILocation(line: 141, column: 5, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14129, file: !2247, line: 140, column: 48)
!14133 = !DILocation(line: 142, column: 4, scope: !14132)
!14134 = !DILocalVariable(name: "key", arg: 2, scope: !14135, file: !321, line: 190, type: !14045)
!14135 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !14136, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14138)
!14136 = !DISubroutineType(types: !14137)
!14137 = !{null, !14070, !14045}
!14138 = !{!14139, !14134}
!14139 = !DILocalVariable(name: "l", arg: 1, scope: !14135, file: !321, line: 189, type: !14070)
!14140 = !DILocation(line: 0, scope: !14135, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 102, column: 2, scope: !14052)
!14142 = !DILocalVariable(name: "key", arg: 1, scope: !14143, file: !4623, line: 84, type: !32)
!14143 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4623, file: !4623, line: 84, type: !4634, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14144)
!14144 = !{!14142}
!14145 = !DILocation(line: 0, scope: !14143, inlinedAt: !14146)
!14146 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14141)
!14147 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14146)
!14148 = !{i64 2284534}
!14149 = !DILocation(line: 148, column: 1, scope: !14032)
!14150 = distinct !DISubprogram(name: "elapsed", scope: !2247, file: !2247, line: 62, type: !14151, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14151 = !DISubroutineType(types: !14152)
!14152 = !{!595}
!14153 = !DILocation(line: 64, column: 9, scope: !14150)
!14154 = !DILocation(line: 64, column: 28, scope: !14150)
!14155 = !DILocation(line: 64, column: 35, scope: !14150)
!14156 = !DILocation(line: 64, column: 2, scope: !14150)
!14157 = distinct !DISubprogram(name: "first", scope: !2247, file: !2247, line: 39, type: !14158, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14160)
!14158 = !DISubroutineType(types: !14159)
!14159 = !{!2220}
!14160 = !{!14161}
!14161 = !DILocalVariable(name: "t", scope: !14157, file: !2247, line: 41, type: !14162)
!14162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!14163 = !DILocation(line: 41, column: 19, scope: !14157)
!14164 = !DILocation(line: 0, scope: !14157)
!14165 = !DILocation(line: 43, column: 9, scope: !14157)
!14166 = !DILocation(line: 43, column: 2, scope: !14157)
!14167 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !14168, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14170)
!14168 = !DISubroutineType(types: !14169)
!14169 = !{null, !14162, !14162}
!14170 = !{!14171, !14172, !14173}
!14171 = !DILocalVariable(name: "successor", arg: 1, scope: !14167, file: !221, line: 443, type: !14162)
!14172 = !DILocalVariable(name: "node", arg: 2, scope: !14167, file: !221, line: 443, type: !14162)
!14173 = !DILocalVariable(name: "prev", scope: !14167, file: !221, line: 445, type: !14174)
!14174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14162)
!14175 = !DILocation(line: 0, scope: !14167)
!14176 = !DILocation(line: 445, column: 39, scope: !14167)
!14177 = !DILocation(line: 447, column: 8, scope: !14167)
!14178 = !DILocation(line: 447, column: 13, scope: !14167)
!14179 = !DILocation(line: 448, column: 8, scope: !14167)
!14180 = !DILocation(line: 448, column: 13, scope: !14167)
!14181 = !DILocation(line: 449, column: 8, scope: !14167)
!14182 = !DILocation(line: 449, column: 13, scope: !14167)
!14183 = !DILocation(line: 450, column: 18, scope: !14167)
!14184 = !DILocation(line: 451, column: 1, scope: !14167)
!14185 = distinct !DISubprogram(name: "next", scope: !2247, file: !2247, line: 46, type: !14186, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14188)
!14186 = !DISubroutineType(types: !14187)
!14187 = !{!2220, !2220}
!14188 = !{!14189, !14190}
!14189 = !DILocalVariable(name: "t", arg: 1, scope: !14185, file: !2247, line: 46, type: !2220)
!14190 = !DILocalVariable(name: "n", scope: !14185, file: !2247, line: 48, type: !14162)
!14191 = !DILocation(line: 0, scope: !14185)
!14192 = !DILocation(line: 48, column: 58, scope: !14185)
!14193 = !DILocation(line: 48, column: 19, scope: !14185)
!14194 = !DILocation(line: 50, column: 9, scope: !14185)
!14195 = !DILocation(line: 50, column: 2, scope: !14185)
!14196 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !14197, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14200)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{null, !14199, !14162}
!14199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!14200 = !{!14201, !14202, !14203}
!14201 = !DILocalVariable(name: "list", arg: 1, scope: !14196, file: !221, line: 404, type: !14199)
!14202 = !DILocalVariable(name: "node", arg: 2, scope: !14196, file: !221, line: 404, type: !14162)
!14203 = !DILocalVariable(name: "tail", scope: !14196, file: !221, line: 406, type: !14174)
!14204 = !DILocation(line: 0, scope: !14196)
!14205 = !DILocation(line: 406, column: 34, scope: !14196)
!14206 = !DILocation(line: 408, column: 8, scope: !14196)
!14207 = !DILocation(line: 408, column: 13, scope: !14196)
!14208 = !DILocation(line: 409, column: 8, scope: !14196)
!14209 = !DILocation(line: 409, column: 13, scope: !14196)
!14210 = !DILocation(line: 411, column: 8, scope: !14196)
!14211 = !DILocation(line: 411, column: 13, scope: !14196)
!14212 = !DILocation(line: 412, column: 13, scope: !14196)
!14213 = !DILocation(line: 413, column: 1, scope: !14196)
!14214 = distinct !DISubprogram(name: "next_timeout", scope: !2247, file: !2247, line: 67, type: !14151, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14215)
!14215 = !{!14216, !14217, !14218}
!14216 = !DILocalVariable(name: "to", scope: !14214, file: !2247, line: 69, type: !2220)
!14217 = !DILocalVariable(name: "ticks_elapsed", scope: !14214, file: !2247, line: 70, type: !595)
!14218 = !DILocalVariable(name: "ret", scope: !14214, file: !2247, line: 71, type: !595)
!14219 = !DILocation(line: 69, column: 24, scope: !14214)
!14220 = !DILocation(line: 0, scope: !14214)
!14221 = !DILocation(line: 70, column: 26, scope: !14214)
!14222 = !DILocation(line: 73, column: 10, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14214, file: !2247, line: 73, column: 6)
!14224 = !DILocation(line: 73, column: 19, scope: !14223)
!14225 = !DILocation(line: 74, column: 21, scope: !14223)
!14226 = !DILocation(line: 74, column: 30, scope: !14223)
!14227 = !DILocation(line: 74, column: 28, scope: !14223)
!14228 = !DILocation(line: 74, column: 45, scope: !14223)
!14229 = !DILocation(line: 73, column: 6, scope: !14214)
!14230 = !DILocation(line: 77, column: 9, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14223, file: !2247, line: 76, column: 9)
!14232 = !DILocation(line: 0, scope: !14223)
!14233 = !DILocation(line: 81, column: 20, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14214, file: !2247, line: 81, column: 6)
!14235 = !DILocation(line: 81, column: 6, scope: !14234)
!14236 = !DILocation(line: 81, column: 32, scope: !14234)
!14237 = !DILocation(line: 85, column: 2, scope: !14214)
!14238 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !14239, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14241)
!14239 = !DISubroutineType(types: !14240)
!14240 = !{!14162, !14199, !14162}
!14241 = !{!14242, !14243}
!14242 = !DILocalVariable(name: "list", arg: 1, scope: !14238, file: !221, line: 341, type: !14199)
!14243 = !DILocalVariable(name: "node", arg: 2, scope: !14238, file: !221, line: 342, type: !14162)
!14244 = !DILocation(line: 0, scope: !14238)
!14245 = !DILocation(line: 344, column: 15, scope: !14238)
!14246 = !DILocation(line: 344, column: 9, scope: !14238)
!14247 = !DILocation(line: 344, column: 26, scope: !14238)
!14248 = !DILocation(line: 344, column: 2, scope: !14238)
!14249 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !14239, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14250)
!14250 = !{!14251, !14252}
!14251 = !DILocalVariable(name: "list", arg: 1, scope: !14249, file: !221, line: 325, type: !14199)
!14252 = !DILocalVariable(name: "node", arg: 2, scope: !14249, file: !221, line: 326, type: !14162)
!14253 = !DILocation(line: 0, scope: !14249)
!14254 = !DILocation(line: 328, column: 24, scope: !14249)
!14255 = !DILocation(line: 328, column: 15, scope: !14249)
!14256 = !DILocation(line: 328, column: 9, scope: !14249)
!14257 = !DILocation(line: 328, column: 45, scope: !14249)
!14258 = !DILocation(line: 328, column: 2, scope: !14249)
!14259 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !14260, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14262)
!14260 = !DISubroutineType(types: !14261)
!14261 = !{!14162, !14199}
!14262 = !{!14263}
!14263 = !DILocalVariable(name: "list", arg: 1, scope: !14259, file: !221, line: 294, type: !14199)
!14264 = !DILocation(line: 0, scope: !14259)
!14265 = !DILocation(line: 296, column: 9, scope: !14259)
!14266 = !DILocation(line: 296, column: 2, scope: !14259)
!14267 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !14268, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14270)
!14268 = !DISubroutineType(types: !14269)
!14269 = !{!157, !14199}
!14270 = !{!14271}
!14271 = !DILocalVariable(name: "list", arg: 1, scope: !14267, file: !221, line: 266, type: !14199)
!14272 = !DILocation(line: 0, scope: !14267)
!14273 = !DILocation(line: 268, column: 15, scope: !14267)
!14274 = !DILocation(line: 268, column: 20, scope: !14267)
!14275 = !DILocation(line: 268, column: 2, scope: !14267)
!14276 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2247, file: !2247, line: 150, type: !14277, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14279)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{!103, !2220}
!14279 = !{!14280, !14281, !14282, !14284}
!14280 = !DILocalVariable(name: "to", arg: 1, scope: !14276, file: !2247, line: 150, type: !2220)
!14281 = !DILocalVariable(name: "ret", scope: !14276, file: !2247, line: 152, type: !103)
!14282 = !DILocalVariable(name: "__i", scope: !14283, file: !2247, line: 154, type: !14045)
!14283 = distinct !DILexicalBlock(scope: !14276, file: !2247, line: 154, column: 2)
!14284 = !DILocalVariable(name: "__key", scope: !14283, file: !2247, line: 154, type: !14045)
!14285 = !DILocation(line: 0, scope: !14276)
!14286 = !DILocation(line: 0, scope: !14283)
!14287 = !DILocation(line: 0, scope: !14067, inlinedAt: !14288)
!14288 = distinct !DILocation(line: 154, column: 2, scope: !14283)
!14289 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14290)
!14290 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14288)
!14291 = !DILocation(line: 0, scope: !14076, inlinedAt: !14290)
!14292 = !DILocation(line: 155, column: 7, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !2247, line: 155, column: 7)
!14294 = distinct !DILexicalBlock(scope: !14295, file: !2247, line: 154, column: 24)
!14295 = distinct !DILexicalBlock(scope: !14283, file: !2247, line: 154, column: 2)
!14296 = !DILocation(line: 155, column: 7, scope: !14294)
!14297 = !DILocation(line: 156, column: 4, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14293, file: !2247, line: 155, column: 39)
!14299 = !DILocation(line: 158, column: 3, scope: !14298)
!14300 = !DILocation(line: 0, scope: !14135, inlinedAt: !14301)
!14301 = distinct !DILocation(line: 154, column: 2, scope: !14295)
!14302 = !DILocation(line: 0, scope: !14143, inlinedAt: !14303)
!14303 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14301)
!14304 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14303)
!14305 = !DILocation(line: 161, column: 2, scope: !14276)
!14306 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !14307, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14311)
!14307 = !DISubroutineType(types: !14308)
!14308 = !{!157, !14309}
!14309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14310, size: 32)
!14310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!14311 = !{!14312}
!14312 = !DILocalVariable(name: "node", arg: 1, scope: !14306, file: !221, line: 225, type: !14309)
!14313 = !DILocation(line: 0, scope: !14306)
!14314 = !DILocation(line: 227, column: 15, scope: !14306)
!14315 = !DILocation(line: 227, column: 20, scope: !14306)
!14316 = !DILocation(line: 227, column: 2, scope: !14306)
!14317 = distinct !DISubprogram(name: "remove_timeout", scope: !2247, file: !2247, line: 53, type: !2241, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14318)
!14318 = !{!14319}
!14319 = !DILocalVariable(name: "t", arg: 1, scope: !14317, file: !2247, line: 53, type: !2220)
!14320 = !DILocation(line: 0, scope: !14317)
!14321 = !DILocation(line: 55, column: 6, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14317, file: !2247, line: 55, column: 6)
!14323 = !DILocation(line: 55, column: 14, scope: !14322)
!14324 = !DILocation(line: 55, column: 6, scope: !14317)
!14325 = !DILocation(line: 56, column: 25, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14322, file: !2247, line: 55, column: 23)
!14327 = !DILocation(line: 56, column: 12, scope: !14326)
!14328 = !DILocation(line: 56, column: 19, scope: !14326)
!14329 = !DILocation(line: 57, column: 2, scope: !14326)
!14330 = !DILocation(line: 59, column: 23, scope: !14317)
!14331 = !DILocation(line: 59, column: 2, scope: !14317)
!14332 = !DILocation(line: 60, column: 1, scope: !14317)
!14333 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !14334, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14336)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{null, !14162}
!14336 = !{!14337, !14338, !14339}
!14337 = !DILocalVariable(name: "node", arg: 1, scope: !14333, file: !221, line: 496, type: !14162)
!14338 = !DILocalVariable(name: "prev", scope: !14333, file: !221, line: 498, type: !14174)
!14339 = !DILocalVariable(name: "next", scope: !14333, file: !221, line: 499, type: !14174)
!14340 = !DILocation(line: 0, scope: !14333)
!14341 = !DILocation(line: 498, column: 34, scope: !14333)
!14342 = !DILocation(line: 499, column: 34, scope: !14333)
!14343 = !DILocation(line: 501, column: 8, scope: !14333)
!14344 = !DILocation(line: 501, column: 13, scope: !14333)
!14345 = !DILocation(line: 502, column: 8, scope: !14333)
!14346 = !DILocation(line: 502, column: 13, scope: !14333)
!14347 = !DILocation(line: 503, column: 2, scope: !14333)
!14348 = !DILocation(line: 504, column: 1, scope: !14333)
!14349 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !14334, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14350)
!14350 = !{!14351}
!14351 = !DILocalVariable(name: "node", arg: 1, scope: !14349, file: !221, line: 211, type: !14162)
!14352 = !DILocation(line: 0, scope: !14349)
!14353 = !DILocation(line: 213, column: 8, scope: !14349)
!14354 = !DILocation(line: 213, column: 13, scope: !14349)
!14355 = !DILocation(line: 214, column: 8, scope: !14349)
!14356 = !DILocation(line: 214, column: 13, scope: !14349)
!14357 = !DILocation(line: 215, column: 1, scope: !14349)
!14358 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2247, file: !2247, line: 183, type: !14359, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14363)
!14359 = !DISubroutineType(types: !14360)
!14360 = !{!1456, !14361}
!14361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14362, size: 32)
!14362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!14363 = !{!14364, !14365, !14366, !14368}
!14364 = !DILocalVariable(name: "timeout", arg: 1, scope: !14358, file: !2247, line: 183, type: !14361)
!14365 = !DILocalVariable(name: "ticks", scope: !14358, file: !2247, line: 185, type: !1456)
!14366 = !DILocalVariable(name: "__i", scope: !14367, file: !2247, line: 187, type: !14045)
!14367 = distinct !DILexicalBlock(scope: !14358, file: !2247, line: 187, column: 2)
!14368 = !DILocalVariable(name: "__key", scope: !14367, file: !2247, line: 187, type: !14045)
!14369 = !DILocation(line: 0, scope: !14358)
!14370 = !DILocation(line: 0, scope: !14367)
!14371 = !DILocation(line: 0, scope: !14067, inlinedAt: !14372)
!14372 = distinct !DILocation(line: 187, column: 2, scope: !14367)
!14373 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14372)
!14375 = !DILocation(line: 0, scope: !14076, inlinedAt: !14374)
!14376 = !DILocation(line: 188, column: 11, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14378, file: !2247, line: 187, column: 24)
!14378 = distinct !DILexicalBlock(scope: !14367, file: !2247, line: 187, column: 2)
!14379 = !DILocation(line: 0, scope: !14135, inlinedAt: !14380)
!14380 = distinct !DILocation(line: 187, column: 2, scope: !14378)
!14381 = !DILocation(line: 0, scope: !14143, inlinedAt: !14382)
!14382 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14380)
!14383 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14382)
!14384 = !DILocation(line: 191, column: 2, scope: !14358)
!14385 = distinct !DISubprogram(name: "timeout_rem", scope: !2247, file: !2247, line: 165, type: !14359, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14386)
!14386 = !{!14387, !14388, !14389}
!14387 = !DILocalVariable(name: "timeout", arg: 1, scope: !14385, file: !2247, line: 165, type: !14361)
!14388 = !DILocalVariable(name: "ticks", scope: !14385, file: !2247, line: 167, type: !1456)
!14389 = !DILocalVariable(name: "t", scope: !14390, file: !2247, line: 173, type: !2220)
!14390 = distinct !DILexicalBlock(scope: !14385, file: !2247, line: 173, column: 2)
!14391 = !DILocation(line: 0, scope: !14385)
!14392 = !DILocation(line: 169, column: 6, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14385, file: !2247, line: 169, column: 6)
!14394 = !DILocation(line: 169, column: 6, scope: !14385)
!14395 = !DILocation(line: 173, column: 28, scope: !14390)
!14396 = !DILocation(line: 0, scope: !14390)
!14397 = !DILocation(line: 173, column: 39, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14390, file: !2247, line: 173, column: 2)
!14399 = !DILocation(line: 173, column: 2, scope: !14390)
!14400 = !DILocation(line: 174, column: 15, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14398, file: !2247, line: 173, column: 61)
!14402 = !DILocation(line: 174, column: 9, scope: !14401)
!14403 = !DILocation(line: 175, column: 15, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14401, file: !2247, line: 175, column: 7)
!14405 = !DILocation(line: 175, column: 7, scope: !14401)
!14406 = !DILocation(line: 173, column: 52, scope: !14398)
!14407 = distinct !{!14407, !14399, !14408}
!14408 = !DILocation(line: 178, column: 2, scope: !14390)
!14409 = !DILocation(line: 180, column: 17, scope: !14385)
!14410 = !DILocation(line: 180, column: 15, scope: !14385)
!14411 = !DILocation(line: 180, column: 2, scope: !14385)
!14412 = !DILocation(line: 181, column: 1, scope: !14385)
!14413 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11723, file: !11723, line: 35, type: !14414, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14416)
!14414 = !DISubroutineType(types: !14415)
!14415 = !{!157, !14361}
!14416 = !{!14417}
!14417 = !DILocalVariable(name: "to", arg: 1, scope: !14413, file: !11723, line: 35, type: !14361)
!14418 = !DILocation(line: 0, scope: !14413)
!14419 = !DILocation(line: 37, column: 35, scope: !14413)
!14420 = !DILocation(line: 37, column: 10, scope: !14413)
!14421 = !DILocation(line: 37, column: 9, scope: !14413)
!14422 = !DILocation(line: 37, column: 2, scope: !14413)
!14423 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2247, file: !2247, line: 194, type: !14359, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14424)
!14424 = !{!14425, !14426, !14427, !14429}
!14425 = !DILocalVariable(name: "timeout", arg: 1, scope: !14423, file: !2247, line: 194, type: !14361)
!14426 = !DILocalVariable(name: "ticks", scope: !14423, file: !2247, line: 196, type: !1456)
!14427 = !DILocalVariable(name: "__i", scope: !14428, file: !2247, line: 198, type: !14045)
!14428 = distinct !DILexicalBlock(scope: !14423, file: !2247, line: 198, column: 2)
!14429 = !DILocalVariable(name: "__key", scope: !14428, file: !2247, line: 198, type: !14045)
!14430 = !DILocation(line: 0, scope: !14423)
!14431 = !DILocation(line: 0, scope: !14428)
!14432 = !DILocation(line: 0, scope: !14067, inlinedAt: !14433)
!14433 = distinct !DILocation(line: 198, column: 2, scope: !14428)
!14434 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14435)
!14435 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14433)
!14436 = !DILocation(line: 0, scope: !14076, inlinedAt: !14435)
!14437 = !DILocation(line: 199, column: 11, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14439, file: !2247, line: 198, column: 24)
!14439 = distinct !DILexicalBlock(scope: !14428, file: !2247, line: 198, column: 2)
!14440 = !DILocation(line: 199, column: 23, scope: !14438)
!14441 = !DILocation(line: 0, scope: !14135, inlinedAt: !14442)
!14442 = distinct !DILocation(line: 198, column: 2, scope: !14439)
!14443 = !DILocation(line: 0, scope: !14143, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14442)
!14445 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14444)
!14446 = !DILocation(line: 199, column: 21, scope: !14438)
!14447 = !DILocation(line: 202, column: 2, scope: !14423)
!14448 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2247, file: !2247, line: 205, type: !14151, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14449)
!14449 = !{!14450, !14451, !14453}
!14450 = !DILocalVariable(name: "ret", scope: !14448, file: !2247, line: 207, type: !595)
!14451 = !DILocalVariable(name: "__i", scope: !14452, file: !2247, line: 209, type: !14045)
!14452 = distinct !DILexicalBlock(scope: !14448, file: !2247, line: 209, column: 2)
!14453 = !DILocalVariable(name: "__key", scope: !14452, file: !2247, line: 209, type: !14045)
!14454 = !DILocation(line: 0, scope: !14448)
!14455 = !DILocation(line: 0, scope: !14452)
!14456 = !DILocation(line: 0, scope: !14067, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 209, column: 2, scope: !14452)
!14458 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14459)
!14459 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14457)
!14460 = !DILocation(line: 0, scope: !14076, inlinedAt: !14459)
!14461 = !DILocation(line: 210, column: 9, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14463, file: !2247, line: 209, column: 24)
!14463 = distinct !DILexicalBlock(scope: !14452, file: !2247, line: 209, column: 2)
!14464 = !DILocation(line: 0, scope: !14135, inlinedAt: !14465)
!14465 = distinct !DILocation(line: 209, column: 2, scope: !14463)
!14466 = !DILocation(line: 0, scope: !14143, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14465)
!14468 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14467)
!14469 = !DILocation(line: 212, column: 2, scope: !14448)
!14470 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2247, file: !2247, line: 215, type: !8751, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14471)
!14471 = !{!14472, !14473, !14474, !14476, !14477, !14480, !14481}
!14472 = !DILocalVariable(name: "ticks", arg: 1, scope: !14470, file: !2247, line: 215, type: !595)
!14473 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14470, file: !2247, line: 215, type: !157)
!14474 = !DILocalVariable(name: "__i", scope: !14475, file: !2247, line: 217, type: !14045)
!14475 = distinct !DILexicalBlock(scope: !14470, file: !2247, line: 217, column: 2)
!14476 = !DILocalVariable(name: "__key", scope: !14475, file: !2247, line: 217, type: !14045)
!14477 = !DILocalVariable(name: "next_to", scope: !14478, file: !2247, line: 218, type: !103)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !2247, line: 217, column: 24)
!14479 = distinct !DILexicalBlock(scope: !14475, file: !2247, line: 217, column: 2)
!14480 = !DILocalVariable(name: "sooner", scope: !14478, file: !2247, line: 219, type: !157)
!14481 = !DILocalVariable(name: "imminent", scope: !14478, file: !2247, line: 221, type: !157)
!14482 = !DILocation(line: 0, scope: !14470)
!14483 = !DILocation(line: 0, scope: !14475)
!14484 = !DILocation(line: 0, scope: !14067, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 217, column: 2, scope: !14475)
!14486 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14487)
!14487 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14485)
!14488 = !DILocation(line: 0, scope: !14076, inlinedAt: !14487)
!14489 = !DILocation(line: 218, column: 17, scope: !14478)
!14490 = !DILocation(line: 0, scope: !14478)
!14491 = !DILocation(line: 221, column: 27, scope: !14478)
!14492 = !DILocation(line: 233, column: 17, scope: !14493)
!14493 = distinct !DILexicalBlock(scope: !14478, file: !2247, line: 233, column: 7)
!14494 = !DILocation(line: 234, column: 26, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14493, file: !2247, line: 233, column: 56)
!14496 = !DILocation(line: 234, column: 4, scope: !14495)
!14497 = !DILocation(line: 235, column: 3, scope: !14495)
!14498 = !DILocation(line: 0, scope: !14135, inlinedAt: !14499)
!14499 = distinct !DILocation(line: 217, column: 2, scope: !14479)
!14500 = !DILocation(line: 0, scope: !14143, inlinedAt: !14501)
!14501 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14499)
!14502 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14501)
!14503 = !DILocation(line: 237, column: 1, scope: !14470)
!14504 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2247, file: !2247, line: 239, type: !14505, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14507)
!14505 = !DISubroutineType(types: !14506)
!14506 = !{null, !595}
!14507 = !{!14508, !14509, !14510, !14512}
!14508 = !DILocalVariable(name: "ticks", arg: 1, scope: !14504, file: !2247, line: 239, type: !595)
!14509 = !DILocalVariable(name: "key", scope: !14504, file: !2247, line: 245, type: !14045)
!14510 = !DILocalVariable(name: "t", scope: !14511, file: !2247, line: 262, type: !2220)
!14511 = distinct !DILexicalBlock(scope: !14504, file: !2247, line: 261, column: 67)
!14512 = !DILocalVariable(name: "dt", scope: !14511, file: !2247, line: 263, type: !103)
!14513 = !DILocation(line: 0, scope: !14504)
!14514 = !DILocation(line: 242, column: 2, scope: !14504)
!14515 = !DILocation(line: 0, scope: !14067, inlinedAt: !14516)
!14516 = distinct !DILocation(line: 245, column: 25, scope: !14504)
!14517 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14518)
!14518 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14516)
!14519 = !DILocation(line: 0, scope: !14076, inlinedAt: !14518)
!14520 = !DILocation(line: 261, column: 9, scope: !14504)
!14521 = !DILocation(line: 261, column: 17, scope: !14504)
!14522 = !DILocation(line: 261, column: 25, scope: !14504)
!14523 = !DILocation(line: 261, column: 37, scope: !14504)
!14524 = !DILocation(line: 261, column: 47, scope: !14504)
!14525 = !DILocation(line: 261, column: 44, scope: !14504)
!14526 = !DILocation(line: 261, column: 2, scope: !14504)
!14527 = !DILocation(line: 0, scope: !14511)
!14528 = !DILocation(line: 263, column: 12, scope: !14511)
!14529 = !DILocation(line: 265, column: 16, scope: !14511)
!14530 = !DILocation(line: 265, column: 13, scope: !14511)
!14531 = !DILocation(line: 266, column: 13, scope: !14511)
!14532 = !DILocation(line: 267, column: 3, scope: !14511)
!14533 = !DILocation(line: 0, scope: !14135, inlinedAt: !14534)
!14534 = distinct !DILocation(line: 269, column: 3, scope: !14511)
!14535 = !DILocation(line: 0, scope: !14143, inlinedAt: !14536)
!14536 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14534)
!14537 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14536)
!14538 = !DILocation(line: 270, column: 6, scope: !14511)
!14539 = !DILocation(line: 270, column: 3, scope: !14511)
!14540 = !DILocation(line: 0, scope: !14067, inlinedAt: !14541)
!14541 = distinct !DILocation(line: 271, column: 9, scope: !14511)
!14542 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14541)
!14544 = !DILocation(line: 0, scope: !14076, inlinedAt: !14543)
!14545 = !DILocation(line: 272, column: 22, scope: !14511)
!14546 = distinct !{!14546, !14526, !14547}
!14547 = !DILocation(line: 273, column: 2, scope: !14504)
!14548 = !DILocation(line: 276, column: 19, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !2247, line: 275, column: 23)
!14550 = distinct !DILexicalBlock(scope: !14504, file: !2247, line: 275, column: 6)
!14551 = !DILocation(line: 277, column: 2, scope: !14549)
!14552 = !DILocation(line: 279, column: 15, scope: !14504)
!14553 = !DILocation(line: 279, column: 12, scope: !14504)
!14554 = !DILocation(line: 280, column: 21, scope: !14504)
!14555 = !DILocation(line: 282, column: 24, scope: !14504)
!14556 = !DILocation(line: 282, column: 2, scope: !14504)
!14557 = !DILocation(line: 0, scope: !14135, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 284, column: 2, scope: !14504)
!14559 = !DILocation(line: 0, scope: !14143, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14558)
!14561 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14560)
!14562 = !DILocation(line: 285, column: 1, scope: !14504)
!14563 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2247, file: !2247, line: 287, type: !14564, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14566)
!14564 = !DISubroutineType(types: !14565)
!14565 = !{!280}
!14566 = !{!14567, !14568, !14570}
!14567 = !DILocalVariable(name: "t", scope: !14563, file: !2247, line: 289, type: !1308)
!14568 = !DILocalVariable(name: "__i", scope: !14569, file: !2247, line: 291, type: !14045)
!14569 = distinct !DILexicalBlock(scope: !14563, file: !2247, line: 291, column: 2)
!14570 = !DILocalVariable(name: "__key", scope: !14569, file: !2247, line: 291, type: !14045)
!14571 = !DILocation(line: 0, scope: !14563)
!14572 = !DILocation(line: 0, scope: !14569)
!14573 = !DILocation(line: 0, scope: !14067, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 291, column: 2, scope: !14569)
!14575 = !DILocation(line: 55, column: 2, scope: !14076, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 145, column: 10, scope: !14067, inlinedAt: !14574)
!14577 = !DILocation(line: 0, scope: !14076, inlinedAt: !14576)
!14578 = !DILocation(line: 292, column: 7, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !2247, line: 291, column: 24)
!14580 = distinct !DILexicalBlock(scope: !14569, file: !2247, line: 291, column: 2)
!14581 = !DILocation(line: 292, column: 19, scope: !14579)
!14582 = !DILocation(line: 0, scope: !14135, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 291, column: 2, scope: !14580)
!14584 = !DILocation(line: 0, scope: !14143, inlinedAt: !14585)
!14585 = distinct !DILocation(line: 215, column: 2, scope: !14135, inlinedAt: !14583)
!14586 = !DILocation(line: 95, column: 2, scope: !14143, inlinedAt: !14585)
!14587 = !DILocation(line: 292, column: 17, scope: !14579)
!14588 = !DILocation(line: 294, column: 2, scope: !14563)
!14589 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2247, file: !2247, line: 297, type: !4878, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14590 = !DILocation(line: 300, column: 19, scope: !14589)
!14591 = !DILocation(line: 300, column: 9, scope: !14589)
!14592 = !DILocation(line: 300, column: 2, scope: !14589)
!14593 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2247, file: !2247, line: 306, type: !14564, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14594 = !DILocation(line: 308, column: 9, scope: !14593)
!14595 = !DILocation(line: 308, column: 2, scope: !14593)
!14596 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2247, file: !2247, line: 319, type: !4888, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14597)
!14597 = !{!14598, !14599, !14600, !14601}
!14598 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14596, file: !2247, line: 319, type: !121)
!14599 = !DILocalVariable(name: "start_cycles", scope: !14596, file: !2247, line: 328, type: !121)
!14600 = !DILocalVariable(name: "cycles_to_wait", scope: !14596, file: !2247, line: 331, type: !121)
!14601 = !DILocalVariable(name: "current_cycles", scope: !14602, file: !2247, line: 338, type: !121)
!14602 = distinct !DILexicalBlock(scope: !14603, file: !2247, line: 337, column: 11)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !2247, line: 337, column: 2)
!14604 = distinct !DILexicalBlock(scope: !14596, file: !2247, line: 337, column: 2)
!14605 = !DILocation(line: 0, scope: !14596)
!14606 = !DILocation(line: 322, column: 19, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14596, file: !2247, line: 322, column: 6)
!14608 = !DILocation(line: 322, column: 6, scope: !14596)
!14609 = !DILocation(line: 328, column: 26, scope: !14596)
!14610 = !DILocation(line: 333, column: 43, scope: !14596)
!14611 = !DILocation(line: 337, column: 2, scope: !14596)
!14612 = !DILocation(line: 338, column: 29, scope: !14602)
!14613 = !DILocation(line: 0, scope: !14602)
!14614 = !DILocation(line: 341, column: 23, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14602, file: !2247, line: 341, column: 7)
!14616 = !DILocation(line: 341, column: 39, scope: !14615)
!14617 = !DILocation(line: 349, column: 1, scope: !14596)
!14618 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !4878, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14619 = !DILocation(line: 1677, column: 9, scope: !14618)
!14620 = !DILocation(line: 1677, column: 2, scope: !14618)
!14621 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14622, file: !14622, line: 24, type: !4878, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14622 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14623 = !DILocation(line: 26, column: 9, scope: !14621)
!14624 = !DILocation(line: 26, column: 2, scope: !14621)
!14625 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2247, file: !2247, line: 364, type: !14626, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14628)
!14626 = !DISubroutineType(types: !14627)
!14627 = !{!1308, !14035}
!14628 = !{!14629, !14630}
!14629 = !DILocalVariable(name: "timeout", arg: 1, scope: !14625, file: !2247, line: 364, type: !14035)
!14630 = !DILocalVariable(name: "dt", scope: !14625, file: !2247, line: 366, type: !1456)
!14631 = !DILocation(line: 0, scope: !14625)
!14632 = !DILocation(line: 368, column: 6, scope: !14625)
!14633 = !DILocation(line: 371, column: 10, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !2247, line: 370, column: 47)
!14635 = distinct !DILexicalBlock(scope: !14636, file: !2247, line: 370, column: 13)
!14636 = distinct !DILexicalBlock(scope: !14625, file: !2247, line: 368, column: 6)
!14637 = !DILocation(line: 371, column: 3, scope: !14634)
!14638 = !DILocation(line: 376, column: 58, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14640, file: !2247, line: 376, column: 7)
!14640 = distinct !DILexicalBlock(scope: !14635, file: !2247, line: 372, column: 9)
!14641 = !DILocation(line: 376, column: 7, scope: !14640)
!14642 = !DILocation(line: 376, column: 43, scope: !14639)
!14643 = !DILocation(line: 377, column: 4, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14639, file: !2247, line: 376, column: 64)
!14645 = !DILocation(line: 379, column: 10, scope: !14640)
!14646 = !DILocation(line: 379, column: 33, scope: !14640)
!14647 = !DILocation(line: 379, column: 31, scope: !14640)
!14648 = !DILocation(line: 379, column: 3, scope: !14640)
!14649 = !DILocation(line: 0, scope: !14636)
!14650 = !DILocation(line: 381, column: 1, scope: !14625)
!14651 = distinct !DISubprogram(name: "boot_banner", scope: !14652, file: !14652, line: 26, type: !2821, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !322)
!14652 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14653 = !DILocation(line: 34, column: 2, scope: !14651)
!14654 = !DILocation(line: 36, column: 1, scope: !14651)
